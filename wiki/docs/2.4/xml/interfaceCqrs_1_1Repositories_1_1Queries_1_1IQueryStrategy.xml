<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="interfaceCqrs_1_1Repositories_1_1Queries_1_1IQueryStrategy" kind="interface" language="C#" prot="public">
    <compoundname>Cqrs::Repositories::Queries::IQueryStrategy</compoundname>
    <derivedcompoundref refid="classCqrs_1_1Azure_1_1BlobStorage_1_1Test_1_1Integration_1_1TestQueryStrategy" prot="public" virt="non-virtual">Cqrs.Azure.BlobStorage.Test.Integration.TestQueryStrategy</derivedcompoundref>
    <derivedcompoundref refid="classCqrs_1_1Repositories_1_1Queries_1_1QueryStrategy" prot="public" virt="non-virtual">Cqrs.Repositories.Queries.QueryStrategy</derivedcompoundref>
      <sectiondef kind="property">
      <memberdef kind="property" id="interfaceCqrs_1_1Repositories_1_1Queries_1_1IQueryStrategy_ab36e17425ab9940bfa4f104e7f321b90_1ab36e17425ab9940bfa4f104e7f321b90" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type><ref refid="interfaceCqrs_1_1Repositories_1_1Queries_1_1IQueryPredicate" kindref="compound">IQueryPredicate</ref></type>
        <definition>IQueryPredicate Cqrs.Repositories.Queries.IQueryStrategy.QueryPredicate</definition>
        <argsstring></argsstring>
        <name>QueryPredicate</name>
        <briefdescription>
<para>The predicate that will be evaluated. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/a99f043f4d1af837/Framework/Cqrs/Repositories/Queries/IQueryStrategy.cs" line="19" column="1" bodyfile="/opt/buildAgent/work/a99f043f4d1af837/Framework/Cqrs/Repositories/Queries/IQueryStrategy.cs" bodystart="19" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A specification for a query to execute. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2514">
        <label>Cqrs.Repositories.Queries.QueryStrategy</label>
        <link refid="classCqrs_1_1Repositories_1_1Queries_1_1QueryStrategy"/>
        <childnode refid="2512" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2512">
        <label>Cqrs.Repositories.Queries.IQueryStrategy</label>
        <link refid="interfaceCqrs_1_1Repositories_1_1Queries_1_1IQueryStrategy"/>
      </node>
      <node id="2513">
        <label>Cqrs.Azure.BlobStorage.Test.Integration.TestQueryStrategy</label>
        <link refid="classCqrs_1_1Azure_1_1BlobStorage_1_1Test_1_1Integration_1_1TestQueryStrategy"/>
        <childnode refid="2512" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="/opt/buildAgent/work/a99f043f4d1af837/Framework/Cqrs/Repositories/Queries/IQueryStrategy.cs" line="15" column="1" bodyfile="/opt/buildAgent/work/a99f043f4d1af837/Framework/Cqrs/Repositories/Queries/IQueryStrategy.cs" bodystart="14" bodyend="20"/>
    <listofallmembers>
      <member refid="interfaceCqrs_1_1Repositories_1_1Queries_1_1IQueryStrategy_ab36e17425ab9940bfa4f104e7f321b90_1ab36e17425ab9940bfa4f104e7f321b90" prot="public" virt="non-virtual"><scope>Cqrs::Repositories::Queries::IQueryStrategy</scope><name>QueryPredicate</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
