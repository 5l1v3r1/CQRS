<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="interfaceCqrs_1_1Configuration_1_1IConfigurationManager" kind="interface" language="C#" prot="public">
    <compoundname>Cqrs::Configuration::IConfigurationManager</compoundname>
    <derivedcompoundref refid="classCqrs_1_1Configuration_1_1ConfigurationManager" prot="public" virt="non-virtual">Cqrs.Configuration.ConfigurationManager</derivedcompoundref>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="interfaceCqrs_1_1Configuration_1_1IConfigurationManager_a9f7b7d4d8c26a0589f01c8a7f69901ef_1a9f7b7d4d8c26a0589f01c8a7f69901ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>string Cqrs.Configuration.IConfigurationManager.GetSetting</definition>
        <argsstring>(string key)</argsstring>
        <name>GetSetting</name>
        <reimplementedby refid="classCqrs_1_1Azure_1_1ConfigurationManager_1_1CloudConfigurationManager_a48228b7e2204a2449426de32cd6ecc65_1a48228b7e2204a2449426de32cd6ecc65">GetSetting</reimplementedby>
        <reimplementedby refid="classCqrs_1_1Configuration_1_1ConfigurationManager_ac3e31af665b95b781fee23f577170a63_1ac3e31af665b95b781fee23f577170a63">GetSetting</reimplementedby>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Read the setting named <emphasis>key</emphasis> . </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The key (or name) of the setting to read.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/a99f043f4d1af837/Framework/Cqrs/Configuration/IConfigurationManager.cs" line="20" column="1"/>
      </memberdef>
      <memberdef kind="function" id="interfaceCqrs_1_1Configuration_1_1IConfigurationManager_ac4478405e3d9e1c97d14953aea4e695b_1ac4478405e3d9e1c97d14953aea4e695b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Cqrs.Configuration.IConfigurationManager.TryGetSetting</definition>
        <argsstring>(string key, out string value)</argsstring>
        <name>TryGetSetting</name>
        <reimplementedby refid="classCqrs_1_1Configuration_1_1ConfigurationManager_ad87af2a011af065d6d3e0d2ff01c7f6e_1ad87af2a011af065d6d3e0d2ff01c7f6e">TryGetSetting</reimplementedby>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>out string</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Read the setting named <emphasis>key</emphasis> . </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The key (or name) of the setting to read.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>When this method returns, the value associated with the specified key, if the key is found; otherwise, the default value for the type of the value parameter. This parameter is passed uninitialized.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the an element with the specified key exists; otherwise, false.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/a99f043f4d1af837/Framework/Cqrs/Configuration/IConfigurationManager.cs" line="28" column="1"/>
      </memberdef>
      <memberdef kind="function" id="interfaceCqrs_1_1Configuration_1_1IConfigurationManager_a8389181330999fcb8e30af4dbb56d35e_1a8389181330999fcb8e30af4dbb56d35e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Cqrs.Configuration.IConfigurationManager.TryGetSetting</definition>
        <argsstring>(string key, out bool value)</argsstring>
        <name>TryGetSetting</name>
        <reimplementedby refid="classCqrs_1_1Configuration_1_1ConfigurationManager_a40810d0b9fd2f3d1c4a270681e908c84_1a40810d0b9fd2f3d1c4a270681e908c84">TryGetSetting</reimplementedby>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>out bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Read the setting named <emphasis>key</emphasis> . </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The key (or name) of the setting to read.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>When this method returns, the value associated with the specified key, if the key is found; otherwise, the default value for the type of the value parameter. This parameter is passed uninitialized.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the an element with the specified key exists; otherwise, false.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/a99f043f4d1af837/Framework/Cqrs/Configuration/IConfigurationManager.cs" line="36" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Provides access to configuration settings. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1136">
        <label>Cqrs.Configuration.IConfigurationManager</label>
        <link refid="interfaceCqrs_1_1Configuration_1_1IConfigurationManager"/>
      </node>
      <node id="1138">
        <label>Cqrs.Azure.ConfigurationManager.CloudConfigurationManager</label>
        <link refid="classCqrs_1_1Azure_1_1ConfigurationManager_1_1CloudConfigurationManager"/>
        <childnode refid="1137" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1137">
        <label>Cqrs.Configuration.ConfigurationManager</label>
        <link refid="classCqrs_1_1Configuration_1_1ConfigurationManager"/>
        <childnode refid="1136" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="/opt/buildAgent/work/a99f043f4d1af837/Framework/Cqrs/Configuration/IConfigurationManager.cs" line="15" column="1" bodyfile="/opt/buildAgent/work/a99f043f4d1af837/Framework/Cqrs/Configuration/IConfigurationManager.cs" bodystart="14" bodyend="37"/>
    <listofallmembers>
      <member refid="interfaceCqrs_1_1Configuration_1_1IConfigurationManager_a9f7b7d4d8c26a0589f01c8a7f69901ef_1a9f7b7d4d8c26a0589f01c8a7f69901ef" prot="public" virt="non-virtual"><scope>Cqrs::Configuration::IConfigurationManager</scope><name>GetSetting</name></member>
      <member refid="interfaceCqrs_1_1Configuration_1_1IConfigurationManager_ac4478405e3d9e1c97d14953aea4e695b_1ac4478405e3d9e1c97d14953aea4e695b" prot="public" virt="non-virtual"><scope>Cqrs::Configuration::IConfigurationManager</scope><name>TryGetSetting</name></member>
      <member refid="interfaceCqrs_1_1Configuration_1_1IConfigurationManager_a8389181330999fcb8e30af4dbb56d35e_1a8389181330999fcb8e30af4dbb56d35e" prot="public" virt="non-virtual"><scope>Cqrs::Configuration::IConfigurationManager</scope><name>TryGetSetting</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
