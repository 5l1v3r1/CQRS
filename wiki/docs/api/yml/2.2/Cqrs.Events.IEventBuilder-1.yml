### YamlMime:ManagedReference
items:
- uid: Cqrs.Events.IEventBuilder`1
  commentId: T:Cqrs.Events.IEventBuilder`1
  id: IEventBuilder`1
  parent: Cqrs.Events
  children:
  - Cqrs.Events.IEventBuilder`1.CreateFrameworkEvent(Cqrs.Events.IEvent{`0})
  - Cqrs.Events.IEventBuilder`1.CreateFrameworkEvent(System.String,Cqrs.Events.IEvent{`0})
  langs:
  - csharp
  - vb
  name: IEventBuilder<TAuthenticationToken>
  nameWithType: IEventBuilder<TAuthenticationToken>
  fullName: Cqrs.Events.IEventBuilder<TAuthenticationToken>
  type: Interface
  source:
    remote:
      path: Framework/Cqrs/Events/IEventBuilder.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: IEventBuilder
    path: Framework/Cqrs/Events/IEventBuilder.cs
    startLine: 16
  assemblies:
  - Cqrs
  namespace: Cqrs.Events
  summary: "\nBuilds <xref href=\"Cqrs.Events.EventData\" data-throw-if-not-resolved=\"false\"></xref> from various input formats.\n"
  example: []
  syntax:
    content: public interface IEventBuilder<TAuthenticationToken>
    typeParameters:
    - id: TAuthenticationToken
      description: The <xref href="System.Type" data-throw-if-not-resolved="false"></xref> of the authentication token.
    content.vb: Public Interface IEventBuilder(Of TAuthenticationToken)
  nameWithType.vb: IEventBuilder(Of TAuthenticationToken)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: Cqrs.Events.IEventBuilder(Of TAuthenticationToken)
  name.vb: IEventBuilder(Of TAuthenticationToken)
- uid: Cqrs.Events.IEventBuilder`1.CreateFrameworkEvent(Cqrs.Events.IEvent{`0})
  commentId: M:Cqrs.Events.IEventBuilder`1.CreateFrameworkEvent(Cqrs.Events.IEvent{`0})
  id: CreateFrameworkEvent(Cqrs.Events.IEvent{`0})
  parent: Cqrs.Events.IEventBuilder`1
  langs:
  - csharp
  - vb
  name: CreateFrameworkEvent(IEvent<TAuthenticationToken>)
  nameWithType: IEventBuilder<TAuthenticationToken>.CreateFrameworkEvent(IEvent<TAuthenticationToken>)
  fullName: Cqrs.Events.IEventBuilder<TAuthenticationToken>.CreateFrameworkEvent(Cqrs.Events.IEvent<TAuthenticationToken>)
  type: Method
  source:
    remote:
      path: Framework/Cqrs/Events/IEventBuilder.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: CreateFrameworkEvent
    path: Framework/Cqrs/Events/IEventBuilder.cs
    startLine: 22
  assemblies:
  - Cqrs
  namespace: Cqrs.Events
  summary: "\nCreate an <xref href=\"Cqrs.Events.EventData\" data-throw-if-not-resolved=\"false\"></xref> with the provided <span class=\"paramref\">eventData</span>.\n"
  example: []
  syntax:
    content: EventData CreateFrameworkEvent(IEvent<TAuthenticationToken> eventData)
    parameters:
    - id: eventData
      type: Cqrs.Events.IEvent{{TAuthenticationToken}}
      description: The <xref href="Cqrs.Events.IEvent%601" data-throw-if-not-resolved="false"></xref> to add to the <xref href="Cqrs.Events.EventData" data-throw-if-not-resolved="false"></xref>.
    return:
      type: Cqrs.Events.EventData
    content.vb: Function CreateFrameworkEvent(eventData As IEvent(Of TAuthenticationToken)) As EventData
  overload: Cqrs.Events.IEventBuilder`1.CreateFrameworkEvent*
  nameWithType.vb: IEventBuilder(Of TAuthenticationToken).CreateFrameworkEvent(IEvent(Of TAuthenticationToken))
  fullName.vb: Cqrs.Events.IEventBuilder(Of TAuthenticationToken).CreateFrameworkEvent(Cqrs.Events.IEvent(Of TAuthenticationToken))
  name.vb: CreateFrameworkEvent(IEvent(Of TAuthenticationToken))
- uid: Cqrs.Events.IEventBuilder`1.CreateFrameworkEvent(System.String,Cqrs.Events.IEvent{`0})
  commentId: M:Cqrs.Events.IEventBuilder`1.CreateFrameworkEvent(System.String,Cqrs.Events.IEvent{`0})
  id: CreateFrameworkEvent(System.String,Cqrs.Events.IEvent{`0})
  parent: Cqrs.Events.IEventBuilder`1
  langs:
  - csharp
  - vb
  name: CreateFrameworkEvent(String, IEvent<TAuthenticationToken>)
  nameWithType: IEventBuilder<TAuthenticationToken>.CreateFrameworkEvent(String, IEvent<TAuthenticationToken>)
  fullName: Cqrs.Events.IEventBuilder<TAuthenticationToken>.CreateFrameworkEvent(System.String, Cqrs.Events.IEvent<TAuthenticationToken>)
  type: Method
  source:
    remote:
      path: Framework/Cqrs/Events/IEventBuilder.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: CreateFrameworkEvent
    path: Framework/Cqrs/Events/IEventBuilder.cs
    startLine: 29
  assemblies:
  - Cqrs
  namespace: Cqrs.Events
  summary: "\nCreate an <xref href=\"Cqrs.Events.EventData\" data-throw-if-not-resolved=\"false\"></xref> with the provided <span class=\"paramref\">eventData</span>.\n"
  example: []
  syntax:
    content: EventData CreateFrameworkEvent(string type, IEvent<TAuthenticationToken> eventData)
    parameters:
    - id: type
      type: System.String
      description: The name of the <xref href="System.Type" data-throw-if-not-resolved="false"></xref> of the target object the serialised data is.
    - id: eventData
      type: Cqrs.Events.IEvent{{TAuthenticationToken}}
      description: The <xref href="Cqrs.Events.IEvent%601" data-throw-if-not-resolved="false"></xref> to add to the <xref href="Cqrs.Events.EventData" data-throw-if-not-resolved="false"></xref>.
    return:
      type: Cqrs.Events.EventData
    content.vb: Function CreateFrameworkEvent(type As String, eventData As IEvent(Of TAuthenticationToken)) As EventData
  overload: Cqrs.Events.IEventBuilder`1.CreateFrameworkEvent*
  nameWithType.vb: IEventBuilder(Of TAuthenticationToken).CreateFrameworkEvent(String, IEvent(Of TAuthenticationToken))
  fullName.vb: Cqrs.Events.IEventBuilder(Of TAuthenticationToken).CreateFrameworkEvent(System.String, Cqrs.Events.IEvent(Of TAuthenticationToken))
  name.vb: CreateFrameworkEvent(String, IEvent(Of TAuthenticationToken))
references:
- uid: Cqrs.Events.EventData
  commentId: T:Cqrs.Events.EventData
  parent: Cqrs.Events
  isExternal: false
  name: EventData
  nameWithType: EventData
  fullName: Cqrs.Events.EventData
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Cqrs.Events
  commentId: N:Cqrs.Events
  isExternal: false
  name: Cqrs.Events
  nameWithType: Cqrs.Events
  fullName: Cqrs.Events
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Cqrs.Events.IEvent`1
  commentId: T:Cqrs.Events.IEvent`1
  isExternal: false
  name: IEvent<TAuthenticationToken>
  nameWithType: IEvent<TAuthenticationToken>
  fullName: Cqrs.Events.IEvent<TAuthenticationToken>
  nameWithType.vb: IEvent(Of TAuthenticationToken)
  fullName.vb: Cqrs.Events.IEvent(Of TAuthenticationToken)
  name.vb: IEvent(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Events.IEventBuilder`1.CreateFrameworkEvent*
  commentId: Overload:Cqrs.Events.IEventBuilder`1.CreateFrameworkEvent
  isExternal: false
  name: CreateFrameworkEvent
  nameWithType: IEventBuilder<TAuthenticationToken>.CreateFrameworkEvent
  fullName: Cqrs.Events.IEventBuilder<TAuthenticationToken>.CreateFrameworkEvent
  nameWithType.vb: IEventBuilder(Of TAuthenticationToken).CreateFrameworkEvent
  fullName.vb: Cqrs.Events.IEventBuilder(Of TAuthenticationToken).CreateFrameworkEvent
- uid: Cqrs.Events.IEvent{{TAuthenticationToken}}
  commentId: T:Cqrs.Events.IEvent{`0}
  parent: Cqrs.Events
  definition: Cqrs.Events.IEvent`1
  name: IEvent<TAuthenticationToken>
  nameWithType: IEvent<TAuthenticationToken>
  fullName: Cqrs.Events.IEvent<TAuthenticationToken>
  nameWithType.vb: IEvent(Of TAuthenticationToken)
  fullName.vb: Cqrs.Events.IEvent(Of TAuthenticationToken)
  name.vb: IEvent(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
