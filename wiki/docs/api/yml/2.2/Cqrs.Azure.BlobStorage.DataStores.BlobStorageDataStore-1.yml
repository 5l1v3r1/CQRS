### YamlMime:ManagedReference
items:
- uid: Cqrs.Azure.BlobStorage.DataStores.BlobStorageDataStore`1
  commentId: T:Cqrs.Azure.BlobStorage.DataStores.BlobStorageDataStore`1
  id: BlobStorageDataStore`1
  parent: Cqrs.Azure.BlobStorage.DataStores
  children:
  - Cqrs.Azure.BlobStorage.DataStores.BlobStorageDataStore`1.#ctor(cdmdotnet.Logging.ILogger,Cqrs.Azure.BlobStorage.DataStores.IBlobStorageDataStoreConnectionStringFactory)
  - Cqrs.Azure.BlobStorage.DataStores.BlobStorageDataStore`1.GetByFolder
  - Cqrs.Azure.BlobStorage.DataStores.BlobStorageDataStore`1.Remove(`0)
  langs:
  - csharp
  - vb
  name: BlobStorageDataStore<TData>
  nameWithType: BlobStorageDataStore<TData>
  fullName: Cqrs.Azure.BlobStorage.DataStores.BlobStorageDataStore<TData>
  type: Class
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.BlobStorage/DataStores/BlobStorageDataStore.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: BlobStorageDataStore
    path: Framework/Azure/Cqrs.Azure.BlobStorage/DataStores/BlobStorageDataStore.cs
    startLine: 21
  assemblies:
  - Cqrs.Azure.BlobStorage
  namespace: Cqrs.Azure.BlobStorage.DataStores
  summary: "\nA <xref href=\"Cqrs.DataStores.IDataStore%601\" data-throw-if-not-resolved=\"false\"></xref> that uses Azure Blob Storage for storage.\n"
  example: []
  syntax:
    content: 'public class BlobStorageDataStore<TData> : BlobStorageStore<TData>, IDataStore<TData>, IOrderedQueryable<TData>, IQueryable<TData>, IEnumerable<TData>, IOrderedQueryable, IQueryable, IEnumerable, IDisposable where TData : Entity'
    typeParameters:
    - id: TData
      description: The <xref href="System.Type" data-throw-if-not-resolved="false"></xref> of <xref href="Cqrs.Entities.IEntity" data-throw-if-not-resolved="false"></xref> the <xref href="Cqrs.DataStores.IDataStore%601" data-throw-if-not-resolved="false"></xref> will contain.
    content.vb: >-
      Public Class BlobStorageDataStore(Of TData As Entity)
          Inherits BlobStorageStore(Of TData)
          Implements IDataStore(Of TData), IOrderedQueryable(Of TData), IQueryable(Of TData), IEnumerable(Of TData), IOrderedQueryable, IQueryable, IEnumerable, IDisposable
  inheritance:
  - System.Object
  - Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}
  - Cqrs.Azure.BlobStorage.BlobStorageStore{{TData}}
  implements:
  - Cqrs.DataStores.IDataStore{{TData}}
  - System.Linq.IOrderedQueryable{{TData}}
  - System.Linq.IQueryable{{TData}}
  - System.Collections.Generic.IEnumerable{{TData}}
  - System.Linq.IOrderedQueryable
  - System.Linq.IQueryable
  - System.Collections.IEnumerable
  - System.IDisposable
  inheritedMembers:
  - Cqrs.Azure.BlobStorage.BlobStorageStore{{TData}}.GetEnumerator
  - Cqrs.Azure.BlobStorage.BlobStorageStore{{TData}}.Expression
  - Cqrs.Azure.BlobStorage.BlobStorageStore{{TData}}.ElementType
  - Cqrs.Azure.BlobStorage.BlobStorageStore{{TData}}.Provider
  - Cqrs.Azure.BlobStorage.BlobStorageStore{{TData}}.AsyncSaveData``1({TData},System.Func{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob,{TResult}},System.Func{{TData},System.String})
  - Cqrs.Azure.BlobStorage.BlobStorageStore{{TData}}.Add({TData})
  - Cqrs.Azure.BlobStorage.BlobStorageStore{{TData}}.Destroy({TData})
  - Cqrs.Azure.BlobStorage.BlobStorageStore{{TData}}.RemoveAll
  - Cqrs.Azure.BlobStorage.BlobStorageStore{{TData}}.Update({TData})
  - Cqrs.Azure.BlobStorage.BlobStorageStore{{TData}}.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String,System.Boolean)
  - Cqrs.Azure.BlobStorage.BlobStorageStore{{TData}}.OpenStreamsForReading(System.Func{Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob,System.Boolean},System.String,System.String)
  - Cqrs.Azure.BlobStorage.BlobStorageStore{{TData}}.GetBlobReference(Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer,System.String)
  - Cqrs.Azure.BlobStorage.BlobStorageStore{{TData}}.GetByName(System.String)
  - Cqrs.Azure.BlobStorage.BlobStorageStore{{TData}}.GetByFolder(System.String)
  - Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.WritableCollection
  - Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.ReadableStorageAccount
  - Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Logger
  - Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.GetContainerName
  - Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.IsContainerPublic
  - Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.DefaultSettings
  - Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Initialise(Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory)
  - Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.GetEnumerator
  - Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.System#Collections#IEnumerable#GetEnumerator
  - Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Expression
  - Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.ElementType
  - Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Provider
  - Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Dispose
  - Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Add({TData})
  - Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Add(System.Collections.Generic.IEnumerable{{TData}})
  - Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Destroy({TData})
  - Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.RemoveAll
  - Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Update({TData})
  - Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String,System.Boolean)
  - Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.GetSafeSourceName(System.String)
  - Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.GetSafeSourceName(System.String,System.Boolean)
  - Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.AzureStorageRetryPolicy
  - Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Deserialise(System.IO.Stream)
  - Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Deserialise(System.String)
  - Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Serialise({TData})
  - Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.GetSerialisationSettings
  - Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.GetSerialiser
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Cqrs.DataStores.IDataStore{`0}.Cqrs.Sql.DataStores.SqlDataStoreExtensions.Where``2(System.Linq.Expressions.Expression{System.Func{{TData},System.Boolean}})
  - Cqrs.DataStores.IDataStore{`0}.Cqrs.Azure.BlobStorage.TableStorageStoreExtensions.GetByKeyAndRow``1(System.Guid)
  - Cqrs.DataStores.IDataStore{`0}.Cqrs.Azure.BlobStorage.TableStorageStoreExtensions.GetByKey``1
  - Cqrs.DataStores.IDataStore{`0}.Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByName``1(System.String)
  - Cqrs.DataStores.IDataStore{`0}.Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByFolder``1(System.String)
  - Cqrs.DataStores.IDataStore{`0}.Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByFolder``1
  nameWithType.vb: BlobStorageDataStore(Of TData)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Cqrs.Azure.BlobStorage.DataStores.BlobStorageDataStore(Of TData)
  name.vb: BlobStorageDataStore(Of TData)
- uid: Cqrs.Azure.BlobStorage.DataStores.BlobStorageDataStore`1.#ctor(cdmdotnet.Logging.ILogger,Cqrs.Azure.BlobStorage.DataStores.IBlobStorageDataStoreConnectionStringFactory)
  commentId: M:Cqrs.Azure.BlobStorage.DataStores.BlobStorageDataStore`1.#ctor(cdmdotnet.Logging.ILogger,Cqrs.Azure.BlobStorage.DataStores.IBlobStorageDataStoreConnectionStringFactory)
  id: '#ctor(cdmdotnet.Logging.ILogger,Cqrs.Azure.BlobStorage.DataStores.IBlobStorageDataStoreConnectionStringFactory)'
  parent: Cqrs.Azure.BlobStorage.DataStores.BlobStorageDataStore`1
  langs:
  - csharp
  - vb
  name: BlobStorageDataStore(ILogger, IBlobStorageDataStoreConnectionStringFactory)
  nameWithType: BlobStorageDataStore<TData>.BlobStorageDataStore(ILogger, IBlobStorageDataStoreConnectionStringFactory)
  fullName: Cqrs.Azure.BlobStorage.DataStores.BlobStorageDataStore<TData>.BlobStorageDataStore(cdmdotnet.Logging.ILogger, Cqrs.Azure.BlobStorage.DataStores.IBlobStorageDataStoreConnectionStringFactory)
  type: Constructor
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.BlobStorage/DataStores/BlobStorageDataStore.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: .ctor
    path: Framework/Azure/Cqrs.Azure.BlobStorage/DataStores/BlobStorageDataStore.cs
    startLine: 31
  assemblies:
  - Cqrs.Azure.BlobStorage
  namespace: Cqrs.Azure.BlobStorage.DataStores
  summary: "\nInitializes a new instance of the <xref href=\"Cqrs.Azure.BlobStorage\" data-throw-if-not-resolved=\"false\"></xref> class using the specified container.\n"
  example: []
  syntax:
    content: public BlobStorageDataStore(ILogger logger, IBlobStorageDataStoreConnectionStringFactory blobStorageDataStoreConnectionStringFactory)
    parameters:
    - id: logger
      type: cdmdotnet.Logging.ILogger
    - id: blobStorageDataStoreConnectionStringFactory
      type: Cqrs.Azure.BlobStorage.DataStores.IBlobStorageDataStoreConnectionStringFactory
    content.vb: Public Sub New(logger As ILogger, blobStorageDataStoreConnectionStringFactory As IBlobStorageDataStoreConnectionStringFactory)
  overload: Cqrs.Azure.BlobStorage.DataStores.BlobStorageDataStore`1.#ctor*
  nameWithType.vb: BlobStorageDataStore(Of TData).BlobStorageDataStore(ILogger, IBlobStorageDataStoreConnectionStringFactory)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Cqrs.Azure.BlobStorage.DataStores.BlobStorageDataStore(Of TData).BlobStorageDataStore(cdmdotnet.Logging.ILogger, Cqrs.Azure.BlobStorage.DataStores.IBlobStorageDataStoreConnectionStringFactory)
- uid: Cqrs.Azure.BlobStorage.DataStores.BlobStorageDataStore`1.Remove(`0)
  commentId: M:Cqrs.Azure.BlobStorage.DataStores.BlobStorageDataStore`1.Remove(`0)
  id: Remove(`0)
  parent: Cqrs.Azure.BlobStorage.DataStores.BlobStorageDataStore`1
  langs:
  - csharp
  - vb
  name: Remove(TData)
  nameWithType: BlobStorageDataStore<TData>.Remove(TData)
  fullName: Cqrs.Azure.BlobStorage.DataStores.BlobStorageDataStore<TData>.Remove(TData)
  type: Method
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.BlobStorage/DataStores/BlobStorageDataStore.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Remove
    path: Framework/Azure/Cqrs.Azure.BlobStorage/DataStores/BlobStorageDataStore.cs
    startLine: 49
  assemblies:
  - Cqrs.Azure.BlobStorage
  namespace: Cqrs.Azure.BlobStorage.DataStores
  summary: "\nWill mark the <code data-dev-comment-type=\"paramref\">data</code> as logically (or soft).\n"
  example: []
  syntax:
    content: public void Remove(TData data)
    parameters:
    - id: data
      type: '{TData}'
    content.vb: Public Sub Remove(data As TData)
  overload: Cqrs.Azure.BlobStorage.DataStores.BlobStorageDataStore`1.Remove*
  implements:
  - Cqrs.DataStores.IDataStore{{TData}}.Remove({TData})
  nameWithType.vb: BlobStorageDataStore(Of TData).Remove(TData)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Cqrs.Azure.BlobStorage.DataStores.BlobStorageDataStore(Of TData).Remove(TData)
- uid: Cqrs.Azure.BlobStorage.DataStores.BlobStorageDataStore`1.GetByFolder
  commentId: M:Cqrs.Azure.BlobStorage.DataStores.BlobStorageDataStore`1.GetByFolder
  id: GetByFolder
  parent: Cqrs.Azure.BlobStorage.DataStores.BlobStorageDataStore`1
  langs:
  - csharp
  - vb
  name: GetByFolder()
  nameWithType: BlobStorageDataStore<TData>.GetByFolder()
  fullName: Cqrs.Azure.BlobStorage.DataStores.BlobStorageDataStore<TData>.GetByFolder()
  type: Method
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.BlobStorage/DataStores/BlobStorageDataStore.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: GetByFolder
    path: Framework/Azure/Cqrs.Azure.BlobStorage/DataStores/BlobStorageDataStore.cs
    startLine: 60
  assemblies:
  - Cqrs.Azure.BlobStorage
  namespace: Cqrs.Azure.BlobStorage.DataStores
  summary: "\nGet all <code data-dev-comment-type=\"typeparamref\">TData</code> items in the folder.\n"
  example: []
  syntax:
    content: public virtual IEnumerable<TData> GetByFolder()
    return:
      type: System.Collections.Generic.IEnumerable{{TData}}
    content.vb: Public Overridable Function GetByFolder As IEnumerable(Of TData)
  overload: Cqrs.Azure.BlobStorage.DataStores.BlobStorageDataStore`1.GetByFolder*
  nameWithType.vb: BlobStorageDataStore(Of TData).GetByFolder()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Cqrs.Azure.BlobStorage.DataStores.BlobStorageDataStore(Of TData).GetByFolder()
references:
- uid: Cqrs.DataStores.IDataStore`1
  commentId: T:Cqrs.DataStores.IDataStore`1
  isExternal: false
  name: IDataStore<TData>
  nameWithType: IDataStore<TData>
  fullName: Cqrs.DataStores.IDataStore<TData>
  nameWithType.vb: IDataStore(Of TData)
  fullName.vb: Cqrs.DataStores.IDataStore(Of TData)
  name.vb: IDataStore(Of TData)
  spec.csharp:
  - uid: Cqrs.DataStores.IDataStore`1
    name: IDataStore
    nameWithType: IDataStore
    fullName: Cqrs.DataStores.IDataStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.DataStores.IDataStore`1
    name: IDataStore
    nameWithType: IDataStore
    fullName: Cqrs.DataStores.IDataStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Cqrs.Entities.IEntity
  commentId: T:Cqrs.Entities.IEntity
  parent: Cqrs.Entities
  isExternal: false
  name: IEntity
  nameWithType: IEntity
  fullName: Cqrs.Entities.IEntity
- uid: Cqrs.Azure.BlobStorage.DataStores
  commentId: N:Cqrs.Azure.BlobStorage.DataStores
  isExternal: false
  name: Cqrs.Azure.BlobStorage.DataStores
  nameWithType: Cqrs.Azure.BlobStorage.DataStores
  fullName: Cqrs.Azure.BlobStorage.DataStores
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}
  commentId: T:Cqrs.Azure.BlobStorage.StorageStore{`0,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}
  parent: Cqrs.Azure.BlobStorage
  definition: Cqrs.Azure.BlobStorage.StorageStore`2
  name: StorageStore<TData, CloudBlobContainer>
  nameWithType: StorageStore<TData, CloudBlobContainer>
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>
  nameWithType.vb: StorageStore(Of TData, CloudBlobContainer)
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer)
  name.vb: StorageStore(Of TData, CloudBlobContainer)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2
    name: StorageStore
    nameWithType: StorageStore
    fullName: Cqrs.Azure.BlobStorage.StorageStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
    name: CloudBlobContainer
    nameWithType: CloudBlobContainer
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2
    name: StorageStore
    nameWithType: StorageStore
    fullName: Cqrs.Azure.BlobStorage.StorageStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
    name: CloudBlobContainer
    nameWithType: CloudBlobContainer
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.BlobStorageStore{{TData}}
  commentId: T:Cqrs.Azure.BlobStorage.BlobStorageStore{`0}
  parent: Cqrs.Azure.BlobStorage
  definition: Cqrs.Azure.BlobStorage.BlobStorageStore`1
  name: BlobStorageStore<TData>
  nameWithType: BlobStorageStore<TData>
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>
  nameWithType.vb: BlobStorageStore(Of TData)
  fullName.vb: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData)
  name.vb: BlobStorageStore(Of TData)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1
    name: BlobStorageStore
    nameWithType: BlobStorageStore
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1
    name: BlobStorageStore
    nameWithType: BlobStorageStore
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.DataStores.IDataStore{{TData}}
  commentId: T:Cqrs.DataStores.IDataStore{`0}
  parent: Cqrs.DataStores
  definition: Cqrs.DataStores.IDataStore`1
  name: IDataStore<TData>
  nameWithType: IDataStore<TData>
  fullName: Cqrs.DataStores.IDataStore<TData>
  nameWithType.vb: IDataStore(Of TData)
  fullName.vb: Cqrs.DataStores.IDataStore(Of TData)
  name.vb: IDataStore(Of TData)
  spec.csharp:
  - uid: Cqrs.DataStores.IDataStore`1
    name: IDataStore
    nameWithType: IDataStore
    fullName: Cqrs.DataStores.IDataStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.DataStores.IDataStore`1
    name: IDataStore
    nameWithType: IDataStore
    fullName: Cqrs.DataStores.IDataStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.IOrderedQueryable{{TData}}
  commentId: T:System.Linq.IOrderedQueryable{`0}
  parent: System.Linq
  definition: System.Linq.IOrderedQueryable`1
  name: IOrderedQueryable<TData>
  nameWithType: IOrderedQueryable<TData>
  fullName: System.Linq.IOrderedQueryable<TData>
  nameWithType.vb: IOrderedQueryable(Of TData)
  fullName.vb: System.Linq.IOrderedQueryable(Of TData)
  name.vb: IOrderedQueryable(Of TData)
  spec.csharp:
  - uid: System.Linq.IOrderedQueryable`1
    name: IOrderedQueryable
    nameWithType: IOrderedQueryable
    fullName: System.Linq.IOrderedQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.IOrderedQueryable`1
    name: IOrderedQueryable
    nameWithType: IOrderedQueryable
    fullName: System.Linq.IOrderedQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.IQueryable{{TData}}
  commentId: T:System.Linq.IQueryable{`0}
  parent: System.Linq
  definition: System.Linq.IQueryable`1
  name: IQueryable<TData>
  nameWithType: IQueryable<TData>
  fullName: System.Linq.IQueryable<TData>
  nameWithType.vb: IQueryable(Of TData)
  fullName.vb: System.Linq.IQueryable(Of TData)
  name.vb: IQueryable(Of TData)
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{{TData}}
  commentId: T:System.Collections.Generic.IEnumerable{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<TData>
  nameWithType: IEnumerable<TData>
  fullName: System.Collections.Generic.IEnumerable<TData>
  nameWithType.vb: IEnumerable(Of TData)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TData)
  name.vb: IEnumerable(Of TData)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.IOrderedQueryable
  commentId: T:System.Linq.IOrderedQueryable
  parent: System.Linq
  isExternal: true
  name: IOrderedQueryable
  nameWithType: IOrderedQueryable
  fullName: System.Linq.IOrderedQueryable
- uid: System.Linq.IQueryable
  commentId: T:System.Linq.IQueryable
  parent: System.Linq
  isExternal: true
  name: IQueryable
  nameWithType: IQueryable
  fullName: System.Linq.IQueryable
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Cqrs.Azure.BlobStorage.BlobStorageStore{{TData}}.GetEnumerator
  commentId: M:Cqrs.Azure.BlobStorage.BlobStorageStore{`0}.GetEnumerator
  parent: Cqrs.Azure.BlobStorage.BlobStorageStore{{TData}}
  definition: Cqrs.Azure.BlobStorage.BlobStorageStore`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: BlobStorageStore<TData>.GetEnumerator()
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>.GetEnumerator()
  nameWithType.vb: BlobStorageStore(Of TData).GetEnumerator()
  fullName.vb: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData).GetEnumerator()
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.GetEnumerator
    name: GetEnumerator
    nameWithType: BlobStorageStore<TData>.GetEnumerator
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.GetEnumerator
    name: GetEnumerator
    nameWithType: BlobStorageStore(Of TData).GetEnumerator
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData).GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.BlobStorageStore{{TData}}.Expression
  commentId: P:Cqrs.Azure.BlobStorage.BlobStorageStore{`0}.Expression
  parent: Cqrs.Azure.BlobStorage.BlobStorageStore{{TData}}
  definition: Cqrs.Azure.BlobStorage.BlobStorageStore`1.Expression
  name: Expression
  nameWithType: BlobStorageStore<TData>.Expression
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>.Expression
  nameWithType.vb: BlobStorageStore(Of TData).Expression
  fullName.vb: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData).Expression
- uid: Cqrs.Azure.BlobStorage.BlobStorageStore{{TData}}.ElementType
  commentId: P:Cqrs.Azure.BlobStorage.BlobStorageStore{`0}.ElementType
  parent: Cqrs.Azure.BlobStorage.BlobStorageStore{{TData}}
  definition: Cqrs.Azure.BlobStorage.BlobStorageStore`1.ElementType
  name: ElementType
  nameWithType: BlobStorageStore<TData>.ElementType
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>.ElementType
  nameWithType.vb: BlobStorageStore(Of TData).ElementType
  fullName.vb: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData).ElementType
- uid: Cqrs.Azure.BlobStorage.BlobStorageStore{{TData}}.Provider
  commentId: P:Cqrs.Azure.BlobStorage.BlobStorageStore{`0}.Provider
  parent: Cqrs.Azure.BlobStorage.BlobStorageStore{{TData}}
  definition: Cqrs.Azure.BlobStorage.BlobStorageStore`1.Provider
  name: Provider
  nameWithType: BlobStorageStore<TData>.Provider
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>.Provider
  nameWithType.vb: BlobStorageStore(Of TData).Provider
  fullName.vb: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData).Provider
- uid: Cqrs.Azure.BlobStorage.BlobStorageStore{{TData}}.AsyncSaveData``1({TData},System.Func{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob,{TResult}},System.Func{{TData},System.String})
  commentId: M:Cqrs.Azure.BlobStorage.BlobStorageStore{`0}.AsyncSaveData``1(`0,System.Func{`0,Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob,``0},System.Func{`0,System.String})
  parent: Cqrs.Azure.BlobStorage.BlobStorageStore{{TData}}
  definition: Cqrs.Azure.BlobStorage.BlobStorageStore`1.AsyncSaveData``1(`0,System.Func{`0,Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob,``0},System.Func{`0,System.String})
  name: AsyncSaveData<TResult>(TData, Func<TData, CloudBlockBlob, TResult>, Func<TData, String>)
  nameWithType: BlobStorageStore<TData>.AsyncSaveData<TResult>(TData, Func<TData, CloudBlockBlob, TResult>, Func<TData, String>)
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>.AsyncSaveData<TResult>(TData, System.Func<TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob, TResult>, System.Func<TData, System.String>)
  nameWithType.vb: BlobStorageStore(Of TData).AsyncSaveData(Of TResult)(TData, Func(Of TData, CloudBlockBlob, TResult), Func(Of TData, String))
  fullName.vb: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData).AsyncSaveData(Of TResult)(TData, System.Func(Of TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob, TResult), System.Func(Of TData, System.String))
  name.vb: AsyncSaveData(Of TResult)(TData, Func(Of TData, CloudBlockBlob, TResult), Func(Of TData, String))
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.AsyncSaveData``1(`0,System.Func{`0,Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob,``0},System.Func{`0,System.String})
    name: AsyncSaveData<TResult>
    nameWithType: BlobStorageStore<TData>.AsyncSaveData<TResult>
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>.AsyncSaveData<TResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob
    name: CloudBlockBlob
    nameWithType: CloudBlockBlob
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.AsyncSaveData``1(`0,System.Func{`0,Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob,``0},System.Func{`0,System.String})
    name: AsyncSaveData(Of TResult)
    nameWithType: BlobStorageStore(Of TData).AsyncSaveData(Of TResult)
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData).AsyncSaveData(Of TResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob
    name: CloudBlockBlob
    nameWithType: CloudBlockBlob
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.BlobStorageStore{{TData}}.Add({TData})
  commentId: M:Cqrs.Azure.BlobStorage.BlobStorageStore{`0}.Add(`0)
  parent: Cqrs.Azure.BlobStorage.BlobStorageStore{{TData}}
  definition: Cqrs.Azure.BlobStorage.BlobStorageStore`1.Add(`0)
  name: Add(TData)
  nameWithType: BlobStorageStore<TData>.Add(TData)
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>.Add(TData)
  nameWithType.vb: BlobStorageStore(Of TData).Add(TData)
  fullName.vb: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData).Add(TData)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.Add(`0)
    name: Add
    nameWithType: BlobStorageStore<TData>.Add
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>.Add
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.Add(`0)
    name: Add
    nameWithType: BlobStorageStore(Of TData).Add
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData).Add
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.BlobStorageStore{{TData}}.Destroy({TData})
  commentId: M:Cqrs.Azure.BlobStorage.BlobStorageStore{`0}.Destroy(`0)
  parent: Cqrs.Azure.BlobStorage.BlobStorageStore{{TData}}
  definition: Cqrs.Azure.BlobStorage.BlobStorageStore`1.Destroy(`0)
  name: Destroy(TData)
  nameWithType: BlobStorageStore<TData>.Destroy(TData)
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>.Destroy(TData)
  nameWithType.vb: BlobStorageStore(Of TData).Destroy(TData)
  fullName.vb: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData).Destroy(TData)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.Destroy(`0)
    name: Destroy
    nameWithType: BlobStorageStore<TData>.Destroy
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>.Destroy
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.Destroy(`0)
    name: Destroy
    nameWithType: BlobStorageStore(Of TData).Destroy
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData).Destroy
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.BlobStorageStore{{TData}}.RemoveAll
  commentId: M:Cqrs.Azure.BlobStorage.BlobStorageStore{`0}.RemoveAll
  parent: Cqrs.Azure.BlobStorage.BlobStorageStore{{TData}}
  definition: Cqrs.Azure.BlobStorage.BlobStorageStore`1.RemoveAll
  name: RemoveAll()
  nameWithType: BlobStorageStore<TData>.RemoveAll()
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>.RemoveAll()
  nameWithType.vb: BlobStorageStore(Of TData).RemoveAll()
  fullName.vb: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData).RemoveAll()
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.RemoveAll
    name: RemoveAll
    nameWithType: BlobStorageStore<TData>.RemoveAll
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>.RemoveAll
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.RemoveAll
    name: RemoveAll
    nameWithType: BlobStorageStore(Of TData).RemoveAll
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData).RemoveAll
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.BlobStorageStore{{TData}}.Update({TData})
  commentId: M:Cqrs.Azure.BlobStorage.BlobStorageStore{`0}.Update(`0)
  parent: Cqrs.Azure.BlobStorage.BlobStorageStore{{TData}}
  definition: Cqrs.Azure.BlobStorage.BlobStorageStore`1.Update(`0)
  name: Update(TData)
  nameWithType: BlobStorageStore<TData>.Update(TData)
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>.Update(TData)
  nameWithType.vb: BlobStorageStore(Of TData).Update(TData)
  fullName.vb: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData).Update(TData)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.Update(`0)
    name: Update
    nameWithType: BlobStorageStore<TData>.Update
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>.Update
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.Update(`0)
    name: Update
    nameWithType: BlobStorageStore(Of TData).Update
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData).Update
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.BlobStorageStore{{TData}}.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String,System.Boolean)
  commentId: M:Cqrs.Azure.BlobStorage.BlobStorageStore{`0}.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String,System.Boolean)
  parent: Cqrs.Azure.BlobStorage.BlobStorageStore{{TData}}
  definition: Cqrs.Azure.BlobStorage.BlobStorageStore`1.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String,System.Boolean)
  name: CreateSource(CloudStorageAccount, String, Boolean)
  nameWithType: BlobStorageStore<TData>.CreateSource(CloudStorageAccount, String, Boolean)
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount, System.String, System.Boolean)
  nameWithType.vb: BlobStorageStore(Of TData).CreateSource(CloudStorageAccount, String, Boolean)
  fullName.vb: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData).CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount, System.String, System.Boolean)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String,System.Boolean)
    name: CreateSource
    nameWithType: BlobStorageStore<TData>.CreateSource
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>.CreateSource
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.CloudStorageAccount
    name: CloudStorageAccount
    nameWithType: CloudStorageAccount
    fullName: Microsoft.WindowsAzure.Storage.CloudStorageAccount
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String,System.Boolean)
    name: CreateSource
    nameWithType: BlobStorageStore(Of TData).CreateSource
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData).CreateSource
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.CloudStorageAccount
    name: CloudStorageAccount
    nameWithType: CloudStorageAccount
    fullName: Microsoft.WindowsAzure.Storage.CloudStorageAccount
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.BlobStorageStore{{TData}}.OpenStreamsForReading(System.Func{Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob,System.Boolean},System.String,System.String)
  commentId: M:Cqrs.Azure.BlobStorage.BlobStorageStore{`0}.OpenStreamsForReading(System.Func{Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob,System.Boolean},System.String,System.String)
  parent: Cqrs.Azure.BlobStorage.BlobStorageStore{{TData}}
  definition: Cqrs.Azure.BlobStorage.BlobStorageStore`1.OpenStreamsForReading(System.Func{Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob,System.Boolean},System.String,System.String)
  name: OpenStreamsForReading(Func<CloudBlockBlob, Boolean>, String, String)
  nameWithType: BlobStorageStore<TData>.OpenStreamsForReading(Func<CloudBlockBlob, Boolean>, String, String)
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>.OpenStreamsForReading(System.Func<Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob, System.Boolean>, System.String, System.String)
  nameWithType.vb: BlobStorageStore(Of TData).OpenStreamsForReading(Func(Of CloudBlockBlob, Boolean), String, String)
  fullName.vb: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData).OpenStreamsForReading(System.Func(Of Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob, System.Boolean), System.String, System.String)
  name.vb: OpenStreamsForReading(Func(Of CloudBlockBlob, Boolean), String, String)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.OpenStreamsForReading(System.Func{Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob,System.Boolean},System.String,System.String)
    name: OpenStreamsForReading
    nameWithType: BlobStorageStore<TData>.OpenStreamsForReading
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>.OpenStreamsForReading
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob
    name: CloudBlockBlob
    nameWithType: CloudBlockBlob
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.OpenStreamsForReading(System.Func{Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob,System.Boolean},System.String,System.String)
    name: OpenStreamsForReading
    nameWithType: BlobStorageStore(Of TData).OpenStreamsForReading
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData).OpenStreamsForReading
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob
    name: CloudBlockBlob
    nameWithType: CloudBlockBlob
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.BlobStorageStore{{TData}}.GetBlobReference(Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer,System.String)
  commentId: M:Cqrs.Azure.BlobStorage.BlobStorageStore{`0}.GetBlobReference(Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer,System.String)
  parent: Cqrs.Azure.BlobStorage.BlobStorageStore{{TData}}
  definition: Cqrs.Azure.BlobStorage.BlobStorageStore`1.GetBlobReference(Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer,System.String)
  name: GetBlobReference(CloudBlobContainer, String)
  nameWithType: BlobStorageStore<TData>.GetBlobReference(CloudBlobContainer, String)
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>.GetBlobReference(Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer, System.String)
  nameWithType.vb: BlobStorageStore(Of TData).GetBlobReference(CloudBlobContainer, String)
  fullName.vb: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData).GetBlobReference(Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer, System.String)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.GetBlobReference(Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer,System.String)
    name: GetBlobReference
    nameWithType: BlobStorageStore<TData>.GetBlobReference
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>.GetBlobReference
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
    name: CloudBlobContainer
    nameWithType: CloudBlobContainer
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.GetBlobReference(Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer,System.String)
    name: GetBlobReference
    nameWithType: BlobStorageStore(Of TData).GetBlobReference
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData).GetBlobReference
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
    name: CloudBlobContainer
    nameWithType: CloudBlobContainer
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.BlobStorageStore{{TData}}.GetByName(System.String)
  commentId: M:Cqrs.Azure.BlobStorage.BlobStorageStore{`0}.GetByName(System.String)
  parent: Cqrs.Azure.BlobStorage.BlobStorageStore{{TData}}
  definition: Cqrs.Azure.BlobStorage.BlobStorageStore`1.GetByName(System.String)
  name: GetByName(String)
  nameWithType: BlobStorageStore<TData>.GetByName(String)
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>.GetByName(System.String)
  nameWithType.vb: BlobStorageStore(Of TData).GetByName(String)
  fullName.vb: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData).GetByName(System.String)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.GetByName(System.String)
    name: GetByName
    nameWithType: BlobStorageStore<TData>.GetByName
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>.GetByName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.GetByName(System.String)
    name: GetByName
    nameWithType: BlobStorageStore(Of TData).GetByName
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData).GetByName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.BlobStorageStore{{TData}}.GetByFolder(System.String)
  commentId: M:Cqrs.Azure.BlobStorage.BlobStorageStore{`0}.GetByFolder(System.String)
  parent: Cqrs.Azure.BlobStorage.BlobStorageStore{{TData}}
  definition: Cqrs.Azure.BlobStorage.BlobStorageStore`1.GetByFolder(System.String)
  name: GetByFolder(String)
  nameWithType: BlobStorageStore<TData>.GetByFolder(String)
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>.GetByFolder(System.String)
  nameWithType.vb: BlobStorageStore(Of TData).GetByFolder(String)
  fullName.vb: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData).GetByFolder(System.String)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.GetByFolder(System.String)
    name: GetByFolder
    nameWithType: BlobStorageStore<TData>.GetByFolder
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>.GetByFolder
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.GetByFolder(System.String)
    name: GetByFolder
    nameWithType: BlobStorageStore(Of TData).GetByFolder
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData).GetByFolder
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.WritableCollection
  commentId: P:Cqrs.Azure.BlobStorage.StorageStore{`0,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.WritableCollection
  parent: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.WritableCollection
  name: WritableCollection
  nameWithType: StorageStore<TData, CloudBlobContainer>.WritableCollection
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.WritableCollection
  nameWithType.vb: StorageStore(Of TData, CloudBlobContainer).WritableCollection
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).WritableCollection
- uid: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.ReadableStorageAccount
  commentId: P:Cqrs.Azure.BlobStorage.StorageStore{`0,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.ReadableStorageAccount
  parent: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.ReadableStorageAccount
  name: ReadableStorageAccount
  nameWithType: StorageStore<TData, CloudBlobContainer>.ReadableStorageAccount
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.ReadableStorageAccount
  nameWithType.vb: StorageStore(Of TData, CloudBlobContainer).ReadableStorageAccount
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).ReadableStorageAccount
- uid: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Logger
  commentId: P:Cqrs.Azure.BlobStorage.StorageStore{`0,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Logger
  parent: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.Logger
  name: Logger
  nameWithType: StorageStore<TData, CloudBlobContainer>.Logger
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.Logger
  nameWithType.vb: StorageStore(Of TData, CloudBlobContainer).Logger
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).Logger
- uid: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.GetContainerName
  commentId: P:Cqrs.Azure.BlobStorage.StorageStore{`0,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.GetContainerName
  parent: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.GetContainerName
  name: GetContainerName
  nameWithType: StorageStore<TData, CloudBlobContainer>.GetContainerName
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.GetContainerName
  nameWithType.vb: StorageStore(Of TData, CloudBlobContainer).GetContainerName
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).GetContainerName
- uid: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.IsContainerPublic
  commentId: P:Cqrs.Azure.BlobStorage.StorageStore{`0,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.IsContainerPublic
  parent: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.IsContainerPublic
  name: IsContainerPublic
  nameWithType: StorageStore<TData, CloudBlobContainer>.IsContainerPublic
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.IsContainerPublic
  nameWithType.vb: StorageStore(Of TData, CloudBlobContainer).IsContainerPublic
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).IsContainerPublic
- uid: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.DefaultSettings
  commentId: P:Cqrs.Azure.BlobStorage.StorageStore{`0,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.DefaultSettings
  parent: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.DefaultSettings
  name: DefaultSettings
  nameWithType: StorageStore<TData, CloudBlobContainer>.DefaultSettings
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.DefaultSettings
  nameWithType.vb: StorageStore(Of TData, CloudBlobContainer).DefaultSettings
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).DefaultSettings
- uid: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Initialise(Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory)
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore{`0,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Initialise(Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory)
  parent: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.Initialise(Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory)
  name: Initialise(IStorageStoreConnectionStringFactory)
  nameWithType: StorageStore<TData, CloudBlobContainer>.Initialise(IStorageStoreConnectionStringFactory)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.Initialise(Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory)
  nameWithType.vb: StorageStore(Of TData, CloudBlobContainer).Initialise(IStorageStoreConnectionStringFactory)
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).Initialise(Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Initialise(Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory)
    name: Initialise
    nameWithType: StorageStore<TData, CloudBlobContainer>.Initialise
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.Initialise
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory
    name: IStorageStoreConnectionStringFactory
    nameWithType: IStorageStoreConnectionStringFactory
    fullName: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Initialise(Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory)
    name: Initialise
    nameWithType: StorageStore(Of TData, CloudBlobContainer).Initialise
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).Initialise
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory
    name: IStorageStoreConnectionStringFactory
    nameWithType: IStorageStoreConnectionStringFactory
    fullName: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.GetEnumerator
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore{`0,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.GetEnumerator
  parent: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.GetEnumerator
  name: GetEnumerator()
  nameWithType: StorageStore<TData, CloudBlobContainer>.GetEnumerator()
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.GetEnumerator()
  nameWithType.vb: StorageStore(Of TData, CloudBlobContainer).GetEnumerator()
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).GetEnumerator()
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetEnumerator
    name: GetEnumerator
    nameWithType: StorageStore<TData, CloudBlobContainer>.GetEnumerator
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetEnumerator
    name: GetEnumerator
    nameWithType: StorageStore(Of TData, CloudBlobContainer).GetEnumerator
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.System#Collections#IEnumerable#GetEnumerator
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore{`0,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.System#Collections#IEnumerable#GetEnumerator
  parent: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator()
  nameWithType: StorageStore<TData, CloudBlobContainer>.IEnumerable.GetEnumerator()
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.System.Collections.IEnumerable.GetEnumerator()
  nameWithType.vb: StorageStore(Of TData, CloudBlobContainer).System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.System#Collections#IEnumerable#GetEnumerator
    name: IEnumerable.GetEnumerator
    nameWithType: StorageStore<TData, CloudBlobContainer>.IEnumerable.GetEnumerator
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.System.Collections.IEnumerable.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.System#Collections#IEnumerable#GetEnumerator
    name: System.Collections.IEnumerable.GetEnumerator
    nameWithType: StorageStore(Of TData, CloudBlobContainer).System.Collections.IEnumerable.GetEnumerator
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).System.Collections.IEnumerable.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Expression
  commentId: P:Cqrs.Azure.BlobStorage.StorageStore{`0,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Expression
  parent: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.Expression
  name: Expression
  nameWithType: StorageStore<TData, CloudBlobContainer>.Expression
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.Expression
  nameWithType.vb: StorageStore(Of TData, CloudBlobContainer).Expression
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).Expression
- uid: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.ElementType
  commentId: P:Cqrs.Azure.BlobStorage.StorageStore{`0,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.ElementType
  parent: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.ElementType
  name: ElementType
  nameWithType: StorageStore<TData, CloudBlobContainer>.ElementType
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.ElementType
  nameWithType.vb: StorageStore(Of TData, CloudBlobContainer).ElementType
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).ElementType
- uid: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Provider
  commentId: P:Cqrs.Azure.BlobStorage.StorageStore{`0,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Provider
  parent: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.Provider
  name: Provider
  nameWithType: StorageStore<TData, CloudBlobContainer>.Provider
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.Provider
  nameWithType.vb: StorageStore(Of TData, CloudBlobContainer).Provider
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).Provider
- uid: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Dispose
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore{`0,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Dispose
  parent: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.Dispose
  name: Dispose()
  nameWithType: StorageStore<TData, CloudBlobContainer>.Dispose()
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.Dispose()
  nameWithType.vb: StorageStore(Of TData, CloudBlobContainer).Dispose()
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).Dispose()
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Dispose
    name: Dispose
    nameWithType: StorageStore<TData, CloudBlobContainer>.Dispose
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Dispose
    name: Dispose
    nameWithType: StorageStore(Of TData, CloudBlobContainer).Dispose
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Add({TData})
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore{`0,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Add(`0)
  parent: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.Add(`0)
  name: Add(TData)
  nameWithType: StorageStore<TData, CloudBlobContainer>.Add(TData)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.Add(TData)
  nameWithType.vb: StorageStore(Of TData, CloudBlobContainer).Add(TData)
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).Add(TData)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Add(`0)
    name: Add
    nameWithType: StorageStore<TData, CloudBlobContainer>.Add
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.Add
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Add(`0)
    name: Add
    nameWithType: StorageStore(Of TData, CloudBlobContainer).Add
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).Add
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Add(System.Collections.Generic.IEnumerable{{TData}})
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore{`0,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Add(System.Collections.Generic.IEnumerable{`0})
  parent: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.Add(System.Collections.Generic.IEnumerable{`0})
  name: Add(IEnumerable<TData>)
  nameWithType: StorageStore<TData, CloudBlobContainer>.Add(IEnumerable<TData>)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.Add(System.Collections.Generic.IEnumerable<TData>)
  nameWithType.vb: StorageStore(Of TData, CloudBlobContainer).Add(IEnumerable(Of TData))
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).Add(System.Collections.Generic.IEnumerable(Of TData))
  name.vb: Add(IEnumerable(Of TData))
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Add(System.Collections.Generic.IEnumerable{`0})
    name: Add
    nameWithType: StorageStore<TData, CloudBlobContainer>.Add
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Add(System.Collections.Generic.IEnumerable{`0})
    name: Add
    nameWithType: StorageStore(Of TData, CloudBlobContainer).Add
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Destroy({TData})
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore{`0,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Destroy(`0)
  parent: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.Destroy(`0)
  name: Destroy(TData)
  nameWithType: StorageStore<TData, CloudBlobContainer>.Destroy(TData)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.Destroy(TData)
  nameWithType.vb: StorageStore(Of TData, CloudBlobContainer).Destroy(TData)
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).Destroy(TData)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Destroy(`0)
    name: Destroy
    nameWithType: StorageStore<TData, CloudBlobContainer>.Destroy
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.Destroy
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Destroy(`0)
    name: Destroy
    nameWithType: StorageStore(Of TData, CloudBlobContainer).Destroy
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).Destroy
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.RemoveAll
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore{`0,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.RemoveAll
  parent: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.RemoveAll
  name: RemoveAll()
  nameWithType: StorageStore<TData, CloudBlobContainer>.RemoveAll()
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.RemoveAll()
  nameWithType.vb: StorageStore(Of TData, CloudBlobContainer).RemoveAll()
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).RemoveAll()
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.RemoveAll
    name: RemoveAll
    nameWithType: StorageStore<TData, CloudBlobContainer>.RemoveAll
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.RemoveAll
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.RemoveAll
    name: RemoveAll
    nameWithType: StorageStore(Of TData, CloudBlobContainer).RemoveAll
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).RemoveAll
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Update({TData})
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore{`0,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Update(`0)
  parent: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.Update(`0)
  name: Update(TData)
  nameWithType: StorageStore<TData, CloudBlobContainer>.Update(TData)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.Update(TData)
  nameWithType.vb: StorageStore(Of TData, CloudBlobContainer).Update(TData)
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).Update(TData)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Update(`0)
    name: Update
    nameWithType: StorageStore<TData, CloudBlobContainer>.Update
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.Update
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Update(`0)
    name: Update
    nameWithType: StorageStore(Of TData, CloudBlobContainer).Update
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).Update
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String,System.Boolean)
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore{`0,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String,System.Boolean)
  parent: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String,System.Boolean)
  name: CreateSource(CloudStorageAccount, String, Boolean)
  nameWithType: StorageStore<TData, CloudBlobContainer>.CreateSource(CloudStorageAccount, String, Boolean)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount, System.String, System.Boolean)
  nameWithType.vb: StorageStore(Of TData, CloudBlobContainer).CreateSource(CloudStorageAccount, String, Boolean)
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount, System.String, System.Boolean)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String,System.Boolean)
    name: CreateSource
    nameWithType: StorageStore<TData, CloudBlobContainer>.CreateSource
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.CreateSource
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.CloudStorageAccount
    name: CloudStorageAccount
    nameWithType: CloudStorageAccount
    fullName: Microsoft.WindowsAzure.Storage.CloudStorageAccount
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String,System.Boolean)
    name: CreateSource
    nameWithType: StorageStore(Of TData, CloudBlobContainer).CreateSource
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).CreateSource
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.CloudStorageAccount
    name: CloudStorageAccount
    nameWithType: CloudStorageAccount
    fullName: Microsoft.WindowsAzure.Storage.CloudStorageAccount
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.GetSafeSourceName(System.String)
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore{`0,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.GetSafeSourceName(System.String)
  parent: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.GetSafeSourceName(System.String)
  name: GetSafeSourceName(String)
  nameWithType: StorageStore<TData, CloudBlobContainer>.GetSafeSourceName(String)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.GetSafeSourceName(System.String)
  nameWithType.vb: StorageStore(Of TData, CloudBlobContainer).GetSafeSourceName(String)
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).GetSafeSourceName(System.String)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetSafeSourceName(System.String)
    name: GetSafeSourceName
    nameWithType: StorageStore<TData, CloudBlobContainer>.GetSafeSourceName
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.GetSafeSourceName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetSafeSourceName(System.String)
    name: GetSafeSourceName
    nameWithType: StorageStore(Of TData, CloudBlobContainer).GetSafeSourceName
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).GetSafeSourceName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.GetSafeSourceName(System.String,System.Boolean)
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore{`0,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.GetSafeSourceName(System.String,System.Boolean)
  parent: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.GetSafeSourceName(System.String,System.Boolean)
  name: GetSafeSourceName(String, Boolean)
  nameWithType: StorageStore<TData, CloudBlobContainer>.GetSafeSourceName(String, Boolean)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.GetSafeSourceName(System.String, System.Boolean)
  nameWithType.vb: StorageStore(Of TData, CloudBlobContainer).GetSafeSourceName(String, Boolean)
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).GetSafeSourceName(System.String, System.Boolean)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetSafeSourceName(System.String,System.Boolean)
    name: GetSafeSourceName
    nameWithType: StorageStore<TData, CloudBlobContainer>.GetSafeSourceName
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.GetSafeSourceName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetSafeSourceName(System.String,System.Boolean)
    name: GetSafeSourceName
    nameWithType: StorageStore(Of TData, CloudBlobContainer).GetSafeSourceName
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).GetSafeSourceName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.AzureStorageRetryPolicy
  commentId: P:Cqrs.Azure.BlobStorage.StorageStore{`0,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.AzureStorageRetryPolicy
  parent: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.AzureStorageRetryPolicy
  name: AzureStorageRetryPolicy
  nameWithType: StorageStore<TData, CloudBlobContainer>.AzureStorageRetryPolicy
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.AzureStorageRetryPolicy
  nameWithType.vb: StorageStore(Of TData, CloudBlobContainer).AzureStorageRetryPolicy
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).AzureStorageRetryPolicy
- uid: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Deserialise(System.IO.Stream)
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore{`0,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Deserialise(System.IO.Stream)
  parent: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.Deserialise(System.IO.Stream)
  name: Deserialise(Stream)
  nameWithType: StorageStore<TData, CloudBlobContainer>.Deserialise(Stream)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.Deserialise(System.IO.Stream)
  nameWithType.vb: StorageStore(Of TData, CloudBlobContainer).Deserialise(Stream)
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).Deserialise(System.IO.Stream)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Deserialise(System.IO.Stream)
    name: Deserialise
    nameWithType: StorageStore<TData, CloudBlobContainer>.Deserialise
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.Deserialise
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Deserialise(System.IO.Stream)
    name: Deserialise
    nameWithType: StorageStore(Of TData, CloudBlobContainer).Deserialise
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).Deserialise
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Deserialise(System.String)
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore{`0,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Deserialise(System.String)
  parent: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.Deserialise(System.String)
  name: Deserialise(String)
  nameWithType: StorageStore<TData, CloudBlobContainer>.Deserialise(String)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.Deserialise(System.String)
  nameWithType.vb: StorageStore(Of TData, CloudBlobContainer).Deserialise(String)
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).Deserialise(System.String)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Deserialise(System.String)
    name: Deserialise
    nameWithType: StorageStore<TData, CloudBlobContainer>.Deserialise
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.Deserialise
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Deserialise(System.String)
    name: Deserialise
    nameWithType: StorageStore(Of TData, CloudBlobContainer).Deserialise
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).Deserialise
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Serialise({TData})
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore{`0,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Serialise(`0)
  parent: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.Serialise(`0)
  name: Serialise(TData)
  nameWithType: StorageStore<TData, CloudBlobContainer>.Serialise(TData)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.Serialise(TData)
  nameWithType.vb: StorageStore(Of TData, CloudBlobContainer).Serialise(TData)
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).Serialise(TData)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Serialise(`0)
    name: Serialise
    nameWithType: StorageStore<TData, CloudBlobContainer>.Serialise
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.Serialise
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Serialise(`0)
    name: Serialise
    nameWithType: StorageStore(Of TData, CloudBlobContainer).Serialise
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).Serialise
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.GetSerialisationSettings
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore{`0,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.GetSerialisationSettings
  parent: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.GetSerialisationSettings
  name: GetSerialisationSettings()
  nameWithType: StorageStore<TData, CloudBlobContainer>.GetSerialisationSettings()
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.GetSerialisationSettings()
  nameWithType.vb: StorageStore(Of TData, CloudBlobContainer).GetSerialisationSettings()
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).GetSerialisationSettings()
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetSerialisationSettings
    name: GetSerialisationSettings
    nameWithType: StorageStore<TData, CloudBlobContainer>.GetSerialisationSettings
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.GetSerialisationSettings
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetSerialisationSettings
    name: GetSerialisationSettings
    nameWithType: StorageStore(Of TData, CloudBlobContainer).GetSerialisationSettings
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).GetSerialisationSettings
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.GetSerialiser
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore{`0,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.GetSerialiser
  parent: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.GetSerialiser
  name: GetSerialiser()
  nameWithType: StorageStore<TData, CloudBlobContainer>.GetSerialiser()
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.GetSerialiser()
  nameWithType.vb: StorageStore(Of TData, CloudBlobContainer).GetSerialiser()
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).GetSerialiser()
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetSerialiser
    name: GetSerialiser
    nameWithType: StorageStore<TData, CloudBlobContainer>.GetSerialiser
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.GetSerialiser
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetSerialiser
    name: GetSerialiser
    nameWithType: StorageStore(Of TData, CloudBlobContainer).GetSerialiser
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).GetSerialiser
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.DataStores.IDataStore{`0}.Cqrs.Sql.DataStores.SqlDataStoreExtensions.Where``2(System.Linq.Expressions.Expression{System.Func{{TData},System.Boolean}})
  commentId: M:Cqrs.Sql.DataStores.SqlDataStoreExtensions.Where``2(Cqrs.DataStores.IDataStore{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  parent: Cqrs.Sql.DataStores.SqlDataStoreExtensions
  definition: Cqrs.Sql.DataStores.SqlDataStoreExtensions.Where``2(Cqrs.DataStores.IDataStore{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  name: Where<TData, TDbEntity>(Expression<Func<TData, Boolean>>)
  nameWithType: SqlDataStoreExtensions.Where<TData, TDbEntity>(Expression<Func<TData, Boolean>>)
  fullName: Cqrs.Sql.DataStores.SqlDataStoreExtensions.Where<TData, TDbEntity>(System.Linq.Expressions.Expression<System.Func<TData, System.Boolean>>)
  nameWithType.vb: SqlDataStoreExtensions.Where(Of TData, TDbEntity)(Expression(Of Func(Of TData, Boolean)))
  fullName.vb: Cqrs.Sql.DataStores.SqlDataStoreExtensions.Where(Of TData, TDbEntity)(System.Linq.Expressions.Expression(Of System.Func(Of TData, System.Boolean)))
  name.vb: Where(Of TData, TDbEntity)(Expression(Of Func(Of TData, Boolean)))
  spec.csharp:
  - uid: Cqrs.Sql.DataStores.SqlDataStoreExtensions.Where``2(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
    name: Where<TData, TDbEntity>
    nameWithType: SqlDataStoreExtensions.Where<TData, TDbEntity>
    fullName: Cqrs.Sql.DataStores.SqlDataStoreExtensions.Where<TData, TDbEntity>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Sql.DataStores.SqlDataStoreExtensions.Where``2(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
    name: Where(Of TData, TDbEntity)
    nameWithType: SqlDataStoreExtensions.Where(Of TData, TDbEntity)
    fullName: Cqrs.Sql.DataStores.SqlDataStoreExtensions.Where(Of TData, TDbEntity)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.DataStores.IDataStore{`0}.Cqrs.Azure.BlobStorage.TableStorageStoreExtensions.GetByKeyAndRow``1(System.Guid)
  commentId: M:Cqrs.Azure.BlobStorage.TableStorageStoreExtensions.GetByKeyAndRow``1(Cqrs.DataStores.IDataStore{``0},System.Guid)
  parent: Cqrs.Azure.BlobStorage.TableStorageStoreExtensions
  definition: Cqrs.Azure.BlobStorage.TableStorageStoreExtensions.GetByKeyAndRow``1(Cqrs.DataStores.IDataStore{``0},System.Guid)
  name: GetByKeyAndRow<TData>(Guid)
  nameWithType: TableStorageStoreExtensions.GetByKeyAndRow<TData>(Guid)
  fullName: Cqrs.Azure.BlobStorage.TableStorageStoreExtensions.GetByKeyAndRow<TData>(System.Guid)
  nameWithType.vb: TableStorageStoreExtensions.GetByKeyAndRow(Of TData)(Guid)
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStoreExtensions.GetByKeyAndRow(Of TData)(System.Guid)
  name.vb: GetByKeyAndRow(Of TData)(Guid)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStoreExtensions.GetByKeyAndRow``1(System.Guid)
    name: GetByKeyAndRow<TData>
    nameWithType: TableStorageStoreExtensions.GetByKeyAndRow<TData>
    fullName: Cqrs.Azure.BlobStorage.TableStorageStoreExtensions.GetByKeyAndRow<TData>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStoreExtensions.GetByKeyAndRow``1(System.Guid)
    name: GetByKeyAndRow(Of TData)
    nameWithType: TableStorageStoreExtensions.GetByKeyAndRow(Of TData)
    fullName: Cqrs.Azure.BlobStorage.TableStorageStoreExtensions.GetByKeyAndRow(Of TData)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.DataStores.IDataStore{`0}.Cqrs.Azure.BlobStorage.TableStorageStoreExtensions.GetByKey``1
  commentId: M:Cqrs.Azure.BlobStorage.TableStorageStoreExtensions.GetByKey``1(Cqrs.DataStores.IDataStore{``0})
  parent: Cqrs.Azure.BlobStorage.TableStorageStoreExtensions
  definition: Cqrs.Azure.BlobStorage.TableStorageStoreExtensions.GetByKey``1(Cqrs.DataStores.IDataStore{``0})
  name: GetByKey<TData>()
  nameWithType: TableStorageStoreExtensions.GetByKey<TData>()
  fullName: Cqrs.Azure.BlobStorage.TableStorageStoreExtensions.GetByKey<TData>()
  nameWithType.vb: TableStorageStoreExtensions.GetByKey(Of TData)()
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStoreExtensions.GetByKey(Of TData)()
  name.vb: GetByKey(Of TData)()
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStoreExtensions.GetByKey``1
    name: GetByKey<TData>
    nameWithType: TableStorageStoreExtensions.GetByKey<TData>
    fullName: Cqrs.Azure.BlobStorage.TableStorageStoreExtensions.GetByKey<TData>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStoreExtensions.GetByKey``1
    name: GetByKey(Of TData)
    nameWithType: TableStorageStoreExtensions.GetByKey(Of TData)
    fullName: Cqrs.Azure.BlobStorage.TableStorageStoreExtensions.GetByKey(Of TData)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.DataStores.IDataStore{`0}.Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByName``1(System.String)
  commentId: M:Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByName``1(Cqrs.DataStores.IDataStore{``0},System.String)
  parent: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions
  definition: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByName``1(Cqrs.DataStores.IDataStore{``0},System.String)
  name: GetByName<TData>(String)
  nameWithType: BlobStorageStoreExtensions.GetByName<TData>(String)
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByName<TData>(System.String)
  nameWithType.vb: BlobStorageStoreExtensions.GetByName(Of TData)(String)
  fullName.vb: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByName(Of TData)(System.String)
  name.vb: GetByName(Of TData)(String)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByName``1(System.String)
    name: GetByName<TData>
    nameWithType: BlobStorageStoreExtensions.GetByName<TData>
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByName<TData>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByName``1(System.String)
    name: GetByName(Of TData)
    nameWithType: BlobStorageStoreExtensions.GetByName(Of TData)
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByName(Of TData)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.DataStores.IDataStore{`0}.Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByFolder``1(System.String)
  commentId: M:Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByFolder``1(Cqrs.DataStores.IDataStore{``0},System.String)
  parent: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions
  definition: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByFolder``1(Cqrs.DataStores.IDataStore{``0},System.String)
  name: GetByFolder<TData>(String)
  nameWithType: BlobStorageStoreExtensions.GetByFolder<TData>(String)
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByFolder<TData>(System.String)
  nameWithType.vb: BlobStorageStoreExtensions.GetByFolder(Of TData)(String)
  fullName.vb: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByFolder(Of TData)(System.String)
  name.vb: GetByFolder(Of TData)(String)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByFolder``1(System.String)
    name: GetByFolder<TData>
    nameWithType: BlobStorageStoreExtensions.GetByFolder<TData>
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByFolder<TData>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByFolder``1(System.String)
    name: GetByFolder(Of TData)
    nameWithType: BlobStorageStoreExtensions.GetByFolder(Of TData)
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByFolder(Of TData)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.DataStores.IDataStore{`0}.Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByFolder``1
  commentId: M:Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByFolder``1(Cqrs.DataStores.IDataStore{``0})
  parent: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions
  definition: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByFolder``1(Cqrs.DataStores.IDataStore{``0})
  name: GetByFolder<TData>()
  nameWithType: BlobStorageStoreExtensions.GetByFolder<TData>()
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByFolder<TData>()
  nameWithType.vb: BlobStorageStoreExtensions.GetByFolder(Of TData)()
  fullName.vb: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByFolder(Of TData)()
  name.vb: GetByFolder(Of TData)()
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByFolder``1
    name: GetByFolder<TData>
    nameWithType: BlobStorageStoreExtensions.GetByFolder<TData>
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByFolder<TData>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByFolder``1
    name: GetByFolder(Of TData)
    nameWithType: BlobStorageStoreExtensions.GetByFolder(Of TData)
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByFolder(Of TData)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Cqrs.Entities
  commentId: N:Cqrs.Entities
  isExternal: false
  name: Cqrs.Entities
  nameWithType: Cqrs.Entities
  fullName: Cqrs.Entities
- uid: Cqrs.Azure.BlobStorage.StorageStore`2
  commentId: T:Cqrs.Azure.BlobStorage.StorageStore`2
  isExternal: false
  name: StorageStore<TData, TSource>
  nameWithType: StorageStore<TData, TSource>
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>
  nameWithType.vb: StorageStore(Of TData, TSource)
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource)
  name.vb: StorageStore(Of TData, TSource)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2
    name: StorageStore
    nameWithType: StorageStore
    fullName: Cqrs.Azure.BlobStorage.StorageStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2
    name: StorageStore
    nameWithType: StorageStore
    fullName: Cqrs.Azure.BlobStorage.StorageStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage
  commentId: N:Cqrs.Azure.BlobStorage
  isExternal: false
  name: Cqrs.Azure.BlobStorage
  nameWithType: Cqrs.Azure.BlobStorage
  fullName: Cqrs.Azure.BlobStorage
- uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1
  commentId: T:Cqrs.Azure.BlobStorage.BlobStorageStore`1
  isExternal: false
  name: BlobStorageStore<TData>
  nameWithType: BlobStorageStore<TData>
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>
  nameWithType.vb: BlobStorageStore(Of TData)
  fullName.vb: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData)
  name.vb: BlobStorageStore(Of TData)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1
    name: BlobStorageStore
    nameWithType: BlobStorageStore
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1
    name: BlobStorageStore
    nameWithType: BlobStorageStore
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.DataStores
  commentId: N:Cqrs.DataStores
  isExternal: false
  name: Cqrs.DataStores
  nameWithType: Cqrs.DataStores
  fullName: Cqrs.DataStores
- uid: System.Linq.IOrderedQueryable`1
  commentId: T:System.Linq.IOrderedQueryable`1
  isExternal: true
  name: IOrderedQueryable<T>
  nameWithType: IOrderedQueryable<T>
  fullName: System.Linq.IOrderedQueryable<T>
  nameWithType.vb: IOrderedQueryable(Of T)
  fullName.vb: System.Linq.IOrderedQueryable(Of T)
  name.vb: IOrderedQueryable(Of T)
  spec.csharp:
  - uid: System.Linq.IOrderedQueryable`1
    name: IOrderedQueryable
    nameWithType: IOrderedQueryable
    fullName: System.Linq.IOrderedQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.IOrderedQueryable`1
    name: IOrderedQueryable
    nameWithType: IOrderedQueryable
    fullName: System.Linq.IOrderedQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq
  commentId: N:System.Linq
  isExternal: false
  name: System.Linq
  nameWithType: System.Linq
  fullName: System.Linq
- uid: System.Linq.IQueryable`1
  commentId: T:System.Linq.IQueryable`1
  isExternal: true
  name: IQueryable<T>
  nameWithType: IQueryable<T>
  fullName: System.Linq.IQueryable<T>
  nameWithType.vb: IQueryable(Of T)
  fullName.vb: System.Linq.IQueryable(Of T)
  name.vb: IQueryable(Of T)
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: false
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.GetEnumerator
  commentId: M:Cqrs.Azure.BlobStorage.BlobStorageStore`1.GetEnumerator
  isExternal: false
  name: GetEnumerator()
  nameWithType: BlobStorageStore<TData>.GetEnumerator()
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>.GetEnumerator()
  nameWithType.vb: BlobStorageStore(Of TData).GetEnumerator()
  fullName.vb: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData).GetEnumerator()
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.GetEnumerator
    name: GetEnumerator
    nameWithType: BlobStorageStore<TData>.GetEnumerator
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.GetEnumerator
    name: GetEnumerator
    nameWithType: BlobStorageStore(Of TData).GetEnumerator
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData).GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.Expression
  commentId: P:Cqrs.Azure.BlobStorage.BlobStorageStore`1.Expression
  isExternal: false
  name: Expression
  nameWithType: BlobStorageStore<TData>.Expression
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>.Expression
  nameWithType.vb: BlobStorageStore(Of TData).Expression
  fullName.vb: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData).Expression
- uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.ElementType
  commentId: P:Cqrs.Azure.BlobStorage.BlobStorageStore`1.ElementType
  isExternal: false
  name: ElementType
  nameWithType: BlobStorageStore<TData>.ElementType
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>.ElementType
  nameWithType.vb: BlobStorageStore(Of TData).ElementType
  fullName.vb: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData).ElementType
- uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.Provider
  commentId: P:Cqrs.Azure.BlobStorage.BlobStorageStore`1.Provider
  isExternal: false
  name: Provider
  nameWithType: BlobStorageStore<TData>.Provider
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>.Provider
  nameWithType.vb: BlobStorageStore(Of TData).Provider
  fullName.vb: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData).Provider
- uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.AsyncSaveData``1(`0,System.Func{`0,Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob,``0},System.Func{`0,System.String})
  commentId: M:Cqrs.Azure.BlobStorage.BlobStorageStore`1.AsyncSaveData``1(`0,System.Func{`0,Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob,``0},System.Func{`0,System.String})
  isExternal: true
  name: AsyncSaveData<TResult>(TData, Func<TData, CloudBlockBlob, TResult>, Func<TData, String>)
  nameWithType: BlobStorageStore<TData>.AsyncSaveData<TResult>(TData, Func<TData, CloudBlockBlob, TResult>, Func<TData, String>)
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>.AsyncSaveData<TResult>(TData, System.Func<TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob, TResult>, System.Func<TData, System.String>)
  nameWithType.vb: BlobStorageStore(Of TData).AsyncSaveData(Of TResult)(TData, Func(Of TData, CloudBlockBlob, TResult), Func(Of TData, String))
  fullName.vb: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData).AsyncSaveData(Of TResult)(TData, System.Func(Of TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob, TResult), System.Func(Of TData, System.String))
  name.vb: AsyncSaveData(Of TResult)(TData, Func(Of TData, CloudBlockBlob, TResult), Func(Of TData, String))
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.AsyncSaveData``1(`0,System.Func{`0,Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob,``0},System.Func{`0,System.String})
    name: AsyncSaveData<TResult>
    nameWithType: BlobStorageStore<TData>.AsyncSaveData<TResult>
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>.AsyncSaveData<TResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob
    name: CloudBlockBlob
    nameWithType: CloudBlockBlob
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.AsyncSaveData``1(`0,System.Func{`0,Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob,``0},System.Func{`0,System.String})
    name: AsyncSaveData(Of TResult)
    nameWithType: BlobStorageStore(Of TData).AsyncSaveData(Of TResult)
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData).AsyncSaveData(Of TResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob
    name: CloudBlockBlob
    nameWithType: CloudBlockBlob
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.Add(`0)
  commentId: M:Cqrs.Azure.BlobStorage.BlobStorageStore`1.Add(`0)
  isExternal: false
  name: Add(TData)
  nameWithType: BlobStorageStore<TData>.Add(TData)
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>.Add(TData)
  nameWithType.vb: BlobStorageStore(Of TData).Add(TData)
  fullName.vb: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData).Add(TData)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.Add(`0)
    name: Add
    nameWithType: BlobStorageStore<TData>.Add
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>.Add
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.Add(`0)
    name: Add
    nameWithType: BlobStorageStore(Of TData).Add
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData).Add
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.Destroy(`0)
  commentId: M:Cqrs.Azure.BlobStorage.BlobStorageStore`1.Destroy(`0)
  isExternal: false
  name: Destroy(TData)
  nameWithType: BlobStorageStore<TData>.Destroy(TData)
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>.Destroy(TData)
  nameWithType.vb: BlobStorageStore(Of TData).Destroy(TData)
  fullName.vb: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData).Destroy(TData)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.Destroy(`0)
    name: Destroy
    nameWithType: BlobStorageStore<TData>.Destroy
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>.Destroy
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.Destroy(`0)
    name: Destroy
    nameWithType: BlobStorageStore(Of TData).Destroy
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData).Destroy
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.RemoveAll
  commentId: M:Cqrs.Azure.BlobStorage.BlobStorageStore`1.RemoveAll
  isExternal: false
  name: RemoveAll()
  nameWithType: BlobStorageStore<TData>.RemoveAll()
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>.RemoveAll()
  nameWithType.vb: BlobStorageStore(Of TData).RemoveAll()
  fullName.vb: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData).RemoveAll()
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.RemoveAll
    name: RemoveAll
    nameWithType: BlobStorageStore<TData>.RemoveAll
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>.RemoveAll
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.RemoveAll
    name: RemoveAll
    nameWithType: BlobStorageStore(Of TData).RemoveAll
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData).RemoveAll
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.Update(`0)
  commentId: M:Cqrs.Azure.BlobStorage.BlobStorageStore`1.Update(`0)
  isExternal: false
  name: Update(TData)
  nameWithType: BlobStorageStore<TData>.Update(TData)
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>.Update(TData)
  nameWithType.vb: BlobStorageStore(Of TData).Update(TData)
  fullName.vb: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData).Update(TData)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.Update(`0)
    name: Update
    nameWithType: BlobStorageStore<TData>.Update
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>.Update
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.Update(`0)
    name: Update
    nameWithType: BlobStorageStore(Of TData).Update
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData).Update
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String,System.Boolean)
  commentId: M:Cqrs.Azure.BlobStorage.BlobStorageStore`1.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String,System.Boolean)
  isExternal: true
  name: CreateSource(CloudStorageAccount, String, Boolean)
  nameWithType: BlobStorageStore<TData>.CreateSource(CloudStorageAccount, String, Boolean)
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount, System.String, System.Boolean)
  nameWithType.vb: BlobStorageStore(Of TData).CreateSource(CloudStorageAccount, String, Boolean)
  fullName.vb: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData).CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount, System.String, System.Boolean)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String,System.Boolean)
    name: CreateSource
    nameWithType: BlobStorageStore<TData>.CreateSource
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>.CreateSource
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.CloudStorageAccount
    name: CloudStorageAccount
    nameWithType: CloudStorageAccount
    fullName: Microsoft.WindowsAzure.Storage.CloudStorageAccount
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String,System.Boolean)
    name: CreateSource
    nameWithType: BlobStorageStore(Of TData).CreateSource
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData).CreateSource
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.CloudStorageAccount
    name: CloudStorageAccount
    nameWithType: CloudStorageAccount
    fullName: Microsoft.WindowsAzure.Storage.CloudStorageAccount
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.OpenStreamsForReading(System.Func{Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob,System.Boolean},System.String,System.String)
  commentId: M:Cqrs.Azure.BlobStorage.BlobStorageStore`1.OpenStreamsForReading(System.Func{Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob,System.Boolean},System.String,System.String)
  isExternal: true
  name: OpenStreamsForReading(Func<CloudBlockBlob, Boolean>, String, String)
  nameWithType: BlobStorageStore<TData>.OpenStreamsForReading(Func<CloudBlockBlob, Boolean>, String, String)
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>.OpenStreamsForReading(System.Func<Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob, System.Boolean>, System.String, System.String)
  nameWithType.vb: BlobStorageStore(Of TData).OpenStreamsForReading(Func(Of CloudBlockBlob, Boolean), String, String)
  fullName.vb: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData).OpenStreamsForReading(System.Func(Of Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob, System.Boolean), System.String, System.String)
  name.vb: OpenStreamsForReading(Func(Of CloudBlockBlob, Boolean), String, String)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.OpenStreamsForReading(System.Func{Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob,System.Boolean},System.String,System.String)
    name: OpenStreamsForReading
    nameWithType: BlobStorageStore<TData>.OpenStreamsForReading
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>.OpenStreamsForReading
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob
    name: CloudBlockBlob
    nameWithType: CloudBlockBlob
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.OpenStreamsForReading(System.Func{Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob,System.Boolean},System.String,System.String)
    name: OpenStreamsForReading
    nameWithType: BlobStorageStore(Of TData).OpenStreamsForReading
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData).OpenStreamsForReading
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob
    name: CloudBlockBlob
    nameWithType: CloudBlockBlob
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.GetBlobReference(Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer,System.String)
  commentId: M:Cqrs.Azure.BlobStorage.BlobStorageStore`1.GetBlobReference(Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer,System.String)
  isExternal: true
  name: GetBlobReference(CloudBlobContainer, String)
  nameWithType: BlobStorageStore<TData>.GetBlobReference(CloudBlobContainer, String)
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>.GetBlobReference(Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer, System.String)
  nameWithType.vb: BlobStorageStore(Of TData).GetBlobReference(CloudBlobContainer, String)
  fullName.vb: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData).GetBlobReference(Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer, System.String)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.GetBlobReference(Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer,System.String)
    name: GetBlobReference
    nameWithType: BlobStorageStore<TData>.GetBlobReference
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>.GetBlobReference
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
    name: CloudBlobContainer
    nameWithType: CloudBlobContainer
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.GetBlobReference(Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer,System.String)
    name: GetBlobReference
    nameWithType: BlobStorageStore(Of TData).GetBlobReference
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData).GetBlobReference
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
    name: CloudBlobContainer
    nameWithType: CloudBlobContainer
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.GetByName(System.String)
  commentId: M:Cqrs.Azure.BlobStorage.BlobStorageStore`1.GetByName(System.String)
  isExternal: true
  name: GetByName(String)
  nameWithType: BlobStorageStore<TData>.GetByName(String)
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>.GetByName(System.String)
  nameWithType.vb: BlobStorageStore(Of TData).GetByName(String)
  fullName.vb: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData).GetByName(System.String)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.GetByName(System.String)
    name: GetByName
    nameWithType: BlobStorageStore<TData>.GetByName
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>.GetByName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.GetByName(System.String)
    name: GetByName
    nameWithType: BlobStorageStore(Of TData).GetByName
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData).GetByName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.GetByFolder(System.String)
  commentId: M:Cqrs.Azure.BlobStorage.BlobStorageStore`1.GetByFolder(System.String)
  isExternal: true
  name: GetByFolder(String)
  nameWithType: BlobStorageStore<TData>.GetByFolder(String)
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>.GetByFolder(System.String)
  nameWithType.vb: BlobStorageStore(Of TData).GetByFolder(String)
  fullName.vb: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData).GetByFolder(System.String)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.GetByFolder(System.String)
    name: GetByFolder
    nameWithType: BlobStorageStore<TData>.GetByFolder
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>.GetByFolder
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.GetByFolder(System.String)
    name: GetByFolder
    nameWithType: BlobStorageStore(Of TData).GetByFolder
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData).GetByFolder
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.WritableCollection
  commentId: P:Cqrs.Azure.BlobStorage.StorageStore`2.WritableCollection
  isExternal: false
  name: WritableCollection
  nameWithType: StorageStore<TData, TSource>.WritableCollection
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.WritableCollection
  nameWithType.vb: StorageStore(Of TData, TSource).WritableCollection
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).WritableCollection
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.ReadableStorageAccount
  commentId: P:Cqrs.Azure.BlobStorage.StorageStore`2.ReadableStorageAccount
  isExternal: false
  name: ReadableStorageAccount
  nameWithType: StorageStore<TData, TSource>.ReadableStorageAccount
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.ReadableStorageAccount
  nameWithType.vb: StorageStore(Of TData, TSource).ReadableStorageAccount
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).ReadableStorageAccount
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.Logger
  commentId: P:Cqrs.Azure.BlobStorage.StorageStore`2.Logger
  isExternal: false
  name: Logger
  nameWithType: StorageStore<TData, TSource>.Logger
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.Logger
  nameWithType.vb: StorageStore(Of TData, TSource).Logger
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).Logger
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetContainerName
  commentId: P:Cqrs.Azure.BlobStorage.StorageStore`2.GetContainerName
  isExternal: false
  name: GetContainerName
  nameWithType: StorageStore<TData, TSource>.GetContainerName
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.GetContainerName
  nameWithType.vb: StorageStore(Of TData, TSource).GetContainerName
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).GetContainerName
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.IsContainerPublic
  commentId: P:Cqrs.Azure.BlobStorage.StorageStore`2.IsContainerPublic
  isExternal: false
  name: IsContainerPublic
  nameWithType: StorageStore<TData, TSource>.IsContainerPublic
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.IsContainerPublic
  nameWithType.vb: StorageStore(Of TData, TSource).IsContainerPublic
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).IsContainerPublic
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.DefaultSettings
  commentId: P:Cqrs.Azure.BlobStorage.StorageStore`2.DefaultSettings
  isExternal: false
  name: DefaultSettings
  nameWithType: StorageStore<TData, TSource>.DefaultSettings
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.DefaultSettings
  nameWithType.vb: StorageStore(Of TData, TSource).DefaultSettings
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).DefaultSettings
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.Initialise(Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory)
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore`2.Initialise(Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory)
  isExternal: false
  name: Initialise(IStorageStoreConnectionStringFactory)
  nameWithType: StorageStore<TData, TSource>.Initialise(IStorageStoreConnectionStringFactory)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.Initialise(Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory)
  nameWithType.vb: StorageStore(Of TData, TSource).Initialise(IStorageStoreConnectionStringFactory)
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).Initialise(Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Initialise(Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory)
    name: Initialise
    nameWithType: StorageStore<TData, TSource>.Initialise
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.Initialise
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory
    name: IStorageStoreConnectionStringFactory
    nameWithType: IStorageStoreConnectionStringFactory
    fullName: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Initialise(Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory)
    name: Initialise
    nameWithType: StorageStore(Of TData, TSource).Initialise
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).Initialise
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory
    name: IStorageStoreConnectionStringFactory
    nameWithType: IStorageStoreConnectionStringFactory
    fullName: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetEnumerator
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore`2.GetEnumerator
  isExternal: false
  name: GetEnumerator()
  nameWithType: StorageStore<TData, TSource>.GetEnumerator()
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.GetEnumerator()
  nameWithType.vb: StorageStore(Of TData, TSource).GetEnumerator()
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).GetEnumerator()
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetEnumerator
    name: GetEnumerator
    nameWithType: StorageStore<TData, TSource>.GetEnumerator
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetEnumerator
    name: GetEnumerator
    nameWithType: StorageStore(Of TData, TSource).GetEnumerator
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.System#Collections#IEnumerable#GetEnumerator
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore`2.System#Collections#IEnumerable#GetEnumerator
  isExternal: false
  name: IEnumerable.GetEnumerator()
  nameWithType: StorageStore<TData, TSource>.IEnumerable.GetEnumerator()
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.System.Collections.IEnumerable.GetEnumerator()
  nameWithType.vb: StorageStore(Of TData, TSource).System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.System#Collections#IEnumerable#GetEnumerator
    name: IEnumerable.GetEnumerator
    nameWithType: StorageStore<TData, TSource>.IEnumerable.GetEnumerator
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.System.Collections.IEnumerable.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.System#Collections#IEnumerable#GetEnumerator
    name: System.Collections.IEnumerable.GetEnumerator
    nameWithType: StorageStore(Of TData, TSource).System.Collections.IEnumerable.GetEnumerator
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).System.Collections.IEnumerable.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.Expression
  commentId: P:Cqrs.Azure.BlobStorage.StorageStore`2.Expression
  isExternal: false
  name: Expression
  nameWithType: StorageStore<TData, TSource>.Expression
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.Expression
  nameWithType.vb: StorageStore(Of TData, TSource).Expression
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).Expression
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.ElementType
  commentId: P:Cqrs.Azure.BlobStorage.StorageStore`2.ElementType
  isExternal: false
  name: ElementType
  nameWithType: StorageStore<TData, TSource>.ElementType
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.ElementType
  nameWithType.vb: StorageStore(Of TData, TSource).ElementType
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).ElementType
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.Provider
  commentId: P:Cqrs.Azure.BlobStorage.StorageStore`2.Provider
  isExternal: false
  name: Provider
  nameWithType: StorageStore<TData, TSource>.Provider
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.Provider
  nameWithType.vb: StorageStore(Of TData, TSource).Provider
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).Provider
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.Dispose
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore`2.Dispose
  isExternal: false
  name: Dispose()
  nameWithType: StorageStore<TData, TSource>.Dispose()
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.Dispose()
  nameWithType.vb: StorageStore(Of TData, TSource).Dispose()
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).Dispose()
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Dispose
    name: Dispose
    nameWithType: StorageStore<TData, TSource>.Dispose
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Dispose
    name: Dispose
    nameWithType: StorageStore(Of TData, TSource).Dispose
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.Add(`0)
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore`2.Add(`0)
  isExternal: false
  name: Add(TData)
  nameWithType: StorageStore<TData, TSource>.Add(TData)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.Add(TData)
  nameWithType.vb: StorageStore(Of TData, TSource).Add(TData)
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).Add(TData)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Add(`0)
    name: Add
    nameWithType: StorageStore<TData, TSource>.Add
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.Add
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Add(`0)
    name: Add
    nameWithType: StorageStore(Of TData, TSource).Add
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).Add
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.Add(System.Collections.Generic.IEnumerable{`0})
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore`2.Add(System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  name: Add(IEnumerable<TData>)
  nameWithType: StorageStore<TData, TSource>.Add(IEnumerable<TData>)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.Add(System.Collections.Generic.IEnumerable<TData>)
  nameWithType.vb: StorageStore(Of TData, TSource).Add(IEnumerable(Of TData))
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).Add(System.Collections.Generic.IEnumerable(Of TData))
  name.vb: Add(IEnumerable(Of TData))
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Add(System.Collections.Generic.IEnumerable{`0})
    name: Add
    nameWithType: StorageStore<TData, TSource>.Add
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Add(System.Collections.Generic.IEnumerable{`0})
    name: Add
    nameWithType: StorageStore(Of TData, TSource).Add
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.Destroy(`0)
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore`2.Destroy(`0)
  isExternal: false
  name: Destroy(TData)
  nameWithType: StorageStore<TData, TSource>.Destroy(TData)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.Destroy(TData)
  nameWithType.vb: StorageStore(Of TData, TSource).Destroy(TData)
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).Destroy(TData)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Destroy(`0)
    name: Destroy
    nameWithType: StorageStore<TData, TSource>.Destroy
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.Destroy
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Destroy(`0)
    name: Destroy
    nameWithType: StorageStore(Of TData, TSource).Destroy
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).Destroy
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.RemoveAll
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore`2.RemoveAll
  isExternal: false
  name: RemoveAll()
  nameWithType: StorageStore<TData, TSource>.RemoveAll()
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.RemoveAll()
  nameWithType.vb: StorageStore(Of TData, TSource).RemoveAll()
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).RemoveAll()
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.RemoveAll
    name: RemoveAll
    nameWithType: StorageStore<TData, TSource>.RemoveAll
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.RemoveAll
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.RemoveAll
    name: RemoveAll
    nameWithType: StorageStore(Of TData, TSource).RemoveAll
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).RemoveAll
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.Update(`0)
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore`2.Update(`0)
  isExternal: false
  name: Update(TData)
  nameWithType: StorageStore<TData, TSource>.Update(TData)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.Update(TData)
  nameWithType.vb: StorageStore(Of TData, TSource).Update(TData)
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).Update(TData)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Update(`0)
    name: Update
    nameWithType: StorageStore<TData, TSource>.Update
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.Update
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Update(`0)
    name: Update
    nameWithType: StorageStore(Of TData, TSource).Update
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).Update
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String,System.Boolean)
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore`2.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String,System.Boolean)
  isExternal: true
  name: CreateSource(CloudStorageAccount, String, Boolean)
  nameWithType: StorageStore<TData, TSource>.CreateSource(CloudStorageAccount, String, Boolean)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount, System.String, System.Boolean)
  nameWithType.vb: StorageStore(Of TData, TSource).CreateSource(CloudStorageAccount, String, Boolean)
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount, System.String, System.Boolean)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String,System.Boolean)
    name: CreateSource
    nameWithType: StorageStore<TData, TSource>.CreateSource
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.CreateSource
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.CloudStorageAccount
    name: CloudStorageAccount
    nameWithType: CloudStorageAccount
    fullName: Microsoft.WindowsAzure.Storage.CloudStorageAccount
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String,System.Boolean)
    name: CreateSource
    nameWithType: StorageStore(Of TData, TSource).CreateSource
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).CreateSource
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.CloudStorageAccount
    name: CloudStorageAccount
    nameWithType: CloudStorageAccount
    fullName: Microsoft.WindowsAzure.Storage.CloudStorageAccount
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetSafeSourceName(System.String)
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore`2.GetSafeSourceName(System.String)
  isExternal: true
  name: GetSafeSourceName(String)
  nameWithType: StorageStore<TData, TSource>.GetSafeSourceName(String)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.GetSafeSourceName(System.String)
  nameWithType.vb: StorageStore(Of TData, TSource).GetSafeSourceName(String)
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).GetSafeSourceName(System.String)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetSafeSourceName(System.String)
    name: GetSafeSourceName
    nameWithType: StorageStore<TData, TSource>.GetSafeSourceName
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.GetSafeSourceName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetSafeSourceName(System.String)
    name: GetSafeSourceName
    nameWithType: StorageStore(Of TData, TSource).GetSafeSourceName
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).GetSafeSourceName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetSafeSourceName(System.String,System.Boolean)
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore`2.GetSafeSourceName(System.String,System.Boolean)
  isExternal: true
  name: GetSafeSourceName(String, Boolean)
  nameWithType: StorageStore<TData, TSource>.GetSafeSourceName(String, Boolean)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.GetSafeSourceName(System.String, System.Boolean)
  nameWithType.vb: StorageStore(Of TData, TSource).GetSafeSourceName(String, Boolean)
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).GetSafeSourceName(System.String, System.Boolean)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetSafeSourceName(System.String,System.Boolean)
    name: GetSafeSourceName
    nameWithType: StorageStore<TData, TSource>.GetSafeSourceName
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.GetSafeSourceName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetSafeSourceName(System.String,System.Boolean)
    name: GetSafeSourceName
    nameWithType: StorageStore(Of TData, TSource).GetSafeSourceName
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).GetSafeSourceName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.AzureStorageRetryPolicy
  commentId: P:Cqrs.Azure.BlobStorage.StorageStore`2.AzureStorageRetryPolicy
  isExternal: false
  name: AzureStorageRetryPolicy
  nameWithType: StorageStore<TData, TSource>.AzureStorageRetryPolicy
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.AzureStorageRetryPolicy
  nameWithType.vb: StorageStore(Of TData, TSource).AzureStorageRetryPolicy
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).AzureStorageRetryPolicy
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.Deserialise(System.IO.Stream)
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore`2.Deserialise(System.IO.Stream)
  isExternal: true
  name: Deserialise(Stream)
  nameWithType: StorageStore<TData, TSource>.Deserialise(Stream)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.Deserialise(System.IO.Stream)
  nameWithType.vb: StorageStore(Of TData, TSource).Deserialise(Stream)
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).Deserialise(System.IO.Stream)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Deserialise(System.IO.Stream)
    name: Deserialise
    nameWithType: StorageStore<TData, TSource>.Deserialise
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.Deserialise
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Deserialise(System.IO.Stream)
    name: Deserialise
    nameWithType: StorageStore(Of TData, TSource).Deserialise
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).Deserialise
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.Deserialise(System.String)
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore`2.Deserialise(System.String)
  isExternal: true
  name: Deserialise(String)
  nameWithType: StorageStore<TData, TSource>.Deserialise(String)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.Deserialise(System.String)
  nameWithType.vb: StorageStore(Of TData, TSource).Deserialise(String)
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).Deserialise(System.String)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Deserialise(System.String)
    name: Deserialise
    nameWithType: StorageStore<TData, TSource>.Deserialise
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.Deserialise
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Deserialise(System.String)
    name: Deserialise
    nameWithType: StorageStore(Of TData, TSource).Deserialise
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).Deserialise
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.Serialise(`0)
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore`2.Serialise(`0)
  isExternal: false
  name: Serialise(TData)
  nameWithType: StorageStore<TData, TSource>.Serialise(TData)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.Serialise(TData)
  nameWithType.vb: StorageStore(Of TData, TSource).Serialise(TData)
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).Serialise(TData)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Serialise(`0)
    name: Serialise
    nameWithType: StorageStore<TData, TSource>.Serialise
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.Serialise
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Serialise(`0)
    name: Serialise
    nameWithType: StorageStore(Of TData, TSource).Serialise
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).Serialise
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetSerialisationSettings
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore`2.GetSerialisationSettings
  isExternal: false
  name: GetSerialisationSettings()
  nameWithType: StorageStore<TData, TSource>.GetSerialisationSettings()
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.GetSerialisationSettings()
  nameWithType.vb: StorageStore(Of TData, TSource).GetSerialisationSettings()
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).GetSerialisationSettings()
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetSerialisationSettings
    name: GetSerialisationSettings
    nameWithType: StorageStore<TData, TSource>.GetSerialisationSettings
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.GetSerialisationSettings
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetSerialisationSettings
    name: GetSerialisationSettings
    nameWithType: StorageStore(Of TData, TSource).GetSerialisationSettings
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).GetSerialisationSettings
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetSerialiser
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore`2.GetSerialiser
  isExternal: false
  name: GetSerialiser()
  nameWithType: StorageStore<TData, TSource>.GetSerialiser()
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.GetSerialiser()
  nameWithType.vb: StorageStore(Of TData, TSource).GetSerialiser()
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).GetSerialiser()
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetSerialiser
    name: GetSerialiser
    nameWithType: StorageStore<TData, TSource>.GetSerialiser
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.GetSerialiser
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetSerialiser
    name: GetSerialiser
    nameWithType: StorageStore(Of TData, TSource).GetSerialiser
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).GetSerialiser
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Sql.DataStores.SqlDataStoreExtensions.Where``2(Cqrs.DataStores.IDataStore{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  commentId: M:Cqrs.Sql.DataStores.SqlDataStoreExtensions.Where``2(Cqrs.DataStores.IDataStore{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  isExternal: true
  name: Where<TEntity, TDbEntity>(IDataStore<TEntity>, Expression<Func<TEntity, Boolean>>)
  nameWithType: SqlDataStoreExtensions.Where<TEntity, TDbEntity>(IDataStore<TEntity>, Expression<Func<TEntity, Boolean>>)
  fullName: Cqrs.Sql.DataStores.SqlDataStoreExtensions.Where<TEntity, TDbEntity>(Cqrs.DataStores.IDataStore<TEntity>, System.Linq.Expressions.Expression<System.Func<TEntity, System.Boolean>>)
  nameWithType.vb: SqlDataStoreExtensions.Where(Of TEntity, TDbEntity)(IDataStore(Of TEntity), Expression(Of Func(Of TEntity, Boolean)))
  fullName.vb: Cqrs.Sql.DataStores.SqlDataStoreExtensions.Where(Of TEntity, TDbEntity)(Cqrs.DataStores.IDataStore(Of TEntity), System.Linq.Expressions.Expression(Of System.Func(Of TEntity, System.Boolean)))
  name.vb: Where(Of TEntity, TDbEntity)(IDataStore(Of TEntity), Expression(Of Func(Of TEntity, Boolean)))
  spec.csharp:
  - uid: Cqrs.Sql.DataStores.SqlDataStoreExtensions.Where``2(Cqrs.DataStores.IDataStore{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
    name: Where<TEntity, TDbEntity>
    nameWithType: SqlDataStoreExtensions.Where<TEntity, TDbEntity>
    fullName: Cqrs.Sql.DataStores.SqlDataStoreExtensions.Where<TEntity, TDbEntity>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.DataStores.IDataStore`1
    name: IDataStore
    nameWithType: IDataStore
    fullName: Cqrs.DataStores.IDataStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Sql.DataStores.SqlDataStoreExtensions.Where``2(Cqrs.DataStores.IDataStore{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
    name: Where(Of TEntity, TDbEntity)
    nameWithType: SqlDataStoreExtensions.Where(Of TEntity, TDbEntity)
    fullName: Cqrs.Sql.DataStores.SqlDataStoreExtensions.Where(Of TEntity, TDbEntity)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.DataStores.IDataStore`1
    name: IDataStore
    nameWithType: IDataStore
    fullName: Cqrs.DataStores.IDataStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Sql.DataStores.SqlDataStoreExtensions
  commentId: T:Cqrs.Sql.DataStores.SqlDataStoreExtensions
  parent: Cqrs.Sql.DataStores
  isExternal: false
  name: SqlDataStoreExtensions
  nameWithType: SqlDataStoreExtensions
  fullName: Cqrs.Sql.DataStores.SqlDataStoreExtensions
- uid: Cqrs.Azure.BlobStorage.TableStorageStoreExtensions.GetByKeyAndRow``1(Cqrs.DataStores.IDataStore{``0},System.Guid)
  commentId: M:Cqrs.Azure.BlobStorage.TableStorageStoreExtensions.GetByKeyAndRow``1(Cqrs.DataStores.IDataStore{``0},System.Guid)
  isExternal: true
  name: GetByKeyAndRow<TData>(IDataStore<TData>, Guid)
  nameWithType: TableStorageStoreExtensions.GetByKeyAndRow<TData>(IDataStore<TData>, Guid)
  fullName: Cqrs.Azure.BlobStorage.TableStorageStoreExtensions.GetByKeyAndRow<TData>(Cqrs.DataStores.IDataStore<TData>, System.Guid)
  nameWithType.vb: TableStorageStoreExtensions.GetByKeyAndRow(Of TData)(IDataStore(Of TData), Guid)
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStoreExtensions.GetByKeyAndRow(Of TData)(Cqrs.DataStores.IDataStore(Of TData), System.Guid)
  name.vb: GetByKeyAndRow(Of TData)(IDataStore(Of TData), Guid)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStoreExtensions.GetByKeyAndRow``1(Cqrs.DataStores.IDataStore{``0},System.Guid)
    name: GetByKeyAndRow<TData>
    nameWithType: TableStorageStoreExtensions.GetByKeyAndRow<TData>
    fullName: Cqrs.Azure.BlobStorage.TableStorageStoreExtensions.GetByKeyAndRow<TData>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.DataStores.IDataStore`1
    name: IDataStore
    nameWithType: IDataStore
    fullName: Cqrs.DataStores.IDataStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStoreExtensions.GetByKeyAndRow``1(Cqrs.DataStores.IDataStore{``0},System.Guid)
    name: GetByKeyAndRow(Of TData)
    nameWithType: TableStorageStoreExtensions.GetByKeyAndRow(Of TData)
    fullName: Cqrs.Azure.BlobStorage.TableStorageStoreExtensions.GetByKeyAndRow(Of TData)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.DataStores.IDataStore`1
    name: IDataStore
    nameWithType: IDataStore
    fullName: Cqrs.DataStores.IDataStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.TableStorageStoreExtensions
  commentId: T:Cqrs.Azure.BlobStorage.TableStorageStoreExtensions
  parent: Cqrs.Azure.BlobStorage
  isExternal: false
  name: TableStorageStoreExtensions
  nameWithType: TableStorageStoreExtensions
  fullName: Cqrs.Azure.BlobStorage.TableStorageStoreExtensions
- uid: Cqrs.Azure.BlobStorage.TableStorageStoreExtensions.GetByKey``1(Cqrs.DataStores.IDataStore{``0})
  commentId: M:Cqrs.Azure.BlobStorage.TableStorageStoreExtensions.GetByKey``1(Cqrs.DataStores.IDataStore{``0})
  isExternal: false
  name: GetByKey<TData>(IDataStore<TData>)
  nameWithType: TableStorageStoreExtensions.GetByKey<TData>(IDataStore<TData>)
  fullName: Cqrs.Azure.BlobStorage.TableStorageStoreExtensions.GetByKey<TData>(Cqrs.DataStores.IDataStore<TData>)
  nameWithType.vb: TableStorageStoreExtensions.GetByKey(Of TData)(IDataStore(Of TData))
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStoreExtensions.GetByKey(Of TData)(Cqrs.DataStores.IDataStore(Of TData))
  name.vb: GetByKey(Of TData)(IDataStore(Of TData))
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStoreExtensions.GetByKey``1(Cqrs.DataStores.IDataStore{``0})
    name: GetByKey<TData>
    nameWithType: TableStorageStoreExtensions.GetByKey<TData>
    fullName: Cqrs.Azure.BlobStorage.TableStorageStoreExtensions.GetByKey<TData>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.DataStores.IDataStore`1
    name: IDataStore
    nameWithType: IDataStore
    fullName: Cqrs.DataStores.IDataStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStoreExtensions.GetByKey``1(Cqrs.DataStores.IDataStore{``0})
    name: GetByKey(Of TData)
    nameWithType: TableStorageStoreExtensions.GetByKey(Of TData)
    fullName: Cqrs.Azure.BlobStorage.TableStorageStoreExtensions.GetByKey(Of TData)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.DataStores.IDataStore`1
    name: IDataStore
    nameWithType: IDataStore
    fullName: Cqrs.DataStores.IDataStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByName``1(Cqrs.DataStores.IDataStore{``0},System.String)
  commentId: M:Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByName``1(Cqrs.DataStores.IDataStore{``0},System.String)
  isExternal: true
  name: GetByName<TData>(IDataStore<TData>, String)
  nameWithType: BlobStorageStoreExtensions.GetByName<TData>(IDataStore<TData>, String)
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByName<TData>(Cqrs.DataStores.IDataStore<TData>, System.String)
  nameWithType.vb: BlobStorageStoreExtensions.GetByName(Of TData)(IDataStore(Of TData), String)
  fullName.vb: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByName(Of TData)(Cqrs.DataStores.IDataStore(Of TData), System.String)
  name.vb: GetByName(Of TData)(IDataStore(Of TData), String)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByName``1(Cqrs.DataStores.IDataStore{``0},System.String)
    name: GetByName<TData>
    nameWithType: BlobStorageStoreExtensions.GetByName<TData>
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByName<TData>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.DataStores.IDataStore`1
    name: IDataStore
    nameWithType: IDataStore
    fullName: Cqrs.DataStores.IDataStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByName``1(Cqrs.DataStores.IDataStore{``0},System.String)
    name: GetByName(Of TData)
    nameWithType: BlobStorageStoreExtensions.GetByName(Of TData)
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByName(Of TData)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.DataStores.IDataStore`1
    name: IDataStore
    nameWithType: IDataStore
    fullName: Cqrs.DataStores.IDataStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions
  commentId: T:Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions
  parent: Cqrs.Azure.BlobStorage
  isExternal: false
  name: BlobStorageStoreExtensions
  nameWithType: BlobStorageStoreExtensions
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions
- uid: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByFolder``1(Cqrs.DataStores.IDataStore{``0},System.String)
  commentId: M:Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByFolder``1(Cqrs.DataStores.IDataStore{``0},System.String)
  isExternal: true
  name: GetByFolder<TData>(IDataStore<TData>, String)
  nameWithType: BlobStorageStoreExtensions.GetByFolder<TData>(IDataStore<TData>, String)
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByFolder<TData>(Cqrs.DataStores.IDataStore<TData>, System.String)
  nameWithType.vb: BlobStorageStoreExtensions.GetByFolder(Of TData)(IDataStore(Of TData), String)
  fullName.vb: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByFolder(Of TData)(Cqrs.DataStores.IDataStore(Of TData), System.String)
  name.vb: GetByFolder(Of TData)(IDataStore(Of TData), String)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByFolder``1(Cqrs.DataStores.IDataStore{``0},System.String)
    name: GetByFolder<TData>
    nameWithType: BlobStorageStoreExtensions.GetByFolder<TData>
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByFolder<TData>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.DataStores.IDataStore`1
    name: IDataStore
    nameWithType: IDataStore
    fullName: Cqrs.DataStores.IDataStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByFolder``1(Cqrs.DataStores.IDataStore{``0},System.String)
    name: GetByFolder(Of TData)
    nameWithType: BlobStorageStoreExtensions.GetByFolder(Of TData)
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByFolder(Of TData)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.DataStores.IDataStore`1
    name: IDataStore
    nameWithType: IDataStore
    fullName: Cqrs.DataStores.IDataStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByFolder``1(Cqrs.DataStores.IDataStore{``0})
  commentId: M:Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByFolder``1(Cqrs.DataStores.IDataStore{``0})
  isExternal: false
  name: GetByFolder<TData>(IDataStore<TData>)
  nameWithType: BlobStorageStoreExtensions.GetByFolder<TData>(IDataStore<TData>)
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByFolder<TData>(Cqrs.DataStores.IDataStore<TData>)
  nameWithType.vb: BlobStorageStoreExtensions.GetByFolder(Of TData)(IDataStore(Of TData))
  fullName.vb: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByFolder(Of TData)(Cqrs.DataStores.IDataStore(Of TData))
  name.vb: GetByFolder(Of TData)(IDataStore(Of TData))
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByFolder``1(Cqrs.DataStores.IDataStore{``0})
    name: GetByFolder<TData>
    nameWithType: BlobStorageStoreExtensions.GetByFolder<TData>
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByFolder<TData>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.DataStores.IDataStore`1
    name: IDataStore
    nameWithType: IDataStore
    fullName: Cqrs.DataStores.IDataStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByFolder``1(Cqrs.DataStores.IDataStore{``0})
    name: GetByFolder(Of TData)
    nameWithType: BlobStorageStoreExtensions.GetByFolder(Of TData)
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByFolder(Of TData)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.DataStores.IDataStore`1
    name: IDataStore
    nameWithType: IDataStore
    fullName: Cqrs.DataStores.IDataStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Sql.DataStores
  commentId: N:Cqrs.Sql.DataStores
  isExternal: false
  name: Cqrs.Sql.DataStores
  nameWithType: Cqrs.Sql.DataStores
  fullName: Cqrs.Sql.DataStores
- uid: Cqrs.Azure.BlobStorage.DataStores.BlobStorageDataStore`1.#ctor*
  commentId: Overload:Cqrs.Azure.BlobStorage.DataStores.BlobStorageDataStore`1.#ctor
  isExternal: false
  name: BlobStorageDataStore
  nameWithType: BlobStorageDataStore<TData>.BlobStorageDataStore
  fullName: Cqrs.Azure.BlobStorage.DataStores.BlobStorageDataStore<TData>.BlobStorageDataStore
  nameWithType.vb: BlobStorageDataStore(Of TData).BlobStorageDataStore
  fullName.vb: Cqrs.Azure.BlobStorage.DataStores.BlobStorageDataStore(Of TData).BlobStorageDataStore
- uid: cdmdotnet.Logging.ILogger
  commentId: T:cdmdotnet.Logging.ILogger
  parent: cdmdotnet.Logging
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: cdmdotnet.Logging.ILogger
- uid: Cqrs.Azure.BlobStorage.DataStores.IBlobStorageDataStoreConnectionStringFactory
  commentId: T:Cqrs.Azure.BlobStorage.DataStores.IBlobStorageDataStoreConnectionStringFactory
  parent: Cqrs.Azure.BlobStorage.DataStores
  isExternal: false
  name: IBlobStorageDataStoreConnectionStringFactory
  nameWithType: IBlobStorageDataStoreConnectionStringFactory
  fullName: Cqrs.Azure.BlobStorage.DataStores.IBlobStorageDataStoreConnectionStringFactory
- uid: cdmdotnet.Logging
  commentId: N:cdmdotnet.Logging
  isExternal: false
  name: cdmdotnet.Logging
  nameWithType: cdmdotnet.Logging
  fullName: cdmdotnet.Logging
- uid: Cqrs.Azure.BlobStorage.DataStores.BlobStorageDataStore`1.Remove*
  commentId: Overload:Cqrs.Azure.BlobStorage.DataStores.BlobStorageDataStore`1.Remove
  isExternal: false
  name: Remove
  nameWithType: BlobStorageDataStore<TData>.Remove
  fullName: Cqrs.Azure.BlobStorage.DataStores.BlobStorageDataStore<TData>.Remove
  nameWithType.vb: BlobStorageDataStore(Of TData).Remove
  fullName.vb: Cqrs.Azure.BlobStorage.DataStores.BlobStorageDataStore(Of TData).Remove
- uid: Cqrs.DataStores.IDataStore{{TData}}.Remove({TData})
  commentId: M:Cqrs.DataStores.IDataStore{`0}.Remove(`0)
  parent: Cqrs.DataStores.IDataStore{{TData}}
  definition: Cqrs.DataStores.IDataStore`1.Remove(`0)
  name: Remove(TData)
  nameWithType: IDataStore<TData>.Remove(TData)
  fullName: Cqrs.DataStores.IDataStore<TData>.Remove(TData)
  nameWithType.vb: IDataStore(Of TData).Remove(TData)
  fullName.vb: Cqrs.DataStores.IDataStore(Of TData).Remove(TData)
  spec.csharp:
  - uid: Cqrs.DataStores.IDataStore`1.Remove(`0)
    name: Remove
    nameWithType: IDataStore<TData>.Remove
    fullName: Cqrs.DataStores.IDataStore<TData>.Remove
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.DataStores.IDataStore`1.Remove(`0)
    name: Remove
    nameWithType: IDataStore(Of TData).Remove
    fullName: Cqrs.DataStores.IDataStore(Of TData).Remove
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: '{TData}'
  commentId: '!:TData'
  definition: TData
  name: TData
  nameWithType: TData
  fullName: TData
- uid: Cqrs.DataStores.IDataStore`1.Remove(`0)
  commentId: M:Cqrs.DataStores.IDataStore`1.Remove(`0)
  isExternal: false
  name: Remove(TData)
  nameWithType: IDataStore<TData>.Remove(TData)
  fullName: Cqrs.DataStores.IDataStore<TData>.Remove(TData)
  nameWithType.vb: IDataStore(Of TData).Remove(TData)
  fullName.vb: Cqrs.DataStores.IDataStore(Of TData).Remove(TData)
  spec.csharp:
  - uid: Cqrs.DataStores.IDataStore`1.Remove(`0)
    name: Remove
    nameWithType: IDataStore<TData>.Remove
    fullName: Cqrs.DataStores.IDataStore<TData>.Remove
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.DataStores.IDataStore`1.Remove(`0)
    name: Remove
    nameWithType: IDataStore(Of TData).Remove
    fullName: Cqrs.DataStores.IDataStore(Of TData).Remove
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: TData
  isExternal: false
  name: TData
  nameWithType: TData
  fullName: TData
- uid: Cqrs.Azure.BlobStorage.DataStores.BlobStorageDataStore`1.GetByFolder*
  commentId: Overload:Cqrs.Azure.BlobStorage.DataStores.BlobStorageDataStore`1.GetByFolder
  isExternal: false
  name: GetByFolder
  nameWithType: BlobStorageDataStore<TData>.GetByFolder
  fullName: Cqrs.Azure.BlobStorage.DataStores.BlobStorageDataStore<TData>.GetByFolder
  nameWithType.vb: BlobStorageDataStore(Of TData).GetByFolder
  fullName.vb: Cqrs.Azure.BlobStorage.DataStores.BlobStorageDataStore(Of TData).GetByFolder
