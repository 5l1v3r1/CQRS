### YamlMime:ManagedReference
items:
- uid: Cqrs.Domain
  commentId: N:Cqrs.Domain
  id: Cqrs.Domain
  children:
  - Cqrs.Domain.AggregateRepository`1
  - Cqrs.Domain.AggregateRoot`1
  - Cqrs.Domain.DtoAggregateRoot`2
  - Cqrs.Domain.IAggregateRepository`1
  - Cqrs.Domain.IAggregateRoot`1
  - Cqrs.Domain.IDto
  - Cqrs.Domain.ISaga`1
  - Cqrs.Domain.ISagaRepository`1
  - Cqrs.Domain.ISagaUnitOfWork`1
  - Cqrs.Domain.IUnitOfWork`1
  - Cqrs.Domain.Saga`1
  - Cqrs.Domain.SagaEventHandler`2
  - Cqrs.Domain.SagaRepository`1
  - Cqrs.Domain.SagaUnitOfWork`1
  - Cqrs.Domain.UnitOfWork`1
  langs:
  - csharp
  - vb
  name: Cqrs.Domain
  nameWithType: Cqrs.Domain
  fullName: Cqrs.Domain
  type: Namespace
  assemblies:
  - Cqrs
references:
- uid: Cqrs.Domain.IAggregateRepository`1
  commentId: T:Cqrs.Domain.IAggregateRepository`1
  isExternal: false
  name: IAggregateRepository<TAuthenticationToken>
  nameWithType: IAggregateRepository<TAuthenticationToken>
  fullName: Cqrs.Domain.IAggregateRepository<TAuthenticationToken>
  nameWithType.vb: IAggregateRepository(Of TAuthenticationToken)
  fullName.vb: Cqrs.Domain.IAggregateRepository(Of TAuthenticationToken)
  name.vb: IAggregateRepository(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Domain.IAggregateRepository`1
    name: IAggregateRepository
    nameWithType: IAggregateRepository
    fullName: Cqrs.Domain.IAggregateRepository
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Domain.IAggregateRepository`1
    name: IAggregateRepository
    nameWithType: IAggregateRepository
    fullName: Cqrs.Domain.IAggregateRepository
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Domain.ISagaRepository`1
  commentId: T:Cqrs.Domain.ISagaRepository`1
  isExternal: false
  name: ISagaRepository<TAuthenticationToken>
  nameWithType: ISagaRepository<TAuthenticationToken>
  fullName: Cqrs.Domain.ISagaRepository<TAuthenticationToken>
  nameWithType.vb: ISagaRepository(Of TAuthenticationToken)
  fullName.vb: Cqrs.Domain.ISagaRepository(Of TAuthenticationToken)
  name.vb: ISagaRepository(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Domain.ISagaRepository`1
    name: ISagaRepository
    nameWithType: ISagaRepository
    fullName: Cqrs.Domain.ISagaRepository
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Domain.ISagaRepository`1
    name: ISagaRepository
    nameWithType: ISagaRepository
    fullName: Cqrs.Domain.ISagaRepository
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Domain.ISagaUnitOfWork`1
  commentId: T:Cqrs.Domain.ISagaUnitOfWork`1
  isExternal: false
  name: ISagaUnitOfWork<TAuthenticationToken>
  nameWithType: ISagaUnitOfWork<TAuthenticationToken>
  fullName: Cqrs.Domain.ISagaUnitOfWork<TAuthenticationToken>
  nameWithType.vb: ISagaUnitOfWork(Of TAuthenticationToken)
  fullName.vb: Cqrs.Domain.ISagaUnitOfWork(Of TAuthenticationToken)
  name.vb: ISagaUnitOfWork(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Domain.ISagaUnitOfWork`1
    name: ISagaUnitOfWork
    nameWithType: ISagaUnitOfWork
    fullName: Cqrs.Domain.ISagaUnitOfWork
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Domain.ISagaUnitOfWork`1
    name: ISagaUnitOfWork
    nameWithType: ISagaUnitOfWork
    fullName: Cqrs.Domain.ISagaUnitOfWork
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Domain.AggregateRepository`1
  commentId: T:Cqrs.Domain.AggregateRepository`1
  isExternal: false
  name: AggregateRepository<TAuthenticationToken>
  nameWithType: AggregateRepository<TAuthenticationToken>
  fullName: Cqrs.Domain.AggregateRepository<TAuthenticationToken>
  nameWithType.vb: AggregateRepository(Of TAuthenticationToken)
  fullName.vb: Cqrs.Domain.AggregateRepository(Of TAuthenticationToken)
  name.vb: AggregateRepository(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Domain.AggregateRepository`1
    name: AggregateRepository
    nameWithType: AggregateRepository
    fullName: Cqrs.Domain.AggregateRepository
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Domain.AggregateRepository`1
    name: AggregateRepository
    nameWithType: AggregateRepository
    fullName: Cqrs.Domain.AggregateRepository
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Domain.SagaEventHandler`2
  commentId: T:Cqrs.Domain.SagaEventHandler`2
  isExternal: false
  name: SagaEventHandler<TAuthenticationToken, TSaga>
  nameWithType: SagaEventHandler<TAuthenticationToken, TSaga>
  fullName: Cqrs.Domain.SagaEventHandler<TAuthenticationToken, TSaga>
  nameWithType.vb: SagaEventHandler(Of TAuthenticationToken, TSaga)
  fullName.vb: Cqrs.Domain.SagaEventHandler(Of TAuthenticationToken, TSaga)
  name.vb: SagaEventHandler(Of TAuthenticationToken, TSaga)
  spec.csharp:
  - uid: Cqrs.Domain.SagaEventHandler`2
    name: SagaEventHandler
    nameWithType: SagaEventHandler
    fullName: Cqrs.Domain.SagaEventHandler
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TSaga
    nameWithType: TSaga
    fullName: TSaga
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Domain.SagaEventHandler`2
    name: SagaEventHandler
    nameWithType: SagaEventHandler
    fullName: Cqrs.Domain.SagaEventHandler
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TSaga
    nameWithType: TSaga
    fullName: TSaga
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Domain.SagaRepository`1
  commentId: T:Cqrs.Domain.SagaRepository`1
  isExternal: false
  name: SagaRepository<TAuthenticationToken>
  nameWithType: SagaRepository<TAuthenticationToken>
  fullName: Cqrs.Domain.SagaRepository<TAuthenticationToken>
  nameWithType.vb: SagaRepository(Of TAuthenticationToken)
  fullName.vb: Cqrs.Domain.SagaRepository(Of TAuthenticationToken)
  name.vb: SagaRepository(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Domain.SagaRepository`1
    name: SagaRepository
    nameWithType: SagaRepository
    fullName: Cqrs.Domain.SagaRepository
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Domain.SagaRepository`1
    name: SagaRepository
    nameWithType: SagaRepository
    fullName: Cqrs.Domain.SagaRepository
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Domain.ISaga`1
  commentId: T:Cqrs.Domain.ISaga`1
  isExternal: false
  name: ISaga<TAuthenticationToken>
  nameWithType: ISaga<TAuthenticationToken>
  fullName: Cqrs.Domain.ISaga<TAuthenticationToken>
  nameWithType.vb: ISaga(Of TAuthenticationToken)
  fullName.vb: Cqrs.Domain.ISaga(Of TAuthenticationToken)
  name.vb: ISaga(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Domain.ISaga`1
    name: ISaga
    nameWithType: ISaga
    fullName: Cqrs.Domain.ISaga
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Domain.ISaga`1
    name: ISaga
    nameWithType: ISaga
    fullName: Cqrs.Domain.ISaga
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Domain.Saga`1
  commentId: T:Cqrs.Domain.Saga`1
  isExternal: false
  name: Saga<TAuthenticationToken>
  nameWithType: Saga<TAuthenticationToken>
  fullName: Cqrs.Domain.Saga<TAuthenticationToken>
  nameWithType.vb: Saga(Of TAuthenticationToken)
  fullName.vb: Cqrs.Domain.Saga(Of TAuthenticationToken)
  name.vb: Saga(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Domain.Saga`1
    name: Saga
    nameWithType: Saga
    fullName: Cqrs.Domain.Saga
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Domain.Saga`1
    name: Saga
    nameWithType: Saga
    fullName: Cqrs.Domain.Saga
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Domain.AggregateRoot`1
  commentId: T:Cqrs.Domain.AggregateRoot`1
  isExternal: false
  name: AggregateRoot<TAuthenticationToken>
  nameWithType: AggregateRoot<TAuthenticationToken>
  fullName: Cqrs.Domain.AggregateRoot<TAuthenticationToken>
  nameWithType.vb: AggregateRoot(Of TAuthenticationToken)
  fullName.vb: Cqrs.Domain.AggregateRoot(Of TAuthenticationToken)
  name.vb: AggregateRoot(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Domain.AggregateRoot`1
    name: AggregateRoot
    nameWithType: AggregateRoot
    fullName: Cqrs.Domain.AggregateRoot
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Domain.AggregateRoot`1
    name: AggregateRoot
    nameWithType: AggregateRoot
    fullName: Cqrs.Domain.AggregateRoot
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Domain.IAggregateRoot`1
  commentId: T:Cqrs.Domain.IAggregateRoot`1
  isExternal: false
  name: IAggregateRoot<TAuthenticationToken>
  nameWithType: IAggregateRoot<TAuthenticationToken>
  fullName: Cqrs.Domain.IAggregateRoot<TAuthenticationToken>
  nameWithType.vb: IAggregateRoot(Of TAuthenticationToken)
  fullName.vb: Cqrs.Domain.IAggregateRoot(Of TAuthenticationToken)
  name.vb: IAggregateRoot(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Domain.IAggregateRoot`1
    name: IAggregateRoot
    nameWithType: IAggregateRoot
    fullName: Cqrs.Domain.IAggregateRoot
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Domain.IAggregateRoot`1
    name: IAggregateRoot
    nameWithType: IAggregateRoot
    fullName: Cqrs.Domain.IAggregateRoot
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Domain.IDto
  commentId: T:Cqrs.Domain.IDto
  isExternal: false
  name: IDto
  nameWithType: IDto
  fullName: Cqrs.Domain.IDto
- uid: Cqrs.Domain.IUnitOfWork`1
  commentId: T:Cqrs.Domain.IUnitOfWork`1
  isExternal: false
  name: IUnitOfWork<TAuthenticationToken>
  nameWithType: IUnitOfWork<TAuthenticationToken>
  fullName: Cqrs.Domain.IUnitOfWork<TAuthenticationToken>
  nameWithType.vb: IUnitOfWork(Of TAuthenticationToken)
  fullName.vb: Cqrs.Domain.IUnitOfWork(Of TAuthenticationToken)
  name.vb: IUnitOfWork(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Domain.IUnitOfWork`1
    name: IUnitOfWork
    nameWithType: IUnitOfWork
    fullName: Cqrs.Domain.IUnitOfWork
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Domain.IUnitOfWork`1
    name: IUnitOfWork
    nameWithType: IUnitOfWork
    fullName: Cqrs.Domain.IUnitOfWork
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Domain.SagaUnitOfWork`1
  commentId: T:Cqrs.Domain.SagaUnitOfWork`1
  isExternal: false
  name: SagaUnitOfWork<TAuthenticationToken>
  nameWithType: SagaUnitOfWork<TAuthenticationToken>
  fullName: Cqrs.Domain.SagaUnitOfWork<TAuthenticationToken>
  nameWithType.vb: SagaUnitOfWork(Of TAuthenticationToken)
  fullName.vb: Cqrs.Domain.SagaUnitOfWork(Of TAuthenticationToken)
  name.vb: SagaUnitOfWork(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Domain.SagaUnitOfWork`1
    name: SagaUnitOfWork
    nameWithType: SagaUnitOfWork
    fullName: Cqrs.Domain.SagaUnitOfWork
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Domain.SagaUnitOfWork`1
    name: SagaUnitOfWork
    nameWithType: SagaUnitOfWork
    fullName: Cqrs.Domain.SagaUnitOfWork
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Domain.UnitOfWork`1
  commentId: T:Cqrs.Domain.UnitOfWork`1
  isExternal: false
  name: UnitOfWork<TAuthenticationToken>
  nameWithType: UnitOfWork<TAuthenticationToken>
  fullName: Cqrs.Domain.UnitOfWork<TAuthenticationToken>
  nameWithType.vb: UnitOfWork(Of TAuthenticationToken)
  fullName.vb: Cqrs.Domain.UnitOfWork(Of TAuthenticationToken)
  name.vb: UnitOfWork(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Domain.UnitOfWork`1
    name: UnitOfWork
    nameWithType: UnitOfWork
    fullName: Cqrs.Domain.UnitOfWork
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Domain.UnitOfWork`1
    name: UnitOfWork
    nameWithType: UnitOfWork
    fullName: Cqrs.Domain.UnitOfWork
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Domain.DtoAggregateRoot`2
  commentId: T:Cqrs.Domain.DtoAggregateRoot`2
  isExternal: false
  name: DtoAggregateRoot<TAuthenticationToken, TDto>
  nameWithType: DtoAggregateRoot<TAuthenticationToken, TDto>
  fullName: Cqrs.Domain.DtoAggregateRoot<TAuthenticationToken, TDto>
  nameWithType.vb: DtoAggregateRoot(Of TAuthenticationToken, TDto)
  fullName.vb: Cqrs.Domain.DtoAggregateRoot(Of TAuthenticationToken, TDto)
  name.vb: DtoAggregateRoot(Of TAuthenticationToken, TDto)
  spec.csharp:
  - uid: Cqrs.Domain.DtoAggregateRoot`2
    name: DtoAggregateRoot
    nameWithType: DtoAggregateRoot
    fullName: Cqrs.Domain.DtoAggregateRoot
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDto
    nameWithType: TDto
    fullName: TDto
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Domain.DtoAggregateRoot`2
    name: DtoAggregateRoot
    nameWithType: DtoAggregateRoot
    fullName: Cqrs.Domain.DtoAggregateRoot
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDto
    nameWithType: TDto
    fullName: TDto
  - name: )
    nameWithType: )
    fullName: )
