### YamlMime:ManagedReference
items:
- uid: Cqrs.Services.IServiceResponseWithResultData`1
  commentId: T:Cqrs.Services.IServiceResponseWithResultData`1
  id: IServiceResponseWithResultData`1
  parent: Cqrs.Services
  children:
  - Cqrs.Services.IServiceResponseWithResultData`1.ResultData
  langs:
  - csharp
  - vb
  name: IServiceResponseWithResultData<TResultData>
  nameWithType: IServiceResponseWithResultData<TResultData>
  fullName: Cqrs.Services.IServiceResponseWithResultData<TResultData>
  type: Interface
  source:
    remote:
      path: Framework/Cqrs/Services/IServiceResponseWithResultData.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: IServiceResponseWithResultData
    path: Framework/Cqrs/Services/IServiceResponseWithResultData.cs
    startLine: 17
  assemblies:
  - Cqrs
  namespace: Cqrs.Services
  summary: "\nA <xref href=\"Cqrs.Services.IServiceResponse\" data-throw-if-not-resolved=\"false\"></xref> that holds request state, correlation information as well as the response data returned from making a public API request.\n"
  example: []
  syntax:
    content: 'public interface IServiceResponseWithResultData<TResultData> : IServiceResponse'
    typeParameters:
    - id: TResultData
      description: The <xref href="System.Type" data-throw-if-not-resolved="false"></xref> of data returned from making a public API request.
    content.vb: >-
      Public Interface IServiceResponseWithResultData(Of TResultData)

          Inherits IServiceResponse
  inheritedMembers:
  - Cqrs.Services.IServiceResponse.State
  - Cqrs.Services.IServiceResponse.CorrelationId
  nameWithType.vb: IServiceResponseWithResultData(Of TResultData)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: Cqrs.Services.IServiceResponseWithResultData(Of TResultData)
  name.vb: IServiceResponseWithResultData(Of TResultData)
- uid: Cqrs.Services.IServiceResponseWithResultData`1.ResultData
  commentId: P:Cqrs.Services.IServiceResponseWithResultData`1.ResultData
  id: ResultData
  parent: Cqrs.Services.IServiceResponseWithResultData`1
  langs:
  - csharp
  - vb
  name: ResultData
  nameWithType: IServiceResponseWithResultData<TResultData>.ResultData
  fullName: Cqrs.Services.IServiceResponseWithResultData<TResultData>.ResultData
  type: Property
  source:
    remote:
      path: Framework/Cqrs/Services/IServiceResponseWithResultData.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: ResultData
    path: Framework/Cqrs/Services/IServiceResponseWithResultData.cs
    startLine: 22
  assemblies:
  - Cqrs
  namespace: Cqrs.Services
  summary: "\nThe data returned from making a public API request.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      TResultData ResultData { get; set; }
    parameters: []
    return:
      type: '{TResultData}'
    content.vb: >-
      <DataMember>

      Property ResultData As TResultData
  overload: Cqrs.Services.IServiceResponseWithResultData`1.ResultData*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  nameWithType.vb: IServiceResponseWithResultData(Of TResultData).ResultData
  modifiers.csharp:
  - get
  - set
  fullName.vb: Cqrs.Services.IServiceResponseWithResultData(Of TResultData).ResultData
references:
- uid: Cqrs.Services.IServiceResponse
  commentId: T:Cqrs.Services.IServiceResponse
  parent: Cqrs.Services
  isExternal: false
  name: IServiceResponse
  nameWithType: IServiceResponse
  fullName: Cqrs.Services.IServiceResponse
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Cqrs.Services
  commentId: N:Cqrs.Services
  isExternal: false
  name: Cqrs.Services
  nameWithType: Cqrs.Services
  fullName: Cqrs.Services
- uid: Cqrs.Services.IServiceResponse.State
  commentId: P:Cqrs.Services.IServiceResponse.State
  parent: Cqrs.Services.IServiceResponse
  isExternal: false
  name: State
  nameWithType: IServiceResponse.State
  fullName: Cqrs.Services.IServiceResponse.State
- uid: Cqrs.Services.IServiceResponse.CorrelationId
  commentId: P:Cqrs.Services.IServiceResponse.CorrelationId
  parent: Cqrs.Services.IServiceResponse
  isExternal: false
  name: CorrelationId
  nameWithType: IServiceResponse.CorrelationId
  fullName: Cqrs.Services.IServiceResponse.CorrelationId
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Cqrs.Services.IServiceResponseWithResultData`1.ResultData*
  commentId: Overload:Cqrs.Services.IServiceResponseWithResultData`1.ResultData
  isExternal: false
  name: ResultData
  nameWithType: IServiceResponseWithResultData<TResultData>.ResultData
  fullName: Cqrs.Services.IServiceResponseWithResultData<TResultData>.ResultData
  nameWithType.vb: IServiceResponseWithResultData(Of TResultData).ResultData
  fullName.vb: Cqrs.Services.IServiceResponseWithResultData(Of TResultData).ResultData
- uid: '{TResultData}'
  commentId: '!:TResultData'
  definition: TResultData
  name: TResultData
  nameWithType: TResultData
  fullName: TResultData
- uid: TResultData
  isExternal: false
  name: TResultData
  nameWithType: TResultData
  fullName: TResultData
