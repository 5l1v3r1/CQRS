### YamlMime:ManagedReference
items:
- uid: Cqrs.Events.InProcessEventStore`1
  commentId: T:Cqrs.Events.InProcessEventStore`1
  id: InProcessEventStore`1
  parent: Cqrs.Events
  children:
  - Cqrs.Events.InProcessEventStore`1.#ctor
  - Cqrs.Events.InProcessEventStore`1.Get(System.Guid)
  - Cqrs.Events.InProcessEventStore`1.Get(System.Type,System.Guid,System.Boolean,System.Int32)
  - Cqrs.Events.InProcessEventStore`1.Get``1(System.Guid,System.Boolean,System.Int32)
  - Cqrs.Events.InProcessEventStore`1.InMemoryDb
  - Cqrs.Events.InProcessEventStore`1.Save(System.Type,Cqrs.Events.IEvent{`0})
  - Cqrs.Events.InProcessEventStore`1.Save``1(Cqrs.Events.IEvent{`0})
  langs:
  - csharp
  - vb
  name: InProcessEventStore<TAuthenticationToken>
  nameWithType: InProcessEventStore<TAuthenticationToken>
  fullName: Cqrs.Events.InProcessEventStore<TAuthenticationToken>
  type: Class
  source:
    remote:
      path: Framework/Cqrs/Events/InProcessEventStore.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: InProcessEventStore
    path: Framework/Cqrs/Events/InProcessEventStore.cs
    startLine: 21
  assemblies:
  - Cqrs
  namespace: Cqrs.Events
  summary: "\nAn <xref href=\"Cqrs.Events.IEventStore%601\" data-throw-if-not-resolved=\"false\"></xref> that uses a local (non-static) <xref href=\"System.Collections.Generic.IDictionary%602\" data-throw-if-not-resolved=\"false\"></xref>.\nThis does not manage memory in any way and will continue to grow. Mostly suitable for running tests or short lived processes.\n"
  example: []
  syntax:
    content: 'public class InProcessEventStore<TAuthenticationToken> : IEventStore<TAuthenticationToken>'
    typeParameters:
    - id: TAuthenticationToken
      description: The <xref href="System.Type" data-throw-if-not-resolved="false"></xref> of the authentication token.
    content.vb: >-
      Public Class InProcessEventStore(Of TAuthenticationToken)

          Implements IEventStore(Of TAuthenticationToken)
  inheritance:
  - System.Object
  derivedClasses:
  - Cqrs.Ninject.InProcess.EventStore.InProcessEventStore`1
  implements:
  - Cqrs.Events.IEventStore{{TAuthenticationToken}}
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: InProcessEventStore(Of TAuthenticationToken)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Cqrs.Events.InProcessEventStore(Of TAuthenticationToken)
  name.vb: InProcessEventStore(Of TAuthenticationToken)
- uid: Cqrs.Events.InProcessEventStore`1.InMemoryDb
  commentId: P:Cqrs.Events.InProcessEventStore`1.InMemoryDb
  id: InMemoryDb
  parent: Cqrs.Events.InProcessEventStore`1
  langs:
  - csharp
  - vb
  name: InMemoryDb
  nameWithType: InProcessEventStore<TAuthenticationToken>.InMemoryDb
  fullName: Cqrs.Events.InProcessEventStore<TAuthenticationToken>.InMemoryDb
  type: Property
  source:
    remote:
      path: Framework/Cqrs/Events/InProcessEventStore.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: InMemoryDb
    path: Framework/Cqrs/Events/InProcessEventStore.cs
    startLine: 26
  assemblies:
  - Cqrs
  namespace: Cqrs.Events
  summary: "\nGets or sets the in-memory storage <xref href=\"System.Collections.Generic.IDictionary%602\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: protected IDictionary<Guid, IList<IEvent<TAuthenticationToken>>> InMemoryDb { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.Guid,System.Collections.Generic.IList{Cqrs.Events.IEvent{{TAuthenticationToken}}}}
    content.vb: Protected ReadOnly Property InMemoryDb As IDictionary(Of Guid, IList(Of IEvent(Of TAuthenticationToken)))
  overload: Cqrs.Events.InProcessEventStore`1.InMemoryDb*
  nameWithType.vb: InProcessEventStore(Of TAuthenticationToken).InMemoryDb
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: Cqrs.Events.InProcessEventStore(Of TAuthenticationToken).InMemoryDb
- uid: Cqrs.Events.InProcessEventStore`1.#ctor
  commentId: M:Cqrs.Events.InProcessEventStore`1.#ctor
  id: '#ctor'
  parent: Cqrs.Events.InProcessEventStore`1
  langs:
  - csharp
  - vb
  name: InProcessEventStore()
  nameWithType: InProcessEventStore<TAuthenticationToken>.InProcessEventStore()
  fullName: Cqrs.Events.InProcessEventStore<TAuthenticationToken>.InProcessEventStore()
  type: Constructor
  source:
    remote:
      path: Framework/Cqrs/Events/InProcessEventStore.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: .ctor
    path: Framework/Cqrs/Events/InProcessEventStore.cs
    startLine: 31
  assemblies:
  - Cqrs
  namespace: Cqrs.Events
  summary: "\nInstantiate a new instance of the <xref href=\"Cqrs.Events.InProcessEventStore%601\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public InProcessEventStore()
    content.vb: Public Sub New
  overload: Cqrs.Events.InProcessEventStore`1.#ctor*
  nameWithType.vb: InProcessEventStore(Of TAuthenticationToken).InProcessEventStore()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Cqrs.Events.InProcessEventStore(Of TAuthenticationToken).InProcessEventStore()
- uid: Cqrs.Events.InProcessEventStore`1.Save(System.Type,Cqrs.Events.IEvent{`0})
  commentId: M:Cqrs.Events.InProcessEventStore`1.Save(System.Type,Cqrs.Events.IEvent{`0})
  id: Save(System.Type,Cqrs.Events.IEvent{`0})
  parent: Cqrs.Events.InProcessEventStore`1
  langs:
  - csharp
  - vb
  name: Save(Type, IEvent<TAuthenticationToken>)
  nameWithType: InProcessEventStore<TAuthenticationToken>.Save(Type, IEvent<TAuthenticationToken>)
  fullName: Cqrs.Events.InProcessEventStore<TAuthenticationToken>.Save(System.Type, Cqrs.Events.IEvent<TAuthenticationToken>)
  type: Method
  source:
    remote:
      path: Framework/Cqrs/Events/InProcessEventStore.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Save
    path: Framework/Cqrs/Events/InProcessEventStore.cs
    startLine: 41
  assemblies:
  - Cqrs
  namespace: Cqrs.Events
  summary: "\nSaves the provided <span class=\"paramref\">event</span>.\n"
  example: []
  syntax:
    content: public void Save(Type aggregateRootType, IEvent<TAuthenticationToken> event)
    parameters:
    - id: aggregateRootType
      type: System.Type
      description: <xref href="System.Type" data-throw-if-not-resolved="false"></xref> of the <xref href="Cqrs.Domain.IAggregateRoot%601" data-throw-if-not-resolved="false"></xref> the <xref href="Cqrs.Events.IEvent%601" data-throw-if-not-resolved="false"></xref> was raised in.
    - id: event
      type: Cqrs.Events.IEvent{{TAuthenticationToken}}
      description: The <xref href="Cqrs.Events.IEvent%601" data-throw-if-not-resolved="false"></xref> to be saved.
    content.vb: Public Sub Save(aggregateRootType As Type, event As IEvent(Of TAuthenticationToken))
  overload: Cqrs.Events.InProcessEventStore`1.Save*
  implements:
  - Cqrs.Events.IEventStore{{TAuthenticationToken}}.Save(System.Type,Cqrs.Events.IEvent{{TAuthenticationToken}})
  nameWithType.vb: InProcessEventStore(Of TAuthenticationToken).Save(Type, IEvent(Of TAuthenticationToken))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Cqrs.Events.InProcessEventStore(Of TAuthenticationToken).Save(System.Type, Cqrs.Events.IEvent(Of TAuthenticationToken))
  name.vb: Save(Type, IEvent(Of TAuthenticationToken))
- uid: Cqrs.Events.InProcessEventStore`1.Get``1(System.Guid,System.Boolean,System.Int32)
  commentId: M:Cqrs.Events.InProcessEventStore`1.Get``1(System.Guid,System.Boolean,System.Int32)
  id: Get``1(System.Guid,System.Boolean,System.Int32)
  parent: Cqrs.Events.InProcessEventStore`1
  langs:
  - csharp
  - vb
  name: Get<T>(Guid, Boolean, Int32)
  nameWithType: InProcessEventStore<TAuthenticationToken>.Get<T>(Guid, Boolean, Int32)
  fullName: Cqrs.Events.InProcessEventStore<TAuthenticationToken>.Get<T>(System.Guid, System.Boolean, System.Int32)
  type: Method
  source:
    remote:
      path: Framework/Cqrs/Events/InProcessEventStore.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Get
    path: Framework/Cqrs/Events/InProcessEventStore.cs
    startLine: 60
  assemblies:
  - Cqrs
  namespace: Cqrs.Events
  summary: "\nGets a collection of <xref href=\"Cqrs.Events.IEvent%601\" data-throw-if-not-resolved=\"false\"></xref> for the <span class=\"typeparamref\">T</span> with the ID matching the provided <span class=\"paramref\">aggregateId</span>.\n"
  example: []
  syntax:
    content: public IEnumerable<IEvent<TAuthenticationToken>> Get<T>(Guid aggregateId, bool useLastEventOnly = false, int fromVersion = -1)
    parameters:
    - id: aggregateId
      type: System.Guid
      description: The <xref href="Cqrs.Domain.IAggregateRoot%601.Id" data-throw-if-not-resolved="false"></xref> of the <xref href="Cqrs.Domain.IAggregateRoot%601" data-throw-if-not-resolved="false"></xref>.
    - id: useLastEventOnly
      type: System.Boolean
      description: Loads only the last event<xref href="Cqrs.Events.IEvent%601" data-throw-if-not-resolved="false"></xref>.
    - id: fromVersion
      type: System.Int32
      description: Load events starting from this version
    typeParameters:
    - id: T
      description: The <xref href="System.Type" data-throw-if-not-resolved="false"></xref> of the <xref href="Cqrs.Domain.IAggregateRoot%601" data-throw-if-not-resolved="false"></xref> the <xref href="Cqrs.Events.IEvent%601" data-throw-if-not-resolved="false"></xref> was raised in.
    return:
      type: System.Collections.Generic.IEnumerable{Cqrs.Events.IEvent{{TAuthenticationToken}}}
    content.vb: Public Function Get(Of T)(aggregateId As Guid, useLastEventOnly As Boolean = False, fromVersion As Integer = -1) As IEnumerable(Of IEvent(Of TAuthenticationToken))
  overload: Cqrs.Events.InProcessEventStore`1.Get*
  implements:
  - Cqrs.Events.IEventStore{{TAuthenticationToken}}.Get``1(System.Guid,System.Boolean,System.Int32)
  nameWithType.vb: InProcessEventStore(Of TAuthenticationToken).Get(Of T)(Guid, Boolean, Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Cqrs.Events.InProcessEventStore(Of TAuthenticationToken).Get(Of T)(System.Guid, System.Boolean, System.Int32)
  name.vb: Get(Of T)(Guid, Boolean, Int32)
- uid: Cqrs.Events.InProcessEventStore`1.Get(System.Type,System.Guid,System.Boolean,System.Int32)
  commentId: M:Cqrs.Events.InProcessEventStore`1.Get(System.Type,System.Guid,System.Boolean,System.Int32)
  id: Get(System.Type,System.Guid,System.Boolean,System.Int32)
  parent: Cqrs.Events.InProcessEventStore`1
  langs:
  - csharp
  - vb
  name: Get(Type, Guid, Boolean, Int32)
  nameWithType: InProcessEventStore<TAuthenticationToken>.Get(Type, Guid, Boolean, Int32)
  fullName: Cqrs.Events.InProcessEventStore<TAuthenticationToken>.Get(System.Type, System.Guid, System.Boolean, System.Int32)
  type: Method
  source:
    remote:
      path: Framework/Cqrs/Events/InProcessEventStore.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Get
    path: Framework/Cqrs/Events/InProcessEventStore.cs
    startLine: 72
  assemblies:
  - Cqrs
  namespace: Cqrs.Events
  summary: "\nGets a collection of <xref href=\"Cqrs.Events.IEvent%601\" data-throw-if-not-resolved=\"false\"></xref> for the <xref href=\"Cqrs.Domain.IAggregateRoot%601\" data-throw-if-not-resolved=\"false\"></xref> of type <span class=\"paramref\">aggregateType</span> with the ID matching the provided <span class=\"paramref\">aggregateId</span>.\n"
  example: []
  syntax:
    content: public IEnumerable<IEvent<TAuthenticationToken>> Get(Type aggregateType, Guid aggregateId, bool useLastEventOnly = false, int fromVersion = -1)
    parameters:
    - id: aggregateType
      type: System.Type
      description: <xref href="System.Type" data-throw-if-not-resolved="false"></xref> of the <xref href="Cqrs.Domain.IAggregateRoot%601" data-throw-if-not-resolved="false"></xref> the <xref href="Cqrs.Events.IEvent%601" data-throw-if-not-resolved="false"></xref> was raised in.
    - id: aggregateId
      type: System.Guid
      description: The <xref href="Cqrs.Domain.IAggregateRoot%601.Id" data-throw-if-not-resolved="false"></xref> of the <xref href="Cqrs.Domain.IAggregateRoot%601" data-throw-if-not-resolved="false"></xref>.
    - id: useLastEventOnly
      type: System.Boolean
      description: Loads only the last event<xref href="Cqrs.Events.IEvent%601" data-throw-if-not-resolved="false"></xref>.
    - id: fromVersion
      type: System.Int32
      description: Load events starting from this version
    return:
      type: System.Collections.Generic.IEnumerable{Cqrs.Events.IEvent{{TAuthenticationToken}}}
    content.vb: Public Function Get(aggregateType As Type, aggregateId As Guid, useLastEventOnly As Boolean = False, fromVersion As Integer = -1) As IEnumerable(Of IEvent(Of TAuthenticationToken))
  overload: Cqrs.Events.InProcessEventStore`1.Get*
  implements:
  - Cqrs.Events.IEventStore{{TAuthenticationToken}}.Get(System.Type,System.Guid,System.Boolean,System.Int32)
  nameWithType.vb: InProcessEventStore(Of TAuthenticationToken).Get(Type, Guid, Boolean, Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Cqrs.Events.InProcessEventStore(Of TAuthenticationToken).Get(System.Type, System.Guid, System.Boolean, System.Int32)
- uid: Cqrs.Events.InProcessEventStore`1.Get(System.Guid)
  commentId: M:Cqrs.Events.InProcessEventStore`1.Get(System.Guid)
  id: Get(System.Guid)
  parent: Cqrs.Events.InProcessEventStore`1
  langs:
  - csharp
  - vb
  name: Get(Guid)
  nameWithType: InProcessEventStore<TAuthenticationToken>.Get(Guid)
  fullName: Cqrs.Events.InProcessEventStore<TAuthenticationToken>.Get(System.Guid)
  type: Method
  source:
    remote:
      path: Framework/Cqrs/Events/InProcessEventStore.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Get
    path: Framework/Cqrs/Events/InProcessEventStore.cs
    startLine: 85
  assemblies:
  - Cqrs
  namespace: Cqrs.Events
  summary: "\nGet all <xref href=\"Cqrs.Events.IEvent%601\" data-throw-if-not-resolved=\"false\"></xref> instances for the given <span class=\"paramref\">correlationId</span>.\n"
  example: []
  syntax:
    content: public IEnumerable<EventData> Get(Guid correlationId)
    parameters:
    - id: correlationId
      type: System.Guid
      description: The <xref href="Cqrs.Messages.IMessage.CorrelationId" data-throw-if-not-resolved="false"></xref> of the <xref href="Cqrs.Events.IEvent%601" data-throw-if-not-resolved="false"></xref> instances to retrieve.
    return:
      type: System.Collections.Generic.IEnumerable{Cqrs.Events.EventData}
    content.vb: Public Function Get(correlationId As Guid) As IEnumerable(Of EventData)
  overload: Cqrs.Events.InProcessEventStore`1.Get*
  implements:
  - Cqrs.Events.IEventStore{{TAuthenticationToken}}.Get(System.Guid)
  nameWithType.vb: InProcessEventStore(Of TAuthenticationToken).Get(Guid)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Cqrs.Events.InProcessEventStore(Of TAuthenticationToken).Get(System.Guid)
- uid: Cqrs.Events.InProcessEventStore`1.Save``1(Cqrs.Events.IEvent{`0})
  commentId: M:Cqrs.Events.InProcessEventStore`1.Save``1(Cqrs.Events.IEvent{`0})
  id: Save``1(Cqrs.Events.IEvent{`0})
  parent: Cqrs.Events.InProcessEventStore`1
  langs:
  - csharp
  - vb
  name: Save<T>(IEvent<TAuthenticationToken>)
  nameWithType: InProcessEventStore<TAuthenticationToken>.Save<T>(IEvent<TAuthenticationToken>)
  fullName: Cqrs.Events.InProcessEventStore<TAuthenticationToken>.Save<T>(Cqrs.Events.IEvent<TAuthenticationToken>)
  type: Method
  source:
    remote:
      path: Framework/Cqrs/Events/InProcessEventStore.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Save
    path: Framework/Cqrs/Events/InProcessEventStore.cs
    startLine: 95
  assemblies:
  - Cqrs
  namespace: Cqrs.Events
  summary: "\nSaves the provided <span class=\"paramref\">event</span>.\n"
  example: []
  syntax:
    content: public void Save<T>(IEvent<TAuthenticationToken> event)
    parameters:
    - id: event
      type: Cqrs.Events.IEvent{{TAuthenticationToken}}
      description: The <xref href="Cqrs.Events.IEvent%601" data-throw-if-not-resolved="false"></xref> to be saved.
    typeParameters:
    - id: T
      description: The <xref href="System.Type" data-throw-if-not-resolved="false"></xref> of the <xref href="Cqrs.Domain.IAggregateRoot%601" data-throw-if-not-resolved="false"></xref> the <xref href="Cqrs.Events.IEvent%601" data-throw-if-not-resolved="false"></xref> was raised in.
    content.vb: Public Sub Save(Of T)(event As IEvent(Of TAuthenticationToken))
  overload: Cqrs.Events.InProcessEventStore`1.Save*
  implements:
  - Cqrs.Events.IEventStore{{TAuthenticationToken}}.Save``1(Cqrs.Events.IEvent{{TAuthenticationToken}})
  nameWithType.vb: InProcessEventStore(Of TAuthenticationToken).Save(Of T)(IEvent(Of TAuthenticationToken))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Cqrs.Events.InProcessEventStore(Of TAuthenticationToken).Save(Of T)(Cqrs.Events.IEvent(Of TAuthenticationToken))
  name.vb: Save(Of T)(IEvent(Of TAuthenticationToken))
references:
- uid: Cqrs.Events.IEventStore`1
  commentId: T:Cqrs.Events.IEventStore`1
  isExternal: false
  name: IEventStore<TAuthenticationToken>
  nameWithType: IEventStore<TAuthenticationToken>
  fullName: Cqrs.Events.IEventStore<TAuthenticationToken>
  nameWithType.vb: IEventStore(Of TAuthenticationToken)
  fullName.vb: Cqrs.Events.IEventStore(Of TAuthenticationToken)
  name.vb: IEventStore(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Events.IEventStore`1
    name: IEventStore
    nameWithType: IEventStore
    fullName: Cqrs.Events.IEventStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Events.IEventStore`1
    name: IEventStore
    nameWithType: IEventStore
    fullName: Cqrs.Events.IEventStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Cqrs.Events
  commentId: N:Cqrs.Events
  isExternal: false
  name: Cqrs.Events
  nameWithType: Cqrs.Events
  fullName: Cqrs.Events
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Cqrs.Events.IEventStore{{TAuthenticationToken}}
  commentId: T:Cqrs.Events.IEventStore{`0}
  parent: Cqrs.Events
  definition: Cqrs.Events.IEventStore`1
  name: IEventStore<TAuthenticationToken>
  nameWithType: IEventStore<TAuthenticationToken>
  fullName: Cqrs.Events.IEventStore<TAuthenticationToken>
  nameWithType.vb: IEventStore(Of TAuthenticationToken)
  fullName.vb: Cqrs.Events.IEventStore(Of TAuthenticationToken)
  name.vb: IEventStore(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Events.IEventStore`1
    name: IEventStore
    nameWithType: IEventStore
    fullName: Cqrs.Events.IEventStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Events.IEventStore`1
    name: IEventStore
    nameWithType: IEventStore
    fullName: Cqrs.Events.IEventStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Cqrs.Events.InProcessEventStore`1.InMemoryDb*
  commentId: Overload:Cqrs.Events.InProcessEventStore`1.InMemoryDb
  isExternal: false
  name: InMemoryDb
  nameWithType: InProcessEventStore<TAuthenticationToken>.InMemoryDb
  fullName: Cqrs.Events.InProcessEventStore<TAuthenticationToken>.InMemoryDb
  nameWithType.vb: InProcessEventStore(Of TAuthenticationToken).InMemoryDb
  fullName.vb: Cqrs.Events.InProcessEventStore(Of TAuthenticationToken).InMemoryDb
- uid: System.Collections.Generic.IDictionary{System.Guid,System.Collections.Generic.IList{Cqrs.Events.IEvent{{TAuthenticationToken}}}}
  commentId: T:System.Collections.Generic.IDictionary{System.Guid,System.Collections.Generic.IList{Cqrs.Events.IEvent{`0}}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<Guid, IList<IEvent<TAuthenticationToken>>>
  nameWithType: IDictionary<Guid, IList<IEvent<TAuthenticationToken>>>
  fullName: System.Collections.Generic.IDictionary<System.Guid, System.Collections.Generic.IList<Cqrs.Events.IEvent<TAuthenticationToken>>>
  nameWithType.vb: IDictionary(Of Guid, IList(Of IEvent(Of TAuthenticationToken)))
  fullName.vb: System.Collections.Generic.IDictionary(Of System.Guid, System.Collections.Generic.IList(Of Cqrs.Events.IEvent(Of TAuthenticationToken)))
  name.vb: IDictionary(Of Guid, IList(Of IEvent(Of TAuthenticationToken)))
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Cqrs.Events.InProcessEventStore`1
  commentId: T:Cqrs.Events.InProcessEventStore`1
  isExternal: false
  name: InProcessEventStore<TAuthenticationToken>
  nameWithType: InProcessEventStore<TAuthenticationToken>
  fullName: Cqrs.Events.InProcessEventStore<TAuthenticationToken>
  nameWithType.vb: InProcessEventStore(Of TAuthenticationToken)
  fullName.vb: Cqrs.Events.InProcessEventStore(Of TAuthenticationToken)
  name.vb: InProcessEventStore(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Events.InProcessEventStore`1
    name: InProcessEventStore
    nameWithType: InProcessEventStore
    fullName: Cqrs.Events.InProcessEventStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Events.InProcessEventStore`1
    name: InProcessEventStore
    nameWithType: InProcessEventStore
    fullName: Cqrs.Events.InProcessEventStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Events.InProcessEventStore`1.#ctor*
  commentId: Overload:Cqrs.Events.InProcessEventStore`1.#ctor
  isExternal: false
  name: InProcessEventStore
  nameWithType: InProcessEventStore<TAuthenticationToken>.InProcessEventStore
  fullName: Cqrs.Events.InProcessEventStore<TAuthenticationToken>.InProcessEventStore
  nameWithType.vb: InProcessEventStore(Of TAuthenticationToken).InProcessEventStore
  fullName.vb: Cqrs.Events.InProcessEventStore(Of TAuthenticationToken).InProcessEventStore
- uid: Cqrs.Domain.IAggregateRoot`1
  commentId: T:Cqrs.Domain.IAggregateRoot`1
  isExternal: false
  name: IAggregateRoot<TAuthenticationToken>
  nameWithType: IAggregateRoot<TAuthenticationToken>
  fullName: Cqrs.Domain.IAggregateRoot<TAuthenticationToken>
  nameWithType.vb: IAggregateRoot(Of TAuthenticationToken)
  fullName.vb: Cqrs.Domain.IAggregateRoot(Of TAuthenticationToken)
  name.vb: IAggregateRoot(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Domain.IAggregateRoot`1
    name: IAggregateRoot
    nameWithType: IAggregateRoot
    fullName: Cqrs.Domain.IAggregateRoot
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Domain.IAggregateRoot`1
    name: IAggregateRoot
    nameWithType: IAggregateRoot
    fullName: Cqrs.Domain.IAggregateRoot
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Events.IEvent`1
  commentId: T:Cqrs.Events.IEvent`1
  isExternal: false
  name: IEvent<TAuthenticationToken>
  nameWithType: IEvent<TAuthenticationToken>
  fullName: Cqrs.Events.IEvent<TAuthenticationToken>
  nameWithType.vb: IEvent(Of TAuthenticationToken)
  fullName.vb: Cqrs.Events.IEvent(Of TAuthenticationToken)
  name.vb: IEvent(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Events.InProcessEventStore`1.Save*
  commentId: Overload:Cqrs.Events.InProcessEventStore`1.Save
  isExternal: false
  name: Save
  nameWithType: InProcessEventStore<TAuthenticationToken>.Save
  fullName: Cqrs.Events.InProcessEventStore<TAuthenticationToken>.Save
  nameWithType.vb: InProcessEventStore(Of TAuthenticationToken).Save
  fullName.vb: Cqrs.Events.InProcessEventStore(Of TAuthenticationToken).Save
- uid: Cqrs.Events.IEventStore{{TAuthenticationToken}}.Save(System.Type,Cqrs.Events.IEvent{{TAuthenticationToken}})
  commentId: M:Cqrs.Events.IEventStore{`0}.Save(System.Type,Cqrs.Events.IEvent{`0})
  parent: Cqrs.Events.IEventStore{{TAuthenticationToken}}
  definition: Cqrs.Events.IEventStore`1.Save(System.Type,Cqrs.Events.IEvent{`0})
  name: Save(Type, IEvent<TAuthenticationToken>)
  nameWithType: IEventStore<TAuthenticationToken>.Save(Type, IEvent<TAuthenticationToken>)
  fullName: Cqrs.Events.IEventStore<TAuthenticationToken>.Save(System.Type, Cqrs.Events.IEvent<TAuthenticationToken>)
  nameWithType.vb: IEventStore(Of TAuthenticationToken).Save(Type, IEvent(Of TAuthenticationToken))
  fullName.vb: Cqrs.Events.IEventStore(Of TAuthenticationToken).Save(System.Type, Cqrs.Events.IEvent(Of TAuthenticationToken))
  name.vb: Save(Type, IEvent(Of TAuthenticationToken))
  spec.csharp:
  - uid: Cqrs.Events.IEventStore`1.Save(System.Type,Cqrs.Events.IEvent{`0})
    name: Save
    nameWithType: IEventStore<TAuthenticationToken>.Save
    fullName: Cqrs.Events.IEventStore<TAuthenticationToken>.Save
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Events.IEventStore`1.Save(System.Type,Cqrs.Events.IEvent{`0})
    name: Save
    nameWithType: IEventStore(Of TAuthenticationToken).Save
    fullName: Cqrs.Events.IEventStore(Of TAuthenticationToken).Save
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Events.IEvent{{TAuthenticationToken}}
  commentId: T:Cqrs.Events.IEvent{`0}
  parent: Cqrs.Events
  definition: Cqrs.Events.IEvent`1
  name: IEvent<TAuthenticationToken>
  nameWithType: IEvent<TAuthenticationToken>
  fullName: Cqrs.Events.IEvent<TAuthenticationToken>
  nameWithType.vb: IEvent(Of TAuthenticationToken)
  fullName.vb: Cqrs.Events.IEvent(Of TAuthenticationToken)
  name.vb: IEvent(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Events.IEventStore`1.Save(System.Type,Cqrs.Events.IEvent{`0})
  commentId: M:Cqrs.Events.IEventStore`1.Save(System.Type,Cqrs.Events.IEvent{`0})
  isExternal: true
  name: Save(Type, IEvent<TAuthenticationToken>)
  nameWithType: IEventStore<TAuthenticationToken>.Save(Type, IEvent<TAuthenticationToken>)
  fullName: Cqrs.Events.IEventStore<TAuthenticationToken>.Save(System.Type, Cqrs.Events.IEvent<TAuthenticationToken>)
  nameWithType.vb: IEventStore(Of TAuthenticationToken).Save(Type, IEvent(Of TAuthenticationToken))
  fullName.vb: Cqrs.Events.IEventStore(Of TAuthenticationToken).Save(System.Type, Cqrs.Events.IEvent(Of TAuthenticationToken))
  name.vb: Save(Type, IEvent(Of TAuthenticationToken))
  spec.csharp:
  - uid: Cqrs.Events.IEventStore`1.Save(System.Type,Cqrs.Events.IEvent{`0})
    name: Save
    nameWithType: IEventStore<TAuthenticationToken>.Save
    fullName: Cqrs.Events.IEventStore<TAuthenticationToken>.Save
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Events.IEventStore`1.Save(System.Type,Cqrs.Events.IEvent{`0})
    name: Save
    nameWithType: IEventStore(Of TAuthenticationToken).Save
    fullName: Cqrs.Events.IEventStore(Of TAuthenticationToken).Save
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Domain.IAggregateRoot`1.Id
  commentId: P:Cqrs.Domain.IAggregateRoot`1.Id
  isExternal: false
  name: Id
  nameWithType: IAggregateRoot<TAuthenticationToken>.Id
  fullName: Cqrs.Domain.IAggregateRoot<TAuthenticationToken>.Id
  nameWithType.vb: IAggregateRoot(Of TAuthenticationToken).Id
  fullName.vb: Cqrs.Domain.IAggregateRoot(Of TAuthenticationToken).Id
- uid: Cqrs.Events.InProcessEventStore`1.Get*
  commentId: Overload:Cqrs.Events.InProcessEventStore`1.Get
  isExternal: false
  name: Get
  nameWithType: InProcessEventStore<TAuthenticationToken>.Get
  fullName: Cqrs.Events.InProcessEventStore<TAuthenticationToken>.Get
  nameWithType.vb: InProcessEventStore(Of TAuthenticationToken).Get
  fullName.vb: Cqrs.Events.InProcessEventStore(Of TAuthenticationToken).Get
- uid: Cqrs.Events.IEventStore{{TAuthenticationToken}}.Get``1(System.Guid,System.Boolean,System.Int32)
  commentId: M:Cqrs.Events.IEventStore{`0}.Get``1(System.Guid,System.Boolean,System.Int32)
  parent: Cqrs.Events.IEventStore{{TAuthenticationToken}}
  definition: Cqrs.Events.IEventStore`1.Get``1(System.Guid,System.Boolean,System.Int32)
  name: Get<T>(Guid, Boolean, Int32)
  nameWithType: IEventStore<TAuthenticationToken>.Get<T>(Guid, Boolean, Int32)
  fullName: Cqrs.Events.IEventStore<TAuthenticationToken>.Get<T>(System.Guid, System.Boolean, System.Int32)
  nameWithType.vb: IEventStore(Of TAuthenticationToken).Get(Of T)(Guid, Boolean, Int32)
  fullName.vb: Cqrs.Events.IEventStore(Of TAuthenticationToken).Get(Of T)(System.Guid, System.Boolean, System.Int32)
  name.vb: Get(Of T)(Guid, Boolean, Int32)
  spec.csharp:
  - uid: Cqrs.Events.IEventStore`1.Get``1(System.Guid,System.Boolean,System.Int32)
    name: Get<T>
    nameWithType: IEventStore<TAuthenticationToken>.Get<T>
    fullName: Cqrs.Events.IEventStore<TAuthenticationToken>.Get<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Events.IEventStore`1.Get``1(System.Guid,System.Boolean,System.Int32)
    name: Get(Of T)
    nameWithType: IEventStore(Of TAuthenticationToken).Get(Of T)
    fullName: Cqrs.Events.IEventStore(Of TAuthenticationToken).Get(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.IEnumerable{Cqrs.Events.IEvent{{TAuthenticationToken}}}
  commentId: T:System.Collections.Generic.IEnumerable{Cqrs.Events.IEvent{`0}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IEvent<TAuthenticationToken>>
  nameWithType: IEnumerable<IEvent<TAuthenticationToken>>
  fullName: System.Collections.Generic.IEnumerable<Cqrs.Events.IEvent<TAuthenticationToken>>
  nameWithType.vb: IEnumerable(Of IEvent(Of TAuthenticationToken))
  fullName.vb: System.Collections.Generic.IEnumerable(Of Cqrs.Events.IEvent(Of TAuthenticationToken))
  name.vb: IEnumerable(Of IEvent(Of TAuthenticationToken))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Events.IEventStore`1.Get``1(System.Guid,System.Boolean,System.Int32)
  commentId: M:Cqrs.Events.IEventStore`1.Get``1(System.Guid,System.Boolean,System.Int32)
  isExternal: true
  name: Get<T>(Guid, Boolean, Int32)
  nameWithType: IEventStore<TAuthenticationToken>.Get<T>(Guid, Boolean, Int32)
  fullName: Cqrs.Events.IEventStore<TAuthenticationToken>.Get<T>(System.Guid, System.Boolean, System.Int32)
  nameWithType.vb: IEventStore(Of TAuthenticationToken).Get(Of T)(Guid, Boolean, Int32)
  fullName.vb: Cqrs.Events.IEventStore(Of TAuthenticationToken).Get(Of T)(System.Guid, System.Boolean, System.Int32)
  name.vb: Get(Of T)(Guid, Boolean, Int32)
  spec.csharp:
  - uid: Cqrs.Events.IEventStore`1.Get``1(System.Guid,System.Boolean,System.Int32)
    name: Get<T>
    nameWithType: IEventStore<TAuthenticationToken>.Get<T>
    fullName: Cqrs.Events.IEventStore<TAuthenticationToken>.Get<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Events.IEventStore`1.Get``1(System.Guid,System.Boolean,System.Int32)
    name: Get(Of T)
    nameWithType: IEventStore(Of TAuthenticationToken).Get(Of T)
    fullName: Cqrs.Events.IEventStore(Of TAuthenticationToken).Get(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Events.IEventStore{{TAuthenticationToken}}.Get(System.Type,System.Guid,System.Boolean,System.Int32)
  commentId: M:Cqrs.Events.IEventStore{`0}.Get(System.Type,System.Guid,System.Boolean,System.Int32)
  parent: Cqrs.Events.IEventStore{{TAuthenticationToken}}
  definition: Cqrs.Events.IEventStore`1.Get(System.Type,System.Guid,System.Boolean,System.Int32)
  name: Get(Type, Guid, Boolean, Int32)
  nameWithType: IEventStore<TAuthenticationToken>.Get(Type, Guid, Boolean, Int32)
  fullName: Cqrs.Events.IEventStore<TAuthenticationToken>.Get(System.Type, System.Guid, System.Boolean, System.Int32)
  nameWithType.vb: IEventStore(Of TAuthenticationToken).Get(Type, Guid, Boolean, Int32)
  fullName.vb: Cqrs.Events.IEventStore(Of TAuthenticationToken).Get(System.Type, System.Guid, System.Boolean, System.Int32)
  spec.csharp:
  - uid: Cqrs.Events.IEventStore`1.Get(System.Type,System.Guid,System.Boolean,System.Int32)
    name: Get
    nameWithType: IEventStore<TAuthenticationToken>.Get
    fullName: Cqrs.Events.IEventStore<TAuthenticationToken>.Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Events.IEventStore`1.Get(System.Type,System.Guid,System.Boolean,System.Int32)
    name: Get
    nameWithType: IEventStore(Of TAuthenticationToken).Get
    fullName: Cqrs.Events.IEventStore(Of TAuthenticationToken).Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Events.IEventStore`1.Get(System.Type,System.Guid,System.Boolean,System.Int32)
  commentId: M:Cqrs.Events.IEventStore`1.Get(System.Type,System.Guid,System.Boolean,System.Int32)
  isExternal: true
  name: Get(Type, Guid, Boolean, Int32)
  nameWithType: IEventStore<TAuthenticationToken>.Get(Type, Guid, Boolean, Int32)
  fullName: Cqrs.Events.IEventStore<TAuthenticationToken>.Get(System.Type, System.Guid, System.Boolean, System.Int32)
  nameWithType.vb: IEventStore(Of TAuthenticationToken).Get(Type, Guid, Boolean, Int32)
  fullName.vb: Cqrs.Events.IEventStore(Of TAuthenticationToken).Get(System.Type, System.Guid, System.Boolean, System.Int32)
  spec.csharp:
  - uid: Cqrs.Events.IEventStore`1.Get(System.Type,System.Guid,System.Boolean,System.Int32)
    name: Get
    nameWithType: IEventStore<TAuthenticationToken>.Get
    fullName: Cqrs.Events.IEventStore<TAuthenticationToken>.Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Events.IEventStore`1.Get(System.Type,System.Guid,System.Boolean,System.Int32)
    name: Get
    nameWithType: IEventStore(Of TAuthenticationToken).Get
    fullName: Cqrs.Events.IEventStore(Of TAuthenticationToken).Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Messages.IMessage.CorrelationId
  commentId: P:Cqrs.Messages.IMessage.CorrelationId
  parent: Cqrs.Messages.IMessage
  isExternal: false
  name: CorrelationId
  nameWithType: IMessage.CorrelationId
  fullName: Cqrs.Messages.IMessage.CorrelationId
- uid: Cqrs.Events.IEventStore{{TAuthenticationToken}}.Get(System.Guid)
  commentId: M:Cqrs.Events.IEventStore{`0}.Get(System.Guid)
  parent: Cqrs.Events.IEventStore{{TAuthenticationToken}}
  definition: Cqrs.Events.IEventStore`1.Get(System.Guid)
  name: Get(Guid)
  nameWithType: IEventStore<TAuthenticationToken>.Get(Guid)
  fullName: Cqrs.Events.IEventStore<TAuthenticationToken>.Get(System.Guid)
  nameWithType.vb: IEventStore(Of TAuthenticationToken).Get(Guid)
  fullName.vb: Cqrs.Events.IEventStore(Of TAuthenticationToken).Get(System.Guid)
  spec.csharp:
  - uid: Cqrs.Events.IEventStore`1.Get(System.Guid)
    name: Get
    nameWithType: IEventStore<TAuthenticationToken>.Get
    fullName: Cqrs.Events.IEventStore<TAuthenticationToken>.Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Events.IEventStore`1.Get(System.Guid)
    name: Get
    nameWithType: IEventStore(Of TAuthenticationToken).Get
    fullName: Cqrs.Events.IEventStore(Of TAuthenticationToken).Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{Cqrs.Events.EventData}
  commentId: T:System.Collections.Generic.IEnumerable{Cqrs.Events.EventData}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<EventData>
  nameWithType: IEnumerable<EventData>
  fullName: System.Collections.Generic.IEnumerable<Cqrs.Events.EventData>
  nameWithType.vb: IEnumerable(Of EventData)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Cqrs.Events.EventData)
  name.vb: IEnumerable(Of EventData)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cqrs.Events.EventData
    name: EventData
    nameWithType: EventData
    fullName: Cqrs.Events.EventData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Cqrs.Events.EventData
    name: EventData
    nameWithType: EventData
    fullName: Cqrs.Events.EventData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Messages.IMessage
  commentId: T:Cqrs.Messages.IMessage
  parent: Cqrs.Messages
  isExternal: false
  name: IMessage
  nameWithType: IMessage
  fullName: Cqrs.Messages.IMessage
- uid: Cqrs.Events.IEventStore`1.Get(System.Guid)
  commentId: M:Cqrs.Events.IEventStore`1.Get(System.Guid)
  isExternal: true
  name: Get(Guid)
  nameWithType: IEventStore<TAuthenticationToken>.Get(Guid)
  fullName: Cqrs.Events.IEventStore<TAuthenticationToken>.Get(System.Guid)
  nameWithType.vb: IEventStore(Of TAuthenticationToken).Get(Guid)
  fullName.vb: Cqrs.Events.IEventStore(Of TAuthenticationToken).Get(System.Guid)
  spec.csharp:
  - uid: Cqrs.Events.IEventStore`1.Get(System.Guid)
    name: Get
    nameWithType: IEventStore<TAuthenticationToken>.Get
    fullName: Cqrs.Events.IEventStore<TAuthenticationToken>.Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Events.IEventStore`1.Get(System.Guid)
    name: Get
    nameWithType: IEventStore(Of TAuthenticationToken).Get
    fullName: Cqrs.Events.IEventStore(Of TAuthenticationToken).Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Messages
  commentId: N:Cqrs.Messages
  isExternal: false
  name: Cqrs.Messages
  nameWithType: Cqrs.Messages
  fullName: Cqrs.Messages
- uid: Cqrs.Events.IEventStore{{TAuthenticationToken}}.Save``1(Cqrs.Events.IEvent{{TAuthenticationToken}})
  commentId: M:Cqrs.Events.IEventStore{`0}.Save``1(Cqrs.Events.IEvent{`0})
  parent: Cqrs.Events.IEventStore{{TAuthenticationToken}}
  definition: Cqrs.Events.IEventStore`1.Save``1(Cqrs.Events.IEvent{`0})
  name: Save<T>(IEvent<TAuthenticationToken>)
  nameWithType: IEventStore<TAuthenticationToken>.Save<T>(IEvent<TAuthenticationToken>)
  fullName: Cqrs.Events.IEventStore<TAuthenticationToken>.Save<T>(Cqrs.Events.IEvent<TAuthenticationToken>)
  nameWithType.vb: IEventStore(Of TAuthenticationToken).Save(Of T)(IEvent(Of TAuthenticationToken))
  fullName.vb: Cqrs.Events.IEventStore(Of TAuthenticationToken).Save(Of T)(Cqrs.Events.IEvent(Of TAuthenticationToken))
  name.vb: Save(Of T)(IEvent(Of TAuthenticationToken))
  spec.csharp:
  - uid: Cqrs.Events.IEventStore`1.Save``1(Cqrs.Events.IEvent{`0})
    name: Save<T>
    nameWithType: IEventStore<TAuthenticationToken>.Save<T>
    fullName: Cqrs.Events.IEventStore<TAuthenticationToken>.Save<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Events.IEventStore`1.Save``1(Cqrs.Events.IEvent{`0})
    name: Save(Of T)
    nameWithType: IEventStore(Of TAuthenticationToken).Save(Of T)
    fullName: Cqrs.Events.IEventStore(Of TAuthenticationToken).Save(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Events.IEventStore`1.Save``1(Cqrs.Events.IEvent{`0})
  commentId: M:Cqrs.Events.IEventStore`1.Save``1(Cqrs.Events.IEvent{`0})
  isExternal: false
  name: Save<T>(IEvent<TAuthenticationToken>)
  nameWithType: IEventStore<TAuthenticationToken>.Save<T>(IEvent<TAuthenticationToken>)
  fullName: Cqrs.Events.IEventStore<TAuthenticationToken>.Save<T>(Cqrs.Events.IEvent<TAuthenticationToken>)
  nameWithType.vb: IEventStore(Of TAuthenticationToken).Save(Of T)(IEvent(Of TAuthenticationToken))
  fullName.vb: Cqrs.Events.IEventStore(Of TAuthenticationToken).Save(Of T)(Cqrs.Events.IEvent(Of TAuthenticationToken))
  name.vb: Save(Of T)(IEvent(Of TAuthenticationToken))
  spec.csharp:
  - uid: Cqrs.Events.IEventStore`1.Save``1(Cqrs.Events.IEvent{`0})
    name: Save<T>
    nameWithType: IEventStore<TAuthenticationToken>.Save<T>
    fullName: Cqrs.Events.IEventStore<TAuthenticationToken>.Save<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Events.IEventStore`1.Save``1(Cqrs.Events.IEvent{`0})
    name: Save(Of T)
    nameWithType: IEventStore(Of TAuthenticationToken).Save(Of T)
    fullName: Cqrs.Events.IEventStore(Of TAuthenticationToken).Save(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
