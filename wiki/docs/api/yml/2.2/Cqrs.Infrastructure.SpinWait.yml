### YamlMime:ManagedReference
items:
- uid: Cqrs.Infrastructure.SpinWait
  commentId: T:Cqrs.Infrastructure.SpinWait
  id: SpinWait
  parent: Cqrs.Infrastructure
  children:
  - Cqrs.Infrastructure.SpinWait.DefaultSleepInMilliseconds
  - Cqrs.Infrastructure.SpinWait.NextSpinWillYield
  - Cqrs.Infrastructure.SpinWait.Reset
  - Cqrs.Infrastructure.SpinWait.SpinOnce(System.Int16)
  - Cqrs.Infrastructure.SpinWait.SpinUntil(System.Func{System.Boolean},System.Int16)
  - Cqrs.Infrastructure.SpinWait.SpinUntil(System.Func{System.Boolean},System.Int32,System.Int16)
  - Cqrs.Infrastructure.SpinWait.SpinUntil(System.Func{System.Boolean},System.TimeSpan,System.Int16)
  langs:
  - csharp
  - vb
  name: SpinWait
  nameWithType: SpinWait
  fullName: Cqrs.Infrastructure.SpinWait
  type: Struct
  source:
    remote:
      path: Framework/Cqrs/Infrastructure/SpinWait.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: SpinWait
    path: Framework/Cqrs/Infrastructure/SpinWait.cs
    startLine: 9
  assemblies:
  - Cqrs
  namespace: Cqrs.Infrastructure
  summary: "\nProvides support for spin-based waiting.\n"
  example: []
  syntax:
    content: >-
      [HostProtection(SecurityAction.LinkDemand, ExternalThreading = true, Synchronization = true)]

      public struct SpinWait
    content.vb: >-
      <HostProtection(SecurityAction.LinkDemand, ExternalThreading:=True, Synchronization:=True)>

      Public Structure SpinWait
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  attributes:
  - type: System.Security.Permissions.HostProtectionAttribute
    ctor: System.Security.Permissions.HostProtectionAttribute.#ctor(System.Security.Permissions.SecurityAction)
    arguments:
    - type: System.Security.Permissions.SecurityAction
      value: 6
    namedArguments:
    - name: ExternalThreading
      type: System.Boolean
      value: true
    - name: Synchronization
      type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: Cqrs.Infrastructure.SpinWait.DefaultSleepInMilliseconds
  commentId: F:Cqrs.Infrastructure.SpinWait.DefaultSleepInMilliseconds
  id: DefaultSleepInMilliseconds
  parent: Cqrs.Infrastructure.SpinWait
  langs:
  - csharp
  - vb
  name: DefaultSleepInMilliseconds
  nameWithType: SpinWait.DefaultSleepInMilliseconds
  fullName: Cqrs.Infrastructure.SpinWait.DefaultSleepInMilliseconds
  type: Field
  source:
    remote:
      path: Framework/Cqrs/Infrastructure/SpinWait.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: DefaultSleepInMilliseconds
    path: Framework/Cqrs/Infrastructure/SpinWait.cs
    startLine: 15
  assemblies:
  - Cqrs
  namespace: Cqrs.Infrastructure
  summary: "\nA recommended sleep value of 50.\n"
  example: []
  syntax:
    content: public const short DefaultSleepInMilliseconds = 50
    return:
      type: System.Int16
    content.vb: Public Const DefaultSleepInMilliseconds As Short = 50
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Cqrs.Infrastructure.SpinWait.NextSpinWillYield
  commentId: P:Cqrs.Infrastructure.SpinWait.NextSpinWillYield
  id: NextSpinWillYield
  parent: Cqrs.Infrastructure.SpinWait
  langs:
  - csharp
  - vb
  name: NextSpinWillYield
  nameWithType: SpinWait.NextSpinWillYield
  fullName: Cqrs.Infrastructure.SpinWait.NextSpinWillYield
  type: Property
  source:
    remote:
      path: Framework/Cqrs/Infrastructure/SpinWait.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: NextSpinWillYield
    path: Framework/Cqrs/Infrastructure/SpinWait.cs
    startLine: 29
  assemblies:
  - Cqrs
  namespace: Cqrs.Infrastructure
  summary: "\nGets whether the next call to <xref href=\"System.Threading.SpinWait.SpinOnce\" data-throw-if-not-resolved=\"false\"></xref> will yield the processor, triggering a forced context switch.\n"
  example: []
  syntax:
    content: public bool NextSpinWillYield { get; }
    parameters: []
    return:
      type: System.Boolean
      description: "\nWhether the next call to <xref href=\"System.Threading.SpinWait.SpinOnce\" data-throw-if-not-resolved=\"false\"></xref> will yield the processor, triggering a forced context switch.\n"
    content.vb: Public ReadOnly Property NextSpinWillYield As Boolean
  overload: Cqrs.Infrastructure.SpinWait.NextSpinWillYield*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Cqrs.Infrastructure.SpinWait.SpinOnce(System.Int16)
  commentId: M:Cqrs.Infrastructure.SpinWait.SpinOnce(System.Int16)
  id: SpinOnce(System.Int16)
  parent: Cqrs.Infrastructure.SpinWait
  langs:
  - csharp
  - vb
  name: SpinOnce(Int16)
  nameWithType: SpinWait.SpinOnce(Int16)
  fullName: Cqrs.Infrastructure.SpinWait.SpinOnce(System.Int16)
  type: Method
  source:
    remote:
      path: Framework/Cqrs/Infrastructure/SpinWait.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: SpinOnce
    path: Framework/Cqrs/Infrastructure/SpinWait.cs
    startLine: 43
  assemblies:
  - Cqrs
  namespace: Cqrs.Infrastructure
  summary: "\nPerforms a single spin.\n"
  example: []
  syntax:
    content: public void SpinOnce(short sleepInMilliseconds = 0)
    parameters:
    - id: sleepInMilliseconds
      type: System.Int16
      description: The amount of milliseconds the thread will sleep for.
    content.vb: Public Sub SpinOnce(sleepInMilliseconds As Short = 0)
  overload: Cqrs.Infrastructure.SpinWait.SpinOnce*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Cqrs.Infrastructure.SpinWait.Reset
  commentId: M:Cqrs.Infrastructure.SpinWait.Reset
  id: Reset
  parent: Cqrs.Infrastructure.SpinWait
  langs:
  - csharp
  - vb
  name: Reset()
  nameWithType: SpinWait.Reset()
  fullName: Cqrs.Infrastructure.SpinWait.Reset()
  type: Method
  source:
    remote:
      path: Framework/Cqrs/Infrastructure/SpinWait.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Reset
    path: Framework/Cqrs/Infrastructure/SpinWait.cs
    startLine: 67
  assemblies:
  - Cqrs
  namespace: Cqrs.Infrastructure
  summary: "\nResets the spin counter.\n"
  example: []
  syntax:
    content: public void Reset()
    content.vb: Public Sub Reset
  overload: Cqrs.Infrastructure.SpinWait.Reset*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Cqrs.Infrastructure.SpinWait.SpinUntil(System.Func{System.Boolean},System.Int16)
  commentId: M:Cqrs.Infrastructure.SpinWait.SpinUntil(System.Func{System.Boolean},System.Int16)
  id: SpinUntil(System.Func{System.Boolean},System.Int16)
  parent: Cqrs.Infrastructure.SpinWait
  langs:
  - csharp
  - vb
  name: SpinUntil(Func<Boolean>, Int16)
  nameWithType: SpinWait.SpinUntil(Func<Boolean>, Int16)
  fullName: Cqrs.Infrastructure.SpinWait.SpinUntil(System.Func<System.Boolean>, System.Int16)
  type: Method
  source:
    remote:
      path: Framework/Cqrs/Infrastructure/SpinWait.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: SpinUntil
    path: Framework/Cqrs/Infrastructure/SpinWait.cs
    startLine: 78
  assemblies:
  - Cqrs
  namespace: Cqrs.Infrastructure
  summary: "\nSpins until the specified condition is satisfied.\n"
  example: []
  syntax:
    content: public static void SpinUntil(Func<bool> condition, short sleepInMilliseconds = 0)
    parameters:
    - id: condition
      type: System.Func{System.Boolean}
      description: A delegate to be executed over and over until it returns true.
    - id: sleepInMilliseconds
      type: System.Int16
      description: The amount of milliseconds the thread will sleep for.
    content.vb: Public Shared Sub SpinUntil(condition As Func(Of Boolean), sleepInMilliseconds As Short = 0)
  overload: Cqrs.Infrastructure.SpinWait.SpinUntil*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref">condition</code> argument is null.
  nameWithType.vb: SpinWait.SpinUntil(Func(Of Boolean), Int16)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Cqrs.Infrastructure.SpinWait.SpinUntil(System.Func(Of System.Boolean), System.Int16)
  name.vb: SpinUntil(Func(Of Boolean), Int16)
- uid: Cqrs.Infrastructure.SpinWait.SpinUntil(System.Func{System.Boolean},System.TimeSpan,System.Int16)
  commentId: M:Cqrs.Infrastructure.SpinWait.SpinUntil(System.Func{System.Boolean},System.TimeSpan,System.Int16)
  id: SpinUntil(System.Func{System.Boolean},System.TimeSpan,System.Int16)
  parent: Cqrs.Infrastructure.SpinWait
  langs:
  - csharp
  - vb
  name: SpinUntil(Func<Boolean>, TimeSpan, Int16)
  nameWithType: SpinWait.SpinUntil(Func<Boolean>, TimeSpan, Int16)
  fullName: Cqrs.Infrastructure.SpinWait.SpinUntil(System.Func<System.Boolean>, System.TimeSpan, System.Int16)
  type: Method
  source:
    remote:
      path: Framework/Cqrs/Infrastructure/SpinWait.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: SpinUntil
    path: Framework/Cqrs/Infrastructure/SpinWait.cs
    startLine: 95
  assemblies:
  - Cqrs
  namespace: Cqrs.Infrastructure
  summary: "\nSpins until the specified condition is satisfied or until the specified timeout is expired.\n"
  example: []
  syntax:
    content: public static bool SpinUntil(Func<bool> condition, TimeSpan timeout, short sleepInMilliseconds = 0)
    parameters:
    - id: condition
      type: System.Func{System.Boolean}
      description: A delegate to be executed over and over until it returns true.
    - id: timeout
      type: System.TimeSpan
      description: A <xref href="System.TimeSpan" data-throw-if-not-resolved="false"></xref> that represents the number of milliseconds to wait, or a TimeSpan that represents -1 milliseconds to wait indefinitely.
    - id: sleepInMilliseconds
      type: System.Int16
      description: The amount of milliseconds the thread will sleep for.
    return:
      type: System.Boolean
      description: "\nTrue if the condition is satisfied within the timeout; otherwise, false\n"
    content.vb: Public Shared Function SpinUntil(condition As Func(Of Boolean), timeout As TimeSpan, sleepInMilliseconds As Short = 0) As Boolean
  overload: Cqrs.Infrastructure.SpinWait.SpinUntil*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref">condition</code> argument is null.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code data-dev-comment-type="paramref">timeout</code> is a negative number other than -1 milliseconds, which represents an infinite time-out -or- timeout is greater than <xref href="System.Int32.MaxValue" data-throw-if-not-resolved="false"></xref>.
  nameWithType.vb: SpinWait.SpinUntil(Func(Of Boolean), TimeSpan, Int16)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Cqrs.Infrastructure.SpinWait.SpinUntil(System.Func(Of System.Boolean), System.TimeSpan, System.Int16)
  name.vb: SpinUntil(Func(Of Boolean), TimeSpan, Int16)
- uid: Cqrs.Infrastructure.SpinWait.SpinUntil(System.Func{System.Boolean},System.Int32,System.Int16)
  commentId: M:Cqrs.Infrastructure.SpinWait.SpinUntil(System.Func{System.Boolean},System.Int32,System.Int16)
  id: SpinUntil(System.Func{System.Boolean},System.Int32,System.Int16)
  parent: Cqrs.Infrastructure.SpinWait
  langs:
  - csharp
  - vb
  name: SpinUntil(Func<Boolean>, Int32, Int16)
  nameWithType: SpinWait.SpinUntil(Func<Boolean>, Int32, Int16)
  fullName: Cqrs.Infrastructure.SpinWait.SpinUntil(System.Func<System.Boolean>, System.Int32, System.Int16)
  type: Method
  source:
    remote:
      path: Framework/Cqrs/Infrastructure/SpinWait.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: SpinUntil
    path: Framework/Cqrs/Infrastructure/SpinWait.cs
    startLine: 115
  assemblies:
  - Cqrs
  namespace: Cqrs.Infrastructure
  summary: "\nSpins until the specified condition is satisfied or until the specified timeout is expired.\n"
  example: []
  syntax:
    content: public static bool SpinUntil(Func<bool> condition, int millisecondsTimeout, short sleepInMilliseconds = 0)
    parameters:
    - id: condition
      type: System.Func{System.Boolean}
      description: A delegate to be executed over and over until it returns true.
    - id: millisecondsTimeout
      type: System.Int32
      description: The number of milliseconds to wait, or <xref href="System.Threading.Timeout.Infinite" data-throw-if-not-resolved="false"></xref> (-1) to wait indefinitely.
    - id: sleepInMilliseconds
      type: System.Int16
      description: The amount of milliseconds the thread will sleep for.
    return:
      type: System.Boolean
      description: "\nTrue if the condition is satisfied within the timeout; otherwise, false\n"
    content.vb: Public Shared Function SpinUntil(condition As Func(Of Boolean), millisecondsTimeout As Integer, sleepInMilliseconds As Short = 0) As Boolean
  overload: Cqrs.Infrastructure.SpinWait.SpinUntil*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref">condition</code> argument is null.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code data-dev-comment-type="paramref">millisecondsTimeout</code> is a negative number other than -1, which represents an infinite time-out.
  nameWithType.vb: SpinWait.SpinUntil(Func(Of Boolean), Int32, Int16)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Cqrs.Infrastructure.SpinWait.SpinUntil(System.Func(Of System.Boolean), System.Int32, System.Int16)
  name.vb: SpinUntil(Func(Of Boolean), Int32, Int16)
references:
- uid: Cqrs.Infrastructure
  commentId: N:Cqrs.Infrastructure
  isExternal: false
  name: Cqrs.Infrastructure
  nameWithType: Cqrs.Infrastructure
  fullName: Cqrs.Infrastructure
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int16
  commentId: T:System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Threading.SpinWait.SpinOnce
  commentId: M:System.Threading.SpinWait.SpinOnce
- uid: Cqrs.Infrastructure.SpinWait.NextSpinWillYield*
  commentId: Overload:Cqrs.Infrastructure.SpinWait.NextSpinWillYield
  isExternal: false
  name: NextSpinWillYield
  nameWithType: SpinWait.NextSpinWillYield
  fullName: Cqrs.Infrastructure.SpinWait.NextSpinWillYield
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Cqrs.Infrastructure.SpinWait.SpinOnce*
  commentId: Overload:Cqrs.Infrastructure.SpinWait.SpinOnce
  isExternal: false
  name: SpinOnce
  nameWithType: SpinWait.SpinOnce
  fullName: Cqrs.Infrastructure.SpinWait.SpinOnce
- uid: Cqrs.Infrastructure.SpinWait.Reset*
  commentId: Overload:Cqrs.Infrastructure.SpinWait.Reset
  isExternal: false
  name: Reset
  nameWithType: SpinWait.Reset
  fullName: Cqrs.Infrastructure.SpinWait.Reset
- uid: Cqrs.Infrastructure.SpinWait.SpinUntil*
  commentId: Overload:Cqrs.Infrastructure.SpinWait.SpinUntil
  isExternal: false
  name: SpinUntil
  nameWithType: SpinWait.SpinUntil
  fullName: Cqrs.Infrastructure.SpinWait.SpinUntil
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: System.Func{System.Boolean}
  commentId: T:System.Func{System.Boolean}
  parent: System
  definition: System.Func`1
  name: Func<Boolean>
  nameWithType: Func<Boolean>
  fullName: System.Func<System.Boolean>
  nameWithType.vb: Func(Of Boolean)
  fullName.vb: System.Func(Of System.Boolean)
  name.vb: Func(Of Boolean)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullName.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Int32.MaxValue
  commentId: F:System.Int32.MaxValue
- uid: System.ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
- uid: System.Threading.Timeout.Infinite
  commentId: F:System.Threading.Timeout.Infinite
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
