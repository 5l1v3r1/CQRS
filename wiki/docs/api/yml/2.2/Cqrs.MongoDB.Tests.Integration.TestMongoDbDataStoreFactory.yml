### YamlMime:ManagedReference
items:
- uid: Cqrs.MongoDB.Tests.Integration.TestMongoDbDataStoreFactory
  commentId: T:Cqrs.MongoDB.Tests.Integration.TestMongoDbDataStoreFactory
  id: TestMongoDbDataStoreFactory
  parent: Cqrs.MongoDB.Tests.Integration
  children:
  - Cqrs.MongoDB.Tests.Integration.TestMongoDbDataStoreFactory.#ctor(cdmdotnet.Logging.ILogger,Cqrs.MongoDB.Factories.IMongoDbDataStoreConnectionStringFactory)
  - Cqrs.MongoDB.Tests.Integration.TestMongoDbDataStoreFactory.GetTestEventCollection
  langs:
  - csharp
  - vb
  name: TestMongoDbDataStoreFactory
  nameWithType: TestMongoDbDataStoreFactory
  fullName: Cqrs.MongoDB.Tests.Integration.TestMongoDbDataStoreFactory
  type: Class
  source:
    remote:
      path: Framework/Cqrs.MongoDB.Tests.Integration/TestMongoDbDataStoreFactory.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: TestMongoDbDataStoreFactory
    path: Framework/Cqrs.MongoDB.Tests.Integration/TestMongoDbDataStoreFactory.cs
    startLine: 7
  assemblies:
  - Cqrs.MongoDB.Tests.Integration
  namespace: Cqrs.MongoDB.Tests.Integration
  syntax:
    content: 'public class TestMongoDbDataStoreFactory : MongoDbDataStoreFactory'
    content.vb: >-
      Public Class TestMongoDbDataStoreFactory
          Inherits MongoDbDataStoreFactory
  inheritance:
  - System.Object
  - Cqrs.MongoDB.Factories.MongoDbDataStoreFactory
  inheritedMembers:
  - Cqrs.MongoDB.Factories.MongoDbDataStoreFactory.Logger
  - Cqrs.MongoDB.Factories.MongoDbDataStoreFactory.MongoDbDataStoreConnectionStringFactory
  - Cqrs.MongoDB.Factories.MongoDbDataStoreFactory.GetCollection``1
  - Cqrs.MongoDB.Factories.MongoDbDataStoreFactory.VerifyIndexes``1(MongoDB.Driver.IMongoCollection{{TEntity}})
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Cqrs.MongoDB.Tests.Integration.TestMongoDbDataStoreFactory.#ctor(cdmdotnet.Logging.ILogger,Cqrs.MongoDB.Factories.IMongoDbDataStoreConnectionStringFactory)
  commentId: M:Cqrs.MongoDB.Tests.Integration.TestMongoDbDataStoreFactory.#ctor(cdmdotnet.Logging.ILogger,Cqrs.MongoDB.Factories.IMongoDbDataStoreConnectionStringFactory)
  id: '#ctor(cdmdotnet.Logging.ILogger,Cqrs.MongoDB.Factories.IMongoDbDataStoreConnectionStringFactory)'
  parent: Cqrs.MongoDB.Tests.Integration.TestMongoDbDataStoreFactory
  langs:
  - csharp
  - vb
  name: TestMongoDbDataStoreFactory(ILogger, IMongoDbDataStoreConnectionStringFactory)
  nameWithType: TestMongoDbDataStoreFactory.TestMongoDbDataStoreFactory(ILogger, IMongoDbDataStoreConnectionStringFactory)
  fullName: Cqrs.MongoDB.Tests.Integration.TestMongoDbDataStoreFactory.TestMongoDbDataStoreFactory(cdmdotnet.Logging.ILogger, Cqrs.MongoDB.Factories.IMongoDbDataStoreConnectionStringFactory)
  type: Constructor
  source:
    remote:
      path: Framework/Cqrs.MongoDB.Tests.Integration/TestMongoDbDataStoreFactory.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: .ctor
    path: Framework/Cqrs.MongoDB.Tests.Integration/TestMongoDbDataStoreFactory.cs
    startLine: 9
  assemblies:
  - Cqrs.MongoDB.Tests.Integration
  namespace: Cqrs.MongoDB.Tests.Integration
  syntax:
    content: public TestMongoDbDataStoreFactory(ILogger logger, IMongoDbDataStoreConnectionStringFactory mongoDbDataStoreConnectionStringFactory)
    parameters:
    - id: logger
      type: cdmdotnet.Logging.ILogger
    - id: mongoDbDataStoreConnectionStringFactory
      type: Cqrs.MongoDB.Factories.IMongoDbDataStoreConnectionStringFactory
    content.vb: Public Sub New(logger As ILogger, mongoDbDataStoreConnectionStringFactory As IMongoDbDataStoreConnectionStringFactory)
  overload: Cqrs.MongoDB.Tests.Integration.TestMongoDbDataStoreFactory.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Cqrs.MongoDB.Tests.Integration.TestMongoDbDataStoreFactory.GetTestEventCollection
  commentId: M:Cqrs.MongoDB.Tests.Integration.TestMongoDbDataStoreFactory.GetTestEventCollection
  id: GetTestEventCollection
  parent: Cqrs.MongoDB.Tests.Integration.TestMongoDbDataStoreFactory
  langs:
  - csharp
  - vb
  name: GetTestEventCollection()
  nameWithType: TestMongoDbDataStoreFactory.GetTestEventCollection()
  fullName: Cqrs.MongoDB.Tests.Integration.TestMongoDbDataStoreFactory.GetTestEventCollection()
  type: Method
  source:
    remote:
      path: Framework/Cqrs.MongoDB.Tests.Integration/TestMongoDbDataStoreFactory.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: GetTestEventCollection
    path: Framework/Cqrs.MongoDB.Tests.Integration/TestMongoDbDataStoreFactory.cs
    startLine: 14
  assemblies:
  - Cqrs.MongoDB.Tests.Integration
  namespace: Cqrs.MongoDB.Tests.Integration
  syntax:
    content: public IMongoCollection<TestEvent> GetTestEventCollection()
    return:
      type: MongoDB.Driver.IMongoCollection{Cqrs.Azure.ServiceBus.Tests.Unit.TestEvent}
    content.vb: Public Function GetTestEventCollection As IMongoCollection(Of TestEvent)
  overload: Cqrs.MongoDB.Tests.Integration.TestMongoDbDataStoreFactory.GetTestEventCollection*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Cqrs.MongoDB.Tests.Integration
  commentId: N:Cqrs.MongoDB.Tests.Integration
  isExternal: false
  name: Cqrs.MongoDB.Tests.Integration
  nameWithType: Cqrs.MongoDB.Tests.Integration
  fullName: Cqrs.MongoDB.Tests.Integration
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Cqrs.MongoDB.Factories.MongoDbDataStoreFactory
  commentId: T:Cqrs.MongoDB.Factories.MongoDbDataStoreFactory
  parent: Cqrs.MongoDB.Factories
  isExternal: false
  name: MongoDbDataStoreFactory
  nameWithType: MongoDbDataStoreFactory
  fullName: Cqrs.MongoDB.Factories.MongoDbDataStoreFactory
- uid: Cqrs.MongoDB.Factories.MongoDbDataStoreFactory.Logger
  commentId: P:Cqrs.MongoDB.Factories.MongoDbDataStoreFactory.Logger
  parent: Cqrs.MongoDB.Factories.MongoDbDataStoreFactory
  isExternal: false
  name: Logger
  nameWithType: MongoDbDataStoreFactory.Logger
  fullName: Cqrs.MongoDB.Factories.MongoDbDataStoreFactory.Logger
- uid: Cqrs.MongoDB.Factories.MongoDbDataStoreFactory.MongoDbDataStoreConnectionStringFactory
  commentId: P:Cqrs.MongoDB.Factories.MongoDbDataStoreFactory.MongoDbDataStoreConnectionStringFactory
  parent: Cqrs.MongoDB.Factories.MongoDbDataStoreFactory
  isExternal: false
  name: MongoDbDataStoreConnectionStringFactory
  nameWithType: MongoDbDataStoreFactory.MongoDbDataStoreConnectionStringFactory
  fullName: Cqrs.MongoDB.Factories.MongoDbDataStoreFactory.MongoDbDataStoreConnectionStringFactory
- uid: Cqrs.MongoDB.Factories.MongoDbDataStoreFactory.GetCollection``1
  commentId: M:Cqrs.MongoDB.Factories.MongoDbDataStoreFactory.GetCollection``1
  parent: Cqrs.MongoDB.Factories.MongoDbDataStoreFactory
  isExternal: false
  name: GetCollection<TEntity>()
  nameWithType: MongoDbDataStoreFactory.GetCollection<TEntity>()
  fullName: Cqrs.MongoDB.Factories.MongoDbDataStoreFactory.GetCollection<TEntity>()
  nameWithType.vb: MongoDbDataStoreFactory.GetCollection(Of TEntity)()
  fullName.vb: Cqrs.MongoDB.Factories.MongoDbDataStoreFactory.GetCollection(Of TEntity)()
  name.vb: GetCollection(Of TEntity)()
  spec.csharp:
  - uid: Cqrs.MongoDB.Factories.MongoDbDataStoreFactory.GetCollection``1
    name: GetCollection<TEntity>
    nameWithType: MongoDbDataStoreFactory.GetCollection<TEntity>
    fullName: Cqrs.MongoDB.Factories.MongoDbDataStoreFactory.GetCollection<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.MongoDB.Factories.MongoDbDataStoreFactory.GetCollection``1
    name: GetCollection(Of TEntity)
    nameWithType: MongoDbDataStoreFactory.GetCollection(Of TEntity)
    fullName: Cqrs.MongoDB.Factories.MongoDbDataStoreFactory.GetCollection(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.MongoDB.Factories.MongoDbDataStoreFactory.VerifyIndexes``1(MongoDB.Driver.IMongoCollection{{TEntity}})
  commentId: M:Cqrs.MongoDB.Factories.MongoDbDataStoreFactory.VerifyIndexes``1(MongoDB.Driver.IMongoCollection{``0})
  parent: Cqrs.MongoDB.Factories.MongoDbDataStoreFactory
  definition: Cqrs.MongoDB.Factories.MongoDbDataStoreFactory.VerifyIndexes``1(MongoDB.Driver.IMongoCollection{``0})
  name: VerifyIndexes<TEntity>(IMongoCollection<TEntity>)
  nameWithType: MongoDbDataStoreFactory.VerifyIndexes<TEntity>(IMongoCollection<TEntity>)
  fullName: Cqrs.MongoDB.Factories.MongoDbDataStoreFactory.VerifyIndexes<TEntity>(MongoDB.Driver.IMongoCollection<TEntity>)
  nameWithType.vb: MongoDbDataStoreFactory.VerifyIndexes(Of TEntity)(IMongoCollection(Of TEntity))
  fullName.vb: Cqrs.MongoDB.Factories.MongoDbDataStoreFactory.VerifyIndexes(Of TEntity)(MongoDB.Driver.IMongoCollection(Of TEntity))
  name.vb: VerifyIndexes(Of TEntity)(IMongoCollection(Of TEntity))
  spec.csharp:
  - uid: Cqrs.MongoDB.Factories.MongoDbDataStoreFactory.VerifyIndexes``1(MongoDB.Driver.IMongoCollection{``0})
    name: VerifyIndexes<TEntity>
    nameWithType: MongoDbDataStoreFactory.VerifyIndexes<TEntity>
    fullName: Cqrs.MongoDB.Factories.MongoDbDataStoreFactory.VerifyIndexes<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - uid: MongoDB.Driver.IMongoCollection`1
    name: IMongoCollection
    nameWithType: IMongoCollection
    fullName: MongoDB.Driver.IMongoCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.MongoDB.Factories.MongoDbDataStoreFactory.VerifyIndexes``1(MongoDB.Driver.IMongoCollection{``0})
    name: VerifyIndexes(Of TEntity)
    nameWithType: MongoDbDataStoreFactory.VerifyIndexes(Of TEntity)
    fullName: Cqrs.MongoDB.Factories.MongoDbDataStoreFactory.VerifyIndexes(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - uid: MongoDB.Driver.IMongoCollection`1
    name: IMongoCollection
    nameWithType: IMongoCollection
    fullName: MongoDB.Driver.IMongoCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Cqrs.MongoDB.Factories
  commentId: N:Cqrs.MongoDB.Factories
  isExternal: false
  name: Cqrs.MongoDB.Factories
  nameWithType: Cqrs.MongoDB.Factories
  fullName: Cqrs.MongoDB.Factories
- uid: Cqrs.MongoDB.Factories.MongoDbDataStoreFactory.VerifyIndexes``1(MongoDB.Driver.IMongoCollection{``0})
  commentId: M:Cqrs.MongoDB.Factories.MongoDbDataStoreFactory.VerifyIndexes``1(MongoDB.Driver.IMongoCollection{``0})
  isExternal: true
  name: VerifyIndexes<TEntity>(IMongoCollection<TEntity>)
  nameWithType: MongoDbDataStoreFactory.VerifyIndexes<TEntity>(IMongoCollection<TEntity>)
  fullName: Cqrs.MongoDB.Factories.MongoDbDataStoreFactory.VerifyIndexes<TEntity>(MongoDB.Driver.IMongoCollection<TEntity>)
  nameWithType.vb: MongoDbDataStoreFactory.VerifyIndexes(Of TEntity)(IMongoCollection(Of TEntity))
  fullName.vb: Cqrs.MongoDB.Factories.MongoDbDataStoreFactory.VerifyIndexes(Of TEntity)(MongoDB.Driver.IMongoCollection(Of TEntity))
  name.vb: VerifyIndexes(Of TEntity)(IMongoCollection(Of TEntity))
  spec.csharp:
  - uid: Cqrs.MongoDB.Factories.MongoDbDataStoreFactory.VerifyIndexes``1(MongoDB.Driver.IMongoCollection{``0})
    name: VerifyIndexes<TEntity>
    nameWithType: MongoDbDataStoreFactory.VerifyIndexes<TEntity>
    fullName: Cqrs.MongoDB.Factories.MongoDbDataStoreFactory.VerifyIndexes<TEntity>
  - name: (
    nameWithType: (
    fullName: (
  - uid: MongoDB.Driver.IMongoCollection`1
    name: IMongoCollection
    nameWithType: IMongoCollection
    fullName: MongoDB.Driver.IMongoCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.MongoDB.Factories.MongoDbDataStoreFactory.VerifyIndexes``1(MongoDB.Driver.IMongoCollection{``0})
    name: VerifyIndexes(Of TEntity)
    nameWithType: MongoDbDataStoreFactory.VerifyIndexes(Of TEntity)
    fullName: Cqrs.MongoDB.Factories.MongoDbDataStoreFactory.VerifyIndexes(Of TEntity)
  - name: (
    nameWithType: (
    fullName: (
  - uid: MongoDB.Driver.IMongoCollection`1
    name: IMongoCollection
    nameWithType: IMongoCollection
    fullName: MongoDB.Driver.IMongoCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.MongoDB.Tests.Integration.TestMongoDbDataStoreFactory.#ctor*
  commentId: Overload:Cqrs.MongoDB.Tests.Integration.TestMongoDbDataStoreFactory.#ctor
  isExternal: false
  name: TestMongoDbDataStoreFactory
  nameWithType: TestMongoDbDataStoreFactory.TestMongoDbDataStoreFactory
  fullName: Cqrs.MongoDB.Tests.Integration.TestMongoDbDataStoreFactory.TestMongoDbDataStoreFactory
- uid: cdmdotnet.Logging.ILogger
  commentId: T:cdmdotnet.Logging.ILogger
  parent: cdmdotnet.Logging
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: cdmdotnet.Logging.ILogger
- uid: Cqrs.MongoDB.Factories.IMongoDbDataStoreConnectionStringFactory
  commentId: T:Cqrs.MongoDB.Factories.IMongoDbDataStoreConnectionStringFactory
  parent: Cqrs.MongoDB.Factories
  isExternal: false
  name: IMongoDbDataStoreConnectionStringFactory
  nameWithType: IMongoDbDataStoreConnectionStringFactory
  fullName: Cqrs.MongoDB.Factories.IMongoDbDataStoreConnectionStringFactory
- uid: cdmdotnet.Logging
  commentId: N:cdmdotnet.Logging
  isExternal: false
  name: cdmdotnet.Logging
  nameWithType: cdmdotnet.Logging
  fullName: cdmdotnet.Logging
- uid: Cqrs.MongoDB.Tests.Integration.TestMongoDbDataStoreFactory.GetTestEventCollection*
  commentId: Overload:Cqrs.MongoDB.Tests.Integration.TestMongoDbDataStoreFactory.GetTestEventCollection
  isExternal: false
  name: GetTestEventCollection
  nameWithType: TestMongoDbDataStoreFactory.GetTestEventCollection
  fullName: Cqrs.MongoDB.Tests.Integration.TestMongoDbDataStoreFactory.GetTestEventCollection
- uid: MongoDB.Driver.IMongoCollection{Cqrs.Azure.ServiceBus.Tests.Unit.TestEvent}
  commentId: T:MongoDB.Driver.IMongoCollection{Cqrs.Azure.ServiceBus.Tests.Unit.TestEvent}
  parent: MongoDB.Driver
  definition: MongoDB.Driver.IMongoCollection`1
  name: IMongoCollection<TestEvent>
  nameWithType: IMongoCollection<TestEvent>
  fullName: MongoDB.Driver.IMongoCollection<Cqrs.Azure.ServiceBus.Tests.Unit.TestEvent>
  nameWithType.vb: IMongoCollection(Of TestEvent)
  fullName.vb: MongoDB.Driver.IMongoCollection(Of Cqrs.Azure.ServiceBus.Tests.Unit.TestEvent)
  name.vb: IMongoCollection(Of TestEvent)
  spec.csharp:
  - uid: MongoDB.Driver.IMongoCollection`1
    name: IMongoCollection
    nameWithType: IMongoCollection
    fullName: MongoDB.Driver.IMongoCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cqrs.Azure.ServiceBus.Tests.Unit.TestEvent
    name: TestEvent
    nameWithType: TestEvent
    fullName: Cqrs.Azure.ServiceBus.Tests.Unit.TestEvent
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: MongoDB.Driver.IMongoCollection`1
    name: IMongoCollection
    nameWithType: IMongoCollection
    fullName: MongoDB.Driver.IMongoCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Cqrs.Azure.ServiceBus.Tests.Unit.TestEvent
    name: TestEvent
    nameWithType: TestEvent
    fullName: Cqrs.Azure.ServiceBus.Tests.Unit.TestEvent
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Driver.IMongoCollection`1
  commentId: T:MongoDB.Driver.IMongoCollection`1
  isExternal: true
  name: IMongoCollection<TDocument>
  nameWithType: IMongoCollection<TDocument>
  fullName: MongoDB.Driver.IMongoCollection<TDocument>
  nameWithType.vb: IMongoCollection(Of TDocument)
  fullName.vb: MongoDB.Driver.IMongoCollection(Of TDocument)
  name.vb: IMongoCollection(Of TDocument)
  spec.csharp:
  - uid: MongoDB.Driver.IMongoCollection`1
    name: IMongoCollection
    nameWithType: IMongoCollection
    fullName: MongoDB.Driver.IMongoCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TDocument
    nameWithType: TDocument
    fullName: TDocument
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: MongoDB.Driver.IMongoCollection`1
    name: IMongoCollection
    nameWithType: IMongoCollection
    fullName: MongoDB.Driver.IMongoCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDocument
    nameWithType: TDocument
    fullName: TDocument
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Driver
  commentId: N:MongoDB.Driver
  isExternal: false
  name: MongoDB.Driver
  nameWithType: MongoDB.Driver
  fullName: MongoDB.Driver
