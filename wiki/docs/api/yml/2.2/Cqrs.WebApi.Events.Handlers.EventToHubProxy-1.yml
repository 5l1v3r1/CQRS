### YamlMime:ManagedReference
items:
- uid: Cqrs.WebApi.Events.Handlers.EventToHubProxy`1
  commentId: T:Cqrs.WebApi.Events.Handlers.EventToHubProxy`1
  id: EventToHubProxy`1
  parent: Cqrs.WebApi.Events.Handlers
  children:
  - Cqrs.WebApi.Events.Handlers.EventToHubProxy`1.#ctor(cdmdotnet.Logging.ILogger,Cqrs.WebApi.SignalR.Hubs.INotificationHub,Cqrs.Authentication.IAuthenticationTokenHelper{`0})
  - Cqrs.WebApi.Events.Handlers.EventToHubProxy`1.AuthenticationTokenHelper
  - Cqrs.WebApi.Events.Handlers.EventToHubProxy`1.HandleGenericEvent(Cqrs.Events.IEvent{`0})
  - Cqrs.WebApi.Events.Handlers.EventToHubProxy`1.Logger
  - Cqrs.WebApi.Events.Handlers.EventToHubProxy`1.NotificationHub
  langs:
  - csharp
  - vb
  name: EventToHubProxy<TAuthenticationToken>
  nameWithType: EventToHubProxy<TAuthenticationToken>
  fullName: Cqrs.WebApi.Events.Handlers.EventToHubProxy<TAuthenticationToken>
  type: Class
  source:
    remote:
      path: Framework/Cqrs.WebApi/Events/Handlers/EventToHubProxy.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: EventToHubProxy
    path: Framework/Cqrs.WebApi/Events/Handlers/EventToHubProxy.cs
    startLine: 21
  assemblies:
  - Cqrs.WebApi
  namespace: Cqrs.WebApi.Events.Handlers
  summary: "\nProxies <xref href=\"Cqrs.Events.IEvent%601\" data-throw-if-not-resolved=\"false\"></xref> from the event bus to the <xref href=\"Cqrs.WebApi.SignalR.Hubs.INotificationHub\" data-throw-if-not-resolved=\"false\"></xref>.\nThis requires one or more <xref href=\"Cqrs.Events.IEventHandler\" data-throw-if-not-resolved=\"false\"></xref> implementations in order to be triggered.\n"
  example: []
  syntax:
    content: public abstract class EventToHubProxy<TAuthenticationToken>
    typeParameters:
    - id: TAuthenticationToken
      description: The <xref href="System.Type" data-throw-if-not-resolved="false"></xref> of the authentication token.
    content.vb: Public MustInherit Class EventToHubProxy(Of TAuthenticationToken)
  inheritance:
  - System.Object
  derivedClasses:
  - Cqrs.WebApi.Events.Handlers.GlobalEventToHubProxy`1
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: EventToHubProxy(Of TAuthenticationToken)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: Cqrs.WebApi.Events.Handlers.EventToHubProxy(Of TAuthenticationToken)
  name.vb: EventToHubProxy(Of TAuthenticationToken)
- uid: Cqrs.WebApi.Events.Handlers.EventToHubProxy`1.#ctor(cdmdotnet.Logging.ILogger,Cqrs.WebApi.SignalR.Hubs.INotificationHub,Cqrs.Authentication.IAuthenticationTokenHelper{`0})
  commentId: M:Cqrs.WebApi.Events.Handlers.EventToHubProxy`1.#ctor(cdmdotnet.Logging.ILogger,Cqrs.WebApi.SignalR.Hubs.INotificationHub,Cqrs.Authentication.IAuthenticationTokenHelper{`0})
  id: '#ctor(cdmdotnet.Logging.ILogger,Cqrs.WebApi.SignalR.Hubs.INotificationHub,Cqrs.Authentication.IAuthenticationTokenHelper{`0})'
  parent: Cqrs.WebApi.Events.Handlers.EventToHubProxy`1
  langs:
  - csharp
  - vb
  name: EventToHubProxy(ILogger, INotificationHub, IAuthenticationTokenHelper<TAuthenticationToken>)
  nameWithType: EventToHubProxy<TAuthenticationToken>.EventToHubProxy(ILogger, INotificationHub, IAuthenticationTokenHelper<TAuthenticationToken>)
  fullName: Cqrs.WebApi.Events.Handlers.EventToHubProxy<TAuthenticationToken>.EventToHubProxy(cdmdotnet.Logging.ILogger, Cqrs.WebApi.SignalR.Hubs.INotificationHub, Cqrs.Authentication.IAuthenticationTokenHelper<TAuthenticationToken>)
  type: Constructor
  source:
    remote:
      path: Framework/Cqrs.WebApi/Events/Handlers/EventToHubProxy.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: .ctor
    path: Framework/Cqrs.WebApi/Events/Handlers/EventToHubProxy.cs
    startLine: 26
  assemblies:
  - Cqrs.WebApi
  namespace: Cqrs.WebApi.Events.Handlers
  summary: "\nInstantiates a new instance of <xref href=\"Cqrs.WebApi.Events.Handlers.EventToHubProxy%601\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: protected EventToHubProxy(ILogger logger, INotificationHub notificationHub, IAuthenticationTokenHelper<TAuthenticationToken> authenticationTokenHelper)
    parameters:
    - id: logger
      type: cdmdotnet.Logging.ILogger
    - id: notificationHub
      type: Cqrs.WebApi.SignalR.Hubs.INotificationHub
    - id: authenticationTokenHelper
      type: Cqrs.Authentication.IAuthenticationTokenHelper{{TAuthenticationToken}}
    content.vb: Protected Sub New(logger As ILogger, notificationHub As INotificationHub, authenticationTokenHelper As IAuthenticationTokenHelper(Of TAuthenticationToken))
  overload: Cqrs.WebApi.Events.Handlers.EventToHubProxy`1.#ctor*
  nameWithType.vb: EventToHubProxy(Of TAuthenticationToken).EventToHubProxy(ILogger, INotificationHub, IAuthenticationTokenHelper(Of TAuthenticationToken))
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Cqrs.WebApi.Events.Handlers.EventToHubProxy(Of TAuthenticationToken).EventToHubProxy(cdmdotnet.Logging.ILogger, Cqrs.WebApi.SignalR.Hubs.INotificationHub, Cqrs.Authentication.IAuthenticationTokenHelper(Of TAuthenticationToken))
  name.vb: EventToHubProxy(ILogger, INotificationHub, IAuthenticationTokenHelper(Of TAuthenticationToken))
- uid: Cqrs.WebApi.Events.Handlers.EventToHubProxy`1.Logger
  commentId: P:Cqrs.WebApi.Events.Handlers.EventToHubProxy`1.Logger
  id: Logger
  parent: Cqrs.WebApi.Events.Handlers.EventToHubProxy`1
  langs:
  - csharp
  - vb
  name: Logger
  nameWithType: EventToHubProxy<TAuthenticationToken>.Logger
  fullName: Cqrs.WebApi.Events.Handlers.EventToHubProxy<TAuthenticationToken>.Logger
  type: Property
  source:
    remote:
      path: Framework/Cqrs.WebApi/Events/Handlers/EventToHubProxy.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Logger
    path: Framework/Cqrs.WebApi/Events/Handlers/EventToHubProxy.cs
    startLine: 36
  assemblies:
  - Cqrs.WebApi
  namespace: Cqrs.WebApi.Events.Handlers
  summary: "\nGets or sets the <xref href=\"cdmdotnet.Logging.ILogger\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: protected ILogger Logger { get; }
    parameters: []
    return:
      type: cdmdotnet.Logging.ILogger
    content.vb: Protected ReadOnly Property Logger As ILogger
  overload: Cqrs.WebApi.Events.Handlers.EventToHubProxy`1.Logger*
  nameWithType.vb: EventToHubProxy(Of TAuthenticationToken).Logger
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: Cqrs.WebApi.Events.Handlers.EventToHubProxy(Of TAuthenticationToken).Logger
- uid: Cqrs.WebApi.Events.Handlers.EventToHubProxy`1.NotificationHub
  commentId: P:Cqrs.WebApi.Events.Handlers.EventToHubProxy`1.NotificationHub
  id: NotificationHub
  parent: Cqrs.WebApi.Events.Handlers.EventToHubProxy`1
  langs:
  - csharp
  - vb
  name: NotificationHub
  nameWithType: EventToHubProxy<TAuthenticationToken>.NotificationHub
  fullName: Cqrs.WebApi.Events.Handlers.EventToHubProxy<TAuthenticationToken>.NotificationHub
  type: Property
  source:
    remote:
      path: Framework/Cqrs.WebApi/Events/Handlers/EventToHubProxy.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: NotificationHub
    path: Framework/Cqrs.WebApi/Events/Handlers/EventToHubProxy.cs
    startLine: 41
  assemblies:
  - Cqrs.WebApi
  namespace: Cqrs.WebApi.Events.Handlers
  summary: "\nThe <xref href=\"Cqrs.WebApi.SignalR.Hubs.INotificationHub\" data-throw-if-not-resolved=\"false\"></xref> to proxy <xref href=\"Cqrs.Events.IEvent%601\" data-throw-if-not-resolved=\"false\"></xref> to.\n"
  example: []
  syntax:
    content: protected INotificationHub NotificationHub { get; }
    parameters: []
    return:
      type: Cqrs.WebApi.SignalR.Hubs.INotificationHub
    content.vb: Protected ReadOnly Property NotificationHub As INotificationHub
  overload: Cqrs.WebApi.Events.Handlers.EventToHubProxy`1.NotificationHub*
  nameWithType.vb: EventToHubProxy(Of TAuthenticationToken).NotificationHub
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: Cqrs.WebApi.Events.Handlers.EventToHubProxy(Of TAuthenticationToken).NotificationHub
- uid: Cqrs.WebApi.Events.Handlers.EventToHubProxy`1.AuthenticationTokenHelper
  commentId: P:Cqrs.WebApi.Events.Handlers.EventToHubProxy`1.AuthenticationTokenHelper
  id: AuthenticationTokenHelper
  parent: Cqrs.WebApi.Events.Handlers.EventToHubProxy`1
  langs:
  - csharp
  - vb
  name: AuthenticationTokenHelper
  nameWithType: EventToHubProxy<TAuthenticationToken>.AuthenticationTokenHelper
  fullName: Cqrs.WebApi.Events.Handlers.EventToHubProxy<TAuthenticationToken>.AuthenticationTokenHelper
  type: Property
  source:
    remote:
      path: Framework/Cqrs.WebApi/Events/Handlers/EventToHubProxy.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: AuthenticationTokenHelper
    path: Framework/Cqrs.WebApi/Events/Handlers/EventToHubProxy.cs
    startLine: 46
  assemblies:
  - Cqrs.WebApi
  namespace: Cqrs.WebApi.Events.Handlers
  summary: "\nGets or sets the <xref href=\"Cqrs.Authentication.IAuthenticationTokenHelper%601\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: protected IAuthenticationTokenHelper<TAuthenticationToken> AuthenticationTokenHelper { get; }
    parameters: []
    return:
      type: Cqrs.Authentication.IAuthenticationTokenHelper{{TAuthenticationToken}}
    content.vb: Protected ReadOnly Property AuthenticationTokenHelper As IAuthenticationTokenHelper(Of TAuthenticationToken)
  overload: Cqrs.WebApi.Events.Handlers.EventToHubProxy`1.AuthenticationTokenHelper*
  nameWithType.vb: EventToHubProxy(Of TAuthenticationToken).AuthenticationTokenHelper
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: Cqrs.WebApi.Events.Handlers.EventToHubProxy(Of TAuthenticationToken).AuthenticationTokenHelper
- uid: Cqrs.WebApi.Events.Handlers.EventToHubProxy`1.HandleGenericEvent(Cqrs.Events.IEvent{`0})
  commentId: M:Cqrs.WebApi.Events.Handlers.EventToHubProxy`1.HandleGenericEvent(Cqrs.Events.IEvent{`0})
  id: HandleGenericEvent(Cqrs.Events.IEvent{`0})
  parent: Cqrs.WebApi.Events.Handlers.EventToHubProxy`1
  langs:
  - csharp
  - vb
  name: HandleGenericEvent(IEvent<TAuthenticationToken>)
  nameWithType: EventToHubProxy<TAuthenticationToken>.HandleGenericEvent(IEvent<TAuthenticationToken>)
  fullName: Cqrs.WebApi.Events.Handlers.EventToHubProxy<TAuthenticationToken>.HandleGenericEvent(Cqrs.Events.IEvent<TAuthenticationToken>)
  type: Method
  source:
    remote:
      path: Framework/Cqrs.WebApi/Events/Handlers/EventToHubProxy.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: HandleGenericEvent
    path: Framework/Cqrs.WebApi/Events/Handlers/EventToHubProxy.cs
    startLine: 54
  assemblies:
  - Cqrs.WebApi
  namespace: Cqrs.WebApi.Events.Handlers
  summary: "\nGet the authentication token of the entity that triggered the request generating the provided <span class=\"paramref\">message</span>\nExtract any proxy information attributes (<xref href=\"Cqrs.Events.NotifyCallerEventAttribute\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"Cqrs.Events.NotifyEveryoneEventAttribute\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"Cqrs.Events.NotifyEveryoneExceptCallerEventAttribute\" data-throw-if-not-resolved=\"false\"></xref>)\nthen proxy the provided <span class=\"paramref\">message</span> to <xref href=\"Cqrs.WebApi.Events.Handlers.EventToHubProxy%601.NotificationHub\" data-throw-if-not-resolved=\"false\"></xref> if an attribute is present.\n"
  example: []
  syntax:
    content: protected virtual void HandleGenericEvent(IEvent<TAuthenticationToken> message)
    parameters:
    - id: message
      type: Cqrs.Events.IEvent{{TAuthenticationToken}}
      description: The <xref href="Cqrs.Events.IEvent%601" data-throw-if-not-resolved="false"></xref> to proxy.
    content.vb: Protected Overridable Sub HandleGenericEvent(message As IEvent(Of TAuthenticationToken))
  overload: Cqrs.WebApi.Events.Handlers.EventToHubProxy`1.HandleGenericEvent*
  nameWithType.vb: EventToHubProxy(Of TAuthenticationToken).HandleGenericEvent(IEvent(Of TAuthenticationToken))
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Cqrs.WebApi.Events.Handlers.EventToHubProxy(Of TAuthenticationToken).HandleGenericEvent(Cqrs.Events.IEvent(Of TAuthenticationToken))
  name.vb: HandleGenericEvent(IEvent(Of TAuthenticationToken))
references:
- uid: Cqrs.Events.IEvent`1
  commentId: T:Cqrs.Events.IEvent`1
  isExternal: false
  name: IEvent<TAuthenticationToken>
  nameWithType: IEvent<TAuthenticationToken>
  fullName: Cqrs.Events.IEvent<TAuthenticationToken>
  nameWithType.vb: IEvent(Of TAuthenticationToken)
  fullName.vb: Cqrs.Events.IEvent(Of TAuthenticationToken)
  name.vb: IEvent(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.WebApi.SignalR.Hubs.INotificationHub
  commentId: T:Cqrs.WebApi.SignalR.Hubs.INotificationHub
  parent: Cqrs.WebApi.SignalR.Hubs
  isExternal: false
  name: INotificationHub
  nameWithType: INotificationHub
  fullName: Cqrs.WebApi.SignalR.Hubs.INotificationHub
- uid: Cqrs.Events.IEventHandler
  commentId: T:Cqrs.Events.IEventHandler
  parent: Cqrs.Events
  isExternal: false
  name: IEventHandler
  nameWithType: IEventHandler
  fullName: Cqrs.Events.IEventHandler
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Cqrs.WebApi.Events.Handlers
  commentId: N:Cqrs.WebApi.Events.Handlers
  isExternal: false
  name: Cqrs.WebApi.Events.Handlers
  nameWithType: Cqrs.WebApi.Events.Handlers
  fullName: Cqrs.WebApi.Events.Handlers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.WebApi.SignalR.Hubs
  commentId: N:Cqrs.WebApi.SignalR.Hubs
  isExternal: false
  name: Cqrs.WebApi.SignalR.Hubs
  nameWithType: Cqrs.WebApi.SignalR.Hubs
  fullName: Cqrs.WebApi.SignalR.Hubs
- uid: Cqrs.Events
  commentId: N:Cqrs.Events
  isExternal: false
  name: Cqrs.Events
  nameWithType: Cqrs.Events
  fullName: Cqrs.Events
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Cqrs.WebApi.Events.Handlers.EventToHubProxy`1
  commentId: T:Cqrs.WebApi.Events.Handlers.EventToHubProxy`1
  isExternal: false
  name: EventToHubProxy<TAuthenticationToken>
  nameWithType: EventToHubProxy<TAuthenticationToken>
  fullName: Cqrs.WebApi.Events.Handlers.EventToHubProxy<TAuthenticationToken>
  nameWithType.vb: EventToHubProxy(Of TAuthenticationToken)
  fullName.vb: Cqrs.WebApi.Events.Handlers.EventToHubProxy(Of TAuthenticationToken)
  name.vb: EventToHubProxy(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.WebApi.Events.Handlers.EventToHubProxy`1
    name: EventToHubProxy
    nameWithType: EventToHubProxy
    fullName: Cqrs.WebApi.Events.Handlers.EventToHubProxy
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.WebApi.Events.Handlers.EventToHubProxy`1
    name: EventToHubProxy
    nameWithType: EventToHubProxy
    fullName: Cqrs.WebApi.Events.Handlers.EventToHubProxy
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.WebApi.Events.Handlers.EventToHubProxy`1.#ctor*
  commentId: Overload:Cqrs.WebApi.Events.Handlers.EventToHubProxy`1.#ctor
  isExternal: false
  name: EventToHubProxy
  nameWithType: EventToHubProxy<TAuthenticationToken>.EventToHubProxy
  fullName: Cqrs.WebApi.Events.Handlers.EventToHubProxy<TAuthenticationToken>.EventToHubProxy
  nameWithType.vb: EventToHubProxy(Of TAuthenticationToken).EventToHubProxy
  fullName.vb: Cqrs.WebApi.Events.Handlers.EventToHubProxy(Of TAuthenticationToken).EventToHubProxy
- uid: cdmdotnet.Logging.ILogger
  commentId: T:cdmdotnet.Logging.ILogger
  parent: cdmdotnet.Logging
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: cdmdotnet.Logging.ILogger
- uid: Cqrs.Authentication.IAuthenticationTokenHelper{{TAuthenticationToken}}
  commentId: T:Cqrs.Authentication.IAuthenticationTokenHelper{`0}
  parent: Cqrs.Authentication
  definition: Cqrs.Authentication.IAuthenticationTokenHelper`1
  name: IAuthenticationTokenHelper<TAuthenticationToken>
  nameWithType: IAuthenticationTokenHelper<TAuthenticationToken>
  fullName: Cqrs.Authentication.IAuthenticationTokenHelper<TAuthenticationToken>
  nameWithType.vb: IAuthenticationTokenHelper(Of TAuthenticationToken)
  fullName.vb: Cqrs.Authentication.IAuthenticationTokenHelper(Of TAuthenticationToken)
  name.vb: IAuthenticationTokenHelper(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Authentication.IAuthenticationTokenHelper`1
    name: IAuthenticationTokenHelper
    nameWithType: IAuthenticationTokenHelper
    fullName: Cqrs.Authentication.IAuthenticationTokenHelper
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Authentication.IAuthenticationTokenHelper`1
    name: IAuthenticationTokenHelper
    nameWithType: IAuthenticationTokenHelper
    fullName: Cqrs.Authentication.IAuthenticationTokenHelper
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: cdmdotnet.Logging
  commentId: N:cdmdotnet.Logging
  isExternal: false
  name: cdmdotnet.Logging
  nameWithType: cdmdotnet.Logging
  fullName: cdmdotnet.Logging
- uid: Cqrs.Authentication.IAuthenticationTokenHelper`1
  commentId: T:Cqrs.Authentication.IAuthenticationTokenHelper`1
  isExternal: false
  name: IAuthenticationTokenHelper<TAuthenticationToken>
  nameWithType: IAuthenticationTokenHelper<TAuthenticationToken>
  fullName: Cqrs.Authentication.IAuthenticationTokenHelper<TAuthenticationToken>
  nameWithType.vb: IAuthenticationTokenHelper(Of TAuthenticationToken)
  fullName.vb: Cqrs.Authentication.IAuthenticationTokenHelper(Of TAuthenticationToken)
  name.vb: IAuthenticationTokenHelper(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Authentication.IAuthenticationTokenHelper`1
    name: IAuthenticationTokenHelper
    nameWithType: IAuthenticationTokenHelper
    fullName: Cqrs.Authentication.IAuthenticationTokenHelper
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Authentication.IAuthenticationTokenHelper`1
    name: IAuthenticationTokenHelper
    nameWithType: IAuthenticationTokenHelper
    fullName: Cqrs.Authentication.IAuthenticationTokenHelper
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Authentication
  commentId: N:Cqrs.Authentication
  isExternal: false
  name: Cqrs.Authentication
  nameWithType: Cqrs.Authentication
  fullName: Cqrs.Authentication
- uid: Cqrs.WebApi.Events.Handlers.EventToHubProxy`1.Logger*
  commentId: Overload:Cqrs.WebApi.Events.Handlers.EventToHubProxy`1.Logger
  isExternal: false
  name: Logger
  nameWithType: EventToHubProxy<TAuthenticationToken>.Logger
  fullName: Cqrs.WebApi.Events.Handlers.EventToHubProxy<TAuthenticationToken>.Logger
  nameWithType.vb: EventToHubProxy(Of TAuthenticationToken).Logger
  fullName.vb: Cqrs.WebApi.Events.Handlers.EventToHubProxy(Of TAuthenticationToken).Logger
- uid: Cqrs.WebApi.Events.Handlers.EventToHubProxy`1.NotificationHub*
  commentId: Overload:Cqrs.WebApi.Events.Handlers.EventToHubProxy`1.NotificationHub
  isExternal: false
  name: NotificationHub
  nameWithType: EventToHubProxy<TAuthenticationToken>.NotificationHub
  fullName: Cqrs.WebApi.Events.Handlers.EventToHubProxy<TAuthenticationToken>.NotificationHub
  nameWithType.vb: EventToHubProxy(Of TAuthenticationToken).NotificationHub
  fullName.vb: Cqrs.WebApi.Events.Handlers.EventToHubProxy(Of TAuthenticationToken).NotificationHub
- uid: Cqrs.WebApi.Events.Handlers.EventToHubProxy`1.AuthenticationTokenHelper*
  commentId: Overload:Cqrs.WebApi.Events.Handlers.EventToHubProxy`1.AuthenticationTokenHelper
  isExternal: false
  name: AuthenticationTokenHelper
  nameWithType: EventToHubProxy<TAuthenticationToken>.AuthenticationTokenHelper
  fullName: Cqrs.WebApi.Events.Handlers.EventToHubProxy<TAuthenticationToken>.AuthenticationTokenHelper
  nameWithType.vb: EventToHubProxy(Of TAuthenticationToken).AuthenticationTokenHelper
  fullName.vb: Cqrs.WebApi.Events.Handlers.EventToHubProxy(Of TAuthenticationToken).AuthenticationTokenHelper
- uid: Cqrs.Events.NotifyCallerEventAttribute
  commentId: T:Cqrs.Events.NotifyCallerEventAttribute
  isExternal: false
  name: NotifyCallerEventAttribute
  nameWithType: NotifyCallerEventAttribute
  fullName: Cqrs.Events.NotifyCallerEventAttribute
- uid: Cqrs.Events.NotifyEveryoneEventAttribute
  commentId: T:Cqrs.Events.NotifyEveryoneEventAttribute
  isExternal: false
  name: NotifyEveryoneEventAttribute
  nameWithType: NotifyEveryoneEventAttribute
  fullName: Cqrs.Events.NotifyEveryoneEventAttribute
- uid: Cqrs.Events.NotifyEveryoneExceptCallerEventAttribute
  commentId: T:Cqrs.Events.NotifyEveryoneExceptCallerEventAttribute
  isExternal: false
  name: NotifyEveryoneExceptCallerEventAttribute
  nameWithType: NotifyEveryoneExceptCallerEventAttribute
  fullName: Cqrs.Events.NotifyEveryoneExceptCallerEventAttribute
- uid: Cqrs.WebApi.Events.Handlers.EventToHubProxy`1.NotificationHub
  commentId: P:Cqrs.WebApi.Events.Handlers.EventToHubProxy`1.NotificationHub
  isExternal: false
  name: NotificationHub
  nameWithType: EventToHubProxy<TAuthenticationToken>.NotificationHub
  fullName: Cqrs.WebApi.Events.Handlers.EventToHubProxy<TAuthenticationToken>.NotificationHub
  nameWithType.vb: EventToHubProxy(Of TAuthenticationToken).NotificationHub
  fullName.vb: Cqrs.WebApi.Events.Handlers.EventToHubProxy(Of TAuthenticationToken).NotificationHub
- uid: Cqrs.WebApi.Events.Handlers.EventToHubProxy`1.HandleGenericEvent*
  commentId: Overload:Cqrs.WebApi.Events.Handlers.EventToHubProxy`1.HandleGenericEvent
  isExternal: false
  name: HandleGenericEvent
  nameWithType: EventToHubProxy<TAuthenticationToken>.HandleGenericEvent
  fullName: Cqrs.WebApi.Events.Handlers.EventToHubProxy<TAuthenticationToken>.HandleGenericEvent
  nameWithType.vb: EventToHubProxy(Of TAuthenticationToken).HandleGenericEvent
  fullName.vb: Cqrs.WebApi.Events.Handlers.EventToHubProxy(Of TAuthenticationToken).HandleGenericEvent
- uid: Cqrs.Events.IEvent{{TAuthenticationToken}}
  commentId: T:Cqrs.Events.IEvent{`0}
  parent: Cqrs.Events
  definition: Cqrs.Events.IEvent`1
  name: IEvent<TAuthenticationToken>
  nameWithType: IEvent<TAuthenticationToken>
  fullName: Cqrs.Events.IEvent<TAuthenticationToken>
  nameWithType.vb: IEvent(Of TAuthenticationToken)
  fullName.vb: Cqrs.Events.IEvent(Of TAuthenticationToken)
  name.vb: IEvent(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
