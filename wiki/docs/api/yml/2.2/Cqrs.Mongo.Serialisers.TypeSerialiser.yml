### YamlMime:ManagedReference
items:
- uid: Cqrs.Mongo.Serialisers.TypeSerialiser
  commentId: T:Cqrs.Mongo.Serialisers.TypeSerialiser
  id: TypeSerialiser
  parent: Cqrs.Mongo.Serialisers
  children:
  - Cqrs.Mongo.Serialisers.TypeSerialiser.Deserialize(MongoDB.Bson.IO.BsonReader,System.Type,MongoDB.Bson.Serialization.IBsonSerializationOptions)
  - Cqrs.Mongo.Serialisers.TypeSerialiser.Deserialize(MongoDB.Bson.IO.BsonReader,System.Type,System.Type,MongoDB.Bson.Serialization.IBsonSerializationOptions)
  - Cqrs.Mongo.Serialisers.TypeSerialiser.GetDefaultSerializationOptions
  - Cqrs.Mongo.Serialisers.TypeSerialiser.Serialize(MongoDB.Bson.IO.BsonWriter,System.Type,System.Object,MongoDB.Bson.Serialization.IBsonSerializationOptions)
  langs:
  - csharp
  - vb
  name: TypeSerialiser
  nameWithType: TypeSerialiser
  fullName: Cqrs.Mongo.Serialisers.TypeSerialiser
  type: Class
  source:
    remote:
      path: Framework/Cqrs.Mongo/Serialisers/TypeSerialiser.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: TypeSerialiser
    path: Framework/Cqrs.Mongo/Serialisers/TypeSerialiser.cs
    startLine: 18
  assemblies:
  - Cqrs.Mongo
  namespace: Cqrs.Mongo.Serialisers
  summary: "\nA <xref href=\"MongoDB.Bson.Serialization.IBsonSerializer\" data-throw-if-not-resolved=\"false\"></xref> that stores <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> information as well.\n"
  example: []
  syntax:
    content: 'public class TypeSerialiser : IBsonSerializer'
    content.vb: >-
      Public Class TypeSerialiser
          Implements IBsonSerializer
  inheritance:
  - System.Object
  implements:
  - MongoDB.Bson.Serialization.IBsonSerializer
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Cqrs.Mongo.Serialisers.TypeSerialiser.Deserialize(MongoDB.Bson.IO.BsonReader,System.Type,MongoDB.Bson.Serialization.IBsonSerializationOptions)
  commentId: M:Cqrs.Mongo.Serialisers.TypeSerialiser.Deserialize(MongoDB.Bson.IO.BsonReader,System.Type,MongoDB.Bson.Serialization.IBsonSerializationOptions)
  id: Deserialize(MongoDB.Bson.IO.BsonReader,System.Type,MongoDB.Bson.Serialization.IBsonSerializationOptions)
  parent: Cqrs.Mongo.Serialisers.TypeSerialiser
  langs:
  - csharp
  - vb
  name: Deserialize(BsonReader, Type, IBsonSerializationOptions)
  nameWithType: TypeSerialiser.Deserialize(BsonReader, Type, IBsonSerializationOptions)
  fullName: Cqrs.Mongo.Serialisers.TypeSerialiser.Deserialize(MongoDB.Bson.IO.BsonReader, System.Type, MongoDB.Bson.Serialization.IBsonSerializationOptions)
  type: Method
  source:
    remote:
      path: Framework/Cqrs.Mongo/Serialisers/TypeSerialiser.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Deserialize
    path: Framework/Cqrs.Mongo/Serialisers/TypeSerialiser.cs
    startLine: 23
  assemblies:
  - Cqrs.Mongo
  namespace: Cqrs.Mongo.Serialisers
  summary: "\nDeserialises a <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> value, first reading the <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> information from the provide <span class=\"paramref\">reader</span>.\n"
  example: []
  syntax:
    content: public object Deserialize(BsonReader reader, Type nominalType, IBsonSerializationOptions options)
    parameters:
    - id: reader
      type: MongoDB.Bson.IO.BsonReader
    - id: nominalType
      type: System.Type
    - id: options
      type: MongoDB.Bson.Serialization.IBsonSerializationOptions
    return:
      type: System.Object
    content.vb: Public Function Deserialize(reader As BsonReader, nominalType As Type, options As IBsonSerializationOptions) As Object
  overload: Cqrs.Mongo.Serialisers.TypeSerialiser.Deserialize*
  implements:
  - MongoDB.Bson.Serialization.IBsonSerializer.Deserialize(MongoDB.Bson.IO.BsonReader,System.Type,MongoDB.Bson.Serialization.IBsonSerializationOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Cqrs.Mongo.Serialisers.TypeSerialiser.Deserialize(MongoDB.Bson.IO.BsonReader,System.Type,System.Type,MongoDB.Bson.Serialization.IBsonSerializationOptions)
  commentId: M:Cqrs.Mongo.Serialisers.TypeSerialiser.Deserialize(MongoDB.Bson.IO.BsonReader,System.Type,System.Type,MongoDB.Bson.Serialization.IBsonSerializationOptions)
  id: Deserialize(MongoDB.Bson.IO.BsonReader,System.Type,System.Type,MongoDB.Bson.Serialization.IBsonSerializationOptions)
  parent: Cqrs.Mongo.Serialisers.TypeSerialiser
  langs:
  - csharp
  - vb
  name: Deserialize(BsonReader, Type, Type, IBsonSerializationOptions)
  nameWithType: TypeSerialiser.Deserialize(BsonReader, Type, Type, IBsonSerializationOptions)
  fullName: Cqrs.Mongo.Serialisers.TypeSerialiser.Deserialize(MongoDB.Bson.IO.BsonReader, System.Type, System.Type, MongoDB.Bson.Serialization.IBsonSerializationOptions)
  type: Method
  source:
    remote:
      path: Framework/Cqrs.Mongo/Serialisers/TypeSerialiser.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Deserialize
    path: Framework/Cqrs.Mongo/Serialisers/TypeSerialiser.cs
    startLine: 32
  assemblies:
  - Cqrs.Mongo
  namespace: Cqrs.Mongo.Serialisers
  summary: "\nDeserialises a <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> value, first reading the <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> information from the provide <span class=\"paramref\">reader</span>.\n"
  example: []
  syntax:
    content: public object Deserialize(BsonReader reader, Type nominalType, Type actualType, IBsonSerializationOptions options)
    parameters:
    - id: reader
      type: MongoDB.Bson.IO.BsonReader
    - id: nominalType
      type: System.Type
    - id: actualType
      type: System.Type
    - id: options
      type: MongoDB.Bson.Serialization.IBsonSerializationOptions
    return:
      type: System.Object
    content.vb: Public Function Deserialize(reader As BsonReader, nominalType As Type, actualType As Type, options As IBsonSerializationOptions) As Object
  overload: Cqrs.Mongo.Serialisers.TypeSerialiser.Deserialize*
  implements:
  - MongoDB.Bson.Serialization.IBsonSerializer.Deserialize(MongoDB.Bson.IO.BsonReader,System.Type,System.Type,MongoDB.Bson.Serialization.IBsonSerializationOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Cqrs.Mongo.Serialisers.TypeSerialiser.GetDefaultSerializationOptions
  commentId: M:Cqrs.Mongo.Serialisers.TypeSerialiser.GetDefaultSerializationOptions
  id: GetDefaultSerializationOptions
  parent: Cqrs.Mongo.Serialisers.TypeSerialiser
  langs:
  - csharp
  - vb
  name: GetDefaultSerializationOptions()
  nameWithType: TypeSerialiser.GetDefaultSerializationOptions()
  fullName: Cqrs.Mongo.Serialisers.TypeSerialiser.GetDefaultSerializationOptions()
  type: Method
  source:
    remote:
      path: Framework/Cqrs.Mongo/Serialisers/TypeSerialiser.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: GetDefaultSerializationOptions
    path: Framework/Cqrs.Mongo/Serialisers/TypeSerialiser.cs
    startLine: 48
  assemblies:
  - Cqrs.Mongo
  namespace: Cqrs.Mongo.Serialisers
  summary: "\nGets the default serialization options for this serializer.\n"
  example: []
  syntax:
    content: public IBsonSerializationOptions GetDefaultSerializationOptions()
    return:
      type: MongoDB.Bson.Serialization.IBsonSerializationOptions
      description: "\nThe default serialization options for this serializer.\n"
    content.vb: Public Function GetDefaultSerializationOptions As IBsonSerializationOptions
  overload: Cqrs.Mongo.Serialisers.TypeSerialiser.GetDefaultSerializationOptions*
  implements:
  - MongoDB.Bson.Serialization.IBsonSerializer.GetDefaultSerializationOptions
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Cqrs.Mongo.Serialisers.TypeSerialiser.Serialize(MongoDB.Bson.IO.BsonWriter,System.Type,System.Object,MongoDB.Bson.Serialization.IBsonSerializationOptions)
  commentId: M:Cqrs.Mongo.Serialisers.TypeSerialiser.Serialize(MongoDB.Bson.IO.BsonWriter,System.Type,System.Object,MongoDB.Bson.Serialization.IBsonSerializationOptions)
  id: Serialize(MongoDB.Bson.IO.BsonWriter,System.Type,System.Object,MongoDB.Bson.Serialization.IBsonSerializationOptions)
  parent: Cqrs.Mongo.Serialisers.TypeSerialiser
  langs:
  - csharp
  - vb
  name: Serialize(BsonWriter, Type, Object, IBsonSerializationOptions)
  nameWithType: TypeSerialiser.Serialize(BsonWriter, Type, Object, IBsonSerializationOptions)
  fullName: Cqrs.Mongo.Serialisers.TypeSerialiser.Serialize(MongoDB.Bson.IO.BsonWriter, System.Type, System.Object, MongoDB.Bson.Serialization.IBsonSerializationOptions)
  type: Method
  source:
    remote:
      path: Framework/Cqrs.Mongo/Serialisers/TypeSerialiser.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Serialize
    path: Framework/Cqrs.Mongo/Serialisers/TypeSerialiser.cs
    startLine: 56
  assemblies:
  - Cqrs.Mongo
  namespace: Cqrs.Mongo.Serialisers
  summary: "\nSerialises a <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> value.\n"
  example: []
  syntax:
    content: public void Serialize(BsonWriter writer, Type nominalType, object value, IBsonSerializationOptions options)
    parameters:
    - id: writer
      type: MongoDB.Bson.IO.BsonWriter
    - id: nominalType
      type: System.Type
    - id: value
      type: System.Object
    - id: options
      type: MongoDB.Bson.Serialization.IBsonSerializationOptions
    content.vb: Public Sub Serialize(writer As BsonWriter, nominalType As Type, value As Object, options As IBsonSerializationOptions)
  overload: Cqrs.Mongo.Serialisers.TypeSerialiser.Serialize*
  implements:
  - MongoDB.Bson.Serialization.IBsonSerializer.Serialize(MongoDB.Bson.IO.BsonWriter,System.Type,System.Object,MongoDB.Bson.Serialization.IBsonSerializationOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: MongoDB.Bson.Serialization.IBsonSerializer
  commentId: T:MongoDB.Bson.Serialization.IBsonSerializer
  parent: MongoDB.Bson.Serialization
  isExternal: true
  name: IBsonSerializer
  nameWithType: IBsonSerializer
  fullName: MongoDB.Bson.Serialization.IBsonSerializer
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Cqrs.Mongo.Serialisers
  commentId: N:Cqrs.Mongo.Serialisers
  isExternal: false
  name: Cqrs.Mongo.Serialisers
  nameWithType: Cqrs.Mongo.Serialisers
  fullName: Cqrs.Mongo.Serialisers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Bson.Serialization
  commentId: N:MongoDB.Bson.Serialization
  isExternal: false
  name: MongoDB.Bson.Serialization
  nameWithType: MongoDB.Bson.Serialization
  fullName: MongoDB.Bson.Serialization
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Cqrs.Mongo.Serialisers.TypeSerialiser.Deserialize*
  commentId: Overload:Cqrs.Mongo.Serialisers.TypeSerialiser.Deserialize
  isExternal: false
  name: Deserialize
  nameWithType: TypeSerialiser.Deserialize
  fullName: Cqrs.Mongo.Serialisers.TypeSerialiser.Deserialize
- uid: MongoDB.Bson.Serialization.IBsonSerializer.Deserialize(MongoDB.Bson.IO.BsonReader,System.Type,MongoDB.Bson.Serialization.IBsonSerializationOptions)
  commentId: M:MongoDB.Bson.Serialization.IBsonSerializer.Deserialize(MongoDB.Bson.IO.BsonReader,System.Type,MongoDB.Bson.Serialization.IBsonSerializationOptions)
  parent: MongoDB.Bson.Serialization.IBsonSerializer
  isExternal: true
  name: Deserialize(BsonReader, Type, IBsonSerializationOptions)
  nameWithType: IBsonSerializer.Deserialize(BsonReader, Type, IBsonSerializationOptions)
  fullName: MongoDB.Bson.Serialization.IBsonSerializer.Deserialize(MongoDB.Bson.IO.BsonReader, System.Type, MongoDB.Bson.Serialization.IBsonSerializationOptions)
  spec.csharp:
  - uid: MongoDB.Bson.Serialization.IBsonSerializer.Deserialize(MongoDB.Bson.IO.BsonReader,System.Type,MongoDB.Bson.Serialization.IBsonSerializationOptions)
    name: Deserialize
    nameWithType: IBsonSerializer.Deserialize
    fullName: MongoDB.Bson.Serialization.IBsonSerializer.Deserialize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: MongoDB.Bson.IO.BsonReader
    name: BsonReader
    nameWithType: BsonReader
    fullName: MongoDB.Bson.IO.BsonReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MongoDB.Bson.Serialization.IBsonSerializationOptions
    name: IBsonSerializationOptions
    nameWithType: IBsonSerializationOptions
    fullName: MongoDB.Bson.Serialization.IBsonSerializationOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Bson.Serialization.IBsonSerializer.Deserialize(MongoDB.Bson.IO.BsonReader,System.Type,MongoDB.Bson.Serialization.IBsonSerializationOptions)
    name: Deserialize
    nameWithType: IBsonSerializer.Deserialize
    fullName: MongoDB.Bson.Serialization.IBsonSerializer.Deserialize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: MongoDB.Bson.IO.BsonReader
    name: BsonReader
    nameWithType: BsonReader
    fullName: MongoDB.Bson.IO.BsonReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MongoDB.Bson.Serialization.IBsonSerializationOptions
    name: IBsonSerializationOptions
    nameWithType: IBsonSerializationOptions
    fullName: MongoDB.Bson.Serialization.IBsonSerializationOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Bson.IO.BsonReader
  commentId: T:MongoDB.Bson.IO.BsonReader
  parent: MongoDB.Bson.IO
  isExternal: true
  name: BsonReader
  nameWithType: BsonReader
  fullName: MongoDB.Bson.IO.BsonReader
- uid: MongoDB.Bson.Serialization.IBsonSerializationOptions
  commentId: T:MongoDB.Bson.Serialization.IBsonSerializationOptions
  parent: MongoDB.Bson.Serialization
  isExternal: true
  name: IBsonSerializationOptions
  nameWithType: IBsonSerializationOptions
  fullName: MongoDB.Bson.Serialization.IBsonSerializationOptions
- uid: MongoDB.Bson.IO
  commentId: N:MongoDB.Bson.IO
  isExternal: false
  name: MongoDB.Bson.IO
  nameWithType: MongoDB.Bson.IO
  fullName: MongoDB.Bson.IO
- uid: MongoDB.Bson.Serialization.IBsonSerializer.Deserialize(MongoDB.Bson.IO.BsonReader,System.Type,System.Type,MongoDB.Bson.Serialization.IBsonSerializationOptions)
  commentId: M:MongoDB.Bson.Serialization.IBsonSerializer.Deserialize(MongoDB.Bson.IO.BsonReader,System.Type,System.Type,MongoDB.Bson.Serialization.IBsonSerializationOptions)
  parent: MongoDB.Bson.Serialization.IBsonSerializer
  isExternal: true
  name: Deserialize(BsonReader, Type, Type, IBsonSerializationOptions)
  nameWithType: IBsonSerializer.Deserialize(BsonReader, Type, Type, IBsonSerializationOptions)
  fullName: MongoDB.Bson.Serialization.IBsonSerializer.Deserialize(MongoDB.Bson.IO.BsonReader, System.Type, System.Type, MongoDB.Bson.Serialization.IBsonSerializationOptions)
  spec.csharp:
  - uid: MongoDB.Bson.Serialization.IBsonSerializer.Deserialize(MongoDB.Bson.IO.BsonReader,System.Type,System.Type,MongoDB.Bson.Serialization.IBsonSerializationOptions)
    name: Deserialize
    nameWithType: IBsonSerializer.Deserialize
    fullName: MongoDB.Bson.Serialization.IBsonSerializer.Deserialize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: MongoDB.Bson.IO.BsonReader
    name: BsonReader
    nameWithType: BsonReader
    fullName: MongoDB.Bson.IO.BsonReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MongoDB.Bson.Serialization.IBsonSerializationOptions
    name: IBsonSerializationOptions
    nameWithType: IBsonSerializationOptions
    fullName: MongoDB.Bson.Serialization.IBsonSerializationOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Bson.Serialization.IBsonSerializer.Deserialize(MongoDB.Bson.IO.BsonReader,System.Type,System.Type,MongoDB.Bson.Serialization.IBsonSerializationOptions)
    name: Deserialize
    nameWithType: IBsonSerializer.Deserialize
    fullName: MongoDB.Bson.Serialization.IBsonSerializer.Deserialize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: MongoDB.Bson.IO.BsonReader
    name: BsonReader
    nameWithType: BsonReader
    fullName: MongoDB.Bson.IO.BsonReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MongoDB.Bson.Serialization.IBsonSerializationOptions
    name: IBsonSerializationOptions
    nameWithType: IBsonSerializationOptions
    fullName: MongoDB.Bson.Serialization.IBsonSerializationOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Mongo.Serialisers.TypeSerialiser.GetDefaultSerializationOptions*
  commentId: Overload:Cqrs.Mongo.Serialisers.TypeSerialiser.GetDefaultSerializationOptions
  isExternal: false
  name: GetDefaultSerializationOptions
  nameWithType: TypeSerialiser.GetDefaultSerializationOptions
  fullName: Cqrs.Mongo.Serialisers.TypeSerialiser.GetDefaultSerializationOptions
- uid: MongoDB.Bson.Serialization.IBsonSerializer.GetDefaultSerializationOptions
  commentId: M:MongoDB.Bson.Serialization.IBsonSerializer.GetDefaultSerializationOptions
  parent: MongoDB.Bson.Serialization.IBsonSerializer
  isExternal: true
  name: GetDefaultSerializationOptions()
  nameWithType: IBsonSerializer.GetDefaultSerializationOptions()
  fullName: MongoDB.Bson.Serialization.IBsonSerializer.GetDefaultSerializationOptions()
  spec.csharp:
  - uid: MongoDB.Bson.Serialization.IBsonSerializer.GetDefaultSerializationOptions
    name: GetDefaultSerializationOptions
    nameWithType: IBsonSerializer.GetDefaultSerializationOptions
    fullName: MongoDB.Bson.Serialization.IBsonSerializer.GetDefaultSerializationOptions
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Bson.Serialization.IBsonSerializer.GetDefaultSerializationOptions
    name: GetDefaultSerializationOptions
    nameWithType: IBsonSerializer.GetDefaultSerializationOptions
    fullName: MongoDB.Bson.Serialization.IBsonSerializer.GetDefaultSerializationOptions
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Mongo.Serialisers.TypeSerialiser.Serialize*
  commentId: Overload:Cqrs.Mongo.Serialisers.TypeSerialiser.Serialize
  isExternal: false
  name: Serialize
  nameWithType: TypeSerialiser.Serialize
  fullName: Cqrs.Mongo.Serialisers.TypeSerialiser.Serialize
- uid: MongoDB.Bson.Serialization.IBsonSerializer.Serialize(MongoDB.Bson.IO.BsonWriter,System.Type,System.Object,MongoDB.Bson.Serialization.IBsonSerializationOptions)
  commentId: M:MongoDB.Bson.Serialization.IBsonSerializer.Serialize(MongoDB.Bson.IO.BsonWriter,System.Type,System.Object,MongoDB.Bson.Serialization.IBsonSerializationOptions)
  parent: MongoDB.Bson.Serialization.IBsonSerializer
  isExternal: true
  name: Serialize(BsonWriter, Type, Object, IBsonSerializationOptions)
  nameWithType: IBsonSerializer.Serialize(BsonWriter, Type, Object, IBsonSerializationOptions)
  fullName: MongoDB.Bson.Serialization.IBsonSerializer.Serialize(MongoDB.Bson.IO.BsonWriter, System.Type, System.Object, MongoDB.Bson.Serialization.IBsonSerializationOptions)
  spec.csharp:
  - uid: MongoDB.Bson.Serialization.IBsonSerializer.Serialize(MongoDB.Bson.IO.BsonWriter,System.Type,System.Object,MongoDB.Bson.Serialization.IBsonSerializationOptions)
    name: Serialize
    nameWithType: IBsonSerializer.Serialize
    fullName: MongoDB.Bson.Serialization.IBsonSerializer.Serialize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: MongoDB.Bson.IO.BsonWriter
    name: BsonWriter
    nameWithType: BsonWriter
    fullName: MongoDB.Bson.IO.BsonWriter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MongoDB.Bson.Serialization.IBsonSerializationOptions
    name: IBsonSerializationOptions
    nameWithType: IBsonSerializationOptions
    fullName: MongoDB.Bson.Serialization.IBsonSerializationOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Bson.Serialization.IBsonSerializer.Serialize(MongoDB.Bson.IO.BsonWriter,System.Type,System.Object,MongoDB.Bson.Serialization.IBsonSerializationOptions)
    name: Serialize
    nameWithType: IBsonSerializer.Serialize
    fullName: MongoDB.Bson.Serialization.IBsonSerializer.Serialize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: MongoDB.Bson.IO.BsonWriter
    name: BsonWriter
    nameWithType: BsonWriter
    fullName: MongoDB.Bson.IO.BsonWriter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MongoDB.Bson.Serialization.IBsonSerializationOptions
    name: IBsonSerializationOptions
    nameWithType: IBsonSerializationOptions
    fullName: MongoDB.Bson.Serialization.IBsonSerializationOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Bson.IO.BsonWriter
  commentId: T:MongoDB.Bson.IO.BsonWriter
  parent: MongoDB.Bson.IO
  isExternal: true
  name: BsonWriter
  nameWithType: BsonWriter
  fullName: MongoDB.Bson.IO.BsonWriter
