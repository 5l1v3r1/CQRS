### YamlMime:ManagedReference
items:
- uid: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1
  commentId: T:Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1
  id: TelemetryCoreHost`1
  parent: Cqrs.Azure.ConfigurationManager
  children:
  - Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1._configurationManager
  - Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1.ConfigurationManager
  - Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1.ConfigureTelemetry
  - Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1.Prepare
  - Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1.PrepareSecurityProtocol
  - Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1.Run(System.Action)
  - Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1.Start
  - Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1.TelemetryClient
  langs:
  - csharp
  - vb
  name: TelemetryCoreHost<TAuthenticationToken>
  nameWithType: TelemetryCoreHost<TAuthenticationToken>
  fullName: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost<TAuthenticationToken>
  type: Class
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.ConfigurationManager/TelemetryCoreHost.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: TelemetryCoreHost
    path: Framework/Azure/Cqrs.Azure.ConfigurationManager/TelemetryCoreHost.cs
    startLine: 20
  assemblies:
  - Cqrs.Azure.ConfigurationManager
  namespace: Cqrs.Azure.ConfigurationManager
  summary: "\nConfigure and start command and event handlers in a host with telemetry\n"
  example: []
  syntax:
    content: 'public abstract class TelemetryCoreHost<TAuthenticationToken> : CoreHost<TAuthenticationToken>'
    typeParameters:
    - id: TAuthenticationToken
    content.vb: >-
      Public MustInherit Class TelemetryCoreHost(Of TAuthenticationToken)
          Inherits CoreHost(Of TAuthenticationToken)
  inheritance:
  - System.Object
  - Cqrs.Hosts.CoreHost{{TAuthenticationToken}}
  derivedClasses:
  - Cqrs.Azure.WebJobs.CqrsJobHost`1
  - Cqrs.Ninject.Azure.Wcf.CqrsWebHost`3
  inheritedMembers:
  - Cqrs.Hosts.CoreHost{{TAuthenticationToken}}.HandlerTypes
  - Cqrs.Hosts.CoreHost{{TAuthenticationToken}}.EventBus
  - Cqrs.Hosts.CoreHost{{TAuthenticationToken}}.CommandBus
  - Cqrs.Hosts.CoreHost{{TAuthenticationToken}}.TelemetryName
  - Cqrs.Hosts.CoreHost{{TAuthenticationToken}}.CorrelationIdHelper
  - Cqrs.Hosts.CoreHost{{TAuthenticationToken}}.Logger
  - Cqrs.Hosts.CoreHost{{TAuthenticationToken}}.ConfigureDefaultDependencyResolver
  - Cqrs.Hosts.CoreHost{{TAuthenticationToken}}.ManuallyRegisterEventHandler``1(System.Action{{TMessage}},System.Boolean)
  - Cqrs.Hosts.CoreHost{{TAuthenticationToken}}.ManuallyRegisterCommandHandler``1(System.Action{{TMessage}},System.Boolean)
  - Cqrs.Hosts.CoreHost{{TAuthenticationToken}}.StartBusRegistrar
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: TelemetryCoreHost(Of TAuthenticationToken)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost(Of TAuthenticationToken)
  name.vb: TelemetryCoreHost(Of TAuthenticationToken)
- uid: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1._configurationManager
  commentId: F:Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1._configurationManager
  id: _configurationManager
  parent: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1
  langs:
  - csharp
  - vb
  name: _configurationManager
  nameWithType: TelemetryCoreHost<TAuthenticationToken>._configurationManager
  fullName: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost<TAuthenticationToken>._configurationManager
  type: Field
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.ConfigurationManager/TelemetryCoreHost.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: _configurationManager
    path: Framework/Azure/Cqrs.Azure.ConfigurationManager/TelemetryCoreHost.cs
    startLine: 22
  assemblies:
  - Cqrs.Azure.ConfigurationManager
  namespace: Cqrs.Azure.ConfigurationManager
  syntax:
    content: protected static readonly IConfigurationManager _configurationManager
    return:
      type: Cqrs.Configuration.IConfigurationManager
    content.vb: Protected Shared ReadOnly _configurationManager As IConfigurationManager
  nameWithType.vb: TelemetryCoreHost(Of TAuthenticationToken)._configurationManager
  modifiers.csharp:
  - protected
  - static
  - readonly
  modifiers.vb:
  - Protected
  - Shared
  - ReadOnly
  fullName.vb: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost(Of TAuthenticationToken)._configurationManager
- uid: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1.ConfigurationManager
  commentId: P:Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1.ConfigurationManager
  id: ConfigurationManager
  parent: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1
  langs:
  - csharp
  - vb
  name: ConfigurationManager
  nameWithType: TelemetryCoreHost<TAuthenticationToken>.ConfigurationManager
  fullName: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost<TAuthenticationToken>.ConfigurationManager
  type: Property
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.ConfigurationManager/TelemetryCoreHost.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: ConfigurationManager
    path: Framework/Azure/Cqrs.Azure.ConfigurationManager/TelemetryCoreHost.cs
    startLine: 27
  assemblies:
  - Cqrs.Azure.ConfigurationManager
  namespace: Cqrs.Azure.ConfigurationManager
  summary: "\nThe <xref href=\"Cqrs.Configuration.IConfigurationManager\" data-throw-if-not-resolved=\"false\"></xref> that can be use before the <xref href=\"Cqrs.Configuration.DependencyResolver.Current\" data-throw-if-not-resolved=\"false\"></xref> is set.\n"
  example: []
  syntax:
    content: protected override IConfigurationManager ConfigurationManager { get; }
    parameters: []
    return:
      type: Cqrs.Configuration.IConfigurationManager
    content.vb: Protected Overrides ReadOnly Property ConfigurationManager As IConfigurationManager
  overridden: Cqrs.Hosts.CoreHost{{TAuthenticationToken}}.ConfigurationManager
  overload: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1.ConfigurationManager*
  nameWithType.vb: TelemetryCoreHost(Of TAuthenticationToken).ConfigurationManager
  modifiers.csharp:
  - protected
  - override
  - get
  modifiers.vb:
  - Protected
  - Overrides
  - ReadOnly
  fullName.vb: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost(Of TAuthenticationToken).ConfigurationManager
- uid: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1.TelemetryClient
  commentId: P:Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1.TelemetryClient
  id: TelemetryClient
  parent: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1
  langs:
  - csharp
  - vb
  name: TelemetryClient
  nameWithType: TelemetryCoreHost<TAuthenticationToken>.TelemetryClient
  fullName: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost<TAuthenticationToken>.TelemetryClient
  type: Property
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.ConfigurationManager/TelemetryCoreHost.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: TelemetryClient
    path: Framework/Azure/Cqrs.Azure.ConfigurationManager/TelemetryCoreHost.cs
    startLine: 32
  assemblies:
  - Cqrs.Azure.ConfigurationManager
  namespace: Cqrs.Azure.ConfigurationManager
  syntax:
    content: public TelemetryClient TelemetryClient { get; }
    parameters: []
    return:
      type: Microsoft.ApplicationInsights.TelemetryClient
    content.vb: Public ReadOnly Property TelemetryClient As TelemetryClient
  overload: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1.TelemetryClient*
  nameWithType.vb: TelemetryCoreHost(Of TAuthenticationToken).TelemetryClient
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost(Of TAuthenticationToken).TelemetryClient
- uid: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1.ConfigureTelemetry
  commentId: M:Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1.ConfigureTelemetry
  id: ConfigureTelemetry
  parent: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1
  langs:
  - csharp
  - vb
  name: ConfigureTelemetry()
  nameWithType: TelemetryCoreHost<TAuthenticationToken>.ConfigureTelemetry()
  fullName: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost<TAuthenticationToken>.ConfigureTelemetry()
  type: Method
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.ConfigurationManager/TelemetryCoreHost.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: ConfigureTelemetry
    path: Framework/Azure/Cqrs.Azure.ConfigurationManager/TelemetryCoreHost.cs
    startLine: 39
  assemblies:
  - Cqrs.Azure.ConfigurationManager
  namespace: Cqrs.Azure.ConfigurationManager
  summary: "\nWhen overridden, allows you to configure Telemetry\n"
  example: []
  syntax:
    content: protected override void ConfigureTelemetry()
    content.vb: Protected Overrides Sub ConfigureTelemetry
  overridden: Cqrs.Hosts.CoreHost{{TAuthenticationToken}}.ConfigureTelemetry
  overload: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1.ConfigureTelemetry*
  nameWithType.vb: TelemetryCoreHost(Of TAuthenticationToken).ConfigureTelemetry()
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost(Of TAuthenticationToken).ConfigureTelemetry()
- uid: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1.Run(System.Action)
  commentId: M:Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1.Run(System.Action)
  id: Run(System.Action)
  parent: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1
  langs:
  - csharp
  - vb
  name: Run(Action)
  nameWithType: TelemetryCoreHost<TAuthenticationToken>.Run(Action)
  fullName: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost<TAuthenticationToken>.Run(System.Action)
  type: Method
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.ConfigurationManager/TelemetryCoreHost.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Run
    path: Framework/Azure/Cqrs.Azure.ConfigurationManager/TelemetryCoreHost.cs
    startLine: 55
  assemblies:
  - Cqrs.Azure.ConfigurationManager
  namespace: Cqrs.Azure.ConfigurationManager
  summary: "\nCalls <xref href=\"Cqrs.Azure.ConfigurationManager.TelemetryCoreHost%601.Prepare\" data-throw-if-not-resolved=\"false\"></xref>, <span class=\"paramref\">handlerRegistation</span> and then <xref href=\"Cqrs.Azure.ConfigurationManager.TelemetryCoreHost%601.Start\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public override void Run(Action handlerRegistation = null)
    parameters:
    - id: handlerRegistation
      type: System.Action
    content.vb: Public Overrides Sub Run(handlerRegistation As Action = Nothing)
  overridden: Cqrs.Hosts.CoreHost{{TAuthenticationToken}}.Run(System.Action)
  overload: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1.Run*
  nameWithType.vb: TelemetryCoreHost(Of TAuthenticationToken).Run(Action)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost(Of TAuthenticationToken).Run(System.Action)
- uid: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1.PrepareSecurityProtocol
  commentId: M:Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1.PrepareSecurityProtocol
  id: PrepareSecurityProtocol
  parent: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1
  langs:
  - csharp
  - vb
  name: PrepareSecurityProtocol()
  nameWithType: TelemetryCoreHost<TAuthenticationToken>.PrepareSecurityProtocol()
  fullName: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost<TAuthenticationToken>.PrepareSecurityProtocol()
  type: Method
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.ConfigurationManager/TelemetryCoreHost.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: PrepareSecurityProtocol
    path: Framework/Azure/Cqrs.Azure.ConfigurationManager/TelemetryCoreHost.cs
    startLine: 66
  assemblies:
  - Cqrs.Azure.ConfigurationManager
  namespace: Cqrs.Azure.ConfigurationManager
  summary: "\nSets the <xref href=\"System.Net.ServicePointManager.SecurityProtocol\" data-throw-if-not-resolved=\"false\"></xref> to\n<xref href=\"System.Net.SecurityProtocolType.Tls12\" data-throw-if-not-resolved=\"false\"></xref> | <xref href=\"System.Net.SecurityProtocolType.Tls11\" data-throw-if-not-resolved=\"false\"></xref> | <xref href=\"System.Net.SecurityProtocolType.Tls\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: protected override void PrepareSecurityProtocol()
    content.vb: Protected Overrides Sub PrepareSecurityProtocol
  overridden: Cqrs.Hosts.CoreHost{{TAuthenticationToken}}.PrepareSecurityProtocol
  overload: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1.PrepareSecurityProtocol*
  nameWithType.vb: TelemetryCoreHost(Of TAuthenticationToken).PrepareSecurityProtocol()
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost(Of TAuthenticationToken).PrepareSecurityProtocol()
- uid: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1.Prepare
  commentId: M:Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1.Prepare
  id: Prepare
  parent: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1
  langs:
  - csharp
  - vb
  name: Prepare()
  nameWithType: TelemetryCoreHost<TAuthenticationToken>.Prepare()
  fullName: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost<TAuthenticationToken>.Prepare()
  type: Method
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.ConfigurationManager/TelemetryCoreHost.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Prepare
    path: Framework/Azure/Cqrs.Azure.ConfigurationManager/TelemetryCoreHost.cs
    startLine: 74
  assemblies:
  - Cqrs.Azure.ConfigurationManager
  namespace: Cqrs.Azure.ConfigurationManager
  summary: "\nPrepare the host before registering handlers and starting the host.\n"
  example: []
  syntax:
    content: protected override void Prepare()
    content.vb: Protected Overrides Sub Prepare
  overridden: Cqrs.Hosts.CoreHost{{TAuthenticationToken}}.Prepare
  overload: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1.Prepare*
  nameWithType.vb: TelemetryCoreHost(Of TAuthenticationToken).Prepare()
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost(Of TAuthenticationToken).Prepare()
- uid: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1.Start
  commentId: M:Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1.Start
  id: Start
  parent: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1
  langs:
  - csharp
  - vb
  name: Start()
  nameWithType: TelemetryCoreHost<TAuthenticationToken>.Start()
  fullName: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost<TAuthenticationToken>.Start()
  type: Method
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.ConfigurationManager/TelemetryCoreHost.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Start
    path: Framework/Azure/Cqrs.Azure.ConfigurationManager/TelemetryCoreHost.cs
    startLine: 84
  assemblies:
  - Cqrs.Azure.ConfigurationManager
  namespace: Cqrs.Azure.ConfigurationManager
  summary: "\nStart the host post preparing and registering handlers.\n"
  example: []
  syntax:
    content: protected override void Start()
    content.vb: Protected Overrides Sub Start
  overridden: Cqrs.Hosts.CoreHost{{TAuthenticationToken}}.Start
  overload: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1.Start*
  nameWithType.vb: TelemetryCoreHost(Of TAuthenticationToken).Start()
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost(Of TAuthenticationToken).Start()
references:
- uid: Cqrs.Azure.ConfigurationManager
  commentId: N:Cqrs.Azure.ConfigurationManager
  isExternal: false
  name: Cqrs.Azure.ConfigurationManager
  nameWithType: Cqrs.Azure.ConfigurationManager
  fullName: Cqrs.Azure.ConfigurationManager
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Cqrs.Hosts.CoreHost{{TAuthenticationToken}}
  commentId: T:Cqrs.Hosts.CoreHost{`0}
  parent: Cqrs.Hosts
  definition: Cqrs.Hosts.CoreHost`1
  name: CoreHost<TAuthenticationToken>
  nameWithType: CoreHost<TAuthenticationToken>
  fullName: Cqrs.Hosts.CoreHost<TAuthenticationToken>
  nameWithType.vb: CoreHost(Of TAuthenticationToken)
  fullName.vb: Cqrs.Hosts.CoreHost(Of TAuthenticationToken)
  name.vb: CoreHost(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Hosts.CoreHost`1
    name: CoreHost
    nameWithType: CoreHost
    fullName: Cqrs.Hosts.CoreHost
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Hosts.CoreHost`1
    name: CoreHost
    nameWithType: CoreHost
    fullName: Cqrs.Hosts.CoreHost
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Hosts.CoreHost{{TAuthenticationToken}}.HandlerTypes
  commentId: P:Cqrs.Hosts.CoreHost{`0}.HandlerTypes
  parent: Cqrs.Hosts.CoreHost{{TAuthenticationToken}}
  definition: Cqrs.Hosts.CoreHost`1.HandlerTypes
  name: HandlerTypes
  nameWithType: CoreHost<TAuthenticationToken>.HandlerTypes
  fullName: Cqrs.Hosts.CoreHost<TAuthenticationToken>.HandlerTypes
  nameWithType.vb: CoreHost(Of TAuthenticationToken).HandlerTypes
  fullName.vb: Cqrs.Hosts.CoreHost(Of TAuthenticationToken).HandlerTypes
- uid: Cqrs.Hosts.CoreHost{{TAuthenticationToken}}.EventBus
  commentId: P:Cqrs.Hosts.CoreHost{`0}.EventBus
  parent: Cqrs.Hosts.CoreHost{{TAuthenticationToken}}
  definition: Cqrs.Hosts.CoreHost`1.EventBus
  name: EventBus
  nameWithType: CoreHost<TAuthenticationToken>.EventBus
  fullName: Cqrs.Hosts.CoreHost<TAuthenticationToken>.EventBus
  nameWithType.vb: CoreHost(Of TAuthenticationToken).EventBus
  fullName.vb: Cqrs.Hosts.CoreHost(Of TAuthenticationToken).EventBus
- uid: Cqrs.Hosts.CoreHost{{TAuthenticationToken}}.CommandBus
  commentId: P:Cqrs.Hosts.CoreHost{`0}.CommandBus
  parent: Cqrs.Hosts.CoreHost{{TAuthenticationToken}}
  definition: Cqrs.Hosts.CoreHost`1.CommandBus
  name: CommandBus
  nameWithType: CoreHost<TAuthenticationToken>.CommandBus
  fullName: Cqrs.Hosts.CoreHost<TAuthenticationToken>.CommandBus
  nameWithType.vb: CoreHost(Of TAuthenticationToken).CommandBus
  fullName.vb: Cqrs.Hosts.CoreHost(Of TAuthenticationToken).CommandBus
- uid: Cqrs.Hosts.CoreHost{{TAuthenticationToken}}.TelemetryName
  commentId: P:Cqrs.Hosts.CoreHost{`0}.TelemetryName
  parent: Cqrs.Hosts.CoreHost{{TAuthenticationToken}}
  definition: Cqrs.Hosts.CoreHost`1.TelemetryName
  name: TelemetryName
  nameWithType: CoreHost<TAuthenticationToken>.TelemetryName
  fullName: Cqrs.Hosts.CoreHost<TAuthenticationToken>.TelemetryName
  nameWithType.vb: CoreHost(Of TAuthenticationToken).TelemetryName
  fullName.vb: Cqrs.Hosts.CoreHost(Of TAuthenticationToken).TelemetryName
- uid: Cqrs.Hosts.CoreHost{{TAuthenticationToken}}.CorrelationIdHelper
  commentId: P:Cqrs.Hosts.CoreHost{`0}.CorrelationIdHelper
  parent: Cqrs.Hosts.CoreHost{{TAuthenticationToken}}
  definition: Cqrs.Hosts.CoreHost`1.CorrelationIdHelper
  name: CorrelationIdHelper
  nameWithType: CoreHost<TAuthenticationToken>.CorrelationIdHelper
  fullName: Cqrs.Hosts.CoreHost<TAuthenticationToken>.CorrelationIdHelper
  nameWithType.vb: CoreHost(Of TAuthenticationToken).CorrelationIdHelper
  fullName.vb: Cqrs.Hosts.CoreHost(Of TAuthenticationToken).CorrelationIdHelper
- uid: Cqrs.Hosts.CoreHost{{TAuthenticationToken}}.Logger
  commentId: P:Cqrs.Hosts.CoreHost{`0}.Logger
  parent: Cqrs.Hosts.CoreHost{{TAuthenticationToken}}
  definition: Cqrs.Hosts.CoreHost`1.Logger
  name: Logger
  nameWithType: CoreHost<TAuthenticationToken>.Logger
  fullName: Cqrs.Hosts.CoreHost<TAuthenticationToken>.Logger
  nameWithType.vb: CoreHost(Of TAuthenticationToken).Logger
  fullName.vb: Cqrs.Hosts.CoreHost(Of TAuthenticationToken).Logger
- uid: Cqrs.Hosts.CoreHost{{TAuthenticationToken}}.ConfigureDefaultDependencyResolver
  commentId: M:Cqrs.Hosts.CoreHost{`0}.ConfigureDefaultDependencyResolver
  parent: Cqrs.Hosts.CoreHost{{TAuthenticationToken}}
  definition: Cqrs.Hosts.CoreHost`1.ConfigureDefaultDependencyResolver
  name: ConfigureDefaultDependencyResolver()
  nameWithType: CoreHost<TAuthenticationToken>.ConfigureDefaultDependencyResolver()
  fullName: Cqrs.Hosts.CoreHost<TAuthenticationToken>.ConfigureDefaultDependencyResolver()
  nameWithType.vb: CoreHost(Of TAuthenticationToken).ConfigureDefaultDependencyResolver()
  fullName.vb: Cqrs.Hosts.CoreHost(Of TAuthenticationToken).ConfigureDefaultDependencyResolver()
  spec.csharp:
  - uid: Cqrs.Hosts.CoreHost`1.ConfigureDefaultDependencyResolver
    name: ConfigureDefaultDependencyResolver
    nameWithType: CoreHost<TAuthenticationToken>.ConfigureDefaultDependencyResolver
    fullName: Cqrs.Hosts.CoreHost<TAuthenticationToken>.ConfigureDefaultDependencyResolver
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Hosts.CoreHost`1.ConfigureDefaultDependencyResolver
    name: ConfigureDefaultDependencyResolver
    nameWithType: CoreHost(Of TAuthenticationToken).ConfigureDefaultDependencyResolver
    fullName: Cqrs.Hosts.CoreHost(Of TAuthenticationToken).ConfigureDefaultDependencyResolver
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Hosts.CoreHost{{TAuthenticationToken}}.ManuallyRegisterEventHandler``1(System.Action{{TMessage}},System.Boolean)
  commentId: M:Cqrs.Hosts.CoreHost{`0}.ManuallyRegisterEventHandler``1(System.Action{``0},System.Boolean)
  parent: Cqrs.Hosts.CoreHost{{TAuthenticationToken}}
  definition: Cqrs.Hosts.CoreHost`1.ManuallyRegisterEventHandler``1(System.Action{``0},System.Boolean)
  name: ManuallyRegisterEventHandler<TMessage>(Action<TMessage>, Boolean)
  nameWithType: CoreHost<TAuthenticationToken>.ManuallyRegisterEventHandler<TMessage>(Action<TMessage>, Boolean)
  fullName: Cqrs.Hosts.CoreHost<TAuthenticationToken>.ManuallyRegisterEventHandler<TMessage>(System.Action<TMessage>, System.Boolean)
  nameWithType.vb: CoreHost(Of TAuthenticationToken).ManuallyRegisterEventHandler(Of TMessage)(Action(Of TMessage), Boolean)
  fullName.vb: Cqrs.Hosts.CoreHost(Of TAuthenticationToken).ManuallyRegisterEventHandler(Of TMessage)(System.Action(Of TMessage), System.Boolean)
  name.vb: ManuallyRegisterEventHandler(Of TMessage)(Action(Of TMessage), Boolean)
  spec.csharp:
  - uid: Cqrs.Hosts.CoreHost`1.ManuallyRegisterEventHandler``1(System.Action{``0},System.Boolean)
    name: ManuallyRegisterEventHandler<TMessage>
    nameWithType: CoreHost<TAuthenticationToken>.ManuallyRegisterEventHandler<TMessage>
    fullName: Cqrs.Hosts.CoreHost<TAuthenticationToken>.ManuallyRegisterEventHandler<TMessage>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TMessage
    nameWithType: TMessage
    fullName: TMessage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Hosts.CoreHost`1.ManuallyRegisterEventHandler``1(System.Action{``0},System.Boolean)
    name: ManuallyRegisterEventHandler(Of TMessage)
    nameWithType: CoreHost(Of TAuthenticationToken).ManuallyRegisterEventHandler(Of TMessage)
    fullName: Cqrs.Hosts.CoreHost(Of TAuthenticationToken).ManuallyRegisterEventHandler(Of TMessage)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TMessage
    nameWithType: TMessage
    fullName: TMessage
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Hosts.CoreHost{{TAuthenticationToken}}.ManuallyRegisterCommandHandler``1(System.Action{{TMessage}},System.Boolean)
  commentId: M:Cqrs.Hosts.CoreHost{`0}.ManuallyRegisterCommandHandler``1(System.Action{``0},System.Boolean)
  parent: Cqrs.Hosts.CoreHost{{TAuthenticationToken}}
  definition: Cqrs.Hosts.CoreHost`1.ManuallyRegisterCommandHandler``1(System.Action{``0},System.Boolean)
  name: ManuallyRegisterCommandHandler<TMessage>(Action<TMessage>, Boolean)
  nameWithType: CoreHost<TAuthenticationToken>.ManuallyRegisterCommandHandler<TMessage>(Action<TMessage>, Boolean)
  fullName: Cqrs.Hosts.CoreHost<TAuthenticationToken>.ManuallyRegisterCommandHandler<TMessage>(System.Action<TMessage>, System.Boolean)
  nameWithType.vb: CoreHost(Of TAuthenticationToken).ManuallyRegisterCommandHandler(Of TMessage)(Action(Of TMessage), Boolean)
  fullName.vb: Cqrs.Hosts.CoreHost(Of TAuthenticationToken).ManuallyRegisterCommandHandler(Of TMessage)(System.Action(Of TMessage), System.Boolean)
  name.vb: ManuallyRegisterCommandHandler(Of TMessage)(Action(Of TMessage), Boolean)
  spec.csharp:
  - uid: Cqrs.Hosts.CoreHost`1.ManuallyRegisterCommandHandler``1(System.Action{``0},System.Boolean)
    name: ManuallyRegisterCommandHandler<TMessage>
    nameWithType: CoreHost<TAuthenticationToken>.ManuallyRegisterCommandHandler<TMessage>
    fullName: Cqrs.Hosts.CoreHost<TAuthenticationToken>.ManuallyRegisterCommandHandler<TMessage>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TMessage
    nameWithType: TMessage
    fullName: TMessage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Hosts.CoreHost`1.ManuallyRegisterCommandHandler``1(System.Action{``0},System.Boolean)
    name: ManuallyRegisterCommandHandler(Of TMessage)
    nameWithType: CoreHost(Of TAuthenticationToken).ManuallyRegisterCommandHandler(Of TMessage)
    fullName: Cqrs.Hosts.CoreHost(Of TAuthenticationToken).ManuallyRegisterCommandHandler(Of TMessage)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TMessage
    nameWithType: TMessage
    fullName: TMessage
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Hosts.CoreHost{{TAuthenticationToken}}.StartBusRegistrar
  commentId: M:Cqrs.Hosts.CoreHost{`0}.StartBusRegistrar
  parent: Cqrs.Hosts.CoreHost{{TAuthenticationToken}}
  definition: Cqrs.Hosts.CoreHost`1.StartBusRegistrar
  name: StartBusRegistrar()
  nameWithType: CoreHost<TAuthenticationToken>.StartBusRegistrar()
  fullName: Cqrs.Hosts.CoreHost<TAuthenticationToken>.StartBusRegistrar()
  nameWithType.vb: CoreHost(Of TAuthenticationToken).StartBusRegistrar()
  fullName.vb: Cqrs.Hosts.CoreHost(Of TAuthenticationToken).StartBusRegistrar()
  spec.csharp:
  - uid: Cqrs.Hosts.CoreHost`1.StartBusRegistrar
    name: StartBusRegistrar
    nameWithType: CoreHost<TAuthenticationToken>.StartBusRegistrar
    fullName: Cqrs.Hosts.CoreHost<TAuthenticationToken>.StartBusRegistrar
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Hosts.CoreHost`1.StartBusRegistrar
    name: StartBusRegistrar
    nameWithType: CoreHost(Of TAuthenticationToken).StartBusRegistrar
    fullName: Cqrs.Hosts.CoreHost(Of TAuthenticationToken).StartBusRegistrar
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Cqrs.Hosts.CoreHost`1
  commentId: T:Cqrs.Hosts.CoreHost`1
  isExternal: false
  name: CoreHost<TAuthenticationToken>
  nameWithType: CoreHost<TAuthenticationToken>
  fullName: Cqrs.Hosts.CoreHost<TAuthenticationToken>
  nameWithType.vb: CoreHost(Of TAuthenticationToken)
  fullName.vb: Cqrs.Hosts.CoreHost(Of TAuthenticationToken)
  name.vb: CoreHost(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Hosts.CoreHost`1
    name: CoreHost
    nameWithType: CoreHost
    fullName: Cqrs.Hosts.CoreHost
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Hosts.CoreHost`1
    name: CoreHost
    nameWithType: CoreHost
    fullName: Cqrs.Hosts.CoreHost
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Hosts
  commentId: N:Cqrs.Hosts
  isExternal: false
  name: Cqrs.Hosts
  nameWithType: Cqrs.Hosts
  fullName: Cqrs.Hosts
- uid: Cqrs.Hosts.CoreHost`1.HandlerTypes
  commentId: P:Cqrs.Hosts.CoreHost`1.HandlerTypes
  isExternal: false
  name: HandlerTypes
  nameWithType: CoreHost<TAuthenticationToken>.HandlerTypes
  fullName: Cqrs.Hosts.CoreHost<TAuthenticationToken>.HandlerTypes
  nameWithType.vb: CoreHost(Of TAuthenticationToken).HandlerTypes
  fullName.vb: Cqrs.Hosts.CoreHost(Of TAuthenticationToken).HandlerTypes
- uid: Cqrs.Hosts.CoreHost`1.EventBus
  commentId: P:Cqrs.Hosts.CoreHost`1.EventBus
  isExternal: false
  name: EventBus
  nameWithType: CoreHost<TAuthenticationToken>.EventBus
  fullName: Cqrs.Hosts.CoreHost<TAuthenticationToken>.EventBus
  nameWithType.vb: CoreHost(Of TAuthenticationToken).EventBus
  fullName.vb: Cqrs.Hosts.CoreHost(Of TAuthenticationToken).EventBus
- uid: Cqrs.Hosts.CoreHost`1.CommandBus
  commentId: P:Cqrs.Hosts.CoreHost`1.CommandBus
  isExternal: false
  name: CommandBus
  nameWithType: CoreHost<TAuthenticationToken>.CommandBus
  fullName: Cqrs.Hosts.CoreHost<TAuthenticationToken>.CommandBus
  nameWithType.vb: CoreHost(Of TAuthenticationToken).CommandBus
  fullName.vb: Cqrs.Hosts.CoreHost(Of TAuthenticationToken).CommandBus
- uid: Cqrs.Hosts.CoreHost`1.TelemetryName
  commentId: P:Cqrs.Hosts.CoreHost`1.TelemetryName
  isExternal: false
  name: TelemetryName
  nameWithType: CoreHost<TAuthenticationToken>.TelemetryName
  fullName: Cqrs.Hosts.CoreHost<TAuthenticationToken>.TelemetryName
  nameWithType.vb: CoreHost(Of TAuthenticationToken).TelemetryName
  fullName.vb: Cqrs.Hosts.CoreHost(Of TAuthenticationToken).TelemetryName
- uid: Cqrs.Hosts.CoreHost`1.CorrelationIdHelper
  commentId: P:Cqrs.Hosts.CoreHost`1.CorrelationIdHelper
  isExternal: false
  name: CorrelationIdHelper
  nameWithType: CoreHost<TAuthenticationToken>.CorrelationIdHelper
  fullName: Cqrs.Hosts.CoreHost<TAuthenticationToken>.CorrelationIdHelper
  nameWithType.vb: CoreHost(Of TAuthenticationToken).CorrelationIdHelper
  fullName.vb: Cqrs.Hosts.CoreHost(Of TAuthenticationToken).CorrelationIdHelper
- uid: Cqrs.Hosts.CoreHost`1.Logger
  commentId: P:Cqrs.Hosts.CoreHost`1.Logger
  isExternal: false
  name: Logger
  nameWithType: CoreHost<TAuthenticationToken>.Logger
  fullName: Cqrs.Hosts.CoreHost<TAuthenticationToken>.Logger
  nameWithType.vb: CoreHost(Of TAuthenticationToken).Logger
  fullName.vb: Cqrs.Hosts.CoreHost(Of TAuthenticationToken).Logger
- uid: Cqrs.Hosts.CoreHost`1.ConfigureDefaultDependencyResolver
  commentId: M:Cqrs.Hosts.CoreHost`1.ConfigureDefaultDependencyResolver
  isExternal: false
  name: ConfigureDefaultDependencyResolver()
  nameWithType: CoreHost<TAuthenticationToken>.ConfigureDefaultDependencyResolver()
  fullName: Cqrs.Hosts.CoreHost<TAuthenticationToken>.ConfigureDefaultDependencyResolver()
  nameWithType.vb: CoreHost(Of TAuthenticationToken).ConfigureDefaultDependencyResolver()
  fullName.vb: Cqrs.Hosts.CoreHost(Of TAuthenticationToken).ConfigureDefaultDependencyResolver()
  spec.csharp:
  - uid: Cqrs.Hosts.CoreHost`1.ConfigureDefaultDependencyResolver
    name: ConfigureDefaultDependencyResolver
    nameWithType: CoreHost<TAuthenticationToken>.ConfigureDefaultDependencyResolver
    fullName: Cqrs.Hosts.CoreHost<TAuthenticationToken>.ConfigureDefaultDependencyResolver
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Hosts.CoreHost`1.ConfigureDefaultDependencyResolver
    name: ConfigureDefaultDependencyResolver
    nameWithType: CoreHost(Of TAuthenticationToken).ConfigureDefaultDependencyResolver
    fullName: Cqrs.Hosts.CoreHost(Of TAuthenticationToken).ConfigureDefaultDependencyResolver
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Hosts.CoreHost`1.ManuallyRegisterEventHandler``1(System.Action{``0},System.Boolean)
  commentId: M:Cqrs.Hosts.CoreHost`1.ManuallyRegisterEventHandler``1(System.Action{``0},System.Boolean)
  isExternal: true
  name: ManuallyRegisterEventHandler<TMessage>(Action<TMessage>, Boolean)
  nameWithType: CoreHost<TAuthenticationToken>.ManuallyRegisterEventHandler<TMessage>(Action<TMessage>, Boolean)
  fullName: Cqrs.Hosts.CoreHost<TAuthenticationToken>.ManuallyRegisterEventHandler<TMessage>(System.Action<TMessage>, System.Boolean)
  nameWithType.vb: CoreHost(Of TAuthenticationToken).ManuallyRegisterEventHandler(Of TMessage)(Action(Of TMessage), Boolean)
  fullName.vb: Cqrs.Hosts.CoreHost(Of TAuthenticationToken).ManuallyRegisterEventHandler(Of TMessage)(System.Action(Of TMessage), System.Boolean)
  name.vb: ManuallyRegisterEventHandler(Of TMessage)(Action(Of TMessage), Boolean)
  spec.csharp:
  - uid: Cqrs.Hosts.CoreHost`1.ManuallyRegisterEventHandler``1(System.Action{``0},System.Boolean)
    name: ManuallyRegisterEventHandler<TMessage>
    nameWithType: CoreHost<TAuthenticationToken>.ManuallyRegisterEventHandler<TMessage>
    fullName: Cqrs.Hosts.CoreHost<TAuthenticationToken>.ManuallyRegisterEventHandler<TMessage>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TMessage
    nameWithType: TMessage
    fullName: TMessage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Hosts.CoreHost`1.ManuallyRegisterEventHandler``1(System.Action{``0},System.Boolean)
    name: ManuallyRegisterEventHandler(Of TMessage)
    nameWithType: CoreHost(Of TAuthenticationToken).ManuallyRegisterEventHandler(Of TMessage)
    fullName: Cqrs.Hosts.CoreHost(Of TAuthenticationToken).ManuallyRegisterEventHandler(Of TMessage)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TMessage
    nameWithType: TMessage
    fullName: TMessage
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Hosts.CoreHost`1.ManuallyRegisterCommandHandler``1(System.Action{``0},System.Boolean)
  commentId: M:Cqrs.Hosts.CoreHost`1.ManuallyRegisterCommandHandler``1(System.Action{``0},System.Boolean)
  isExternal: true
  name: ManuallyRegisterCommandHandler<TMessage>(Action<TMessage>, Boolean)
  nameWithType: CoreHost<TAuthenticationToken>.ManuallyRegisterCommandHandler<TMessage>(Action<TMessage>, Boolean)
  fullName: Cqrs.Hosts.CoreHost<TAuthenticationToken>.ManuallyRegisterCommandHandler<TMessage>(System.Action<TMessage>, System.Boolean)
  nameWithType.vb: CoreHost(Of TAuthenticationToken).ManuallyRegisterCommandHandler(Of TMessage)(Action(Of TMessage), Boolean)
  fullName.vb: Cqrs.Hosts.CoreHost(Of TAuthenticationToken).ManuallyRegisterCommandHandler(Of TMessage)(System.Action(Of TMessage), System.Boolean)
  name.vb: ManuallyRegisterCommandHandler(Of TMessage)(Action(Of TMessage), Boolean)
  spec.csharp:
  - uid: Cqrs.Hosts.CoreHost`1.ManuallyRegisterCommandHandler``1(System.Action{``0},System.Boolean)
    name: ManuallyRegisterCommandHandler<TMessage>
    nameWithType: CoreHost<TAuthenticationToken>.ManuallyRegisterCommandHandler<TMessage>
    fullName: Cqrs.Hosts.CoreHost<TAuthenticationToken>.ManuallyRegisterCommandHandler<TMessage>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TMessage
    nameWithType: TMessage
    fullName: TMessage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Hosts.CoreHost`1.ManuallyRegisterCommandHandler``1(System.Action{``0},System.Boolean)
    name: ManuallyRegisterCommandHandler(Of TMessage)
    nameWithType: CoreHost(Of TAuthenticationToken).ManuallyRegisterCommandHandler(Of TMessage)
    fullName: Cqrs.Hosts.CoreHost(Of TAuthenticationToken).ManuallyRegisterCommandHandler(Of TMessage)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TMessage
    nameWithType: TMessage
    fullName: TMessage
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Hosts.CoreHost`1.StartBusRegistrar
  commentId: M:Cqrs.Hosts.CoreHost`1.StartBusRegistrar
  isExternal: false
  name: StartBusRegistrar()
  nameWithType: CoreHost<TAuthenticationToken>.StartBusRegistrar()
  fullName: Cqrs.Hosts.CoreHost<TAuthenticationToken>.StartBusRegistrar()
  nameWithType.vb: CoreHost(Of TAuthenticationToken).StartBusRegistrar()
  fullName.vb: Cqrs.Hosts.CoreHost(Of TAuthenticationToken).StartBusRegistrar()
  spec.csharp:
  - uid: Cqrs.Hosts.CoreHost`1.StartBusRegistrar
    name: StartBusRegistrar
    nameWithType: CoreHost<TAuthenticationToken>.StartBusRegistrar
    fullName: Cqrs.Hosts.CoreHost<TAuthenticationToken>.StartBusRegistrar
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Hosts.CoreHost`1.StartBusRegistrar
    name: StartBusRegistrar
    nameWithType: CoreHost(Of TAuthenticationToken).StartBusRegistrar
    fullName: Cqrs.Hosts.CoreHost(Of TAuthenticationToken).StartBusRegistrar
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Configuration.IConfigurationManager
  commentId: T:Cqrs.Configuration.IConfigurationManager
  parent: Cqrs.Configuration
  isExternal: false
  name: IConfigurationManager
  nameWithType: IConfigurationManager
  fullName: Cqrs.Configuration.IConfigurationManager
- uid: Cqrs.Configuration
  commentId: N:Cqrs.Configuration
  isExternal: false
  name: Cqrs.Configuration
  nameWithType: Cqrs.Configuration
  fullName: Cqrs.Configuration
- uid: Cqrs.Configuration.DependencyResolver.Current
  commentId: P:Cqrs.Configuration.DependencyResolver.Current
  parent: Cqrs.Configuration.DependencyResolver
  isExternal: false
  name: Current
  nameWithType: DependencyResolver.Current
  fullName: Cqrs.Configuration.DependencyResolver.Current
- uid: Cqrs.Hosts.CoreHost{{TAuthenticationToken}}.ConfigurationManager
  commentId: P:Cqrs.Hosts.CoreHost{`0}.ConfigurationManager
  parent: Cqrs.Hosts.CoreHost{{TAuthenticationToken}}
  definition: Cqrs.Hosts.CoreHost`1.ConfigurationManager
  name: ConfigurationManager
  nameWithType: CoreHost<TAuthenticationToken>.ConfigurationManager
  fullName: Cqrs.Hosts.CoreHost<TAuthenticationToken>.ConfigurationManager
  nameWithType.vb: CoreHost(Of TAuthenticationToken).ConfigurationManager
  fullName.vb: Cqrs.Hosts.CoreHost(Of TAuthenticationToken).ConfigurationManager
- uid: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1.ConfigurationManager*
  commentId: Overload:Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1.ConfigurationManager
  isExternal: false
  name: ConfigurationManager
  nameWithType: TelemetryCoreHost<TAuthenticationToken>.ConfigurationManager
  fullName: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost<TAuthenticationToken>.ConfigurationManager
  nameWithType.vb: TelemetryCoreHost(Of TAuthenticationToken).ConfigurationManager
  fullName.vb: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost(Of TAuthenticationToken).ConfigurationManager
- uid: Cqrs.Configuration.DependencyResolver
  commentId: T:Cqrs.Configuration.DependencyResolver
  parent: Cqrs.Configuration
  isExternal: false
  name: DependencyResolver
  nameWithType: DependencyResolver
  fullName: Cqrs.Configuration.DependencyResolver
- uid: Cqrs.Hosts.CoreHost`1.ConfigurationManager
  commentId: P:Cqrs.Hosts.CoreHost`1.ConfigurationManager
  isExternal: false
  name: ConfigurationManager
  nameWithType: CoreHost<TAuthenticationToken>.ConfigurationManager
  fullName: Cqrs.Hosts.CoreHost<TAuthenticationToken>.ConfigurationManager
  nameWithType.vb: CoreHost(Of TAuthenticationToken).ConfigurationManager
  fullName.vb: Cqrs.Hosts.CoreHost(Of TAuthenticationToken).ConfigurationManager
- uid: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1.TelemetryClient*
  commentId: Overload:Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1.TelemetryClient
  isExternal: false
  name: TelemetryClient
  nameWithType: TelemetryCoreHost<TAuthenticationToken>.TelemetryClient
  fullName: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost<TAuthenticationToken>.TelemetryClient
  nameWithType.vb: TelemetryCoreHost(Of TAuthenticationToken).TelemetryClient
  fullName.vb: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost(Of TAuthenticationToken).TelemetryClient
- uid: Microsoft.ApplicationInsights.TelemetryClient
  commentId: T:Microsoft.ApplicationInsights.TelemetryClient
  parent: Microsoft.ApplicationInsights
  isExternal: true
  name: TelemetryClient
  nameWithType: TelemetryClient
  fullName: Microsoft.ApplicationInsights.TelemetryClient
- uid: Microsoft.ApplicationInsights
  commentId: N:Microsoft.ApplicationInsights
  isExternal: false
  name: Microsoft.ApplicationInsights
  nameWithType: Microsoft.ApplicationInsights
  fullName: Microsoft.ApplicationInsights
- uid: Cqrs.Hosts.CoreHost{{TAuthenticationToken}}.ConfigureTelemetry
  commentId: M:Cqrs.Hosts.CoreHost{`0}.ConfigureTelemetry
  parent: Cqrs.Hosts.CoreHost{{TAuthenticationToken}}
  definition: Cqrs.Hosts.CoreHost`1.ConfigureTelemetry
  name: ConfigureTelemetry()
  nameWithType: CoreHost<TAuthenticationToken>.ConfigureTelemetry()
  fullName: Cqrs.Hosts.CoreHost<TAuthenticationToken>.ConfigureTelemetry()
  nameWithType.vb: CoreHost(Of TAuthenticationToken).ConfigureTelemetry()
  fullName.vb: Cqrs.Hosts.CoreHost(Of TAuthenticationToken).ConfigureTelemetry()
  spec.csharp:
  - uid: Cqrs.Hosts.CoreHost`1.ConfigureTelemetry
    name: ConfigureTelemetry
    nameWithType: CoreHost<TAuthenticationToken>.ConfigureTelemetry
    fullName: Cqrs.Hosts.CoreHost<TAuthenticationToken>.ConfigureTelemetry
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Hosts.CoreHost`1.ConfigureTelemetry
    name: ConfigureTelemetry
    nameWithType: CoreHost(Of TAuthenticationToken).ConfigureTelemetry
    fullName: Cqrs.Hosts.CoreHost(Of TAuthenticationToken).ConfigureTelemetry
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1.ConfigureTelemetry*
  commentId: Overload:Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1.ConfigureTelemetry
  isExternal: false
  name: ConfigureTelemetry
  nameWithType: TelemetryCoreHost<TAuthenticationToken>.ConfigureTelemetry
  fullName: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost<TAuthenticationToken>.ConfigureTelemetry
  nameWithType.vb: TelemetryCoreHost(Of TAuthenticationToken).ConfigureTelemetry
  fullName.vb: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost(Of TAuthenticationToken).ConfigureTelemetry
- uid: Cqrs.Hosts.CoreHost`1.ConfigureTelemetry
  commentId: M:Cqrs.Hosts.CoreHost`1.ConfigureTelemetry
  isExternal: false
  name: ConfigureTelemetry()
  nameWithType: CoreHost<TAuthenticationToken>.ConfigureTelemetry()
  fullName: Cqrs.Hosts.CoreHost<TAuthenticationToken>.ConfigureTelemetry()
  nameWithType.vb: CoreHost(Of TAuthenticationToken).ConfigureTelemetry()
  fullName.vb: Cqrs.Hosts.CoreHost(Of TAuthenticationToken).ConfigureTelemetry()
  spec.csharp:
  - uid: Cqrs.Hosts.CoreHost`1.ConfigureTelemetry
    name: ConfigureTelemetry
    nameWithType: CoreHost<TAuthenticationToken>.ConfigureTelemetry
    fullName: Cqrs.Hosts.CoreHost<TAuthenticationToken>.ConfigureTelemetry
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Hosts.CoreHost`1.ConfigureTelemetry
    name: ConfigureTelemetry
    nameWithType: CoreHost(Of TAuthenticationToken).ConfigureTelemetry
    fullName: Cqrs.Hosts.CoreHost(Of TAuthenticationToken).ConfigureTelemetry
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1.Prepare
  commentId: M:Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1.Prepare
  isExternal: false
  name: Prepare()
  nameWithType: TelemetryCoreHost<TAuthenticationToken>.Prepare()
  fullName: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost<TAuthenticationToken>.Prepare()
  nameWithType.vb: TelemetryCoreHost(Of TAuthenticationToken).Prepare()
  fullName.vb: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost(Of TAuthenticationToken).Prepare()
  spec.csharp:
  - uid: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1.Prepare
    name: Prepare
    nameWithType: TelemetryCoreHost<TAuthenticationToken>.Prepare
    fullName: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost<TAuthenticationToken>.Prepare
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1.Prepare
    name: Prepare
    nameWithType: TelemetryCoreHost(Of TAuthenticationToken).Prepare
    fullName: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost(Of TAuthenticationToken).Prepare
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1.Start
  commentId: M:Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1.Start
  isExternal: false
  name: Start()
  nameWithType: TelemetryCoreHost<TAuthenticationToken>.Start()
  fullName: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost<TAuthenticationToken>.Start()
  nameWithType.vb: TelemetryCoreHost(Of TAuthenticationToken).Start()
  fullName.vb: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost(Of TAuthenticationToken).Start()
  spec.csharp:
  - uid: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1.Start
    name: Start
    nameWithType: TelemetryCoreHost<TAuthenticationToken>.Start
    fullName: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost<TAuthenticationToken>.Start
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1.Start
    name: Start
    nameWithType: TelemetryCoreHost(Of TAuthenticationToken).Start
    fullName: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost(Of TAuthenticationToken).Start
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Hosts.CoreHost{{TAuthenticationToken}}.Run(System.Action)
  commentId: M:Cqrs.Hosts.CoreHost{`0}.Run(System.Action)
  parent: Cqrs.Hosts.CoreHost{{TAuthenticationToken}}
  definition: Cqrs.Hosts.CoreHost`1.Run(System.Action)
  name: Run(Action)
  nameWithType: CoreHost<TAuthenticationToken>.Run(Action)
  fullName: Cqrs.Hosts.CoreHost<TAuthenticationToken>.Run(System.Action)
  nameWithType.vb: CoreHost(Of TAuthenticationToken).Run(Action)
  fullName.vb: Cqrs.Hosts.CoreHost(Of TAuthenticationToken).Run(System.Action)
  spec.csharp:
  - uid: Cqrs.Hosts.CoreHost`1.Run(System.Action)
    name: Run
    nameWithType: CoreHost<TAuthenticationToken>.Run
    fullName: Cqrs.Hosts.CoreHost<TAuthenticationToken>.Run
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Hosts.CoreHost`1.Run(System.Action)
    name: Run
    nameWithType: CoreHost(Of TAuthenticationToken).Run
    fullName: Cqrs.Hosts.CoreHost(Of TAuthenticationToken).Run
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1.Run*
  commentId: Overload:Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1.Run
  isExternal: false
  name: Run
  nameWithType: TelemetryCoreHost<TAuthenticationToken>.Run
  fullName: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost<TAuthenticationToken>.Run
  nameWithType.vb: TelemetryCoreHost(Of TAuthenticationToken).Run
  fullName.vb: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost(Of TAuthenticationToken).Run
- uid: System.Action
  commentId: T:System.Action
  parent: System
  isExternal: true
  name: Action
  nameWithType: Action
  fullName: System.Action
- uid: Cqrs.Hosts.CoreHost`1.Run(System.Action)
  commentId: M:Cqrs.Hosts.CoreHost`1.Run(System.Action)
  isExternal: true
  name: Run(Action)
  nameWithType: CoreHost<TAuthenticationToken>.Run(Action)
  fullName: Cqrs.Hosts.CoreHost<TAuthenticationToken>.Run(System.Action)
  nameWithType.vb: CoreHost(Of TAuthenticationToken).Run(Action)
  fullName.vb: Cqrs.Hosts.CoreHost(Of TAuthenticationToken).Run(System.Action)
  spec.csharp:
  - uid: Cqrs.Hosts.CoreHost`1.Run(System.Action)
    name: Run
    nameWithType: CoreHost<TAuthenticationToken>.Run
    fullName: Cqrs.Hosts.CoreHost<TAuthenticationToken>.Run
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Hosts.CoreHost`1.Run(System.Action)
    name: Run
    nameWithType: CoreHost(Of TAuthenticationToken).Run
    fullName: Cqrs.Hosts.CoreHost(Of TAuthenticationToken).Run
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Net.ServicePointManager.SecurityProtocol
  commentId: P:System.Net.ServicePointManager.SecurityProtocol
- uid: System.Net.SecurityProtocolType.Tls12
  commentId: F:System.Net.SecurityProtocolType.Tls12
- uid: System.Net.SecurityProtocolType.Tls11
  commentId: F:System.Net.SecurityProtocolType.Tls11
- uid: System.Net.SecurityProtocolType.Tls
  commentId: F:System.Net.SecurityProtocolType.Tls
- uid: Cqrs.Hosts.CoreHost{{TAuthenticationToken}}.PrepareSecurityProtocol
  commentId: M:Cqrs.Hosts.CoreHost{`0}.PrepareSecurityProtocol
  parent: Cqrs.Hosts.CoreHost{{TAuthenticationToken}}
  definition: Cqrs.Hosts.CoreHost`1.PrepareSecurityProtocol
  name: PrepareSecurityProtocol()
  nameWithType: CoreHost<TAuthenticationToken>.PrepareSecurityProtocol()
  fullName: Cqrs.Hosts.CoreHost<TAuthenticationToken>.PrepareSecurityProtocol()
  nameWithType.vb: CoreHost(Of TAuthenticationToken).PrepareSecurityProtocol()
  fullName.vb: Cqrs.Hosts.CoreHost(Of TAuthenticationToken).PrepareSecurityProtocol()
  spec.csharp:
  - uid: Cqrs.Hosts.CoreHost`1.PrepareSecurityProtocol
    name: PrepareSecurityProtocol
    nameWithType: CoreHost<TAuthenticationToken>.PrepareSecurityProtocol
    fullName: Cqrs.Hosts.CoreHost<TAuthenticationToken>.PrepareSecurityProtocol
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Hosts.CoreHost`1.PrepareSecurityProtocol
    name: PrepareSecurityProtocol
    nameWithType: CoreHost(Of TAuthenticationToken).PrepareSecurityProtocol
    fullName: Cqrs.Hosts.CoreHost(Of TAuthenticationToken).PrepareSecurityProtocol
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1.PrepareSecurityProtocol*
  commentId: Overload:Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1.PrepareSecurityProtocol
  isExternal: false
  name: PrepareSecurityProtocol
  nameWithType: TelemetryCoreHost<TAuthenticationToken>.PrepareSecurityProtocol
  fullName: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost<TAuthenticationToken>.PrepareSecurityProtocol
  nameWithType.vb: TelemetryCoreHost(Of TAuthenticationToken).PrepareSecurityProtocol
  fullName.vb: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost(Of TAuthenticationToken).PrepareSecurityProtocol
- uid: Cqrs.Hosts.CoreHost`1.PrepareSecurityProtocol
  commentId: M:Cqrs.Hosts.CoreHost`1.PrepareSecurityProtocol
  isExternal: false
  name: PrepareSecurityProtocol()
  nameWithType: CoreHost<TAuthenticationToken>.PrepareSecurityProtocol()
  fullName: Cqrs.Hosts.CoreHost<TAuthenticationToken>.PrepareSecurityProtocol()
  nameWithType.vb: CoreHost(Of TAuthenticationToken).PrepareSecurityProtocol()
  fullName.vb: Cqrs.Hosts.CoreHost(Of TAuthenticationToken).PrepareSecurityProtocol()
  spec.csharp:
  - uid: Cqrs.Hosts.CoreHost`1.PrepareSecurityProtocol
    name: PrepareSecurityProtocol
    nameWithType: CoreHost<TAuthenticationToken>.PrepareSecurityProtocol
    fullName: Cqrs.Hosts.CoreHost<TAuthenticationToken>.PrepareSecurityProtocol
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Hosts.CoreHost`1.PrepareSecurityProtocol
    name: PrepareSecurityProtocol
    nameWithType: CoreHost(Of TAuthenticationToken).PrepareSecurityProtocol
    fullName: Cqrs.Hosts.CoreHost(Of TAuthenticationToken).PrepareSecurityProtocol
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Hosts.CoreHost{{TAuthenticationToken}}.Prepare
  commentId: M:Cqrs.Hosts.CoreHost{`0}.Prepare
  parent: Cqrs.Hosts.CoreHost{{TAuthenticationToken}}
  definition: Cqrs.Hosts.CoreHost`1.Prepare
  name: Prepare()
  nameWithType: CoreHost<TAuthenticationToken>.Prepare()
  fullName: Cqrs.Hosts.CoreHost<TAuthenticationToken>.Prepare()
  nameWithType.vb: CoreHost(Of TAuthenticationToken).Prepare()
  fullName.vb: Cqrs.Hosts.CoreHost(Of TAuthenticationToken).Prepare()
  spec.csharp:
  - uid: Cqrs.Hosts.CoreHost`1.Prepare
    name: Prepare
    nameWithType: CoreHost<TAuthenticationToken>.Prepare
    fullName: Cqrs.Hosts.CoreHost<TAuthenticationToken>.Prepare
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Hosts.CoreHost`1.Prepare
    name: Prepare
    nameWithType: CoreHost(Of TAuthenticationToken).Prepare
    fullName: Cqrs.Hosts.CoreHost(Of TAuthenticationToken).Prepare
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1.Prepare*
  commentId: Overload:Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1.Prepare
  isExternal: false
  name: Prepare
  nameWithType: TelemetryCoreHost<TAuthenticationToken>.Prepare
  fullName: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost<TAuthenticationToken>.Prepare
  nameWithType.vb: TelemetryCoreHost(Of TAuthenticationToken).Prepare
  fullName.vb: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost(Of TAuthenticationToken).Prepare
- uid: Cqrs.Hosts.CoreHost`1.Prepare
  commentId: M:Cqrs.Hosts.CoreHost`1.Prepare
  isExternal: false
  name: Prepare()
  nameWithType: CoreHost<TAuthenticationToken>.Prepare()
  fullName: Cqrs.Hosts.CoreHost<TAuthenticationToken>.Prepare()
  nameWithType.vb: CoreHost(Of TAuthenticationToken).Prepare()
  fullName.vb: Cqrs.Hosts.CoreHost(Of TAuthenticationToken).Prepare()
  spec.csharp:
  - uid: Cqrs.Hosts.CoreHost`1.Prepare
    name: Prepare
    nameWithType: CoreHost<TAuthenticationToken>.Prepare
    fullName: Cqrs.Hosts.CoreHost<TAuthenticationToken>.Prepare
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Hosts.CoreHost`1.Prepare
    name: Prepare
    nameWithType: CoreHost(Of TAuthenticationToken).Prepare
    fullName: Cqrs.Hosts.CoreHost(Of TAuthenticationToken).Prepare
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Hosts.CoreHost{{TAuthenticationToken}}.Start
  commentId: M:Cqrs.Hosts.CoreHost{`0}.Start
  parent: Cqrs.Hosts.CoreHost{{TAuthenticationToken}}
  definition: Cqrs.Hosts.CoreHost`1.Start
  name: Start()
  nameWithType: CoreHost<TAuthenticationToken>.Start()
  fullName: Cqrs.Hosts.CoreHost<TAuthenticationToken>.Start()
  nameWithType.vb: CoreHost(Of TAuthenticationToken).Start()
  fullName.vb: Cqrs.Hosts.CoreHost(Of TAuthenticationToken).Start()
  spec.csharp:
  - uid: Cqrs.Hosts.CoreHost`1.Start
    name: Start
    nameWithType: CoreHost<TAuthenticationToken>.Start
    fullName: Cqrs.Hosts.CoreHost<TAuthenticationToken>.Start
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Hosts.CoreHost`1.Start
    name: Start
    nameWithType: CoreHost(Of TAuthenticationToken).Start
    fullName: Cqrs.Hosts.CoreHost(Of TAuthenticationToken).Start
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1.Start*
  commentId: Overload:Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1.Start
  isExternal: false
  name: Start
  nameWithType: TelemetryCoreHost<TAuthenticationToken>.Start
  fullName: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost<TAuthenticationToken>.Start
  nameWithType.vb: TelemetryCoreHost(Of TAuthenticationToken).Start
  fullName.vb: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost(Of TAuthenticationToken).Start
- uid: Cqrs.Hosts.CoreHost`1.Start
  commentId: M:Cqrs.Hosts.CoreHost`1.Start
  isExternal: false
  name: Start()
  nameWithType: CoreHost<TAuthenticationToken>.Start()
  fullName: Cqrs.Hosts.CoreHost<TAuthenticationToken>.Start()
  nameWithType.vb: CoreHost(Of TAuthenticationToken).Start()
  fullName.vb: Cqrs.Hosts.CoreHost(Of TAuthenticationToken).Start()
  spec.csharp:
  - uid: Cqrs.Hosts.CoreHost`1.Start
    name: Start
    nameWithType: CoreHost<TAuthenticationToken>.Start
    fullName: Cqrs.Hosts.CoreHost<TAuthenticationToken>.Start
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Hosts.CoreHost`1.Start
    name: Start
    nameWithType: CoreHost(Of TAuthenticationToken).Start
    fullName: Cqrs.Hosts.CoreHost(Of TAuthenticationToken).Start
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
