### YamlMime:ManagedReference
items:
- uid: Cqrs.Akka.Events.AkkaEventBusProxy`1
  commentId: T:Cqrs.Akka.Events.AkkaEventBusProxy`1
  id: AkkaEventBusProxy`1
  parent: Cqrs.Akka.Events
  children:
  - Cqrs.Akka.Events.AkkaEventBusProxy`1.#ctor(Cqrs.Configuration.IDependencyResolver,cdmdotnet.Logging.ICorrelationIdHelper,Cqrs.Authentication.IAuthenticationTokenHelper{`0})
  - Cqrs.Akka.Events.AkkaEventBusProxy`1.AuthenticationTokenHelper
  - Cqrs.Akka.Events.AkkaEventBusProxy`1.CorrelationIdHelper
  - Cqrs.Akka.Events.AkkaEventBusProxy`1.EventHandlerResolver
  - Cqrs.Akka.Events.AkkaEventBusProxy`1.Publish``1(``0)
  - Cqrs.Akka.Events.AkkaEventBusProxy`1.Publish``1(System.Collections.Generic.IEnumerable{``0})
  langs:
  - csharp
  - vb
  name: AkkaEventBusProxy<TAuthenticationToken>
  nameWithType: AkkaEventBusProxy<TAuthenticationToken>
  fullName: Cqrs.Akka.Events.AkkaEventBusProxy<TAuthenticationToken>
  type: Class
  source:
    remote:
      path: Framework/Akka.Net/Cqrs.Akka/Events/AkkaEventBusProxy.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: AkkaEventBusProxy
    path: Framework/Akka.Net/Cqrs.Akka/Events/AkkaEventBusProxy.cs
    startLine: 21
  assemblies:
  - Cqrs.Akka
  namespace: Cqrs.Akka.Events
  summary: "\nA <xref href=\"Cqrs.Events.IEventPublisher%601\" data-throw-if-not-resolved=\"false\"></xref> that proxies <xref href=\"Cqrs.Events.IEvent%601\" data-throw-if-not-resolved=\"false\"></xref> to the <xref href=\"Akka.Actor.IActorRef\" data-throw-if-not-resolved=\"false\"></xref> which acts as a single point of all handler resolutions.\n"
  example: []
  syntax:
    content: 'public class AkkaEventBusProxy<TAuthenticationToken> : IAkkaEventPublisherProxy<TAuthenticationToken>, IEventPublisher<TAuthenticationToken>'
    typeParameters:
    - id: TAuthenticationToken
    content.vb: >-
      Public Class AkkaEventBusProxy(Of TAuthenticationToken)
          Implements IAkkaEventPublisherProxy(Of TAuthenticationToken), IEventPublisher(Of TAuthenticationToken)
  inheritance:
  - System.Object
  implements:
  - Cqrs.Akka.Events.IAkkaEventPublisherProxy{{TAuthenticationToken}}
  - Cqrs.Events.IEventPublisher{{TAuthenticationToken}}
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: AkkaEventBusProxy(Of TAuthenticationToken)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Cqrs.Akka.Events.AkkaEventBusProxy(Of TAuthenticationToken)
  name.vb: AkkaEventBusProxy(Of TAuthenticationToken)
- uid: Cqrs.Akka.Events.AkkaEventBusProxy`1.#ctor(Cqrs.Configuration.IDependencyResolver,cdmdotnet.Logging.ICorrelationIdHelper,Cqrs.Authentication.IAuthenticationTokenHelper{`0})
  commentId: M:Cqrs.Akka.Events.AkkaEventBusProxy`1.#ctor(Cqrs.Configuration.IDependencyResolver,cdmdotnet.Logging.ICorrelationIdHelper,Cqrs.Authentication.IAuthenticationTokenHelper{`0})
  id: '#ctor(Cqrs.Configuration.IDependencyResolver,cdmdotnet.Logging.ICorrelationIdHelper,Cqrs.Authentication.IAuthenticationTokenHelper{`0})'
  parent: Cqrs.Akka.Events.AkkaEventBusProxy`1
  langs:
  - csharp
  - vb
  name: AkkaEventBusProxy(IDependencyResolver, ICorrelationIdHelper, IAuthenticationTokenHelper<TAuthenticationToken>)
  nameWithType: AkkaEventBusProxy<TAuthenticationToken>.AkkaEventBusProxy(IDependencyResolver, ICorrelationIdHelper, IAuthenticationTokenHelper<TAuthenticationToken>)
  fullName: Cqrs.Akka.Events.AkkaEventBusProxy<TAuthenticationToken>.AkkaEventBusProxy(Cqrs.Configuration.IDependencyResolver, cdmdotnet.Logging.ICorrelationIdHelper, Cqrs.Authentication.IAuthenticationTokenHelper<TAuthenticationToken>)
  type: Constructor
  source:
    remote:
      path: Framework/Akka.Net/Cqrs.Akka/Events/AkkaEventBusProxy.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: .ctor
    path: Framework/Akka.Net/Cqrs.Akka/Events/AkkaEventBusProxy.cs
    startLine: 24
  assemblies:
  - Cqrs.Akka
  namespace: Cqrs.Akka.Events
  syntax:
    content: public AkkaEventBusProxy(IDependencyResolver dependencyResolver, ICorrelationIdHelper correlationIdHelper, IAuthenticationTokenHelper<TAuthenticationToken> authenticationTokenHelper)
    parameters:
    - id: dependencyResolver
      type: Cqrs.Configuration.IDependencyResolver
    - id: correlationIdHelper
      type: cdmdotnet.Logging.ICorrelationIdHelper
    - id: authenticationTokenHelper
      type: Cqrs.Authentication.IAuthenticationTokenHelper{{TAuthenticationToken}}
    content.vb: Public Sub New(dependencyResolver As IDependencyResolver, correlationIdHelper As ICorrelationIdHelper, authenticationTokenHelper As IAuthenticationTokenHelper(Of TAuthenticationToken))
  overload: Cqrs.Akka.Events.AkkaEventBusProxy`1.#ctor*
  nameWithType.vb: AkkaEventBusProxy(Of TAuthenticationToken).AkkaEventBusProxy(IDependencyResolver, ICorrelationIdHelper, IAuthenticationTokenHelper(Of TAuthenticationToken))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Cqrs.Akka.Events.AkkaEventBusProxy(Of TAuthenticationToken).AkkaEventBusProxy(Cqrs.Configuration.IDependencyResolver, cdmdotnet.Logging.ICorrelationIdHelper, Cqrs.Authentication.IAuthenticationTokenHelper(Of TAuthenticationToken))
  name.vb: AkkaEventBusProxy(IDependencyResolver, ICorrelationIdHelper, IAuthenticationTokenHelper(Of TAuthenticationToken))
- uid: Cqrs.Akka.Events.AkkaEventBusProxy`1.EventHandlerResolver
  commentId: P:Cqrs.Akka.Events.AkkaEventBusProxy`1.EventHandlerResolver
  id: EventHandlerResolver
  parent: Cqrs.Akka.Events.AkkaEventBusProxy`1
  langs:
  - csharp
  - vb
  name: EventHandlerResolver
  nameWithType: AkkaEventBusProxy<TAuthenticationToken>.EventHandlerResolver
  fullName: Cqrs.Akka.Events.AkkaEventBusProxy<TAuthenticationToken>.EventHandlerResolver
  type: Property
  source:
    remote:
      path: Framework/Akka.Net/Cqrs.Akka/Events/AkkaEventBusProxy.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: EventHandlerResolver
    path: Framework/Akka.Net/Cqrs.Akka/Events/AkkaEventBusProxy.cs
    startLine: 31
  assemblies:
  - Cqrs.Akka
  namespace: Cqrs.Akka.Events
  syntax:
    content: protected IActorRef EventHandlerResolver { get; }
    parameters: []
    return:
      type: Akka.Actor.IActorRef
    content.vb: Protected ReadOnly Property EventHandlerResolver As IActorRef
  overload: Cqrs.Akka.Events.AkkaEventBusProxy`1.EventHandlerResolver*
  nameWithType.vb: AkkaEventBusProxy(Of TAuthenticationToken).EventHandlerResolver
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: Cqrs.Akka.Events.AkkaEventBusProxy(Of TAuthenticationToken).EventHandlerResolver
- uid: Cqrs.Akka.Events.AkkaEventBusProxy`1.CorrelationIdHelper
  commentId: P:Cqrs.Akka.Events.AkkaEventBusProxy`1.CorrelationIdHelper
  id: CorrelationIdHelper
  parent: Cqrs.Akka.Events.AkkaEventBusProxy`1
  langs:
  - csharp
  - vb
  name: CorrelationIdHelper
  nameWithType: AkkaEventBusProxy<TAuthenticationToken>.CorrelationIdHelper
  fullName: Cqrs.Akka.Events.AkkaEventBusProxy<TAuthenticationToken>.CorrelationIdHelper
  type: Property
  source:
    remote:
      path: Framework/Akka.Net/Cqrs.Akka/Events/AkkaEventBusProxy.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: CorrelationIdHelper
    path: Framework/Akka.Net/Cqrs.Akka/Events/AkkaEventBusProxy.cs
    startLine: 33
  assemblies:
  - Cqrs.Akka
  namespace: Cqrs.Akka.Events
  syntax:
    content: protected ICorrelationIdHelper CorrelationIdHelper { get; }
    parameters: []
    return:
      type: cdmdotnet.Logging.ICorrelationIdHelper
    content.vb: Protected ReadOnly Property CorrelationIdHelper As ICorrelationIdHelper
  overload: Cqrs.Akka.Events.AkkaEventBusProxy`1.CorrelationIdHelper*
  nameWithType.vb: AkkaEventBusProxy(Of TAuthenticationToken).CorrelationIdHelper
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: Cqrs.Akka.Events.AkkaEventBusProxy(Of TAuthenticationToken).CorrelationIdHelper
- uid: Cqrs.Akka.Events.AkkaEventBusProxy`1.AuthenticationTokenHelper
  commentId: P:Cqrs.Akka.Events.AkkaEventBusProxy`1.AuthenticationTokenHelper
  id: AuthenticationTokenHelper
  parent: Cqrs.Akka.Events.AkkaEventBusProxy`1
  langs:
  - csharp
  - vb
  name: AuthenticationTokenHelper
  nameWithType: AkkaEventBusProxy<TAuthenticationToken>.AuthenticationTokenHelper
  fullName: Cqrs.Akka.Events.AkkaEventBusProxy<TAuthenticationToken>.AuthenticationTokenHelper
  type: Property
  source:
    remote:
      path: Framework/Akka.Net/Cqrs.Akka/Events/AkkaEventBusProxy.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: AuthenticationTokenHelper
    path: Framework/Akka.Net/Cqrs.Akka/Events/AkkaEventBusProxy.cs
    startLine: 35
  assemblies:
  - Cqrs.Akka
  namespace: Cqrs.Akka.Events
  syntax:
    content: protected IAuthenticationTokenHelper<TAuthenticationToken> AuthenticationTokenHelper { get; }
    parameters: []
    return:
      type: Cqrs.Authentication.IAuthenticationTokenHelper{{TAuthenticationToken}}
    content.vb: Protected ReadOnly Property AuthenticationTokenHelper As IAuthenticationTokenHelper(Of TAuthenticationToken)
  overload: Cqrs.Akka.Events.AkkaEventBusProxy`1.AuthenticationTokenHelper*
  nameWithType.vb: AkkaEventBusProxy(Of TAuthenticationToken).AuthenticationTokenHelper
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: Cqrs.Akka.Events.AkkaEventBusProxy(Of TAuthenticationToken).AuthenticationTokenHelper
- uid: Cqrs.Akka.Events.AkkaEventBusProxy`1.Publish``1(``0)
  commentId: M:Cqrs.Akka.Events.AkkaEventBusProxy`1.Publish``1(``0)
  id: Publish``1(``0)
  parent: Cqrs.Akka.Events.AkkaEventBusProxy`1
  langs:
  - csharp
  - vb
  name: Publish<TEvent>(TEvent)
  nameWithType: AkkaEventBusProxy<TAuthenticationToken>.Publish<TEvent>(TEvent)
  fullName: Cqrs.Akka.Events.AkkaEventBusProxy<TAuthenticationToken>.Publish<TEvent>(TEvent)
  type: Method
  source:
    remote:
      path: Framework/Akka.Net/Cqrs.Akka/Events/AkkaEventBusProxy.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Publish
    path: Framework/Akka.Net/Cqrs.Akka/Events/AkkaEventBusProxy.cs
    startLine: 39
  assemblies:
  - Cqrs.Akka
  namespace: Cqrs.Akka.Events
  syntax:
    content: 'public virtual void Publish<TEvent>(TEvent event)where TEvent : IEvent<TAuthenticationToken>'
    parameters:
    - id: event
      type: '{TEvent}'
    typeParameters:
    - id: TEvent
    content.vb: Public Overridable Sub Publish(Of TEvent As IEvent(Of TAuthenticationToken))(event As TEvent)
  overload: Cqrs.Akka.Events.AkkaEventBusProxy`1.Publish*
  implements:
  - Cqrs.Events.IEventPublisher{{TAuthenticationToken}}.Publish``1({TEvent})
  nameWithType.vb: AkkaEventBusProxy(Of TAuthenticationToken).Publish(Of TEvent)(TEvent)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Cqrs.Akka.Events.AkkaEventBusProxy(Of TAuthenticationToken).Publish(Of TEvent)(TEvent)
  name.vb: Publish(Of TEvent)(TEvent)
- uid: Cqrs.Akka.Events.AkkaEventBusProxy`1.Publish``1(System.Collections.Generic.IEnumerable{``0})
  commentId: M:Cqrs.Akka.Events.AkkaEventBusProxy`1.Publish``1(System.Collections.Generic.IEnumerable{``0})
  id: Publish``1(System.Collections.Generic.IEnumerable{``0})
  parent: Cqrs.Akka.Events.AkkaEventBusProxy`1
  langs:
  - csharp
  - vb
  name: Publish<TEvent>(IEnumerable<TEvent>)
  nameWithType: AkkaEventBusProxy<TAuthenticationToken>.Publish<TEvent>(IEnumerable<TEvent>)
  fullName: Cqrs.Akka.Events.AkkaEventBusProxy<TAuthenticationToken>.Publish<TEvent>(System.Collections.Generic.IEnumerable<TEvent>)
  type: Method
  source:
    remote:
      path: Framework/Akka.Net/Cqrs.Akka/Events/AkkaEventBusProxy.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Publish
    path: Framework/Akka.Net/Cqrs.Akka/Events/AkkaEventBusProxy.cs
    startLine: 50
  assemblies:
  - Cqrs.Akka
  namespace: Cqrs.Akka.Events
  syntax:
    content: 'public virtual void Publish<TEvent>(IEnumerable<TEvent> events)where TEvent : IEvent<TAuthenticationToken>'
    parameters:
    - id: events
      type: System.Collections.Generic.IEnumerable{{TEvent}}
    typeParameters:
    - id: TEvent
    content.vb: Public Overridable Sub Publish(Of TEvent As IEvent(Of TAuthenticationToken))(events As IEnumerable(Of TEvent))
  overload: Cqrs.Akka.Events.AkkaEventBusProxy`1.Publish*
  implements:
  - Cqrs.Events.IEventPublisher{{TAuthenticationToken}}.Publish``1(System.Collections.Generic.IEnumerable{{TEvent}})
  nameWithType.vb: AkkaEventBusProxy(Of TAuthenticationToken).Publish(Of TEvent)(IEnumerable(Of TEvent))
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Cqrs.Akka.Events.AkkaEventBusProxy(Of TAuthenticationToken).Publish(Of TEvent)(System.Collections.Generic.IEnumerable(Of TEvent))
  name.vb: Publish(Of TEvent)(IEnumerable(Of TEvent))
references:
- uid: Cqrs.Events.IEventPublisher`1
  commentId: T:Cqrs.Events.IEventPublisher`1
  isExternal: false
  name: IEventPublisher<TAuthenticationToken>
  nameWithType: IEventPublisher<TAuthenticationToken>
  fullName: Cqrs.Events.IEventPublisher<TAuthenticationToken>
  nameWithType.vb: IEventPublisher(Of TAuthenticationToken)
  fullName.vb: Cqrs.Events.IEventPublisher(Of TAuthenticationToken)
  name.vb: IEventPublisher(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Events.IEventPublisher`1
    name: IEventPublisher
    nameWithType: IEventPublisher
    fullName: Cqrs.Events.IEventPublisher
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Events.IEventPublisher`1
    name: IEventPublisher
    nameWithType: IEventPublisher
    fullName: Cqrs.Events.IEventPublisher
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Events.IEvent`1
  commentId: T:Cqrs.Events.IEvent`1
  isExternal: false
  name: IEvent<TAuthenticationToken>
  nameWithType: IEvent<TAuthenticationToken>
  fullName: Cqrs.Events.IEvent<TAuthenticationToken>
  nameWithType.vb: IEvent(Of TAuthenticationToken)
  fullName.vb: Cqrs.Events.IEvent(Of TAuthenticationToken)
  name.vb: IEvent(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Akka.Actor.IActorRef
  commentId: T:Akka.Actor.IActorRef
  parent: Akka.Actor
  isExternal: true
  name: IActorRef
  nameWithType: IActorRef
  fullName: Akka.Actor.IActorRef
- uid: Cqrs.Akka.Events
  commentId: N:Cqrs.Akka.Events
  isExternal: false
  name: Cqrs.Akka.Events
  nameWithType: Cqrs.Akka.Events
  fullName: Cqrs.Akka.Events
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Cqrs.Akka.Events.IAkkaEventPublisherProxy{{TAuthenticationToken}}
  commentId: T:Cqrs.Akka.Events.IAkkaEventPublisherProxy{`0}
  parent: Cqrs.Akka.Events
  definition: Cqrs.Akka.Events.IAkkaEventPublisherProxy`1
  name: IAkkaEventPublisherProxy<TAuthenticationToken>
  nameWithType: IAkkaEventPublisherProxy<TAuthenticationToken>
  fullName: Cqrs.Akka.Events.IAkkaEventPublisherProxy<TAuthenticationToken>
  nameWithType.vb: IAkkaEventPublisherProxy(Of TAuthenticationToken)
  fullName.vb: Cqrs.Akka.Events.IAkkaEventPublisherProxy(Of TAuthenticationToken)
  name.vb: IAkkaEventPublisherProxy(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Akka.Events.IAkkaEventPublisherProxy`1
    name: IAkkaEventPublisherProxy
    nameWithType: IAkkaEventPublisherProxy
    fullName: Cqrs.Akka.Events.IAkkaEventPublisherProxy
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Akka.Events.IAkkaEventPublisherProxy`1
    name: IAkkaEventPublisherProxy
    nameWithType: IAkkaEventPublisherProxy
    fullName: Cqrs.Akka.Events.IAkkaEventPublisherProxy
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Events.IEventPublisher{{TAuthenticationToken}}
  commentId: T:Cqrs.Events.IEventPublisher{`0}
  parent: Cqrs.Events
  definition: Cqrs.Events.IEventPublisher`1
  name: IEventPublisher<TAuthenticationToken>
  nameWithType: IEventPublisher<TAuthenticationToken>
  fullName: Cqrs.Events.IEventPublisher<TAuthenticationToken>
  nameWithType.vb: IEventPublisher(Of TAuthenticationToken)
  fullName.vb: Cqrs.Events.IEventPublisher(Of TAuthenticationToken)
  name.vb: IEventPublisher(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Events.IEventPublisher`1
    name: IEventPublisher
    nameWithType: IEventPublisher
    fullName: Cqrs.Events.IEventPublisher
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Events.IEventPublisher`1
    name: IEventPublisher
    nameWithType: IEventPublisher
    fullName: Cqrs.Events.IEventPublisher
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Akka.Actor
  commentId: N:Akka.Actor
  isExternal: false
  name: Akka.Actor
  nameWithType: Akka.Actor
  fullName: Akka.Actor
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Cqrs.Akka.Events.IAkkaEventPublisherProxy`1
  commentId: T:Cqrs.Akka.Events.IAkkaEventPublisherProxy`1
  isExternal: false
  name: IAkkaEventPublisherProxy<TAuthenticationToken>
  nameWithType: IAkkaEventPublisherProxy<TAuthenticationToken>
  fullName: Cqrs.Akka.Events.IAkkaEventPublisherProxy<TAuthenticationToken>
  nameWithType.vb: IAkkaEventPublisherProxy(Of TAuthenticationToken)
  fullName.vb: Cqrs.Akka.Events.IAkkaEventPublisherProxy(Of TAuthenticationToken)
  name.vb: IAkkaEventPublisherProxy(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Akka.Events.IAkkaEventPublisherProxy`1
    name: IAkkaEventPublisherProxy
    nameWithType: IAkkaEventPublisherProxy
    fullName: Cqrs.Akka.Events.IAkkaEventPublisherProxy
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Akka.Events.IAkkaEventPublisherProxy`1
    name: IAkkaEventPublisherProxy
    nameWithType: IAkkaEventPublisherProxy
    fullName: Cqrs.Akka.Events.IAkkaEventPublisherProxy
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Events
  commentId: N:Cqrs.Events
  isExternal: false
  name: Cqrs.Events
  nameWithType: Cqrs.Events
  fullName: Cqrs.Events
- uid: Cqrs.Akka.Events.AkkaEventBusProxy`1.#ctor*
  commentId: Overload:Cqrs.Akka.Events.AkkaEventBusProxy`1.#ctor
  isExternal: false
  name: AkkaEventBusProxy
  nameWithType: AkkaEventBusProxy<TAuthenticationToken>.AkkaEventBusProxy
  fullName: Cqrs.Akka.Events.AkkaEventBusProxy<TAuthenticationToken>.AkkaEventBusProxy
  nameWithType.vb: AkkaEventBusProxy(Of TAuthenticationToken).AkkaEventBusProxy
  fullName.vb: Cqrs.Akka.Events.AkkaEventBusProxy(Of TAuthenticationToken).AkkaEventBusProxy
- uid: Cqrs.Configuration.IDependencyResolver
  commentId: T:Cqrs.Configuration.IDependencyResolver
  parent: Cqrs.Configuration
  isExternal: false
  name: IDependencyResolver
  nameWithType: IDependencyResolver
  fullName: Cqrs.Configuration.IDependencyResolver
- uid: cdmdotnet.Logging.ICorrelationIdHelper
  commentId: T:cdmdotnet.Logging.ICorrelationIdHelper
  parent: cdmdotnet.Logging
  isExternal: true
  name: ICorrelationIdHelper
  nameWithType: ICorrelationIdHelper
  fullName: cdmdotnet.Logging.ICorrelationIdHelper
- uid: Cqrs.Authentication.IAuthenticationTokenHelper{{TAuthenticationToken}}
  commentId: T:Cqrs.Authentication.IAuthenticationTokenHelper{`0}
  parent: Cqrs.Authentication
  definition: Cqrs.Authentication.IAuthenticationTokenHelper`1
  name: IAuthenticationTokenHelper<TAuthenticationToken>
  nameWithType: IAuthenticationTokenHelper<TAuthenticationToken>
  fullName: Cqrs.Authentication.IAuthenticationTokenHelper<TAuthenticationToken>
  nameWithType.vb: IAuthenticationTokenHelper(Of TAuthenticationToken)
  fullName.vb: Cqrs.Authentication.IAuthenticationTokenHelper(Of TAuthenticationToken)
  name.vb: IAuthenticationTokenHelper(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Authentication.IAuthenticationTokenHelper`1
    name: IAuthenticationTokenHelper
    nameWithType: IAuthenticationTokenHelper
    fullName: Cqrs.Authentication.IAuthenticationTokenHelper
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Authentication.IAuthenticationTokenHelper`1
    name: IAuthenticationTokenHelper
    nameWithType: IAuthenticationTokenHelper
    fullName: Cqrs.Authentication.IAuthenticationTokenHelper
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Configuration
  commentId: N:Cqrs.Configuration
  isExternal: false
  name: Cqrs.Configuration
  nameWithType: Cqrs.Configuration
  fullName: Cqrs.Configuration
- uid: cdmdotnet.Logging
  commentId: N:cdmdotnet.Logging
  isExternal: false
  name: cdmdotnet.Logging
  nameWithType: cdmdotnet.Logging
  fullName: cdmdotnet.Logging
- uid: Cqrs.Authentication.IAuthenticationTokenHelper`1
  commentId: T:Cqrs.Authentication.IAuthenticationTokenHelper`1
  isExternal: false
  name: IAuthenticationTokenHelper<TAuthenticationToken>
  nameWithType: IAuthenticationTokenHelper<TAuthenticationToken>
  fullName: Cqrs.Authentication.IAuthenticationTokenHelper<TAuthenticationToken>
  nameWithType.vb: IAuthenticationTokenHelper(Of TAuthenticationToken)
  fullName.vb: Cqrs.Authentication.IAuthenticationTokenHelper(Of TAuthenticationToken)
  name.vb: IAuthenticationTokenHelper(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Authentication.IAuthenticationTokenHelper`1
    name: IAuthenticationTokenHelper
    nameWithType: IAuthenticationTokenHelper
    fullName: Cqrs.Authentication.IAuthenticationTokenHelper
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Authentication.IAuthenticationTokenHelper`1
    name: IAuthenticationTokenHelper
    nameWithType: IAuthenticationTokenHelper
    fullName: Cqrs.Authentication.IAuthenticationTokenHelper
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Authentication
  commentId: N:Cqrs.Authentication
  isExternal: false
  name: Cqrs.Authentication
  nameWithType: Cqrs.Authentication
  fullName: Cqrs.Authentication
- uid: Cqrs.Akka.Events.AkkaEventBusProxy`1.EventHandlerResolver*
  commentId: Overload:Cqrs.Akka.Events.AkkaEventBusProxy`1.EventHandlerResolver
  isExternal: false
  name: EventHandlerResolver
  nameWithType: AkkaEventBusProxy<TAuthenticationToken>.EventHandlerResolver
  fullName: Cqrs.Akka.Events.AkkaEventBusProxy<TAuthenticationToken>.EventHandlerResolver
  nameWithType.vb: AkkaEventBusProxy(Of TAuthenticationToken).EventHandlerResolver
  fullName.vb: Cqrs.Akka.Events.AkkaEventBusProxy(Of TAuthenticationToken).EventHandlerResolver
- uid: Cqrs.Akka.Events.AkkaEventBusProxy`1.CorrelationIdHelper*
  commentId: Overload:Cqrs.Akka.Events.AkkaEventBusProxy`1.CorrelationIdHelper
  isExternal: false
  name: CorrelationIdHelper
  nameWithType: AkkaEventBusProxy<TAuthenticationToken>.CorrelationIdHelper
  fullName: Cqrs.Akka.Events.AkkaEventBusProxy<TAuthenticationToken>.CorrelationIdHelper
  nameWithType.vb: AkkaEventBusProxy(Of TAuthenticationToken).CorrelationIdHelper
  fullName.vb: Cqrs.Akka.Events.AkkaEventBusProxy(Of TAuthenticationToken).CorrelationIdHelper
- uid: Cqrs.Akka.Events.AkkaEventBusProxy`1.AuthenticationTokenHelper*
  commentId: Overload:Cqrs.Akka.Events.AkkaEventBusProxy`1.AuthenticationTokenHelper
  isExternal: false
  name: AuthenticationTokenHelper
  nameWithType: AkkaEventBusProxy<TAuthenticationToken>.AuthenticationTokenHelper
  fullName: Cqrs.Akka.Events.AkkaEventBusProxy<TAuthenticationToken>.AuthenticationTokenHelper
  nameWithType.vb: AkkaEventBusProxy(Of TAuthenticationToken).AuthenticationTokenHelper
  fullName.vb: Cqrs.Akka.Events.AkkaEventBusProxy(Of TAuthenticationToken).AuthenticationTokenHelper
- uid: Cqrs.Akka.Events.AkkaEventBusProxy`1.Publish*
  commentId: Overload:Cqrs.Akka.Events.AkkaEventBusProxy`1.Publish
  isExternal: false
  name: Publish
  nameWithType: AkkaEventBusProxy<TAuthenticationToken>.Publish
  fullName: Cqrs.Akka.Events.AkkaEventBusProxy<TAuthenticationToken>.Publish
  nameWithType.vb: AkkaEventBusProxy(Of TAuthenticationToken).Publish
  fullName.vb: Cqrs.Akka.Events.AkkaEventBusProxy(Of TAuthenticationToken).Publish
- uid: Cqrs.Events.IEventPublisher{{TAuthenticationToken}}.Publish``1({TEvent})
  commentId: M:Cqrs.Events.IEventPublisher{`0}.Publish``1(``0)
  parent: Cqrs.Events.IEventPublisher{{TAuthenticationToken}}
  definition: Cqrs.Events.IEventPublisher`1.Publish``1(``0)
  name: Publish<TEvent>(TEvent)
  nameWithType: IEventPublisher<TAuthenticationToken>.Publish<TEvent>(TEvent)
  fullName: Cqrs.Events.IEventPublisher<TAuthenticationToken>.Publish<TEvent>(TEvent)
  nameWithType.vb: IEventPublisher(Of TAuthenticationToken).Publish(Of TEvent)(TEvent)
  fullName.vb: Cqrs.Events.IEventPublisher(Of TAuthenticationToken).Publish(Of TEvent)(TEvent)
  name.vb: Publish(Of TEvent)(TEvent)
  spec.csharp:
  - uid: Cqrs.Events.IEventPublisher`1.Publish``1(``0)
    name: Publish<TEvent>
    nameWithType: IEventPublisher<TAuthenticationToken>.Publish<TEvent>
    fullName: Cqrs.Events.IEventPublisher<TAuthenticationToken>.Publish<TEvent>
  - name: (
    nameWithType: (
    fullName: (
  - name: TEvent
    nameWithType: TEvent
    fullName: TEvent
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Events.IEventPublisher`1.Publish``1(``0)
    name: Publish(Of TEvent)
    nameWithType: IEventPublisher(Of TAuthenticationToken).Publish(Of TEvent)
    fullName: Cqrs.Events.IEventPublisher(Of TAuthenticationToken).Publish(Of TEvent)
  - name: (
    nameWithType: (
    fullName: (
  - name: TEvent
    nameWithType: TEvent
    fullName: TEvent
  - name: )
    nameWithType: )
    fullName: )
- uid: '{TEvent}'
  commentId: '!:TEvent'
  definition: TEvent
  name: TEvent
  nameWithType: TEvent
  fullName: TEvent
- uid: Cqrs.Events.IEventPublisher`1.Publish``1(``0)
  commentId: M:Cqrs.Events.IEventPublisher`1.Publish``1(``0)
  isExternal: false
  name: Publish<TEvent>(TEvent)
  nameWithType: IEventPublisher<TAuthenticationToken>.Publish<TEvent>(TEvent)
  fullName: Cqrs.Events.IEventPublisher<TAuthenticationToken>.Publish<TEvent>(TEvent)
  nameWithType.vb: IEventPublisher(Of TAuthenticationToken).Publish(Of TEvent)(TEvent)
  fullName.vb: Cqrs.Events.IEventPublisher(Of TAuthenticationToken).Publish(Of TEvent)(TEvent)
  name.vb: Publish(Of TEvent)(TEvent)
  spec.csharp:
  - uid: Cqrs.Events.IEventPublisher`1.Publish``1(``0)
    name: Publish<TEvent>
    nameWithType: IEventPublisher<TAuthenticationToken>.Publish<TEvent>
    fullName: Cqrs.Events.IEventPublisher<TAuthenticationToken>.Publish<TEvent>
  - name: (
    nameWithType: (
    fullName: (
  - name: TEvent
    nameWithType: TEvent
    fullName: TEvent
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Events.IEventPublisher`1.Publish``1(``0)
    name: Publish(Of TEvent)
    nameWithType: IEventPublisher(Of TAuthenticationToken).Publish(Of TEvent)
    fullName: Cqrs.Events.IEventPublisher(Of TAuthenticationToken).Publish(Of TEvent)
  - name: (
    nameWithType: (
    fullName: (
  - name: TEvent
    nameWithType: TEvent
    fullName: TEvent
  - name: )
    nameWithType: )
    fullName: )
- uid: TEvent
  isExternal: false
  name: TEvent
  nameWithType: TEvent
  fullName: TEvent
- uid: Cqrs.Events.IEventPublisher{{TAuthenticationToken}}.Publish``1(System.Collections.Generic.IEnumerable{{TEvent}})
  commentId: M:Cqrs.Events.IEventPublisher{`0}.Publish``1(System.Collections.Generic.IEnumerable{``0})
  parent: Cqrs.Events.IEventPublisher{{TAuthenticationToken}}
  definition: Cqrs.Events.IEventPublisher`1.Publish``1(System.Collections.Generic.IEnumerable{``0})
  name: Publish<TEvent>(IEnumerable<TEvent>)
  nameWithType: IEventPublisher<TAuthenticationToken>.Publish<TEvent>(IEnumerable<TEvent>)
  fullName: Cqrs.Events.IEventPublisher<TAuthenticationToken>.Publish<TEvent>(System.Collections.Generic.IEnumerable<TEvent>)
  nameWithType.vb: IEventPublisher(Of TAuthenticationToken).Publish(Of TEvent)(IEnumerable(Of TEvent))
  fullName.vb: Cqrs.Events.IEventPublisher(Of TAuthenticationToken).Publish(Of TEvent)(System.Collections.Generic.IEnumerable(Of TEvent))
  name.vb: Publish(Of TEvent)(IEnumerable(Of TEvent))
  spec.csharp:
  - uid: Cqrs.Events.IEventPublisher`1.Publish``1(System.Collections.Generic.IEnumerable{``0})
    name: Publish<TEvent>
    nameWithType: IEventPublisher<TAuthenticationToken>.Publish<TEvent>
    fullName: Cqrs.Events.IEventPublisher<TAuthenticationToken>.Publish<TEvent>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEvent
    nameWithType: TEvent
    fullName: TEvent
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Events.IEventPublisher`1.Publish``1(System.Collections.Generic.IEnumerable{``0})
    name: Publish(Of TEvent)
    nameWithType: IEventPublisher(Of TAuthenticationToken).Publish(Of TEvent)
    fullName: Cqrs.Events.IEventPublisher(Of TAuthenticationToken).Publish(Of TEvent)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEvent
    nameWithType: TEvent
    fullName: TEvent
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{{TEvent}}
  commentId: T:System.Collections.Generic.IEnumerable{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<TEvent>
  nameWithType: IEnumerable<TEvent>
  fullName: System.Collections.Generic.IEnumerable<TEvent>
  nameWithType.vb: IEnumerable(Of TEvent)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TEvent)
  name.vb: IEnumerable(Of TEvent)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEvent
    nameWithType: TEvent
    fullName: TEvent
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEvent
    nameWithType: TEvent
    fullName: TEvent
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Events.IEventPublisher`1.Publish``1(System.Collections.Generic.IEnumerable{``0})
  commentId: M:Cqrs.Events.IEventPublisher`1.Publish``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: Publish<TEvent>(IEnumerable<TEvent>)
  nameWithType: IEventPublisher<TAuthenticationToken>.Publish<TEvent>(IEnumerable<TEvent>)
  fullName: Cqrs.Events.IEventPublisher<TAuthenticationToken>.Publish<TEvent>(System.Collections.Generic.IEnumerable<TEvent>)
  nameWithType.vb: IEventPublisher(Of TAuthenticationToken).Publish(Of TEvent)(IEnumerable(Of TEvent))
  fullName.vb: Cqrs.Events.IEventPublisher(Of TAuthenticationToken).Publish(Of TEvent)(System.Collections.Generic.IEnumerable(Of TEvent))
  name.vb: Publish(Of TEvent)(IEnumerable(Of TEvent))
  spec.csharp:
  - uid: Cqrs.Events.IEventPublisher`1.Publish``1(System.Collections.Generic.IEnumerable{``0})
    name: Publish<TEvent>
    nameWithType: IEventPublisher<TAuthenticationToken>.Publish<TEvent>
    fullName: Cqrs.Events.IEventPublisher<TAuthenticationToken>.Publish<TEvent>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEvent
    nameWithType: TEvent
    fullName: TEvent
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Events.IEventPublisher`1.Publish``1(System.Collections.Generic.IEnumerable{``0})
    name: Publish(Of TEvent)
    nameWithType: IEventPublisher(Of TAuthenticationToken).Publish(Of TEvent)
    fullName: Cqrs.Events.IEventPublisher(Of TAuthenticationToken).Publish(Of TEvent)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEvent
    nameWithType: TEvent
    fullName: TEvent
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
