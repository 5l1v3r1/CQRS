### YamlMime:ManagedReference
items:
- uid: Cqrs.Akka.Domain.IAkkaAggregateResolver
  commentId: T:Cqrs.Akka.Domain.IAkkaAggregateResolver
  id: IAkkaAggregateResolver
  parent: Cqrs.Akka.Domain
  children:
  - Cqrs.Akka.Domain.IAkkaAggregateResolver.ResolveActor``1
  - Cqrs.Akka.Domain.IAkkaAggregateResolver.ResolveActor``2(System.Guid)
  langs:
  - csharp
  - vb
  name: IAkkaAggregateResolver
  nameWithType: IAkkaAggregateResolver
  fullName: Cqrs.Akka.Domain.IAkkaAggregateResolver
  type: Interface
  source:
    remote:
      path: Framework/Akka.Net/Cqrs.Akka/Domain/IAkkaAggregateResolver.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: IAkkaAggregateResolver
    path: Framework/Akka.Net/Cqrs.Akka/Domain/IAkkaAggregateResolver.cs
    startLine: 17
  assemblies:
  - Cqrs.Akka
  namespace: Cqrs.Akka.Domain
  summary: "\nA resolver for <xref href=\"Akka.Actor.IActorRef\" data-throw-if-not-resolved=\"false\"></xref> instances of <xref href=\"Cqrs.Domain.IAggregateRoot%601\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public interface IAkkaAggregateResolver
    content.vb: Public Interface IAkkaAggregateResolver
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Cqrs.Akka.Domain.IAkkaAggregateResolver.ResolveActor``2(System.Guid)
  commentId: M:Cqrs.Akka.Domain.IAkkaAggregateResolver.ResolveActor``2(System.Guid)
  id: ResolveActor``2(System.Guid)
  parent: Cqrs.Akka.Domain.IAkkaAggregateResolver
  langs:
  - csharp
  - vb
  name: ResolveActor<TAggregate, TAuthenticationToken>(Guid)
  nameWithType: IAkkaAggregateResolver.ResolveActor<TAggregate, TAuthenticationToken>(Guid)
  fullName: Cqrs.Akka.Domain.IAkkaAggregateResolver.ResolveActor<TAggregate, TAuthenticationToken>(System.Guid)
  type: Method
  source:
    remote:
      path: Framework/Akka.Net/Cqrs.Akka/Domain/IAkkaAggregateResolver.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: ResolveActor
    path: Framework/Akka.Net/Cqrs.Akka/Domain/IAkkaAggregateResolver.cs
    startLine: 22
  assemblies:
  - Cqrs.Akka
  namespace: Cqrs.Akka.Domain
  summary: "\nResolves instances of <code data-dev-comment-type=\"typeparamref\">TAggregate</code>.\n"
  example: []
  syntax:
    content: 'IActorRef ResolveActor<TAggregate, TAuthenticationToken>(Guid rsn)where TAggregate : IAggregateRoot<TAuthenticationToken>'
    parameters:
    - id: rsn
      type: System.Guid
    typeParameters:
    - id: TAggregate
    - id: TAuthenticationToken
    return:
      type: Akka.Actor.IActorRef
    content.vb: Function ResolveActor(Of TAggregate As IAggregateRoot(Of TAuthenticationToken), TAuthenticationToken)(rsn As Guid) As IActorRef
  overload: Cqrs.Akka.Domain.IAkkaAggregateResolver.ResolveActor*
  nameWithType.vb: IAkkaAggregateResolver.ResolveActor(Of TAggregate, TAuthenticationToken)(Guid)
  fullName.vb: Cqrs.Akka.Domain.IAkkaAggregateResolver.ResolveActor(Of TAggregate, TAuthenticationToken)(System.Guid)
  name.vb: ResolveActor(Of TAggregate, TAuthenticationToken)(Guid)
- uid: Cqrs.Akka.Domain.IAkkaAggregateResolver.ResolveActor``1
  commentId: M:Cqrs.Akka.Domain.IAkkaAggregateResolver.ResolveActor``1
  id: ResolveActor``1
  parent: Cqrs.Akka.Domain.IAkkaAggregateResolver
  langs:
  - csharp
  - vb
  name: ResolveActor<T>()
  nameWithType: IAkkaAggregateResolver.ResolveActor<T>()
  fullName: Cqrs.Akka.Domain.IAkkaAggregateResolver.ResolveActor<T>()
  type: Method
  source:
    remote:
      path: Framework/Akka.Net/Cqrs.Akka/Domain/IAkkaAggregateResolver.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: ResolveActor
    path: Framework/Akka.Net/Cqrs.Akka/Domain/IAkkaAggregateResolver.cs
    startLine: 28
  assemblies:
  - Cqrs.Akka
  namespace: Cqrs.Akka.Domain
  summary: "\nResolves instances of <code data-dev-comment-type=\"typeparamref\">T</code>.\n"
  example: []
  syntax:
    content: IActorRef ResolveActor<T>()
    typeParameters:
    - id: T
    return:
      type: Akka.Actor.IActorRef
    content.vb: Function ResolveActor(Of T) As IActorRef
  overload: Cqrs.Akka.Domain.IAkkaAggregateResolver.ResolveActor*
  nameWithType.vb: IAkkaAggregateResolver.ResolveActor(Of T)()
  fullName.vb: Cqrs.Akka.Domain.IAkkaAggregateResolver.ResolveActor(Of T)()
  name.vb: ResolveActor(Of T)()
references:
- uid: Akka.Actor.IActorRef
  commentId: T:Akka.Actor.IActorRef
  parent: Akka.Actor
  isExternal: true
  name: IActorRef
  nameWithType: IActorRef
  fullName: Akka.Actor.IActorRef
- uid: Cqrs.Domain.IAggregateRoot`1
  commentId: T:Cqrs.Domain.IAggregateRoot`1
  isExternal: false
  name: IAggregateRoot<TAuthenticationToken>
  nameWithType: IAggregateRoot<TAuthenticationToken>
  fullName: Cqrs.Domain.IAggregateRoot<TAuthenticationToken>
  nameWithType.vb: IAggregateRoot(Of TAuthenticationToken)
  fullName.vb: Cqrs.Domain.IAggregateRoot(Of TAuthenticationToken)
  name.vb: IAggregateRoot(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Domain.IAggregateRoot`1
    name: IAggregateRoot
    nameWithType: IAggregateRoot
    fullName: Cqrs.Domain.IAggregateRoot
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Domain.IAggregateRoot`1
    name: IAggregateRoot
    nameWithType: IAggregateRoot
    fullName: Cqrs.Domain.IAggregateRoot
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Akka.Domain
  commentId: N:Cqrs.Akka.Domain
  isExternal: false
  name: Cqrs.Akka.Domain
  nameWithType: Cqrs.Akka.Domain
  fullName: Cqrs.Akka.Domain
- uid: Akka.Actor
  commentId: N:Akka.Actor
  isExternal: false
  name: Akka.Actor
  nameWithType: Akka.Actor
  fullName: Akka.Actor
- uid: Cqrs.Akka.Domain.IAkkaAggregateResolver.ResolveActor*
  commentId: Overload:Cqrs.Akka.Domain.IAkkaAggregateResolver.ResolveActor
  isExternal: false
  name: ResolveActor
  nameWithType: IAkkaAggregateResolver.ResolveActor
  fullName: Cqrs.Akka.Domain.IAkkaAggregateResolver.ResolveActor
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
