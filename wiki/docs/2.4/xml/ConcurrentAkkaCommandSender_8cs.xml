<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="ConcurrentAkkaCommandSender_8cs" kind="file" language="C#">
    <compoundname>ConcurrentAkkaCommandSender.cs</compoundname>
    <innerclass refid="classCqrs_1_1Akka_1_1Commands_1_1ConcurrentAkkaCommandPublisher" prot="public">Cqrs::Akka::Commands::ConcurrentAkkaCommandPublisher</innerclass>
    <innernamespace refid="namespaceCqrs_1_1Akka_1_1Commands">Cqrs::Akka::Commands</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#region<sp/>Copyright</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>//<sp/>-----------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>//<sp/>&lt;copyright<sp/>company=&quot;Chinchilla<sp/>Software<sp/>Limited&quot;&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>//<sp/><sp/><sp/>Copyright<sp/>Chinchilla<sp/>Software<sp/>Limited.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>//<sp/>&lt;/copyright&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>//<sp/>-----------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#endregion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespaceSystem" kindref="compound">System</ref>;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespaceSystem" kindref="compound">System</ref>.Collections.Generic;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespaceSystem" kindref="compound">System</ref>.<ref refid="namespaceSystem_1_1Linq" kindref="compound">Linq</ref>;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespaceCqrs_1_1Messages_af06a7e6cd2609043d0f2f5f3419f81e3_1af06a7e6cd2609043d0f2f5f3419f81e3a1565c979ff6d5255fd3c81f57219fffc" kindref="member">Akka</ref>.Actor;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespaceCqrs" kindref="compound">Cqrs</ref>.<ref refid="namespaceCqrs_1_1Commands" kindref="compound">Commands</ref>;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespaceCqrs" kindref="compound">Cqrs</ref>.<ref refid="namespaceCqrs_1_1Events" kindref="compound">Events</ref>;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceCqrs" kindref="compound">Cqrs</ref>.<ref refid="namespaceCqrs_1_1Messages_af06a7e6cd2609043d0f2f5f3419f81e3_1af06a7e6cd2609043d0f2f5f3419f81e3a1565c979ff6d5255fd3c81f57219fffc" kindref="member">Akka</ref>.Commands</highlight></codeline>
<codeline lineno="17"><highlight class="normal">{</highlight></codeline>
<codeline lineno="23" refid="classCqrs_1_1Akka_1_1Commands_1_1ConcurrentAkkaCommandPublisher" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classCqrs_1_1Akka_1_1Commands_1_1ConcurrentAkkaCommandPublisher" kindref="compound">ConcurrentAkkaCommandPublisher</ref>&lt;TAuthenticationToken,<sp/>TTarget&gt;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>ReceiveActor</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/><ref refid="interfaceCqrs_1_1Akka_1_1Commands_1_1IConcurrentAkkaCommandPublisher" kindref="compound">IConcurrentAkkaCommandPublisher</ref>&lt;TAuthenticationToken,<sp/>TTarget&gt;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/>IActorRef<sp/>ActorReference<sp/>{<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">;<sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">set</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/><ref refid="interfaceCqrs_1_1Commands_1_1ICommandReceiver" kindref="compound">ICommandReceiver&lt;TAuthenticationToken&gt;</ref><sp/>CommandReceiver<sp/>{<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">;<sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">set</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classCqrs_1_1Akka_1_1Commands_1_1ConcurrentAkkaCommandPublisher" kindref="compound">ConcurrentAkkaCommandPublisher</ref>(IActorRef<sp/>actorReference,<sp/><ref refid="interfaceCqrs_1_1Commands_1_1ICommandReceiver" kindref="compound">ICommandReceiver&lt;TAuthenticationToken&gt;</ref><sp/>commandReceiver)</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ActorReference<sp/>=<sp/>actorReference;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CommandReceiver<sp/>=<sp/>commandReceiver;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#region<sp/>Implementation<sp/>of<sp/>ICommandPublisher&lt;TAuthenticationToken&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Publish&lt;TCommand&gt;(TCommand<sp/>command)</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>where<sp/>TCommand<sp/>:<sp/><ref refid="interfaceCqrs_1_1Commands_1_1ICommand" kindref="compound">ICommand&lt;TAuthenticationToken&gt;</ref></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>will<sp/>trigger<sp/>the<sp/>Akka<sp/>cycle<sp/>back<sp/>publishing...<sp/>It<sp/>looks<sp/>weird,<sp/>but<sp/>trust<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>for<sp/>when<sp/>a<sp/>command<sp/>originated<sp/>outside<sp/>Akka<sp/>and<sp/>now<sp/>needs<sp/>to<sp/>be<sp/>pushed<sp/>into<sp/>Akka</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CommandReceiver.ReceiveCommand(command);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Publish&lt;TCommand&gt;(IEnumerable&lt;TCommand&gt;<sp/>commands)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>where<sp/>TCommand<sp/>:<sp/><ref refid="interfaceCqrs_1_1Commands_1_1ICommand" kindref="compound">ICommand&lt;TAuthenticationToken&gt;</ref></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>will<sp/>trigger<sp/>the<sp/>Akka<sp/>cycle<sp/>back<sp/>publishing...<sp/>It<sp/>looks<sp/>weird,<sp/>but<sp/>trust<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>for<sp/>when<sp/>a<sp/>command<sp/>originated<sp/>outside<sp/>Akka<sp/>and<sp/>now<sp/>needs<sp/>to<sp/>be<sp/>pushed<sp/>into<sp/>Akka</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(TCommand<sp/>command<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>commands)</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CommandReceiver.ReceiveCommand(command);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>TEvent<sp/>PublishAndWait&lt;TCommand,<sp/>TEvent&gt;(TCommand<sp/>command,<sp/><ref refid="interfaceCqrs_1_1Events_1_1IEventReceiver" kindref="compound">IEventReceiver&lt;TAuthenticationToken&gt;</ref><sp/>eventReceiver<sp/>=<sp/>null)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>where<sp/>TCommand<sp/>:<sp/><ref refid="interfaceCqrs_1_1Commands_1_1ICommand" kindref="compound">ICommand&lt;TAuthenticationToken&gt;</ref></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PublishAndWait&lt;TCommand,<sp/>TEvent&gt;(command,<sp/>-1,<sp/>eventReceiver);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>TEvent<sp/>PublishAndWait&lt;TCommand,<sp/>TEvent&gt;(TCommand<sp/>command,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>millisecondsTimeout,<sp/><ref refid="interfaceCqrs_1_1Events_1_1IEventReceiver" kindref="compound">IEventReceiver&lt;TAuthenticationToken&gt;</ref><sp/>eventReceiver<sp/>=<sp/>null)</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>where<sp/>TCommand<sp/>:<sp/><ref refid="interfaceCqrs_1_1Commands_1_1ICommand" kindref="compound">ICommand&lt;TAuthenticationToken&gt;</ref></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PublishAndWait(command,<sp/>events<sp/>=&gt;<sp/>(TEvent)events.SingleOrDefault(@event<sp/>=&gt;<sp/>@event<sp/>is<sp/>TEvent),<sp/>millisecondsTimeout,<sp/>eventReceiver);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>TEvent<sp/>PublishAndWait&lt;TCommand,<sp/>TEvent&gt;(TCommand<sp/>command,<sp/>TimeSpan<sp/>timeout,<sp/><ref refid="interfaceCqrs_1_1Events_1_1IEventReceiver" kindref="compound">IEventReceiver&lt;TAuthenticationToken&gt;</ref><sp/>eventReceiver<sp/>=<sp/>null)</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>where<sp/>TCommand<sp/>:<sp/><ref refid="interfaceCqrs_1_1Commands_1_1ICommand" kindref="compound">ICommand&lt;TAuthenticationToken&gt;</ref></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>num<sp/>=<sp/>(long)timeout.TotalMilliseconds;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(num<sp/>&lt;<sp/>-1L<sp/>||<sp/>num<sp/>&gt;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">.MaxValue)</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>ArgumentOutOfRangeException(</highlight><highlight class="stringliteral">&quot;timeout&quot;</highlight><highlight class="normal">,<sp/>timeout,<sp/></highlight><highlight class="stringliteral">&quot;SpinWait_SpinUntil_TimeoutWrong&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PublishAndWait&lt;TCommand,<sp/>TEvent&gt;(command,<sp/>(int)timeout.TotalMilliseconds,<sp/>eventReceiver);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>TEvent<sp/>PublishAndWait&lt;TCommand,<sp/>TEvent&gt;(TCommand<sp/>command,<sp/>Func&lt;IEnumerable&lt;IEvent&lt;TAuthenticationToken&gt;&gt;,<sp/>TEvent&gt;<sp/>condition,<sp/><ref refid="interfaceCqrs_1_1Events_1_1IEventReceiver" kindref="compound">IEventReceiver&lt;TAuthenticationToken&gt;</ref><sp/>eventReceiver<sp/>=<sp/>null)</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>where<sp/>TCommand<sp/>:<sp/><ref refid="interfaceCqrs_1_1Commands_1_1ICommand" kindref="compound">ICommand&lt;TAuthenticationToken&gt;</ref></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PublishAndWait(command,<sp/>condition,<sp/>-1,<sp/>eventReceiver);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>TEvent<sp/>PublishAndWait&lt;TCommand,<sp/>TEvent&gt;(TCommand<sp/>command,<sp/>Func&lt;IEnumerable&lt;IEvent&lt;TAuthenticationToken&gt;&gt;,<sp/>TEvent&gt;<sp/>condition,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>millisecondsTimeout,</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="interfaceCqrs_1_1Events_1_1IEventReceiver" kindref="compound">IEventReceiver&lt;TAuthenticationToken&gt;</ref><sp/>eventReceiver<sp/>=<sp/>null)<sp/>where<sp/>TCommand<sp/>:<sp/><ref refid="interfaceCqrs_1_1Commands_1_1ICommand" kindref="compound">ICommand&lt;TAuthenticationToken&gt;</ref></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>NotImplementedException(</highlight><highlight class="stringliteral">&quot;This<sp/>is<sp/>a<sp/>proxy<sp/>so<sp/>this<sp/>wouldn&apos;t<sp/>happen<sp/>here.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>TEvent<sp/>PublishAndWait&lt;TCommand,<sp/>TEvent&gt;(TCommand<sp/>command,<sp/>Func&lt;IEnumerable&lt;IEvent&lt;TAuthenticationToken&gt;&gt;,<sp/>TEvent&gt;<sp/>condition,<sp/>TimeSpan<sp/>timeout,<sp/><ref refid="interfaceCqrs_1_1Events_1_1IEventReceiver" kindref="compound">IEventReceiver&lt;TAuthenticationToken&gt;</ref><sp/>eventReceiver<sp/>=<sp/>null)</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>where<sp/>TCommand<sp/>:<sp/><ref refid="interfaceCqrs_1_1Commands_1_1ICommand" kindref="compound">ICommand&lt;TAuthenticationToken&gt;</ref></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>num<sp/>=<sp/>(long)timeout.TotalMilliseconds;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(num<sp/>&lt;<sp/>-1L<sp/>||<sp/>num<sp/>&gt;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">.MaxValue)</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>ArgumentOutOfRangeException(</highlight><highlight class="stringliteral">&quot;timeout&quot;</highlight><highlight class="normal">,<sp/>timeout,<sp/></highlight><highlight class="stringliteral">&quot;SpinWait_SpinUntil_TimeoutWrong&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PublishAndWait(command,<sp/>condition,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)timeout.TotalMilliseconds,<sp/>eventReceiver);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endregion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/opt/buildAgent/work/565751ca98ebc594/Framework/Akka.Net/Cqrs.Akka/Commands/ConcurrentAkkaCommandSender.cs"/>
  </compounddef>
</doxygen>
