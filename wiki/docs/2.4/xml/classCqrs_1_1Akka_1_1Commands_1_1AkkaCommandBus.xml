<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus" kind="class" language="C#" prot="public">
    <compoundname>Cqrs::Akka::Commands::AkkaCommandBus</compoundname>
    <basecompoundref refid="interfaceCqrs_1_1Akka_1_1Commands_1_1IAkkaCommandPublisher" prot="public" virt="non-virtual">Cqrs::Akka::Commands::IAkkaCommandPublisher&lt; TAuthenticationToken &gt;</basecompoundref>
    <basecompoundref refid="interfaceCqrs_1_1Bus_1_1ICommandHandlerRegistrar" prot="public" virt="non-virtual">Cqrs.Bus.ICommandHandlerRegistrar</basecompoundref>
    <templateparamlist>
      <param>
        <type>TAuthenticationToken</type>
      </param>
    </templateparamlist>
      <sectiondef kind="property">
      <memberdef kind="property" id="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus_a93ddefb347d0cbc4f869c6d0866c8c64_1a93ddefb347d0cbc4f869c6d0866c8c64" prot="protected" static="yes" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="yes" protectedsettable="no">
        <type><ref refid="classCqrs_1_1Bus_1_1RouteManager" kindref="compound">RouteManager</ref></type>
        <definition>RouteManager Cqrs.Akka.Commands.AkkaCommandBus&lt; TAuthenticationToken &gt;.Routes</definition>
        <argsstring></argsstring>
        <name>Routes</name>
        <briefdescription>
<para>Gets the RouteManager </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/565751ca98ebc594/Framework/Akka.Net/Cqrs.Akka/Commands/AkkaCommandBus.cs" line="35" column="1" bodyfile="/opt/buildAgent/work/565751ca98ebc594/Framework/Akka.Net/Cqrs.Akka/Commands/AkkaCommandBus.cs" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus_ad74a628484d215ec6daab02b20ac1dbe_1ad74a628484d215ec6daab02b20ac1dbe" prot="protected" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="yes" protectedsettable="no">
        <type><ref refid="interfaceCqrs_1_1Authentication_1_1IAuthenticationTokenHelper" kindref="compound">IAuthenticationTokenHelper</ref>&lt; TAuthenticationToken &gt;</type>
        <definition>IAuthenticationTokenHelper&lt;TAuthenticationToken&gt; Cqrs.Akka.Commands.AkkaCommandBus&lt; TAuthenticationToken &gt;.AuthenticationTokenHelper</definition>
        <argsstring></argsstring>
        <name>AuthenticationTokenHelper</name>
        <briefdescription>
<para>Gets or sets the <ref refid="" kindref="compound">Authentication Token Helper</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/565751ca98ebc594/Framework/Akka.Net/Cqrs.Akka/Commands/AkkaCommandBus.cs" line="40" column="1" bodyfile="/opt/buildAgent/work/565751ca98ebc594/Framework/Akka.Net/Cqrs.Akka/Commands/AkkaCommandBus.cs" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus_ad8bdf5674c0d5ea3fd9340bd8cd4b0a8_1ad8bdf5674c0d5ea3fd9340bd8cd4b0a8" prot="protected" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="yes" protectedsettable="no">
        <type>ICorrelationIdHelper</type>
        <definition>ICorrelationIdHelper Cqrs.Akka.Commands.AkkaCommandBus&lt; TAuthenticationToken &gt;.CorrelationIdHelper</definition>
        <argsstring></argsstring>
        <name>CorrelationIdHelper</name>
        <briefdescription>
<para>Gets or sets the ICorrelationIdHelper </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/565751ca98ebc594/Framework/Akka.Net/Cqrs.Akka/Commands/AkkaCommandBus.cs" line="45" column="1" bodyfile="/opt/buildAgent/work/565751ca98ebc594/Framework/Akka.Net/Cqrs.Akka/Commands/AkkaCommandBus.cs" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus_ae1229644077b0740d9014708d15b44c2_1ae1229644077b0740d9014708d15b44c2" prot="protected" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="yes" protectedsettable="no">
        <type><ref refid="interfaceCqrs_1_1Configuration_1_1IDependencyResolver" kindref="compound">IDependencyResolver</ref></type>
        <definition>IDependencyResolver Cqrs.Akka.Commands.AkkaCommandBus&lt; TAuthenticationToken &gt;.DependencyResolver</definition>
        <argsstring></argsstring>
        <name>DependencyResolver</name>
        <briefdescription>
<para>Gets or sets the IDependencyResolver </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/565751ca98ebc594/Framework/Akka.Net/Cqrs.Akka/Commands/AkkaCommandBus.cs" line="50" column="1" bodyfile="/opt/buildAgent/work/565751ca98ebc594/Framework/Akka.Net/Cqrs.Akka/Commands/AkkaCommandBus.cs" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus_abe5501970c0e39abb9a70670ab985fdc_1abe5501970c0e39abb9a70670ab985fdc" prot="protected" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="yes" protectedsettable="no">
        <type><ref refid="interfaceCqrs_1_1Bus_1_1IBusHelper" kindref="compound">IBusHelper</ref></type>
        <definition>IBusHelper Cqrs.Akka.Commands.AkkaCommandBus&lt; TAuthenticationToken &gt;.BusHelper</definition>
        <argsstring></argsstring>
        <name>BusHelper</name>
        <briefdescription>
<para>Gets or sets the IBusHelper </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/565751ca98ebc594/Framework/Akka.Net/Cqrs.Akka/Commands/AkkaCommandBus.cs" line="55" column="1" bodyfile="/opt/buildAgent/work/565751ca98ebc594/Framework/Akka.Net/Cqrs.Akka/Commands/AkkaCommandBus.cs" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus_a218e431067a4cadbdd711d74cbe8e53b_1a218e431067a4cadbdd711d74cbe8e53b" prot="protected" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="yes" protectedsettable="no">
        <type>ILogger</type>
        <definition>ILogger Cqrs.Akka.Commands.AkkaCommandBus&lt; TAuthenticationToken &gt;.Logger</definition>
        <argsstring></argsstring>
        <name>Logger</name>
        <briefdescription>
<para>Gets or sets the ILogger </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/565751ca98ebc594/Framework/Akka.Net/Cqrs.Akka/Commands/AkkaCommandBus.cs" line="60" column="1" bodyfile="/opt/buildAgent/work/565751ca98ebc594/Framework/Akka.Net/Cqrs.Akka/Commands/AkkaCommandBus.cs" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus_ad028b0520a1d98d1e7adcbecb781d261_1ad028b0520a1d98d1e7adcbecb781d261" prot="protected" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="yes" protectedsettable="no">
        <type><ref refid="interfaceCqrs_1_1Commands_1_1ICommandPublisher" kindref="compound">ICommandPublisher</ref>&lt; TAuthenticationToken &gt;</type>
        <definition>ICommandPublisher&lt;TAuthenticationToken&gt; Cqrs.Akka.Commands.AkkaCommandBus&lt; TAuthenticationToken &gt;.CommandPublisher</definition>
        <argsstring></argsstring>
        <name>CommandPublisher</name>
        <briefdescription>
<para>Gets or sets the ICommandPublisher&lt;TAuthenticationToken&gt; </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/565751ca98ebc594/Framework/Akka.Net/Cqrs.Akka/Commands/AkkaCommandBus.cs" line="65" column="1" bodyfile="/opt/buildAgent/work/565751ca98ebc594/Framework/Akka.Net/Cqrs.Akka/Commands/AkkaCommandBus.cs" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus_ac65a93dadbbb006dd815c5c54c9ecc82_1ac65a93dadbbb006dd815c5c54c9ecc82" prot="protected" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="yes" protectedsettable="no">
        <type><ref refid="interfaceCqrs_1_1Commands_1_1ICommandReceiver" kindref="compound">ICommandReceiver</ref>&lt; TAuthenticationToken &gt;</type>
        <definition>ICommandReceiver&lt;TAuthenticationToken&gt; Cqrs.Akka.Commands.AkkaCommandBus&lt; TAuthenticationToken &gt;.CommandReceiver</definition>
        <argsstring></argsstring>
        <name>CommandReceiver</name>
        <briefdescription>
<para>Gets or sets the <ref refid="interfaceCqrs_1_1Commands_1_1ICommandReceiver" kindref="compound">ICommandReceiver&lt;TAuthenticationToken&gt;</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/565751ca98ebc594/Framework/Akka.Net/Cqrs.Akka/Commands/AkkaCommandBus.cs" line="70" column="1" bodyfile="/opt/buildAgent/work/565751ca98ebc594/Framework/Akka.Net/Cqrs.Akka/Commands/AkkaCommandBus.cs" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus_af64744500f25a0b203684ef757aa7962_1af64744500f25a0b203684ef757aa7962" prot="protected" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="yes" protectedsettable="no">
        <type>IDictionary&lt; Guid, IList&lt; <ref refid="interfaceCqrs_1_1Events_1_1IEvent" kindref="compound">IEvent</ref>&lt; TAuthenticationToken &gt; &gt; &gt;</type>
        <definition>IDictionary&lt;Guid, IList&lt;IEvent&lt;TAuthenticationToken&gt; &gt; &gt; Cqrs.Akka.Commands.AkkaCommandBus&lt; TAuthenticationToken &gt;.EventWaits</definition>
        <argsstring></argsstring>
        <name>EventWaits</name>
        <briefdescription>
<para>Gets or sets the current list of events waiting to be evaluated for <ref refid="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus_a8e1291f0259ac80e393c02bb119159a5_1a8e1291f0259ac80e393c02bb119159a5" kindref="member">PublishAndWait&lt;TCommand,TEvent&gt;(TCommand,Cqrs.Events.IEventReceiver&lt;TAuthenticationToken&gt;)</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/565751ca98ebc594/Framework/Akka.Net/Cqrs.Akka/Commands/AkkaCommandBus.cs" line="75" column="1" bodyfile="/opt/buildAgent/work/565751ca98ebc594/Framework/Akka.Net/Cqrs.Akka/Commands/AkkaCommandBus.cs" bodystart="75" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus_1a16660487f6c209957c48da57b67cf555" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>static</type>
        <definition>static Cqrs.Akka.Commands.AkkaCommandBus&lt; TAuthenticationToken &gt;.AkkaCommandBus</definition>
        <argsstring>()</argsstring>
        <name>AkkaCommandBus</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/565751ca98ebc594/Framework/Akka.Net/Cqrs.Akka/Commands/AkkaCommandBus.cs" line="77" column="1" bodyfile="/opt/buildAgent/work/565751ca98ebc594/Framework/Akka.Net/Cqrs.Akka/Commands/AkkaCommandBus.cs" bodystart="77" bodyend="80"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus_a255b78be5cb216dcd30e2d2dd1240c06_1a255b78be5cb216dcd30e2d2dd1240c06" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Cqrs.Akka.Commands.AkkaCommandBus&lt; TAuthenticationToken &gt;.AkkaCommandBus</definition>
        <argsstring>(IBusHelper busHelper, IAuthenticationTokenHelper&lt; TAuthenticationToken &gt; authenticationTokenHelper, ICorrelationIdHelper correlationIdHelper, IDependencyResolver dependencyResolver, ILogger logger, ICommandPublisher&lt; TAuthenticationToken &gt; commandPublisher, ICommandReceiver&lt; TAuthenticationToken &gt; commandReceiver)</argsstring>
        <name>AkkaCommandBus</name>
        <param>
          <type><ref refid="interfaceCqrs_1_1Bus_1_1IBusHelper" kindref="compound">IBusHelper</ref></type>
          <declname>busHelper</declname>
        </param>
        <param>
          <type><ref refid="interfaceCqrs_1_1Authentication_1_1IAuthenticationTokenHelper" kindref="compound">IAuthenticationTokenHelper</ref>&lt; TAuthenticationToken &gt;</type>
          <declname>authenticationTokenHelper</declname>
        </param>
        <param>
          <type>ICorrelationIdHelper</type>
          <declname>correlationIdHelper</declname>
        </param>
        <param>
          <type><ref refid="interfaceCqrs_1_1Configuration_1_1IDependencyResolver" kindref="compound">IDependencyResolver</ref></type>
          <declname>dependencyResolver</declname>
        </param>
        <param>
          <type>ILogger</type>
          <declname>logger</declname>
        </param>
        <param>
          <type><ref refid="interfaceCqrs_1_1Commands_1_1ICommandPublisher" kindref="compound">ICommandPublisher</ref>&lt; TAuthenticationToken &gt;</type>
          <declname>commandPublisher</declname>
        </param>
        <param>
          <type><ref refid="interfaceCqrs_1_1Commands_1_1ICommandReceiver" kindref="compound">ICommandReceiver</ref>&lt; TAuthenticationToken &gt;</type>
          <declname>commandReceiver</declname>
        </param>
        <briefdescription>
<para>Instantiates a new instance of AkkaCommandBus&lt;TAuthenticationToken&gt; </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/565751ca98ebc594/Framework/Akka.Net/Cqrs.Akka/Commands/AkkaCommandBus.cs" line="85" column="1" bodyfile="/opt/buildAgent/work/565751ca98ebc594/Framework/Akka.Net/Cqrs.Akka/Commands/AkkaCommandBus.cs" bodystart="85" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus_a48e1d46035b1e1a3251636b8a03f7dae_1a48e1d46035b1e1a3251636b8a03f7dae" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Cqrs.Akka.Commands.AkkaCommandBus&lt; TAuthenticationToken &gt;.Publish&lt; TCommand &gt;</definition>
        <argsstring>(TCommand command)</argsstring>
        <name>Publish&lt; TCommand &gt;</name>
        <reimplements refid="interfaceCqrs_1_1Commands_1_1ICommandPublisher_aeeb487ad5686d9c44d214b1daaf7833a_1aeeb487ad5686d9c44d214b1daaf7833a">Publish&lt; TCommand &gt;</reimplements>
        <param>
          <type>TCommand</type>
          <declname>command</declname>
        </param>
        <briefdescription>
<para>Publishes the provided <emphasis>command</emphasis>  on the command bus. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/565751ca98ebc594/Framework/Akka.Net/Cqrs.Akka/Commands/AkkaCommandBus.cs" line="183" column="1" bodyfile="/opt/buildAgent/work/565751ca98ebc594/Framework/Akka.Net/Cqrs.Akka/Commands/AkkaCommandBus.cs" bodystart="183" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus_ab52365375febd74ac078e97af6e6cd24_1ab52365375febd74ac078e97af6e6cd24" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Cqrs.Akka.Commands.AkkaCommandBus&lt; TAuthenticationToken &gt;.Publish&lt; TCommand &gt;</definition>
        <argsstring>(IEnumerable&lt; TCommand &gt; commands)</argsstring>
        <name>Publish&lt; TCommand &gt;</name>
        <reimplements refid="interfaceCqrs_1_1Commands_1_1ICommandPublisher_af0f033c0b949e5650032e4f00b11b595_1af0f033c0b949e5650032e4f00b11b595">Publish&lt; TCommand &gt;</reimplements>
        <param>
          <type>IEnumerable&lt; TCommand &gt;</type>
          <declname>commands</declname>
        </param>
        <briefdescription>
<para>Publishes the provided <emphasis>commands</emphasis>  on the command bus. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/565751ca98ebc594/Framework/Akka.Net/Cqrs.Akka/Commands/AkkaCommandBus.cs" line="201" column="1" bodyfile="/opt/buildAgent/work/565751ca98ebc594/Framework/Akka.Net/Cqrs.Akka/Commands/AkkaCommandBus.cs" bodystart="201" bodyend="217"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus_a8e1291f0259ac80e393c02bb119159a5_1a8e1291f0259ac80e393c02bb119159a5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>TEvent</type>
        <definition>virtual TEvent Cqrs.Akka.Commands.AkkaCommandBus&lt; TAuthenticationToken &gt;.PublishAndWait&lt; TCommand, TEvent &gt;</definition>
        <argsstring>(TCommand command, IEventReceiver&lt; TAuthenticationToken &gt; eventReceiver=null)</argsstring>
        <name>PublishAndWait&lt; TCommand, TEvent &gt;</name>
        <reimplements refid="interfaceCqrs_1_1Commands_1_1IPublishAndWaitCommandPublisher_a19ffb318c830e9f05d4adae985232f30_1a19ffb318c830e9f05d4adae985232f30">PublishAndWait&lt; TCommand, TEvent &gt;</reimplements>
        <param>
          <type>TCommand</type>
          <declname>command</declname>
        </param>
        <param>
          <type><ref refid="interfaceCqrs_1_1Events_1_1IEventReceiver" kindref="compound">IEventReceiver</ref>&lt; TAuthenticationToken &gt;</type>
          <declname>eventReceiver</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
<para>Publishes the provided <emphasis>command</emphasis>  and waits for an event of <emphasis>TEvent</emphasis>  </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>command</parametername>
</parameternamelist>
<parameterdescription>
<para>The <emphasis>TCommand</emphasis>  to publish.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>eventReceiver</parametername>
</parameternamelist>
<parameterdescription>
<para>If provided, is the <ref refid="interfaceCqrs_1_1Events_1_1IEventReceiver" kindref="compound">IEventReceiver&lt;TAuthenticationToken&gt;</ref> that the event is expected to be returned on.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/565751ca98ebc594/Framework/Akka.Net/Cqrs.Akka/Commands/AkkaCommandBus.cs" line="224" column="1" bodyfile="/opt/buildAgent/work/565751ca98ebc594/Framework/Akka.Net/Cqrs.Akka/Commands/AkkaCommandBus.cs" bodystart="224" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus_a7f820323e5293e476f4afee7c731f7a3_1a7f820323e5293e476f4afee7c731f7a3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>TEvent</type>
        <definition>virtual TEvent Cqrs.Akka.Commands.AkkaCommandBus&lt; TAuthenticationToken &gt;.PublishAndWait&lt; TCommand, TEvent &gt;</definition>
        <argsstring>(TCommand command, int millisecondsTimeout, IEventReceiver&lt; TAuthenticationToken &gt; eventReceiver=null)</argsstring>
        <name>PublishAndWait&lt; TCommand, TEvent &gt;</name>
        <reimplements refid="interfaceCqrs_1_1Commands_1_1IPublishAndWaitCommandPublisher_ad3761879cf9e09c9e89cabf8067b6de4_1ad3761879cf9e09c9e89cabf8067b6de4">PublishAndWait&lt; TCommand, TEvent &gt;</reimplements>
        <param>
          <type>TCommand</type>
          <declname>command</declname>
        </param>
        <param>
          <type>int</type>
          <declname>millisecondsTimeout</declname>
        </param>
        <param>
          <type><ref refid="interfaceCqrs_1_1Events_1_1IEventReceiver" kindref="compound">IEventReceiver</ref>&lt; TAuthenticationToken &gt;</type>
          <declname>eventReceiver</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
<para>Publishes the provided <emphasis>command</emphasis>  and waits for an event of <emphasis>TEvent</emphasis>  or exits if the specified timeout is expired. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>command</parametername>
</parameternamelist>
<parameterdescription>
<para>The <emphasis>TCommand</emphasis>  to publish.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>millisecondsTimeout</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of milliseconds to wait, or F:System.Threading.Timeout.Infinite (-1) to wait indefinitely.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>eventReceiver</parametername>
</parameternamelist>
<parameterdescription>
<para>If provided, is the <ref refid="interfaceCqrs_1_1Events_1_1IEventReceiver" kindref="compound">IEventReceiver&lt;TAuthenticationToken&gt;</ref> that the event is expected to be returned on.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/565751ca98ebc594/Framework/Akka.Net/Cqrs.Akka/Commands/AkkaCommandBus.cs" line="236" column="1" bodyfile="/opt/buildAgent/work/565751ca98ebc594/Framework/Akka.Net/Cqrs.Akka/Commands/AkkaCommandBus.cs" bodystart="236" bodyend="240"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus_ad50bff025d51c3b00b17ccaec2a4cefc_1ad50bff025d51c3b00b17ccaec2a4cefc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>TEvent</type>
        <definition>virtual TEvent Cqrs.Akka.Commands.AkkaCommandBus&lt; TAuthenticationToken &gt;.PublishAndWait&lt; TCommand, TEvent &gt;</definition>
        <argsstring>(TCommand command, TimeSpan timeout, IEventReceiver&lt; TAuthenticationToken &gt; eventReceiver=null)</argsstring>
        <name>PublishAndWait&lt; TCommand, TEvent &gt;</name>
        <reimplements refid="interfaceCqrs_1_1Commands_1_1IPublishAndWaitCommandPublisher_a02ef39482cb50e6e15e06144adca1ed5_1a02ef39482cb50e6e15e06144adca1ed5">PublishAndWait&lt; TCommand, TEvent &gt;</reimplements>
        <param>
          <type>TCommand</type>
          <declname>command</declname>
        </param>
        <param>
          <type>TimeSpan</type>
          <declname>timeout</declname>
        </param>
        <param>
          <type><ref refid="interfaceCqrs_1_1Events_1_1IEventReceiver" kindref="compound">IEventReceiver</ref>&lt; TAuthenticationToken &gt;</type>
          <declname>eventReceiver</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
<para>Publishes the provided <emphasis>command</emphasis>  and waits for an event of <emphasis>TEvent</emphasis>  or exits if the specified timeout is expired. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>command</parametername>
</parameternamelist>
<parameterdescription>
<para>The <emphasis>TCommand</emphasis>  to publish.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>A T:System.TimeSpan that represents the number of milliseconds to wait, or a TimeSpan that represents -1 milliseconds to wait indefinitely.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>eventReceiver</parametername>
</parameternamelist>
<parameterdescription>
<para>If provided, is the <ref refid="interfaceCqrs_1_1Events_1_1IEventReceiver" kindref="compound">IEventReceiver&lt;TAuthenticationToken&gt;</ref> that the event is expected to be returned on.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/565751ca98ebc594/Framework/Akka.Net/Cqrs.Akka/Commands/AkkaCommandBus.cs" line="248" column="1" bodyfile="/opt/buildAgent/work/565751ca98ebc594/Framework/Akka.Net/Cqrs.Akka/Commands/AkkaCommandBus.cs" bodystart="248" bodyend="255"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus_ad318bfb71c5a8f5e13994edce9bad99e_1ad318bfb71c5a8f5e13994edce9bad99e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>TEvent</type>
        <definition>virtual TEvent Cqrs.Akka.Commands.AkkaCommandBus&lt; TAuthenticationToken &gt;.PublishAndWait&lt; TCommand, TEvent &gt;</definition>
        <argsstring>(TCommand command, Func&lt; IEnumerable&lt; IEvent&lt; TAuthenticationToken &gt;&gt;, TEvent &gt; condition, IEventReceiver&lt; TAuthenticationToken &gt; eventReceiver=null)</argsstring>
        <name>PublishAndWait&lt; TCommand, TEvent &gt;</name>
        <reimplements refid="interfaceCqrs_1_1Commands_1_1IPublishAndWaitCommandPublisher_a83e4480bf8cd6015254d700056cf1647_1a83e4480bf8cd6015254d700056cf1647">PublishAndWait&lt; TCommand, TEvent &gt;</reimplements>
        <param>
          <type>TCommand</type>
          <declname>command</declname>
        </param>
        <param>
          <type>Func&lt; IEnumerable&lt; <ref refid="interfaceCqrs_1_1Events_1_1IEvent" kindref="compound">IEvent</ref>&lt; TAuthenticationToken &gt;&gt;, TEvent &gt;</type>
          <declname>condition</declname>
        </param>
        <param>
          <type><ref refid="interfaceCqrs_1_1Events_1_1IEventReceiver" kindref="compound">IEventReceiver</ref>&lt; TAuthenticationToken &gt;</type>
          <declname>eventReceiver</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
<para>Publishes the provided <emphasis>command</emphasis>  and waits until the specified condition is satisfied an event of <emphasis>TEvent</emphasis>  </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>command</parametername>
</parameternamelist>
<parameterdescription>
<para>The <emphasis>TCommand</emphasis>  to publish.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>condition</parametername>
</parameternamelist>
<parameterdescription>
<para>A delegate to be executed over and over until it returns the <emphasis>TEvent</emphasis>  that is desired, return null to keep trying.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>eventReceiver</parametername>
</parameternamelist>
<parameterdescription>
<para>If provided, is the <ref refid="interfaceCqrs_1_1Events_1_1IEventReceiver" kindref="compound">IEventReceiver&lt;TAuthenticationToken&gt;</ref> that the event is expected to be returned on.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/565751ca98ebc594/Framework/Akka.Net/Cqrs.Akka/Commands/AkkaCommandBus.cs" line="263" column="1" bodyfile="/opt/buildAgent/work/565751ca98ebc594/Framework/Akka.Net/Cqrs.Akka/Commands/AkkaCommandBus.cs" bodystart="263" bodyend="267"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus_a7f2d13075a72575e97857a3b3a1170d4_1a7f2d13075a72575e97857a3b3a1170d4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>TEvent</type>
        <definition>virtual TEvent Cqrs.Akka.Commands.AkkaCommandBus&lt; TAuthenticationToken &gt;.PublishAndWait&lt; TCommand, TEvent &gt;</definition>
        <argsstring>(TCommand command, Func&lt; IEnumerable&lt; IEvent&lt; TAuthenticationToken &gt;&gt;, TEvent &gt; condition, int millisecondsTimeout, IEventReceiver&lt; TAuthenticationToken &gt; eventReceiver=null)</argsstring>
        <name>PublishAndWait&lt; TCommand, TEvent &gt;</name>
        <reimplements refid="interfaceCqrs_1_1Commands_1_1IPublishAndWaitCommandPublisher_a4b6636f2dba029321c62a78c473590be_1a4b6636f2dba029321c62a78c473590be">PublishAndWait&lt; TCommand, TEvent &gt;</reimplements>
        <param>
          <type>TCommand</type>
          <declname>command</declname>
        </param>
        <param>
          <type>Func&lt; IEnumerable&lt; <ref refid="interfaceCqrs_1_1Events_1_1IEvent" kindref="compound">IEvent</ref>&lt; TAuthenticationToken &gt;&gt;, TEvent &gt;</type>
          <declname>condition</declname>
        </param>
        <param>
          <type>int</type>
          <declname>millisecondsTimeout</declname>
        </param>
        <param>
          <type><ref refid="interfaceCqrs_1_1Events_1_1IEventReceiver" kindref="compound">IEventReceiver</ref>&lt; TAuthenticationToken &gt;</type>
          <declname>eventReceiver</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
<para>Publishes the provided <emphasis>command</emphasis>  and waits for an event of <emphasis>TEvent</emphasis>  or exits if the specified timeout is expired. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>command</parametername>
</parameternamelist>
<parameterdescription>
<para>The <emphasis>TCommand</emphasis>  to publish.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>condition</parametername>
</parameternamelist>
<parameterdescription>
<para>A delegate to be executed over and over until it returns the <emphasis>TEvent</emphasis>  that is desired, return null to keep trying.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>millisecondsTimeout</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of milliseconds to wait, or F:System.Threading.Timeout.Infinite (-1) to wait indefinitely.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>eventReceiver</parametername>
</parameternamelist>
<parameterdescription>
<para>If provided, is the <ref refid="interfaceCqrs_1_1Events_1_1IEventReceiver" kindref="compound">IEventReceiver&lt;TAuthenticationToken&gt;</ref> that the event is expected to be returned on.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/565751ca98ebc594/Framework/Akka.Net/Cqrs.Akka/Commands/AkkaCommandBus.cs" line="276" column="1" bodyfile="/opt/buildAgent/work/565751ca98ebc594/Framework/Akka.Net/Cqrs.Akka/Commands/AkkaCommandBus.cs" bodystart="276" bodyend="297"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus_a1966669d8cf5d5a68be99fbb5e8af1f7_1a1966669d8cf5d5a68be99fbb5e8af1f7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>TEvent</type>
        <definition>virtual TEvent Cqrs.Akka.Commands.AkkaCommandBus&lt; TAuthenticationToken &gt;.PublishAndWait&lt; TCommand, TEvent &gt;</definition>
        <argsstring>(TCommand command, Func&lt; IEnumerable&lt; IEvent&lt; TAuthenticationToken &gt;&gt;, TEvent &gt; condition, TimeSpan timeout, IEventReceiver&lt; TAuthenticationToken &gt; eventReceiver=null)</argsstring>
        <name>PublishAndWait&lt; TCommand, TEvent &gt;</name>
        <reimplements refid="interfaceCqrs_1_1Commands_1_1IPublishAndWaitCommandPublisher_a0460fc2091d52ba3463973fea5028bc6_1a0460fc2091d52ba3463973fea5028bc6">PublishAndWait&lt; TCommand, TEvent &gt;</reimplements>
        <param>
          <type>TCommand</type>
          <declname>command</declname>
        </param>
        <param>
          <type>Func&lt; IEnumerable&lt; <ref refid="interfaceCqrs_1_1Events_1_1IEvent" kindref="compound">IEvent</ref>&lt; TAuthenticationToken &gt;&gt;, TEvent &gt;</type>
          <declname>condition</declname>
        </param>
        <param>
          <type>TimeSpan</type>
          <declname>timeout</declname>
        </param>
        <param>
          <type><ref refid="interfaceCqrs_1_1Events_1_1IEventReceiver" kindref="compound">IEventReceiver</ref>&lt; TAuthenticationToken &gt;</type>
          <declname>eventReceiver</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
<para>Publishes the provided <emphasis>command</emphasis>  and waits for an event of <emphasis>TEvent</emphasis>  or exits if the specified timeout is expired. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>command</parametername>
</parameternamelist>
<parameterdescription>
<para>The <emphasis>TCommand</emphasis>  to publish.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>condition</parametername>
</parameternamelist>
<parameterdescription>
<para>A delegate to be executed over and over until it returns the <emphasis>TEvent</emphasis>  that is desired, return null to keep trying.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>A T:System.TimeSpan that represents the number of milliseconds to wait, or a TimeSpan that represents -1 milliseconds to wait indefinitely.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>eventReceiver</parametername>
</parameternamelist>
<parameterdescription>
<para>If provided, is the <ref refid="interfaceCqrs_1_1Events_1_1IEventReceiver" kindref="compound">IEventReceiver&lt;TAuthenticationToken&gt;</ref> that the event is expected to be returned on.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/565751ca98ebc594/Framework/Akka.Net/Cqrs.Akka/Commands/AkkaCommandBus.cs" line="306" column="1" bodyfile="/opt/buildAgent/work/565751ca98ebc594/Framework/Akka.Net/Cqrs.Akka/Commands/AkkaCommandBus.cs" bodystart="306" bodyend="313"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus_a8ed33fb315493d52470bc3bc2bf076f2_1a8ed33fb315493d52470bc3bc2bf076f2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Cqrs.Akka.Commands.AkkaCommandBus&lt; TAuthenticationToken &gt;.RegisterHandler&lt; TMessage &gt;</definition>
        <argsstring>(Action&lt; TMessage &gt; handler, Type targetedType, bool holdMessageLock=true)</argsstring>
        <name>RegisterHandler&lt; TMessage &gt;</name>
        <reimplements refid="interfaceCqrs_1_1Bus_1_1IHandlerRegistrar_ab6ca4dfdc54a5aeebe4651dbdb479f55_1ab6ca4dfdc54a5aeebe4651dbdb479f55">RegisterHandler&lt; TMessage &gt;</reimplements>
        <param>
          <type>Action&lt; TMessage &gt;</type>
          <declname>handler</declname>
        </param>
        <param>
          <type>Type</type>
          <declname>targetedType</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>holdMessageLock</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Register an event or command handler that will listen and respond to events or commands. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/565751ca98ebc594/Framework/Akka.Net/Cqrs.Akka/Commands/AkkaCommandBus.cs" line="322" column="1" bodyfile="/opt/buildAgent/work/565751ca98ebc594/Framework/Akka.Net/Cqrs.Akka/Commands/AkkaCommandBus.cs" bodystart="322" bodyend="326"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus_adc21072d2b02c745747c4d585a53dba3_1adc21072d2b02c745747c4d585a53dba3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Cqrs.Akka.Commands.AkkaCommandBus&lt; TAuthenticationToken &gt;.RegisterHandler&lt; TMessage &gt;</definition>
        <argsstring>(Action&lt; TMessage &gt; handler, bool holdMessageLock=true)</argsstring>
        <name>RegisterHandler&lt; TMessage &gt;</name>
        <reimplements refid="interfaceCqrs_1_1Bus_1_1IHandlerRegistrar_a07792dcc9a8b272709ff2e2dd336a642_1a07792dcc9a8b272709ff2e2dd336a642">RegisterHandler&lt; TMessage &gt;</reimplements>
        <param>
          <type>Action&lt; TMessage &gt;</type>
          <declname>handler</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>holdMessageLock</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Register an event or command handler that will listen and respond to events or commands. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/565751ca98ebc594/Framework/Akka.Net/Cqrs.Akka/Commands/AkkaCommandBus.cs" line="331" column="1" bodyfile="/opt/buildAgent/work/565751ca98ebc594/Framework/Akka.Net/Cqrs.Akka/Commands/AkkaCommandBus.cs" bodystart="331" bodyend="335"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus_a9755a84c0b971ce0862abdc2783422ce_1a9755a84c0b971ce0862abdc2783422ce" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Cqrs.Akka.Commands.AkkaCommandBus&lt; TAuthenticationToken &gt;.PrepareCommand&lt; TCommand &gt;</definition>
        <argsstring>(TCommand command)</argsstring>
        <name>PrepareCommand&lt; TCommand &gt;</name>
        <param>
          <type>TCommand</type>
          <declname>command</declname>
        </param>
        <briefdescription>
<para>Sets the IMessageWithAuthenticationToken&lt;TAuthenticationToken&gt;.AuthenticationToken, IMessage.CorrelationId, IMessage.OriginatingFramework to &quot;Akka&quot; and adds a value of &quot;Akka&quot; to the IMessage.Frameworks if not already done so </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/565751ca98ebc594/Framework/Akka.Net/Cqrs.Akka/Commands/AkkaCommandBus.cs" line="105" column="1" bodyfile="/opt/buildAgent/work/565751ca98ebc594/Framework/Akka.Net/Cqrs.Akka/Commands/AkkaCommandBus.cs" bodystart="105" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus_ae3e5f1725bceb0359aedb74ded530858_1ae3e5f1725bceb0359aedb74ded530858" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool Cqrs.Akka.Commands.AkkaCommandBus&lt; TAuthenticationToken &gt;.PrepareAndValidateCommand&lt; TCommand &gt;</definition>
        <argsstring>(TCommand command, out RouteHandlerDelegate commandHandler)</argsstring>
        <name>PrepareAndValidateCommand&lt; TCommand &gt;</name>
        <param>
          <type>TCommand</type>
          <declname>command</declname>
        </param>
        <param>
          <type>out <ref refid="classCqrs_1_1Bus_1_1RouteHandlerDelegate" kindref="compound">RouteHandlerDelegate</ref></type>
          <declname>commandHandler</declname>
        </param>
        <briefdescription>
<para>Locates a suitable ICommandValidator&lt;TAuthenticationToken,TCommand&gt; to validate the provided <emphasis>command</emphasis>  and validates the provided <emphasis>command</emphasis>  if one is located Calls <ref refid="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus_a9755a84c0b971ce0862abdc2783422ce_1a9755a84c0b971ce0862abdc2783422ce" kindref="member">PrepareCommand&lt;TCommand&gt;</ref> Checks if the provided <emphasis>command</emphasis>  is required to be processed Locates a single <ref refid="" kindref="compound">command handler</ref> for the provided <emphasis>command</emphasis>  </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>False if a suitable ICommandValidator&lt;TAuthenticationToken,TCommand&gt; is located and the provided <emphasis>command</emphasis>  fails validation, False if no <ref refid="" kindref="compound">command handler</ref> is found but the command isn&apos;t required to be handled, True otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/565751ca98ebc594/Framework/Akka.Net/Cqrs.Akka/Commands/AkkaCommandBus.cs" line="133" column="1" bodyfile="/opt/buildAgent/work/565751ca98ebc594/Framework/Akka.Net/Cqrs.Akka/Commands/AkkaCommandBus.cs" bodystart="133" bodyend="176"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A ICommandPublisher&lt;TAuthenticationToken&gt; that resolves handlers , executes the handler and then publishes the ICommand&lt;TAuthenticationToken&gt; on the public command bus. </para>    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>TAuthenticationToken</parametername>
</parameternamelist>
<parameterdescription>
<para>The Type of the authentication token.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="5">
        <label>IHandlerRegistrar</label>
        <link refid="interfaceCqrs_1_1Bus_1_1IHandlerRegistrar"/>
      </node>
      <node id="0">
        <label>Cqrs.Akka.Commands.AkkaCommandBus&lt; TAuthenticationToken &gt;</label>
        <link refid="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>ICommandHandlerRegistrar</label>
        <link refid="interfaceCqrs_1_1Bus_1_1ICommandHandlerRegistrar"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>ICommandPublisher&lt; TAuthenticationToken &gt;</label>
        <link refid="interfaceCqrs_1_1Commands_1_1ICommandPublisher"/>
      </node>
      <node id="1">
        <label>IAkkaCommandPublisher&lt; TAuthenticationToken &gt;</label>
        <link refid="interfaceCqrs_1_1Akka_1_1Commands_1_1IAkkaCommandPublisher"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>IPublishAndWaitCommandPublisher&lt; TAuthenticationToken &gt;</label>
        <link refid="interfaceCqrs_1_1Commands_1_1IPublishAndWaitCommandPublisher"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="11">
        <label>IHandlerRegistrar</label>
        <link refid="interfaceCqrs_1_1Bus_1_1IHandlerRegistrar"/>
      </node>
      <node id="6">
        <label>Cqrs.Akka.Commands.AkkaCommandBus&lt; TAuthenticationToken &gt;</label>
        <link refid="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>ICommandHandlerRegistrar</label>
        <link refid="interfaceCqrs_1_1Bus_1_1ICommandHandlerRegistrar"/>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>ICommandPublisher&lt; TAuthenticationToken &gt;</label>
        <link refid="interfaceCqrs_1_1Commands_1_1ICommandPublisher"/>
      </node>
      <node id="7">
        <label>IAkkaCommandPublisher&lt; TAuthenticationToken &gt;</label>
        <link refid="interfaceCqrs_1_1Akka_1_1Commands_1_1IAkkaCommandPublisher"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>IPublishAndWaitCommandPublisher&lt; TAuthenticationToken &gt;</label>
        <link refid="interfaceCqrs_1_1Commands_1_1IPublishAndWaitCommandPublisher"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/opt/buildAgent/work/565751ca98ebc594/Framework/Akka.Net/Cqrs.Akka/Commands/AkkaCommandBus.cs" line="31" column="1" bodyfile="/opt/buildAgent/work/565751ca98ebc594/Framework/Akka.Net/Cqrs.Akka/Commands/AkkaCommandBus.cs" bodystart="28" bodyend="338"/>
    <listofallmembers>
      <member refid="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus_1a16660487f6c209957c48da57b67cf555" prot="private" virt="non-virtual"><scope>Cqrs::Akka::Commands::AkkaCommandBus</scope><name>AkkaCommandBus</name></member>
      <member refid="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus_a255b78be5cb216dcd30e2d2dd1240c06_1a255b78be5cb216dcd30e2d2dd1240c06" prot="public" virt="non-virtual"><scope>Cqrs::Akka::Commands::AkkaCommandBus</scope><name>AkkaCommandBus</name></member>
      <member refid="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus_ad74a628484d215ec6daab02b20ac1dbe_1ad74a628484d215ec6daab02b20ac1dbe" prot="protected" virt="non-virtual"><scope>Cqrs::Akka::Commands::AkkaCommandBus</scope><name>AuthenticationTokenHelper</name></member>
      <member refid="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus_abe5501970c0e39abb9a70670ab985fdc_1abe5501970c0e39abb9a70670ab985fdc" prot="protected" virt="non-virtual"><scope>Cqrs::Akka::Commands::AkkaCommandBus</scope><name>BusHelper</name></member>
      <member refid="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus_ad028b0520a1d98d1e7adcbecb781d261_1ad028b0520a1d98d1e7adcbecb781d261" prot="protected" virt="non-virtual"><scope>Cqrs::Akka::Commands::AkkaCommandBus</scope><name>CommandPublisher</name></member>
      <member refid="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus_ac65a93dadbbb006dd815c5c54c9ecc82_1ac65a93dadbbb006dd815c5c54c9ecc82" prot="protected" virt="non-virtual"><scope>Cqrs::Akka::Commands::AkkaCommandBus</scope><name>CommandReceiver</name></member>
      <member refid="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus_ad8bdf5674c0d5ea3fd9340bd8cd4b0a8_1ad8bdf5674c0d5ea3fd9340bd8cd4b0a8" prot="protected" virt="non-virtual"><scope>Cqrs::Akka::Commands::AkkaCommandBus</scope><name>CorrelationIdHelper</name></member>
      <member refid="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus_ae1229644077b0740d9014708d15b44c2_1ae1229644077b0740d9014708d15b44c2" prot="protected" virt="non-virtual"><scope>Cqrs::Akka::Commands::AkkaCommandBus</scope><name>DependencyResolver</name></member>
      <member refid="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus_af64744500f25a0b203684ef757aa7962_1af64744500f25a0b203684ef757aa7962" prot="protected" virt="non-virtual"><scope>Cqrs::Akka::Commands::AkkaCommandBus</scope><name>EventWaits</name></member>
      <member refid="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus_a218e431067a4cadbdd711d74cbe8e53b_1a218e431067a4cadbdd711d74cbe8e53b" prot="protected" virt="non-virtual"><scope>Cqrs::Akka::Commands::AkkaCommandBus</scope><name>Logger</name></member>
      <member refid="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus_ae3e5f1725bceb0359aedb74ded530858_1ae3e5f1725bceb0359aedb74ded530858" prot="protected" virt="virtual"><scope>Cqrs::Akka::Commands::AkkaCommandBus</scope><name>PrepareAndValidateCommand&lt; TCommand &gt;</name></member>
      <member refid="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus_a9755a84c0b971ce0862abdc2783422ce_1a9755a84c0b971ce0862abdc2783422ce" prot="protected" virt="virtual"><scope>Cqrs::Akka::Commands::AkkaCommandBus</scope><name>PrepareCommand&lt; TCommand &gt;</name></member>
      <member refid="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus_a48e1d46035b1e1a3251636b8a03f7dae_1a48e1d46035b1e1a3251636b8a03f7dae" prot="public" virt="virtual"><scope>Cqrs::Akka::Commands::AkkaCommandBus</scope><name>Publish&lt; TCommand &gt;</name></member>
      <member refid="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus_ab52365375febd74ac078e97af6e6cd24_1ab52365375febd74ac078e97af6e6cd24" prot="public" virt="virtual"><scope>Cqrs::Akka::Commands::AkkaCommandBus</scope><name>Publish&lt; TCommand &gt;</name></member>
      <member refid="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus_a8e1291f0259ac80e393c02bb119159a5_1a8e1291f0259ac80e393c02bb119159a5" prot="public" virt="virtual"><scope>Cqrs::Akka::Commands::AkkaCommandBus</scope><name>PublishAndWait&lt; TCommand, TEvent &gt;</name></member>
      <member refid="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus_a7f820323e5293e476f4afee7c731f7a3_1a7f820323e5293e476f4afee7c731f7a3" prot="public" virt="virtual"><scope>Cqrs::Akka::Commands::AkkaCommandBus</scope><name>PublishAndWait&lt; TCommand, TEvent &gt;</name></member>
      <member refid="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus_ad50bff025d51c3b00b17ccaec2a4cefc_1ad50bff025d51c3b00b17ccaec2a4cefc" prot="public" virt="virtual"><scope>Cqrs::Akka::Commands::AkkaCommandBus</scope><name>PublishAndWait&lt; TCommand, TEvent &gt;</name></member>
      <member refid="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus_ad318bfb71c5a8f5e13994edce9bad99e_1ad318bfb71c5a8f5e13994edce9bad99e" prot="public" virt="virtual"><scope>Cqrs::Akka::Commands::AkkaCommandBus</scope><name>PublishAndWait&lt; TCommand, TEvent &gt;</name></member>
      <member refid="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus_a7f2d13075a72575e97857a3b3a1170d4_1a7f2d13075a72575e97857a3b3a1170d4" prot="public" virt="virtual"><scope>Cqrs::Akka::Commands::AkkaCommandBus</scope><name>PublishAndWait&lt; TCommand, TEvent &gt;</name></member>
      <member refid="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus_a1966669d8cf5d5a68be99fbb5e8af1f7_1a1966669d8cf5d5a68be99fbb5e8af1f7" prot="public" virt="virtual"><scope>Cqrs::Akka::Commands::AkkaCommandBus</scope><name>PublishAndWait&lt; TCommand, TEvent &gt;</name></member>
      <member refid="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus_a8ed33fb315493d52470bc3bc2bf076f2_1a8ed33fb315493d52470bc3bc2bf076f2" prot="public" virt="non-virtual"><scope>Cqrs::Akka::Commands::AkkaCommandBus</scope><name>RegisterHandler&lt; TMessage &gt;</name></member>
      <member refid="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus_adc21072d2b02c745747c4d585a53dba3_1adc21072d2b02c745747c4d585a53dba3" prot="public" virt="non-virtual"><scope>Cqrs::Akka::Commands::AkkaCommandBus</scope><name>RegisterHandler&lt; TMessage &gt;</name></member>
      <member refid="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus_a93ddefb347d0cbc4f869c6d0866c8c64_1a93ddefb347d0cbc4f869c6d0866c8c64" prot="protected" virt="non-virtual"><scope>Cqrs::Akka::Commands::AkkaCommandBus</scope><name>Routes</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
