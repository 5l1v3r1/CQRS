### YamlMime:ManagedReference
items:
- uid: Cqrs.Commands.ICommandSender`1
  commentId: T:Cqrs.Commands.ICommandSender`1
  id: ICommandSender`1
  parent: Cqrs.Commands
  children:
  - Cqrs.Commands.ICommandSender`1.Send``1(``0)
  - Cqrs.Commands.ICommandSender`1.Send``1(System.Collections.Generic.IEnumerable{``0})
  langs:
  - csharp
  - vb
  name: ICommandSender<TAuthenticationToken>
  nameWithType: ICommandSender<TAuthenticationToken>
  fullName: Cqrs.Commands.ICommandSender<TAuthenticationToken>
  type: Interface
  source:
    remote:
      path: Framework/Cqrs/Commands/ICommandSender.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: ICommandSender
    path: Framework/Cqrs/Commands/ICommandSender.cs
    startLine: 17
  assemblies:
  - Cqrs
  namespace: Cqrs.Commands
  summary: "\nSends an <xref href=\"Cqrs.Commands.ICommand%601\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Replaced by ICommandPublisher<TAuthenticationToken>")]

      public interface ICommandSender<TAuthenticationToken> : ICommandPublisher<TAuthenticationToken>
    typeParameters:
    - id: TAuthenticationToken
      description: The <xref href="System.Type" data-throw-if-not-resolved="false"></xref> of the authentication token.
    content.vb: >-
      <Obsolete("Replaced by ICommandPublisher<TAuthenticationToken>")>

      Public Interface ICommandSender(Of TAuthenticationToken)
          Inherits ICommandPublisher(Of TAuthenticationToken)
  inheritedMembers:
  - Cqrs.Commands.ICommandPublisher{{TAuthenticationToken}}.Publish``1({TCommand})
  - Cqrs.Commands.ICommandPublisher{{TAuthenticationToken}}.Publish``1(System.Collections.Generic.IEnumerable{{TCommand}})
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Replaced by ICommandPublisher<TAuthenticationToken>
  nameWithType.vb: ICommandSender(Of TAuthenticationToken)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: Cqrs.Commands.ICommandSender(Of TAuthenticationToken)
  name.vb: ICommandSender(Of TAuthenticationToken)
- uid: Cqrs.Commands.ICommandSender`1.Send``1(``0)
  commentId: M:Cqrs.Commands.ICommandSender`1.Send``1(``0)
  id: Send``1(``0)
  parent: Cqrs.Commands.ICommandSender`1
  langs:
  - csharp
  - vb
  name: Send<TCommand>(TCommand)
  nameWithType: ICommandSender<TAuthenticationToken>.Send<TCommand>(TCommand)
  fullName: Cqrs.Commands.ICommandSender<TAuthenticationToken>.Send<TCommand>(TCommand)
  type: Method
  source:
    remote:
      path: Framework/Cqrs/Commands/ICommandSender.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Send
    path: Framework/Cqrs/Commands/ICommandSender.cs
    startLine: 23
  assemblies:
  - Cqrs
  namespace: Cqrs.Commands
  summary: "\nPublishes the provided <span class=\"paramref\">command</span> on the command bus.\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Replaced by ICommandPublisher<TAuthenticationToken>.Publish(TCommand)")]

      void Send<TCommand>(TCommand command)where TCommand : ICommand<TAuthenticationToken>
    parameters:
    - id: command
      type: '{TCommand}'
    typeParameters:
    - id: TCommand
    content.vb: >-
      <Obsolete("Replaced by ICommandPublisher<TAuthenticationToken>.Publish(TCommand)")>

      Sub Send(Of TCommand As ICommand(Of TAuthenticationToken))(command As TCommand)
  overload: Cqrs.Commands.ICommandSender`1.Send*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Replaced by ICommandPublisher<TAuthenticationToken>.Publish(TCommand)
  nameWithType.vb: ICommandSender(Of TAuthenticationToken).Send(Of TCommand)(TCommand)
  fullName.vb: Cqrs.Commands.ICommandSender(Of TAuthenticationToken).Send(Of TCommand)(TCommand)
  name.vb: Send(Of TCommand)(TCommand)
- uid: Cqrs.Commands.ICommandSender`1.Send``1(System.Collections.Generic.IEnumerable{``0})
  commentId: M:Cqrs.Commands.ICommandSender`1.Send``1(System.Collections.Generic.IEnumerable{``0})
  id: Send``1(System.Collections.Generic.IEnumerable{``0})
  parent: Cqrs.Commands.ICommandSender`1
  langs:
  - csharp
  - vb
  name: Send<TCommand>(IEnumerable<TCommand>)
  nameWithType: ICommandSender<TAuthenticationToken>.Send<TCommand>(IEnumerable<TCommand>)
  fullName: Cqrs.Commands.ICommandSender<TAuthenticationToken>.Send<TCommand>(System.Collections.Generic.IEnumerable<TCommand>)
  type: Method
  source:
    remote:
      path: Framework/Cqrs/Commands/ICommandSender.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Send
    path: Framework/Cqrs/Commands/ICommandSender.cs
    startLine: 30
  assemblies:
  - Cqrs
  namespace: Cqrs.Commands
  summary: "\nPublishes the provided <span class=\"paramref\">commands</span> on the command bus.\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Replaced by ICommandPublisher<TAuthenticationToken>.Publish(IEnumerable<TCommand>)")]

      void Send<TCommand>(IEnumerable<TCommand> commands)where TCommand : ICommand<TAuthenticationToken>
    parameters:
    - id: commands
      type: System.Collections.Generic.IEnumerable{{TCommand}}
    typeParameters:
    - id: TCommand
    content.vb: >-
      <Obsolete("Replaced by ICommandPublisher<TAuthenticationToken>.Publish(IEnumerable<TCommand>)")>

      Sub Send(Of TCommand As ICommand(Of TAuthenticationToken))(commands As IEnumerable(Of TCommand))
  overload: Cqrs.Commands.ICommandSender`1.Send*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Replaced by ICommandPublisher<TAuthenticationToken>.Publish(IEnumerable<TCommand>)
  nameWithType.vb: ICommandSender(Of TAuthenticationToken).Send(Of TCommand)(IEnumerable(Of TCommand))
  fullName.vb: Cqrs.Commands.ICommandSender(Of TAuthenticationToken).Send(Of TCommand)(System.Collections.Generic.IEnumerable(Of TCommand))
  name.vb: Send(Of TCommand)(IEnumerable(Of TCommand))
references:
- uid: Cqrs.Commands.ICommand`1
  commentId: T:Cqrs.Commands.ICommand`1
  isExternal: false
  name: ICommand<TAuthenticationToken>
  nameWithType: ICommand<TAuthenticationToken>
  fullName: Cqrs.Commands.ICommand<TAuthenticationToken>
  nameWithType.vb: ICommand(Of TAuthenticationToken)
  fullName.vb: Cqrs.Commands.ICommand(Of TAuthenticationToken)
  name.vb: ICommand(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Commands.ICommand`1
    name: ICommand
    nameWithType: ICommand
    fullName: Cqrs.Commands.ICommand
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Commands.ICommand`1
    name: ICommand
    nameWithType: ICommand
    fullName: Cqrs.Commands.ICommand
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Cqrs.Commands
  commentId: N:Cqrs.Commands
  isExternal: false
  name: Cqrs.Commands
  nameWithType: Cqrs.Commands
  fullName: Cqrs.Commands
- uid: Cqrs.Commands.ICommandPublisher{{TAuthenticationToken}}.Publish``1({TCommand})
  commentId: M:Cqrs.Commands.ICommandPublisher{`0}.Publish``1(``0)
  parent: Cqrs.Commands.ICommandPublisher{{TAuthenticationToken}}
  definition: Cqrs.Commands.ICommandPublisher`1.Publish``1(``0)
  name: Publish<TCommand>(TCommand)
  nameWithType: ICommandPublisher<TAuthenticationToken>.Publish<TCommand>(TCommand)
  fullName: Cqrs.Commands.ICommandPublisher<TAuthenticationToken>.Publish<TCommand>(TCommand)
  nameWithType.vb: ICommandPublisher(Of TAuthenticationToken).Publish(Of TCommand)(TCommand)
  fullName.vb: Cqrs.Commands.ICommandPublisher(Of TAuthenticationToken).Publish(Of TCommand)(TCommand)
  name.vb: Publish(Of TCommand)(TCommand)
  spec.csharp:
  - uid: Cqrs.Commands.ICommandPublisher`1.Publish``1(``0)
    name: Publish<TCommand>
    nameWithType: ICommandPublisher<TAuthenticationToken>.Publish<TCommand>
    fullName: Cqrs.Commands.ICommandPublisher<TAuthenticationToken>.Publish<TCommand>
  - name: (
    nameWithType: (
    fullName: (
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Commands.ICommandPublisher`1.Publish``1(``0)
    name: Publish(Of TCommand)
    nameWithType: ICommandPublisher(Of TAuthenticationToken).Publish(Of TCommand)
    fullName: Cqrs.Commands.ICommandPublisher(Of TAuthenticationToken).Publish(Of TCommand)
  - name: (
    nameWithType: (
    fullName: (
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Commands.ICommandPublisher{{TAuthenticationToken}}.Publish``1(System.Collections.Generic.IEnumerable{{TCommand}})
  commentId: M:Cqrs.Commands.ICommandPublisher{`0}.Publish``1(System.Collections.Generic.IEnumerable{``0})
  parent: Cqrs.Commands.ICommandPublisher{{TAuthenticationToken}}
  definition: Cqrs.Commands.ICommandPublisher`1.Publish``1(System.Collections.Generic.IEnumerable{``0})
  name: Publish<TCommand>(IEnumerable<TCommand>)
  nameWithType: ICommandPublisher<TAuthenticationToken>.Publish<TCommand>(IEnumerable<TCommand>)
  fullName: Cqrs.Commands.ICommandPublisher<TAuthenticationToken>.Publish<TCommand>(System.Collections.Generic.IEnumerable<TCommand>)
  nameWithType.vb: ICommandPublisher(Of TAuthenticationToken).Publish(Of TCommand)(IEnumerable(Of TCommand))
  fullName.vb: Cqrs.Commands.ICommandPublisher(Of TAuthenticationToken).Publish(Of TCommand)(System.Collections.Generic.IEnumerable(Of TCommand))
  name.vb: Publish(Of TCommand)(IEnumerable(Of TCommand))
  spec.csharp:
  - uid: Cqrs.Commands.ICommandPublisher`1.Publish``1(System.Collections.Generic.IEnumerable{``0})
    name: Publish<TCommand>
    nameWithType: ICommandPublisher<TAuthenticationToken>.Publish<TCommand>
    fullName: Cqrs.Commands.ICommandPublisher<TAuthenticationToken>.Publish<TCommand>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Commands.ICommandPublisher`1.Publish``1(System.Collections.Generic.IEnumerable{``0})
    name: Publish(Of TCommand)
    nameWithType: ICommandPublisher(Of TAuthenticationToken).Publish(Of TCommand)
    fullName: Cqrs.Commands.ICommandPublisher(Of TAuthenticationToken).Publish(Of TCommand)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Cqrs.Commands.ICommandPublisher`1.Publish``1(``0)
  commentId: M:Cqrs.Commands.ICommandPublisher`1.Publish``1(``0)
  isExternal: false
  name: Publish<TCommand>(TCommand)
  nameWithType: ICommandPublisher<TAuthenticationToken>.Publish<TCommand>(TCommand)
  fullName: Cqrs.Commands.ICommandPublisher<TAuthenticationToken>.Publish<TCommand>(TCommand)
  nameWithType.vb: ICommandPublisher(Of TAuthenticationToken).Publish(Of TCommand)(TCommand)
  fullName.vb: Cqrs.Commands.ICommandPublisher(Of TAuthenticationToken).Publish(Of TCommand)(TCommand)
  name.vb: Publish(Of TCommand)(TCommand)
  spec.csharp:
  - uid: Cqrs.Commands.ICommandPublisher`1.Publish``1(``0)
    name: Publish<TCommand>
    nameWithType: ICommandPublisher<TAuthenticationToken>.Publish<TCommand>
    fullName: Cqrs.Commands.ICommandPublisher<TAuthenticationToken>.Publish<TCommand>
  - name: (
    nameWithType: (
    fullName: (
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Commands.ICommandPublisher`1.Publish``1(``0)
    name: Publish(Of TCommand)
    nameWithType: ICommandPublisher(Of TAuthenticationToken).Publish(Of TCommand)
    fullName: Cqrs.Commands.ICommandPublisher(Of TAuthenticationToken).Publish(Of TCommand)
  - name: (
    nameWithType: (
    fullName: (
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Commands.ICommandPublisher{{TAuthenticationToken}}
  commentId: T:Cqrs.Commands.ICommandPublisher{`0}
  parent: Cqrs.Commands
  definition: Cqrs.Commands.ICommandPublisher`1
  name: ICommandPublisher<TAuthenticationToken>
  nameWithType: ICommandPublisher<TAuthenticationToken>
  fullName: Cqrs.Commands.ICommandPublisher<TAuthenticationToken>
  nameWithType.vb: ICommandPublisher(Of TAuthenticationToken)
  fullName.vb: Cqrs.Commands.ICommandPublisher(Of TAuthenticationToken)
  name.vb: ICommandPublisher(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Commands.ICommandPublisher`1
    name: ICommandPublisher
    nameWithType: ICommandPublisher
    fullName: Cqrs.Commands.ICommandPublisher
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Commands.ICommandPublisher`1
    name: ICommandPublisher
    nameWithType: ICommandPublisher
    fullName: Cqrs.Commands.ICommandPublisher
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Commands.ICommandPublisher`1.Publish``1(System.Collections.Generic.IEnumerable{``0})
  commentId: M:Cqrs.Commands.ICommandPublisher`1.Publish``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: Publish<TCommand>(IEnumerable<TCommand>)
  nameWithType: ICommandPublisher<TAuthenticationToken>.Publish<TCommand>(IEnumerable<TCommand>)
  fullName: Cqrs.Commands.ICommandPublisher<TAuthenticationToken>.Publish<TCommand>(System.Collections.Generic.IEnumerable<TCommand>)
  nameWithType.vb: ICommandPublisher(Of TAuthenticationToken).Publish(Of TCommand)(IEnumerable(Of TCommand))
  fullName.vb: Cqrs.Commands.ICommandPublisher(Of TAuthenticationToken).Publish(Of TCommand)(System.Collections.Generic.IEnumerable(Of TCommand))
  name.vb: Publish(Of TCommand)(IEnumerable(Of TCommand))
  spec.csharp:
  - uid: Cqrs.Commands.ICommandPublisher`1.Publish``1(System.Collections.Generic.IEnumerable{``0})
    name: Publish<TCommand>
    nameWithType: ICommandPublisher<TAuthenticationToken>.Publish<TCommand>
    fullName: Cqrs.Commands.ICommandPublisher<TAuthenticationToken>.Publish<TCommand>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Commands.ICommandPublisher`1.Publish``1(System.Collections.Generic.IEnumerable{``0})
    name: Publish(Of TCommand)
    nameWithType: ICommandPublisher(Of TAuthenticationToken).Publish(Of TCommand)
    fullName: Cqrs.Commands.ICommandPublisher(Of TAuthenticationToken).Publish(Of TCommand)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Commands.ICommandPublisher`1
  commentId: T:Cqrs.Commands.ICommandPublisher`1
  isExternal: false
  name: ICommandPublisher<TAuthenticationToken>
  nameWithType: ICommandPublisher<TAuthenticationToken>
  fullName: Cqrs.Commands.ICommandPublisher<TAuthenticationToken>
  nameWithType.vb: ICommandPublisher(Of TAuthenticationToken)
  fullName.vb: Cqrs.Commands.ICommandPublisher(Of TAuthenticationToken)
  name.vb: ICommandPublisher(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Commands.ICommandPublisher`1
    name: ICommandPublisher
    nameWithType: ICommandPublisher
    fullName: Cqrs.Commands.ICommandPublisher
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Commands.ICommandPublisher`1
    name: ICommandPublisher
    nameWithType: ICommandPublisher
    fullName: Cqrs.Commands.ICommandPublisher
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Commands.ICommandSender`1.Send*
  commentId: Overload:Cqrs.Commands.ICommandSender`1.Send
  isExternal: false
  name: Send
  nameWithType: ICommandSender<TAuthenticationToken>.Send
  fullName: Cqrs.Commands.ICommandSender<TAuthenticationToken>.Send
  nameWithType.vb: ICommandSender(Of TAuthenticationToken).Send
  fullName.vb: Cqrs.Commands.ICommandSender(Of TAuthenticationToken).Send
- uid: '{TCommand}'
  commentId: '!:TCommand'
  definition: TCommand
  name: TCommand
  nameWithType: TCommand
  fullName: TCommand
- uid: TCommand
  isExternal: false
  name: TCommand
  nameWithType: TCommand
  fullName: TCommand
- uid: System.Collections.Generic.IEnumerable{{TCommand}}
  commentId: T:System.Collections.Generic.IEnumerable{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<TCommand>
  nameWithType: IEnumerable<TCommand>
  fullName: System.Collections.Generic.IEnumerable<TCommand>
  nameWithType.vb: IEnumerable(Of TCommand)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TCommand)
  name.vb: IEnumerable(Of TCommand)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
