### YamlMime:ManagedReference
items:
- uid: Cqrs.Commands.ICommandReceiver`1
  commentId: T:Cqrs.Commands.ICommandReceiver`1
  id: ICommandReceiver`1
  parent: Cqrs.Commands
  children:
  - Cqrs.Commands.ICommandReceiver`1.ReceiveCommand(Cqrs.Commands.ICommand{`0})
  langs:
  - csharp
  - vb
  name: ICommandReceiver<TAuthenticationToken>
  nameWithType: ICommandReceiver<TAuthenticationToken>
  fullName: Cqrs.Commands.ICommandReceiver<TAuthenticationToken>
  type: Interface
  source:
    remote:
      path: Framework/Cqrs/Commands/ICommandReceiver.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: ICommandReceiver
    path: Framework/Cqrs/Commands/ICommandReceiver.cs
    startLine: 27
  assemblies:
  - Cqrs
  namespace: Cqrs.Commands
  summary: "\nReceives instances of a <xref href=\"Cqrs.Commands.ICommand%601\" data-throw-if-not-resolved=\"false\"></xref> from the command bus.\n"
  example: []
  syntax:
    content: 'public interface ICommandReceiver<TAuthenticationToken> : ICommandReceiver'
    typeParameters:
    - id: TAuthenticationToken
      description: The <xref href="System.Type" data-throw-if-not-resolved="false"></xref> of authentication token.
    content.vb: >-
      Public Interface ICommandReceiver(Of TAuthenticationToken)

          Inherits ICommandReceiver
  inheritedMembers:
  - Cqrs.Commands.ICommandReceiver.Start
  nameWithType.vb: ICommandReceiver(Of TAuthenticationToken)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: Cqrs.Commands.ICommandReceiver(Of TAuthenticationToken)
  name.vb: ICommandReceiver(Of TAuthenticationToken)
- uid: Cqrs.Commands.ICommandReceiver`1.ReceiveCommand(Cqrs.Commands.ICommand{`0})
  commentId: M:Cqrs.Commands.ICommandReceiver`1.ReceiveCommand(Cqrs.Commands.ICommand{`0})
  id: ReceiveCommand(Cqrs.Commands.ICommand{`0})
  parent: Cqrs.Commands.ICommandReceiver`1
  langs:
  - csharp
  - vb
  name: ReceiveCommand(ICommand<TAuthenticationToken>)
  nameWithType: ICommandReceiver<TAuthenticationToken>.ReceiveCommand(ICommand<TAuthenticationToken>)
  fullName: Cqrs.Commands.ICommandReceiver<TAuthenticationToken>.ReceiveCommand(Cqrs.Commands.ICommand<TAuthenticationToken>)
  type: Method
  source:
    remote:
      path: Framework/Cqrs/Commands/ICommandReceiver.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: ReceiveCommand
    path: Framework/Cqrs/Commands/ICommandReceiver.cs
    startLine: 32
  assemblies:
  - Cqrs
  namespace: Cqrs.Commands
  summary: "\nReceives a <xref href=\"Cqrs.Commands.ICommand%601\" data-throw-if-not-resolved=\"false\"></xref> from the command bus.\n"
  example: []
  syntax:
    content: bool ? ReceiveCommand(ICommand<TAuthenticationToken> command)
    parameters:
    - id: command
      type: Cqrs.Commands.ICommand{{TAuthenticationToken}}
    return:
      type: System.Nullable{System.Boolean}
    content.vb: Function ReceiveCommand(command As ICommand(Of TAuthenticationToken)) As Boolean?
  overload: Cqrs.Commands.ICommandReceiver`1.ReceiveCommand*
  nameWithType.vb: ICommandReceiver(Of TAuthenticationToken).ReceiveCommand(ICommand(Of TAuthenticationToken))
  fullName.vb: Cqrs.Commands.ICommandReceiver(Of TAuthenticationToken).ReceiveCommand(Cqrs.Commands.ICommand(Of TAuthenticationToken))
  name.vb: ReceiveCommand(ICommand(Of TAuthenticationToken))
references:
- uid: Cqrs.Commands.ICommand`1
  commentId: T:Cqrs.Commands.ICommand`1
  isExternal: false
  name: ICommand<TAuthenticationToken>
  nameWithType: ICommand<TAuthenticationToken>
  fullName: Cqrs.Commands.ICommand<TAuthenticationToken>
  nameWithType.vb: ICommand(Of TAuthenticationToken)
  fullName.vb: Cqrs.Commands.ICommand(Of TAuthenticationToken)
  name.vb: ICommand(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Commands.ICommand`1
    name: ICommand
    nameWithType: ICommand
    fullName: Cqrs.Commands.ICommand
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Commands.ICommand`1
    name: ICommand
    nameWithType: ICommand
    fullName: Cqrs.Commands.ICommand
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Cqrs.Commands
  commentId: N:Cqrs.Commands
  isExternal: false
  name: Cqrs.Commands
  nameWithType: Cqrs.Commands
  fullName: Cqrs.Commands
- uid: Cqrs.Commands.ICommandReceiver.Start
  commentId: M:Cqrs.Commands.ICommandReceiver.Start
  parent: Cqrs.Commands.ICommandReceiver
  isExternal: false
  name: Start()
  nameWithType: ICommandReceiver.Start()
  fullName: Cqrs.Commands.ICommandReceiver.Start()
  spec.csharp:
  - uid: Cqrs.Commands.ICommandReceiver.Start
    name: Start
    nameWithType: ICommandReceiver.Start
    fullName: Cqrs.Commands.ICommandReceiver.Start
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Commands.ICommandReceiver.Start
    name: Start
    nameWithType: ICommandReceiver.Start
    fullName: Cqrs.Commands.ICommandReceiver.Start
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Cqrs.Commands.ICommandReceiver
  commentId: T:Cqrs.Commands.ICommandReceiver
  parent: Cqrs.Commands
  isExternal: false
  name: ICommandReceiver
  nameWithType: ICommandReceiver
  fullName: Cqrs.Commands.ICommandReceiver
- uid: Cqrs.Commands.ICommandReceiver`1.ReceiveCommand*
  commentId: Overload:Cqrs.Commands.ICommandReceiver`1.ReceiveCommand
  isExternal: false
  name: ReceiveCommand
  nameWithType: ICommandReceiver<TAuthenticationToken>.ReceiveCommand
  fullName: Cqrs.Commands.ICommandReceiver<TAuthenticationToken>.ReceiveCommand
  nameWithType.vb: ICommandReceiver(Of TAuthenticationToken).ReceiveCommand
  fullName.vb: Cqrs.Commands.ICommandReceiver(Of TAuthenticationToken).ReceiveCommand
- uid: Cqrs.Commands.ICommand{{TAuthenticationToken}}
  commentId: T:Cqrs.Commands.ICommand{`0}
  parent: Cqrs.Commands
  definition: Cqrs.Commands.ICommand`1
  name: ICommand<TAuthenticationToken>
  nameWithType: ICommand<TAuthenticationToken>
  fullName: Cqrs.Commands.ICommand<TAuthenticationToken>
  nameWithType.vb: ICommand(Of TAuthenticationToken)
  fullName.vb: Cqrs.Commands.ICommand(Of TAuthenticationToken)
  name.vb: ICommand(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Commands.ICommand`1
    name: ICommand
    nameWithType: ICommand
    fullName: Cqrs.Commands.ICommand
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Commands.ICommand`1
    name: ICommand
    nameWithType: ICommand
    fullName: Cqrs.Commands.ICommand
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullName.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
