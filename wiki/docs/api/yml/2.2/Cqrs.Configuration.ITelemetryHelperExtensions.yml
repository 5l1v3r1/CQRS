### YamlMime:ManagedReference
items:
- uid: Cqrs.Configuration.ITelemetryHelperExtensions
  commentId: T:Cqrs.Configuration.ITelemetryHelperExtensions
  id: ITelemetryHelperExtensions
  parent: Cqrs.Configuration
  children:
  - Cqrs.Configuration.ITelemetryHelperExtensions.TrackRequest(cdmdotnet.Logging.ITelemetryHelper,System.String,System.Nullable{System.Guid},System.DateTimeOffset,System.TimeSpan,System.String,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.String})
  - Cqrs.Configuration.ITelemetryHelperExtensions.TrackRequest(cdmdotnet.Logging.ITelemetryHelper,System.String,System.Nullable{System.Int32},System.DateTimeOffset,System.TimeSpan,System.String,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.String})
  - Cqrs.Configuration.ITelemetryHelperExtensions.TrackRequest(cdmdotnet.Logging.ITelemetryHelper,System.String,System.String,System.DateTimeOffset,System.TimeSpan,System.String,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.String})
  - Cqrs.Configuration.ITelemetryHelperExtensions.TrackRequest``1(cdmdotnet.Logging.ITelemetryHelper,System.String,``0,System.DateTimeOffset,System.TimeSpan,System.String,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.String})
  langs:
  - csharp
  - vb
  name: ITelemetryHelperExtensions
  nameWithType: ITelemetryHelperExtensions
  fullName: Cqrs.Configuration.ITelemetryHelperExtensions
  type: Class
  source:
    remote:
      path: Framework/Cqrs/Configuration/ITelemetryHelperExtensions.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: ITelemetryHelperExtensions
    path: Framework/Cqrs/Configuration/ITelemetryHelperExtensions.cs
    startLine: 10
  assemblies:
  - Cqrs
  namespace: Cqrs.Configuration
  summary: "\nA collection of extension methods for <xref href=\"cdmdotnet.Logging.ITelemetryHelper\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static class ITelemetryHelperExtensions
    content.vb: Public Module ITelemetryHelperExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Cqrs.Configuration.ITelemetryHelperExtensions.TrackRequest``1(cdmdotnet.Logging.ITelemetryHelper,System.String,``0,System.DateTimeOffset,System.TimeSpan,System.String,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.String})
  commentId: M:Cqrs.Configuration.ITelemetryHelperExtensions.TrackRequest``1(cdmdotnet.Logging.ITelemetryHelper,System.String,``0,System.DateTimeOffset,System.TimeSpan,System.String,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.String})
  id: TrackRequest``1(cdmdotnet.Logging.ITelemetryHelper,System.String,``0,System.DateTimeOffset,System.TimeSpan,System.String,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.String})
  isExtensionMethod: true
  parent: Cqrs.Configuration.ITelemetryHelperExtensions
  langs:
  - csharp
  - vb
  name: TrackRequest<TAuthenticationToken>(ITelemetryHelper, String, TAuthenticationToken, DateTimeOffset, TimeSpan, String, Boolean, IDictionary<String, String>)
  nameWithType: ITelemetryHelperExtensions.TrackRequest<TAuthenticationToken>(ITelemetryHelper, String, TAuthenticationToken, DateTimeOffset, TimeSpan, String, Boolean, IDictionary<String, String>)
  fullName: Cqrs.Configuration.ITelemetryHelperExtensions.TrackRequest<TAuthenticationToken>(cdmdotnet.Logging.ITelemetryHelper, System.String, TAuthenticationToken, System.DateTimeOffset, System.TimeSpan, System.String, System.Boolean, System.Collections.Generic.IDictionary<System.String, System.String>)
  type: Method
  source:
    remote:
      path: Framework/Cqrs/Configuration/ITelemetryHelperExtensions.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: TrackRequest
    path: Framework/Cqrs/Configuration/ITelemetryHelperExtensions.cs
    startLine: 23
  assemblies:
  - Cqrs
  namespace: Cqrs.Configuration
  summary: "\nSend information about a request handled by the application.\n"
  example: []
  syntax:
    content: 'public static void TrackRequest<TAuthenticationToken>(this ITelemetryHelper telemetryHelper, string name, TAuthenticationToken token, DateTimeOffset startTime, TimeSpan duration, string responseCode, bool wasSuccessfull, IDictionary<string, string> properties = null)where TAuthenticationToken : ISingleSignOnToken'
    parameters:
    - id: telemetryHelper
      type: cdmdotnet.Logging.ITelemetryHelper
      description: The <xref href="cdmdotnet.Logging.ITelemetryHelper" data-throw-if-not-resolved="false"></xref> being extended.s
    - id: name
      type: System.String
      description: The request name.
    - id: token
      type: '{TAuthenticationToken}'
      description: The token with user identifiable information.
    - id: startTime
      type: System.DateTimeOffset
      description: The time when the page was requested.
    - id: duration
      type: System.TimeSpan
      description: The time taken by the application to handle the request.
    - id: responseCode
      type: System.String
      description: The response status code.
    - id: wasSuccessfull
      type: System.Boolean
      description: True if the request was handled successfully by the application.
    - id: properties
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: Named string values you can use to search and classify events.
    typeParameters:
    - id: TAuthenticationToken
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub TrackRequest(Of TAuthenticationToken As ISingleSignOnToken)(telemetryHelper As ITelemetryHelper, name As String, token As TAuthenticationToken, startTime As DateTimeOffset, duration As TimeSpan, responseCode As String, wasSuccessfull As Boolean, properties As IDictionary(Of String, String) = Nothing)
  overload: Cqrs.Configuration.ITelemetryHelperExtensions.TrackRequest*
  nameWithType.vb: ITelemetryHelperExtensions.TrackRequest(Of TAuthenticationToken)(ITelemetryHelper, String, TAuthenticationToken, DateTimeOffset, TimeSpan, String, Boolean, IDictionary(Of String, String))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Cqrs.Configuration.ITelemetryHelperExtensions.TrackRequest(Of TAuthenticationToken)(cdmdotnet.Logging.ITelemetryHelper, System.String, TAuthenticationToken, System.DateTimeOffset, System.TimeSpan, System.String, System.Boolean, System.Collections.Generic.IDictionary(Of System.String, System.String))
  name.vb: TrackRequest(Of TAuthenticationToken)(ITelemetryHelper, String, TAuthenticationToken, DateTimeOffset, TimeSpan, String, Boolean, IDictionary(Of String, String))
- uid: Cqrs.Configuration.ITelemetryHelperExtensions.TrackRequest(cdmdotnet.Logging.ITelemetryHelper,System.String,System.Nullable{System.Guid},System.DateTimeOffset,System.TimeSpan,System.String,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.String})
  commentId: M:Cqrs.Configuration.ITelemetryHelperExtensions.TrackRequest(cdmdotnet.Logging.ITelemetryHelper,System.String,System.Nullable{System.Guid},System.DateTimeOffset,System.TimeSpan,System.String,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.String})
  id: TrackRequest(cdmdotnet.Logging.ITelemetryHelper,System.String,System.Nullable{System.Guid},System.DateTimeOffset,System.TimeSpan,System.String,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.String})
  isExtensionMethod: true
  parent: Cqrs.Configuration.ITelemetryHelperExtensions
  langs:
  - csharp
  - vb
  name: TrackRequest(ITelemetryHelper, String, Nullable<Guid>, DateTimeOffset, TimeSpan, String, Boolean, IDictionary<String, String>)
  nameWithType: ITelemetryHelperExtensions.TrackRequest(ITelemetryHelper, String, Nullable<Guid>, DateTimeOffset, TimeSpan, String, Boolean, IDictionary<String, String>)
  fullName: Cqrs.Configuration.ITelemetryHelperExtensions.TrackRequest(cdmdotnet.Logging.ITelemetryHelper, System.String, System.Nullable<System.Guid>, System.DateTimeOffset, System.TimeSpan, System.String, System.Boolean, System.Collections.Generic.IDictionary<System.String, System.String>)
  type: Method
  source:
    remote:
      path: Framework/Cqrs/Configuration/ITelemetryHelperExtensions.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: TrackRequest
    path: Framework/Cqrs/Configuration/ITelemetryHelperExtensions.cs
    startLine: 40
  assemblies:
  - Cqrs
  namespace: Cqrs.Configuration
  summary: "\nSend information about a request handled by the application.\n"
  example: []
  syntax:
    content: public static void TrackRequest(this ITelemetryHelper telemetryHelper, string name, Guid? token, DateTimeOffset startTime, TimeSpan duration, string responseCode, bool wasSuccessfull, IDictionary<string, string> properties = null)
    parameters:
    - id: telemetryHelper
      type: cdmdotnet.Logging.ITelemetryHelper
      description: The <xref href="cdmdotnet.Logging.ITelemetryHelper" data-throw-if-not-resolved="false"></xref> being extended.s
    - id: name
      type: System.String
      description: The request name.
    - id: token
      type: System.Nullable{System.Guid}
      description: The token with user identifiable information.
    - id: startTime
      type: System.DateTimeOffset
      description: The time when the page was requested.
    - id: duration
      type: System.TimeSpan
      description: The time taken by the application to handle the request.
    - id: responseCode
      type: System.String
      description: The response status code.
    - id: wasSuccessfull
      type: System.Boolean
      description: True if the request was handled successfully by the application.
    - id: properties
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: Named string values you can use to search and classify events.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub TrackRequest(telemetryHelper As ITelemetryHelper, name As String, token As Guid?, startTime As DateTimeOffset, duration As TimeSpan, responseCode As String, wasSuccessfull As Boolean, properties As IDictionary(Of String, String) = Nothing)
  overload: Cqrs.Configuration.ITelemetryHelperExtensions.TrackRequest*
  nameWithType.vb: ITelemetryHelperExtensions.TrackRequest(ITelemetryHelper, String, Nullable(Of Guid), DateTimeOffset, TimeSpan, String, Boolean, IDictionary(Of String, String))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Cqrs.Configuration.ITelemetryHelperExtensions.TrackRequest(cdmdotnet.Logging.ITelemetryHelper, System.String, System.Nullable(Of System.Guid), System.DateTimeOffset, System.TimeSpan, System.String, System.Boolean, System.Collections.Generic.IDictionary(Of System.String, System.String))
  name.vb: TrackRequest(ITelemetryHelper, String, Nullable(Of Guid), DateTimeOffset, TimeSpan, String, Boolean, IDictionary(Of String, String))
- uid: Cqrs.Configuration.ITelemetryHelperExtensions.TrackRequest(cdmdotnet.Logging.ITelemetryHelper,System.String,System.Nullable{System.Int32},System.DateTimeOffset,System.TimeSpan,System.String,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.String})
  commentId: M:Cqrs.Configuration.ITelemetryHelperExtensions.TrackRequest(cdmdotnet.Logging.ITelemetryHelper,System.String,System.Nullable{System.Int32},System.DateTimeOffset,System.TimeSpan,System.String,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.String})
  id: TrackRequest(cdmdotnet.Logging.ITelemetryHelper,System.String,System.Nullable{System.Int32},System.DateTimeOffset,System.TimeSpan,System.String,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.String})
  isExtensionMethod: true
  parent: Cqrs.Configuration.ITelemetryHelperExtensions
  langs:
  - csharp
  - vb
  name: TrackRequest(ITelemetryHelper, String, Nullable<Int32>, DateTimeOffset, TimeSpan, String, Boolean, IDictionary<String, String>)
  nameWithType: ITelemetryHelperExtensions.TrackRequest(ITelemetryHelper, String, Nullable<Int32>, DateTimeOffset, TimeSpan, String, Boolean, IDictionary<String, String>)
  fullName: Cqrs.Configuration.ITelemetryHelperExtensions.TrackRequest(cdmdotnet.Logging.ITelemetryHelper, System.String, System.Nullable<System.Int32>, System.DateTimeOffset, System.TimeSpan, System.String, System.Boolean, System.Collections.Generic.IDictionary<System.String, System.String>)
  type: Method
  source:
    remote:
      path: Framework/Cqrs/Configuration/ITelemetryHelperExtensions.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: TrackRequest
    path: Framework/Cqrs/Configuration/ITelemetryHelperExtensions.cs
    startLine: 56
  assemblies:
  - Cqrs
  namespace: Cqrs.Configuration
  summary: "\nSend information about a request handled by the application.\n"
  example: []
  syntax:
    content: public static void TrackRequest(this ITelemetryHelper telemetryHelper, string name, int ? token, DateTimeOffset startTime, TimeSpan duration, string responseCode, bool wasSuccessfull, IDictionary<string, string> properties = null)
    parameters:
    - id: telemetryHelper
      type: cdmdotnet.Logging.ITelemetryHelper
      description: The <xref href="cdmdotnet.Logging.ITelemetryHelper" data-throw-if-not-resolved="false"></xref> being extended.s
    - id: name
      type: System.String
      description: The request name.
    - id: token
      type: System.Nullable{System.Int32}
      description: The token with user identifiable information.
    - id: startTime
      type: System.DateTimeOffset
      description: The time when the page was requested.
    - id: duration
      type: System.TimeSpan
      description: The time taken by the application to handle the request.
    - id: responseCode
      type: System.String
      description: The response status code.
    - id: wasSuccessfull
      type: System.Boolean
      description: True if the request was handled successfully by the application.
    - id: properties
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: Named string values you can use to search and classify events.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub TrackRequest(telemetryHelper As ITelemetryHelper, name As String, token As Integer?, startTime As DateTimeOffset, duration As TimeSpan, responseCode As String, wasSuccessfull As Boolean, properties As IDictionary(Of String, String) = Nothing)
  overload: Cqrs.Configuration.ITelemetryHelperExtensions.TrackRequest*
  nameWithType.vb: ITelemetryHelperExtensions.TrackRequest(ITelemetryHelper, String, Nullable(Of Int32), DateTimeOffset, TimeSpan, String, Boolean, IDictionary(Of String, String))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Cqrs.Configuration.ITelemetryHelperExtensions.TrackRequest(cdmdotnet.Logging.ITelemetryHelper, System.String, System.Nullable(Of System.Int32), System.DateTimeOffset, System.TimeSpan, System.String, System.Boolean, System.Collections.Generic.IDictionary(Of System.String, System.String))
  name.vb: TrackRequest(ITelemetryHelper, String, Nullable(Of Int32), DateTimeOffset, TimeSpan, String, Boolean, IDictionary(Of String, String))
- uid: Cqrs.Configuration.ITelemetryHelperExtensions.TrackRequest(cdmdotnet.Logging.ITelemetryHelper,System.String,System.String,System.DateTimeOffset,System.TimeSpan,System.String,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.String})
  commentId: M:Cqrs.Configuration.ITelemetryHelperExtensions.TrackRequest(cdmdotnet.Logging.ITelemetryHelper,System.String,System.String,System.DateTimeOffset,System.TimeSpan,System.String,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.String})
  id: TrackRequest(cdmdotnet.Logging.ITelemetryHelper,System.String,System.String,System.DateTimeOffset,System.TimeSpan,System.String,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.String})
  isExtensionMethod: true
  parent: Cqrs.Configuration.ITelemetryHelperExtensions
  langs:
  - csharp
  - vb
  name: TrackRequest(ITelemetryHelper, String, String, DateTimeOffset, TimeSpan, String, Boolean, IDictionary<String, String>)
  nameWithType: ITelemetryHelperExtensions.TrackRequest(ITelemetryHelper, String, String, DateTimeOffset, TimeSpan, String, Boolean, IDictionary<String, String>)
  fullName: Cqrs.Configuration.ITelemetryHelperExtensions.TrackRequest(cdmdotnet.Logging.ITelemetryHelper, System.String, System.String, System.DateTimeOffset, System.TimeSpan, System.String, System.Boolean, System.Collections.Generic.IDictionary<System.String, System.String>)
  type: Method
  source:
    remote:
      path: Framework/Cqrs/Configuration/ITelemetryHelperExtensions.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: TrackRequest
    path: Framework/Cqrs/Configuration/ITelemetryHelperExtensions.cs
    startLine: 72
  assemblies:
  - Cqrs
  namespace: Cqrs.Configuration
  summary: "\nSend information about a request handled by the application.\n"
  example: []
  syntax:
    content: public static void TrackRequest(this ITelemetryHelper telemetryHelper, string name, string token, DateTimeOffset startTime, TimeSpan duration, string responseCode, bool wasSuccessfull, IDictionary<string, string> properties = null)
    parameters:
    - id: telemetryHelper
      type: cdmdotnet.Logging.ITelemetryHelper
      description: The <xref href="cdmdotnet.Logging.ITelemetryHelper" data-throw-if-not-resolved="false"></xref> being extended.s
    - id: name
      type: System.String
      description: The request name.
    - id: token
      type: System.String
      description: The token with user identifiable information.
    - id: startTime
      type: System.DateTimeOffset
      description: The time when the page was requested.
    - id: duration
      type: System.TimeSpan
      description: The time taken by the application to handle the request.
    - id: responseCode
      type: System.String
      description: The response status code.
    - id: wasSuccessfull
      type: System.Boolean
      description: True if the request was handled successfully by the application.
    - id: properties
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: Named string values you can use to search and classify events.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub TrackRequest(telemetryHelper As ITelemetryHelper, name As String, token As String, startTime As DateTimeOffset, duration As TimeSpan, responseCode As String, wasSuccessfull As Boolean, properties As IDictionary(Of String, String) = Nothing)
  overload: Cqrs.Configuration.ITelemetryHelperExtensions.TrackRequest*
  nameWithType.vb: ITelemetryHelperExtensions.TrackRequest(ITelemetryHelper, String, String, DateTimeOffset, TimeSpan, String, Boolean, IDictionary(Of String, String))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Cqrs.Configuration.ITelemetryHelperExtensions.TrackRequest(cdmdotnet.Logging.ITelemetryHelper, System.String, System.String, System.DateTimeOffset, System.TimeSpan, System.String, System.Boolean, System.Collections.Generic.IDictionary(Of System.String, System.String))
  name.vb: TrackRequest(ITelemetryHelper, String, String, DateTimeOffset, TimeSpan, String, Boolean, IDictionary(Of String, String))
references:
- uid: cdmdotnet.Logging.ITelemetryHelper
  commentId: T:cdmdotnet.Logging.ITelemetryHelper
  parent: cdmdotnet.Logging
  isExternal: true
  name: ITelemetryHelper
  nameWithType: ITelemetryHelper
  fullName: cdmdotnet.Logging.ITelemetryHelper
- uid: Cqrs.Configuration
  commentId: N:Cqrs.Configuration
  isExternal: false
  name: Cqrs.Configuration
  nameWithType: Cqrs.Configuration
  fullName: Cqrs.Configuration
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: cdmdotnet.Logging
  commentId: N:cdmdotnet.Logging
  isExternal: false
  name: cdmdotnet.Logging
  nameWithType: cdmdotnet.Logging
  fullName: cdmdotnet.Logging
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Cqrs.Configuration.ITelemetryHelperExtensions.TrackRequest*
  commentId: Overload:Cqrs.Configuration.ITelemetryHelperExtensions.TrackRequest
  isExternal: false
  name: TrackRequest
  nameWithType: ITelemetryHelperExtensions.TrackRequest
  fullName: Cqrs.Configuration.ITelemetryHelperExtensions.TrackRequest
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: '{TAuthenticationToken}'
  commentId: '!:TAuthenticationToken'
  definition: TAuthenticationToken
  name: TAuthenticationToken
  nameWithType: TAuthenticationToken
  fullName: TAuthenticationToken
- uid: System.DateTimeOffset
  commentId: T:System.DateTimeOffset
  parent: System
  isExternal: true
  name: DateTimeOffset
  nameWithType: DateTimeOffset
  fullName: System.DateTimeOffset
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  nameWithType: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  nameWithType.vb: IDictionary(Of String, String)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TAuthenticationToken
  isExternal: false
  name: TAuthenticationToken
  nameWithType: TAuthenticationToken
  fullName: TAuthenticationToken
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Nullable{System.Guid}
  commentId: T:System.Nullable{System.Guid}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Guid>
  nameWithType: Nullable<Guid>
  fullName: System.Nullable<System.Guid>
  nameWithType.vb: Nullable(Of Guid)
  fullName.vb: System.Nullable(Of System.Guid)
  name.vb: Nullable(Of Guid)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
