### YamlMime:ManagedReference
items:
- uid: Cqrs.Services.IUnitOfWorkService
  commentId: T:Cqrs.Services.IUnitOfWorkService
  id: IUnitOfWorkService
  parent: Cqrs.Services
  children:
  - Cqrs.Services.IUnitOfWorkService.Commit(System.Object)
  - Cqrs.Services.IUnitOfWorkService.SetCommitter(System.Object)
  langs:
  - csharp
  - vb
  name: IUnitOfWorkService
  nameWithType: IUnitOfWorkService
  fullName: Cqrs.Services.IUnitOfWorkService
  type: Interface
  source:
    remote:
      path: Framework/Cqrs/Services/IUnitOfWorkService.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: IUnitOfWorkService
    path: Framework/Cqrs/Services/IUnitOfWorkService.cs
    startLine: 15
  assemblies:
  - Cqrs
  namespace: Cqrs.Services
  summary: "\nProvides a basic container to control how the <xref href=\"Cqrs.Domain.IUnitOfWork%601\" data-throw-if-not-resolved=\"false\"></xref> is accessed.\n"
  example: []
  syntax:
    content: public interface IUnitOfWorkService
    content.vb: Public Interface IUnitOfWorkService
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Cqrs.Services.IUnitOfWorkService.SetCommitter(System.Object)
  commentId: M:Cqrs.Services.IUnitOfWorkService.SetCommitter(System.Object)
  id: SetCommitter(System.Object)
  parent: Cqrs.Services.IUnitOfWorkService
  langs:
  - csharp
  - vb
  name: SetCommitter(Object)
  nameWithType: IUnitOfWorkService.SetCommitter(Object)
  fullName: Cqrs.Services.IUnitOfWorkService.SetCommitter(System.Object)
  type: Method
  source:
    remote:
      path: Framework/Cqrs/Services/IUnitOfWorkService.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: SetCommitter
    path: Framework/Cqrs/Services/IUnitOfWorkService.cs
    startLine: 23
  assemblies:
  - Cqrs
  namespace: Cqrs.Services
  summary: "\nInforms the service of the object that will be committing the UnitOfWork.\n"
  example: []
  syntax:
    content: bool SetCommitter(object commiter)
    parameters:
    - id: commiter
      type: System.Object
    return:
      type: System.Boolean
      description: "\ntrue if the provided <code data-dev-comment-type=\"paramref\">commiter</code> is accepted as the committer, false otherwise.\n"
    content.vb: Function SetCommitter(commiter As Object) As Boolean
  overload: Cqrs.Services.IUnitOfWorkService.SetCommitter*
- uid: Cqrs.Services.IUnitOfWorkService.Commit(System.Object)
  commentId: M:Cqrs.Services.IUnitOfWorkService.Commit(System.Object)
  id: Commit(System.Object)
  parent: Cqrs.Services.IUnitOfWorkService
  langs:
  - csharp
  - vb
  name: Commit(Object)
  nameWithType: IUnitOfWorkService.Commit(Object)
  fullName: Cqrs.Services.IUnitOfWorkService.Commit(System.Object)
  type: Method
  source:
    remote:
      path: Framework/Cqrs/Services/IUnitOfWorkService.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Commit
    path: Framework/Cqrs/Services/IUnitOfWorkService.cs
    startLine: 31
  assemblies:
  - Cqrs
  namespace: Cqrs.Services
  summary: "\nCommits the UnitOfWork if the provided <code data-dev-comment-type=\"paramref\">commiter</code> is the Committer.\n"
  example: []
  syntax:
    content: bool Commit(object commiter)
    parameters:
    - id: commiter
      type: System.Object
    return:
      type: System.Boolean
      description: "\ntrue if the provided <code data-dev-comment-type=\"paramref\">commiter</code> is the Committer, false otherwise.\n"
    content.vb: Function Commit(commiter As Object) As Boolean
  overload: Cqrs.Services.IUnitOfWorkService.Commit*
references:
- uid: Cqrs.Domain.IUnitOfWork`1
  commentId: T:Cqrs.Domain.IUnitOfWork`1
  isExternal: false
  name: IUnitOfWork<TAuthenticationToken>
  nameWithType: IUnitOfWork<TAuthenticationToken>
  fullName: Cqrs.Domain.IUnitOfWork<TAuthenticationToken>
  nameWithType.vb: IUnitOfWork(Of TAuthenticationToken)
  fullName.vb: Cqrs.Domain.IUnitOfWork(Of TAuthenticationToken)
  name.vb: IUnitOfWork(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Domain.IUnitOfWork`1
    name: IUnitOfWork
    nameWithType: IUnitOfWork
    fullName: Cqrs.Domain.IUnitOfWork
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Domain.IUnitOfWork`1
    name: IUnitOfWork
    nameWithType: IUnitOfWork
    fullName: Cqrs.Domain.IUnitOfWork
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Services
  commentId: N:Cqrs.Services
  isExternal: false
  name: Cqrs.Services
  nameWithType: Cqrs.Services
  fullName: Cqrs.Services
- uid: Cqrs.Services.IUnitOfWorkService.SetCommitter*
  commentId: Overload:Cqrs.Services.IUnitOfWorkService.SetCommitter
  isExternal: false
  name: SetCommitter
  nameWithType: IUnitOfWorkService.SetCommitter
  fullName: Cqrs.Services.IUnitOfWorkService.SetCommitter
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Cqrs.Services.IUnitOfWorkService.Commit*
  commentId: Overload:Cqrs.Services.IUnitOfWorkService.Commit
  isExternal: false
  name: Commit
  nameWithType: IUnitOfWorkService.Commit
  fullName: Cqrs.Services.IUnitOfWorkService.Commit
