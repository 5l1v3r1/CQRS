### YamlMime:ManagedReference
items:
- uid: Cqrs.Ninject.Configuration.InProcessCommandBusModule`1
  commentId: T:Cqrs.Ninject.Configuration.InProcessCommandBusModule`1
  id: InProcessCommandBusModule`1
  parent: Cqrs.Ninject.Configuration
  children:
  - Cqrs.Ninject.Configuration.InProcessCommandBusModule`1.Load
  - Cqrs.Ninject.Configuration.InProcessCommandBusModule`1.RegisterCqrsRequirements
  - Cqrs.Ninject.Configuration.InProcessCommandBusModule`1.RegisterFactories
  - Cqrs.Ninject.Configuration.InProcessCommandBusModule`1.RegisterServices
  langs:
  - csharp
  - vb
  name: InProcessCommandBusModule<TAuthenticationToken>
  nameWithType: InProcessCommandBusModule<TAuthenticationToken>
  fullName: Cqrs.Ninject.Configuration.InProcessCommandBusModule<TAuthenticationToken>
  type: Class
  source:
    remote:
      path: Framework/Ninject/Cqrs.Ninject/Configuration/InProcessCommandBusModule.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: InProcessCommandBusModule
    path: Framework/Ninject/Cqrs.Ninject/Configuration/InProcessCommandBusModule.cs
    startLine: 21
  assemblies:
  - Cqrs.Ninject
  namespace: Cqrs.Ninject.Configuration
  summary: "\nA <see cref=\"!:INinjectModule\"></see> that configures the <xref href=\"Cqrs.Bus.InProcessBus%601\" data-throw-if-not-resolved=\"false\"></xref> as a <xref href=\"Cqrs.Commands.ICommandPublisher%601\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"Cqrs.Commands.ICommandReceiver\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: 'public class InProcessCommandBusModule<TAuthenticationToken> : ResolvableModule'
    typeParameters:
    - id: TAuthenticationToken
      description: The <see cref="!:Type"></see> of the authentication token.
    content.vb: >-
      Public Class InProcessCommandBusModule(Of TAuthenticationToken)

          Inherits ResolvableModule
  inheritance:
  - System.Object
  - Cqrs.Ninject.Configuration.ResolvableModule
  derivedClasses:
  - Cqrs.Ninject.InProcess.CommandBus.Configuration.InProcessCommandBusModule`1
  inheritedMembers:
  - Cqrs.Ninject.Configuration.ResolvableModule.Resolve``1
  - Cqrs.Ninject.Configuration.ResolvableModule.Resolve(Type)
  - Cqrs.Ninject.Configuration.ResolvableModule.IsRegistered``1
  - Cqrs.Ninject.Configuration.ResolvableModule.IsRegistered(Type)
  nameWithType.vb: InProcessCommandBusModule(Of TAuthenticationToken)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Cqrs.Ninject.Configuration.InProcessCommandBusModule(Of TAuthenticationToken)
  name.vb: InProcessCommandBusModule(Of TAuthenticationToken)
- uid: Cqrs.Ninject.Configuration.InProcessCommandBusModule`1.Load
  commentId: M:Cqrs.Ninject.Configuration.InProcessCommandBusModule`1.Load
  id: Load
  parent: Cqrs.Ninject.Configuration.InProcessCommandBusModule`1
  langs:
  - csharp
  - vb
  name: Load()
  nameWithType: InProcessCommandBusModule<TAuthenticationToken>.Load()
  fullName: Cqrs.Ninject.Configuration.InProcessCommandBusModule<TAuthenticationToken>.Load()
  type: Method
  source:
    remote:
      path: Framework/Ninject/Cqrs.Ninject/Configuration/InProcessCommandBusModule.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Load
    path: Framework/Ninject/Cqrs.Ninject/Configuration/InProcessCommandBusModule.cs
    startLine: 28
  assemblies:
  - Cqrs.Ninject
  namespace: Cqrs.Ninject.Configuration
  summary: "\nLoads the module into the kernel.\n"
  example: []
  syntax:
    content: public override void Load()
    content.vb: Public Overrides Sub Load
  overload: Cqrs.Ninject.Configuration.InProcessCommandBusModule`1.Load*
  nameWithType.vb: InProcessCommandBusModule(Of TAuthenticationToken).Load()
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Cqrs.Ninject.Configuration.InProcessCommandBusModule(Of TAuthenticationToken).Load()
- uid: Cqrs.Ninject.Configuration.InProcessCommandBusModule`1.RegisterFactories
  commentId: M:Cqrs.Ninject.Configuration.InProcessCommandBusModule`1.RegisterFactories
  id: RegisterFactories
  parent: Cqrs.Ninject.Configuration.InProcessCommandBusModule`1
  langs:
  - csharp
  - vb
  name: RegisterFactories()
  nameWithType: InProcessCommandBusModule<TAuthenticationToken>.RegisterFactories()
  fullName: Cqrs.Ninject.Configuration.InProcessCommandBusModule<TAuthenticationToken>.RegisterFactories()
  type: Method
  source:
    remote:
      path: Framework/Ninject/Cqrs.Ninject/Configuration/InProcessCommandBusModule.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: RegisterFactories
    path: Framework/Ninject/Cqrs.Ninject/Configuration/InProcessCommandBusModule.cs
    startLine: 40
  assemblies:
  - Cqrs.Ninject
  namespace: Cqrs.Ninject.Configuration
  summary: "\nRegister the all factories\n"
  example: []
  syntax:
    content: public virtual void RegisterFactories()
    content.vb: Public Overridable Sub RegisterFactories
  overload: Cqrs.Ninject.Configuration.InProcessCommandBusModule`1.RegisterFactories*
  nameWithType.vb: InProcessCommandBusModule(Of TAuthenticationToken).RegisterFactories()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Cqrs.Ninject.Configuration.InProcessCommandBusModule(Of TAuthenticationToken).RegisterFactories()
- uid: Cqrs.Ninject.Configuration.InProcessCommandBusModule`1.RegisterServices
  commentId: M:Cqrs.Ninject.Configuration.InProcessCommandBusModule`1.RegisterServices
  id: RegisterServices
  parent: Cqrs.Ninject.Configuration.InProcessCommandBusModule`1
  langs:
  - csharp
  - vb
  name: RegisterServices()
  nameWithType: InProcessCommandBusModule<TAuthenticationToken>.RegisterServices()
  fullName: Cqrs.Ninject.Configuration.InProcessCommandBusModule<TAuthenticationToken>.RegisterServices()
  type: Method
  source:
    remote:
      path: Framework/Ninject/Cqrs.Ninject/Configuration/InProcessCommandBusModule.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: RegisterServices
    path: Framework/Ninject/Cqrs.Ninject/Configuration/InProcessCommandBusModule.cs
    startLine: 47
  assemblies:
  - Cqrs.Ninject
  namespace: Cqrs.Ninject.Configuration
  summary: "\nRegister the all services\n"
  example: []
  syntax:
    content: public virtual void RegisterServices()
    content.vb: Public Overridable Sub RegisterServices
  overload: Cqrs.Ninject.Configuration.InProcessCommandBusModule`1.RegisterServices*
  nameWithType.vb: InProcessCommandBusModule(Of TAuthenticationToken).RegisterServices()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Cqrs.Ninject.Configuration.InProcessCommandBusModule(Of TAuthenticationToken).RegisterServices()
- uid: Cqrs.Ninject.Configuration.InProcessCommandBusModule`1.RegisterCqrsRequirements
  commentId: M:Cqrs.Ninject.Configuration.InProcessCommandBusModule`1.RegisterCqrsRequirements
  id: RegisterCqrsRequirements
  parent: Cqrs.Ninject.Configuration.InProcessCommandBusModule`1
  langs:
  - csharp
  - vb
  name: RegisterCqrsRequirements()
  nameWithType: InProcessCommandBusModule<TAuthenticationToken>.RegisterCqrsRequirements()
  fullName: Cqrs.Ninject.Configuration.InProcessCommandBusModule<TAuthenticationToken>.RegisterCqrsRequirements()
  type: Method
  source:
    remote:
      path: Framework/Ninject/Cqrs.Ninject/Configuration/InProcessCommandBusModule.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: RegisterCqrsRequirements
    path: Framework/Ninject/Cqrs.Ninject/Configuration/InProcessCommandBusModule.cs
    startLine: 57
  assemblies:
  - Cqrs.Ninject
  namespace: Cqrs.Ninject.Configuration
  summary: "\nRegister the <xref href=\"Cqrs.Commands.ICommandPublisher%601\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"Cqrs.Commands.IPublishAndWaitCommandPublisher%601\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"Cqrs.Commands.ICommandReceiver%601\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"Cqrs.Bus.ICommandHandlerRegistrar\" data-throw-if-not-resolved=\"false\"></xref>\nRegister (for backwards compatibility) <xref href=\"Cqrs.Commands.ICommandSender%601\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public virtual void RegisterCqrsRequirements()
    content.vb: Public Overridable Sub RegisterCqrsRequirements
  overload: Cqrs.Ninject.Configuration.InProcessCommandBusModule`1.RegisterCqrsRequirements*
  nameWithType.vb: InProcessCommandBusModule(Of TAuthenticationToken).RegisterCqrsRequirements()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Cqrs.Ninject.Configuration.InProcessCommandBusModule(Of TAuthenticationToken).RegisterCqrsRequirements()
references:
- uid: Cqrs.Bus.InProcessBus`1
  commentId: T:Cqrs.Bus.InProcessBus`1
  isExternal: false
  name: InProcessBus<TAuthenticationToken>
  nameWithType: InProcessBus<TAuthenticationToken>
  fullName: Cqrs.Bus.InProcessBus<TAuthenticationToken>
  nameWithType.vb: InProcessBus(Of TAuthenticationToken)
  fullName.vb: Cqrs.Bus.InProcessBus(Of TAuthenticationToken)
  name.vb: InProcessBus(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Bus.InProcessBus`1
    name: InProcessBus
    nameWithType: InProcessBus
    fullName: Cqrs.Bus.InProcessBus
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Bus.InProcessBus`1
    name: InProcessBus
    nameWithType: InProcessBus
    fullName: Cqrs.Bus.InProcessBus
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Commands.ICommandPublisher`1
  commentId: T:Cqrs.Commands.ICommandPublisher`1
  isExternal: false
  name: ICommandPublisher<TAuthenticationToken>
  nameWithType: ICommandPublisher<TAuthenticationToken>
  fullName: Cqrs.Commands.ICommandPublisher<TAuthenticationToken>
  nameWithType.vb: ICommandPublisher(Of TAuthenticationToken)
  fullName.vb: Cqrs.Commands.ICommandPublisher(Of TAuthenticationToken)
  name.vb: ICommandPublisher(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Commands.ICommandPublisher`1
    name: ICommandPublisher
    nameWithType: ICommandPublisher
    fullName: Cqrs.Commands.ICommandPublisher
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Commands.ICommandPublisher`1
    name: ICommandPublisher
    nameWithType: ICommandPublisher
    fullName: Cqrs.Commands.ICommandPublisher
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Commands.ICommandReceiver
  commentId: T:Cqrs.Commands.ICommandReceiver
  parent: Cqrs.Commands
  isExternal: false
  name: ICommandReceiver
  nameWithType: ICommandReceiver
  fullName: Cqrs.Commands.ICommandReceiver
- uid: Cqrs.Ninject.Configuration
  commentId: N:Cqrs.Ninject.Configuration
  isExternal: false
  name: Cqrs.Ninject.Configuration
  nameWithType: Cqrs.Ninject.Configuration
  fullName: Cqrs.Ninject.Configuration
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Cqrs.Ninject.Configuration.ResolvableModule
  commentId: T:Cqrs.Ninject.Configuration.ResolvableModule
  parent: Cqrs.Ninject.Configuration
  isExternal: false
  name: ResolvableModule
  nameWithType: ResolvableModule
  fullName: Cqrs.Ninject.Configuration.ResolvableModule
- uid: Cqrs.Ninject.Configuration.ResolvableModule.Resolve``1
  commentId: M:Cqrs.Ninject.Configuration.ResolvableModule.Resolve``1
  parent: Cqrs.Ninject.Configuration.ResolvableModule
  isExternal: false
  name: Resolve<T>()
  nameWithType: ResolvableModule.Resolve<T>()
  fullName: Cqrs.Ninject.Configuration.ResolvableModule.Resolve<T>()
  nameWithType.vb: ResolvableModule.Resolve(Of T)()
  fullName.vb: Cqrs.Ninject.Configuration.ResolvableModule.Resolve(Of T)()
  name.vb: Resolve(Of T)()
  spec.csharp:
  - uid: Cqrs.Ninject.Configuration.ResolvableModule.Resolve``1
    name: Resolve<T>
    nameWithType: ResolvableModule.Resolve<T>
    fullName: Cqrs.Ninject.Configuration.ResolvableModule.Resolve<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Ninject.Configuration.ResolvableModule.Resolve``1
    name: Resolve(Of T)
    nameWithType: ResolvableModule.Resolve(Of T)
    fullName: Cqrs.Ninject.Configuration.ResolvableModule.Resolve(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Ninject.Configuration.ResolvableModule.Resolve(Type)
  commentId: M:Cqrs.Ninject.Configuration.ResolvableModule.Resolve(Type)
  parent: Cqrs.Ninject.Configuration.ResolvableModule
  isExternal: true
  name: Resolve(Type)
  nameWithType: ResolvableModule.Resolve(Type)
  fullName: Cqrs.Ninject.Configuration.ResolvableModule.Resolve(Type)
  spec.csharp:
  - uid: Cqrs.Ninject.Configuration.ResolvableModule.Resolve(Type)
    name: Resolve
    nameWithType: ResolvableModule.Resolve
    fullName: Cqrs.Ninject.Configuration.ResolvableModule.Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: Type
    name: Type
    nameWithType: Type
    fullName: Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Ninject.Configuration.ResolvableModule.Resolve(Type)
    name: Resolve
    nameWithType: ResolvableModule.Resolve
    fullName: Cqrs.Ninject.Configuration.ResolvableModule.Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: Type
    name: Type
    nameWithType: Type
    fullName: Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Ninject.Configuration.ResolvableModule.IsRegistered``1
  commentId: M:Cqrs.Ninject.Configuration.ResolvableModule.IsRegistered``1
  parent: Cqrs.Ninject.Configuration.ResolvableModule
  isExternal: false
  name: IsRegistered<T>()
  nameWithType: ResolvableModule.IsRegistered<T>()
  fullName: Cqrs.Ninject.Configuration.ResolvableModule.IsRegistered<T>()
  nameWithType.vb: ResolvableModule.IsRegistered(Of T)()
  fullName.vb: Cqrs.Ninject.Configuration.ResolvableModule.IsRegistered(Of T)()
  name.vb: IsRegistered(Of T)()
  spec.csharp:
  - uid: Cqrs.Ninject.Configuration.ResolvableModule.IsRegistered``1
    name: IsRegistered<T>
    nameWithType: ResolvableModule.IsRegistered<T>
    fullName: Cqrs.Ninject.Configuration.ResolvableModule.IsRegistered<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Ninject.Configuration.ResolvableModule.IsRegistered``1
    name: IsRegistered(Of T)
    nameWithType: ResolvableModule.IsRegistered(Of T)
    fullName: Cqrs.Ninject.Configuration.ResolvableModule.IsRegistered(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Ninject.Configuration.ResolvableModule.IsRegistered(Type)
  commentId: M:Cqrs.Ninject.Configuration.ResolvableModule.IsRegistered(Type)
  parent: Cqrs.Ninject.Configuration.ResolvableModule
  isExternal: true
  name: IsRegistered(Type)
  nameWithType: ResolvableModule.IsRegistered(Type)
  fullName: Cqrs.Ninject.Configuration.ResolvableModule.IsRegistered(Type)
  spec.csharp:
  - uid: Cqrs.Ninject.Configuration.ResolvableModule.IsRegistered(Type)
    name: IsRegistered
    nameWithType: ResolvableModule.IsRegistered
    fullName: Cqrs.Ninject.Configuration.ResolvableModule.IsRegistered
  - name: (
    nameWithType: (
    fullName: (
  - uid: Type
    name: Type
    nameWithType: Type
    fullName: Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Ninject.Configuration.ResolvableModule.IsRegistered(Type)
    name: IsRegistered
    nameWithType: ResolvableModule.IsRegistered
    fullName: Cqrs.Ninject.Configuration.ResolvableModule.IsRegistered
  - name: (
    nameWithType: (
    fullName: (
  - uid: Type
    name: Type
    nameWithType: Type
    fullName: Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Commands
  commentId: N:Cqrs.Commands
  isExternal: false
  name: Cqrs.Commands
  nameWithType: Cqrs.Commands
  fullName: Cqrs.Commands
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Cqrs.Ninject.Configuration.InProcessCommandBusModule`1.Load*
  commentId: Overload:Cqrs.Ninject.Configuration.InProcessCommandBusModule`1.Load
  isExternal: false
  name: Load
  nameWithType: InProcessCommandBusModule<TAuthenticationToken>.Load
  fullName: Cqrs.Ninject.Configuration.InProcessCommandBusModule<TAuthenticationToken>.Load
  nameWithType.vb: InProcessCommandBusModule(Of TAuthenticationToken).Load
  fullName.vb: Cqrs.Ninject.Configuration.InProcessCommandBusModule(Of TAuthenticationToken).Load
- uid: Cqrs.Ninject.Configuration.InProcessCommandBusModule`1.RegisterFactories*
  commentId: Overload:Cqrs.Ninject.Configuration.InProcessCommandBusModule`1.RegisterFactories
  isExternal: false
  name: RegisterFactories
  nameWithType: InProcessCommandBusModule<TAuthenticationToken>.RegisterFactories
  fullName: Cqrs.Ninject.Configuration.InProcessCommandBusModule<TAuthenticationToken>.RegisterFactories
  nameWithType.vb: InProcessCommandBusModule(Of TAuthenticationToken).RegisterFactories
  fullName.vb: Cqrs.Ninject.Configuration.InProcessCommandBusModule(Of TAuthenticationToken).RegisterFactories
- uid: Cqrs.Ninject.Configuration.InProcessCommandBusModule`1.RegisterServices*
  commentId: Overload:Cqrs.Ninject.Configuration.InProcessCommandBusModule`1.RegisterServices
  isExternal: false
  name: RegisterServices
  nameWithType: InProcessCommandBusModule<TAuthenticationToken>.RegisterServices
  fullName: Cqrs.Ninject.Configuration.InProcessCommandBusModule<TAuthenticationToken>.RegisterServices
  nameWithType.vb: InProcessCommandBusModule(Of TAuthenticationToken).RegisterServices
  fullName.vb: Cqrs.Ninject.Configuration.InProcessCommandBusModule(Of TAuthenticationToken).RegisterServices
- uid: Cqrs.Commands.IPublishAndWaitCommandPublisher`1
  commentId: T:Cqrs.Commands.IPublishAndWaitCommandPublisher`1
  isExternal: false
  name: IPublishAndWaitCommandPublisher<TAuthenticationToken>
  nameWithType: IPublishAndWaitCommandPublisher<TAuthenticationToken>
  fullName: Cqrs.Commands.IPublishAndWaitCommandPublisher<TAuthenticationToken>
  nameWithType.vb: IPublishAndWaitCommandPublisher(Of TAuthenticationToken)
  fullName.vb: Cqrs.Commands.IPublishAndWaitCommandPublisher(Of TAuthenticationToken)
  name.vb: IPublishAndWaitCommandPublisher(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Commands.IPublishAndWaitCommandPublisher`1
    name: IPublishAndWaitCommandPublisher
    nameWithType: IPublishAndWaitCommandPublisher
    fullName: Cqrs.Commands.IPublishAndWaitCommandPublisher
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Commands.IPublishAndWaitCommandPublisher`1
    name: IPublishAndWaitCommandPublisher
    nameWithType: IPublishAndWaitCommandPublisher
    fullName: Cqrs.Commands.IPublishAndWaitCommandPublisher
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Commands.ICommandReceiver`1
  commentId: T:Cqrs.Commands.ICommandReceiver`1
  isExternal: false
  name: ICommandReceiver<TAuthenticationToken>
  nameWithType: ICommandReceiver<TAuthenticationToken>
  fullName: Cqrs.Commands.ICommandReceiver<TAuthenticationToken>
  nameWithType.vb: ICommandReceiver(Of TAuthenticationToken)
  fullName.vb: Cqrs.Commands.ICommandReceiver(Of TAuthenticationToken)
  name.vb: ICommandReceiver(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Commands.ICommandReceiver`1
    name: ICommandReceiver
    nameWithType: ICommandReceiver
    fullName: Cqrs.Commands.ICommandReceiver
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Commands.ICommandReceiver`1
    name: ICommandReceiver
    nameWithType: ICommandReceiver
    fullName: Cqrs.Commands.ICommandReceiver
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Bus.ICommandHandlerRegistrar
  commentId: T:Cqrs.Bus.ICommandHandlerRegistrar
  parent: Cqrs.Bus
  isExternal: false
  name: ICommandHandlerRegistrar
  nameWithType: ICommandHandlerRegistrar
  fullName: Cqrs.Bus.ICommandHandlerRegistrar
- uid: Cqrs.Commands.ICommandSender`1
  commentId: T:Cqrs.Commands.ICommandSender`1
  isExternal: false
  name: ICommandSender<TAuthenticationToken>
  nameWithType: ICommandSender<TAuthenticationToken>
  fullName: Cqrs.Commands.ICommandSender<TAuthenticationToken>
  nameWithType.vb: ICommandSender(Of TAuthenticationToken)
  fullName.vb: Cqrs.Commands.ICommandSender(Of TAuthenticationToken)
  name.vb: ICommandSender(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Commands.ICommandSender`1
    name: ICommandSender
    nameWithType: ICommandSender
    fullName: Cqrs.Commands.ICommandSender
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Commands.ICommandSender`1
    name: ICommandSender
    nameWithType: ICommandSender
    fullName: Cqrs.Commands.ICommandSender
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Ninject.Configuration.InProcessCommandBusModule`1.RegisterCqrsRequirements*
  commentId: Overload:Cqrs.Ninject.Configuration.InProcessCommandBusModule`1.RegisterCqrsRequirements
  isExternal: false
  name: RegisterCqrsRequirements
  nameWithType: InProcessCommandBusModule<TAuthenticationToken>.RegisterCqrsRequirements
  fullName: Cqrs.Ninject.Configuration.InProcessCommandBusModule<TAuthenticationToken>.RegisterCqrsRequirements
  nameWithType.vb: InProcessCommandBusModule(Of TAuthenticationToken).RegisterCqrsRequirements
  fullName.vb: Cqrs.Ninject.Configuration.InProcessCommandBusModule(Of TAuthenticationToken).RegisterCqrsRequirements
- uid: Cqrs.Bus
  commentId: N:Cqrs.Bus
  isExternal: false
  name: Cqrs.Bus
  nameWithType: Cqrs.Bus
  fullName: Cqrs.Bus
