<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="interfaceCqrs_1_1Commands_1_1IPublishAndWaitCommandPublisher" kind="interface" language="C#" prot="public">
    <compoundname>Cqrs::Commands::IPublishAndWaitCommandPublisher</compoundname>
    <basecompoundref refid="interfaceCqrs_1_1Commands_1_1ICommandPublisher" prot="public" virt="non-virtual">Cqrs::Commands::ICommandPublisher&lt; TAuthenticationToken &gt;</basecompoundref>
    <derivedcompoundref refid="interfaceCqrs_1_1Akka_1_1Commands_1_1IAkkaCommandPublisher" prot="public" virt="non-virtual">Cqrs.Akka.Commands.IAkkaCommandPublisher&lt; TAuthenticationToken &gt;</derivedcompoundref>
    <derivedcompoundref refid="classCqrs_1_1Azure_1_1ServiceBus_1_1AzureCommandBusPublisher" prot="public" virt="non-virtual">Cqrs.Azure.ServiceBus.AzureCommandBusPublisher&lt; TAuthenticationToken &gt;</derivedcompoundref>
    <derivedcompoundref refid="classCqrs_1_1Azure_1_1ServiceBus_1_1AzureCommandBusPublisher" prot="public" virt="non-virtual">Cqrs.Azure.ServiceBus.AzureCommandBusPublisher&lt; TAuthenticationToken &gt;</derivedcompoundref>
    <derivedcompoundref refid="classCqrs_1_1Bus_1_1InProcessBus" prot="public" virt="non-virtual">Cqrs.Bus.InProcessBus&lt; TAuthenticationToken &gt;</derivedcompoundref>
    <templateparamlist>
      <param>
        <type>TAuthenticationToken</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="interfaceCqrs_1_1Commands_1_1IPublishAndWaitCommandPublisher_a19ffb318c830e9f05d4adae985232f30_1a19ffb318c830e9f05d4adae985232f30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TEvent</type>
        <definition>TEvent Cqrs.Commands.IPublishAndWaitCommandPublisher&lt; TAuthenticationToken &gt;.PublishAndWait&lt; TCommand, TEvent &gt;</definition>
        <argsstring>(TCommand command, IEventReceiver&lt; TAuthenticationToken &gt; eventReceiver=null)</argsstring>
        <name>PublishAndWait&lt; TCommand, TEvent &gt;</name>
        <reimplementedby refid="classCqrs_1_1Azure_1_1ServiceBus_1_1AzureCommandBusPublisher_ab63045bffba3925270d0087e6fa4366f_1ab63045bffba3925270d0087e6fa4366f">PublishAndWait&lt; TCommand, TEvent &gt;</reimplementedby>
        <reimplementedby refid="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus_a8e1291f0259ac80e393c02bb119159a5_1a8e1291f0259ac80e393c02bb119159a5">PublishAndWait&lt; TCommand, TEvent &gt;</reimplementedby>
        <reimplementedby refid="classCqrs_1_1Azure_1_1ServiceBus_1_1AzureCommandBusPublisher_ab63045bffba3925270d0087e6fa4366f_1ab63045bffba3925270d0087e6fa4366f">PublishAndWait&lt; TCommand, TEvent &gt;</reimplementedby>
        <reimplementedby refid="classCqrs_1_1Bus_1_1InProcessBus_a38c0684e313f42bfb36b40703db94ccb_1a38c0684e313f42bfb36b40703db94ccb">PublishAndWait&lt; TCommand, TEvent &gt;</reimplementedby>
        <param>
          <type>TCommand</type>
          <declname>command</declname>
        </param>
        <param>
          <type><ref refid="interfaceCqrs_1_1Events_1_1IEventReceiver" kindref="compound">IEventReceiver</ref>&lt; TAuthenticationToken &gt;</type>
          <declname>eventReceiver</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
<para>Publishes the provided <emphasis>command</emphasis>  and waits for an event of <emphasis>TEvent</emphasis>  </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>command</parametername>
</parameternamelist>
<parameterdescription>
<para>The <emphasis>TCommand</emphasis>  to publish.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>eventReceiver</parametername>
</parameternamelist>
<parameterdescription>
<para>If provided, is the <ref refid="interfaceCqrs_1_1Events_1_1IEventReceiver" kindref="compound">IEventReceiver&lt;TAuthenticationToken&gt;</ref> that the event is expected to be returned on.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/a99f043f4d1af837/Framework/Cqrs/Commands/IPublishAndWaitCommandPublisher.cs" line="26" column="1"/>
      </memberdef>
      <memberdef kind="function" id="interfaceCqrs_1_1Commands_1_1IPublishAndWaitCommandPublisher_ad3761879cf9e09c9e89cabf8067b6de4_1ad3761879cf9e09c9e89cabf8067b6de4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TEvent</type>
        <definition>TEvent Cqrs.Commands.IPublishAndWaitCommandPublisher&lt; TAuthenticationToken &gt;.PublishAndWait&lt; TCommand, TEvent &gt;</definition>
        <argsstring>(TCommand command, int millisecondsTimeout, IEventReceiver&lt; TAuthenticationToken &gt; eventReceiver=null)</argsstring>
        <name>PublishAndWait&lt; TCommand, TEvent &gt;</name>
        <reimplementedby refid="classCqrs_1_1Azure_1_1ServiceBus_1_1AzureCommandBusPublisher_a0d60547c692b453310a9062bdfa6b247_1a0d60547c692b453310a9062bdfa6b247">PublishAndWait&lt; TCommand, TEvent &gt;</reimplementedby>
        <reimplementedby refid="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus_a7f820323e5293e476f4afee7c731f7a3_1a7f820323e5293e476f4afee7c731f7a3">PublishAndWait&lt; TCommand, TEvent &gt;</reimplementedby>
        <reimplementedby refid="classCqrs_1_1Azure_1_1ServiceBus_1_1AzureCommandBusPublisher_a0d60547c692b453310a9062bdfa6b247_1a0d60547c692b453310a9062bdfa6b247">PublishAndWait&lt; TCommand, TEvent &gt;</reimplementedby>
        <reimplementedby refid="classCqrs_1_1Bus_1_1InProcessBus_a977e49340f771248ddf485eeee650e04_1a977e49340f771248ddf485eeee650e04">PublishAndWait&lt; TCommand, TEvent &gt;</reimplementedby>
        <param>
          <type>TCommand</type>
          <declname>command</declname>
        </param>
        <param>
          <type>int</type>
          <declname>millisecondsTimeout</declname>
        </param>
        <param>
          <type><ref refid="interfaceCqrs_1_1Events_1_1IEventReceiver" kindref="compound">IEventReceiver</ref>&lt; TAuthenticationToken &gt;</type>
          <declname>eventReceiver</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
<para>Publishes the provided <emphasis>command</emphasis>  and waits for an event of <emphasis>TEvent</emphasis>  or exits if the specified timeout is expired. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>command</parametername>
</parameternamelist>
<parameterdescription>
<para>The <emphasis>TCommand</emphasis>  to publish.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>millisecondsTimeout</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of milliseconds to wait, or F:System.Threading.Timeout.Infinite (-1) to wait indefinitely.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>eventReceiver</parametername>
</parameternamelist>
<parameterdescription>
<para>If provided, is the <ref refid="interfaceCqrs_1_1Events_1_1IEventReceiver" kindref="compound">IEventReceiver&lt;TAuthenticationToken&gt;</ref> that the event is expected to be returned on.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/a99f043f4d1af837/Framework/Cqrs/Commands/IPublishAndWaitCommandPublisher.cs" line="35" column="1"/>
      </memberdef>
      <memberdef kind="function" id="interfaceCqrs_1_1Commands_1_1IPublishAndWaitCommandPublisher_a02ef39482cb50e6e15e06144adca1ed5_1a02ef39482cb50e6e15e06144adca1ed5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TEvent</type>
        <definition>TEvent Cqrs.Commands.IPublishAndWaitCommandPublisher&lt; TAuthenticationToken &gt;.PublishAndWait&lt; TCommand, TEvent &gt;</definition>
        <argsstring>(TCommand command, TimeSpan timeout, IEventReceiver&lt; TAuthenticationToken &gt; eventReceiver=null)</argsstring>
        <name>PublishAndWait&lt; TCommand, TEvent &gt;</name>
        <reimplementedby refid="classCqrs_1_1Azure_1_1ServiceBus_1_1AzureCommandBusPublisher_ad0fd6759a76dcbc2d527f15908cc09fc_1ad0fd6759a76dcbc2d527f15908cc09fc">PublishAndWait&lt; TCommand, TEvent &gt;</reimplementedby>
        <reimplementedby refid="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus_ad50bff025d51c3b00b17ccaec2a4cefc_1ad50bff025d51c3b00b17ccaec2a4cefc">PublishAndWait&lt; TCommand, TEvent &gt;</reimplementedby>
        <reimplementedby refid="classCqrs_1_1Azure_1_1ServiceBus_1_1AzureCommandBusPublisher_ad0fd6759a76dcbc2d527f15908cc09fc_1ad0fd6759a76dcbc2d527f15908cc09fc">PublishAndWait&lt; TCommand, TEvent &gt;</reimplementedby>
        <reimplementedby refid="classCqrs_1_1Bus_1_1InProcessBus_a4178bdc4e17f28b0b89e11611693ab14_1a4178bdc4e17f28b0b89e11611693ab14">PublishAndWait&lt; TCommand, TEvent &gt;</reimplementedby>
        <param>
          <type>TCommand</type>
          <declname>command</declname>
        </param>
        <param>
          <type>TimeSpan</type>
          <declname>timeout</declname>
        </param>
        <param>
          <type><ref refid="interfaceCqrs_1_1Events_1_1IEventReceiver" kindref="compound">IEventReceiver</ref>&lt; TAuthenticationToken &gt;</type>
          <declname>eventReceiver</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
<para>Publishes the provided <emphasis>command</emphasis>  and waits for an event of <emphasis>TEvent</emphasis>  or exits if the specified timeout is expired. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>command</parametername>
</parameternamelist>
<parameterdescription>
<para>The <emphasis>TCommand</emphasis>  to publish.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>A T:System.TimeSpan that represents the number of milliseconds to wait, or a TimeSpan that represents -1 milliseconds to wait indefinitely.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>eventReceiver</parametername>
</parameternamelist>
<parameterdescription>
<para>If provided, is the <ref refid="interfaceCqrs_1_1Events_1_1IEventReceiver" kindref="compound">IEventReceiver&lt;TAuthenticationToken&gt;</ref> that the event is expected to be returned on.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/a99f043f4d1af837/Framework/Cqrs/Commands/IPublishAndWaitCommandPublisher.cs" line="44" column="1"/>
      </memberdef>
      <memberdef kind="function" id="interfaceCqrs_1_1Commands_1_1IPublishAndWaitCommandPublisher_a83e4480bf8cd6015254d700056cf1647_1a83e4480bf8cd6015254d700056cf1647" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TEvent</type>
        <definition>TEvent Cqrs.Commands.IPublishAndWaitCommandPublisher&lt; TAuthenticationToken &gt;.PublishAndWait&lt; TCommand, TEvent &gt;</definition>
        <argsstring>(TCommand command, Func&lt; IEnumerable&lt; IEvent&lt; TAuthenticationToken &gt;&gt;, TEvent &gt; condition, IEventReceiver&lt; TAuthenticationToken &gt; eventReceiver=null)</argsstring>
        <name>PublishAndWait&lt; TCommand, TEvent &gt;</name>
        <reimplementedby refid="classCqrs_1_1Azure_1_1ServiceBus_1_1AzureCommandBusPublisher_add51ed3284350c68f01212aa689e106f_1add51ed3284350c68f01212aa689e106f">PublishAndWait&lt; TCommand, TEvent &gt;</reimplementedby>
        <reimplementedby refid="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus_ad318bfb71c5a8f5e13994edce9bad99e_1ad318bfb71c5a8f5e13994edce9bad99e">PublishAndWait&lt; TCommand, TEvent &gt;</reimplementedby>
        <reimplementedby refid="classCqrs_1_1Azure_1_1ServiceBus_1_1AzureCommandBusPublisher_add51ed3284350c68f01212aa689e106f_1add51ed3284350c68f01212aa689e106f">PublishAndWait&lt; TCommand, TEvent &gt;</reimplementedby>
        <reimplementedby refid="classCqrs_1_1Bus_1_1InProcessBus_aad4ec1abb47389db59034e5d7d1aa322_1aad4ec1abb47389db59034e5d7d1aa322">PublishAndWait&lt; TCommand, TEvent &gt;</reimplementedby>
        <param>
          <type>TCommand</type>
          <declname>command</declname>
        </param>
        <param>
          <type>Func&lt; IEnumerable&lt; <ref refid="interfaceCqrs_1_1Events_1_1IEvent" kindref="compound">IEvent</ref>&lt; TAuthenticationToken &gt;&gt;, TEvent &gt;</type>
          <declname>condition</declname>
        </param>
        <param>
          <type><ref refid="interfaceCqrs_1_1Events_1_1IEventReceiver" kindref="compound">IEventReceiver</ref>&lt; TAuthenticationToken &gt;</type>
          <declname>eventReceiver</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
<para>Publishes the provided <emphasis>command</emphasis>  and waits until the specified condition is satisfied an event of <emphasis>TEvent</emphasis>  </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>command</parametername>
</parameternamelist>
<parameterdescription>
<para>The <emphasis>TCommand</emphasis>  to publish.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>condition</parametername>
</parameternamelist>
<parameterdescription>
<para>A delegate to be executed over and over until it returns the <emphasis>TEvent</emphasis>  that is desired, return null to keep trying.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>eventReceiver</parametername>
</parameternamelist>
<parameterdescription>
<para>If provided, is the <ref refid="interfaceCqrs_1_1Events_1_1IEventReceiver" kindref="compound">IEventReceiver&lt;TAuthenticationToken&gt;</ref> that the event is expected to be returned on.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/a99f043f4d1af837/Framework/Cqrs/Commands/IPublishAndWaitCommandPublisher.cs" line="53" column="1"/>
      </memberdef>
      <memberdef kind="function" id="interfaceCqrs_1_1Commands_1_1IPublishAndWaitCommandPublisher_a4b6636f2dba029321c62a78c473590be_1a4b6636f2dba029321c62a78c473590be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TEvent</type>
        <definition>TEvent Cqrs.Commands.IPublishAndWaitCommandPublisher&lt; TAuthenticationToken &gt;.PublishAndWait&lt; TCommand, TEvent &gt;</definition>
        <argsstring>(TCommand command, Func&lt; IEnumerable&lt; IEvent&lt; TAuthenticationToken &gt;&gt;, TEvent &gt; condition, int millisecondsTimeout, IEventReceiver&lt; TAuthenticationToken &gt; eventReceiver=null)</argsstring>
        <name>PublishAndWait&lt; TCommand, TEvent &gt;</name>
        <reimplementedby refid="classCqrs_1_1Azure_1_1ServiceBus_1_1AzureCommandBusPublisher_aa955c973b4322065b65f85e6bc7835f5_1aa955c973b4322065b65f85e6bc7835f5">PublishAndWait&lt; TCommand, TEvent &gt;</reimplementedby>
        <reimplementedby refid="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus_a7f2d13075a72575e97857a3b3a1170d4_1a7f2d13075a72575e97857a3b3a1170d4">PublishAndWait&lt; TCommand, TEvent &gt;</reimplementedby>
        <reimplementedby refid="classCqrs_1_1Azure_1_1ServiceBus_1_1AzureCommandBusPublisher_aa955c973b4322065b65f85e6bc7835f5_1aa955c973b4322065b65f85e6bc7835f5">PublishAndWait&lt; TCommand, TEvent &gt;</reimplementedby>
        <reimplementedby refid="classCqrs_1_1Bus_1_1InProcessBus_addd5bfd0feddfad326e63a548e7eb679_1addd5bfd0feddfad326e63a548e7eb679">PublishAndWait&lt; TCommand, TEvent &gt;</reimplementedby>
        <param>
          <type>TCommand</type>
          <declname>command</declname>
        </param>
        <param>
          <type>Func&lt; IEnumerable&lt; <ref refid="interfaceCqrs_1_1Events_1_1IEvent" kindref="compound">IEvent</ref>&lt; TAuthenticationToken &gt;&gt;, TEvent &gt;</type>
          <declname>condition</declname>
        </param>
        <param>
          <type>int</type>
          <declname>millisecondsTimeout</declname>
        </param>
        <param>
          <type><ref refid="interfaceCqrs_1_1Events_1_1IEventReceiver" kindref="compound">IEventReceiver</ref>&lt; TAuthenticationToken &gt;</type>
          <declname>eventReceiver</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
<para>Publishes the provided <emphasis>command</emphasis>  and waits for an event of <emphasis>TEvent</emphasis>  or exits if the specified timeout is expired. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>command</parametername>
</parameternamelist>
<parameterdescription>
<para>The <emphasis>TCommand</emphasis>  to publish.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>condition</parametername>
</parameternamelist>
<parameterdescription>
<para>A delegate to be executed over and over until it returns the <emphasis>TEvent</emphasis>  that is desired, return null to keep trying.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>millisecondsTimeout</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of milliseconds to wait, or F:System.Threading.Timeout.Infinite (-1) to wait indefinitely.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>eventReceiver</parametername>
</parameternamelist>
<parameterdescription>
<para>If provided, is the <ref refid="interfaceCqrs_1_1Events_1_1IEventReceiver" kindref="compound">IEventReceiver&lt;TAuthenticationToken&gt;</ref> that the event is expected to be returned on.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/a99f043f4d1af837/Framework/Cqrs/Commands/IPublishAndWaitCommandPublisher.cs" line="63" column="1"/>
      </memberdef>
      <memberdef kind="function" id="interfaceCqrs_1_1Commands_1_1IPublishAndWaitCommandPublisher_a0460fc2091d52ba3463973fea5028bc6_1a0460fc2091d52ba3463973fea5028bc6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TEvent</type>
        <definition>TEvent Cqrs.Commands.IPublishAndWaitCommandPublisher&lt; TAuthenticationToken &gt;.PublishAndWait&lt; TCommand, TEvent &gt;</definition>
        <argsstring>(TCommand command, Func&lt; IEnumerable&lt; IEvent&lt; TAuthenticationToken &gt;&gt;, TEvent &gt; condition, TimeSpan timeout, IEventReceiver&lt; TAuthenticationToken &gt; eventReceiver=null)</argsstring>
        <name>PublishAndWait&lt; TCommand, TEvent &gt;</name>
        <reimplementedby refid="classCqrs_1_1Azure_1_1ServiceBus_1_1AzureCommandBusPublisher_ad4412ea4e633094feff8cc1ad9c55e9a_1ad4412ea4e633094feff8cc1ad9c55e9a">PublishAndWait&lt; TCommand, TEvent &gt;</reimplementedby>
        <reimplementedby refid="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus_a1966669d8cf5d5a68be99fbb5e8af1f7_1a1966669d8cf5d5a68be99fbb5e8af1f7">PublishAndWait&lt; TCommand, TEvent &gt;</reimplementedby>
        <reimplementedby refid="classCqrs_1_1Azure_1_1ServiceBus_1_1AzureCommandBusPublisher_ad4412ea4e633094feff8cc1ad9c55e9a_1ad4412ea4e633094feff8cc1ad9c55e9a">PublishAndWait&lt; TCommand, TEvent &gt;</reimplementedby>
        <reimplementedby refid="classCqrs_1_1Bus_1_1InProcessBus_ae818b3610165e0036bca718f97349641_1ae818b3610165e0036bca718f97349641">PublishAndWait&lt; TCommand, TEvent &gt;</reimplementedby>
        <param>
          <type>TCommand</type>
          <declname>command</declname>
        </param>
        <param>
          <type>Func&lt; IEnumerable&lt; <ref refid="interfaceCqrs_1_1Events_1_1IEvent" kindref="compound">IEvent</ref>&lt; TAuthenticationToken &gt;&gt;, TEvent &gt;</type>
          <declname>condition</declname>
        </param>
        <param>
          <type>TimeSpan</type>
          <declname>timeout</declname>
        </param>
        <param>
          <type><ref refid="interfaceCqrs_1_1Events_1_1IEventReceiver" kindref="compound">IEventReceiver</ref>&lt; TAuthenticationToken &gt;</type>
          <declname>eventReceiver</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
<para>Publishes the provided <emphasis>command</emphasis>  and waits for an event of <emphasis>TEvent</emphasis>  or exits if the specified timeout is expired. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>command</parametername>
</parameternamelist>
<parameterdescription>
<para>The <emphasis>TCommand</emphasis>  to publish.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>condition</parametername>
</parameternamelist>
<parameterdescription>
<para>A delegate to be executed over and over until it returns the <emphasis>TEvent</emphasis>  that is desired, return null to keep trying.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>A T:System.TimeSpan that represents the number of milliseconds to wait, or a TimeSpan that represents -1 milliseconds to wait indefinitely.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>eventReceiver</parametername>
</parameternamelist>
<parameterdescription>
<para>If provided, is the <ref refid="interfaceCqrs_1_1Events_1_1IEventReceiver" kindref="compound">IEventReceiver&lt;TAuthenticationToken&gt;</ref> that the event is expected to be returned on.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/a99f043f4d1af837/Framework/Cqrs/Commands/IPublishAndWaitCommandPublisher.cs" line="73" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Publishes an ICommand&lt;TAuthenticationToken&gt; </para>    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>TAuthenticationToken</parametername>
</parameternamelist>
<parameterdescription>
<para>The Type of the authentication token.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="1118">
        <label>Cqrs::Bus::InProcessBus&lt; TAuthenticationToken &gt;</label>
        <link refid="classCqrs_1_1Bus_1_1InProcessBus"/>
        <childnode refid="1112" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1112">
        <label>Cqrs.Commands.IPublishAndWaitCommandPublisher&lt; TAuthenticationToken &gt;</label>
        <link refid="interfaceCqrs_1_1Commands_1_1IPublishAndWaitCommandPublisher"/>
        <childnode refid="1113" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1116">
        <label>Cqrs::Akka::Commands::IConcurrentAkkaCommandPublisher&lt; TAuthenticationToken &gt;</label>
        <link refid="interfaceCqrs_1_1Akka_1_1Commands_1_1IConcurrentAkkaCommandPublisher"/>
        <childnode refid="1114" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1117">
        <label>Cqrs::Azure::ServiceBus::AzureCommandBusPublisher&lt; TAuthenticationToken &gt;</label>
        <link refid="classCqrs_1_1Azure_1_1ServiceBus_1_1AzureCommandBusPublisher"/>
        <childnode refid="1112" relation="public-inheritance">
        </childnode>
        <childnode refid="1112" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1114">
        <label>Cqrs::Akka::Commands::IAkkaCommandPublisher&lt; TAuthenticationToken &gt;</label>
        <link refid="interfaceCqrs_1_1Akka_1_1Commands_1_1IAkkaCommandPublisher"/>
        <childnode refid="1112" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1113">
        <label>ICommandPublisher&lt; TAuthenticationToken &gt;</label>
        <link refid="interfaceCqrs_1_1Commands_1_1ICommandPublisher"/>
      </node>
      <node id="1115">
        <label>Cqrs::Akka::Commands::AkkaCommandBus&lt; TAuthenticationToken &gt;</label>
        <link refid="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus"/>
        <childnode refid="1114" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1119">
        <label>Cqrs.Commands.IPublishAndWaitCommandPublisher&lt; TAuthenticationToken &gt;</label>
        <link refid="interfaceCqrs_1_1Commands_1_1IPublishAndWaitCommandPublisher"/>
        <childnode refid="1120" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1120">
        <label>ICommandPublisher&lt; TAuthenticationToken &gt;</label>
        <link refid="interfaceCqrs_1_1Commands_1_1ICommandPublisher"/>
      </node>
    </collaborationgraph>
    <location file="/opt/buildAgent/work/a99f043f4d1af837/Framework/Cqrs/Commands/IPublishAndWaitCommandPublisher.cs" line="20" column="1" bodyfile="/opt/buildAgent/work/a99f043f4d1af837/Framework/Cqrs/Commands/IPublishAndWaitCommandPublisher.cs" bodystart="19" bodyend="75"/>
    <listofallmembers>
      <member refid="interfaceCqrs_1_1Commands_1_1ICommandPublisher_aeeb487ad5686d9c44d214b1daaf7833a_1aeeb487ad5686d9c44d214b1daaf7833a" prot="public" virt="non-virtual"><scope>Cqrs::Commands::IPublishAndWaitCommandPublisher</scope><name>Publish&lt; TCommand &gt;</name></member>
      <member refid="interfaceCqrs_1_1Commands_1_1ICommandPublisher_af0f033c0b949e5650032e4f00b11b595_1af0f033c0b949e5650032e4f00b11b595" prot="public" virt="non-virtual"><scope>Cqrs::Commands::IPublishAndWaitCommandPublisher</scope><name>Publish&lt; TCommand &gt;</name></member>
      <member refid="interfaceCqrs_1_1Commands_1_1IPublishAndWaitCommandPublisher_a19ffb318c830e9f05d4adae985232f30_1a19ffb318c830e9f05d4adae985232f30" prot="public" virt="non-virtual"><scope>Cqrs::Commands::IPublishAndWaitCommandPublisher</scope><name>PublishAndWait&lt; TCommand, TEvent &gt;</name></member>
      <member refid="interfaceCqrs_1_1Commands_1_1IPublishAndWaitCommandPublisher_ad3761879cf9e09c9e89cabf8067b6de4_1ad3761879cf9e09c9e89cabf8067b6de4" prot="public" virt="non-virtual"><scope>Cqrs::Commands::IPublishAndWaitCommandPublisher</scope><name>PublishAndWait&lt; TCommand, TEvent &gt;</name></member>
      <member refid="interfaceCqrs_1_1Commands_1_1IPublishAndWaitCommandPublisher_a02ef39482cb50e6e15e06144adca1ed5_1a02ef39482cb50e6e15e06144adca1ed5" prot="public" virt="non-virtual"><scope>Cqrs::Commands::IPublishAndWaitCommandPublisher</scope><name>PublishAndWait&lt; TCommand, TEvent &gt;</name></member>
      <member refid="interfaceCqrs_1_1Commands_1_1IPublishAndWaitCommandPublisher_a83e4480bf8cd6015254d700056cf1647_1a83e4480bf8cd6015254d700056cf1647" prot="public" virt="non-virtual"><scope>Cqrs::Commands::IPublishAndWaitCommandPublisher</scope><name>PublishAndWait&lt; TCommand, TEvent &gt;</name></member>
      <member refid="interfaceCqrs_1_1Commands_1_1IPublishAndWaitCommandPublisher_a4b6636f2dba029321c62a78c473590be_1a4b6636f2dba029321c62a78c473590be" prot="public" virt="non-virtual"><scope>Cqrs::Commands::IPublishAndWaitCommandPublisher</scope><name>PublishAndWait&lt; TCommand, TEvent &gt;</name></member>
      <member refid="interfaceCqrs_1_1Commands_1_1IPublishAndWaitCommandPublisher_a0460fc2091d52ba3463973fea5028bc6_1a0460fc2091d52ba3463973fea5028bc6" prot="public" virt="non-virtual"><scope>Cqrs::Commands::IPublishAndWaitCommandPublisher</scope><name>PublishAndWait&lt; TCommand, TEvent &gt;</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
