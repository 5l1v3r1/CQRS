### YamlMime:ManagedReference
items:
- uid: Cqrs.Akka.Configuration.AkkaBusRegistrar`1
  commentId: T:Cqrs.Akka.Configuration.AkkaBusRegistrar`1
  id: AkkaBusRegistrar`1
  parent: Cqrs.Akka.Configuration
  children:
  - Cqrs.Akka.Configuration.AkkaBusRegistrar`1.#ctor(Cqrs.Configuration.IDependencyResolver,Cqrs.Akka.Configuration.IHandlerResolver)
  - Cqrs.Akka.Configuration.AkkaBusRegistrar`1.BuildDelegateAction(System.Type,System.Func{System.Type,System.Collections.Generic.IEnumerable{System.Type}})
  - Cqrs.Akka.Configuration.AkkaBusRegistrar`1.HandlerResolver
  - Cqrs.Akka.Configuration.AkkaBusRegistrar`1.InvokeHandlerDelegate(System.Reflection.MethodInfo,System.Boolean,Cqrs.Configuration.HandlerDelegate)
  langs:
  - csharp
  - vb
  name: AkkaBusRegistrar<TAuthenticationToken>
  nameWithType: AkkaBusRegistrar<TAuthenticationToken>
  fullName: Cqrs.Akka.Configuration.AkkaBusRegistrar<TAuthenticationToken>
  type: Class
  source:
    remote:
      path: Framework/Akka.Net/Cqrs.Akka/Configuration/AkkaBusRegistrar.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: AkkaBusRegistrar
    path: Framework/Akka.Net/Cqrs.Akka/Configuration/AkkaBusRegistrar.cs
    startLine: 25
  assemblies:
  - Cqrs.Akka
  namespace: Cqrs.Akka.Configuration
  summary: "\nTriggers the <xref href=\"Cqrs.Configuration.BusRegistrar\" data-throw-if-not-resolved=\"false\"></xref> instantiates instances of <xref href=\"Cqrs.Events.IEventHandler%602\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"Cqrs.Commands.ICommandHandler%602\" data-throw-if-not-resolved=\"false\"></xref> classes that inherit the akka.net <xref href=\"Akka.Actor.ReceiveActor\" data-throw-if-not-resolved=\"false\"></xref> via the <xref href=\"Cqrs.Configuration.IDependencyResolver\" data-throw-if-not-resolved=\"false\"></xref> so their message registration kicks in.\n"
  example: []
  syntax:
    content: 'public class AkkaBusRegistrar<TAuthenticationToken> : BusRegistrar'
    typeParameters:
    - id: TAuthenticationToken
    content.vb: >-
      Public Class AkkaBusRegistrar(Of TAuthenticationToken)
          Inherits BusRegistrar
  inheritance:
  - System.Object
  - Cqrs.Configuration.BusRegistrar
  inheritedMembers:
  - Cqrs.Configuration.BusRegistrar.DependencyResolver
  - Cqrs.Configuration.BusRegistrar.GetEventHandlerRegistrar
  - Cqrs.Configuration.BusRegistrar.GetCommandHandlerRegistrar
  - Cqrs.Configuration.BusRegistrar.Register(System.Type[])
  - Cqrs.Configuration.BusRegistrar.Register(System.Boolean,System.Func{System.Type,System.Collections.Generic.IEnumerable{System.Type}},System.Boolean,System.Type[])
  - Cqrs.Configuration.BusRegistrar.InvokeHandler(System.Type,System.Boolean,System.Func{System.Type,System.Collections.Generic.IEnumerable{System.Type}},System.Type)
  - Cqrs.Configuration.BusRegistrar.BuildExecutorMethod(System.Reflection.MethodInfo,System.Type,System.Type)
  - Cqrs.Configuration.BusRegistrar.ResolveEventHandlerInterface(System.Type)
  - Cqrs.Configuration.BusRegistrar.ResolveCommandHandlerInterface(System.Type)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: AkkaBusRegistrar(Of TAuthenticationToken)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Cqrs.Akka.Configuration.AkkaBusRegistrar(Of TAuthenticationToken)
  name.vb: AkkaBusRegistrar(Of TAuthenticationToken)
- uid: Cqrs.Akka.Configuration.AkkaBusRegistrar`1.HandlerResolver
  commentId: P:Cqrs.Akka.Configuration.AkkaBusRegistrar`1.HandlerResolver
  id: HandlerResolver
  parent: Cqrs.Akka.Configuration.AkkaBusRegistrar`1
  langs:
  - csharp
  - vb
  name: HandlerResolver
  nameWithType: AkkaBusRegistrar<TAuthenticationToken>.HandlerResolver
  fullName: Cqrs.Akka.Configuration.AkkaBusRegistrar<TAuthenticationToken>.HandlerResolver
  type: Property
  source:
    remote:
      path: Framework/Akka.Net/Cqrs.Akka/Configuration/AkkaBusRegistrar.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: HandlerResolver
    path: Framework/Akka.Net/Cqrs.Akka/Configuration/AkkaBusRegistrar.cs
    startLine: 27
  assemblies:
  - Cqrs.Akka
  namespace: Cqrs.Akka.Configuration
  syntax:
    content: protected IHandlerResolver HandlerResolver { get; }
    parameters: []
    return:
      type: Cqrs.Akka.Configuration.IHandlerResolver
    content.vb: Protected ReadOnly Property HandlerResolver As IHandlerResolver
  overload: Cqrs.Akka.Configuration.AkkaBusRegistrar`1.HandlerResolver*
  nameWithType.vb: AkkaBusRegistrar(Of TAuthenticationToken).HandlerResolver
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: Cqrs.Akka.Configuration.AkkaBusRegistrar(Of TAuthenticationToken).HandlerResolver
- uid: Cqrs.Akka.Configuration.AkkaBusRegistrar`1.#ctor(Cqrs.Configuration.IDependencyResolver,Cqrs.Akka.Configuration.IHandlerResolver)
  commentId: M:Cqrs.Akka.Configuration.AkkaBusRegistrar`1.#ctor(Cqrs.Configuration.IDependencyResolver,Cqrs.Akka.Configuration.IHandlerResolver)
  id: '#ctor(Cqrs.Configuration.IDependencyResolver,Cqrs.Akka.Configuration.IHandlerResolver)'
  parent: Cqrs.Akka.Configuration.AkkaBusRegistrar`1
  langs:
  - csharp
  - vb
  name: AkkaBusRegistrar(IDependencyResolver, IHandlerResolver)
  nameWithType: AkkaBusRegistrar<TAuthenticationToken>.AkkaBusRegistrar(IDependencyResolver, IHandlerResolver)
  fullName: Cqrs.Akka.Configuration.AkkaBusRegistrar<TAuthenticationToken>.AkkaBusRegistrar(Cqrs.Configuration.IDependencyResolver, Cqrs.Akka.Configuration.IHandlerResolver)
  type: Constructor
  source:
    remote:
      path: Framework/Akka.Net/Cqrs.Akka/Configuration/AkkaBusRegistrar.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: .ctor
    path: Framework/Akka.Net/Cqrs.Akka/Configuration/AkkaBusRegistrar.cs
    startLine: 29
  assemblies:
  - Cqrs.Akka
  namespace: Cqrs.Akka.Configuration
  syntax:
    content: public AkkaBusRegistrar(IDependencyResolver dependencyResolver, IHandlerResolver handlerResolver)
    parameters:
    - id: dependencyResolver
      type: Cqrs.Configuration.IDependencyResolver
    - id: handlerResolver
      type: Cqrs.Akka.Configuration.IHandlerResolver
    content.vb: Public Sub New(dependencyResolver As IDependencyResolver, handlerResolver As IHandlerResolver)
  overload: Cqrs.Akka.Configuration.AkkaBusRegistrar`1.#ctor*
  nameWithType.vb: AkkaBusRegistrar(Of TAuthenticationToken).AkkaBusRegistrar(IDependencyResolver, IHandlerResolver)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Cqrs.Akka.Configuration.AkkaBusRegistrar(Of TAuthenticationToken).AkkaBusRegistrar(Cqrs.Configuration.IDependencyResolver, Cqrs.Akka.Configuration.IHandlerResolver)
- uid: Cqrs.Akka.Configuration.AkkaBusRegistrar`1.BuildDelegateAction(System.Type,System.Func{System.Type,System.Collections.Generic.IEnumerable{System.Type}})
  commentId: M:Cqrs.Akka.Configuration.AkkaBusRegistrar`1.BuildDelegateAction(System.Type,System.Func{System.Type,System.Collections.Generic.IEnumerable{System.Type}})
  id: BuildDelegateAction(System.Type,System.Func{System.Type,System.Collections.Generic.IEnumerable{System.Type}})
  parent: Cqrs.Akka.Configuration.AkkaBusRegistrar`1
  langs:
  - csharp
  - vb
  name: BuildDelegateAction(Type, Func<Type, IEnumerable<Type>>)
  nameWithType: AkkaBusRegistrar<TAuthenticationToken>.BuildDelegateAction(Type, Func<Type, IEnumerable<Type>>)
  fullName: Cqrs.Akka.Configuration.AkkaBusRegistrar<TAuthenticationToken>.BuildDelegateAction(System.Type, System.Func<System.Type, System.Collections.Generic.IEnumerable<System.Type>>)
  type: Method
  source:
    remote:
      path: Framework/Akka.Net/Cqrs.Akka/Configuration/AkkaBusRegistrar.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: BuildDelegateAction
    path: Framework/Akka.Net/Cqrs.Akka/Configuration/AkkaBusRegistrar.cs
    startLine: 37
  assemblies:
  - Cqrs.Akka
  namespace: Cqrs.Akka.Configuration
  syntax:
    content: protected override HandlerDelegate BuildDelegateAction(Type executorType, Func<Type, IEnumerable<Type>> resolveMessageHandlerInterface)
    parameters:
    - id: executorType
      type: System.Type
    - id: resolveMessageHandlerInterface
      type: System.Func{System.Type,System.Collections.Generic.IEnumerable{System.Type}}
    return:
      type: Cqrs.Configuration.HandlerDelegate
    content.vb: Protected Overrides Function BuildDelegateAction(executorType As Type, resolveMessageHandlerInterface As Func(Of Type, IEnumerable(Of Type))) As HandlerDelegate
  overridden: Cqrs.Configuration.BusRegistrar.BuildDelegateAction(System.Type,System.Func{System.Type,System.Collections.Generic.IEnumerable{System.Type}})
  overload: Cqrs.Akka.Configuration.AkkaBusRegistrar`1.BuildDelegateAction*
  nameWithType.vb: AkkaBusRegistrar(Of TAuthenticationToken).BuildDelegateAction(Type, Func(Of Type, IEnumerable(Of Type)))
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: Cqrs.Akka.Configuration.AkkaBusRegistrar(Of TAuthenticationToken).BuildDelegateAction(System.Type, System.Func(Of System.Type, System.Collections.Generic.IEnumerable(Of System.Type)))
  name.vb: BuildDelegateAction(Type, Func(Of Type, IEnumerable(Of Type)))
- uid: Cqrs.Akka.Configuration.AkkaBusRegistrar`1.InvokeHandlerDelegate(System.Reflection.MethodInfo,System.Boolean,Cqrs.Configuration.HandlerDelegate)
  commentId: M:Cqrs.Akka.Configuration.AkkaBusRegistrar`1.InvokeHandlerDelegate(System.Reflection.MethodInfo,System.Boolean,Cqrs.Configuration.HandlerDelegate)
  id: InvokeHandlerDelegate(System.Reflection.MethodInfo,System.Boolean,Cqrs.Configuration.HandlerDelegate)
  parent: Cqrs.Akka.Configuration.AkkaBusRegistrar`1
  langs:
  - csharp
  - vb
  name: InvokeHandlerDelegate(MethodInfo, Boolean, HandlerDelegate)
  nameWithType: AkkaBusRegistrar<TAuthenticationToken>.InvokeHandlerDelegate(MethodInfo, Boolean, HandlerDelegate)
  fullName: Cqrs.Akka.Configuration.AkkaBusRegistrar<TAuthenticationToken>.InvokeHandlerDelegate(System.Reflection.MethodInfo, System.Boolean, Cqrs.Configuration.HandlerDelegate)
  type: Method
  source:
    remote:
      path: Framework/Akka.Net/Cqrs.Akka/Configuration/AkkaBusRegistrar.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: InvokeHandlerDelegate
    path: Framework/Akka.Net/Cqrs.Akka/Configuration/AkkaBusRegistrar.cs
    startLine: 78
  assemblies:
  - Cqrs.Akka
  namespace: Cqrs.Akka.Configuration
  syntax:
    content: protected override void InvokeHandlerDelegate(MethodInfo registerExecutorMethod, bool trueForEventsFalseForCommands, HandlerDelegate handlerDelegate)
    parameters:
    - id: registerExecutorMethod
      type: System.Reflection.MethodInfo
    - id: trueForEventsFalseForCommands
      type: System.Boolean
    - id: handlerDelegate
      type: Cqrs.Configuration.HandlerDelegate
    content.vb: Protected Overrides Sub InvokeHandlerDelegate(registerExecutorMethod As MethodInfo, trueForEventsFalseForCommands As Boolean, handlerDelegate As HandlerDelegate)
  overridden: Cqrs.Configuration.BusRegistrar.InvokeHandlerDelegate(System.Reflection.MethodInfo,System.Boolean,Cqrs.Configuration.HandlerDelegate)
  overload: Cqrs.Akka.Configuration.AkkaBusRegistrar`1.InvokeHandlerDelegate*
  nameWithType.vb: AkkaBusRegistrar(Of TAuthenticationToken).InvokeHandlerDelegate(MethodInfo, Boolean, HandlerDelegate)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: Cqrs.Akka.Configuration.AkkaBusRegistrar(Of TAuthenticationToken).InvokeHandlerDelegate(System.Reflection.MethodInfo, System.Boolean, Cqrs.Configuration.HandlerDelegate)
references:
- uid: Cqrs.Configuration.BusRegistrar
  commentId: T:Cqrs.Configuration.BusRegistrar
  parent: Cqrs.Configuration
  isExternal: false
  name: BusRegistrar
  nameWithType: BusRegistrar
  fullName: Cqrs.Configuration.BusRegistrar
- uid: Cqrs.Events.IEventHandler`2
  commentId: T:Cqrs.Events.IEventHandler`2
  isExternal: false
  name: IEventHandler<TAuthenticationToken, TEvent>
  nameWithType: IEventHandler<TAuthenticationToken, TEvent>
  fullName: Cqrs.Events.IEventHandler<TAuthenticationToken, TEvent>
  nameWithType.vb: IEventHandler(Of TAuthenticationToken, TEvent)
  fullName.vb: Cqrs.Events.IEventHandler(Of TAuthenticationToken, TEvent)
  name.vb: IEventHandler(Of TAuthenticationToken, TEvent)
  spec.csharp:
  - uid: Cqrs.Events.IEventHandler`2
    name: IEventHandler
    nameWithType: IEventHandler
    fullName: Cqrs.Events.IEventHandler
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEvent
    nameWithType: TEvent
    fullName: TEvent
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Events.IEventHandler`2
    name: IEventHandler
    nameWithType: IEventHandler
    fullName: Cqrs.Events.IEventHandler
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEvent
    nameWithType: TEvent
    fullName: TEvent
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Commands.ICommandHandler`2
  commentId: T:Cqrs.Commands.ICommandHandler`2
  isExternal: false
  name: ICommandHandler<TAuthenticationToken, TCommand>
  nameWithType: ICommandHandler<TAuthenticationToken, TCommand>
  fullName: Cqrs.Commands.ICommandHandler<TAuthenticationToken, TCommand>
  nameWithType.vb: ICommandHandler(Of TAuthenticationToken, TCommand)
  fullName.vb: Cqrs.Commands.ICommandHandler(Of TAuthenticationToken, TCommand)
  name.vb: ICommandHandler(Of TAuthenticationToken, TCommand)
  spec.csharp:
  - uid: Cqrs.Commands.ICommandHandler`2
    name: ICommandHandler
    nameWithType: ICommandHandler
    fullName: Cqrs.Commands.ICommandHandler
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Commands.ICommandHandler`2
    name: ICommandHandler
    nameWithType: ICommandHandler
    fullName: Cqrs.Commands.ICommandHandler
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: )
    nameWithType: )
    fullName: )
- uid: Akka.Actor.ReceiveActor
  commentId: T:Akka.Actor.ReceiveActor
  parent: Akka.Actor
  isExternal: true
  name: ReceiveActor
  nameWithType: ReceiveActor
  fullName: Akka.Actor.ReceiveActor
- uid: Cqrs.Configuration.IDependencyResolver
  commentId: T:Cqrs.Configuration.IDependencyResolver
  parent: Cqrs.Configuration
  isExternal: false
  name: IDependencyResolver
  nameWithType: IDependencyResolver
  fullName: Cqrs.Configuration.IDependencyResolver
- uid: Cqrs.Akka.Configuration
  commentId: N:Cqrs.Akka.Configuration
  isExternal: false
  name: Cqrs.Akka.Configuration
  nameWithType: Cqrs.Akka.Configuration
  fullName: Cqrs.Akka.Configuration
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Cqrs.Configuration.BusRegistrar.DependencyResolver
  commentId: P:Cqrs.Configuration.BusRegistrar.DependencyResolver
  parent: Cqrs.Configuration.BusRegistrar
  isExternal: false
  name: DependencyResolver
  nameWithType: BusRegistrar.DependencyResolver
  fullName: Cqrs.Configuration.BusRegistrar.DependencyResolver
- uid: Cqrs.Configuration.BusRegistrar.GetEventHandlerRegistrar
  commentId: P:Cqrs.Configuration.BusRegistrar.GetEventHandlerRegistrar
  parent: Cqrs.Configuration.BusRegistrar
  isExternal: false
  name: GetEventHandlerRegistrar
  nameWithType: BusRegistrar.GetEventHandlerRegistrar
  fullName: Cqrs.Configuration.BusRegistrar.GetEventHandlerRegistrar
- uid: Cqrs.Configuration.BusRegistrar.GetCommandHandlerRegistrar
  commentId: P:Cqrs.Configuration.BusRegistrar.GetCommandHandlerRegistrar
  parent: Cqrs.Configuration.BusRegistrar
  isExternal: false
  name: GetCommandHandlerRegistrar
  nameWithType: BusRegistrar.GetCommandHandlerRegistrar
  fullName: Cqrs.Configuration.BusRegistrar.GetCommandHandlerRegistrar
- uid: Cqrs.Configuration.BusRegistrar.Register(System.Type[])
  commentId: M:Cqrs.Configuration.BusRegistrar.Register(System.Type[])
  parent: Cqrs.Configuration.BusRegistrar
  isExternal: true
  name: Register(Type[])
  nameWithType: BusRegistrar.Register(Type[])
  fullName: Cqrs.Configuration.BusRegistrar.Register(System.Type[])
  nameWithType.vb: BusRegistrar.Register(Type())
  fullName.vb: Cqrs.Configuration.BusRegistrar.Register(System.Type())
  name.vb: Register(Type())
  spec.csharp:
  - uid: Cqrs.Configuration.BusRegistrar.Register(System.Type[])
    name: Register
    nameWithType: BusRegistrar.Register
    fullName: Cqrs.Configuration.BusRegistrar.Register
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Configuration.BusRegistrar.Register(System.Type[])
    name: Register
    nameWithType: BusRegistrar.Register
    fullName: Cqrs.Configuration.BusRegistrar.Register
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Configuration.BusRegistrar.Register(System.Boolean,System.Func{System.Type,System.Collections.Generic.IEnumerable{System.Type}},System.Boolean,System.Type[])
  commentId: M:Cqrs.Configuration.BusRegistrar.Register(System.Boolean,System.Func{System.Type,System.Collections.Generic.IEnumerable{System.Type}},System.Boolean,System.Type[])
  parent: Cqrs.Configuration.BusRegistrar
  isExternal: true
  name: Register(Boolean, Func<Type, IEnumerable<Type>>, Boolean, Type[])
  nameWithType: BusRegistrar.Register(Boolean, Func<Type, IEnumerable<Type>>, Boolean, Type[])
  fullName: Cqrs.Configuration.BusRegistrar.Register(System.Boolean, System.Func<System.Type, System.Collections.Generic.IEnumerable<System.Type>>, System.Boolean, System.Type[])
  nameWithType.vb: BusRegistrar.Register(Boolean, Func(Of Type, IEnumerable(Of Type)), Boolean, Type())
  fullName.vb: Cqrs.Configuration.BusRegistrar.Register(System.Boolean, System.Func(Of System.Type, System.Collections.Generic.IEnumerable(Of System.Type)), System.Boolean, System.Type())
  name.vb: Register(Boolean, Func(Of Type, IEnumerable(Of Type)), Boolean, Type())
  spec.csharp:
  - uid: Cqrs.Configuration.BusRegistrar.Register(System.Boolean,System.Func{System.Type,System.Collections.Generic.IEnumerable{System.Type}},System.Boolean,System.Type[])
    name: Register
    nameWithType: BusRegistrar.Register
    fullName: Cqrs.Configuration.BusRegistrar.Register
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Configuration.BusRegistrar.Register(System.Boolean,System.Func{System.Type,System.Collections.Generic.IEnumerable{System.Type}},System.Boolean,System.Type[])
    name: Register
    nameWithType: BusRegistrar.Register
    fullName: Cqrs.Configuration.BusRegistrar.Register
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Configuration.BusRegistrar.InvokeHandler(System.Type,System.Boolean,System.Func{System.Type,System.Collections.Generic.IEnumerable{System.Type}},System.Type)
  commentId: M:Cqrs.Configuration.BusRegistrar.InvokeHandler(System.Type,System.Boolean,System.Func{System.Type,System.Collections.Generic.IEnumerable{System.Type}},System.Type)
  parent: Cqrs.Configuration.BusRegistrar
  isExternal: true
  name: InvokeHandler(Type, Boolean, Func<Type, IEnumerable<Type>>, Type)
  nameWithType: BusRegistrar.InvokeHandler(Type, Boolean, Func<Type, IEnumerable<Type>>, Type)
  fullName: Cqrs.Configuration.BusRegistrar.InvokeHandler(System.Type, System.Boolean, System.Func<System.Type, System.Collections.Generic.IEnumerable<System.Type>>, System.Type)
  nameWithType.vb: BusRegistrar.InvokeHandler(Type, Boolean, Func(Of Type, IEnumerable(Of Type)), Type)
  fullName.vb: Cqrs.Configuration.BusRegistrar.InvokeHandler(System.Type, System.Boolean, System.Func(Of System.Type, System.Collections.Generic.IEnumerable(Of System.Type)), System.Type)
  name.vb: InvokeHandler(Type, Boolean, Func(Of Type, IEnumerable(Of Type)), Type)
  spec.csharp:
  - uid: Cqrs.Configuration.BusRegistrar.InvokeHandler(System.Type,System.Boolean,System.Func{System.Type,System.Collections.Generic.IEnumerable{System.Type}},System.Type)
    name: InvokeHandler
    nameWithType: BusRegistrar.InvokeHandler
    fullName: Cqrs.Configuration.BusRegistrar.InvokeHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Configuration.BusRegistrar.InvokeHandler(System.Type,System.Boolean,System.Func{System.Type,System.Collections.Generic.IEnumerable{System.Type}},System.Type)
    name: InvokeHandler
    nameWithType: BusRegistrar.InvokeHandler
    fullName: Cqrs.Configuration.BusRegistrar.InvokeHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Configuration.BusRegistrar.BuildExecutorMethod(System.Reflection.MethodInfo,System.Type,System.Type)
  commentId: M:Cqrs.Configuration.BusRegistrar.BuildExecutorMethod(System.Reflection.MethodInfo,System.Type,System.Type)
  parent: Cqrs.Configuration.BusRegistrar
  isExternal: true
  name: BuildExecutorMethod(MethodInfo, Type, Type)
  nameWithType: BusRegistrar.BuildExecutorMethod(MethodInfo, Type, Type)
  fullName: Cqrs.Configuration.BusRegistrar.BuildExecutorMethod(System.Reflection.MethodInfo, System.Type, System.Type)
  spec.csharp:
  - uid: Cqrs.Configuration.BusRegistrar.BuildExecutorMethod(System.Reflection.MethodInfo,System.Type,System.Type)
    name: BuildExecutorMethod
    nameWithType: BusRegistrar.BuildExecutorMethod
    fullName: Cqrs.Configuration.BusRegistrar.BuildExecutorMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    nameWithType: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Configuration.BusRegistrar.BuildExecutorMethod(System.Reflection.MethodInfo,System.Type,System.Type)
    name: BuildExecutorMethod
    nameWithType: BusRegistrar.BuildExecutorMethod
    fullName: Cqrs.Configuration.BusRegistrar.BuildExecutorMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    nameWithType: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Configuration.BusRegistrar.ResolveEventHandlerInterface(System.Type)
  commentId: M:Cqrs.Configuration.BusRegistrar.ResolveEventHandlerInterface(System.Type)
  parent: Cqrs.Configuration.BusRegistrar
  isExternal: true
  name: ResolveEventHandlerInterface(Type)
  nameWithType: BusRegistrar.ResolveEventHandlerInterface(Type)
  fullName: Cqrs.Configuration.BusRegistrar.ResolveEventHandlerInterface(System.Type)
  spec.csharp:
  - uid: Cqrs.Configuration.BusRegistrar.ResolveEventHandlerInterface(System.Type)
    name: ResolveEventHandlerInterface
    nameWithType: BusRegistrar.ResolveEventHandlerInterface
    fullName: Cqrs.Configuration.BusRegistrar.ResolveEventHandlerInterface
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Configuration.BusRegistrar.ResolveEventHandlerInterface(System.Type)
    name: ResolveEventHandlerInterface
    nameWithType: BusRegistrar.ResolveEventHandlerInterface
    fullName: Cqrs.Configuration.BusRegistrar.ResolveEventHandlerInterface
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Configuration.BusRegistrar.ResolveCommandHandlerInterface(System.Type)
  commentId: M:Cqrs.Configuration.BusRegistrar.ResolveCommandHandlerInterface(System.Type)
  parent: Cqrs.Configuration.BusRegistrar
  isExternal: true
  name: ResolveCommandHandlerInterface(Type)
  nameWithType: BusRegistrar.ResolveCommandHandlerInterface(Type)
  fullName: Cqrs.Configuration.BusRegistrar.ResolveCommandHandlerInterface(System.Type)
  spec.csharp:
  - uid: Cqrs.Configuration.BusRegistrar.ResolveCommandHandlerInterface(System.Type)
    name: ResolveCommandHandlerInterface
    nameWithType: BusRegistrar.ResolveCommandHandlerInterface
    fullName: Cqrs.Configuration.BusRegistrar.ResolveCommandHandlerInterface
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Configuration.BusRegistrar.ResolveCommandHandlerInterface(System.Type)
    name: ResolveCommandHandlerInterface
    nameWithType: BusRegistrar.ResolveCommandHandlerInterface
    fullName: Cqrs.Configuration.BusRegistrar.ResolveCommandHandlerInterface
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Configuration
  commentId: N:Cqrs.Configuration
  isExternal: false
  name: Cqrs.Configuration
  nameWithType: Cqrs.Configuration
  fullName: Cqrs.Configuration
- uid: Akka.Actor
  commentId: N:Akka.Actor
  isExternal: false
  name: Akka.Actor
  nameWithType: Akka.Actor
  fullName: Akka.Actor
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Cqrs.Akka.Configuration.AkkaBusRegistrar`1.HandlerResolver*
  commentId: Overload:Cqrs.Akka.Configuration.AkkaBusRegistrar`1.HandlerResolver
  isExternal: false
  name: HandlerResolver
  nameWithType: AkkaBusRegistrar<TAuthenticationToken>.HandlerResolver
  fullName: Cqrs.Akka.Configuration.AkkaBusRegistrar<TAuthenticationToken>.HandlerResolver
  nameWithType.vb: AkkaBusRegistrar(Of TAuthenticationToken).HandlerResolver
  fullName.vb: Cqrs.Akka.Configuration.AkkaBusRegistrar(Of TAuthenticationToken).HandlerResolver
- uid: Cqrs.Akka.Configuration.IHandlerResolver
  commentId: T:Cqrs.Akka.Configuration.IHandlerResolver
  parent: Cqrs.Akka.Configuration
  isExternal: false
  name: IHandlerResolver
  nameWithType: IHandlerResolver
  fullName: Cqrs.Akka.Configuration.IHandlerResolver
- uid: Cqrs.Akka.Configuration.AkkaBusRegistrar`1.#ctor*
  commentId: Overload:Cqrs.Akka.Configuration.AkkaBusRegistrar`1.#ctor
  isExternal: false
  name: AkkaBusRegistrar
  nameWithType: AkkaBusRegistrar<TAuthenticationToken>.AkkaBusRegistrar
  fullName: Cqrs.Akka.Configuration.AkkaBusRegistrar<TAuthenticationToken>.AkkaBusRegistrar
  nameWithType.vb: AkkaBusRegistrar(Of TAuthenticationToken).AkkaBusRegistrar
  fullName.vb: Cqrs.Akka.Configuration.AkkaBusRegistrar(Of TAuthenticationToken).AkkaBusRegistrar
- uid: Cqrs.Configuration.BusRegistrar.BuildDelegateAction(System.Type,System.Func{System.Type,System.Collections.Generic.IEnumerable{System.Type}})
  commentId: M:Cqrs.Configuration.BusRegistrar.BuildDelegateAction(System.Type,System.Func{System.Type,System.Collections.Generic.IEnumerable{System.Type}})
  parent: Cqrs.Configuration.BusRegistrar
  isExternal: true
  name: BuildDelegateAction(Type, Func<Type, IEnumerable<Type>>)
  nameWithType: BusRegistrar.BuildDelegateAction(Type, Func<Type, IEnumerable<Type>>)
  fullName: Cqrs.Configuration.BusRegistrar.BuildDelegateAction(System.Type, System.Func<System.Type, System.Collections.Generic.IEnumerable<System.Type>>)
  nameWithType.vb: BusRegistrar.BuildDelegateAction(Type, Func(Of Type, IEnumerable(Of Type)))
  fullName.vb: Cqrs.Configuration.BusRegistrar.BuildDelegateAction(System.Type, System.Func(Of System.Type, System.Collections.Generic.IEnumerable(Of System.Type)))
  name.vb: BuildDelegateAction(Type, Func(Of Type, IEnumerable(Of Type)))
  spec.csharp:
  - uid: Cqrs.Configuration.BusRegistrar.BuildDelegateAction(System.Type,System.Func{System.Type,System.Collections.Generic.IEnumerable{System.Type}})
    name: BuildDelegateAction
    nameWithType: BusRegistrar.BuildDelegateAction
    fullName: Cqrs.Configuration.BusRegistrar.BuildDelegateAction
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Configuration.BusRegistrar.BuildDelegateAction(System.Type,System.Func{System.Type,System.Collections.Generic.IEnumerable{System.Type}})
    name: BuildDelegateAction
    nameWithType: BusRegistrar.BuildDelegateAction
    fullName: Cqrs.Configuration.BusRegistrar.BuildDelegateAction
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Akka.Configuration.AkkaBusRegistrar`1.BuildDelegateAction*
  commentId: Overload:Cqrs.Akka.Configuration.AkkaBusRegistrar`1.BuildDelegateAction
  isExternal: false
  name: BuildDelegateAction
  nameWithType: AkkaBusRegistrar<TAuthenticationToken>.BuildDelegateAction
  fullName: Cqrs.Akka.Configuration.AkkaBusRegistrar<TAuthenticationToken>.BuildDelegateAction
  nameWithType.vb: AkkaBusRegistrar(Of TAuthenticationToken).BuildDelegateAction
  fullName.vb: Cqrs.Akka.Configuration.AkkaBusRegistrar(Of TAuthenticationToken).BuildDelegateAction
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Func{System.Type,System.Collections.Generic.IEnumerable{System.Type}}
  commentId: T:System.Func{System.Type,System.Collections.Generic.IEnumerable{System.Type}}
  parent: System
  definition: System.Func`2
  name: Func<Type, IEnumerable<Type>>
  nameWithType: Func<Type, IEnumerable<Type>>
  fullName: System.Func<System.Type, System.Collections.Generic.IEnumerable<System.Type>>
  nameWithType.vb: Func(Of Type, IEnumerable(Of Type))
  fullName.vb: System.Func(Of System.Type, System.Collections.Generic.IEnumerable(Of System.Type))
  name.vb: Func(Of Type, IEnumerable(Of Type))
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Configuration.HandlerDelegate
  commentId: T:Cqrs.Configuration.HandlerDelegate
  parent: Cqrs.Configuration
  isExternal: false
  name: HandlerDelegate
  nameWithType: HandlerDelegate
  fullName: Cqrs.Configuration.HandlerDelegate
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Configuration.BusRegistrar.InvokeHandlerDelegate(System.Reflection.MethodInfo,System.Boolean,Cqrs.Configuration.HandlerDelegate)
  commentId: M:Cqrs.Configuration.BusRegistrar.InvokeHandlerDelegate(System.Reflection.MethodInfo,System.Boolean,Cqrs.Configuration.HandlerDelegate)
  parent: Cqrs.Configuration.BusRegistrar
  isExternal: true
  name: InvokeHandlerDelegate(MethodInfo, Boolean, HandlerDelegate)
  nameWithType: BusRegistrar.InvokeHandlerDelegate(MethodInfo, Boolean, HandlerDelegate)
  fullName: Cqrs.Configuration.BusRegistrar.InvokeHandlerDelegate(System.Reflection.MethodInfo, System.Boolean, Cqrs.Configuration.HandlerDelegate)
  spec.csharp:
  - uid: Cqrs.Configuration.BusRegistrar.InvokeHandlerDelegate(System.Reflection.MethodInfo,System.Boolean,Cqrs.Configuration.HandlerDelegate)
    name: InvokeHandlerDelegate
    nameWithType: BusRegistrar.InvokeHandlerDelegate
    fullName: Cqrs.Configuration.BusRegistrar.InvokeHandlerDelegate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    nameWithType: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Cqrs.Configuration.HandlerDelegate
    name: HandlerDelegate
    nameWithType: HandlerDelegate
    fullName: Cqrs.Configuration.HandlerDelegate
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Configuration.BusRegistrar.InvokeHandlerDelegate(System.Reflection.MethodInfo,System.Boolean,Cqrs.Configuration.HandlerDelegate)
    name: InvokeHandlerDelegate
    nameWithType: BusRegistrar.InvokeHandlerDelegate
    fullName: Cqrs.Configuration.BusRegistrar.InvokeHandlerDelegate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    nameWithType: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Cqrs.Configuration.HandlerDelegate
    name: HandlerDelegate
    nameWithType: HandlerDelegate
    fullName: Cqrs.Configuration.HandlerDelegate
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Akka.Configuration.AkkaBusRegistrar`1.InvokeHandlerDelegate*
  commentId: Overload:Cqrs.Akka.Configuration.AkkaBusRegistrar`1.InvokeHandlerDelegate
  isExternal: false
  name: InvokeHandlerDelegate
  nameWithType: AkkaBusRegistrar<TAuthenticationToken>.InvokeHandlerDelegate
  fullName: Cqrs.Akka.Configuration.AkkaBusRegistrar<TAuthenticationToken>.InvokeHandlerDelegate
  nameWithType.vb: AkkaBusRegistrar(Of TAuthenticationToken).InvokeHandlerDelegate
  fullName.vb: Cqrs.Akka.Configuration.AkkaBusRegistrar(Of TAuthenticationToken).InvokeHandlerDelegate
- uid: System.Reflection.MethodInfo
  commentId: T:System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: true
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection
  commentId: N:System.Reflection
  isExternal: false
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
