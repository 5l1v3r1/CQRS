<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classCqrs_1_1Tests_1_1Domain_1_1Saga_1_1When__getting__a__saga" kind="class" language="C#" prot="public">
    <compoundname>Cqrs::Tests::Domain::Saga::When_getting_a_saga</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classCqrs_1_1Tests_1_1Domain_1_1Saga_1_1When__getting__a__saga_1a088ad062fdf8cfb97c9289787e822b0e" prot="private" static="no" mutable="no">
        <type><ref refid="interfaceCqrs_1_1Domain_1_1ISagaUnitOfWork" kindref="compound">ISagaUnitOfWork</ref>&lt; <ref refid="interfaceCqrs_1_1Authentication_1_1ISingleSignOnToken" kindref="compound">ISingleSignOnToken</ref> &gt;</type>
        <definition>ISagaUnitOfWork&lt;ISingleSignOnToken&gt; Cqrs.Tests.Domain.Saga.When_getting_a_saga._unitOfWork</definition>
        <argsstring></argsstring>
        <name>_unitOfWork</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs.Tests/Domain/Saga/When_getting_a_saga.cs" line="16" column="1" bodyfile="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs.Tests/Domain/Saga/When_getting_a_saga.cs" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCqrs_1_1Tests_1_1Domain_1_1Saga_1_1When__getting__a__saga_1a845e923e1a0d6ab52407164d2eeb041d" prot="private" static="no" mutable="no">
        <type><ref refid="classCqrs_1_1Tests_1_1Substitutes_1_1TestDependencyResolver" kindref="compound">TestDependencyResolver</ref></type>
        <definition>TestDependencyResolver Cqrs.Tests.Domain.Saga.When_getting_a_saga._dependencyResolver</definition>
        <argsstring></argsstring>
        <name>_dependencyResolver</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs.Tests/Domain/Saga/When_getting_a_saga.cs" line="18" column="1" bodyfile="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs.Tests/Domain/Saga/When_getting_a_saga.cs" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCqrs_1_1Tests_1_1Domain_1_1Saga_1_1When__getting__a__saga_1a02ad232fedb53e4f9d9e528192fb46b1" prot="private" static="no" mutable="no">
        <type><ref refid="classCqrs_1_1Tests_1_1Substitutes_1_1TestCommandPublisher" kindref="compound">TestCommandPublisher</ref></type>
        <definition>TestCommandPublisher Cqrs.Tests.Domain.Saga.When_getting_a_saga._commandPublisher</definition>
        <argsstring></argsstring>
        <name>_commandPublisher</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs.Tests/Domain/Saga/When_getting_a_saga.cs" line="20" column="1" bodyfile="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs.Tests/Domain/Saga/When_getting_a_saga.cs" bodystart="20" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classCqrs_1_1Tests_1_1Domain_1_1Saga_1_1When__getting__a__saga_ad01cf3fdca0367e26a5529c1158f8b41_1ad01cf3fdca0367e26a5529c1158f8b41" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Cqrs.Tests.Domain.Saga.When_getting_a_saga.Setup</definition>
        <argsstring>()</argsstring>
        <name>Setup</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs.Tests/Domain/Saga/When_getting_a_saga.cs" line="23" column="1" bodyfile="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs.Tests/Domain/Saga/When_getting_a_saga.cs" bodystart="23" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Tests_1_1Domain_1_1Saga_1_1When__getting__a__saga_a322ca7de7793e731f2d2d39fcae12b1a_1a322ca7de7793e731f2d2d39fcae12b1a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Cqrs.Tests.Domain.Saga.When_getting_a_saga.Should_get_saga_from_eventstore</definition>
        <argsstring>()</argsstring>
        <name>Should_get_saga_from_eventstore</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs.Tests/Domain/Saga/When_getting_a_saga.cs" line="34" column="1" bodyfile="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs.Tests/Domain/Saga/When_getting_a_saga.cs" bodystart="34" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Tests_1_1Domain_1_1Saga_1_1When__getting__a__saga_a33c41340c5049e3e9a1be0c3eb3ae8c1_1a33c41340c5049e3e9a1be0c3eb3ae8c1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Cqrs.Tests.Domain.Saga.When_getting_a_saga.Should_apply_events</definition>
        <argsstring>()</argsstring>
        <name>Should_apply_events</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs.Tests/Domain/Saga/When_getting_a_saga.cs" line="42" column="1" bodyfile="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs.Tests/Domain/Saga/When_getting_a_saga.cs" bodystart="42" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Tests_1_1Domain_1_1Saga_1_1When__getting__a__saga_ac3706bb8233efa4d428ab3f282c1d61d_1ac3706bb8233efa4d428ab3f282c1d61d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Cqrs.Tests.Domain.Saga.When_getting_a_saga.Should_not_send_command</definition>
        <argsstring>()</argsstring>
        <name>Should_not_send_command</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs.Tests/Domain/Saga/When_getting_a_saga.cs" line="49" column="1" bodyfile="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs.Tests/Domain/Saga/When_getting_a_saga.cs" bodystart="49" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Tests_1_1Domain_1_1Saga_1_1When__getting__a__saga_a2b7a480fc7b5dca8f1bd105bda0d130c_1a2b7a480fc7b5dca8f1bd105bda0d130c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Cqrs.Tests.Domain.Saga.When_getting_a_saga.Should_send_command_on_new_event</definition>
        <argsstring>()</argsstring>
        <name>Should_send_command_on_new_event</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs.Tests/Domain/Saga/When_getting_a_saga.cs" line="56" column="1" bodyfile="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs.Tests/Domain/Saga/When_getting_a_saga.cs" bodystart="56" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Tests_1_1Domain_1_1Saga_1_1When__getting__a__saga_afb09f2b59a54e698723fce8d1171c6c7_1afb09f2b59a54e698723fce8d1171c6c7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Cqrs.Tests.Domain.Saga.When_getting_a_saga.Should_fail_if_saga_do_not_exist</definition>
        <argsstring>()</argsstring>
        <name>Should_fail_if_saga_do_not_exist</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs.Tests/Domain/Saga/When_getting_a_saga.cs" line="64" column="1" bodyfile="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs.Tests/Domain/Saga/When_getting_a_saga.cs" bodystart="64" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Tests_1_1Domain_1_1Saga_1_1When__getting__a__saga_ab99df993d199a3cebe52c546bbb39bf0_1ab99df993d199a3cebe52c546bbb39bf0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Cqrs.Tests.Domain.Saga.When_getting_a_saga.Should_track_changes</definition>
        <argsstring>()</argsstring>
        <name>Should_track_changes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs.Tests/Domain/Saga/When_getting_a_saga.cs" line="71" column="1" bodyfile="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs.Tests/Domain/Saga/When_getting_a_saga.cs" bodystart="71" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Tests_1_1Domain_1_1Saga_1_1When__getting__a__saga_a9be27ce999d88a72caa898836e3670e5_1a9be27ce999d88a72caa898836e3670e5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Cqrs.Tests.Domain.Saga.When_getting_a_saga.Should_get_from_session_if_tracked</definition>
        <argsstring>()</argsstring>
        <name>Should_get_from_session_if_tracked</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs.Tests/Domain/Saga/When_getting_a_saga.cs" line="80" column="1" bodyfile="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs.Tests/Domain/Saga/When_getting_a_saga.cs" bodystart="80" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Tests_1_1Domain_1_1Saga_1_1When__getting__a__saga_a1ae0ff5cca5132ef242a26c2485c6648_1a1ae0ff5cca5132ef242a26c2485c6648" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Cqrs.Tests.Domain.Saga.When_getting_a_saga.Should_throw_concurrency_exception_if_tracked</definition>
        <argsstring>()</argsstring>
        <name>Should_throw_concurrency_exception_if_tracked</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs.Tests/Domain/Saga/When_getting_a_saga.cs" line="91" column="1" bodyfile="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs.Tests/Domain/Saga/When_getting_a_saga.cs" bodystart="91" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Tests_1_1Domain_1_1Saga_1_1When__getting__a__saga_aadae2b84d67626fc8740e74a89617250_1aadae2b84d67626fc8740e74a89617250" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Cqrs.Tests.Domain.Saga.When_getting_a_saga.Should_get_correct_version</definition>
        <argsstring>()</argsstring>
        <name>Should_get_correct_version</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs.Tests/Domain/Saga/When_getting_a_saga.cs" line="100" column="1" bodyfile="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs.Tests/Domain/Saga/When_getting_a_saga.cs" bodystart="100" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Tests_1_1Domain_1_1Saga_1_1When__getting__a__saga_afb825714d424b2c24ef89ec6d457b323_1afb825714d424b2c24ef89ec6d457b323" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Cqrs.Tests.Domain.Saga.When_getting_a_saga.Should_throw_concurrency_exception</definition>
        <argsstring>()</argsstring>
        <name>Should_throw_concurrency_exception</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs.Tests/Domain/Saga/When_getting_a_saga.cs" line="109" column="1" bodyfile="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs.Tests/Domain/Saga/When_getting_a_saga.cs" bodystart="109" bodyend="113"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs.Tests/Domain/Saga/When_getting_a_saga.cs" line="15" column="1" bodyfile="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs.Tests/Domain/Saga/When_getting_a_saga.cs" bodystart="14" bodyend="114"/>
    <listofallmembers>
      <member refid="classCqrs_1_1Tests_1_1Domain_1_1Saga_1_1When__getting__a__saga_1a02ad232fedb53e4f9d9e528192fb46b1" prot="private" virt="non-virtual"><scope>Cqrs::Tests::Domain::Saga::When_getting_a_saga</scope><name>_commandPublisher</name></member>
      <member refid="classCqrs_1_1Tests_1_1Domain_1_1Saga_1_1When__getting__a__saga_1a845e923e1a0d6ab52407164d2eeb041d" prot="private" virt="non-virtual"><scope>Cqrs::Tests::Domain::Saga::When_getting_a_saga</scope><name>_dependencyResolver</name></member>
      <member refid="classCqrs_1_1Tests_1_1Domain_1_1Saga_1_1When__getting__a__saga_1a088ad062fdf8cfb97c9289787e822b0e" prot="private" virt="non-virtual"><scope>Cqrs::Tests::Domain::Saga::When_getting_a_saga</scope><name>_unitOfWork</name></member>
      <member refid="classCqrs_1_1Tests_1_1Domain_1_1Saga_1_1When__getting__a__saga_ad01cf3fdca0367e26a5529c1158f8b41_1ad01cf3fdca0367e26a5529c1158f8b41" prot="public" virt="non-virtual"><scope>Cqrs::Tests::Domain::Saga::When_getting_a_saga</scope><name>Setup</name></member>
      <member refid="classCqrs_1_1Tests_1_1Domain_1_1Saga_1_1When__getting__a__saga_a33c41340c5049e3e9a1be0c3eb3ae8c1_1a33c41340c5049e3e9a1be0c3eb3ae8c1" prot="public" virt="non-virtual"><scope>Cqrs::Tests::Domain::Saga::When_getting_a_saga</scope><name>Should_apply_events</name></member>
      <member refid="classCqrs_1_1Tests_1_1Domain_1_1Saga_1_1When__getting__a__saga_afb09f2b59a54e698723fce8d1171c6c7_1afb09f2b59a54e698723fce8d1171c6c7" prot="public" virt="non-virtual"><scope>Cqrs::Tests::Domain::Saga::When_getting_a_saga</scope><name>Should_fail_if_saga_do_not_exist</name></member>
      <member refid="classCqrs_1_1Tests_1_1Domain_1_1Saga_1_1When__getting__a__saga_aadae2b84d67626fc8740e74a89617250_1aadae2b84d67626fc8740e74a89617250" prot="public" virt="non-virtual"><scope>Cqrs::Tests::Domain::Saga::When_getting_a_saga</scope><name>Should_get_correct_version</name></member>
      <member refid="classCqrs_1_1Tests_1_1Domain_1_1Saga_1_1When__getting__a__saga_a9be27ce999d88a72caa898836e3670e5_1a9be27ce999d88a72caa898836e3670e5" prot="public" virt="non-virtual"><scope>Cqrs::Tests::Domain::Saga::When_getting_a_saga</scope><name>Should_get_from_session_if_tracked</name></member>
      <member refid="classCqrs_1_1Tests_1_1Domain_1_1Saga_1_1When__getting__a__saga_a322ca7de7793e731f2d2d39fcae12b1a_1a322ca7de7793e731f2d2d39fcae12b1a" prot="public" virt="non-virtual"><scope>Cqrs::Tests::Domain::Saga::When_getting_a_saga</scope><name>Should_get_saga_from_eventstore</name></member>
      <member refid="classCqrs_1_1Tests_1_1Domain_1_1Saga_1_1When__getting__a__saga_ac3706bb8233efa4d428ab3f282c1d61d_1ac3706bb8233efa4d428ab3f282c1d61d" prot="public" virt="non-virtual"><scope>Cqrs::Tests::Domain::Saga::When_getting_a_saga</scope><name>Should_not_send_command</name></member>
      <member refid="classCqrs_1_1Tests_1_1Domain_1_1Saga_1_1When__getting__a__saga_a2b7a480fc7b5dca8f1bd105bda0d130c_1a2b7a480fc7b5dca8f1bd105bda0d130c" prot="public" virt="non-virtual"><scope>Cqrs::Tests::Domain::Saga::When_getting_a_saga</scope><name>Should_send_command_on_new_event</name></member>
      <member refid="classCqrs_1_1Tests_1_1Domain_1_1Saga_1_1When__getting__a__saga_afb825714d424b2c24ef89ec6d457b323_1afb825714d424b2c24ef89ec6d457b323" prot="public" virt="non-virtual"><scope>Cqrs::Tests::Domain::Saga::When_getting_a_saga</scope><name>Should_throw_concurrency_exception</name></member>
      <member refid="classCqrs_1_1Tests_1_1Domain_1_1Saga_1_1When__getting__a__saga_a1ae0ff5cca5132ef242a26c2485c6648_1a1ae0ff5cca5132ef242a26c2485c6648" prot="public" virt="non-virtual"><scope>Cqrs::Tests::Domain::Saga::When_getting_a_saga</scope><name>Should_throw_concurrency_exception_if_tracked</name></member>
      <member refid="classCqrs_1_1Tests_1_1Domain_1_1Saga_1_1When__getting__a__saga_ab99df993d199a3cebe52c546bbb39bf0_1ab99df993d199a3cebe52c546bbb39bf0" prot="public" virt="non-virtual"><scope>Cqrs::Tests::Domain::Saga::When_getting_a_saga</scope><name>Should_track_changes</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
