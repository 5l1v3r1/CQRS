### YamlMime:ManagedReference
items:
- uid: Cqrs.WebApi.SignalR.Hubs.NotificationHub
  commentId: T:Cqrs.WebApi.SignalR.Hubs.NotificationHub
  id: NotificationHub
  parent: Cqrs.WebApi.SignalR.Hubs
  children:
  - Cqrs.WebApi.SignalR.Hubs.NotificationHub.#ctor
  - Cqrs.WebApi.SignalR.Hubs.NotificationHub.#ctor(cdmdotnet.Logging.ILogger,cdmdotnet.Logging.ICorrelationIdHelper)
  - Cqrs.WebApi.SignalR.Hubs.NotificationHub.ConvertUserTokenToUserRsn
  - Cqrs.WebApi.SignalR.Hubs.NotificationHub.CorrelationIdHelper
  - Cqrs.WebApi.SignalR.Hubs.NotificationHub.Cqrs#WebApi#SignalR#Hubs#INotificationHub#SendAllUsersEvent``1(Cqrs.Events.IEvent{``0})
  - Cqrs.WebApi.SignalR.Hubs.NotificationHub.Cqrs#WebApi#SignalR#Hubs#INotificationHub#SendExceptThisUserEvent``1(Cqrs.Events.IEvent{``0},System.String)
  - Cqrs.WebApi.SignalR.Hubs.NotificationHub.Cqrs#WebApi#SignalR#Hubs#INotificationHub#SendUserEvent``1(Cqrs.Events.IEvent{``0},System.String)
  - Cqrs.WebApi.SignalR.Hubs.NotificationHub.Cqrs#WebApi#SignalR#Hubs#INotificationHub#SendUsersEvent``1(Cqrs.Events.IEvent{``0},System.Guid[])
  - Cqrs.WebApi.SignalR.Hubs.NotificationHub.Cqrs#WebApi#SignalR#Hubs#ISingleSignOnTokenNotificationHub#SendAllUsersEvent``1(Cqrs.Events.IEvent{``0})
  - Cqrs.WebApi.SignalR.Hubs.NotificationHub.Cqrs#WebApi#SignalR#Hubs#ISingleSignOnTokenNotificationHub#SendExceptThisUserEvent``1(Cqrs.Events.IEvent{``0},System.String)
  - Cqrs.WebApi.SignalR.Hubs.NotificationHub.Cqrs#WebApi#SignalR#Hubs#ISingleSignOnTokenNotificationHub#SendUserEvent``1(Cqrs.Events.IEvent{``0},System.String)
  - Cqrs.WebApi.SignalR.Hubs.NotificationHub.Cqrs#WebApi#SignalR#Hubs#ISingleSignOnTokenNotificationHub#SendUsersEvent``1(Cqrs.Events.IEvent{``0},System.Guid[])
  - Cqrs.WebApi.SignalR.Hubs.NotificationHub.CurrentHub
  - Cqrs.WebApi.SignalR.Hubs.NotificationHub.GetAdditionalDataForLogging(System.Guid)
  - Cqrs.WebApi.SignalR.Hubs.NotificationHub.GetAdditionalDataForLogging(System.String)
  - Cqrs.WebApi.SignalR.Hubs.NotificationHub.Join
  - Cqrs.WebApi.SignalR.Hubs.NotificationHub.Logger
  - Cqrs.WebApi.SignalR.Hubs.NotificationHub.OnConnected
  - Cqrs.WebApi.SignalR.Hubs.NotificationHub.OnReconnected
  - Cqrs.WebApi.SignalR.Hubs.NotificationHub.UserToken
  langs:
  - csharp
  - vb
  name: NotificationHub
  nameWithType: NotificationHub
  fullName: Cqrs.WebApi.SignalR.Hubs.NotificationHub
  type: Class
  source:
    remote:
      path: Framework/Cqrs.WebApi/SignalR/Hubs/NotificationHub.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: NotificationHub
    path: Framework/Cqrs.WebApi/SignalR/Hubs/NotificationHub.cs
    startLine: 24
  assemblies:
  - Cqrs.WebApi
  namespace: Cqrs.WebApi.SignalR.Hubs
  summary: "\nSends <xref href=\"Cqrs.Events.IEvent%601\" data-throw-if-not-resolved=\"false\"></xref> to different groups of users via a SignalR <xref href=\"Microsoft.AspNet.SignalR.Hub\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: 'public class NotificationHub : Hub, IHub, IUntrackedDisposable, IDisposable, INotificationHub, ISingleSignOnTokenNotificationHub'
    content.vb: >-
      Public Class NotificationHub
          Inherits Hub
          Implements IHub, IUntrackedDisposable, IDisposable, INotificationHub, ISingleSignOnTokenNotificationHub
  inheritance:
  - System.Object
  - Microsoft.AspNet.SignalR.Hubs.HubBase
  - Microsoft.AspNet.SignalR.Hub
  implements:
  - Microsoft.AspNet.SignalR.Hubs.IHub
  - Microsoft.AspNet.SignalR.IUntrackedDisposable
  - System.IDisposable
  - Cqrs.WebApi.SignalR.Hubs.INotificationHub
  - Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub
  inheritedMembers:
  - Microsoft.AspNet.SignalR.Hub.Clients
  - Microsoft.AspNet.SignalR.Hubs.HubBase.OnDisconnected(System.Boolean)
  - Microsoft.AspNet.SignalR.Hubs.HubBase.Dispose(System.Boolean)
  - Microsoft.AspNet.SignalR.Hubs.HubBase.Dispose
  - Microsoft.AspNet.SignalR.Hubs.HubBase.Microsoft#AspNet#SignalR#Hubs#IHub#Clients
  - Microsoft.AspNet.SignalR.Hubs.HubBase.Context
  - Microsoft.AspNet.SignalR.Hubs.HubBase.Groups
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Cqrs.WebApi.SignalR.Hubs.NotificationHub.#ctor(cdmdotnet.Logging.ILogger,cdmdotnet.Logging.ICorrelationIdHelper)
  commentId: M:Cqrs.WebApi.SignalR.Hubs.NotificationHub.#ctor(cdmdotnet.Logging.ILogger,cdmdotnet.Logging.ICorrelationIdHelper)
  id: '#ctor(cdmdotnet.Logging.ILogger,cdmdotnet.Logging.ICorrelationIdHelper)'
  parent: Cqrs.WebApi.SignalR.Hubs.NotificationHub
  langs:
  - csharp
  - vb
  name: NotificationHub(ILogger, ICorrelationIdHelper)
  nameWithType: NotificationHub.NotificationHub(ILogger, ICorrelationIdHelper)
  fullName: Cqrs.WebApi.SignalR.Hubs.NotificationHub.NotificationHub(cdmdotnet.Logging.ILogger, cdmdotnet.Logging.ICorrelationIdHelper)
  type: Constructor
  source:
    remote:
      path: Framework/Cqrs.WebApi/SignalR/Hubs/NotificationHub.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: .ctor
    path: Framework/Cqrs.WebApi/SignalR/Hubs/NotificationHub.cs
    startLine: 32
  assemblies:
  - Cqrs.WebApi
  namespace: Cqrs.WebApi.SignalR.Hubs
  summary: "\nInstantiates a new instance of <xref href=\"Cqrs.WebApi.SignalR.Hubs.NotificationHub\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public NotificationHub(ILogger logger, ICorrelationIdHelper correlationIdHelper)
    parameters:
    - id: logger
      type: cdmdotnet.Logging.ILogger
    - id: correlationIdHelper
      type: cdmdotnet.Logging.ICorrelationIdHelper
    content.vb: Public Sub New(logger As ILogger, correlationIdHelper As ICorrelationIdHelper)
  overload: Cqrs.WebApi.SignalR.Hubs.NotificationHub.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Cqrs.WebApi.SignalR.Hubs.NotificationHub.#ctor
  commentId: M:Cqrs.WebApi.SignalR.Hubs.NotificationHub.#ctor
  id: '#ctor'
  parent: Cqrs.WebApi.SignalR.Hubs.NotificationHub
  langs:
  - csharp
  - vb
  name: NotificationHub()
  nameWithType: NotificationHub.NotificationHub()
  fullName: Cqrs.WebApi.SignalR.Hubs.NotificationHub.NotificationHub()
  type: Constructor
  source:
    remote:
      path: Framework/Cqrs.WebApi/SignalR/Hubs/NotificationHub.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: .ctor
    path: Framework/Cqrs.WebApi/SignalR/Hubs/NotificationHub.cs
    startLine: 41
  assemblies:
  - Cqrs.WebApi
  namespace: Cqrs.WebApi.SignalR.Hubs
  summary: "\nInstantiates a new instance of <xref href=\"Cqrs.WebApi.SignalR.Hubs.NotificationHub\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public NotificationHub()
    content.vb: Public Sub New
  overload: Cqrs.WebApi.SignalR.Hubs.NotificationHub.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Cqrs.WebApi.SignalR.Hubs.NotificationHub.Logger
  commentId: P:Cqrs.WebApi.SignalR.Hubs.NotificationHub.Logger
  id: Logger
  parent: Cqrs.WebApi.SignalR.Hubs.NotificationHub
  langs:
  - csharp
  - vb
  name: Logger
  nameWithType: NotificationHub.Logger
  fullName: Cqrs.WebApi.SignalR.Hubs.NotificationHub.Logger
  type: Property
  source:
    remote:
      path: Framework/Cqrs.WebApi/SignalR/Hubs/NotificationHub.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Logger
    path: Framework/Cqrs.WebApi/SignalR/Hubs/NotificationHub.cs
    startLine: 48
  assemblies:
  - Cqrs.WebApi
  namespace: Cqrs.WebApi.SignalR.Hubs
  summary: "\nGets or sets the <xref href=\"cdmdotnet.Logging.ILogger\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public ILogger Logger { get; set; }
    parameters: []
    return:
      type: cdmdotnet.Logging.ILogger
    content.vb: Public Property Logger As ILogger
  overload: Cqrs.WebApi.SignalR.Hubs.NotificationHub.Logger*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Cqrs.WebApi.SignalR.Hubs.NotificationHub.CorrelationIdHelper
  commentId: P:Cqrs.WebApi.SignalR.Hubs.NotificationHub.CorrelationIdHelper
  id: CorrelationIdHelper
  parent: Cqrs.WebApi.SignalR.Hubs.NotificationHub
  langs:
  - csharp
  - vb
  name: CorrelationIdHelper
  nameWithType: NotificationHub.CorrelationIdHelper
  fullName: Cqrs.WebApi.SignalR.Hubs.NotificationHub.CorrelationIdHelper
  type: Property
  source:
    remote:
      path: Framework/Cqrs.WebApi/SignalR/Hubs/NotificationHub.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: CorrelationIdHelper
    path: Framework/Cqrs.WebApi/SignalR/Hubs/NotificationHub.cs
    startLine: 53
  assemblies:
  - Cqrs.WebApi
  namespace: Cqrs.WebApi.SignalR.Hubs
  summary: "\nGets or sets the <xref href=\"cdmdotnet.Logging.ICorrelationIdHelper\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public ICorrelationIdHelper CorrelationIdHelper { get; set; }
    parameters: []
    return:
      type: cdmdotnet.Logging.ICorrelationIdHelper
    content.vb: Public Property CorrelationIdHelper As ICorrelationIdHelper
  overload: Cqrs.WebApi.SignalR.Hubs.NotificationHub.CorrelationIdHelper*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Cqrs.WebApi.SignalR.Hubs.NotificationHub.ConvertUserTokenToUserRsn
  commentId: P:Cqrs.WebApi.SignalR.Hubs.NotificationHub.ConvertUserTokenToUserRsn
  id: ConvertUserTokenToUserRsn
  parent: Cqrs.WebApi.SignalR.Hubs.NotificationHub
  langs:
  - csharp
  - vb
  name: ConvertUserTokenToUserRsn
  nameWithType: NotificationHub.ConvertUserTokenToUserRsn
  fullName: Cqrs.WebApi.SignalR.Hubs.NotificationHub.ConvertUserTokenToUserRsn
  type: Property
  source:
    remote:
      path: Framework/Cqrs.WebApi/SignalR/Hubs/NotificationHub.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: ConvertUserTokenToUserRsn
    path: Framework/Cqrs.WebApi/SignalR/Hubs/NotificationHub.cs
    startLine: 58
  assemblies:
  - Cqrs.WebApi
  namespace: Cqrs.WebApi.SignalR.Hubs
  summary: "\nThe <xref href=\"System.Func%602\" data-throw-if-not-resolved=\"false\"></xref> that can convert a <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> based authentication token into the <xref href=\"System.Guid\" data-throw-if-not-resolved=\"false\"></xref> based user identifier.\n"
  example: []
  syntax:
    content: public Func<string, Guid> ConvertUserTokenToUserRsn { get; set; }
    parameters: []
    return:
      type: System.Func{System.String,System.Guid}
    content.vb: Public Property ConvertUserTokenToUserRsn As Func(Of String, Guid)
  overload: Cqrs.WebApi.SignalR.Hubs.NotificationHub.ConvertUserTokenToUserRsn*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Cqrs.WebApi.SignalR.Hubs.NotificationHub.OnConnected
  commentId: M:Cqrs.WebApi.SignalR.Hubs.NotificationHub.OnConnected
  id: OnConnected
  parent: Cqrs.WebApi.SignalR.Hubs.NotificationHub
  langs:
  - csharp
  - vb
  name: OnConnected()
  nameWithType: NotificationHub.OnConnected()
  fullName: Cqrs.WebApi.SignalR.Hubs.NotificationHub.OnConnected()
  type: Method
  source:
    remote:
      path: Framework/Cqrs.WebApi/SignalR/Hubs/NotificationHub.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: OnConnected
    path: Framework/Cqrs.WebApi/SignalR/Hubs/NotificationHub.cs
    startLine: 65
  assemblies:
  - Cqrs.WebApi
  namespace: Cqrs.WebApi.SignalR.Hubs
  summary: "\nWhen the connection connects to this hub instance we register the connection so we can respond back to it.\n"
  example: []
  syntax:
    content: public override Task OnConnected()
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Overrides Function OnConnected As Task
  overridden: Microsoft.AspNet.SignalR.Hubs.HubBase.OnConnected
  overload: Cqrs.WebApi.SignalR.Hubs.NotificationHub.OnConnected*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Cqrs.WebApi.SignalR.Hubs.NotificationHub.OnReconnected
  commentId: M:Cqrs.WebApi.SignalR.Hubs.NotificationHub.OnReconnected
  id: OnReconnected
  parent: Cqrs.WebApi.SignalR.Hubs.NotificationHub
  langs:
  - csharp
  - vb
  name: OnReconnected()
  nameWithType: NotificationHub.OnReconnected()
  fullName: Cqrs.WebApi.SignalR.Hubs.NotificationHub.OnReconnected()
  type: Method
  source:
    remote:
      path: Framework/Cqrs.WebApi/SignalR/Hubs/NotificationHub.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: OnReconnected
    path: Framework/Cqrs.WebApi/SignalR/Hubs/NotificationHub.cs
    startLine: 73
  assemblies:
  - Cqrs.WebApi
  namespace: Cqrs.WebApi.SignalR.Hubs
  summary: "\nWhen the connection reconnects to this hub instance we register the connection so we can respond back to it.\n"
  example: []
  syntax:
    content: public override Task OnReconnected()
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Overrides Function OnReconnected As Task
  overridden: Microsoft.AspNet.SignalR.Hubs.HubBase.OnReconnected
  overload: Cqrs.WebApi.SignalR.Hubs.NotificationHub.OnReconnected*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Cqrs.WebApi.SignalR.Hubs.NotificationHub.UserToken
  commentId: M:Cqrs.WebApi.SignalR.Hubs.NotificationHub.UserToken
  id: UserToken
  parent: Cqrs.WebApi.SignalR.Hubs.NotificationHub
  langs:
  - csharp
  - vb
  name: UserToken()
  nameWithType: NotificationHub.UserToken()
  fullName: Cqrs.WebApi.SignalR.Hubs.NotificationHub.UserToken()
  type: Method
  source:
    remote:
      path: Framework/Cqrs.WebApi/SignalR/Hubs/NotificationHub.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: UserToken
    path: Framework/Cqrs.WebApi/SignalR/Hubs/NotificationHub.cs
    startLine: 85
  assemblies:
  - Cqrs.WebApi
  namespace: Cqrs.WebApi.SignalR.Hubs
  summary: "\nGets the authentication token for the user from the incoming hub request looking at first the \n<xref href=\"Microsoft.AspNet.SignalR.Hubs.HubCallerContext.RequestCookies\" data-throw-if-not-resolved=\"false\"></xref> and then the <xref href=\"Microsoft.AspNet.SignalR.Hubs.HubCallerContext.QueryString\" data-throw-if-not-resolved=\"false\"></xref>.\nThe authentication token should have a name matching the value of &quot;Cqrs.Web.AuthenticationTokenName&quot; from <xref href=\"Cqrs.Configuration.IConfigurationManager.GetSetting(System.String)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: protected virtual string UserToken()
    return:
      type: System.String
    content.vb: Protected Overridable Function UserToken As String
  overload: Cqrs.WebApi.SignalR.Hubs.NotificationHub.UserToken*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Cqrs.WebApi.SignalR.Hubs.NotificationHub.Join
  commentId: M:Cqrs.WebApi.SignalR.Hubs.NotificationHub.Join
  id: Join
  parent: Cqrs.WebApi.SignalR.Hubs.NotificationHub
  langs:
  - csharp
  - vb
  name: Join()
  nameWithType: NotificationHub.Join()
  fullName: Cqrs.WebApi.SignalR.Hubs.NotificationHub.Join()
  type: Method
  source:
    remote:
      path: Framework/Cqrs.WebApi/SignalR/Hubs/NotificationHub.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Join
    path: Framework/Cqrs.WebApi/SignalR/Hubs/NotificationHub.cs
    startLine: 103
  assemblies:
  - Cqrs.WebApi
  namespace: Cqrs.WebApi.SignalR.Hubs
  summary: "\nJoin the authenticated user to their relevant <xref href=\"Microsoft.AspNet.SignalR.IHubContext.Groups\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: protected virtual Task Join()
    return:
      type: System.Threading.Tasks.Task
    content.vb: Protected Overridable Function Join As Task
  overload: Cqrs.WebApi.SignalR.Hubs.NotificationHub.Join*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Cqrs.WebApi.SignalR.Hubs.NotificationHub.CurrentHub
  commentId: P:Cqrs.WebApi.SignalR.Hubs.NotificationHub.CurrentHub
  id: CurrentHub
  parent: Cqrs.WebApi.SignalR.Hubs.NotificationHub
  langs:
  - csharp
  - vb
  name: CurrentHub
  nameWithType: NotificationHub.CurrentHub
  fullName: Cqrs.WebApi.SignalR.Hubs.NotificationHub.CurrentHub
  type: Property
  source:
    remote:
      path: Framework/Cqrs.WebApi/SignalR/Hubs/NotificationHub.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: CurrentHub
    path: Framework/Cqrs.WebApi/SignalR/Hubs/NotificationHub.cs
    startLine: 144
  assemblies:
  - Cqrs.WebApi
  namespace: Cqrs.WebApi.SignalR.Hubs
  summary: "\nGets the current <xref href=\"Microsoft.AspNet.SignalR.IHubContext\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: protected virtual IHubContext CurrentHub { get; }
    parameters: []
    return:
      type: Microsoft.AspNet.SignalR.IHubContext
    content.vb: Protected Overridable ReadOnly Property CurrentHub As IHubContext
  overload: Cqrs.WebApi.SignalR.Hubs.NotificationHub.CurrentHub*
  modifiers.csharp:
  - protected
  - virtual
  - get
  modifiers.vb:
  - Protected
  - Overridable
  - ReadOnly
- uid: Cqrs.WebApi.SignalR.Hubs.NotificationHub.Cqrs#WebApi#SignalR#Hubs#INotificationHub#SendUsersEvent``1(Cqrs.Events.IEvent{``0},System.Guid[])
  commentId: M:Cqrs.WebApi.SignalR.Hubs.NotificationHub.Cqrs#WebApi#SignalR#Hubs#INotificationHub#SendUsersEvent``1(Cqrs.Events.IEvent{``0},System.Guid[])
  id: Cqrs#WebApi#SignalR#Hubs#INotificationHub#SendUsersEvent``1(Cqrs.Events.IEvent{``0},System.Guid[])
  isEii: true
  parent: Cqrs.WebApi.SignalR.Hubs.NotificationHub
  langs:
  - csharp
  - vb
  name: INotificationHub.SendUsersEvent<TAuthenticationToken>(IEvent<TAuthenticationToken>, Guid[])
  nameWithType: NotificationHub.INotificationHub.SendUsersEvent<TAuthenticationToken>(IEvent<TAuthenticationToken>, Guid[])
  fullName: Cqrs.WebApi.SignalR.Hubs.NotificationHub.Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendUsersEvent<TAuthenticationToken>(Cqrs.Events.IEvent<TAuthenticationToken>, System.Guid[])
  type: Method
  source:
    remote:
      path: Framework/Cqrs.WebApi/SignalR/Hubs/NotificationHub.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendUsersEvent
    path: Framework/Cqrs.WebApi/SignalR/Hubs/NotificationHub.cs
    startLine: 155
  assemblies:
  - Cqrs.WebApi
  namespace: Cqrs.WebApi.SignalR.Hubs
  summary: "\nSend out an event to specific user RSNs\n"
  example: []
  syntax:
    content: void INotificationHub.SendUsersEvent<TSingleSignOnToken>(IEvent<TSingleSignOnToken> eventData, params Guid[] userRsnCollection)
    parameters:
    - id: eventData
      type: Cqrs.Events.IEvent{{TSingleSignOnToken}}
    - id: userRsnCollection
      type: System.Guid[]
    typeParameters:
    - id: TSingleSignOnToken
    content.vb: Sub Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendUsersEvent(Of TSingleSignOnToken)(eventData As IEvent(Of TSingleSignOnToken), ParamArray userRsnCollection As Guid()) Implements INotificationHub.SendUsersEvent
  overload: Cqrs.WebApi.SignalR.Hubs.NotificationHub.Cqrs#WebApi#SignalR#Hubs#INotificationHub#SendUsersEvent*
  implements:
  - Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendUsersEvent``1(Cqrs.Events.IEvent{{TSingleSignOnToken}},System.Guid[])
  nameWithType.vb: NotificationHub.Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendUsersEvent(Of TSingleSignOnToken)(IEvent(Of TSingleSignOnToken), Guid())
  fullName.vb: Cqrs.WebApi.SignalR.Hubs.NotificationHub.Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendUsersEvent(Of TSingleSignOnToken)(Cqrs.Events.IEvent(Of TSingleSignOnToken), System.Guid())
  name.vb: Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendUsersEvent(Of TSingleSignOnToken)(IEvent(Of TSingleSignOnToken), Guid())
- uid: Cqrs.WebApi.SignalR.Hubs.NotificationHub.Cqrs#WebApi#SignalR#Hubs#INotificationHub#SendUserEvent``1(Cqrs.Events.IEvent{``0},System.String)
  commentId: M:Cqrs.WebApi.SignalR.Hubs.NotificationHub.Cqrs#WebApi#SignalR#Hubs#INotificationHub#SendUserEvent``1(Cqrs.Events.IEvent{``0},System.String)
  id: Cqrs#WebApi#SignalR#Hubs#INotificationHub#SendUserEvent``1(Cqrs.Events.IEvent{``0},System.String)
  isEii: true
  parent: Cqrs.WebApi.SignalR.Hubs.NotificationHub
  langs:
  - csharp
  - vb
  name: INotificationHub.SendUserEvent<TAuthenticationToken>(IEvent<TAuthenticationToken>, String)
  nameWithType: NotificationHub.INotificationHub.SendUserEvent<TAuthenticationToken>(IEvent<TAuthenticationToken>, String)
  fullName: Cqrs.WebApi.SignalR.Hubs.NotificationHub.Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendUserEvent<TAuthenticationToken>(Cqrs.Events.IEvent<TAuthenticationToken>, System.String)
  type: Method
  source:
    remote:
      path: Framework/Cqrs.WebApi/SignalR/Hubs/NotificationHub.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendUserEvent
    path: Framework/Cqrs.WebApi/SignalR/Hubs/NotificationHub.cs
    startLine: 201
  assemblies:
  - Cqrs.WebApi
  namespace: Cqrs.WebApi.SignalR.Hubs
  summary: "\nSend out an event to specific user token\n"
  example: []
  syntax:
    content: void INotificationHub.SendUserEvent<TSingleSignOnToken>(IEvent<TSingleSignOnToken> eventData, string userToken)
    parameters:
    - id: eventData
      type: Cqrs.Events.IEvent{{TSingleSignOnToken}}
    - id: userToken
      type: System.String
    typeParameters:
    - id: TSingleSignOnToken
    content.vb: Sub Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendUserEvent(Of TSingleSignOnToken)(eventData As IEvent(Of TSingleSignOnToken), userToken As String) Implements INotificationHub.SendUserEvent
  overload: Cqrs.WebApi.SignalR.Hubs.NotificationHub.Cqrs#WebApi#SignalR#Hubs#INotificationHub#SendUserEvent*
  implements:
  - Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendUserEvent``1(Cqrs.Events.IEvent{{TSingleSignOnToken}},System.String)
  nameWithType.vb: NotificationHub.Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendUserEvent(Of TSingleSignOnToken)(IEvent(Of TSingleSignOnToken), String)
  fullName.vb: Cqrs.WebApi.SignalR.Hubs.NotificationHub.Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendUserEvent(Of TSingleSignOnToken)(Cqrs.Events.IEvent(Of TSingleSignOnToken), System.String)
  name.vb: Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendUserEvent(Of TSingleSignOnToken)(IEvent(Of TSingleSignOnToken), String)
- uid: Cqrs.WebApi.SignalR.Hubs.NotificationHub.Cqrs#WebApi#SignalR#Hubs#INotificationHub#SendAllUsersEvent``1(Cqrs.Events.IEvent{``0})
  commentId: M:Cqrs.WebApi.SignalR.Hubs.NotificationHub.Cqrs#WebApi#SignalR#Hubs#INotificationHub#SendAllUsersEvent``1(Cqrs.Events.IEvent{``0})
  id: Cqrs#WebApi#SignalR#Hubs#INotificationHub#SendAllUsersEvent``1(Cqrs.Events.IEvent{``0})
  isEii: true
  parent: Cqrs.WebApi.SignalR.Hubs.NotificationHub
  langs:
  - csharp
  - vb
  name: INotificationHub.SendAllUsersEvent<TAuthenticationToken>(IEvent<TAuthenticationToken>)
  nameWithType: NotificationHub.INotificationHub.SendAllUsersEvent<TAuthenticationToken>(IEvent<TAuthenticationToken>)
  fullName: Cqrs.WebApi.SignalR.Hubs.NotificationHub.Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendAllUsersEvent<TAuthenticationToken>(Cqrs.Events.IEvent<TAuthenticationToken>)
  type: Method
  source:
    remote:
      path: Framework/Cqrs.WebApi/SignalR/Hubs/NotificationHub.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendAllUsersEvent
    path: Framework/Cqrs.WebApi/SignalR/Hubs/NotificationHub.cs
    startLine: 243
  assemblies:
  - Cqrs.WebApi
  namespace: Cqrs.WebApi.SignalR.Hubs
  summary: "\nSend out an event to all users\n"
  example: []
  syntax:
    content: void INotificationHub.SendAllUsersEvent<TSingleSignOnToken>(IEvent<TSingleSignOnToken> eventData)
    parameters:
    - id: eventData
      type: Cqrs.Events.IEvent{{TSingleSignOnToken}}
    typeParameters:
    - id: TSingleSignOnToken
    content.vb: Sub Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendAllUsersEvent(Of TSingleSignOnToken)(eventData As IEvent(Of TSingleSignOnToken)) Implements INotificationHub.SendAllUsersEvent
  overload: Cqrs.WebApi.SignalR.Hubs.NotificationHub.Cqrs#WebApi#SignalR#Hubs#INotificationHub#SendAllUsersEvent*
  implements:
  - Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendAllUsersEvent``1(Cqrs.Events.IEvent{{TSingleSignOnToken}})
  nameWithType.vb: NotificationHub.Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendAllUsersEvent(Of TSingleSignOnToken)(IEvent(Of TSingleSignOnToken))
  fullName.vb: Cqrs.WebApi.SignalR.Hubs.NotificationHub.Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendAllUsersEvent(Of TSingleSignOnToken)(Cqrs.Events.IEvent(Of TSingleSignOnToken))
  name.vb: Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendAllUsersEvent(Of TSingleSignOnToken)(IEvent(Of TSingleSignOnToken))
- uid: Cqrs.WebApi.SignalR.Hubs.NotificationHub.Cqrs#WebApi#SignalR#Hubs#INotificationHub#SendExceptThisUserEvent``1(Cqrs.Events.IEvent{``0},System.String)
  commentId: M:Cqrs.WebApi.SignalR.Hubs.NotificationHub.Cqrs#WebApi#SignalR#Hubs#INotificationHub#SendExceptThisUserEvent``1(Cqrs.Events.IEvent{``0},System.String)
  id: Cqrs#WebApi#SignalR#Hubs#INotificationHub#SendExceptThisUserEvent``1(Cqrs.Events.IEvent{``0},System.String)
  isEii: true
  parent: Cqrs.WebApi.SignalR.Hubs.NotificationHub
  langs:
  - csharp
  - vb
  name: INotificationHub.SendExceptThisUserEvent<TAuthenticationToken>(IEvent<TAuthenticationToken>, String)
  nameWithType: NotificationHub.INotificationHub.SendExceptThisUserEvent<TAuthenticationToken>(IEvent<TAuthenticationToken>, String)
  fullName: Cqrs.WebApi.SignalR.Hubs.NotificationHub.Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendExceptThisUserEvent<TAuthenticationToken>(Cqrs.Events.IEvent<TAuthenticationToken>, System.String)
  type: Method
  source:
    remote:
      path: Framework/Cqrs.WebApi/SignalR/Hubs/NotificationHub.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendExceptThisUserEvent
    path: Framework/Cqrs.WebApi/SignalR/Hubs/NotificationHub.cs
    startLine: 283
  assemblies:
  - Cqrs.WebApi
  namespace: Cqrs.WebApi.SignalR.Hubs
  summary: "\nSend out an event to all users except the specific user token\n"
  example: []
  syntax:
    content: void INotificationHub.SendExceptThisUserEvent<TSingleSignOnToken>(IEvent<TSingleSignOnToken> eventData, string userToken)
    parameters:
    - id: eventData
      type: Cqrs.Events.IEvent{{TSingleSignOnToken}}
    - id: userToken
      type: System.String
    typeParameters:
    - id: TSingleSignOnToken
    content.vb: Sub Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendExceptThisUserEvent(Of TSingleSignOnToken)(eventData As IEvent(Of TSingleSignOnToken), userToken As String) Implements INotificationHub.SendExceptThisUserEvent
  overload: Cqrs.WebApi.SignalR.Hubs.NotificationHub.Cqrs#WebApi#SignalR#Hubs#INotificationHub#SendExceptThisUserEvent*
  implements:
  - Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendExceptThisUserEvent``1(Cqrs.Events.IEvent{{TSingleSignOnToken}},System.String)
  nameWithType.vb: NotificationHub.Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendExceptThisUserEvent(Of TSingleSignOnToken)(IEvent(Of TSingleSignOnToken), String)
  fullName.vb: Cqrs.WebApi.SignalR.Hubs.NotificationHub.Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendExceptThisUserEvent(Of TSingleSignOnToken)(Cqrs.Events.IEvent(Of TSingleSignOnToken), System.String)
  name.vb: Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendExceptThisUserEvent(Of TSingleSignOnToken)(IEvent(Of TSingleSignOnToken), String)
- uid: Cqrs.WebApi.SignalR.Hubs.NotificationHub.Cqrs#WebApi#SignalR#Hubs#ISingleSignOnTokenNotificationHub#SendUserEvent``1(Cqrs.Events.IEvent{``0},System.String)
  commentId: M:Cqrs.WebApi.SignalR.Hubs.NotificationHub.Cqrs#WebApi#SignalR#Hubs#ISingleSignOnTokenNotificationHub#SendUserEvent``1(Cqrs.Events.IEvent{``0},System.String)
  id: Cqrs#WebApi#SignalR#Hubs#ISingleSignOnTokenNotificationHub#SendUserEvent``1(Cqrs.Events.IEvent{``0},System.String)
  isEii: true
  parent: Cqrs.WebApi.SignalR.Hubs.NotificationHub
  langs:
  - csharp
  - vb
  name: ISingleSignOnTokenNotificationHub.SendUserEvent<TSingleSignOnToken>(IEvent<TSingleSignOnToken>, String)
  nameWithType: NotificationHub.ISingleSignOnTokenNotificationHub.SendUserEvent<TSingleSignOnToken>(IEvent<TSingleSignOnToken>, String)
  fullName: Cqrs.WebApi.SignalR.Hubs.NotificationHub.Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub.SendUserEvent<TSingleSignOnToken>(Cqrs.Events.IEvent<TSingleSignOnToken>, System.String)
  type: Method
  source:
    remote:
      path: Framework/Cqrs.WebApi/SignalR/Hubs/NotificationHub.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub.SendUserEvent
    path: Framework/Cqrs.WebApi/SignalR/Hubs/NotificationHub.cs
    startLine: 329
  assemblies:
  - Cqrs.WebApi
  namespace: Cqrs.WebApi.SignalR.Hubs
  summary: "\nSend out an event to specific user token\n"
  example: []
  syntax:
    content: 'void ISingleSignOnTokenNotificationHub.SendUserEvent<TSingleSignOnToken>(IEvent<TSingleSignOnToken> eventData, string userToken)where TSingleSignOnToken : ISingleSignOnToken'
    parameters:
    - id: eventData
      type: Cqrs.Events.IEvent{{TSingleSignOnToken}}
    - id: userToken
      type: System.String
    typeParameters:
    - id: TSingleSignOnToken
    content.vb: Sub Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub.SendUserEvent(Of TSingleSignOnToken As ISingleSignOnToken)(eventData As IEvent(Of TSingleSignOnToken), userToken As String) Implements ISingleSignOnTokenNotificationHub.SendUserEvent
  overload: Cqrs.WebApi.SignalR.Hubs.NotificationHub.Cqrs#WebApi#SignalR#Hubs#ISingleSignOnTokenNotificationHub#SendUserEvent*
  implements:
  - Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub.SendUserEvent``1(Cqrs.Events.IEvent{{TSingleSignOnToken}},System.String)
  nameWithType.vb: NotificationHub.Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub.SendUserEvent(Of TSingleSignOnToken)(IEvent(Of TSingleSignOnToken), String)
  fullName.vb: Cqrs.WebApi.SignalR.Hubs.NotificationHub.Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub.SendUserEvent(Of TSingleSignOnToken)(Cqrs.Events.IEvent(Of TSingleSignOnToken), System.String)
  name.vb: Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub.SendUserEvent(Of TSingleSignOnToken)(IEvent(Of TSingleSignOnToken), String)
- uid: Cqrs.WebApi.SignalR.Hubs.NotificationHub.Cqrs#WebApi#SignalR#Hubs#ISingleSignOnTokenNotificationHub#SendAllUsersEvent``1(Cqrs.Events.IEvent{``0})
  commentId: M:Cqrs.WebApi.SignalR.Hubs.NotificationHub.Cqrs#WebApi#SignalR#Hubs#ISingleSignOnTokenNotificationHub#SendAllUsersEvent``1(Cqrs.Events.IEvent{``0})
  id: Cqrs#WebApi#SignalR#Hubs#ISingleSignOnTokenNotificationHub#SendAllUsersEvent``1(Cqrs.Events.IEvent{``0})
  isEii: true
  parent: Cqrs.WebApi.SignalR.Hubs.NotificationHub
  langs:
  - csharp
  - vb
  name: ISingleSignOnTokenNotificationHub.SendAllUsersEvent<TSingleSignOnToken>(IEvent<TSingleSignOnToken>)
  nameWithType: NotificationHub.ISingleSignOnTokenNotificationHub.SendAllUsersEvent<TSingleSignOnToken>(IEvent<TSingleSignOnToken>)
  fullName: Cqrs.WebApi.SignalR.Hubs.NotificationHub.Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub.SendAllUsersEvent<TSingleSignOnToken>(Cqrs.Events.IEvent<TSingleSignOnToken>)
  type: Method
  source:
    remote:
      path: Framework/Cqrs.WebApi/SignalR/Hubs/NotificationHub.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub.SendAllUsersEvent
    path: Framework/Cqrs.WebApi/SignalR/Hubs/NotificationHub.cs
    startLine: 337
  assemblies:
  - Cqrs.WebApi
  namespace: Cqrs.WebApi.SignalR.Hubs
  summary: "\nSend out an event to all users\n"
  example: []
  syntax:
    content: 'void ISingleSignOnTokenNotificationHub.SendAllUsersEvent<TSingleSignOnToken>(IEvent<TSingleSignOnToken> eventData)where TSingleSignOnToken : ISingleSignOnToken'
    parameters:
    - id: eventData
      type: Cqrs.Events.IEvent{{TSingleSignOnToken}}
    typeParameters:
    - id: TSingleSignOnToken
    content.vb: Sub Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub.SendAllUsersEvent(Of TSingleSignOnToken As ISingleSignOnToken)(eventData As IEvent(Of TSingleSignOnToken)) Implements ISingleSignOnTokenNotificationHub.SendAllUsersEvent
  overload: Cqrs.WebApi.SignalR.Hubs.NotificationHub.Cqrs#WebApi#SignalR#Hubs#ISingleSignOnTokenNotificationHub#SendAllUsersEvent*
  implements:
  - Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub.SendAllUsersEvent``1(Cqrs.Events.IEvent{{TSingleSignOnToken}})
  nameWithType.vb: NotificationHub.Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub.SendAllUsersEvent(Of TSingleSignOnToken)(IEvent(Of TSingleSignOnToken))
  fullName.vb: Cqrs.WebApi.SignalR.Hubs.NotificationHub.Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub.SendAllUsersEvent(Of TSingleSignOnToken)(Cqrs.Events.IEvent(Of TSingleSignOnToken))
  name.vb: Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub.SendAllUsersEvent(Of TSingleSignOnToken)(IEvent(Of TSingleSignOnToken))
- uid: Cqrs.WebApi.SignalR.Hubs.NotificationHub.Cqrs#WebApi#SignalR#Hubs#ISingleSignOnTokenNotificationHub#SendExceptThisUserEvent``1(Cqrs.Events.IEvent{``0},System.String)
  commentId: M:Cqrs.WebApi.SignalR.Hubs.NotificationHub.Cqrs#WebApi#SignalR#Hubs#ISingleSignOnTokenNotificationHub#SendExceptThisUserEvent``1(Cqrs.Events.IEvent{``0},System.String)
  id: Cqrs#WebApi#SignalR#Hubs#ISingleSignOnTokenNotificationHub#SendExceptThisUserEvent``1(Cqrs.Events.IEvent{``0},System.String)
  isEii: true
  parent: Cqrs.WebApi.SignalR.Hubs.NotificationHub
  langs:
  - csharp
  - vb
  name: ISingleSignOnTokenNotificationHub.SendExceptThisUserEvent<TSingleSignOnToken>(IEvent<TSingleSignOnToken>, String)
  nameWithType: NotificationHub.ISingleSignOnTokenNotificationHub.SendExceptThisUserEvent<TSingleSignOnToken>(IEvent<TSingleSignOnToken>, String)
  fullName: Cqrs.WebApi.SignalR.Hubs.NotificationHub.Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub.SendExceptThisUserEvent<TSingleSignOnToken>(Cqrs.Events.IEvent<TSingleSignOnToken>, System.String)
  type: Method
  source:
    remote:
      path: Framework/Cqrs.WebApi/SignalR/Hubs/NotificationHub.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub.SendExceptThisUserEvent
    path: Framework/Cqrs.WebApi/SignalR/Hubs/NotificationHub.cs
    startLine: 345
  assemblies:
  - Cqrs.WebApi
  namespace: Cqrs.WebApi.SignalR.Hubs
  summary: "\nSend out an event to all users except the specific user token\n"
  example: []
  syntax:
    content: 'void ISingleSignOnTokenNotificationHub.SendExceptThisUserEvent<TSingleSignOnToken>(IEvent<TSingleSignOnToken> eventData, string userToken)where TSingleSignOnToken : ISingleSignOnToken'
    parameters:
    - id: eventData
      type: Cqrs.Events.IEvent{{TSingleSignOnToken}}
    - id: userToken
      type: System.String
    typeParameters:
    - id: TSingleSignOnToken
    content.vb: Sub Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub.SendExceptThisUserEvent(Of TSingleSignOnToken As ISingleSignOnToken)(eventData As IEvent(Of TSingleSignOnToken), userToken As String) Implements ISingleSignOnTokenNotificationHub.SendExceptThisUserEvent
  overload: Cqrs.WebApi.SignalR.Hubs.NotificationHub.Cqrs#WebApi#SignalR#Hubs#ISingleSignOnTokenNotificationHub#SendExceptThisUserEvent*
  implements:
  - Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub.SendExceptThisUserEvent``1(Cqrs.Events.IEvent{{TSingleSignOnToken}},System.String)
  nameWithType.vb: NotificationHub.Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub.SendExceptThisUserEvent(Of TSingleSignOnToken)(IEvent(Of TSingleSignOnToken), String)
  fullName.vb: Cqrs.WebApi.SignalR.Hubs.NotificationHub.Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub.SendExceptThisUserEvent(Of TSingleSignOnToken)(Cqrs.Events.IEvent(Of TSingleSignOnToken), System.String)
  name.vb: Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub.SendExceptThisUserEvent(Of TSingleSignOnToken)(IEvent(Of TSingleSignOnToken), String)
- uid: Cqrs.WebApi.SignalR.Hubs.NotificationHub.Cqrs#WebApi#SignalR#Hubs#ISingleSignOnTokenNotificationHub#SendUsersEvent``1(Cqrs.Events.IEvent{``0},System.Guid[])
  commentId: M:Cqrs.WebApi.SignalR.Hubs.NotificationHub.Cqrs#WebApi#SignalR#Hubs#ISingleSignOnTokenNotificationHub#SendUsersEvent``1(Cqrs.Events.IEvent{``0},System.Guid[])
  id: Cqrs#WebApi#SignalR#Hubs#ISingleSignOnTokenNotificationHub#SendUsersEvent``1(Cqrs.Events.IEvent{``0},System.Guid[])
  isEii: true
  parent: Cqrs.WebApi.SignalR.Hubs.NotificationHub
  langs:
  - csharp
  - vb
  name: ISingleSignOnTokenNotificationHub.SendUsersEvent<TSingleSignOnToken>(IEvent<TSingleSignOnToken>, Guid[])
  nameWithType: NotificationHub.ISingleSignOnTokenNotificationHub.SendUsersEvent<TSingleSignOnToken>(IEvent<TSingleSignOnToken>, Guid[])
  fullName: Cqrs.WebApi.SignalR.Hubs.NotificationHub.Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub.SendUsersEvent<TSingleSignOnToken>(Cqrs.Events.IEvent<TSingleSignOnToken>, System.Guid[])
  type: Method
  source:
    remote:
      path: Framework/Cqrs.WebApi/SignalR/Hubs/NotificationHub.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub.SendUsersEvent
    path: Framework/Cqrs.WebApi/SignalR/Hubs/NotificationHub.cs
    startLine: 353
  assemblies:
  - Cqrs.WebApi
  namespace: Cqrs.WebApi.SignalR.Hubs
  summary: "\nSend out an event to specific user RSNs\n"
  example: []
  syntax:
    content: 'void ISingleSignOnTokenNotificationHub.SendUsersEvent<TSingleSignOnToken>(IEvent<TSingleSignOnToken> eventData, params Guid[] userRsnCollection)where TSingleSignOnToken : ISingleSignOnToken'
    parameters:
    - id: eventData
      type: Cqrs.Events.IEvent{{TSingleSignOnToken}}
    - id: userRsnCollection
      type: System.Guid[]
    typeParameters:
    - id: TSingleSignOnToken
    content.vb: Sub Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub.SendUsersEvent(Of TSingleSignOnToken As ISingleSignOnToken)(eventData As IEvent(Of TSingleSignOnToken), ParamArray userRsnCollection As Guid()) Implements ISingleSignOnTokenNotificationHub.SendUsersEvent
  overload: Cqrs.WebApi.SignalR.Hubs.NotificationHub.Cqrs#WebApi#SignalR#Hubs#ISingleSignOnTokenNotificationHub#SendUsersEvent*
  implements:
  - Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub.SendUsersEvent``1(Cqrs.Events.IEvent{{TSingleSignOnToken}},System.Guid[])
  nameWithType.vb: NotificationHub.Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub.SendUsersEvent(Of TSingleSignOnToken)(IEvent(Of TSingleSignOnToken), Guid())
  fullName.vb: Cqrs.WebApi.SignalR.Hubs.NotificationHub.Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub.SendUsersEvent(Of TSingleSignOnToken)(Cqrs.Events.IEvent(Of TSingleSignOnToken), System.Guid())
  name.vb: Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub.SendUsersEvent(Of TSingleSignOnToken)(IEvent(Of TSingleSignOnToken), Guid())
- uid: Cqrs.WebApi.SignalR.Hubs.NotificationHub.GetAdditionalDataForLogging(System.Guid)
  commentId: M:Cqrs.WebApi.SignalR.Hubs.NotificationHub.GetAdditionalDataForLogging(System.Guid)
  id: GetAdditionalDataForLogging(System.Guid)
  parent: Cqrs.WebApi.SignalR.Hubs.NotificationHub
  langs:
  - csharp
  - vb
  name: GetAdditionalDataForLogging(Guid)
  nameWithType: NotificationHub.GetAdditionalDataForLogging(Guid)
  fullName: Cqrs.WebApi.SignalR.Hubs.NotificationHub.GetAdditionalDataForLogging(System.Guid)
  type: Method
  source:
    remote:
      path: Framework/Cqrs.WebApi/SignalR/Hubs/NotificationHub.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: GetAdditionalDataForLogging
    path: Framework/Cqrs.WebApi/SignalR/Hubs/NotificationHub.cs
    startLine: 361
  assemblies:
  - Cqrs.WebApi
  namespace: Cqrs.WebApi.SignalR.Hubs
  summary: "\nCreate additional data containing the provided <span class=\"paramref\">userRsn</span>.\n"
  example: []
  syntax:
    content: protected virtual IDictionary<string, object> GetAdditionalDataForLogging(Guid userRsn)
    parameters:
    - id: userRsn
      type: System.Guid
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
    content.vb: Protected Overridable Function GetAdditionalDataForLogging(userRsn As Guid) As IDictionary(Of String, Object)
  overload: Cqrs.WebApi.SignalR.Hubs.NotificationHub.GetAdditionalDataForLogging*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Cqrs.WebApi.SignalR.Hubs.NotificationHub.GetAdditionalDataForLogging(System.String)
  commentId: M:Cqrs.WebApi.SignalR.Hubs.NotificationHub.GetAdditionalDataForLogging(System.String)
  id: GetAdditionalDataForLogging(System.String)
  parent: Cqrs.WebApi.SignalR.Hubs.NotificationHub
  langs:
  - csharp
  - vb
  name: GetAdditionalDataForLogging(String)
  nameWithType: NotificationHub.GetAdditionalDataForLogging(String)
  fullName: Cqrs.WebApi.SignalR.Hubs.NotificationHub.GetAdditionalDataForLogging(System.String)
  type: Method
  source:
    remote:
      path: Framework/Cqrs.WebApi/SignalR/Hubs/NotificationHub.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: GetAdditionalDataForLogging
    path: Framework/Cqrs.WebApi/SignalR/Hubs/NotificationHub.cs
    startLine: 369
  assemblies:
  - Cqrs.WebApi
  namespace: Cqrs.WebApi.SignalR.Hubs
  summary: "\nCreate additional data containing the provided <span class=\"paramref\">userToken</span>.\n"
  example: []
  syntax:
    content: protected virtual IDictionary<string, object> GetAdditionalDataForLogging(string userToken)
    parameters:
    - id: userToken
      type: System.String
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
    content.vb: Protected Overridable Function GetAdditionalDataForLogging(userToken As String) As IDictionary(Of String, Object)
  overload: Cqrs.WebApi.SignalR.Hubs.NotificationHub.GetAdditionalDataForLogging*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
references:
- uid: Cqrs.Events.IEvent`1
  commentId: T:Cqrs.Events.IEvent`1
  isExternal: false
  name: IEvent<TAuthenticationToken>
  nameWithType: IEvent<TAuthenticationToken>
  fullName: Cqrs.Events.IEvent<TAuthenticationToken>
  nameWithType.vb: IEvent(Of TAuthenticationToken)
  fullName.vb: Cqrs.Events.IEvent(Of TAuthenticationToken)
  name.vb: IEvent(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.SignalR.Hub
  commentId: T:Microsoft.AspNet.SignalR.Hub
  parent: Microsoft.AspNet.SignalR
  isExternal: true
  name: Hub
  nameWithType: Hub
  fullName: Microsoft.AspNet.SignalR.Hub
- uid: Cqrs.WebApi.SignalR.Hubs
  commentId: N:Cqrs.WebApi.SignalR.Hubs
  isExternal: false
  name: Cqrs.WebApi.SignalR.Hubs
  nameWithType: Cqrs.WebApi.SignalR.Hubs
  fullName: Cqrs.WebApi.SignalR.Hubs
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.AspNet.SignalR.Hubs.HubBase
  commentId: T:Microsoft.AspNet.SignalR.Hubs.HubBase
  parent: Microsoft.AspNet.SignalR.Hubs
  isExternal: true
  name: HubBase
  nameWithType: HubBase
  fullName: Microsoft.AspNet.SignalR.Hubs.HubBase
- uid: Microsoft.AspNet.SignalR.Hubs.IHub
  commentId: T:Microsoft.AspNet.SignalR.Hubs.IHub
  parent: Microsoft.AspNet.SignalR.Hubs
  isExternal: true
  name: IHub
  nameWithType: IHub
  fullName: Microsoft.AspNet.SignalR.Hubs.IHub
- uid: Microsoft.AspNet.SignalR.IUntrackedDisposable
  commentId: T:Microsoft.AspNet.SignalR.IUntrackedDisposable
  parent: Microsoft.AspNet.SignalR
  isExternal: true
  name: IUntrackedDisposable
  nameWithType: IUntrackedDisposable
  fullName: Microsoft.AspNet.SignalR.IUntrackedDisposable
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Cqrs.WebApi.SignalR.Hubs.INotificationHub
  commentId: T:Cqrs.WebApi.SignalR.Hubs.INotificationHub
  parent: Cqrs.WebApi.SignalR.Hubs
  isExternal: false
  name: INotificationHub
  nameWithType: INotificationHub
  fullName: Cqrs.WebApi.SignalR.Hubs.INotificationHub
- uid: Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub
  commentId: T:Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub
  parent: Cqrs.WebApi.SignalR.Hubs
  isExternal: false
  name: ISingleSignOnTokenNotificationHub
  nameWithType: ISingleSignOnTokenNotificationHub
  fullName: Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub
- uid: Microsoft.AspNet.SignalR.Hub.Clients
  commentId: P:Microsoft.AspNet.SignalR.Hub.Clients
  parent: Microsoft.AspNet.SignalR.Hub
  isExternal: true
  name: Clients
  nameWithType: Hub.Clients
  fullName: Microsoft.AspNet.SignalR.Hub.Clients
- uid: Microsoft.AspNet.SignalR.Hubs.HubBase.OnDisconnected(System.Boolean)
  commentId: M:Microsoft.AspNet.SignalR.Hubs.HubBase.OnDisconnected(System.Boolean)
  parent: Microsoft.AspNet.SignalR.Hubs.HubBase
  isExternal: true
  name: OnDisconnected(Boolean)
  nameWithType: HubBase.OnDisconnected(Boolean)
  fullName: Microsoft.AspNet.SignalR.Hubs.HubBase.OnDisconnected(System.Boolean)
  spec.csharp:
  - uid: Microsoft.AspNet.SignalR.Hubs.HubBase.OnDisconnected(System.Boolean)
    name: OnDisconnected
    nameWithType: HubBase.OnDisconnected
    fullName: Microsoft.AspNet.SignalR.Hubs.HubBase.OnDisconnected
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.SignalR.Hubs.HubBase.OnDisconnected(System.Boolean)
    name: OnDisconnected
    nameWithType: HubBase.OnDisconnected
    fullName: Microsoft.AspNet.SignalR.Hubs.HubBase.OnDisconnected
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.SignalR.Hubs.HubBase.Dispose(System.Boolean)
  commentId: M:Microsoft.AspNet.SignalR.Hubs.HubBase.Dispose(System.Boolean)
  parent: Microsoft.AspNet.SignalR.Hubs.HubBase
  isExternal: true
  name: Dispose(Boolean)
  nameWithType: HubBase.Dispose(Boolean)
  fullName: Microsoft.AspNet.SignalR.Hubs.HubBase.Dispose(System.Boolean)
  spec.csharp:
  - uid: Microsoft.AspNet.SignalR.Hubs.HubBase.Dispose(System.Boolean)
    name: Dispose
    nameWithType: HubBase.Dispose
    fullName: Microsoft.AspNet.SignalR.Hubs.HubBase.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.SignalR.Hubs.HubBase.Dispose(System.Boolean)
    name: Dispose
    nameWithType: HubBase.Dispose
    fullName: Microsoft.AspNet.SignalR.Hubs.HubBase.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.SignalR.Hubs.HubBase.Dispose
  commentId: M:Microsoft.AspNet.SignalR.Hubs.HubBase.Dispose
  parent: Microsoft.AspNet.SignalR.Hubs.HubBase
  isExternal: true
  name: Dispose()
  nameWithType: HubBase.Dispose()
  fullName: Microsoft.AspNet.SignalR.Hubs.HubBase.Dispose()
  spec.csharp:
  - uid: Microsoft.AspNet.SignalR.Hubs.HubBase.Dispose
    name: Dispose
    nameWithType: HubBase.Dispose
    fullName: Microsoft.AspNet.SignalR.Hubs.HubBase.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.SignalR.Hubs.HubBase.Dispose
    name: Dispose
    nameWithType: HubBase.Dispose
    fullName: Microsoft.AspNet.SignalR.Hubs.HubBase.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.SignalR.Hubs.HubBase.Microsoft#AspNet#SignalR#Hubs#IHub#Clients
  commentId: P:Microsoft.AspNet.SignalR.Hubs.HubBase.Microsoft#AspNet#SignalR#Hubs#IHub#Clients
  parent: Microsoft.AspNet.SignalR.Hubs.HubBase
  isExternal: true
  name: IHub.Clients
  nameWithType: HubBase.IHub.Clients
  fullName: Microsoft.AspNet.SignalR.Hubs.HubBase.Microsoft.AspNet.SignalR.Hubs.IHub.Clients
  nameWithType.vb: HubBase.Microsoft.AspNet.SignalR.Hubs.IHub.Clients
  name.vb: Microsoft.AspNet.SignalR.Hubs.IHub.Clients
- uid: Microsoft.AspNet.SignalR.Hubs.HubBase.Context
  commentId: P:Microsoft.AspNet.SignalR.Hubs.HubBase.Context
  parent: Microsoft.AspNet.SignalR.Hubs.HubBase
  isExternal: true
  name: Context
  nameWithType: HubBase.Context
  fullName: Microsoft.AspNet.SignalR.Hubs.HubBase.Context
- uid: Microsoft.AspNet.SignalR.Hubs.HubBase.Groups
  commentId: P:Microsoft.AspNet.SignalR.Hubs.HubBase.Groups
  parent: Microsoft.AspNet.SignalR.Hubs.HubBase
  isExternal: true
  name: Groups
  nameWithType: HubBase.Groups
  fullName: Microsoft.AspNet.SignalR.Hubs.HubBase.Groups
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.SignalR
  commentId: N:Microsoft.AspNet.SignalR
  isExternal: false
  name: Microsoft.AspNet.SignalR
  nameWithType: Microsoft.AspNet.SignalR
  fullName: Microsoft.AspNet.SignalR
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNet.SignalR.Hubs
  commentId: N:Microsoft.AspNet.SignalR.Hubs
  isExternal: false
  name: Microsoft.AspNet.SignalR.Hubs
  nameWithType: Microsoft.AspNet.SignalR.Hubs
  fullName: Microsoft.AspNet.SignalR.Hubs
- uid: Cqrs.WebApi.SignalR.Hubs.NotificationHub
  commentId: T:Cqrs.WebApi.SignalR.Hubs.NotificationHub
  isExternal: false
  name: NotificationHub
  nameWithType: NotificationHub
  fullName: Cqrs.WebApi.SignalR.Hubs.NotificationHub
- uid: Cqrs.WebApi.SignalR.Hubs.NotificationHub.#ctor*
  commentId: Overload:Cqrs.WebApi.SignalR.Hubs.NotificationHub.#ctor
  isExternal: false
  name: NotificationHub
  nameWithType: NotificationHub.NotificationHub
  fullName: Cqrs.WebApi.SignalR.Hubs.NotificationHub.NotificationHub
- uid: cdmdotnet.Logging.ILogger
  commentId: T:cdmdotnet.Logging.ILogger
  parent: cdmdotnet.Logging
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: cdmdotnet.Logging.ILogger
- uid: cdmdotnet.Logging.ICorrelationIdHelper
  commentId: T:cdmdotnet.Logging.ICorrelationIdHelper
  parent: cdmdotnet.Logging
  isExternal: true
  name: ICorrelationIdHelper
  nameWithType: ICorrelationIdHelper
  fullName: cdmdotnet.Logging.ICorrelationIdHelper
- uid: cdmdotnet.Logging
  commentId: N:cdmdotnet.Logging
  isExternal: false
  name: cdmdotnet.Logging
  nameWithType: cdmdotnet.Logging
  fullName: cdmdotnet.Logging
- uid: Cqrs.WebApi.SignalR.Hubs.NotificationHub.Logger*
  commentId: Overload:Cqrs.WebApi.SignalR.Hubs.NotificationHub.Logger
  isExternal: false
  name: Logger
  nameWithType: NotificationHub.Logger
  fullName: Cqrs.WebApi.SignalR.Hubs.NotificationHub.Logger
- uid: Cqrs.WebApi.SignalR.Hubs.NotificationHub.CorrelationIdHelper*
  commentId: Overload:Cqrs.WebApi.SignalR.Hubs.NotificationHub.CorrelationIdHelper
  isExternal: false
  name: CorrelationIdHelper
  nameWithType: NotificationHub.CorrelationIdHelper
  fullName: Cqrs.WebApi.SignalR.Hubs.NotificationHub.CorrelationIdHelper
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: Cqrs.WebApi.SignalR.Hubs.NotificationHub.ConvertUserTokenToUserRsn*
  commentId: Overload:Cqrs.WebApi.SignalR.Hubs.NotificationHub.ConvertUserTokenToUserRsn
  isExternal: false
  name: ConvertUserTokenToUserRsn
  nameWithType: NotificationHub.ConvertUserTokenToUserRsn
  fullName: Cqrs.WebApi.SignalR.Hubs.NotificationHub.ConvertUserTokenToUserRsn
- uid: System.Func{System.String,System.Guid}
  commentId: T:System.Func{System.String,System.Guid}
  parent: System
  definition: System.Func`2
  name: Func<String, Guid>
  nameWithType: Func<String, Guid>
  fullName: System.Func<System.String, System.Guid>
  nameWithType.vb: Func(Of String, Guid)
  fullName.vb: System.Func(Of System.String, System.Guid)
  name.vb: Func(Of String, Guid)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.SignalR.Hubs.HubBase.OnConnected
  commentId: M:Microsoft.AspNet.SignalR.Hubs.HubBase.OnConnected
  parent: Microsoft.AspNet.SignalR.Hubs.HubBase
  isExternal: true
  name: OnConnected()
  nameWithType: HubBase.OnConnected()
  fullName: Microsoft.AspNet.SignalR.Hubs.HubBase.OnConnected()
  spec.csharp:
  - uid: Microsoft.AspNet.SignalR.Hubs.HubBase.OnConnected
    name: OnConnected
    nameWithType: HubBase.OnConnected
    fullName: Microsoft.AspNet.SignalR.Hubs.HubBase.OnConnected
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.SignalR.Hubs.HubBase.OnConnected
    name: OnConnected
    nameWithType: HubBase.OnConnected
    fullName: Microsoft.AspNet.SignalR.Hubs.HubBase.OnConnected
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.WebApi.SignalR.Hubs.NotificationHub.OnConnected*
  commentId: Overload:Cqrs.WebApi.SignalR.Hubs.NotificationHub.OnConnected
  isExternal: false
  name: OnConnected
  nameWithType: NotificationHub.OnConnected
  fullName: Cqrs.WebApi.SignalR.Hubs.NotificationHub.OnConnected
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.AspNet.SignalR.Hubs.HubBase.OnReconnected
  commentId: M:Microsoft.AspNet.SignalR.Hubs.HubBase.OnReconnected
  parent: Microsoft.AspNet.SignalR.Hubs.HubBase
  isExternal: true
  name: OnReconnected()
  nameWithType: HubBase.OnReconnected()
  fullName: Microsoft.AspNet.SignalR.Hubs.HubBase.OnReconnected()
  spec.csharp:
  - uid: Microsoft.AspNet.SignalR.Hubs.HubBase.OnReconnected
    name: OnReconnected
    nameWithType: HubBase.OnReconnected
    fullName: Microsoft.AspNet.SignalR.Hubs.HubBase.OnReconnected
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.SignalR.Hubs.HubBase.OnReconnected
    name: OnReconnected
    nameWithType: HubBase.OnReconnected
    fullName: Microsoft.AspNet.SignalR.Hubs.HubBase.OnReconnected
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.WebApi.SignalR.Hubs.NotificationHub.OnReconnected*
  commentId: Overload:Cqrs.WebApi.SignalR.Hubs.NotificationHub.OnReconnected
  isExternal: false
  name: OnReconnected
  nameWithType: NotificationHub.OnReconnected
  fullName: Cqrs.WebApi.SignalR.Hubs.NotificationHub.OnReconnected
- uid: Microsoft.AspNet.SignalR.Hubs.HubCallerContext.RequestCookies
  commentId: P:Microsoft.AspNet.SignalR.Hubs.HubCallerContext.RequestCookies
- uid: Microsoft.AspNet.SignalR.Hubs.HubCallerContext.QueryString
  commentId: P:Microsoft.AspNet.SignalR.Hubs.HubCallerContext.QueryString
- uid: Cqrs.Configuration.IConfigurationManager.GetSetting(System.String)
  commentId: M:Cqrs.Configuration.IConfigurationManager.GetSetting(System.String)
  parent: Cqrs.Configuration.IConfigurationManager
  isExternal: true
  name: GetSetting(String)
  nameWithType: IConfigurationManager.GetSetting(String)
  fullName: Cqrs.Configuration.IConfigurationManager.GetSetting(System.String)
  spec.csharp:
  - uid: Cqrs.Configuration.IConfigurationManager.GetSetting(System.String)
    name: GetSetting
    nameWithType: IConfigurationManager.GetSetting
    fullName: Cqrs.Configuration.IConfigurationManager.GetSetting
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Configuration.IConfigurationManager.GetSetting(System.String)
    name: GetSetting
    nameWithType: IConfigurationManager.GetSetting
    fullName: Cqrs.Configuration.IConfigurationManager.GetSetting
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.WebApi.SignalR.Hubs.NotificationHub.UserToken*
  commentId: Overload:Cqrs.WebApi.SignalR.Hubs.NotificationHub.UserToken
  isExternal: false
  name: UserToken
  nameWithType: NotificationHub.UserToken
  fullName: Cqrs.WebApi.SignalR.Hubs.NotificationHub.UserToken
- uid: Cqrs.Configuration.IConfigurationManager
  commentId: T:Cqrs.Configuration.IConfigurationManager
  parent: Cqrs.Configuration
  isExternal: false
  name: IConfigurationManager
  nameWithType: IConfigurationManager
  fullName: Cqrs.Configuration.IConfigurationManager
- uid: Cqrs.Configuration
  commentId: N:Cqrs.Configuration
  isExternal: false
  name: Cqrs.Configuration
  nameWithType: Cqrs.Configuration
  fullName: Cqrs.Configuration
- uid: Microsoft.AspNet.SignalR.IHubContext.Groups
  commentId: P:Microsoft.AspNet.SignalR.IHubContext.Groups
- uid: Cqrs.WebApi.SignalR.Hubs.NotificationHub.Join*
  commentId: Overload:Cqrs.WebApi.SignalR.Hubs.NotificationHub.Join
  isExternal: false
  name: Join
  nameWithType: NotificationHub.Join
  fullName: Cqrs.WebApi.SignalR.Hubs.NotificationHub.Join
- uid: Microsoft.AspNet.SignalR.IHubContext
  commentId: T:Microsoft.AspNet.SignalR.IHubContext
  parent: Microsoft.AspNet.SignalR
  isExternal: true
  name: IHubContext
  nameWithType: IHubContext
  fullName: Microsoft.AspNet.SignalR.IHubContext
- uid: Cqrs.WebApi.SignalR.Hubs.NotificationHub.CurrentHub*
  commentId: Overload:Cqrs.WebApi.SignalR.Hubs.NotificationHub.CurrentHub
  isExternal: false
  name: CurrentHub
  nameWithType: NotificationHub.CurrentHub
  fullName: Cqrs.WebApi.SignalR.Hubs.NotificationHub.CurrentHub
- uid: Cqrs.WebApi.SignalR.Hubs.NotificationHub.Cqrs#WebApi#SignalR#Hubs#INotificationHub#SendUsersEvent*
  commentId: Overload:Cqrs.WebApi.SignalR.Hubs.NotificationHub.Cqrs#WebApi#SignalR#Hubs#INotificationHub#SendUsersEvent
  isExternal: false
  name: INotificationHub.SendUsersEvent
  nameWithType: NotificationHub.INotificationHub.SendUsersEvent
  fullName: Cqrs.WebApi.SignalR.Hubs.NotificationHub.Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendUsersEvent
  nameWithType.vb: NotificationHub.Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendUsersEvent
  name.vb: Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendUsersEvent
- uid: Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendUsersEvent``1(Cqrs.Events.IEvent{{TSingleSignOnToken}},System.Guid[])
  commentId: M:Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendUsersEvent``1(Cqrs.Events.IEvent{``0},System.Guid[])
  parent: Cqrs.WebApi.SignalR.Hubs.INotificationHub
  definition: Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendUsersEvent``1(Cqrs.Events.IEvent{``0},System.Guid[])
  name: SendUsersEvent<TSingleSignOnToken>(IEvent<TSingleSignOnToken>, Guid[])
  nameWithType: INotificationHub.SendUsersEvent<TSingleSignOnToken>(IEvent<TSingleSignOnToken>, Guid[])
  fullName: Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendUsersEvent<TSingleSignOnToken>(Cqrs.Events.IEvent<TSingleSignOnToken>, System.Guid[])
  nameWithType.vb: INotificationHub.SendUsersEvent(Of TSingleSignOnToken)(IEvent(Of TSingleSignOnToken), Guid())
  fullName.vb: Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendUsersEvent(Of TSingleSignOnToken)(Cqrs.Events.IEvent(Of TSingleSignOnToken), System.Guid())
  name.vb: SendUsersEvent(Of TSingleSignOnToken)(IEvent(Of TSingleSignOnToken), Guid())
  spec.csharp:
  - uid: Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendUsersEvent``1(Cqrs.Events.IEvent{``0},System.Guid[])
    name: SendUsersEvent<TSingleSignOnToken>
    nameWithType: INotificationHub.SendUsersEvent<TSingleSignOnToken>
    fullName: Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendUsersEvent<TSingleSignOnToken>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: <
    nameWithType: <
    fullName: <
  - name: TSingleSignOnToken
    nameWithType: TSingleSignOnToken
    fullName: TSingleSignOnToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendUsersEvent``1(Cqrs.Events.IEvent{``0},System.Guid[])
    name: SendUsersEvent(Of TSingleSignOnToken)
    nameWithType: INotificationHub.SendUsersEvent(Of TSingleSignOnToken)
    fullName: Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendUsersEvent(Of TSingleSignOnToken)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSingleSignOnToken
    nameWithType: TSingleSignOnToken
    fullName: TSingleSignOnToken
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Events.IEvent{{TSingleSignOnToken}}
  commentId: T:Cqrs.Events.IEvent{`0}
  parent: Cqrs.Events
  definition: Cqrs.Events.IEvent`1
  name: IEvent<TSingleSignOnToken>
  nameWithType: IEvent<TSingleSignOnToken>
  fullName: Cqrs.Events.IEvent<TSingleSignOnToken>
  nameWithType.vb: IEvent(Of TSingleSignOnToken)
  fullName.vb: Cqrs.Events.IEvent(Of TSingleSignOnToken)
  name.vb: IEvent(Of TSingleSignOnToken)
  spec.csharp:
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: <
    nameWithType: <
    fullName: <
  - name: TSingleSignOnToken
    nameWithType: TSingleSignOnToken
    fullName: TSingleSignOnToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSingleSignOnToken
    nameWithType: TSingleSignOnToken
    fullName: TSingleSignOnToken
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Guid[]
  name: Guid[]
  nameWithType: Guid[]
  fullName: System.Guid[]
  nameWithType.vb: Guid()
  fullName.vb: System.Guid()
  name.vb: Guid()
  spec.csharp:
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendUsersEvent``1(Cqrs.Events.IEvent{``0},System.Guid[])
  commentId: M:Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendUsersEvent``1(Cqrs.Events.IEvent{``0},System.Guid[])
  isExternal: true
  name: SendUsersEvent<TAuthenticationToken>(IEvent<TAuthenticationToken>, Guid[])
  nameWithType: INotificationHub.SendUsersEvent<TAuthenticationToken>(IEvent<TAuthenticationToken>, Guid[])
  fullName: Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendUsersEvent<TAuthenticationToken>(Cqrs.Events.IEvent<TAuthenticationToken>, System.Guid[])
  nameWithType.vb: INotificationHub.SendUsersEvent(Of TAuthenticationToken)(IEvent(Of TAuthenticationToken), Guid())
  fullName.vb: Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendUsersEvent(Of TAuthenticationToken)(Cqrs.Events.IEvent(Of TAuthenticationToken), System.Guid())
  name.vb: SendUsersEvent(Of TAuthenticationToken)(IEvent(Of TAuthenticationToken), Guid())
  spec.csharp:
  - uid: Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendUsersEvent``1(Cqrs.Events.IEvent{``0},System.Guid[])
    name: SendUsersEvent<TAuthenticationToken>
    nameWithType: INotificationHub.SendUsersEvent<TAuthenticationToken>
    fullName: Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendUsersEvent<TAuthenticationToken>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendUsersEvent``1(Cqrs.Events.IEvent{``0},System.Guid[])
    name: SendUsersEvent(Of TAuthenticationToken)
    nameWithType: INotificationHub.SendUsersEvent(Of TAuthenticationToken)
    fullName: Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendUsersEvent(Of TAuthenticationToken)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Events
  commentId: N:Cqrs.Events
  isExternal: false
  name: Cqrs.Events
  nameWithType: Cqrs.Events
  fullName: Cqrs.Events
- uid: Cqrs.WebApi.SignalR.Hubs.NotificationHub.Cqrs#WebApi#SignalR#Hubs#INotificationHub#SendUserEvent*
  commentId: Overload:Cqrs.WebApi.SignalR.Hubs.NotificationHub.Cqrs#WebApi#SignalR#Hubs#INotificationHub#SendUserEvent
  isExternal: false
  name: INotificationHub.SendUserEvent
  nameWithType: NotificationHub.INotificationHub.SendUserEvent
  fullName: Cqrs.WebApi.SignalR.Hubs.NotificationHub.Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendUserEvent
  nameWithType.vb: NotificationHub.Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendUserEvent
  name.vb: Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendUserEvent
- uid: Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendUserEvent``1(Cqrs.Events.IEvent{{TSingleSignOnToken}},System.String)
  commentId: M:Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendUserEvent``1(Cqrs.Events.IEvent{``0},System.String)
  parent: Cqrs.WebApi.SignalR.Hubs.INotificationHub
  definition: Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendUserEvent``1(Cqrs.Events.IEvent{``0},System.String)
  name: SendUserEvent<TSingleSignOnToken>(IEvent<TSingleSignOnToken>, String)
  nameWithType: INotificationHub.SendUserEvent<TSingleSignOnToken>(IEvent<TSingleSignOnToken>, String)
  fullName: Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendUserEvent<TSingleSignOnToken>(Cqrs.Events.IEvent<TSingleSignOnToken>, System.String)
  nameWithType.vb: INotificationHub.SendUserEvent(Of TSingleSignOnToken)(IEvent(Of TSingleSignOnToken), String)
  fullName.vb: Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendUserEvent(Of TSingleSignOnToken)(Cqrs.Events.IEvent(Of TSingleSignOnToken), System.String)
  name.vb: SendUserEvent(Of TSingleSignOnToken)(IEvent(Of TSingleSignOnToken), String)
  spec.csharp:
  - uid: Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendUserEvent``1(Cqrs.Events.IEvent{``0},System.String)
    name: SendUserEvent<TSingleSignOnToken>
    nameWithType: INotificationHub.SendUserEvent<TSingleSignOnToken>
    fullName: Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendUserEvent<TSingleSignOnToken>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: <
    nameWithType: <
    fullName: <
  - name: TSingleSignOnToken
    nameWithType: TSingleSignOnToken
    fullName: TSingleSignOnToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendUserEvent``1(Cqrs.Events.IEvent{``0},System.String)
    name: SendUserEvent(Of TSingleSignOnToken)
    nameWithType: INotificationHub.SendUserEvent(Of TSingleSignOnToken)
    fullName: Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendUserEvent(Of TSingleSignOnToken)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSingleSignOnToken
    nameWithType: TSingleSignOnToken
    fullName: TSingleSignOnToken
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendUserEvent``1(Cqrs.Events.IEvent{``0},System.String)
  commentId: M:Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendUserEvent``1(Cqrs.Events.IEvent{``0},System.String)
  isExternal: true
  name: SendUserEvent<TAuthenticationToken>(IEvent<TAuthenticationToken>, String)
  nameWithType: INotificationHub.SendUserEvent<TAuthenticationToken>(IEvent<TAuthenticationToken>, String)
  fullName: Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendUserEvent<TAuthenticationToken>(Cqrs.Events.IEvent<TAuthenticationToken>, System.String)
  nameWithType.vb: INotificationHub.SendUserEvent(Of TAuthenticationToken)(IEvent(Of TAuthenticationToken), String)
  fullName.vb: Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendUserEvent(Of TAuthenticationToken)(Cqrs.Events.IEvent(Of TAuthenticationToken), System.String)
  name.vb: SendUserEvent(Of TAuthenticationToken)(IEvent(Of TAuthenticationToken), String)
  spec.csharp:
  - uid: Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendUserEvent``1(Cqrs.Events.IEvent{``0},System.String)
    name: SendUserEvent<TAuthenticationToken>
    nameWithType: INotificationHub.SendUserEvent<TAuthenticationToken>
    fullName: Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendUserEvent<TAuthenticationToken>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendUserEvent``1(Cqrs.Events.IEvent{``0},System.String)
    name: SendUserEvent(Of TAuthenticationToken)
    nameWithType: INotificationHub.SendUserEvent(Of TAuthenticationToken)
    fullName: Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendUserEvent(Of TAuthenticationToken)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.WebApi.SignalR.Hubs.NotificationHub.Cqrs#WebApi#SignalR#Hubs#INotificationHub#SendAllUsersEvent*
  commentId: Overload:Cqrs.WebApi.SignalR.Hubs.NotificationHub.Cqrs#WebApi#SignalR#Hubs#INotificationHub#SendAllUsersEvent
  isExternal: false
  name: INotificationHub.SendAllUsersEvent
  nameWithType: NotificationHub.INotificationHub.SendAllUsersEvent
  fullName: Cqrs.WebApi.SignalR.Hubs.NotificationHub.Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendAllUsersEvent
  nameWithType.vb: NotificationHub.Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendAllUsersEvent
  name.vb: Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendAllUsersEvent
- uid: Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendAllUsersEvent``1(Cqrs.Events.IEvent{{TSingleSignOnToken}})
  commentId: M:Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendAllUsersEvent``1(Cqrs.Events.IEvent{``0})
  parent: Cqrs.WebApi.SignalR.Hubs.INotificationHub
  definition: Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendAllUsersEvent``1(Cqrs.Events.IEvent{``0})
  name: SendAllUsersEvent<TSingleSignOnToken>(IEvent<TSingleSignOnToken>)
  nameWithType: INotificationHub.SendAllUsersEvent<TSingleSignOnToken>(IEvent<TSingleSignOnToken>)
  fullName: Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendAllUsersEvent<TSingleSignOnToken>(Cqrs.Events.IEvent<TSingleSignOnToken>)
  nameWithType.vb: INotificationHub.SendAllUsersEvent(Of TSingleSignOnToken)(IEvent(Of TSingleSignOnToken))
  fullName.vb: Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendAllUsersEvent(Of TSingleSignOnToken)(Cqrs.Events.IEvent(Of TSingleSignOnToken))
  name.vb: SendAllUsersEvent(Of TSingleSignOnToken)(IEvent(Of TSingleSignOnToken))
  spec.csharp:
  - uid: Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendAllUsersEvent``1(Cqrs.Events.IEvent{``0})
    name: SendAllUsersEvent<TSingleSignOnToken>
    nameWithType: INotificationHub.SendAllUsersEvent<TSingleSignOnToken>
    fullName: Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendAllUsersEvent<TSingleSignOnToken>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: <
    nameWithType: <
    fullName: <
  - name: TSingleSignOnToken
    nameWithType: TSingleSignOnToken
    fullName: TSingleSignOnToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendAllUsersEvent``1(Cqrs.Events.IEvent{``0})
    name: SendAllUsersEvent(Of TSingleSignOnToken)
    nameWithType: INotificationHub.SendAllUsersEvent(Of TSingleSignOnToken)
    fullName: Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendAllUsersEvent(Of TSingleSignOnToken)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSingleSignOnToken
    nameWithType: TSingleSignOnToken
    fullName: TSingleSignOnToken
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendAllUsersEvent``1(Cqrs.Events.IEvent{``0})
  commentId: M:Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendAllUsersEvent``1(Cqrs.Events.IEvent{``0})
  isExternal: false
  name: SendAllUsersEvent<TAuthenticationToken>(IEvent<TAuthenticationToken>)
  nameWithType: INotificationHub.SendAllUsersEvent<TAuthenticationToken>(IEvent<TAuthenticationToken>)
  fullName: Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendAllUsersEvent<TAuthenticationToken>(Cqrs.Events.IEvent<TAuthenticationToken>)
  nameWithType.vb: INotificationHub.SendAllUsersEvent(Of TAuthenticationToken)(IEvent(Of TAuthenticationToken))
  fullName.vb: Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendAllUsersEvent(Of TAuthenticationToken)(Cqrs.Events.IEvent(Of TAuthenticationToken))
  name.vb: SendAllUsersEvent(Of TAuthenticationToken)(IEvent(Of TAuthenticationToken))
  spec.csharp:
  - uid: Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendAllUsersEvent``1(Cqrs.Events.IEvent{``0})
    name: SendAllUsersEvent<TAuthenticationToken>
    nameWithType: INotificationHub.SendAllUsersEvent<TAuthenticationToken>
    fullName: Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendAllUsersEvent<TAuthenticationToken>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendAllUsersEvent``1(Cqrs.Events.IEvent{``0})
    name: SendAllUsersEvent(Of TAuthenticationToken)
    nameWithType: INotificationHub.SendAllUsersEvent(Of TAuthenticationToken)
    fullName: Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendAllUsersEvent(Of TAuthenticationToken)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.WebApi.SignalR.Hubs.NotificationHub.Cqrs#WebApi#SignalR#Hubs#INotificationHub#SendExceptThisUserEvent*
  commentId: Overload:Cqrs.WebApi.SignalR.Hubs.NotificationHub.Cqrs#WebApi#SignalR#Hubs#INotificationHub#SendExceptThisUserEvent
  isExternal: false
  name: INotificationHub.SendExceptThisUserEvent
  nameWithType: NotificationHub.INotificationHub.SendExceptThisUserEvent
  fullName: Cqrs.WebApi.SignalR.Hubs.NotificationHub.Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendExceptThisUserEvent
  nameWithType.vb: NotificationHub.Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendExceptThisUserEvent
  name.vb: Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendExceptThisUserEvent
- uid: Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendExceptThisUserEvent``1(Cqrs.Events.IEvent{{TSingleSignOnToken}},System.String)
  commentId: M:Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendExceptThisUserEvent``1(Cqrs.Events.IEvent{``0},System.String)
  parent: Cqrs.WebApi.SignalR.Hubs.INotificationHub
  definition: Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendExceptThisUserEvent``1(Cqrs.Events.IEvent{``0},System.String)
  name: SendExceptThisUserEvent<TSingleSignOnToken>(IEvent<TSingleSignOnToken>, String)
  nameWithType: INotificationHub.SendExceptThisUserEvent<TSingleSignOnToken>(IEvent<TSingleSignOnToken>, String)
  fullName: Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendExceptThisUserEvent<TSingleSignOnToken>(Cqrs.Events.IEvent<TSingleSignOnToken>, System.String)
  nameWithType.vb: INotificationHub.SendExceptThisUserEvent(Of TSingleSignOnToken)(IEvent(Of TSingleSignOnToken), String)
  fullName.vb: Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendExceptThisUserEvent(Of TSingleSignOnToken)(Cqrs.Events.IEvent(Of TSingleSignOnToken), System.String)
  name.vb: SendExceptThisUserEvent(Of TSingleSignOnToken)(IEvent(Of TSingleSignOnToken), String)
  spec.csharp:
  - uid: Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendExceptThisUserEvent``1(Cqrs.Events.IEvent{``0},System.String)
    name: SendExceptThisUserEvent<TSingleSignOnToken>
    nameWithType: INotificationHub.SendExceptThisUserEvent<TSingleSignOnToken>
    fullName: Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendExceptThisUserEvent<TSingleSignOnToken>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: <
    nameWithType: <
    fullName: <
  - name: TSingleSignOnToken
    nameWithType: TSingleSignOnToken
    fullName: TSingleSignOnToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendExceptThisUserEvent``1(Cqrs.Events.IEvent{``0},System.String)
    name: SendExceptThisUserEvent(Of TSingleSignOnToken)
    nameWithType: INotificationHub.SendExceptThisUserEvent(Of TSingleSignOnToken)
    fullName: Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendExceptThisUserEvent(Of TSingleSignOnToken)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSingleSignOnToken
    nameWithType: TSingleSignOnToken
    fullName: TSingleSignOnToken
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendExceptThisUserEvent``1(Cqrs.Events.IEvent{``0},System.String)
  commentId: M:Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendExceptThisUserEvent``1(Cqrs.Events.IEvent{``0},System.String)
  isExternal: true
  name: SendExceptThisUserEvent<TAuthenticationToken>(IEvent<TAuthenticationToken>, String)
  nameWithType: INotificationHub.SendExceptThisUserEvent<TAuthenticationToken>(IEvent<TAuthenticationToken>, String)
  fullName: Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendExceptThisUserEvent<TAuthenticationToken>(Cqrs.Events.IEvent<TAuthenticationToken>, System.String)
  nameWithType.vb: INotificationHub.SendExceptThisUserEvent(Of TAuthenticationToken)(IEvent(Of TAuthenticationToken), String)
  fullName.vb: Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendExceptThisUserEvent(Of TAuthenticationToken)(Cqrs.Events.IEvent(Of TAuthenticationToken), System.String)
  name.vb: SendExceptThisUserEvent(Of TAuthenticationToken)(IEvent(Of TAuthenticationToken), String)
  spec.csharp:
  - uid: Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendExceptThisUserEvent``1(Cqrs.Events.IEvent{``0},System.String)
    name: SendExceptThisUserEvent<TAuthenticationToken>
    nameWithType: INotificationHub.SendExceptThisUserEvent<TAuthenticationToken>
    fullName: Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendExceptThisUserEvent<TAuthenticationToken>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendExceptThisUserEvent``1(Cqrs.Events.IEvent{``0},System.String)
    name: SendExceptThisUserEvent(Of TAuthenticationToken)
    nameWithType: INotificationHub.SendExceptThisUserEvent(Of TAuthenticationToken)
    fullName: Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendExceptThisUserEvent(Of TAuthenticationToken)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.WebApi.SignalR.Hubs.NotificationHub.Cqrs#WebApi#SignalR#Hubs#ISingleSignOnTokenNotificationHub#SendUserEvent*
  commentId: Overload:Cqrs.WebApi.SignalR.Hubs.NotificationHub.Cqrs#WebApi#SignalR#Hubs#ISingleSignOnTokenNotificationHub#SendUserEvent
  isExternal: false
  name: ISingleSignOnTokenNotificationHub.SendUserEvent
  nameWithType: NotificationHub.ISingleSignOnTokenNotificationHub.SendUserEvent
  fullName: Cqrs.WebApi.SignalR.Hubs.NotificationHub.Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub.SendUserEvent
  nameWithType.vb: NotificationHub.Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub.SendUserEvent
  name.vb: Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub.SendUserEvent
- uid: Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub.SendUserEvent``1(Cqrs.Events.IEvent{{TSingleSignOnToken}},System.String)
  commentId: M:Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub.SendUserEvent``1(Cqrs.Events.IEvent{``0},System.String)
  parent: Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub
  definition: Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub.SendUserEvent``1(Cqrs.Events.IEvent{``0},System.String)
  name: SendUserEvent<TSingleSignOnToken>(IEvent<TSingleSignOnToken>, String)
  nameWithType: ISingleSignOnTokenNotificationHub.SendUserEvent<TSingleSignOnToken>(IEvent<TSingleSignOnToken>, String)
  fullName: Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub.SendUserEvent<TSingleSignOnToken>(Cqrs.Events.IEvent<TSingleSignOnToken>, System.String)
  nameWithType.vb: ISingleSignOnTokenNotificationHub.SendUserEvent(Of TSingleSignOnToken)(IEvent(Of TSingleSignOnToken), String)
  fullName.vb: Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub.SendUserEvent(Of TSingleSignOnToken)(Cqrs.Events.IEvent(Of TSingleSignOnToken), System.String)
  name.vb: SendUserEvent(Of TSingleSignOnToken)(IEvent(Of TSingleSignOnToken), String)
  spec.csharp:
  - uid: Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub.SendUserEvent``1(Cqrs.Events.IEvent{``0},System.String)
    name: SendUserEvent<TSingleSignOnToken>
    nameWithType: ISingleSignOnTokenNotificationHub.SendUserEvent<TSingleSignOnToken>
    fullName: Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub.SendUserEvent<TSingleSignOnToken>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: <
    nameWithType: <
    fullName: <
  - name: TSingleSignOnToken
    nameWithType: TSingleSignOnToken
    fullName: TSingleSignOnToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub.SendUserEvent``1(Cqrs.Events.IEvent{``0},System.String)
    name: SendUserEvent(Of TSingleSignOnToken)
    nameWithType: ISingleSignOnTokenNotificationHub.SendUserEvent(Of TSingleSignOnToken)
    fullName: Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub.SendUserEvent(Of TSingleSignOnToken)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSingleSignOnToken
    nameWithType: TSingleSignOnToken
    fullName: TSingleSignOnToken
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub.SendUserEvent``1(Cqrs.Events.IEvent{``0},System.String)
  commentId: M:Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub.SendUserEvent``1(Cqrs.Events.IEvent{``0},System.String)
  isExternal: true
  name: SendUserEvent<TSingleSignOnToken>(IEvent<TSingleSignOnToken>, String)
  nameWithType: ISingleSignOnTokenNotificationHub.SendUserEvent<TSingleSignOnToken>(IEvent<TSingleSignOnToken>, String)
  fullName: Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub.SendUserEvent<TSingleSignOnToken>(Cqrs.Events.IEvent<TSingleSignOnToken>, System.String)
  nameWithType.vb: ISingleSignOnTokenNotificationHub.SendUserEvent(Of TSingleSignOnToken)(IEvent(Of TSingleSignOnToken), String)
  fullName.vb: Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub.SendUserEvent(Of TSingleSignOnToken)(Cqrs.Events.IEvent(Of TSingleSignOnToken), System.String)
  name.vb: SendUserEvent(Of TSingleSignOnToken)(IEvent(Of TSingleSignOnToken), String)
  spec.csharp:
  - uid: Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub.SendUserEvent``1(Cqrs.Events.IEvent{``0},System.String)
    name: SendUserEvent<TSingleSignOnToken>
    nameWithType: ISingleSignOnTokenNotificationHub.SendUserEvent<TSingleSignOnToken>
    fullName: Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub.SendUserEvent<TSingleSignOnToken>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: <
    nameWithType: <
    fullName: <
  - name: TSingleSignOnToken
    nameWithType: TSingleSignOnToken
    fullName: TSingleSignOnToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub.SendUserEvent``1(Cqrs.Events.IEvent{``0},System.String)
    name: SendUserEvent(Of TSingleSignOnToken)
    nameWithType: ISingleSignOnTokenNotificationHub.SendUserEvent(Of TSingleSignOnToken)
    fullName: Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub.SendUserEvent(Of TSingleSignOnToken)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSingleSignOnToken
    nameWithType: TSingleSignOnToken
    fullName: TSingleSignOnToken
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.WebApi.SignalR.Hubs.NotificationHub.Cqrs#WebApi#SignalR#Hubs#ISingleSignOnTokenNotificationHub#SendAllUsersEvent*
  commentId: Overload:Cqrs.WebApi.SignalR.Hubs.NotificationHub.Cqrs#WebApi#SignalR#Hubs#ISingleSignOnTokenNotificationHub#SendAllUsersEvent
  isExternal: false
  name: ISingleSignOnTokenNotificationHub.SendAllUsersEvent
  nameWithType: NotificationHub.ISingleSignOnTokenNotificationHub.SendAllUsersEvent
  fullName: Cqrs.WebApi.SignalR.Hubs.NotificationHub.Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub.SendAllUsersEvent
  nameWithType.vb: NotificationHub.Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub.SendAllUsersEvent
  name.vb: Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub.SendAllUsersEvent
- uid: Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub.SendAllUsersEvent``1(Cqrs.Events.IEvent{{TSingleSignOnToken}})
  commentId: M:Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub.SendAllUsersEvent``1(Cqrs.Events.IEvent{``0})
  parent: Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub
  definition: Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub.SendAllUsersEvent``1(Cqrs.Events.IEvent{``0})
  name: SendAllUsersEvent<TSingleSignOnToken>(IEvent<TSingleSignOnToken>)
  nameWithType: ISingleSignOnTokenNotificationHub.SendAllUsersEvent<TSingleSignOnToken>(IEvent<TSingleSignOnToken>)
  fullName: Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub.SendAllUsersEvent<TSingleSignOnToken>(Cqrs.Events.IEvent<TSingleSignOnToken>)
  nameWithType.vb: ISingleSignOnTokenNotificationHub.SendAllUsersEvent(Of TSingleSignOnToken)(IEvent(Of TSingleSignOnToken))
  fullName.vb: Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub.SendAllUsersEvent(Of TSingleSignOnToken)(Cqrs.Events.IEvent(Of TSingleSignOnToken))
  name.vb: SendAllUsersEvent(Of TSingleSignOnToken)(IEvent(Of TSingleSignOnToken))
  spec.csharp:
  - uid: Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub.SendAllUsersEvent``1(Cqrs.Events.IEvent{``0})
    name: SendAllUsersEvent<TSingleSignOnToken>
    nameWithType: ISingleSignOnTokenNotificationHub.SendAllUsersEvent<TSingleSignOnToken>
    fullName: Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub.SendAllUsersEvent<TSingleSignOnToken>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: <
    nameWithType: <
    fullName: <
  - name: TSingleSignOnToken
    nameWithType: TSingleSignOnToken
    fullName: TSingleSignOnToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub.SendAllUsersEvent``1(Cqrs.Events.IEvent{``0})
    name: SendAllUsersEvent(Of TSingleSignOnToken)
    nameWithType: ISingleSignOnTokenNotificationHub.SendAllUsersEvent(Of TSingleSignOnToken)
    fullName: Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub.SendAllUsersEvent(Of TSingleSignOnToken)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSingleSignOnToken
    nameWithType: TSingleSignOnToken
    fullName: TSingleSignOnToken
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub.SendAllUsersEvent``1(Cqrs.Events.IEvent{``0})
  commentId: M:Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub.SendAllUsersEvent``1(Cqrs.Events.IEvent{``0})
  isExternal: false
  name: SendAllUsersEvent<TSingleSignOnToken>(IEvent<TSingleSignOnToken>)
  nameWithType: ISingleSignOnTokenNotificationHub.SendAllUsersEvent<TSingleSignOnToken>(IEvent<TSingleSignOnToken>)
  fullName: Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub.SendAllUsersEvent<TSingleSignOnToken>(Cqrs.Events.IEvent<TSingleSignOnToken>)
  nameWithType.vb: ISingleSignOnTokenNotificationHub.SendAllUsersEvent(Of TSingleSignOnToken)(IEvent(Of TSingleSignOnToken))
  fullName.vb: Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub.SendAllUsersEvent(Of TSingleSignOnToken)(Cqrs.Events.IEvent(Of TSingleSignOnToken))
  name.vb: SendAllUsersEvent(Of TSingleSignOnToken)(IEvent(Of TSingleSignOnToken))
  spec.csharp:
  - uid: Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub.SendAllUsersEvent``1(Cqrs.Events.IEvent{``0})
    name: SendAllUsersEvent<TSingleSignOnToken>
    nameWithType: ISingleSignOnTokenNotificationHub.SendAllUsersEvent<TSingleSignOnToken>
    fullName: Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub.SendAllUsersEvent<TSingleSignOnToken>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: <
    nameWithType: <
    fullName: <
  - name: TSingleSignOnToken
    nameWithType: TSingleSignOnToken
    fullName: TSingleSignOnToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub.SendAllUsersEvent``1(Cqrs.Events.IEvent{``0})
    name: SendAllUsersEvent(Of TSingleSignOnToken)
    nameWithType: ISingleSignOnTokenNotificationHub.SendAllUsersEvent(Of TSingleSignOnToken)
    fullName: Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub.SendAllUsersEvent(Of TSingleSignOnToken)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSingleSignOnToken
    nameWithType: TSingleSignOnToken
    fullName: TSingleSignOnToken
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.WebApi.SignalR.Hubs.NotificationHub.Cqrs#WebApi#SignalR#Hubs#ISingleSignOnTokenNotificationHub#SendExceptThisUserEvent*
  commentId: Overload:Cqrs.WebApi.SignalR.Hubs.NotificationHub.Cqrs#WebApi#SignalR#Hubs#ISingleSignOnTokenNotificationHub#SendExceptThisUserEvent
  isExternal: false
  name: ISingleSignOnTokenNotificationHub.SendExceptThisUserEvent
  nameWithType: NotificationHub.ISingleSignOnTokenNotificationHub.SendExceptThisUserEvent
  fullName: Cqrs.WebApi.SignalR.Hubs.NotificationHub.Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub.SendExceptThisUserEvent
  nameWithType.vb: NotificationHub.Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub.SendExceptThisUserEvent
  name.vb: Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub.SendExceptThisUserEvent
- uid: Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub.SendExceptThisUserEvent``1(Cqrs.Events.IEvent{{TSingleSignOnToken}},System.String)
  commentId: M:Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub.SendExceptThisUserEvent``1(Cqrs.Events.IEvent{``0},System.String)
  parent: Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub
  definition: Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub.SendExceptThisUserEvent``1(Cqrs.Events.IEvent{``0},System.String)
  name: SendExceptThisUserEvent<TSingleSignOnToken>(IEvent<TSingleSignOnToken>, String)
  nameWithType: ISingleSignOnTokenNotificationHub.SendExceptThisUserEvent<TSingleSignOnToken>(IEvent<TSingleSignOnToken>, String)
  fullName: Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub.SendExceptThisUserEvent<TSingleSignOnToken>(Cqrs.Events.IEvent<TSingleSignOnToken>, System.String)
  nameWithType.vb: ISingleSignOnTokenNotificationHub.SendExceptThisUserEvent(Of TSingleSignOnToken)(IEvent(Of TSingleSignOnToken), String)
  fullName.vb: Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub.SendExceptThisUserEvent(Of TSingleSignOnToken)(Cqrs.Events.IEvent(Of TSingleSignOnToken), System.String)
  name.vb: SendExceptThisUserEvent(Of TSingleSignOnToken)(IEvent(Of TSingleSignOnToken), String)
  spec.csharp:
  - uid: Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub.SendExceptThisUserEvent``1(Cqrs.Events.IEvent{``0},System.String)
    name: SendExceptThisUserEvent<TSingleSignOnToken>
    nameWithType: ISingleSignOnTokenNotificationHub.SendExceptThisUserEvent<TSingleSignOnToken>
    fullName: Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub.SendExceptThisUserEvent<TSingleSignOnToken>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: <
    nameWithType: <
    fullName: <
  - name: TSingleSignOnToken
    nameWithType: TSingleSignOnToken
    fullName: TSingleSignOnToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub.SendExceptThisUserEvent``1(Cqrs.Events.IEvent{``0},System.String)
    name: SendExceptThisUserEvent(Of TSingleSignOnToken)
    nameWithType: ISingleSignOnTokenNotificationHub.SendExceptThisUserEvent(Of TSingleSignOnToken)
    fullName: Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub.SendExceptThisUserEvent(Of TSingleSignOnToken)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSingleSignOnToken
    nameWithType: TSingleSignOnToken
    fullName: TSingleSignOnToken
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub.SendExceptThisUserEvent``1(Cqrs.Events.IEvent{``0},System.String)
  commentId: M:Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub.SendExceptThisUserEvent``1(Cqrs.Events.IEvent{``0},System.String)
  isExternal: true
  name: SendExceptThisUserEvent<TSingleSignOnToken>(IEvent<TSingleSignOnToken>, String)
  nameWithType: ISingleSignOnTokenNotificationHub.SendExceptThisUserEvent<TSingleSignOnToken>(IEvent<TSingleSignOnToken>, String)
  fullName: Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub.SendExceptThisUserEvent<TSingleSignOnToken>(Cqrs.Events.IEvent<TSingleSignOnToken>, System.String)
  nameWithType.vb: ISingleSignOnTokenNotificationHub.SendExceptThisUserEvent(Of TSingleSignOnToken)(IEvent(Of TSingleSignOnToken), String)
  fullName.vb: Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub.SendExceptThisUserEvent(Of TSingleSignOnToken)(Cqrs.Events.IEvent(Of TSingleSignOnToken), System.String)
  name.vb: SendExceptThisUserEvent(Of TSingleSignOnToken)(IEvent(Of TSingleSignOnToken), String)
  spec.csharp:
  - uid: Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub.SendExceptThisUserEvent``1(Cqrs.Events.IEvent{``0},System.String)
    name: SendExceptThisUserEvent<TSingleSignOnToken>
    nameWithType: ISingleSignOnTokenNotificationHub.SendExceptThisUserEvent<TSingleSignOnToken>
    fullName: Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub.SendExceptThisUserEvent<TSingleSignOnToken>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: <
    nameWithType: <
    fullName: <
  - name: TSingleSignOnToken
    nameWithType: TSingleSignOnToken
    fullName: TSingleSignOnToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub.SendExceptThisUserEvent``1(Cqrs.Events.IEvent{``0},System.String)
    name: SendExceptThisUserEvent(Of TSingleSignOnToken)
    nameWithType: ISingleSignOnTokenNotificationHub.SendExceptThisUserEvent(Of TSingleSignOnToken)
    fullName: Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub.SendExceptThisUserEvent(Of TSingleSignOnToken)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSingleSignOnToken
    nameWithType: TSingleSignOnToken
    fullName: TSingleSignOnToken
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.WebApi.SignalR.Hubs.NotificationHub.Cqrs#WebApi#SignalR#Hubs#ISingleSignOnTokenNotificationHub#SendUsersEvent*
  commentId: Overload:Cqrs.WebApi.SignalR.Hubs.NotificationHub.Cqrs#WebApi#SignalR#Hubs#ISingleSignOnTokenNotificationHub#SendUsersEvent
  isExternal: false
  name: ISingleSignOnTokenNotificationHub.SendUsersEvent
  nameWithType: NotificationHub.ISingleSignOnTokenNotificationHub.SendUsersEvent
  fullName: Cqrs.WebApi.SignalR.Hubs.NotificationHub.Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub.SendUsersEvent
  nameWithType.vb: NotificationHub.Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub.SendUsersEvent
  name.vb: Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub.SendUsersEvent
- uid: Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub.SendUsersEvent``1(Cqrs.Events.IEvent{{TSingleSignOnToken}},System.Guid[])
  commentId: M:Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub.SendUsersEvent``1(Cqrs.Events.IEvent{``0},System.Guid[])
  parent: Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub
  definition: Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub.SendUsersEvent``1(Cqrs.Events.IEvent{``0},System.Guid[])
  name: SendUsersEvent<TSingleSignOnToken>(IEvent<TSingleSignOnToken>, Guid[])
  nameWithType: ISingleSignOnTokenNotificationHub.SendUsersEvent<TSingleSignOnToken>(IEvent<TSingleSignOnToken>, Guid[])
  fullName: Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub.SendUsersEvent<TSingleSignOnToken>(Cqrs.Events.IEvent<TSingleSignOnToken>, System.Guid[])
  nameWithType.vb: ISingleSignOnTokenNotificationHub.SendUsersEvent(Of TSingleSignOnToken)(IEvent(Of TSingleSignOnToken), Guid())
  fullName.vb: Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub.SendUsersEvent(Of TSingleSignOnToken)(Cqrs.Events.IEvent(Of TSingleSignOnToken), System.Guid())
  name.vb: SendUsersEvent(Of TSingleSignOnToken)(IEvent(Of TSingleSignOnToken), Guid())
  spec.csharp:
  - uid: Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub.SendUsersEvent``1(Cqrs.Events.IEvent{``0},System.Guid[])
    name: SendUsersEvent<TSingleSignOnToken>
    nameWithType: ISingleSignOnTokenNotificationHub.SendUsersEvent<TSingleSignOnToken>
    fullName: Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub.SendUsersEvent<TSingleSignOnToken>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: <
    nameWithType: <
    fullName: <
  - name: TSingleSignOnToken
    nameWithType: TSingleSignOnToken
    fullName: TSingleSignOnToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub.SendUsersEvent``1(Cqrs.Events.IEvent{``0},System.Guid[])
    name: SendUsersEvent(Of TSingleSignOnToken)
    nameWithType: ISingleSignOnTokenNotificationHub.SendUsersEvent(Of TSingleSignOnToken)
    fullName: Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub.SendUsersEvent(Of TSingleSignOnToken)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSingleSignOnToken
    nameWithType: TSingleSignOnToken
    fullName: TSingleSignOnToken
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub.SendUsersEvent``1(Cqrs.Events.IEvent{``0},System.Guid[])
  commentId: M:Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub.SendUsersEvent``1(Cqrs.Events.IEvent{``0},System.Guid[])
  isExternal: true
  name: SendUsersEvent<TSingleSignOnToken>(IEvent<TSingleSignOnToken>, Guid[])
  nameWithType: ISingleSignOnTokenNotificationHub.SendUsersEvent<TSingleSignOnToken>(IEvent<TSingleSignOnToken>, Guid[])
  fullName: Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub.SendUsersEvent<TSingleSignOnToken>(Cqrs.Events.IEvent<TSingleSignOnToken>, System.Guid[])
  nameWithType.vb: ISingleSignOnTokenNotificationHub.SendUsersEvent(Of TSingleSignOnToken)(IEvent(Of TSingleSignOnToken), Guid())
  fullName.vb: Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub.SendUsersEvent(Of TSingleSignOnToken)(Cqrs.Events.IEvent(Of TSingleSignOnToken), System.Guid())
  name.vb: SendUsersEvent(Of TSingleSignOnToken)(IEvent(Of TSingleSignOnToken), Guid())
  spec.csharp:
  - uid: Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub.SendUsersEvent``1(Cqrs.Events.IEvent{``0},System.Guid[])
    name: SendUsersEvent<TSingleSignOnToken>
    nameWithType: ISingleSignOnTokenNotificationHub.SendUsersEvent<TSingleSignOnToken>
    fullName: Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub.SendUsersEvent<TSingleSignOnToken>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: <
    nameWithType: <
    fullName: <
  - name: TSingleSignOnToken
    nameWithType: TSingleSignOnToken
    fullName: TSingleSignOnToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub.SendUsersEvent``1(Cqrs.Events.IEvent{``0},System.Guid[])
    name: SendUsersEvent(Of TSingleSignOnToken)
    nameWithType: ISingleSignOnTokenNotificationHub.SendUsersEvent(Of TSingleSignOnToken)
    fullName: Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub.SendUsersEvent(Of TSingleSignOnToken)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSingleSignOnToken
    nameWithType: TSingleSignOnToken
    fullName: TSingleSignOnToken
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.WebApi.SignalR.Hubs.NotificationHub.GetAdditionalDataForLogging*
  commentId: Overload:Cqrs.WebApi.SignalR.Hubs.NotificationHub.GetAdditionalDataForLogging
  isExternal: false
  name: GetAdditionalDataForLogging
  nameWithType: NotificationHub.GetAdditionalDataForLogging
  fullName: Cqrs.WebApi.SignalR.Hubs.NotificationHub.GetAdditionalDataForLogging
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, Object>
  nameWithType: IDictionary<String, Object>
  fullName: System.Collections.Generic.IDictionary<System.String, System.Object>
  nameWithType.vb: IDictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, System.Object)
  name.vb: IDictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
