### YamlMime:ManagedReference
items:
- uid: Cqrs.Events.IEventDeserialiser`1
  commentId: T:Cqrs.Events.IEventDeserialiser`1
  id: IEventDeserialiser`1
  parent: Cqrs.Events
  children:
  - Cqrs.Events.IEventDeserialiser`1.Deserialise(Cqrs.Events.EventData)
  langs:
  - csharp
  - vb
  name: IEventDeserialiser<TAuthenticationToken>
  nameWithType: IEventDeserialiser<TAuthenticationToken>
  fullName: Cqrs.Events.IEventDeserialiser<TAuthenticationToken>
  type: Interface
  source:
    remote:
      path: Framework/Cqrs/Events/IEventDeserialiser.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: IEventDeserialiser
    path: Framework/Cqrs/Events/IEventDeserialiser.cs
    startLine: 16
  assemblies:
  - Cqrs
  namespace: Cqrs.Events
  summary: "\nDeserialises <xref href=\"Cqrs.Events.IEvent%601\" data-throw-if-not-resolved=\"false\"></xref> from a serialised state.\n"
  example: []
  syntax:
    content: public interface IEventDeserialiser<TAuthenticationToken>
    typeParameters:
    - id: TAuthenticationToken
      description: The <xref href="System.Type" data-throw-if-not-resolved="false"></xref> of the authentication token.
    content.vb: Public Interface IEventDeserialiser(Of TAuthenticationToken)
  nameWithType.vb: IEventDeserialiser(Of TAuthenticationToken)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: Cqrs.Events.IEventDeserialiser(Of TAuthenticationToken)
  name.vb: IEventDeserialiser(Of TAuthenticationToken)
- uid: Cqrs.Events.IEventDeserialiser`1.Deserialise(Cqrs.Events.EventData)
  commentId: M:Cqrs.Events.IEventDeserialiser`1.Deserialise(Cqrs.Events.EventData)
  id: Deserialise(Cqrs.Events.EventData)
  parent: Cqrs.Events.IEventDeserialiser`1
  langs:
  - csharp
  - vb
  name: Deserialise(EventData)
  nameWithType: IEventDeserialiser<TAuthenticationToken>.Deserialise(EventData)
  fullName: Cqrs.Events.IEventDeserialiser<TAuthenticationToken>.Deserialise(Cqrs.Events.EventData)
  type: Method
  source:
    remote:
      path: Framework/Cqrs/Events/IEventDeserialiser.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Deserialise
    path: Framework/Cqrs/Events/IEventDeserialiser.cs
    startLine: 22
  assemblies:
  - Cqrs
  namespace: Cqrs.Events
  summary: "\nDeserialise the provided <span class=\"paramref\">eventData</span> into an <xref href=\"Cqrs.Events.IEvent%601\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: IEvent<TAuthenticationToken> Deserialise(EventData eventData)
    parameters:
    - id: eventData
      type: Cqrs.Events.EventData
      description: The <xref href="Cqrs.Events.EventData" data-throw-if-not-resolved="false"></xref> to Deserialise.
    return:
      type: Cqrs.Events.IEvent{{TAuthenticationToken}}
    content.vb: Function Deserialise(eventData As EventData) As IEvent(Of TAuthenticationToken)
  overload: Cqrs.Events.IEventDeserialiser`1.Deserialise*
  nameWithType.vb: IEventDeserialiser(Of TAuthenticationToken).Deserialise(EventData)
  fullName.vb: Cqrs.Events.IEventDeserialiser(Of TAuthenticationToken).Deserialise(Cqrs.Events.EventData)
references:
- uid: Cqrs.Events.IEvent`1
  commentId: T:Cqrs.Events.IEvent`1
  isExternal: false
  name: IEvent<TAuthenticationToken>
  nameWithType: IEvent<TAuthenticationToken>
  fullName: Cqrs.Events.IEvent<TAuthenticationToken>
  nameWithType.vb: IEvent(Of TAuthenticationToken)
  fullName.vb: Cqrs.Events.IEvent(Of TAuthenticationToken)
  name.vb: IEvent(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Cqrs.Events
  commentId: N:Cqrs.Events
  isExternal: false
  name: Cqrs.Events
  nameWithType: Cqrs.Events
  fullName: Cqrs.Events
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Cqrs.Events.EventData
  commentId: T:Cqrs.Events.EventData
  parent: Cqrs.Events
  isExternal: false
  name: EventData
  nameWithType: EventData
  fullName: Cqrs.Events.EventData
- uid: Cqrs.Events.IEventDeserialiser`1.Deserialise*
  commentId: Overload:Cqrs.Events.IEventDeserialiser`1.Deserialise
  isExternal: false
  name: Deserialise
  nameWithType: IEventDeserialiser<TAuthenticationToken>.Deserialise
  fullName: Cqrs.Events.IEventDeserialiser<TAuthenticationToken>.Deserialise
  nameWithType.vb: IEventDeserialiser(Of TAuthenticationToken).Deserialise
  fullName.vb: Cqrs.Events.IEventDeserialiser(Of TAuthenticationToken).Deserialise
- uid: Cqrs.Events.IEvent{{TAuthenticationToken}}
  commentId: T:Cqrs.Events.IEvent{`0}
  parent: Cqrs.Events
  definition: Cqrs.Events.IEvent`1
  name: IEvent<TAuthenticationToken>
  nameWithType: IEvent<TAuthenticationToken>
  fullName: Cqrs.Events.IEvent<TAuthenticationToken>
  nameWithType.vb: IEvent(Of TAuthenticationToken)
  fullName.vb: Cqrs.Events.IEvent(Of TAuthenticationToken)
  name.vb: IEvent(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
