### YamlMime:ManagedReference
items:
- uid: Cqrs.Azure.DocumentDb.Entities.AzureDocumentDbEntity
  commentId: T:Cqrs.Azure.DocumentDb.Entities.AzureDocumentDbEntity
  id: AzureDocumentDbEntity
  parent: Cqrs.Azure.DocumentDb.Entities
  children:
  - Cqrs.Azure.DocumentDb.Entities.AzureDocumentDbEntity.id
  - Cqrs.Azure.DocumentDb.Entities.AzureDocumentDbEntity.IsLogicallyDeleted
  - Cqrs.Azure.DocumentDb.Entities.AzureDocumentDbEntity.Rsn
  - Cqrs.Azure.DocumentDb.Entities.AzureDocumentDbEntity.SortingOrder
  - Cqrs.Azure.DocumentDb.Entities.AzureDocumentDbEntity.type
  langs:
  - csharp
  - vb
  name: AzureDocumentDbEntity
  nameWithType: AzureDocumentDbEntity
  fullName: Cqrs.Azure.DocumentDb.Entities.AzureDocumentDbEntity
  type: Class
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.DocumentDb/Entities/AzureDocumentDbEntity.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: AzureDocumentDbEntity
    path: Framework/Azure/Cqrs.Azure.DocumentDb/Entities/AzureDocumentDbEntity.cs
    startLine: 19
  assemblies:
  - Cqrs.Azure.DocumentDb
  namespace: Cqrs.Azure.DocumentDb.Entities
  summary: "\nA projection/entity especially designed to work with Azure DocumentDB (CosmosDB).\n"
  example: []
  syntax:
    content: 'public abstract class AzureDocumentDbEntity : Entity, IEntity'
    content.vb: >-
      Public MustInherit Class AzureDocumentDbEntity

          Inherits Entity

          Implements IEntity
  inheritance:
  - System.Object
  - Cqrs.Entities.Entity
  derivedClasses:
  - Cqrs.Azure.DocumentDb.Repositories.Authentication.AzureSingleSignOnToken
  implements:
  - Cqrs.Entities.IEntity
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Cqrs.Azure.DocumentDb.Entities.AzureDocumentDbEntity.Rsn
  commentId: P:Cqrs.Azure.DocumentDb.Entities.AzureDocumentDbEntity.Rsn
  id: Rsn
  parent: Cqrs.Azure.DocumentDb.Entities.AzureDocumentDbEntity
  langs:
  - csharp
  - vb
  name: Rsn
  nameWithType: AzureDocumentDbEntity.Rsn
  fullName: Cqrs.Azure.DocumentDb.Entities.AzureDocumentDbEntity.Rsn
  type: Property
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.DocumentDb/Entities/AzureDocumentDbEntity.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Rsn
    path: Framework/Azure/Cqrs.Azure.DocumentDb/Entities/AzureDocumentDbEntity.cs
    startLine: 26
  assemblies:
  - Cqrs.Azure.DocumentDb
  namespace: Cqrs.Azure.DocumentDb.Entities
  summary: "\nThe identifier of the <xref href=\"Cqrs.Entities.IEntity\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public override Guid Rsn { get; set; }
    parameters: []
    return:
      type: Guid
    content.vb: Public Overrides Property Rsn As Guid
  overridden: Cqrs.Entities.Entity.Rsn
  overload: Cqrs.Azure.DocumentDb.Entities.AzureDocumentDbEntity.Rsn*
  modifiers.csharp:
  - public
  - override
  - get
  - set
  modifiers.vb:
  - Public
  - Overrides
- uid: Cqrs.Azure.DocumentDb.Entities.AzureDocumentDbEntity.id
  commentId: P:Cqrs.Azure.DocumentDb.Entities.AzureDocumentDbEntity.id
  id: id
  parent: Cqrs.Azure.DocumentDb.Entities.AzureDocumentDbEntity
  langs:
  - csharp
  - vb
  name: id
  nameWithType: AzureDocumentDbEntity.id
  fullName: Cqrs.Azure.DocumentDb.Entities.AzureDocumentDbEntity.id
  type: Property
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.DocumentDb/Entities/AzureDocumentDbEntity.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: id
    path: Framework/Azure/Cqrs.Azure.DocumentDb/Entities/AzureDocumentDbEntity.cs
    startLine: 33
  assemblies:
  - Cqrs.Azure.DocumentDb
  namespace: Cqrs.Azure.DocumentDb.Entities
  summary: "\nThe internal identifier of the <xref href=\"Cqrs.Entities.IEntity\" data-throw-if-not-resolved=\"false\"></xref> used within Azure DocumentDB (CosmosDB).\n"
  example: []
  syntax:
    content: public virtual string id { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property id As String
  overload: Cqrs.Azure.DocumentDb.Entities.AzureDocumentDbEntity.id*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Cqrs.Azure.DocumentDb.Entities.AzureDocumentDbEntity.type
  commentId: P:Cqrs.Azure.DocumentDb.Entities.AzureDocumentDbEntity.type
  id: type
  parent: Cqrs.Azure.DocumentDb.Entities.AzureDocumentDbEntity
  langs:
  - csharp
  - vb
  name: type
  nameWithType: AzureDocumentDbEntity.type
  fullName: Cqrs.Azure.DocumentDb.Entities.AzureDocumentDbEntity.type
  type: Property
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.DocumentDb/Entities/AzureDocumentDbEntity.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: type
    path: Framework/Azure/Cqrs.Azure.DocumentDb/Entities/AzureDocumentDbEntity.cs
    startLine: 47
  assemblies:
  - Cqrs.Azure.DocumentDb
  namespace: Cqrs.Azure.DocumentDb.Entities
  summary: "\nThe name of the <see cref=\"!:Type\"></see> of this <xref href=\"Cqrs.Entities.IEntity\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public virtual string type { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property type As String
  overload: Cqrs.Azure.DocumentDb.Entities.AzureDocumentDbEntity.type*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Cqrs.Azure.DocumentDb.Entities.AzureDocumentDbEntity.SortingOrder
  commentId: P:Cqrs.Azure.DocumentDb.Entities.AzureDocumentDbEntity.SortingOrder
  id: SortingOrder
  parent: Cqrs.Azure.DocumentDb.Entities.AzureDocumentDbEntity
  langs:
  - csharp
  - vb
  name: SortingOrder
  nameWithType: AzureDocumentDbEntity.SortingOrder
  fullName: Cqrs.Azure.DocumentDb.Entities.AzureDocumentDbEntity.SortingOrder
  type: Property
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.DocumentDb/Entities/AzureDocumentDbEntity.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: SortingOrder
    path: Framework/Azure/Cqrs.Azure.DocumentDb/Entities/AzureDocumentDbEntity.cs
    startLine: 58
  assemblies:
  - Cqrs.Azure.DocumentDb
  namespace: Cqrs.Azure.DocumentDb.Entities
  summary: "\nThe order of this <xref href=\"Cqrs.Entities.IEntity\" data-throw-if-not-resolved=\"false\"></xref> to sort by, by default.\n"
  example: []
  syntax:
    content: public override int SortingOrder { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overrides Property SortingOrder As Integer
  overridden: Cqrs.Entities.Entity.SortingOrder
  overload: Cqrs.Azure.DocumentDb.Entities.AzureDocumentDbEntity.SortingOrder*
  modifiers.csharp:
  - public
  - override
  - get
  - set
  modifiers.vb:
  - Public
  - Overrides
- uid: Cqrs.Azure.DocumentDb.Entities.AzureDocumentDbEntity.IsLogicallyDeleted
  commentId: P:Cqrs.Azure.DocumentDb.Entities.AzureDocumentDbEntity.IsLogicallyDeleted
  id: IsLogicallyDeleted
  parent: Cqrs.Azure.DocumentDb.Entities.AzureDocumentDbEntity
  langs:
  - csharp
  - vb
  name: IsLogicallyDeleted
  nameWithType: AzureDocumentDbEntity.IsLogicallyDeleted
  fullName: Cqrs.Azure.DocumentDb.Entities.AzureDocumentDbEntity.IsLogicallyDeleted
  type: Property
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.DocumentDb/Entities/AzureDocumentDbEntity.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: IsLogicallyDeleted
    path: Framework/Azure/Cqrs.Azure.DocumentDb/Entities/AzureDocumentDbEntity.cs
    startLine: 65
  assemblies:
  - Cqrs.Azure.DocumentDb
  namespace: Cqrs.Azure.DocumentDb.Entities
  summary: "\nIndicates if this <xref href=\"Cqrs.Entities.IEntity\" data-throw-if-not-resolved=\"false\"></xref> has been deleted, but not removed from the <xref href=\"Cqrs.DataStores.IDataStore%601\" data-throw-if-not-resolved=\"false\"></xref>,\nthis way entities can be retrieved so an un-deleted operation can be triggered.\n"
  example: []
  syntax:
    content: public override bool IsLogicallyDeleted { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overrides Property IsLogicallyDeleted As Boolean
  overridden: Cqrs.Entities.Entity.IsLogicallyDeleted
  overload: Cqrs.Azure.DocumentDb.Entities.AzureDocumentDbEntity.IsLogicallyDeleted*
  modifiers.csharp:
  - public
  - override
  - get
  - set
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Cqrs.Azure.DocumentDb.Entities
  commentId: N:Cqrs.Azure.DocumentDb.Entities
  isExternal: false
  name: Cqrs.Azure.DocumentDb.Entities
  nameWithType: Cqrs.Azure.DocumentDb.Entities
  fullName: Cqrs.Azure.DocumentDb.Entities
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Cqrs.Entities.Entity
  commentId: T:Cqrs.Entities.Entity
  parent: Cqrs.Entities
  isExternal: false
  name: Entity
  nameWithType: Entity
  fullName: Cqrs.Entities.Entity
- uid: Cqrs.Entities.IEntity
  commentId: T:Cqrs.Entities.IEntity
  parent: Cqrs.Entities
  isExternal: false
  name: IEntity
  nameWithType: IEntity
  fullName: Cqrs.Entities.IEntity
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Cqrs.Entities
  commentId: N:Cqrs.Entities
  isExternal: false
  name: Cqrs.Entities
  nameWithType: Cqrs.Entities
  fullName: Cqrs.Entities
- uid: Cqrs.Entities.Entity.Rsn
  commentId: P:Cqrs.Entities.Entity.Rsn
  parent: Cqrs.Entities.Entity
  isExternal: false
  name: Rsn
  nameWithType: Entity.Rsn
  fullName: Cqrs.Entities.Entity.Rsn
- uid: Cqrs.Azure.DocumentDb.Entities.AzureDocumentDbEntity.Rsn*
  commentId: Overload:Cqrs.Azure.DocumentDb.Entities.AzureDocumentDbEntity.Rsn
  isExternal: false
  name: Rsn
  nameWithType: AzureDocumentDbEntity.Rsn
  fullName: Cqrs.Azure.DocumentDb.Entities.AzureDocumentDbEntity.Rsn
- uid: Guid
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: Guid
- uid: Cqrs.Azure.DocumentDb.Entities.AzureDocumentDbEntity.id*
  commentId: Overload:Cqrs.Azure.DocumentDb.Entities.AzureDocumentDbEntity.id
  isExternal: false
  name: id
  nameWithType: AzureDocumentDbEntity.id
  fullName: Cqrs.Azure.DocumentDb.Entities.AzureDocumentDbEntity.id
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Cqrs.Azure.DocumentDb.Entities.AzureDocumentDbEntity.type*
  commentId: Overload:Cqrs.Azure.DocumentDb.Entities.AzureDocumentDbEntity.type
  isExternal: false
  name: type
  nameWithType: AzureDocumentDbEntity.type
  fullName: Cqrs.Azure.DocumentDb.Entities.AzureDocumentDbEntity.type
- uid: Cqrs.Entities.Entity.SortingOrder
  commentId: P:Cqrs.Entities.Entity.SortingOrder
  parent: Cqrs.Entities.Entity
  isExternal: false
  name: SortingOrder
  nameWithType: Entity.SortingOrder
  fullName: Cqrs.Entities.Entity.SortingOrder
- uid: Cqrs.Azure.DocumentDb.Entities.AzureDocumentDbEntity.SortingOrder*
  commentId: Overload:Cqrs.Azure.DocumentDb.Entities.AzureDocumentDbEntity.SortingOrder
  isExternal: false
  name: SortingOrder
  nameWithType: AzureDocumentDbEntity.SortingOrder
  fullName: Cqrs.Azure.DocumentDb.Entities.AzureDocumentDbEntity.SortingOrder
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Cqrs.DataStores.IDataStore`1
  commentId: T:Cqrs.DataStores.IDataStore`1
  isExternal: false
  name: IDataStore<TData>
  nameWithType: IDataStore<TData>
  fullName: Cqrs.DataStores.IDataStore<TData>
  nameWithType.vb: IDataStore(Of TData)
  fullName.vb: Cqrs.DataStores.IDataStore(Of TData)
  name.vb: IDataStore(Of TData)
  spec.csharp:
  - uid: Cqrs.DataStores.IDataStore`1
    name: IDataStore
    nameWithType: IDataStore
    fullName: Cqrs.DataStores.IDataStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.DataStores.IDataStore`1
    name: IDataStore
    nameWithType: IDataStore
    fullName: Cqrs.DataStores.IDataStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Entities.Entity.IsLogicallyDeleted
  commentId: P:Cqrs.Entities.Entity.IsLogicallyDeleted
  parent: Cqrs.Entities.Entity
  isExternal: false
  name: IsLogicallyDeleted
  nameWithType: Entity.IsLogicallyDeleted
  fullName: Cqrs.Entities.Entity.IsLogicallyDeleted
- uid: Cqrs.Azure.DocumentDb.Entities.AzureDocumentDbEntity.IsLogicallyDeleted*
  commentId: Overload:Cqrs.Azure.DocumentDb.Entities.AzureDocumentDbEntity.IsLogicallyDeleted
  isExternal: false
  name: IsLogicallyDeleted
  nameWithType: AzureDocumentDbEntity.IsLogicallyDeleted
  fullName: Cqrs.Azure.DocumentDb.Entities.AzureDocumentDbEntity.IsLogicallyDeleted
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
