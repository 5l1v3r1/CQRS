### YamlMime:ManagedReference
items:
- uid: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory
  commentId: T:Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory
  id: TableStorageDataStoreConnectionStringFactory
  parent: Cqrs.Azure.BlobStorage.DataStores
  children:
  - Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.#ctor(Cqrs.Configuration.IConfigurationManager,cdmdotnet.Logging.ILogger)
  - Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.ConfigurationManager
  - Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.GetBaseContainerName
  - Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.GetContainerName
  - Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.GetReadableConnectionString
  - Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.GetTableName``1
  - Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.GetWritableConnectionStrings
  - Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.Logger
  - Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.TableStorageBaseContainerNameKey
  - Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.TableStorageDataStoreConnectionStringKey
  - Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.TableStorageReadableDataStoreConnectionStringKey
  - Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.TableStorageWritableDataStoreConnectionStringKey
  langs:
  - csharp
  - vb
  name: TableStorageDataStoreConnectionStringFactory
  nameWithType: TableStorageDataStoreConnectionStringFactory
  fullName: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory
  type: Class
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.BlobStorage/DataStores/TableStorageDataStoreConnectionStringFactory.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: TableStorageDataStoreConnectionStringFactory
    path: Framework/Azure/Cqrs.Azure.BlobStorage/DataStores/TableStorageDataStoreConnectionStringFactory.cs
    startLine: 24
  assemblies:
  - Cqrs.Azure.BlobStorage
  namespace: Cqrs.Azure.BlobStorage.DataStores
  summary: "\nA factory for getting connection strings and container names for <xref href=\"Cqrs.DataStores.IDataStore%601\" data-throw-if-not-resolved=\"false\"></xref> access.\nThis factory supports reading and writing from separate storage accounts. Specifically you can have as many different storage accounts as you want to configure when writing.\nThis allows for manual mirroring of data while reading from the fastest/closest location possible.\n"
  example: []
  syntax:
    content: 'public class TableStorageDataStoreConnectionStringFactory : ITableStorageDataStoreConnectionStringFactory, ITableStorageStoreConnectionStringFactory, IStorageStoreConnectionStringFactory'
    content.vb: >-
      Public Class TableStorageDataStoreConnectionStringFactory
          Implements ITableStorageDataStoreConnectionStringFactory, ITableStorageStoreConnectionStringFactory, IStorageStoreConnectionStringFactory
  inheritance:
  - System.Object
  derivedClasses:
  - Cqrs.Azure.Storage.DataStores.TableStorageDataStoreConnectionStringFactory`1
  implements:
  - Cqrs.Azure.BlobStorage.DataStores.ITableStorageDataStoreConnectionStringFactory
  - Cqrs.Azure.BlobStorage.ITableStorageStoreConnectionStringFactory
  - Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.TableStorageReadableDataStoreConnectionStringKey
  commentId: F:Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.TableStorageReadableDataStoreConnectionStringKey
  id: TableStorageReadableDataStoreConnectionStringKey
  parent: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory
  langs:
  - csharp
  - vb
  name: TableStorageReadableDataStoreConnectionStringKey
  nameWithType: TableStorageDataStoreConnectionStringFactory.TableStorageReadableDataStoreConnectionStringKey
  fullName: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.TableStorageReadableDataStoreConnectionStringKey
  type: Field
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.BlobStorage/DataStores/TableStorageDataStoreConnectionStringFactory.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: TableStorageReadableDataStoreConnectionStringKey
    path: Framework/Azure/Cqrs.Azure.BlobStorage/DataStores/TableStorageDataStoreConnectionStringFactory.cs
    startLine: 29
  assemblies:
  - Cqrs.Azure.BlobStorage
  namespace: Cqrs.Azure.BlobStorage.DataStores
  summary: "\nThe name of the app setting in <xref href=\"Cqrs.Configuration.IConfigurationManager\" data-throw-if-not-resolved=\"false\"></xref> that will have the connection string of the readable storage account if using a separate storage account for reads and writes.\n"
  example: []
  syntax:
    content: public static string TableStorageReadableDataStoreConnectionStringKey
    return:
      type: System.String
    content.vb: Public Shared TableStorageReadableDataStoreConnectionStringKey As String
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.TableStorageWritableDataStoreConnectionStringKey
  commentId: F:Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.TableStorageWritableDataStoreConnectionStringKey
  id: TableStorageWritableDataStoreConnectionStringKey
  parent: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory
  langs:
  - csharp
  - vb
  name: TableStorageWritableDataStoreConnectionStringKey
  nameWithType: TableStorageDataStoreConnectionStringFactory.TableStorageWritableDataStoreConnectionStringKey
  fullName: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.TableStorageWritableDataStoreConnectionStringKey
  type: Field
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.BlobStorage/DataStores/TableStorageDataStoreConnectionStringFactory.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: TableStorageWritableDataStoreConnectionStringKey
    path: Framework/Azure/Cqrs.Azure.BlobStorage/DataStores/TableStorageDataStoreConnectionStringFactory.cs
    startLine: 35
  assemblies:
  - Cqrs.Azure.BlobStorage
  namespace: Cqrs.Azure.BlobStorage.DataStores
  summary: "\nThe name of the app setting in <xref href=\"Cqrs.Configuration.IConfigurationManager\" data-throw-if-not-resolved=\"false\"></xref> that will have the connection string of the writeable storage account if using a separate storage account for reads and writes.\nThis value gets appended with a &quot;.1&quot;, &quot;.2&quot; etc allowing you to write to as many different locations as possible.\n"
  example: []
  syntax:
    content: public static string TableStorageWritableDataStoreConnectionStringKey
    return:
      type: System.String
    content.vb: Public Shared TableStorageWritableDataStoreConnectionStringKey As String
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.TableStorageDataStoreConnectionStringKey
  commentId: F:Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.TableStorageDataStoreConnectionStringKey
  id: TableStorageDataStoreConnectionStringKey
  parent: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory
  langs:
  - csharp
  - vb
  name: TableStorageDataStoreConnectionStringKey
  nameWithType: TableStorageDataStoreConnectionStringFactory.TableStorageDataStoreConnectionStringKey
  fullName: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.TableStorageDataStoreConnectionStringKey
  type: Field
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.BlobStorage/DataStores/TableStorageDataStoreConnectionStringFactory.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: TableStorageDataStoreConnectionStringKey
    path: Framework/Azure/Cqrs.Azure.BlobStorage/DataStores/TableStorageDataStoreConnectionStringFactory.cs
    startLine: 40
  assemblies:
  - Cqrs.Azure.BlobStorage
  namespace: Cqrs.Azure.BlobStorage.DataStores
  summary: "\nThe name of the app setting in <xref href=\"Cqrs.Configuration.IConfigurationManager\" data-throw-if-not-resolved=\"false\"></xref> that will have the connection string if using a single storage account for both reads and writes.\n"
  example: []
  syntax:
    content: public static string TableStorageDataStoreConnectionStringKey
    return:
      type: System.String
    content.vb: Public Shared TableStorageDataStoreConnectionStringKey As String
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.TableStorageBaseContainerNameKey
  commentId: F:Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.TableStorageBaseContainerNameKey
  id: TableStorageBaseContainerNameKey
  parent: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory
  langs:
  - csharp
  - vb
  name: TableStorageBaseContainerNameKey
  nameWithType: TableStorageDataStoreConnectionStringFactory.TableStorageBaseContainerNameKey
  fullName: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.TableStorageBaseContainerNameKey
  type: Field
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.BlobStorage/DataStores/TableStorageDataStoreConnectionStringFactory.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: TableStorageBaseContainerNameKey
    path: Framework/Azure/Cqrs.Azure.BlobStorage/DataStores/TableStorageDataStoreConnectionStringFactory.cs
    startLine: 45
  assemblies:
  - Cqrs.Azure.BlobStorage
  namespace: Cqrs.Azure.BlobStorage.DataStores
  summary: "\nThe name of the app setting in <xref href=\"Cqrs.Configuration.IConfigurationManager\" data-throw-if-not-resolved=\"false\"></xref> that will have the base name of the container used.\n"
  example: []
  syntax:
    content: public static string TableStorageBaseContainerNameKey
    return:
      type: System.String
    content.vb: Public Shared TableStorageBaseContainerNameKey As String
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.ConfigurationManager
  commentId: P:Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.ConfigurationManager
  id: ConfigurationManager
  parent: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory
  langs:
  - csharp
  - vb
  name: ConfigurationManager
  nameWithType: TableStorageDataStoreConnectionStringFactory.ConfigurationManager
  fullName: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.ConfigurationManager
  type: Property
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.BlobStorage/DataStores/TableStorageDataStoreConnectionStringFactory.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: ConfigurationManager
    path: Framework/Azure/Cqrs.Azure.BlobStorage/DataStores/TableStorageDataStoreConnectionStringFactory.cs
    startLine: 50
  assemblies:
  - Cqrs.Azure.BlobStorage
  namespace: Cqrs.Azure.BlobStorage.DataStores
  summary: "\nGets or sets the <xref href=\"Cqrs.Configuration.IConfigurationManager\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: protected IConfigurationManager ConfigurationManager { get; }
    parameters: []
    return:
      type: Cqrs.Configuration.IConfigurationManager
    content.vb: Protected ReadOnly Property ConfigurationManager As IConfigurationManager
  overload: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.ConfigurationManager*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.Logger
  commentId: P:Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.Logger
  id: Logger
  parent: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory
  langs:
  - csharp
  - vb
  name: Logger
  nameWithType: TableStorageDataStoreConnectionStringFactory.Logger
  fullName: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.Logger
  type: Property
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.BlobStorage/DataStores/TableStorageDataStoreConnectionStringFactory.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Logger
    path: Framework/Azure/Cqrs.Azure.BlobStorage/DataStores/TableStorageDataStoreConnectionStringFactory.cs
    startLine: 55
  assemblies:
  - Cqrs.Azure.BlobStorage
  namespace: Cqrs.Azure.BlobStorage.DataStores
  summary: "\nGets or sets the <xref href=\"cdmdotnet.Logging.ILogger\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: protected ILogger Logger { get; }
    parameters: []
    return:
      type: cdmdotnet.Logging.ILogger
    content.vb: Protected ReadOnly Property Logger As ILogger
  overload: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.Logger*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.#ctor(Cqrs.Configuration.IConfigurationManager,cdmdotnet.Logging.ILogger)
  commentId: M:Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.#ctor(Cqrs.Configuration.IConfigurationManager,cdmdotnet.Logging.ILogger)
  id: '#ctor(Cqrs.Configuration.IConfigurationManager,cdmdotnet.Logging.ILogger)'
  parent: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory
  langs:
  - csharp
  - vb
  name: TableStorageDataStoreConnectionStringFactory(IConfigurationManager, ILogger)
  nameWithType: TableStorageDataStoreConnectionStringFactory.TableStorageDataStoreConnectionStringFactory(IConfigurationManager, ILogger)
  fullName: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.TableStorageDataStoreConnectionStringFactory(Cqrs.Configuration.IConfigurationManager, cdmdotnet.Logging.ILogger)
  type: Constructor
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.BlobStorage/DataStores/TableStorageDataStoreConnectionStringFactory.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: .ctor
    path: Framework/Azure/Cqrs.Azure.BlobStorage/DataStores/TableStorageDataStoreConnectionStringFactory.cs
    startLine: 60
  assemblies:
  - Cqrs.Azure.BlobStorage
  namespace: Cqrs.Azure.BlobStorage.DataStores
  summary: "\nInstantiates a new instance of <xref href=\"Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public TableStorageDataStoreConnectionStringFactory(IConfigurationManager configurationManager, ILogger logger)
    parameters:
    - id: configurationManager
      type: Cqrs.Configuration.IConfigurationManager
    - id: logger
      type: cdmdotnet.Logging.ILogger
    content.vb: Public Sub New(configurationManager As IConfigurationManager, logger As ILogger)
  overload: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.GetWritableConnectionStrings
  commentId: M:Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.GetWritableConnectionStrings
  id: GetWritableConnectionStrings
  parent: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory
  langs:
  - csharp
  - vb
  name: GetWritableConnectionStrings()
  nameWithType: TableStorageDataStoreConnectionStringFactory.GetWritableConnectionStrings()
  fullName: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.GetWritableConnectionStrings()
  type: Method
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.BlobStorage/DataStores/TableStorageDataStoreConnectionStringFactory.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: GetWritableConnectionStrings
    path: Framework/Azure/Cqrs.Azure.BlobStorage/DataStores/TableStorageDataStoreConnectionStringFactory.cs
    startLine: 70
  assemblies:
  - Cqrs.Azure.BlobStorage
  namespace: Cqrs.Azure.BlobStorage.DataStores
  summary: "\nGets all writeable connection strings. If using a single storage account, then <xref href=\"Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.TableStorageDataStoreConnectionStringKey\" data-throw-if-not-resolved=\"false\"></xref> will most likely be returned.\nIf a value for <xref href=\"Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.TableStorageWritableDataStoreConnectionStringKey\" data-throw-if-not-resolved=\"false\"></xref> is found, it will append &quot;.1&quot;, &quot;.2&quot; etc returning any additionally found connection string values in <xref href=\"Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.ConfigurationManager\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public virtual IEnumerable<string> GetWritableConnectionStrings()
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: Public Overridable Function GetWritableConnectionStrings As IEnumerable(Of String)
  overload: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.GetWritableConnectionStrings*
  implements:
  - Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory.GetWritableConnectionStrings
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.GetReadableConnectionString
  commentId: M:Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.GetReadableConnectionString
  id: GetReadableConnectionString
  parent: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory
  langs:
  - csharp
  - vb
  name: GetReadableConnectionString()
  nameWithType: TableStorageDataStoreConnectionStringFactory.GetReadableConnectionString()
  fullName: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.GetReadableConnectionString()
  type: Method
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.BlobStorage/DataStores/TableStorageDataStoreConnectionStringFactory.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: GetReadableConnectionString
    path: Framework/Azure/Cqrs.Azure.BlobStorage/DataStores/TableStorageDataStoreConnectionStringFactory.cs
    startLine: 112
  assemblies:
  - Cqrs.Azure.BlobStorage
  namespace: Cqrs.Azure.BlobStorage.DataStores
  summary: "\nGets the readable connection string. If using a single storage account, then <xref href=\"Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.TableStorageDataStoreConnectionStringKey\" data-throw-if-not-resolved=\"false\"></xref> will most likely be returned.\nIf a value for <xref href=\"Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.TableStorageReadableDataStoreConnectionStringKey\" data-throw-if-not-resolved=\"false\"></xref> is found, that will be returned instead.\n"
  example: []
  syntax:
    content: public virtual string GetReadableConnectionString()
    return:
      type: System.String
    content.vb: Public Overridable Function GetReadableConnectionString As String
  overload: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.GetReadableConnectionString*
  implements:
  - Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory.GetReadableConnectionString
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.GetBaseContainerName
  commentId: M:Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.GetBaseContainerName
  id: GetBaseContainerName
  parent: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory
  langs:
  - csharp
  - vb
  name: GetBaseContainerName()
  nameWithType: TableStorageDataStoreConnectionStringFactory.GetBaseContainerName()
  fullName: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.GetBaseContainerName()
  type: Method
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.BlobStorage/DataStores/TableStorageDataStoreConnectionStringFactory.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: GetBaseContainerName
    path: Framework/Azure/Cqrs.Azure.BlobStorage/DataStores/TableStorageDataStoreConnectionStringFactory.cs
    startLine: 143
  assemblies:
  - Cqrs.Azure.BlobStorage
  namespace: Cqrs.Azure.BlobStorage.DataStores
  summary: "\nReturns the name of the base contain to be used.\nThis will be the value from <xref href=\"Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.ConfigurationManager\" data-throw-if-not-resolved=\"false\"></xref> keyed <xref href=\"Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.TableStorageBaseContainerNameKey\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public string GetBaseContainerName()
    return:
      type: System.String
    content.vb: Public Function GetBaseContainerName As String
  overload: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.GetBaseContainerName*
  implements:
  - Cqrs.Azure.BlobStorage.ITableStorageStoreConnectionStringFactory.GetBaseContainerName
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.GetContainerName
  commentId: M:Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.GetContainerName
  id: GetContainerName
  parent: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory
  langs:
  - csharp
  - vb
  name: GetContainerName()
  nameWithType: TableStorageDataStoreConnectionStringFactory.GetContainerName()
  fullName: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.GetContainerName()
  type: Method
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.BlobStorage/DataStores/TableStorageDataStoreConnectionStringFactory.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: GetContainerName
    path: Framework/Azure/Cqrs.Azure.BlobStorage/DataStores/TableStorageDataStoreConnectionStringFactory.cs
    startLine: 169
  assemblies:
  - Cqrs.Azure.BlobStorage
  namespace: Cqrs.Azure.BlobStorage.DataStores
  summary: "\nReturns <xref href=\"Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.GetBaseContainerName\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public virtual string GetContainerName()
    return:
      type: System.String
      description: <xref href="Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.GetBaseContainerName" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Overridable Function GetContainerName As String
  overload: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.GetContainerName*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.GetTableName``1
  commentId: M:Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.GetTableName``1
  id: GetTableName``1
  parent: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory
  langs:
  - csharp
  - vb
  name: GetTableName<TData>()
  nameWithType: TableStorageDataStoreConnectionStringFactory.GetTableName<TData>()
  fullName: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.GetTableName<TData>()
  type: Method
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.BlobStorage/DataStores/TableStorageDataStoreConnectionStringFactory.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: GetTableName
    path: Framework/Azure/Cqrs.Azure.BlobStorage/DataStores/TableStorageDataStoreConnectionStringFactory.cs
    startLine: 186
  assemblies:
  - Cqrs.Azure.BlobStorage
  namespace: Cqrs.Azure.BlobStorage.DataStores
  summary: "\nGenerates the name of the table for <span class=\"typeparamref\">TData</span> that matches naming rules for Azure Storage.\n"
  remarks: https://blogs.msdn.microsoft.com/jmstall/2014/06/12/azure-storage-naming-rules/
  example: []
  syntax:
    content: public virtual string GetTableName<TData>()
    typeParameters:
    - id: TData
      description: The <xref href="System.Type" data-throw-if-not-resolved="false"></xref> of data to read or write.
    return:
      type: System.String
    content.vb: Public Overridable Function GetTableName(Of TData) As String
  overload: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.GetTableName*
  implements:
  - Cqrs.Azure.BlobStorage.DataStores.ITableStorageDataStoreConnectionStringFactory.GetTableName``1
  nameWithType.vb: TableStorageDataStoreConnectionStringFactory.GetTableName(Of TData)()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.GetTableName(Of TData)()
  name.vb: GetTableName(Of TData)()
references:
- uid: Cqrs.DataStores.IDataStore`1
  commentId: T:Cqrs.DataStores.IDataStore`1
  isExternal: false
  name: IDataStore<TData>
  nameWithType: IDataStore<TData>
  fullName: Cqrs.DataStores.IDataStore<TData>
  nameWithType.vb: IDataStore(Of TData)
  fullName.vb: Cqrs.DataStores.IDataStore(Of TData)
  name.vb: IDataStore(Of TData)
  spec.csharp:
  - uid: Cqrs.DataStores.IDataStore`1
    name: IDataStore
    nameWithType: IDataStore
    fullName: Cqrs.DataStores.IDataStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.DataStores.IDataStore`1
    name: IDataStore
    nameWithType: IDataStore
    fullName: Cqrs.DataStores.IDataStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.DataStores
  commentId: N:Cqrs.Azure.BlobStorage.DataStores
  isExternal: false
  name: Cqrs.Azure.BlobStorage.DataStores
  nameWithType: Cqrs.Azure.BlobStorage.DataStores
  fullName: Cqrs.Azure.BlobStorage.DataStores
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Cqrs.Azure.BlobStorage.DataStores.ITableStorageDataStoreConnectionStringFactory
  commentId: T:Cqrs.Azure.BlobStorage.DataStores.ITableStorageDataStoreConnectionStringFactory
  parent: Cqrs.Azure.BlobStorage.DataStores
  isExternal: false
  name: ITableStorageDataStoreConnectionStringFactory
  nameWithType: ITableStorageDataStoreConnectionStringFactory
  fullName: Cqrs.Azure.BlobStorage.DataStores.ITableStorageDataStoreConnectionStringFactory
- uid: Cqrs.Azure.BlobStorage.ITableStorageStoreConnectionStringFactory
  commentId: T:Cqrs.Azure.BlobStorage.ITableStorageStoreConnectionStringFactory
  parent: Cqrs.Azure.BlobStorage
  isExternal: false
  name: ITableStorageStoreConnectionStringFactory
  nameWithType: ITableStorageStoreConnectionStringFactory
  fullName: Cqrs.Azure.BlobStorage.ITableStorageStoreConnectionStringFactory
- uid: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory
  commentId: T:Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory
  parent: Cqrs.Azure.BlobStorage
  isExternal: false
  name: IStorageStoreConnectionStringFactory
  nameWithType: IStorageStoreConnectionStringFactory
  fullName: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Cqrs.Azure.BlobStorage
  commentId: N:Cqrs.Azure.BlobStorage
  isExternal: false
  name: Cqrs.Azure.BlobStorage
  nameWithType: Cqrs.Azure.BlobStorage
  fullName: Cqrs.Azure.BlobStorage
- uid: Cqrs.Configuration.IConfigurationManager
  commentId: T:Cqrs.Configuration.IConfigurationManager
  parent: Cqrs.Configuration
  isExternal: false
  name: IConfigurationManager
  nameWithType: IConfigurationManager
  fullName: Cqrs.Configuration.IConfigurationManager
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Cqrs.Configuration
  commentId: N:Cqrs.Configuration
  isExternal: false
  name: Cqrs.Configuration
  nameWithType: Cqrs.Configuration
  fullName: Cqrs.Configuration
- uid: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.ConfigurationManager*
  commentId: Overload:Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.ConfigurationManager
  isExternal: false
  name: ConfigurationManager
  nameWithType: TableStorageDataStoreConnectionStringFactory.ConfigurationManager
  fullName: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.ConfigurationManager
- uid: cdmdotnet.Logging.ILogger
  commentId: T:cdmdotnet.Logging.ILogger
  parent: cdmdotnet.Logging
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: cdmdotnet.Logging.ILogger
- uid: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.Logger*
  commentId: Overload:Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.Logger
  isExternal: false
  name: Logger
  nameWithType: TableStorageDataStoreConnectionStringFactory.Logger
  fullName: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.Logger
- uid: cdmdotnet.Logging
  commentId: N:cdmdotnet.Logging
  isExternal: false
  name: cdmdotnet.Logging
  nameWithType: cdmdotnet.Logging
  fullName: cdmdotnet.Logging
- uid: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory
  commentId: T:Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory
  parent: Cqrs.Azure.BlobStorage.DataStores
  isExternal: false
  name: TableStorageDataStoreConnectionStringFactory
  nameWithType: TableStorageDataStoreConnectionStringFactory
  fullName: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory
- uid: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.#ctor*
  commentId: Overload:Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.#ctor
  isExternal: false
  name: TableStorageDataStoreConnectionStringFactory
  nameWithType: TableStorageDataStoreConnectionStringFactory.TableStorageDataStoreConnectionStringFactory
  fullName: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.TableStorageDataStoreConnectionStringFactory
- uid: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.TableStorageDataStoreConnectionStringKey
  commentId: F:Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.TableStorageDataStoreConnectionStringKey
  parent: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory
  isExternal: false
  name: TableStorageDataStoreConnectionStringKey
  nameWithType: TableStorageDataStoreConnectionStringFactory.TableStorageDataStoreConnectionStringKey
  fullName: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.TableStorageDataStoreConnectionStringKey
- uid: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.TableStorageWritableDataStoreConnectionStringKey
  commentId: F:Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.TableStorageWritableDataStoreConnectionStringKey
  parent: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory
  isExternal: false
  name: TableStorageWritableDataStoreConnectionStringKey
  nameWithType: TableStorageDataStoreConnectionStringFactory.TableStorageWritableDataStoreConnectionStringKey
  fullName: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.TableStorageWritableDataStoreConnectionStringKey
- uid: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.ConfigurationManager
  commentId: P:Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.ConfigurationManager
  parent: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory
  isExternal: false
  name: ConfigurationManager
  nameWithType: TableStorageDataStoreConnectionStringFactory.ConfigurationManager
  fullName: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.ConfigurationManager
- uid: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.GetWritableConnectionStrings*
  commentId: Overload:Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.GetWritableConnectionStrings
  isExternal: false
  name: GetWritableConnectionStrings
  nameWithType: TableStorageDataStoreConnectionStringFactory.GetWritableConnectionStrings
  fullName: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.GetWritableConnectionStrings
- uid: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory.GetWritableConnectionStrings
  commentId: M:Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory.GetWritableConnectionStrings
  parent: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory
  isExternal: false
  name: GetWritableConnectionStrings()
  nameWithType: IStorageStoreConnectionStringFactory.GetWritableConnectionStrings()
  fullName: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory.GetWritableConnectionStrings()
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory.GetWritableConnectionStrings
    name: GetWritableConnectionStrings
    nameWithType: IStorageStoreConnectionStringFactory.GetWritableConnectionStrings
    fullName: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory.GetWritableConnectionStrings
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory.GetWritableConnectionStrings
    name: GetWritableConnectionStrings
    nameWithType: IStorageStoreConnectionStringFactory.GetWritableConnectionStrings
    fullName: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory.GetWritableConnectionStrings
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.TableStorageReadableDataStoreConnectionStringKey
  commentId: F:Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.TableStorageReadableDataStoreConnectionStringKey
  parent: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory
  isExternal: false
  name: TableStorageReadableDataStoreConnectionStringKey
  nameWithType: TableStorageDataStoreConnectionStringFactory.TableStorageReadableDataStoreConnectionStringKey
  fullName: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.TableStorageReadableDataStoreConnectionStringKey
- uid: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.GetReadableConnectionString*
  commentId: Overload:Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.GetReadableConnectionString
  isExternal: false
  name: GetReadableConnectionString
  nameWithType: TableStorageDataStoreConnectionStringFactory.GetReadableConnectionString
  fullName: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.GetReadableConnectionString
- uid: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory.GetReadableConnectionString
  commentId: M:Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory.GetReadableConnectionString
  parent: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory
  isExternal: false
  name: GetReadableConnectionString()
  nameWithType: IStorageStoreConnectionStringFactory.GetReadableConnectionString()
  fullName: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory.GetReadableConnectionString()
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory.GetReadableConnectionString
    name: GetReadableConnectionString
    nameWithType: IStorageStoreConnectionStringFactory.GetReadableConnectionString
    fullName: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory.GetReadableConnectionString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory.GetReadableConnectionString
    name: GetReadableConnectionString
    nameWithType: IStorageStoreConnectionStringFactory.GetReadableConnectionString
    fullName: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory.GetReadableConnectionString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.TableStorageBaseContainerNameKey
  commentId: F:Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.TableStorageBaseContainerNameKey
  parent: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory
  isExternal: false
  name: TableStorageBaseContainerNameKey
  nameWithType: TableStorageDataStoreConnectionStringFactory.TableStorageBaseContainerNameKey
  fullName: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.TableStorageBaseContainerNameKey
- uid: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.GetBaseContainerName*
  commentId: Overload:Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.GetBaseContainerName
  isExternal: false
  name: GetBaseContainerName
  nameWithType: TableStorageDataStoreConnectionStringFactory.GetBaseContainerName
  fullName: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.GetBaseContainerName
- uid: Cqrs.Azure.BlobStorage.ITableStorageStoreConnectionStringFactory.GetBaseContainerName
  commentId: M:Cqrs.Azure.BlobStorage.ITableStorageStoreConnectionStringFactory.GetBaseContainerName
  parent: Cqrs.Azure.BlobStorage.ITableStorageStoreConnectionStringFactory
  isExternal: false
  name: GetBaseContainerName()
  nameWithType: ITableStorageStoreConnectionStringFactory.GetBaseContainerName()
  fullName: Cqrs.Azure.BlobStorage.ITableStorageStoreConnectionStringFactory.GetBaseContainerName()
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.ITableStorageStoreConnectionStringFactory.GetBaseContainerName
    name: GetBaseContainerName
    nameWithType: ITableStorageStoreConnectionStringFactory.GetBaseContainerName
    fullName: Cqrs.Azure.BlobStorage.ITableStorageStoreConnectionStringFactory.GetBaseContainerName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.ITableStorageStoreConnectionStringFactory.GetBaseContainerName
    name: GetBaseContainerName
    nameWithType: ITableStorageStoreConnectionStringFactory.GetBaseContainerName
    fullName: Cqrs.Azure.BlobStorage.ITableStorageStoreConnectionStringFactory.GetBaseContainerName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.GetBaseContainerName
  commentId: M:Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.GetBaseContainerName
  parent: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory
  isExternal: false
  name: GetBaseContainerName()
  nameWithType: TableStorageDataStoreConnectionStringFactory.GetBaseContainerName()
  fullName: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.GetBaseContainerName()
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.GetBaseContainerName
    name: GetBaseContainerName
    nameWithType: TableStorageDataStoreConnectionStringFactory.GetBaseContainerName
    fullName: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.GetBaseContainerName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.GetBaseContainerName
    name: GetBaseContainerName
    nameWithType: TableStorageDataStoreConnectionStringFactory.GetBaseContainerName
    fullName: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.GetBaseContainerName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.GetContainerName*
  commentId: Overload:Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.GetContainerName
  isExternal: false
  name: GetContainerName
  nameWithType: TableStorageDataStoreConnectionStringFactory.GetContainerName
  fullName: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.GetContainerName
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.GetTableName*
  commentId: Overload:Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.GetTableName
  isExternal: false
  name: GetTableName
  nameWithType: TableStorageDataStoreConnectionStringFactory.GetTableName
  fullName: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.GetTableName
- uid: Cqrs.Azure.BlobStorage.DataStores.ITableStorageDataStoreConnectionStringFactory.GetTableName``1
  commentId: M:Cqrs.Azure.BlobStorage.DataStores.ITableStorageDataStoreConnectionStringFactory.GetTableName``1
  parent: Cqrs.Azure.BlobStorage.DataStores.ITableStorageDataStoreConnectionStringFactory
  isExternal: false
  name: GetTableName<TData>()
  nameWithType: ITableStorageDataStoreConnectionStringFactory.GetTableName<TData>()
  fullName: Cqrs.Azure.BlobStorage.DataStores.ITableStorageDataStoreConnectionStringFactory.GetTableName<TData>()
  nameWithType.vb: ITableStorageDataStoreConnectionStringFactory.GetTableName(Of TData)()
  fullName.vb: Cqrs.Azure.BlobStorage.DataStores.ITableStorageDataStoreConnectionStringFactory.GetTableName(Of TData)()
  name.vb: GetTableName(Of TData)()
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.DataStores.ITableStorageDataStoreConnectionStringFactory.GetTableName``1
    name: GetTableName<TData>
    nameWithType: ITableStorageDataStoreConnectionStringFactory.GetTableName<TData>
    fullName: Cqrs.Azure.BlobStorage.DataStores.ITableStorageDataStoreConnectionStringFactory.GetTableName<TData>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.DataStores.ITableStorageDataStoreConnectionStringFactory.GetTableName``1
    name: GetTableName(Of TData)
    nameWithType: ITableStorageDataStoreConnectionStringFactory.GetTableName(Of TData)
    fullName: Cqrs.Azure.BlobStorage.DataStores.ITableStorageDataStoreConnectionStringFactory.GetTableName(Of TData)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
