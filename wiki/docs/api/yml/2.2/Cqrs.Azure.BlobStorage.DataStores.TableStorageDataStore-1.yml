### YamlMime:ManagedReference
items:
- uid: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStore`1
  commentId: T:Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStore`1
  id: TableStorageDataStore`1
  parent: Cqrs.Azure.BlobStorage.DataStores
  children:
  - Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStore`1.#ctor(cdmdotnet.Logging.ILogger,Cqrs.Azure.BlobStorage.DataStores.ITableStorageDataStoreConnectionStringFactory)
  - Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStore`1.CreateTableEntity(`0)
  - Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStore`1.GetUpdatableTableEntity(`0)
  - Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStore`1.GetUpdatableTableEntity(Cqrs.Azure.BlobStorage.EntityTableEntity{`0})
  - Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStore`1.Remove(`0)
  langs:
  - csharp
  - vb
  name: TableStorageDataStore<TData>
  nameWithType: TableStorageDataStore<TData>
  fullName: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStore<TData>
  type: Class
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.BlobStorage/DataStores/TableStorageDataStore.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: TableStorageDataStore
    path: Framework/Azure/Cqrs.Azure.BlobStorage/DataStores/TableStorageDataStore.cs
    startLine: 19
  assemblies:
  - Cqrs.Azure.BlobStorage
  namespace: Cqrs.Azure.BlobStorage.DataStores
  summary: "\nA <xref href=\"Cqrs.Azure.BlobStorage.TableStorageStore%602\" data-throw-if-not-resolved=\"false\"></xref> that uses Azure Storage for storage.\n"
  example: []
  syntax:
    content: 'public class TableStorageDataStore<TData> : TableStorageStore<EntityTableEntity<TData>, TData>, IEnumerable<EntityTableEntity<TData>>, IDataStore<TData>, IOrderedQueryable<TData>, IQueryable<TData>, IEnumerable<TData>, IOrderedQueryable, IQueryable, IEnumerable, IDisposable where TData : Entity'
    typeParameters:
    - id: TData
      description: The <xref href="System.Type" data-throw-if-not-resolved="false"></xref> of <xref href="Microsoft.WindowsAzure.Storage.Table.TableEntity" data-throw-if-not-resolved="false"></xref> Azure Table Storage will contain.
    content.vb: >-
      Public Class TableStorageDataStore(Of TData As Entity)
          Inherits TableStorageStore(Of EntityTableEntity(Of TData), TData)
          Implements IEnumerable(Of EntityTableEntity(Of TData)), IDataStore(Of TData), IOrderedQueryable(Of TData), IQueryable(Of TData), IEnumerable(Of TData), IOrderedQueryable, IQueryable, IEnumerable, IDisposable
  inheritance:
  - System.Object
  - Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},Microsoft.WindowsAzure.Storage.Table.CloudTable}
  - Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},{TData}}
  derivedClasses:
  - Cqrs.Azure.Storage.DataStores.TableStorageDataStore`1
  implements:
  - System.Collections.Generic.IEnumerable{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}}}
  - Cqrs.DataStores.IDataStore{{TData}}
  - System.Linq.IOrderedQueryable{{TData}}
  - System.Linq.IQueryable{{TData}}
  - System.Collections.Generic.IEnumerable{{TData}}
  - System.Linq.IOrderedQueryable
  - System.Linq.IQueryable
  - System.Collections.IEnumerable
  - System.IDisposable
  inheritedMembers:
  - Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},{TData}}.Collection
  - Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},{TData}}.Initialise(Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory)
  - Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},{TData}}.System#Collections#Generic#IEnumerable{TCollectionItemData}#GetEnumerator
  - Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},{TData}}.GetEnumerator
  - Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},{TData}}.Expression
  - Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},{TData}}.ElementType
  - Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},{TData}}.Provider
  - Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},{TData}}.AsyncSaveData``2({TSaveData},System.Func{{TSaveData},Microsoft.WindowsAzure.Storage.Table.CloudTable,{TResult}},System.Func{{TSaveData},System.String})
  - Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},{TData}}.CreateTableEntity({TData})
  - Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},{TData}}.Add(Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}})
  - Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},{TData}}.Add(Microsoft.WindowsAzure.Storage.Table.ITableEntity)
  - Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},{TData}}.Add(System.Collections.Generic.IEnumerable{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}}})
  - Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},{TData}}.Add(System.Collections.Generic.IEnumerable{Microsoft.WindowsAzure.Storage.Table.ITableEntity})
  - Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},{TData}}.Destroy(Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}})
  - Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},{TData}}.Add({TData})
  - Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},{TData}}.Add(System.Collections.Generic.IEnumerable{{TData}})
  - Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},{TData}}.Remove({TData})
  - Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},{TData}}.Destroy({TData})
  - Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},{TData}}.RemoveAll
  - Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},{TData}}.Update({TData})
  - Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},{TData}}.Update(Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}})
  - Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},{TData}}.GetUpdatableTableEntity({TData})
  - Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},{TData}}.GetUpdatableTableEntity(Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}})
  - Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},{TData}}.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String,System.Boolean)
  - Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},{TData}}.GetByKeyAndRow(System.Guid)
  - Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},{TData}}.GetByKey
  - Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},{TData}}.ReplaceValues(Microsoft.WindowsAzure.Storage.Table.TableResult,Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}})
  - Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},{TData}}.GetSafeSourceName(System.String)
  - Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},Microsoft.WindowsAzure.Storage.Table.CloudTable}.WritableCollection
  - Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},Microsoft.WindowsAzure.Storage.Table.CloudTable}.ReadableStorageAccount
  - Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},Microsoft.WindowsAzure.Storage.Table.CloudTable}.Logger
  - Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},Microsoft.WindowsAzure.Storage.Table.CloudTable}.GetContainerName
  - Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},Microsoft.WindowsAzure.Storage.Table.CloudTable}.IsContainerPublic
  - Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},Microsoft.WindowsAzure.Storage.Table.CloudTable}.DefaultSettings
  - Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},Microsoft.WindowsAzure.Storage.Table.CloudTable}.Initialise(Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory)
  - Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},Microsoft.WindowsAzure.Storage.Table.CloudTable}.GetEnumerator
  - Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},Microsoft.WindowsAzure.Storage.Table.CloudTable}.System#Collections#IEnumerable#GetEnumerator
  - Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},Microsoft.WindowsAzure.Storage.Table.CloudTable}.Expression
  - Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},Microsoft.WindowsAzure.Storage.Table.CloudTable}.ElementType
  - Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},Microsoft.WindowsAzure.Storage.Table.CloudTable}.Provider
  - Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},Microsoft.WindowsAzure.Storage.Table.CloudTable}.Dispose
  - Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},Microsoft.WindowsAzure.Storage.Table.CloudTable}.Add(Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}})
  - Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},Microsoft.WindowsAzure.Storage.Table.CloudTable}.Add(System.Collections.Generic.IEnumerable{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}}})
  - Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},Microsoft.WindowsAzure.Storage.Table.CloudTable}.Destroy(Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}})
  - Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},Microsoft.WindowsAzure.Storage.Table.CloudTable}.RemoveAll
  - Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},Microsoft.WindowsAzure.Storage.Table.CloudTable}.Update(Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}})
  - Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},Microsoft.WindowsAzure.Storage.Table.CloudTable}.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String,System.Boolean)
  - Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},Microsoft.WindowsAzure.Storage.Table.CloudTable}.GetSafeSourceName(System.String)
  - Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},Microsoft.WindowsAzure.Storage.Table.CloudTable}.GetSafeSourceName(System.String,System.Boolean)
  - Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},Microsoft.WindowsAzure.Storage.Table.CloudTable}.AzureStorageRetryPolicy
  - Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},Microsoft.WindowsAzure.Storage.Table.CloudTable}.Deserialise(System.IO.Stream)
  - Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},Microsoft.WindowsAzure.Storage.Table.CloudTable}.Deserialise(System.String)
  - Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},Microsoft.WindowsAzure.Storage.Table.CloudTable}.Serialise(Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}})
  - Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},Microsoft.WindowsAzure.Storage.Table.CloudTable}.GetSerialisationSettings
  - Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},Microsoft.WindowsAzure.Storage.Table.CloudTable}.GetSerialiser
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Cqrs.DataStores.IDataStore{`0}.Cqrs.Sql.DataStores.SqlDataStoreExtensions.Where``2(System.Linq.Expressions.Expression{System.Func{{TData},System.Boolean}})
  - Cqrs.DataStores.IDataStore{`0}.Cqrs.Azure.BlobStorage.TableStorageStoreExtensions.GetByKeyAndRow``1(System.Guid)
  - Cqrs.DataStores.IDataStore{`0}.Cqrs.Azure.BlobStorage.TableStorageStoreExtensions.GetByKey``1
  - Cqrs.DataStores.IDataStore{`0}.Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByName``1(System.String)
  - Cqrs.DataStores.IDataStore{`0}.Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByFolder``1(System.String)
  - Cqrs.DataStores.IDataStore{`0}.Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByFolder``1
  nameWithType.vb: TableStorageDataStore(Of TData)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStore(Of TData)
  name.vb: TableStorageDataStore(Of TData)
- uid: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStore`1.#ctor(cdmdotnet.Logging.ILogger,Cqrs.Azure.BlobStorage.DataStores.ITableStorageDataStoreConnectionStringFactory)
  commentId: M:Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStore`1.#ctor(cdmdotnet.Logging.ILogger,Cqrs.Azure.BlobStorage.DataStores.ITableStorageDataStoreConnectionStringFactory)
  id: '#ctor(cdmdotnet.Logging.ILogger,Cqrs.Azure.BlobStorage.DataStores.ITableStorageDataStoreConnectionStringFactory)'
  parent: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStore`1
  langs:
  - csharp
  - vb
  name: TableStorageDataStore(ILogger, ITableStorageDataStoreConnectionStringFactory)
  nameWithType: TableStorageDataStore<TData>.TableStorageDataStore(ILogger, ITableStorageDataStoreConnectionStringFactory)
  fullName: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStore<TData>.TableStorageDataStore(cdmdotnet.Logging.ILogger, Cqrs.Azure.BlobStorage.DataStores.ITableStorageDataStoreConnectionStringFactory)
  type: Constructor
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.BlobStorage/DataStores/TableStorageDataStore.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: .ctor
    path: Framework/Azure/Cqrs.Azure.BlobStorage/DataStores/TableStorageDataStore.cs
    startLine: 26
  assemblies:
  - Cqrs.Azure.BlobStorage
  namespace: Cqrs.Azure.BlobStorage.DataStores
  summary: "\nInitializes a new instance of the <xref href=\"Cqrs.Azure.BlobStorage\" data-throw-if-not-resolved=\"false\"></xref> class using the specified container.\n"
  example: []
  syntax:
    content: public TableStorageDataStore(ILogger logger, ITableStorageDataStoreConnectionStringFactory tableStorageDataStoreConnectionStringFactory)
    parameters:
    - id: logger
      type: cdmdotnet.Logging.ILogger
    - id: tableStorageDataStoreConnectionStringFactory
      type: Cqrs.Azure.BlobStorage.DataStores.ITableStorageDataStoreConnectionStringFactory
    content.vb: Public Sub New(logger As ILogger, tableStorageDataStoreConnectionStringFactory As ITableStorageDataStoreConnectionStringFactory)
  overload: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStore`1.#ctor*
  nameWithType.vb: TableStorageDataStore(Of TData).TableStorageDataStore(ILogger, ITableStorageDataStoreConnectionStringFactory)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStore(Of TData).TableStorageDataStore(cdmdotnet.Logging.ILogger, Cqrs.Azure.BlobStorage.DataStores.ITableStorageDataStoreConnectionStringFactory)
- uid: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStore`1.Remove(`0)
  commentId: M:Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStore`1.Remove(`0)
  id: Remove(`0)
  parent: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStore`1
  langs:
  - csharp
  - vb
  name: Remove(TData)
  nameWithType: TableStorageDataStore<TData>.Remove(TData)
  fullName: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStore<TData>.Remove(TData)
  type: Method
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.BlobStorage/DataStores/TableStorageDataStore.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Remove
    path: Framework/Azure/Cqrs.Azure.BlobStorage/DataStores/TableStorageDataStore.cs
    startLine: 42
  assemblies:
  - Cqrs.Azure.BlobStorage
  namespace: Cqrs.Azure.BlobStorage.DataStores
  summary: "\nWill mark the <code data-dev-comment-type=\"paramref\">data</code> as logically (or soft).\n"
  example: []
  syntax:
    content: public override void Remove(TData data)
    parameters:
    - id: data
      type: '{TData}'
    content.vb: Public Overrides Sub Remove(data As TData)
  overridden: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},{TData}}.Remove({TData})
  overload: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStore`1.Remove*
  nameWithType.vb: TableStorageDataStore(Of TData).Remove(TData)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStore(Of TData).Remove(TData)
- uid: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStore`1.CreateTableEntity(`0)
  commentId: M:Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStore`1.CreateTableEntity(`0)
  id: CreateTableEntity(`0)
  parent: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStore`1
  langs:
  - csharp
  - vb
  name: CreateTableEntity(TData)
  nameWithType: TableStorageDataStore<TData>.CreateTableEntity(TData)
  fullName: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStore<TData>.CreateTableEntity(TData)
  type: Method
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.BlobStorage/DataStores/TableStorageDataStore.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: CreateTableEntity
    path: Framework/Azure/Cqrs.Azure.BlobStorage/DataStores/TableStorageDataStore.cs
    startLine: 56
  assemblies:
  - Cqrs.Azure.BlobStorage
  namespace: Cqrs.Azure.BlobStorage.DataStores
  summary: "\nCreates a new instance of <xref href=\"Cqrs.Azure.BlobStorage.EntityTableEntity%601\" data-throw-if-not-resolved=\"false\"></xref> populating it with the provided <code data-dev-comment-type=\"paramref\">data</code>.\n"
  example: []
  syntax:
    content: protected override ITableEntity CreateTableEntity(TData data)
    parameters:
    - id: data
      type: '{TData}'
      description: The data to store.
    return:
      type: Microsoft.WindowsAzure.Storage.Table.ITableEntity
    content.vb: Protected Overrides Function CreateTableEntity(data As TData) As ITableEntity
  overridden: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},{TData}}.CreateTableEntity({TData})
  overload: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStore`1.CreateTableEntity*
  nameWithType.vb: TableStorageDataStore(Of TData).CreateTableEntity(TData)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStore(Of TData).CreateTableEntity(TData)
- uid: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStore`1.GetUpdatableTableEntity(`0)
  commentId: M:Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStore`1.GetUpdatableTableEntity(`0)
  id: GetUpdatableTableEntity(`0)
  parent: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStore`1
  langs:
  - csharp
  - vb
  name: GetUpdatableTableEntity(TData)
  nameWithType: TableStorageDataStore<TData>.GetUpdatableTableEntity(TData)
  fullName: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStore<TData>.GetUpdatableTableEntity(TData)
  type: Method
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.BlobStorage/DataStores/TableStorageDataStore.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: GetUpdatableTableEntity
    path: Framework/Azure/Cqrs.Azure.BlobStorage/DataStores/TableStorageDataStore.cs
    startLine: 66
  assemblies:
  - Cqrs.Azure.BlobStorage
  namespace: Cqrs.Azure.BlobStorage.DataStores
  summary: "\nGets a <xref href=\"Microsoft.WindowsAzure.Storage.Table.TableOperation\" data-throw-if-not-resolved=\"false\"></xref> that calls <xref href=\"Microsoft.WindowsAzure.Storage.Table.TableOperation.Retrieve%60%601(System.String%2cSystem.String%2cSystem.Collections.Generic.List%7bSystem.String%7d)\" data-throw-if-not-resolved=\"false\"></xref>\nread for updating.\n"
  example: []
  syntax:
    content: protected override TableOperation GetUpdatableTableEntity(TData data)
    parameters:
    - id: data
      type: '{TData}'
      description: The data containing the <xref href="Cqrs.Entities.IEntity.Rsn" data-throw-if-not-resolved="false"></xref> property populated.
    return:
      type: Microsoft.WindowsAzure.Storage.Table.TableOperation
    content.vb: Protected Overrides Function GetUpdatableTableEntity(data As TData) As TableOperation
  overridden: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},{TData}}.GetUpdatableTableEntity({TData})
  overload: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStore`1.GetUpdatableTableEntity*
  nameWithType.vb: TableStorageDataStore(Of TData).GetUpdatableTableEntity(TData)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStore(Of TData).GetUpdatableTableEntity(TData)
- uid: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStore`1.GetUpdatableTableEntity(Cqrs.Azure.BlobStorage.EntityTableEntity{`0})
  commentId: M:Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStore`1.GetUpdatableTableEntity(Cqrs.Azure.BlobStorage.EntityTableEntity{`0})
  id: GetUpdatableTableEntity(Cqrs.Azure.BlobStorage.EntityTableEntity{`0})
  parent: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStore`1
  langs:
  - csharp
  - vb
  name: GetUpdatableTableEntity(EntityTableEntity<TData>)
  nameWithType: TableStorageDataStore<TData>.GetUpdatableTableEntity(EntityTableEntity<TData>)
  fullName: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStore<TData>.GetUpdatableTableEntity(Cqrs.Azure.BlobStorage.EntityTableEntity<TData>)
  type: Method
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.BlobStorage/DataStores/TableStorageDataStore.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: GetUpdatableTableEntity
    path: Framework/Azure/Cqrs.Azure.BlobStorage/DataStores/TableStorageDataStore.cs
    startLine: 76
  assemblies:
  - Cqrs.Azure.BlobStorage
  namespace: Cqrs.Azure.BlobStorage.DataStores
  summary: "\nGets a <xref href=\"Microsoft.WindowsAzure.Storage.Table.TableOperation\" data-throw-if-not-resolved=\"false\"></xref> that calls <xref href=\"Microsoft.WindowsAzure.Storage.Table.TableOperation.Retrieve%60%601(System.String%2cSystem.String%2cSystem.Collections.Generic.List%7bSystem.String%7d)\" data-throw-if-not-resolved=\"false\"></xref>\nread for updating.\n"
  example: []
  syntax:
    content: protected override TableOperation GetUpdatableTableEntity(EntityTableEntity<TData> data)
    parameters:
    - id: data
      type: Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}}
      description: The <xref href="Cqrs.Azure.BlobStorage.EntityTableEntity%601" data-throw-if-not-resolved="false"></xref> containing the <xref href="Cqrs.Azure.BlobStorage.EntityTableEntity%601.Entity" data-throw-if-not-resolved="false"></xref> containing the <xref href="Cqrs.Entities.IEntity.Rsn" data-throw-if-not-resolved="false"></xref> property populated.
    return:
      type: Microsoft.WindowsAzure.Storage.Table.TableOperation
    content.vb: Protected Overrides Function GetUpdatableTableEntity(data As EntityTableEntity(Of TData)) As TableOperation
  overridden: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},{TData}}.GetUpdatableTableEntity(Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}})
  overload: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStore`1.GetUpdatableTableEntity*
  nameWithType.vb: TableStorageDataStore(Of TData).GetUpdatableTableEntity(EntityTableEntity(Of TData))
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStore(Of TData).GetUpdatableTableEntity(Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData))
  name.vb: GetUpdatableTableEntity(EntityTableEntity(Of TData))
references:
- uid: Cqrs.Azure.BlobStorage.TableStorageStore`2
  commentId: T:Cqrs.Azure.BlobStorage.TableStorageStore`2
  isExternal: false
  name: TableStorageStore<TData, TCollectionItemData>
  nameWithType: TableStorageStore<TData, TCollectionItemData>
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<TData, TCollectionItemData>
  nameWithType.vb: TableStorageStore(Of TData, TCollectionItemData)
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of TData, TCollectionItemData)
  name.vb: TableStorageStore(Of TData, TCollectionItemData)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2
    name: TableStorageStore
    nameWithType: TableStorageStore
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TCollectionItemData
    nameWithType: TCollectionItemData
    fullName: TCollectionItemData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2
    name: TableStorageStore
    nameWithType: TableStorageStore
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TCollectionItemData
    nameWithType: TCollectionItemData
    fullName: TCollectionItemData
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Microsoft.WindowsAzure.Storage.Table.TableEntity
  commentId: T:Microsoft.WindowsAzure.Storage.Table.TableEntity
  parent: Microsoft.WindowsAzure.Storage.Table
  isExternal: true
  name: TableEntity
  nameWithType: TableEntity
  fullName: Microsoft.WindowsAzure.Storage.Table.TableEntity
- uid: Cqrs.Azure.BlobStorage.DataStores
  commentId: N:Cqrs.Azure.BlobStorage.DataStores
  isExternal: false
  name: Cqrs.Azure.BlobStorage.DataStores
  nameWithType: Cqrs.Azure.BlobStorage.DataStores
  fullName: Cqrs.Azure.BlobStorage.DataStores
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},Microsoft.WindowsAzure.Storage.Table.CloudTable}
  commentId: T:Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{`0},Microsoft.WindowsAzure.Storage.Table.CloudTable}
  parent: Cqrs.Azure.BlobStorage
  definition: Cqrs.Azure.BlobStorage.StorageStore`2
  name: StorageStore<EntityTableEntity<TData>, CloudTable>
  nameWithType: StorageStore<EntityTableEntity<TData>, CloudTable>
  fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Azure.BlobStorage.EntityTableEntity<TData>, Microsoft.WindowsAzure.Storage.Table.CloudTable>
  nameWithType.vb: StorageStore(Of EntityTableEntity(Of TData), CloudTable)
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData), Microsoft.WindowsAzure.Storage.Table.CloudTable)
  name.vb: StorageStore(Of EntityTableEntity(Of TData), CloudTable)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2
    name: StorageStore
    nameWithType: StorageStore
    fullName: Cqrs.Azure.BlobStorage.StorageStore
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cqrs.Azure.BlobStorage.EntityTableEntity`1
    name: EntityTableEntity
    nameWithType: EntityTableEntity
    fullName: Cqrs.Azure.BlobStorage.EntityTableEntity
  - name: <
    nameWithType: <
    fullName: <
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Table.CloudTable
    name: CloudTable
    nameWithType: CloudTable
    fullName: Microsoft.WindowsAzure.Storage.Table.CloudTable
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2
    name: StorageStore
    nameWithType: StorageStore
    fullName: Cqrs.Azure.BlobStorage.StorageStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Cqrs.Azure.BlobStorage.EntityTableEntity`1
    name: EntityTableEntity
    nameWithType: EntityTableEntity
    fullName: Cqrs.Azure.BlobStorage.EntityTableEntity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Table.CloudTable
    name: CloudTable
    nameWithType: CloudTable
    fullName: Microsoft.WindowsAzure.Storage.Table.CloudTable
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},{TData}}
  commentId: T:Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{`0},`0}
  parent: Cqrs.Azure.BlobStorage
  definition: Cqrs.Azure.BlobStorage.TableStorageStore`2
  name: TableStorageStore<EntityTableEntity<TData>, TData>
  nameWithType: TableStorageStore<EntityTableEntity<TData>, TData>
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<Cqrs.Azure.BlobStorage.EntityTableEntity<TData>, TData>
  nameWithType.vb: TableStorageStore(Of EntityTableEntity(Of TData), TData)
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData), TData)
  name.vb: TableStorageStore(Of EntityTableEntity(Of TData), TData)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2
    name: TableStorageStore
    nameWithType: TableStorageStore
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cqrs.Azure.BlobStorage.EntityTableEntity`1
    name: EntityTableEntity
    nameWithType: EntityTableEntity
    fullName: Cqrs.Azure.BlobStorage.EntityTableEntity
  - name: <
    nameWithType: <
    fullName: <
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2
    name: TableStorageStore
    nameWithType: TableStorageStore
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Cqrs.Azure.BlobStorage.EntityTableEntity`1
    name: EntityTableEntity
    nameWithType: EntityTableEntity
    fullName: Cqrs.Azure.BlobStorage.EntityTableEntity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}}}
  commentId: T:System.Collections.Generic.IEnumerable{Cqrs.Azure.BlobStorage.EntityTableEntity{`0}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<EntityTableEntity<TData>>
  nameWithType: IEnumerable<EntityTableEntity<TData>>
  fullName: System.Collections.Generic.IEnumerable<Cqrs.Azure.BlobStorage.EntityTableEntity<TData>>
  nameWithType.vb: IEnumerable(Of EntityTableEntity(Of TData))
  fullName.vb: System.Collections.Generic.IEnumerable(Of Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData))
  name.vb: IEnumerable(Of EntityTableEntity(Of TData))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cqrs.Azure.BlobStorage.EntityTableEntity`1
    name: EntityTableEntity
    nameWithType: EntityTableEntity
    fullName: Cqrs.Azure.BlobStorage.EntityTableEntity
  - name: <
    nameWithType: <
    fullName: <
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Cqrs.Azure.BlobStorage.EntityTableEntity`1
    name: EntityTableEntity
    nameWithType: EntityTableEntity
    fullName: Cqrs.Azure.BlobStorage.EntityTableEntity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.DataStores.IDataStore{{TData}}
  commentId: T:Cqrs.DataStores.IDataStore{`0}
  parent: Cqrs.DataStores
  definition: Cqrs.DataStores.IDataStore`1
  name: IDataStore<TData>
  nameWithType: IDataStore<TData>
  fullName: Cqrs.DataStores.IDataStore<TData>
  nameWithType.vb: IDataStore(Of TData)
  fullName.vb: Cqrs.DataStores.IDataStore(Of TData)
  name.vb: IDataStore(Of TData)
  spec.csharp:
  - uid: Cqrs.DataStores.IDataStore`1
    name: IDataStore
    nameWithType: IDataStore
    fullName: Cqrs.DataStores.IDataStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.DataStores.IDataStore`1
    name: IDataStore
    nameWithType: IDataStore
    fullName: Cqrs.DataStores.IDataStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.IOrderedQueryable{{TData}}
  commentId: T:System.Linq.IOrderedQueryable{`0}
  parent: System.Linq
  definition: System.Linq.IOrderedQueryable`1
  name: IOrderedQueryable<TData>
  nameWithType: IOrderedQueryable<TData>
  fullName: System.Linq.IOrderedQueryable<TData>
  nameWithType.vb: IOrderedQueryable(Of TData)
  fullName.vb: System.Linq.IOrderedQueryable(Of TData)
  name.vb: IOrderedQueryable(Of TData)
  spec.csharp:
  - uid: System.Linq.IOrderedQueryable`1
    name: IOrderedQueryable
    nameWithType: IOrderedQueryable
    fullName: System.Linq.IOrderedQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.IOrderedQueryable`1
    name: IOrderedQueryable
    nameWithType: IOrderedQueryable
    fullName: System.Linq.IOrderedQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.IQueryable{{TData}}
  commentId: T:System.Linq.IQueryable{`0}
  parent: System.Linq
  definition: System.Linq.IQueryable`1
  name: IQueryable<TData>
  nameWithType: IQueryable<TData>
  fullName: System.Linq.IQueryable<TData>
  nameWithType.vb: IQueryable(Of TData)
  fullName.vb: System.Linq.IQueryable(Of TData)
  name.vb: IQueryable(Of TData)
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{{TData}}
  commentId: T:System.Collections.Generic.IEnumerable{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<TData>
  nameWithType: IEnumerable<TData>
  fullName: System.Collections.Generic.IEnumerable<TData>
  nameWithType.vb: IEnumerable(Of TData)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TData)
  name.vb: IEnumerable(Of TData)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.IOrderedQueryable
  commentId: T:System.Linq.IOrderedQueryable
  parent: System.Linq
  isExternal: true
  name: IOrderedQueryable
  nameWithType: IOrderedQueryable
  fullName: System.Linq.IOrderedQueryable
- uid: System.Linq.IQueryable
  commentId: T:System.Linq.IQueryable
  parent: System.Linq
  isExternal: true
  name: IQueryable
  nameWithType: IQueryable
  fullName: System.Linq.IQueryable
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},{TData}}.Collection
  commentId: P:Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{`0},`0}.Collection
  parent: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},{TData}}
  definition: Cqrs.Azure.BlobStorage.TableStorageStore`2.Collection
  name: Collection
  nameWithType: TableStorageStore<EntityTableEntity<TData>, TData>.Collection
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<Cqrs.Azure.BlobStorage.EntityTableEntity<TData>, TData>.Collection
  nameWithType.vb: TableStorageStore(Of EntityTableEntity(Of TData), TData).Collection
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData), TData).Collection
- uid: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},{TData}}.Initialise(Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory)
  commentId: M:Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{`0},`0}.Initialise(Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory)
  parent: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},{TData}}
  definition: Cqrs.Azure.BlobStorage.TableStorageStore`2.Initialise(Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory)
  name: Initialise(IStorageStoreConnectionStringFactory)
  nameWithType: TableStorageStore<EntityTableEntity<TData>, TData>.Initialise(IStorageStoreConnectionStringFactory)
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<Cqrs.Azure.BlobStorage.EntityTableEntity<TData>, TData>.Initialise(Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory)
  nameWithType.vb: TableStorageStore(Of EntityTableEntity(Of TData), TData).Initialise(IStorageStoreConnectionStringFactory)
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData), TData).Initialise(Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Initialise(Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory)
    name: Initialise
    nameWithType: TableStorageStore<EntityTableEntity<TData>, TData>.Initialise
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore<Cqrs.Azure.BlobStorage.EntityTableEntity<TData>, TData>.Initialise
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory
    name: IStorageStoreConnectionStringFactory
    nameWithType: IStorageStoreConnectionStringFactory
    fullName: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Initialise(Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory)
    name: Initialise
    nameWithType: TableStorageStore(Of EntityTableEntity(Of TData), TData).Initialise
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore(Of Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData), TData).Initialise
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory
    name: IStorageStoreConnectionStringFactory
    nameWithType: IStorageStoreConnectionStringFactory
    fullName: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},{TData}}.System#Collections#Generic#IEnumerable{TCollectionItemData}#GetEnumerator
  commentId: M:Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{`0},`0}.System#Collections#Generic#IEnumerable{TCollectionItemData}#GetEnumerator
  parent: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},{TData}}
  definition: Cqrs.Azure.BlobStorage.TableStorageStore`2.System#Collections#Generic#IEnumerable{TCollectionItemData}#GetEnumerator
  name: IEnumerable<TData>.GetEnumerator()
  nameWithType: TableStorageStore<EntityTableEntity<TData>, TData>.IEnumerable<TData>.GetEnumerator()
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<Cqrs.Azure.BlobStorage.EntityTableEntity<TData>, TData>.System.Collections.Generic.IEnumerable<TData>.GetEnumerator()
  nameWithType.vb: TableStorageStore(Of EntityTableEntity(Of TData), TData).System.Collections.Generic.IEnumerable<TCollectionItemData>.GetEnumerator()
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData), TData).System.Collections.Generic.IEnumerable<TCollectionItemData>.GetEnumerator()
  name.vb: System.Collections.Generic.IEnumerable<TCollectionItemData>.GetEnumerator()
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.System#Collections#Generic#IEnumerable{TCollectionItemData}#GetEnumerator
    name: IEnumerable<TData>.GetEnumerator
    nameWithType: TableStorageStore<EntityTableEntity<TData>, TData>.IEnumerable<TData>.GetEnumerator
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore<Cqrs.Azure.BlobStorage.EntityTableEntity<TData>, TData>.System.Collections.Generic.IEnumerable<TData>.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.System#Collections#Generic#IEnumerable{TCollectionItemData}#GetEnumerator
    name: System.Collections.Generic.IEnumerable<TCollectionItemData>.GetEnumerator
    nameWithType: TableStorageStore(Of EntityTableEntity(Of TData), TData).System.Collections.Generic.IEnumerable<TCollectionItemData>.GetEnumerator
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore(Of Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData), TData).System.Collections.Generic.IEnumerable<TCollectionItemData>.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},{TData}}.GetEnumerator
  commentId: M:Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{`0},`0}.GetEnumerator
  parent: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},{TData}}
  definition: Cqrs.Azure.BlobStorage.TableStorageStore`2.GetEnumerator
  name: GetEnumerator()
  nameWithType: TableStorageStore<EntityTableEntity<TData>, TData>.GetEnumerator()
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<Cqrs.Azure.BlobStorage.EntityTableEntity<TData>, TData>.GetEnumerator()
  nameWithType.vb: TableStorageStore(Of EntityTableEntity(Of TData), TData).GetEnumerator()
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData), TData).GetEnumerator()
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.GetEnumerator
    name: GetEnumerator
    nameWithType: TableStorageStore<EntityTableEntity<TData>, TData>.GetEnumerator
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore<Cqrs.Azure.BlobStorage.EntityTableEntity<TData>, TData>.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.GetEnumerator
    name: GetEnumerator
    nameWithType: TableStorageStore(Of EntityTableEntity(Of TData), TData).GetEnumerator
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore(Of Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData), TData).GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},{TData}}.Expression
  commentId: P:Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{`0},`0}.Expression
  parent: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},{TData}}
  definition: Cqrs.Azure.BlobStorage.TableStorageStore`2.Expression
  name: Expression
  nameWithType: TableStorageStore<EntityTableEntity<TData>, TData>.Expression
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<Cqrs.Azure.BlobStorage.EntityTableEntity<TData>, TData>.Expression
  nameWithType.vb: TableStorageStore(Of EntityTableEntity(Of TData), TData).Expression
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData), TData).Expression
- uid: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},{TData}}.ElementType
  commentId: P:Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{`0},`0}.ElementType
  parent: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},{TData}}
  definition: Cqrs.Azure.BlobStorage.TableStorageStore`2.ElementType
  name: ElementType
  nameWithType: TableStorageStore<EntityTableEntity<TData>, TData>.ElementType
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<Cqrs.Azure.BlobStorage.EntityTableEntity<TData>, TData>.ElementType
  nameWithType.vb: TableStorageStore(Of EntityTableEntity(Of TData), TData).ElementType
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData), TData).ElementType
- uid: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},{TData}}.Provider
  commentId: P:Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{`0},`0}.Provider
  parent: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},{TData}}
  definition: Cqrs.Azure.BlobStorage.TableStorageStore`2.Provider
  name: Provider
  nameWithType: TableStorageStore<EntityTableEntity<TData>, TData>.Provider
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<Cqrs.Azure.BlobStorage.EntityTableEntity<TData>, TData>.Provider
  nameWithType.vb: TableStorageStore(Of EntityTableEntity(Of TData), TData).Provider
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData), TData).Provider
- uid: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},{TData}}.AsyncSaveData``2({TSaveData},System.Func{{TSaveData},Microsoft.WindowsAzure.Storage.Table.CloudTable,{TResult}},System.Func{{TSaveData},System.String})
  commentId: M:Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{`0},`0}.AsyncSaveData``2(``0,System.Func{``0,Microsoft.WindowsAzure.Storage.Table.CloudTable,``1},System.Func{``0,System.String})
  parent: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},{TData}}
  definition: Cqrs.Azure.BlobStorage.TableStorageStore`2.AsyncSaveData``2(``0,System.Func{``0,Microsoft.WindowsAzure.Storage.Table.CloudTable,``1},System.Func{``0,System.String})
  name: AsyncSaveData<TSaveData, TResult>(TSaveData, Func<TSaveData, CloudTable, TResult>, Func<TSaveData, String>)
  nameWithType: TableStorageStore<EntityTableEntity<TData>, TData>.AsyncSaveData<TSaveData, TResult>(TSaveData, Func<TSaveData, CloudTable, TResult>, Func<TSaveData, String>)
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<Cqrs.Azure.BlobStorage.EntityTableEntity<TData>, TData>.AsyncSaveData<TSaveData, TResult>(TSaveData, System.Func<TSaveData, Microsoft.WindowsAzure.Storage.Table.CloudTable, TResult>, System.Func<TSaveData, System.String>)
  nameWithType.vb: TableStorageStore(Of EntityTableEntity(Of TData), TData).AsyncSaveData(Of TSaveData, TResult)(TSaveData, Func(Of TSaveData, CloudTable, TResult), Func(Of TSaveData, String))
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData), TData).AsyncSaveData(Of TSaveData, TResult)(TSaveData, System.Func(Of TSaveData, Microsoft.WindowsAzure.Storage.Table.CloudTable, TResult), System.Func(Of TSaveData, System.String))
  name.vb: AsyncSaveData(Of TSaveData, TResult)(TSaveData, Func(Of TSaveData, CloudTable, TResult), Func(Of TSaveData, String))
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.AsyncSaveData``2(``0,System.Func{``0,Microsoft.WindowsAzure.Storage.Table.CloudTable,``1},System.Func{``0,System.String})
    name: AsyncSaveData<TSaveData, TResult>
    nameWithType: TableStorageStore<EntityTableEntity<TData>, TData>.AsyncSaveData<TSaveData, TResult>
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore<Cqrs.Azure.BlobStorage.EntityTableEntity<TData>, TData>.AsyncSaveData<TSaveData, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: TSaveData
    nameWithType: TSaveData
    fullName: TSaveData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSaveData
    nameWithType: TSaveData
    fullName: TSaveData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Table.CloudTable
    name: CloudTable
    nameWithType: CloudTable
    fullName: Microsoft.WindowsAzure.Storage.Table.CloudTable
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSaveData
    nameWithType: TSaveData
    fullName: TSaveData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.AsyncSaveData``2(``0,System.Func{``0,Microsoft.WindowsAzure.Storage.Table.CloudTable,``1},System.Func{``0,System.String})
    name: AsyncSaveData(Of TSaveData, TResult)
    nameWithType: TableStorageStore(Of EntityTableEntity(Of TData), TData).AsyncSaveData(Of TSaveData, TResult)
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore(Of Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData), TData).AsyncSaveData(Of TSaveData, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: TSaveData
    nameWithType: TSaveData
    fullName: TSaveData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSaveData
    nameWithType: TSaveData
    fullName: TSaveData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Table.CloudTable
    name: CloudTable
    nameWithType: CloudTable
    fullName: Microsoft.WindowsAzure.Storage.Table.CloudTable
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSaveData
    nameWithType: TSaveData
    fullName: TSaveData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},{TData}}.CreateTableEntity({TData})
  commentId: M:Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{`0},`0}.CreateTableEntity(`0)
  parent: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},{TData}}
  definition: Cqrs.Azure.BlobStorage.TableStorageStore`2.CreateTableEntity(`1)
  name: CreateTableEntity(TData)
  nameWithType: TableStorageStore<EntityTableEntity<TData>, TData>.CreateTableEntity(TData)
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<Cqrs.Azure.BlobStorage.EntityTableEntity<TData>, TData>.CreateTableEntity(TData)
  nameWithType.vb: TableStorageStore(Of EntityTableEntity(Of TData), TData).CreateTableEntity(TData)
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData), TData).CreateTableEntity(TData)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.CreateTableEntity(`1)
    name: CreateTableEntity
    nameWithType: TableStorageStore<EntityTableEntity<TData>, TData>.CreateTableEntity
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore<Cqrs.Azure.BlobStorage.EntityTableEntity<TData>, TData>.CreateTableEntity
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.CreateTableEntity(`1)
    name: CreateTableEntity
    nameWithType: TableStorageStore(Of EntityTableEntity(Of TData), TData).CreateTableEntity
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore(Of Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData), TData).CreateTableEntity
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},{TData}}.Add(Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}})
  commentId: M:Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{`0},`0}.Add(Cqrs.Azure.BlobStorage.EntityTableEntity{`0})
  parent: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},{TData}}
  definition: Cqrs.Azure.BlobStorage.TableStorageStore`2.Add(`0)
  name: Add(EntityTableEntity<TData>)
  nameWithType: TableStorageStore<EntityTableEntity<TData>, TData>.Add(EntityTableEntity<TData>)
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<Cqrs.Azure.BlobStorage.EntityTableEntity<TData>, TData>.Add(Cqrs.Azure.BlobStorage.EntityTableEntity<TData>)
  nameWithType.vb: TableStorageStore(Of EntityTableEntity(Of TData), TData).Add(EntityTableEntity(Of TData))
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData), TData).Add(Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData))
  name.vb: Add(EntityTableEntity(Of TData))
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Add(`0)
    name: Add
    nameWithType: TableStorageStore<EntityTableEntity<TData>, TData>.Add
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore<Cqrs.Azure.BlobStorage.EntityTableEntity<TData>, TData>.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Azure.BlobStorage.EntityTableEntity`1
    name: EntityTableEntity
    nameWithType: EntityTableEntity
    fullName: Cqrs.Azure.BlobStorage.EntityTableEntity
  - name: <
    nameWithType: <
    fullName: <
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Add(`0)
    name: Add
    nameWithType: TableStorageStore(Of EntityTableEntity(Of TData), TData).Add
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore(Of Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData), TData).Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Azure.BlobStorage.EntityTableEntity`1
    name: EntityTableEntity
    nameWithType: EntityTableEntity
    fullName: Cqrs.Azure.BlobStorage.EntityTableEntity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},{TData}}.Add(Microsoft.WindowsAzure.Storage.Table.ITableEntity)
  commentId: M:Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{`0},`0}.Add(Microsoft.WindowsAzure.Storage.Table.ITableEntity)
  parent: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},{TData}}
  definition: Cqrs.Azure.BlobStorage.TableStorageStore`2.Add(Microsoft.WindowsAzure.Storage.Table.ITableEntity)
  name: Add(ITableEntity)
  nameWithType: TableStorageStore<EntityTableEntity<TData>, TData>.Add(ITableEntity)
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<Cqrs.Azure.BlobStorage.EntityTableEntity<TData>, TData>.Add(Microsoft.WindowsAzure.Storage.Table.ITableEntity)
  nameWithType.vb: TableStorageStore(Of EntityTableEntity(Of TData), TData).Add(ITableEntity)
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData), TData).Add(Microsoft.WindowsAzure.Storage.Table.ITableEntity)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Add(Microsoft.WindowsAzure.Storage.Table.ITableEntity)
    name: Add
    nameWithType: TableStorageStore<EntityTableEntity<TData>, TData>.Add
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore<Cqrs.Azure.BlobStorage.EntityTableEntity<TData>, TData>.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.Table.ITableEntity
    name: ITableEntity
    nameWithType: ITableEntity
    fullName: Microsoft.WindowsAzure.Storage.Table.ITableEntity
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Add(Microsoft.WindowsAzure.Storage.Table.ITableEntity)
    name: Add
    nameWithType: TableStorageStore(Of EntityTableEntity(Of TData), TData).Add
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore(Of Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData), TData).Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.Table.ITableEntity
    name: ITableEntity
    nameWithType: ITableEntity
    fullName: Microsoft.WindowsAzure.Storage.Table.ITableEntity
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},{TData}}.Add(System.Collections.Generic.IEnumerable{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}}})
  commentId: M:Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{`0},`0}.Add(System.Collections.Generic.IEnumerable{Cqrs.Azure.BlobStorage.EntityTableEntity{`0}})
  parent: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},{TData}}
  definition: Cqrs.Azure.BlobStorage.TableStorageStore`2.Add(System.Collections.Generic.IEnumerable{`0})
  name: Add(IEnumerable<EntityTableEntity<TData>>)
  nameWithType: TableStorageStore<EntityTableEntity<TData>, TData>.Add(IEnumerable<EntityTableEntity<TData>>)
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<Cqrs.Azure.BlobStorage.EntityTableEntity<TData>, TData>.Add(System.Collections.Generic.IEnumerable<Cqrs.Azure.BlobStorage.EntityTableEntity<TData>>)
  nameWithType.vb: TableStorageStore(Of EntityTableEntity(Of TData), TData).Add(IEnumerable(Of EntityTableEntity(Of TData)))
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData), TData).Add(System.Collections.Generic.IEnumerable(Of Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData)))
  name.vb: Add(IEnumerable(Of EntityTableEntity(Of TData)))
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Add(System.Collections.Generic.IEnumerable{`0})
    name: Add
    nameWithType: TableStorageStore<EntityTableEntity<TData>, TData>.Add
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore<Cqrs.Azure.BlobStorage.EntityTableEntity<TData>, TData>.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cqrs.Azure.BlobStorage.EntityTableEntity`1
    name: EntityTableEntity
    nameWithType: EntityTableEntity
    fullName: Cqrs.Azure.BlobStorage.EntityTableEntity
  - name: <
    nameWithType: <
    fullName: <
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Add(System.Collections.Generic.IEnumerable{`0})
    name: Add
    nameWithType: TableStorageStore(Of EntityTableEntity(Of TData), TData).Add
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore(Of Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData), TData).Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Cqrs.Azure.BlobStorage.EntityTableEntity`1
    name: EntityTableEntity
    nameWithType: EntityTableEntity
    fullName: Cqrs.Azure.BlobStorage.EntityTableEntity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},{TData}}.Add(System.Collections.Generic.IEnumerable{Microsoft.WindowsAzure.Storage.Table.ITableEntity})
  commentId: M:Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{`0},`0}.Add(System.Collections.Generic.IEnumerable{Microsoft.WindowsAzure.Storage.Table.ITableEntity})
  parent: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},{TData}}
  definition: Cqrs.Azure.BlobStorage.TableStorageStore`2.Add(System.Collections.Generic.IEnumerable{Microsoft.WindowsAzure.Storage.Table.ITableEntity})
  name: Add(IEnumerable<ITableEntity>)
  nameWithType: TableStorageStore<EntityTableEntity<TData>, TData>.Add(IEnumerable<ITableEntity>)
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<Cqrs.Azure.BlobStorage.EntityTableEntity<TData>, TData>.Add(System.Collections.Generic.IEnumerable<Microsoft.WindowsAzure.Storage.Table.ITableEntity>)
  nameWithType.vb: TableStorageStore(Of EntityTableEntity(Of TData), TData).Add(IEnumerable(Of ITableEntity))
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData), TData).Add(System.Collections.Generic.IEnumerable(Of Microsoft.WindowsAzure.Storage.Table.ITableEntity))
  name.vb: Add(IEnumerable(Of ITableEntity))
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Add(System.Collections.Generic.IEnumerable{Microsoft.WindowsAzure.Storage.Table.ITableEntity})
    name: Add
    nameWithType: TableStorageStore<EntityTableEntity<TData>, TData>.Add
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore<Cqrs.Azure.BlobStorage.EntityTableEntity<TData>, TData>.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Storage.Table.ITableEntity
    name: ITableEntity
    nameWithType: ITableEntity
    fullName: Microsoft.WindowsAzure.Storage.Table.ITableEntity
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Add(System.Collections.Generic.IEnumerable{Microsoft.WindowsAzure.Storage.Table.ITableEntity})
    name: Add
    nameWithType: TableStorageStore(Of EntityTableEntity(Of TData), TData).Add
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore(Of Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData), TData).Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Storage.Table.ITableEntity
    name: ITableEntity
    nameWithType: ITableEntity
    fullName: Microsoft.WindowsAzure.Storage.Table.ITableEntity
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},{TData}}.Destroy(Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}})
  commentId: M:Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{`0},`0}.Destroy(Cqrs.Azure.BlobStorage.EntityTableEntity{`0})
  parent: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},{TData}}
  definition: Cqrs.Azure.BlobStorage.TableStorageStore`2.Destroy(`0)
  name: Destroy(EntityTableEntity<TData>)
  nameWithType: TableStorageStore<EntityTableEntity<TData>, TData>.Destroy(EntityTableEntity<TData>)
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<Cqrs.Azure.BlobStorage.EntityTableEntity<TData>, TData>.Destroy(Cqrs.Azure.BlobStorage.EntityTableEntity<TData>)
  nameWithType.vb: TableStorageStore(Of EntityTableEntity(Of TData), TData).Destroy(EntityTableEntity(Of TData))
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData), TData).Destroy(Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData))
  name.vb: Destroy(EntityTableEntity(Of TData))
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Destroy(`0)
    name: Destroy
    nameWithType: TableStorageStore<EntityTableEntity<TData>, TData>.Destroy
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore<Cqrs.Azure.BlobStorage.EntityTableEntity<TData>, TData>.Destroy
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Azure.BlobStorage.EntityTableEntity`1
    name: EntityTableEntity
    nameWithType: EntityTableEntity
    fullName: Cqrs.Azure.BlobStorage.EntityTableEntity
  - name: <
    nameWithType: <
    fullName: <
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Destroy(`0)
    name: Destroy
    nameWithType: TableStorageStore(Of EntityTableEntity(Of TData), TData).Destroy
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore(Of Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData), TData).Destroy
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Azure.BlobStorage.EntityTableEntity`1
    name: EntityTableEntity
    nameWithType: EntityTableEntity
    fullName: Cqrs.Azure.BlobStorage.EntityTableEntity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},{TData}}.Add({TData})
  commentId: M:Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{`0},`0}.Add(`0)
  parent: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},{TData}}
  definition: Cqrs.Azure.BlobStorage.TableStorageStore`2.Add(`1)
  name: Add(TData)
  nameWithType: TableStorageStore<EntityTableEntity<TData>, TData>.Add(TData)
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<Cqrs.Azure.BlobStorage.EntityTableEntity<TData>, TData>.Add(TData)
  nameWithType.vb: TableStorageStore(Of EntityTableEntity(Of TData), TData).Add(TData)
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData), TData).Add(TData)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Add(`1)
    name: Add
    nameWithType: TableStorageStore<EntityTableEntity<TData>, TData>.Add
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore<Cqrs.Azure.BlobStorage.EntityTableEntity<TData>, TData>.Add
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Add(`1)
    name: Add
    nameWithType: TableStorageStore(Of EntityTableEntity(Of TData), TData).Add
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore(Of Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData), TData).Add
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},{TData}}.Add(System.Collections.Generic.IEnumerable{{TData}})
  commentId: M:Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{`0},`0}.Add(System.Collections.Generic.IEnumerable{`0})
  parent: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},{TData}}
  definition: Cqrs.Azure.BlobStorage.TableStorageStore`2.Add(System.Collections.Generic.IEnumerable{`1})
  name: Add(IEnumerable<TData>)
  nameWithType: TableStorageStore<EntityTableEntity<TData>, TData>.Add(IEnumerable<TData>)
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<Cqrs.Azure.BlobStorage.EntityTableEntity<TData>, TData>.Add(System.Collections.Generic.IEnumerable<TData>)
  nameWithType.vb: TableStorageStore(Of EntityTableEntity(Of TData), TData).Add(IEnumerable(Of TData))
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData), TData).Add(System.Collections.Generic.IEnumerable(Of TData))
  name.vb: Add(IEnumerable(Of TData))
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Add(System.Collections.Generic.IEnumerable{`1})
    name: Add
    nameWithType: TableStorageStore<EntityTableEntity<TData>, TData>.Add
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore<Cqrs.Azure.BlobStorage.EntityTableEntity<TData>, TData>.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Add(System.Collections.Generic.IEnumerable{`1})
    name: Add
    nameWithType: TableStorageStore(Of EntityTableEntity(Of TData), TData).Add
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore(Of Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData), TData).Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},{TData}}.Remove({TData})
  commentId: M:Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{`0},`0}.Remove(`0)
  parent: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},{TData}}
  definition: Cqrs.Azure.BlobStorage.TableStorageStore`2.Remove(`1)
  name: Remove(TData)
  nameWithType: TableStorageStore<EntityTableEntity<TData>, TData>.Remove(TData)
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<Cqrs.Azure.BlobStorage.EntityTableEntity<TData>, TData>.Remove(TData)
  nameWithType.vb: TableStorageStore(Of EntityTableEntity(Of TData), TData).Remove(TData)
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData), TData).Remove(TData)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Remove(`1)
    name: Remove
    nameWithType: TableStorageStore<EntityTableEntity<TData>, TData>.Remove
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore<Cqrs.Azure.BlobStorage.EntityTableEntity<TData>, TData>.Remove
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Remove(`1)
    name: Remove
    nameWithType: TableStorageStore(Of EntityTableEntity(Of TData), TData).Remove
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore(Of Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData), TData).Remove
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},{TData}}.Destroy({TData})
  commentId: M:Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{`0},`0}.Destroy(`0)
  parent: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},{TData}}
  definition: Cqrs.Azure.BlobStorage.TableStorageStore`2.Destroy(`1)
  name: Destroy(TData)
  nameWithType: TableStorageStore<EntityTableEntity<TData>, TData>.Destroy(TData)
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<Cqrs.Azure.BlobStorage.EntityTableEntity<TData>, TData>.Destroy(TData)
  nameWithType.vb: TableStorageStore(Of EntityTableEntity(Of TData), TData).Destroy(TData)
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData), TData).Destroy(TData)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Destroy(`1)
    name: Destroy
    nameWithType: TableStorageStore<EntityTableEntity<TData>, TData>.Destroy
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore<Cqrs.Azure.BlobStorage.EntityTableEntity<TData>, TData>.Destroy
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Destroy(`1)
    name: Destroy
    nameWithType: TableStorageStore(Of EntityTableEntity(Of TData), TData).Destroy
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore(Of Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData), TData).Destroy
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},{TData}}.RemoveAll
  commentId: M:Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{`0},`0}.RemoveAll
  parent: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},{TData}}
  definition: Cqrs.Azure.BlobStorage.TableStorageStore`2.RemoveAll
  name: RemoveAll()
  nameWithType: TableStorageStore<EntityTableEntity<TData>, TData>.RemoveAll()
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<Cqrs.Azure.BlobStorage.EntityTableEntity<TData>, TData>.RemoveAll()
  nameWithType.vb: TableStorageStore(Of EntityTableEntity(Of TData), TData).RemoveAll()
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData), TData).RemoveAll()
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.RemoveAll
    name: RemoveAll
    nameWithType: TableStorageStore<EntityTableEntity<TData>, TData>.RemoveAll
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore<Cqrs.Azure.BlobStorage.EntityTableEntity<TData>, TData>.RemoveAll
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.RemoveAll
    name: RemoveAll
    nameWithType: TableStorageStore(Of EntityTableEntity(Of TData), TData).RemoveAll
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore(Of Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData), TData).RemoveAll
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},{TData}}.Update({TData})
  commentId: M:Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{`0},`0}.Update(`0)
  parent: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},{TData}}
  definition: Cqrs.Azure.BlobStorage.TableStorageStore`2.Update(`1)
  name: Update(TData)
  nameWithType: TableStorageStore<EntityTableEntity<TData>, TData>.Update(TData)
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<Cqrs.Azure.BlobStorage.EntityTableEntity<TData>, TData>.Update(TData)
  nameWithType.vb: TableStorageStore(Of EntityTableEntity(Of TData), TData).Update(TData)
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData), TData).Update(TData)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Update(`1)
    name: Update
    nameWithType: TableStorageStore<EntityTableEntity<TData>, TData>.Update
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore<Cqrs.Azure.BlobStorage.EntityTableEntity<TData>, TData>.Update
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Update(`1)
    name: Update
    nameWithType: TableStorageStore(Of EntityTableEntity(Of TData), TData).Update
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore(Of Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData), TData).Update
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},{TData}}.Update(Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}})
  commentId: M:Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{`0},`0}.Update(Cqrs.Azure.BlobStorage.EntityTableEntity{`0})
  parent: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},{TData}}
  definition: Cqrs.Azure.BlobStorage.TableStorageStore`2.Update(`0)
  name: Update(EntityTableEntity<TData>)
  nameWithType: TableStorageStore<EntityTableEntity<TData>, TData>.Update(EntityTableEntity<TData>)
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<Cqrs.Azure.BlobStorage.EntityTableEntity<TData>, TData>.Update(Cqrs.Azure.BlobStorage.EntityTableEntity<TData>)
  nameWithType.vb: TableStorageStore(Of EntityTableEntity(Of TData), TData).Update(EntityTableEntity(Of TData))
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData), TData).Update(Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData))
  name.vb: Update(EntityTableEntity(Of TData))
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Update(`0)
    name: Update
    nameWithType: TableStorageStore<EntityTableEntity<TData>, TData>.Update
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore<Cqrs.Azure.BlobStorage.EntityTableEntity<TData>, TData>.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Azure.BlobStorage.EntityTableEntity`1
    name: EntityTableEntity
    nameWithType: EntityTableEntity
    fullName: Cqrs.Azure.BlobStorage.EntityTableEntity
  - name: <
    nameWithType: <
    fullName: <
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Update(`0)
    name: Update
    nameWithType: TableStorageStore(Of EntityTableEntity(Of TData), TData).Update
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore(Of Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData), TData).Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Azure.BlobStorage.EntityTableEntity`1
    name: EntityTableEntity
    nameWithType: EntityTableEntity
    fullName: Cqrs.Azure.BlobStorage.EntityTableEntity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},{TData}}.GetUpdatableTableEntity({TData})
  commentId: M:Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{`0},`0}.GetUpdatableTableEntity(`0)
  parent: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},{TData}}
  definition: Cqrs.Azure.BlobStorage.TableStorageStore`2.GetUpdatableTableEntity(`1)
  name: GetUpdatableTableEntity(TData)
  nameWithType: TableStorageStore<EntityTableEntity<TData>, TData>.GetUpdatableTableEntity(TData)
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<Cqrs.Azure.BlobStorage.EntityTableEntity<TData>, TData>.GetUpdatableTableEntity(TData)
  nameWithType.vb: TableStorageStore(Of EntityTableEntity(Of TData), TData).GetUpdatableTableEntity(TData)
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData), TData).GetUpdatableTableEntity(TData)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.GetUpdatableTableEntity(`1)
    name: GetUpdatableTableEntity
    nameWithType: TableStorageStore<EntityTableEntity<TData>, TData>.GetUpdatableTableEntity
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore<Cqrs.Azure.BlobStorage.EntityTableEntity<TData>, TData>.GetUpdatableTableEntity
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.GetUpdatableTableEntity(`1)
    name: GetUpdatableTableEntity
    nameWithType: TableStorageStore(Of EntityTableEntity(Of TData), TData).GetUpdatableTableEntity
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore(Of Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData), TData).GetUpdatableTableEntity
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},{TData}}.GetUpdatableTableEntity(Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}})
  commentId: M:Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{`0},`0}.GetUpdatableTableEntity(Cqrs.Azure.BlobStorage.EntityTableEntity{`0})
  parent: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},{TData}}
  definition: Cqrs.Azure.BlobStorage.TableStorageStore`2.GetUpdatableTableEntity(`0)
  name: GetUpdatableTableEntity(EntityTableEntity<TData>)
  nameWithType: TableStorageStore<EntityTableEntity<TData>, TData>.GetUpdatableTableEntity(EntityTableEntity<TData>)
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<Cqrs.Azure.BlobStorage.EntityTableEntity<TData>, TData>.GetUpdatableTableEntity(Cqrs.Azure.BlobStorage.EntityTableEntity<TData>)
  nameWithType.vb: TableStorageStore(Of EntityTableEntity(Of TData), TData).GetUpdatableTableEntity(EntityTableEntity(Of TData))
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData), TData).GetUpdatableTableEntity(Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData))
  name.vb: GetUpdatableTableEntity(EntityTableEntity(Of TData))
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.GetUpdatableTableEntity(`0)
    name: GetUpdatableTableEntity
    nameWithType: TableStorageStore<EntityTableEntity<TData>, TData>.GetUpdatableTableEntity
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore<Cqrs.Azure.BlobStorage.EntityTableEntity<TData>, TData>.GetUpdatableTableEntity
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Azure.BlobStorage.EntityTableEntity`1
    name: EntityTableEntity
    nameWithType: EntityTableEntity
    fullName: Cqrs.Azure.BlobStorage.EntityTableEntity
  - name: <
    nameWithType: <
    fullName: <
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.GetUpdatableTableEntity(`0)
    name: GetUpdatableTableEntity
    nameWithType: TableStorageStore(Of EntityTableEntity(Of TData), TData).GetUpdatableTableEntity
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore(Of Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData), TData).GetUpdatableTableEntity
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Azure.BlobStorage.EntityTableEntity`1
    name: EntityTableEntity
    nameWithType: EntityTableEntity
    fullName: Cqrs.Azure.BlobStorage.EntityTableEntity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},{TData}}.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String,System.Boolean)
  commentId: M:Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{`0},`0}.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String,System.Boolean)
  parent: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},{TData}}
  definition: Cqrs.Azure.BlobStorage.TableStorageStore`2.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String,System.Boolean)
  name: CreateSource(CloudStorageAccount, String, Boolean)
  nameWithType: TableStorageStore<EntityTableEntity<TData>, TData>.CreateSource(CloudStorageAccount, String, Boolean)
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<Cqrs.Azure.BlobStorage.EntityTableEntity<TData>, TData>.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount, System.String, System.Boolean)
  nameWithType.vb: TableStorageStore(Of EntityTableEntity(Of TData), TData).CreateSource(CloudStorageAccount, String, Boolean)
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData), TData).CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount, System.String, System.Boolean)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String,System.Boolean)
    name: CreateSource
    nameWithType: TableStorageStore<EntityTableEntity<TData>, TData>.CreateSource
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore<Cqrs.Azure.BlobStorage.EntityTableEntity<TData>, TData>.CreateSource
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.CloudStorageAccount
    name: CloudStorageAccount
    nameWithType: CloudStorageAccount
    fullName: Microsoft.WindowsAzure.Storage.CloudStorageAccount
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String,System.Boolean)
    name: CreateSource
    nameWithType: TableStorageStore(Of EntityTableEntity(Of TData), TData).CreateSource
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore(Of Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData), TData).CreateSource
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.CloudStorageAccount
    name: CloudStorageAccount
    nameWithType: CloudStorageAccount
    fullName: Microsoft.WindowsAzure.Storage.CloudStorageAccount
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},{TData}}.GetByKeyAndRow(System.Guid)
  commentId: M:Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{`0},`0}.GetByKeyAndRow(System.Guid)
  parent: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},{TData}}
  definition: Cqrs.Azure.BlobStorage.TableStorageStore`2.GetByKeyAndRow(System.Guid)
  name: GetByKeyAndRow(Guid)
  nameWithType: TableStorageStore<EntityTableEntity<TData>, TData>.GetByKeyAndRow(Guid)
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<Cqrs.Azure.BlobStorage.EntityTableEntity<TData>, TData>.GetByKeyAndRow(System.Guid)
  nameWithType.vb: TableStorageStore(Of EntityTableEntity(Of TData), TData).GetByKeyAndRow(Guid)
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData), TData).GetByKeyAndRow(System.Guid)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.GetByKeyAndRow(System.Guid)
    name: GetByKeyAndRow
    nameWithType: TableStorageStore<EntityTableEntity<TData>, TData>.GetByKeyAndRow
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore<Cqrs.Azure.BlobStorage.EntityTableEntity<TData>, TData>.GetByKeyAndRow
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.GetByKeyAndRow(System.Guid)
    name: GetByKeyAndRow
    nameWithType: TableStorageStore(Of EntityTableEntity(Of TData), TData).GetByKeyAndRow
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore(Of Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData), TData).GetByKeyAndRow
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},{TData}}.GetByKey
  commentId: M:Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{`0},`0}.GetByKey
  parent: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},{TData}}
  definition: Cqrs.Azure.BlobStorage.TableStorageStore`2.GetByKey
  name: GetByKey()
  nameWithType: TableStorageStore<EntityTableEntity<TData>, TData>.GetByKey()
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<Cqrs.Azure.BlobStorage.EntityTableEntity<TData>, TData>.GetByKey()
  nameWithType.vb: TableStorageStore(Of EntityTableEntity(Of TData), TData).GetByKey()
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData), TData).GetByKey()
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.GetByKey
    name: GetByKey
    nameWithType: TableStorageStore<EntityTableEntity<TData>, TData>.GetByKey
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore<Cqrs.Azure.BlobStorage.EntityTableEntity<TData>, TData>.GetByKey
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.GetByKey
    name: GetByKey
    nameWithType: TableStorageStore(Of EntityTableEntity(Of TData), TData).GetByKey
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore(Of Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData), TData).GetByKey
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},{TData}}.ReplaceValues(Microsoft.WindowsAzure.Storage.Table.TableResult,Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}})
  commentId: M:Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{`0},`0}.ReplaceValues(Microsoft.WindowsAzure.Storage.Table.TableResult,Cqrs.Azure.BlobStorage.EntityTableEntity{`0})
  parent: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},{TData}}
  definition: Cqrs.Azure.BlobStorage.TableStorageStore`2.ReplaceValues(Microsoft.WindowsAzure.Storage.Table.TableResult,`0)
  name: ReplaceValues(TableResult, EntityTableEntity<TData>)
  nameWithType: TableStorageStore<EntityTableEntity<TData>, TData>.ReplaceValues(TableResult, EntityTableEntity<TData>)
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<Cqrs.Azure.BlobStorage.EntityTableEntity<TData>, TData>.ReplaceValues(Microsoft.WindowsAzure.Storage.Table.TableResult, Cqrs.Azure.BlobStorage.EntityTableEntity<TData>)
  nameWithType.vb: TableStorageStore(Of EntityTableEntity(Of TData), TData).ReplaceValues(TableResult, EntityTableEntity(Of TData))
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData), TData).ReplaceValues(Microsoft.WindowsAzure.Storage.Table.TableResult, Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData))
  name.vb: ReplaceValues(TableResult, EntityTableEntity(Of TData))
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.ReplaceValues(Microsoft.WindowsAzure.Storage.Table.TableResult,`0)
    name: ReplaceValues
    nameWithType: TableStorageStore<EntityTableEntity<TData>, TData>.ReplaceValues
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore<Cqrs.Azure.BlobStorage.EntityTableEntity<TData>, TData>.ReplaceValues
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.Table.TableResult
    name: TableResult
    nameWithType: TableResult
    fullName: Microsoft.WindowsAzure.Storage.Table.TableResult
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Cqrs.Azure.BlobStorage.EntityTableEntity`1
    name: EntityTableEntity
    nameWithType: EntityTableEntity
    fullName: Cqrs.Azure.BlobStorage.EntityTableEntity
  - name: <
    nameWithType: <
    fullName: <
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.ReplaceValues(Microsoft.WindowsAzure.Storage.Table.TableResult,`0)
    name: ReplaceValues
    nameWithType: TableStorageStore(Of EntityTableEntity(Of TData), TData).ReplaceValues
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore(Of Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData), TData).ReplaceValues
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.Table.TableResult
    name: TableResult
    nameWithType: TableResult
    fullName: Microsoft.WindowsAzure.Storage.Table.TableResult
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Cqrs.Azure.BlobStorage.EntityTableEntity`1
    name: EntityTableEntity
    nameWithType: EntityTableEntity
    fullName: Cqrs.Azure.BlobStorage.EntityTableEntity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},{TData}}.GetSafeSourceName(System.String)
  commentId: M:Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{`0},`0}.GetSafeSourceName(System.String)
  parent: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},{TData}}
  definition: Cqrs.Azure.BlobStorage.TableStorageStore`2.GetSafeSourceName(System.String)
  name: GetSafeSourceName(String)
  nameWithType: TableStorageStore<EntityTableEntity<TData>, TData>.GetSafeSourceName(String)
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<Cqrs.Azure.BlobStorage.EntityTableEntity<TData>, TData>.GetSafeSourceName(System.String)
  nameWithType.vb: TableStorageStore(Of EntityTableEntity(Of TData), TData).GetSafeSourceName(String)
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData), TData).GetSafeSourceName(System.String)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.GetSafeSourceName(System.String)
    name: GetSafeSourceName
    nameWithType: TableStorageStore<EntityTableEntity<TData>, TData>.GetSafeSourceName
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore<Cqrs.Azure.BlobStorage.EntityTableEntity<TData>, TData>.GetSafeSourceName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.GetSafeSourceName(System.String)
    name: GetSafeSourceName
    nameWithType: TableStorageStore(Of EntityTableEntity(Of TData), TData).GetSafeSourceName
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore(Of Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData), TData).GetSafeSourceName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},Microsoft.WindowsAzure.Storage.Table.CloudTable}.WritableCollection
  commentId: P:Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{`0},Microsoft.WindowsAzure.Storage.Table.CloudTable}.WritableCollection
  parent: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},Microsoft.WindowsAzure.Storage.Table.CloudTable}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.WritableCollection
  name: WritableCollection
  nameWithType: StorageStore<EntityTableEntity<TData>, CloudTable>.WritableCollection
  fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Azure.BlobStorage.EntityTableEntity<TData>, Microsoft.WindowsAzure.Storage.Table.CloudTable>.WritableCollection
  nameWithType.vb: StorageStore(Of EntityTableEntity(Of TData), CloudTable).WritableCollection
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData), Microsoft.WindowsAzure.Storage.Table.CloudTable).WritableCollection
- uid: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},Microsoft.WindowsAzure.Storage.Table.CloudTable}.ReadableStorageAccount
  commentId: P:Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{`0},Microsoft.WindowsAzure.Storage.Table.CloudTable}.ReadableStorageAccount
  parent: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},Microsoft.WindowsAzure.Storage.Table.CloudTable}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.ReadableStorageAccount
  name: ReadableStorageAccount
  nameWithType: StorageStore<EntityTableEntity<TData>, CloudTable>.ReadableStorageAccount
  fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Azure.BlobStorage.EntityTableEntity<TData>, Microsoft.WindowsAzure.Storage.Table.CloudTable>.ReadableStorageAccount
  nameWithType.vb: StorageStore(Of EntityTableEntity(Of TData), CloudTable).ReadableStorageAccount
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData), Microsoft.WindowsAzure.Storage.Table.CloudTable).ReadableStorageAccount
- uid: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},Microsoft.WindowsAzure.Storage.Table.CloudTable}.Logger
  commentId: P:Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{`0},Microsoft.WindowsAzure.Storage.Table.CloudTable}.Logger
  parent: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},Microsoft.WindowsAzure.Storage.Table.CloudTable}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.Logger
  name: Logger
  nameWithType: StorageStore<EntityTableEntity<TData>, CloudTable>.Logger
  fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Azure.BlobStorage.EntityTableEntity<TData>, Microsoft.WindowsAzure.Storage.Table.CloudTable>.Logger
  nameWithType.vb: StorageStore(Of EntityTableEntity(Of TData), CloudTable).Logger
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData), Microsoft.WindowsAzure.Storage.Table.CloudTable).Logger
- uid: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},Microsoft.WindowsAzure.Storage.Table.CloudTable}.GetContainerName
  commentId: P:Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{`0},Microsoft.WindowsAzure.Storage.Table.CloudTable}.GetContainerName
  parent: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},Microsoft.WindowsAzure.Storage.Table.CloudTable}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.GetContainerName
  name: GetContainerName
  nameWithType: StorageStore<EntityTableEntity<TData>, CloudTable>.GetContainerName
  fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Azure.BlobStorage.EntityTableEntity<TData>, Microsoft.WindowsAzure.Storage.Table.CloudTable>.GetContainerName
  nameWithType.vb: StorageStore(Of EntityTableEntity(Of TData), CloudTable).GetContainerName
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData), Microsoft.WindowsAzure.Storage.Table.CloudTable).GetContainerName
- uid: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},Microsoft.WindowsAzure.Storage.Table.CloudTable}.IsContainerPublic
  commentId: P:Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{`0},Microsoft.WindowsAzure.Storage.Table.CloudTable}.IsContainerPublic
  parent: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},Microsoft.WindowsAzure.Storage.Table.CloudTable}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.IsContainerPublic
  name: IsContainerPublic
  nameWithType: StorageStore<EntityTableEntity<TData>, CloudTable>.IsContainerPublic
  fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Azure.BlobStorage.EntityTableEntity<TData>, Microsoft.WindowsAzure.Storage.Table.CloudTable>.IsContainerPublic
  nameWithType.vb: StorageStore(Of EntityTableEntity(Of TData), CloudTable).IsContainerPublic
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData), Microsoft.WindowsAzure.Storage.Table.CloudTable).IsContainerPublic
- uid: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},Microsoft.WindowsAzure.Storage.Table.CloudTable}.DefaultSettings
  commentId: P:Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{`0},Microsoft.WindowsAzure.Storage.Table.CloudTable}.DefaultSettings
  parent: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},Microsoft.WindowsAzure.Storage.Table.CloudTable}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.DefaultSettings
  name: DefaultSettings
  nameWithType: StorageStore<EntityTableEntity<TData>, CloudTable>.DefaultSettings
  fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Azure.BlobStorage.EntityTableEntity<TData>, Microsoft.WindowsAzure.Storage.Table.CloudTable>.DefaultSettings
  nameWithType.vb: StorageStore(Of EntityTableEntity(Of TData), CloudTable).DefaultSettings
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData), Microsoft.WindowsAzure.Storage.Table.CloudTable).DefaultSettings
- uid: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},Microsoft.WindowsAzure.Storage.Table.CloudTable}.Initialise(Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory)
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{`0},Microsoft.WindowsAzure.Storage.Table.CloudTable}.Initialise(Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory)
  parent: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},Microsoft.WindowsAzure.Storage.Table.CloudTable}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.Initialise(Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory)
  name: Initialise(IStorageStoreConnectionStringFactory)
  nameWithType: StorageStore<EntityTableEntity<TData>, CloudTable>.Initialise(IStorageStoreConnectionStringFactory)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Azure.BlobStorage.EntityTableEntity<TData>, Microsoft.WindowsAzure.Storage.Table.CloudTable>.Initialise(Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory)
  nameWithType.vb: StorageStore(Of EntityTableEntity(Of TData), CloudTable).Initialise(IStorageStoreConnectionStringFactory)
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData), Microsoft.WindowsAzure.Storage.Table.CloudTable).Initialise(Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Initialise(Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory)
    name: Initialise
    nameWithType: StorageStore<EntityTableEntity<TData>, CloudTable>.Initialise
    fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Azure.BlobStorage.EntityTableEntity<TData>, Microsoft.WindowsAzure.Storage.Table.CloudTable>.Initialise
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory
    name: IStorageStoreConnectionStringFactory
    nameWithType: IStorageStoreConnectionStringFactory
    fullName: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Initialise(Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory)
    name: Initialise
    nameWithType: StorageStore(Of EntityTableEntity(Of TData), CloudTable).Initialise
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData), Microsoft.WindowsAzure.Storage.Table.CloudTable).Initialise
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory
    name: IStorageStoreConnectionStringFactory
    nameWithType: IStorageStoreConnectionStringFactory
    fullName: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},Microsoft.WindowsAzure.Storage.Table.CloudTable}.GetEnumerator
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{`0},Microsoft.WindowsAzure.Storage.Table.CloudTable}.GetEnumerator
  parent: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},Microsoft.WindowsAzure.Storage.Table.CloudTable}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.GetEnumerator
  name: GetEnumerator()
  nameWithType: StorageStore<EntityTableEntity<TData>, CloudTable>.GetEnumerator()
  fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Azure.BlobStorage.EntityTableEntity<TData>, Microsoft.WindowsAzure.Storage.Table.CloudTable>.GetEnumerator()
  nameWithType.vb: StorageStore(Of EntityTableEntity(Of TData), CloudTable).GetEnumerator()
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData), Microsoft.WindowsAzure.Storage.Table.CloudTable).GetEnumerator()
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetEnumerator
    name: GetEnumerator
    nameWithType: StorageStore<EntityTableEntity<TData>, CloudTable>.GetEnumerator
    fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Azure.BlobStorage.EntityTableEntity<TData>, Microsoft.WindowsAzure.Storage.Table.CloudTable>.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetEnumerator
    name: GetEnumerator
    nameWithType: StorageStore(Of EntityTableEntity(Of TData), CloudTable).GetEnumerator
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData), Microsoft.WindowsAzure.Storage.Table.CloudTable).GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},Microsoft.WindowsAzure.Storage.Table.CloudTable}.System#Collections#IEnumerable#GetEnumerator
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{`0},Microsoft.WindowsAzure.Storage.Table.CloudTable}.System#Collections#IEnumerable#GetEnumerator
  parent: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},Microsoft.WindowsAzure.Storage.Table.CloudTable}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator()
  nameWithType: StorageStore<EntityTableEntity<TData>, CloudTable>.IEnumerable.GetEnumerator()
  fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Azure.BlobStorage.EntityTableEntity<TData>, Microsoft.WindowsAzure.Storage.Table.CloudTable>.System.Collections.IEnumerable.GetEnumerator()
  nameWithType.vb: StorageStore(Of EntityTableEntity(Of TData), CloudTable).System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData), Microsoft.WindowsAzure.Storage.Table.CloudTable).System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.System#Collections#IEnumerable#GetEnumerator
    name: IEnumerable.GetEnumerator
    nameWithType: StorageStore<EntityTableEntity<TData>, CloudTable>.IEnumerable.GetEnumerator
    fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Azure.BlobStorage.EntityTableEntity<TData>, Microsoft.WindowsAzure.Storage.Table.CloudTable>.System.Collections.IEnumerable.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.System#Collections#IEnumerable#GetEnumerator
    name: System.Collections.IEnumerable.GetEnumerator
    nameWithType: StorageStore(Of EntityTableEntity(Of TData), CloudTable).System.Collections.IEnumerable.GetEnumerator
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData), Microsoft.WindowsAzure.Storage.Table.CloudTable).System.Collections.IEnumerable.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},Microsoft.WindowsAzure.Storage.Table.CloudTable}.Expression
  commentId: P:Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{`0},Microsoft.WindowsAzure.Storage.Table.CloudTable}.Expression
  parent: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},Microsoft.WindowsAzure.Storage.Table.CloudTable}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.Expression
  name: Expression
  nameWithType: StorageStore<EntityTableEntity<TData>, CloudTable>.Expression
  fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Azure.BlobStorage.EntityTableEntity<TData>, Microsoft.WindowsAzure.Storage.Table.CloudTable>.Expression
  nameWithType.vb: StorageStore(Of EntityTableEntity(Of TData), CloudTable).Expression
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData), Microsoft.WindowsAzure.Storage.Table.CloudTable).Expression
- uid: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},Microsoft.WindowsAzure.Storage.Table.CloudTable}.ElementType
  commentId: P:Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{`0},Microsoft.WindowsAzure.Storage.Table.CloudTable}.ElementType
  parent: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},Microsoft.WindowsAzure.Storage.Table.CloudTable}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.ElementType
  name: ElementType
  nameWithType: StorageStore<EntityTableEntity<TData>, CloudTable>.ElementType
  fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Azure.BlobStorage.EntityTableEntity<TData>, Microsoft.WindowsAzure.Storage.Table.CloudTable>.ElementType
  nameWithType.vb: StorageStore(Of EntityTableEntity(Of TData), CloudTable).ElementType
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData), Microsoft.WindowsAzure.Storage.Table.CloudTable).ElementType
- uid: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},Microsoft.WindowsAzure.Storage.Table.CloudTable}.Provider
  commentId: P:Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{`0},Microsoft.WindowsAzure.Storage.Table.CloudTable}.Provider
  parent: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},Microsoft.WindowsAzure.Storage.Table.CloudTable}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.Provider
  name: Provider
  nameWithType: StorageStore<EntityTableEntity<TData>, CloudTable>.Provider
  fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Azure.BlobStorage.EntityTableEntity<TData>, Microsoft.WindowsAzure.Storage.Table.CloudTable>.Provider
  nameWithType.vb: StorageStore(Of EntityTableEntity(Of TData), CloudTable).Provider
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData), Microsoft.WindowsAzure.Storage.Table.CloudTable).Provider
- uid: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},Microsoft.WindowsAzure.Storage.Table.CloudTable}.Dispose
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{`0},Microsoft.WindowsAzure.Storage.Table.CloudTable}.Dispose
  parent: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},Microsoft.WindowsAzure.Storage.Table.CloudTable}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.Dispose
  name: Dispose()
  nameWithType: StorageStore<EntityTableEntity<TData>, CloudTable>.Dispose()
  fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Azure.BlobStorage.EntityTableEntity<TData>, Microsoft.WindowsAzure.Storage.Table.CloudTable>.Dispose()
  nameWithType.vb: StorageStore(Of EntityTableEntity(Of TData), CloudTable).Dispose()
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData), Microsoft.WindowsAzure.Storage.Table.CloudTable).Dispose()
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Dispose
    name: Dispose
    nameWithType: StorageStore<EntityTableEntity<TData>, CloudTable>.Dispose
    fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Azure.BlobStorage.EntityTableEntity<TData>, Microsoft.WindowsAzure.Storage.Table.CloudTable>.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Dispose
    name: Dispose
    nameWithType: StorageStore(Of EntityTableEntity(Of TData), CloudTable).Dispose
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData), Microsoft.WindowsAzure.Storage.Table.CloudTable).Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},Microsoft.WindowsAzure.Storage.Table.CloudTable}.Add(Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}})
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{`0},Microsoft.WindowsAzure.Storage.Table.CloudTable}.Add(Cqrs.Azure.BlobStorage.EntityTableEntity{`0})
  parent: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},Microsoft.WindowsAzure.Storage.Table.CloudTable}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.Add(`0)
  name: Add(EntityTableEntity<TData>)
  nameWithType: StorageStore<EntityTableEntity<TData>, CloudTable>.Add(EntityTableEntity<TData>)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Azure.BlobStorage.EntityTableEntity<TData>, Microsoft.WindowsAzure.Storage.Table.CloudTable>.Add(Cqrs.Azure.BlobStorage.EntityTableEntity<TData>)
  nameWithType.vb: StorageStore(Of EntityTableEntity(Of TData), CloudTable).Add(EntityTableEntity(Of TData))
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData), Microsoft.WindowsAzure.Storage.Table.CloudTable).Add(Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData))
  name.vb: Add(EntityTableEntity(Of TData))
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Add(`0)
    name: Add
    nameWithType: StorageStore<EntityTableEntity<TData>, CloudTable>.Add
    fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Azure.BlobStorage.EntityTableEntity<TData>, Microsoft.WindowsAzure.Storage.Table.CloudTable>.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Azure.BlobStorage.EntityTableEntity`1
    name: EntityTableEntity
    nameWithType: EntityTableEntity
    fullName: Cqrs.Azure.BlobStorage.EntityTableEntity
  - name: <
    nameWithType: <
    fullName: <
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Add(`0)
    name: Add
    nameWithType: StorageStore(Of EntityTableEntity(Of TData), CloudTable).Add
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData), Microsoft.WindowsAzure.Storage.Table.CloudTable).Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Azure.BlobStorage.EntityTableEntity`1
    name: EntityTableEntity
    nameWithType: EntityTableEntity
    fullName: Cqrs.Azure.BlobStorage.EntityTableEntity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},Microsoft.WindowsAzure.Storage.Table.CloudTable}.Add(System.Collections.Generic.IEnumerable{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}}})
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{`0},Microsoft.WindowsAzure.Storage.Table.CloudTable}.Add(System.Collections.Generic.IEnumerable{Cqrs.Azure.BlobStorage.EntityTableEntity{`0}})
  parent: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},Microsoft.WindowsAzure.Storage.Table.CloudTable}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.Add(System.Collections.Generic.IEnumerable{`0})
  name: Add(IEnumerable<EntityTableEntity<TData>>)
  nameWithType: StorageStore<EntityTableEntity<TData>, CloudTable>.Add(IEnumerable<EntityTableEntity<TData>>)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Azure.BlobStorage.EntityTableEntity<TData>, Microsoft.WindowsAzure.Storage.Table.CloudTable>.Add(System.Collections.Generic.IEnumerable<Cqrs.Azure.BlobStorage.EntityTableEntity<TData>>)
  nameWithType.vb: StorageStore(Of EntityTableEntity(Of TData), CloudTable).Add(IEnumerable(Of EntityTableEntity(Of TData)))
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData), Microsoft.WindowsAzure.Storage.Table.CloudTable).Add(System.Collections.Generic.IEnumerable(Of Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData)))
  name.vb: Add(IEnumerable(Of EntityTableEntity(Of TData)))
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Add(System.Collections.Generic.IEnumerable{`0})
    name: Add
    nameWithType: StorageStore<EntityTableEntity<TData>, CloudTable>.Add
    fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Azure.BlobStorage.EntityTableEntity<TData>, Microsoft.WindowsAzure.Storage.Table.CloudTable>.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cqrs.Azure.BlobStorage.EntityTableEntity`1
    name: EntityTableEntity
    nameWithType: EntityTableEntity
    fullName: Cqrs.Azure.BlobStorage.EntityTableEntity
  - name: <
    nameWithType: <
    fullName: <
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Add(System.Collections.Generic.IEnumerable{`0})
    name: Add
    nameWithType: StorageStore(Of EntityTableEntity(Of TData), CloudTable).Add
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData), Microsoft.WindowsAzure.Storage.Table.CloudTable).Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Cqrs.Azure.BlobStorage.EntityTableEntity`1
    name: EntityTableEntity
    nameWithType: EntityTableEntity
    fullName: Cqrs.Azure.BlobStorage.EntityTableEntity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},Microsoft.WindowsAzure.Storage.Table.CloudTable}.Destroy(Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}})
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{`0},Microsoft.WindowsAzure.Storage.Table.CloudTable}.Destroy(Cqrs.Azure.BlobStorage.EntityTableEntity{`0})
  parent: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},Microsoft.WindowsAzure.Storage.Table.CloudTable}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.Destroy(`0)
  name: Destroy(EntityTableEntity<TData>)
  nameWithType: StorageStore<EntityTableEntity<TData>, CloudTable>.Destroy(EntityTableEntity<TData>)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Azure.BlobStorage.EntityTableEntity<TData>, Microsoft.WindowsAzure.Storage.Table.CloudTable>.Destroy(Cqrs.Azure.BlobStorage.EntityTableEntity<TData>)
  nameWithType.vb: StorageStore(Of EntityTableEntity(Of TData), CloudTable).Destroy(EntityTableEntity(Of TData))
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData), Microsoft.WindowsAzure.Storage.Table.CloudTable).Destroy(Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData))
  name.vb: Destroy(EntityTableEntity(Of TData))
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Destroy(`0)
    name: Destroy
    nameWithType: StorageStore<EntityTableEntity<TData>, CloudTable>.Destroy
    fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Azure.BlobStorage.EntityTableEntity<TData>, Microsoft.WindowsAzure.Storage.Table.CloudTable>.Destroy
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Azure.BlobStorage.EntityTableEntity`1
    name: EntityTableEntity
    nameWithType: EntityTableEntity
    fullName: Cqrs.Azure.BlobStorage.EntityTableEntity
  - name: <
    nameWithType: <
    fullName: <
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Destroy(`0)
    name: Destroy
    nameWithType: StorageStore(Of EntityTableEntity(Of TData), CloudTable).Destroy
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData), Microsoft.WindowsAzure.Storage.Table.CloudTable).Destroy
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Azure.BlobStorage.EntityTableEntity`1
    name: EntityTableEntity
    nameWithType: EntityTableEntity
    fullName: Cqrs.Azure.BlobStorage.EntityTableEntity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},Microsoft.WindowsAzure.Storage.Table.CloudTable}.RemoveAll
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{`0},Microsoft.WindowsAzure.Storage.Table.CloudTable}.RemoveAll
  parent: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},Microsoft.WindowsAzure.Storage.Table.CloudTable}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.RemoveAll
  name: RemoveAll()
  nameWithType: StorageStore<EntityTableEntity<TData>, CloudTable>.RemoveAll()
  fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Azure.BlobStorage.EntityTableEntity<TData>, Microsoft.WindowsAzure.Storage.Table.CloudTable>.RemoveAll()
  nameWithType.vb: StorageStore(Of EntityTableEntity(Of TData), CloudTable).RemoveAll()
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData), Microsoft.WindowsAzure.Storage.Table.CloudTable).RemoveAll()
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.RemoveAll
    name: RemoveAll
    nameWithType: StorageStore<EntityTableEntity<TData>, CloudTable>.RemoveAll
    fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Azure.BlobStorage.EntityTableEntity<TData>, Microsoft.WindowsAzure.Storage.Table.CloudTable>.RemoveAll
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.RemoveAll
    name: RemoveAll
    nameWithType: StorageStore(Of EntityTableEntity(Of TData), CloudTable).RemoveAll
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData), Microsoft.WindowsAzure.Storage.Table.CloudTable).RemoveAll
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},Microsoft.WindowsAzure.Storage.Table.CloudTable}.Update(Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}})
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{`0},Microsoft.WindowsAzure.Storage.Table.CloudTable}.Update(Cqrs.Azure.BlobStorage.EntityTableEntity{`0})
  parent: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},Microsoft.WindowsAzure.Storage.Table.CloudTable}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.Update(`0)
  name: Update(EntityTableEntity<TData>)
  nameWithType: StorageStore<EntityTableEntity<TData>, CloudTable>.Update(EntityTableEntity<TData>)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Azure.BlobStorage.EntityTableEntity<TData>, Microsoft.WindowsAzure.Storage.Table.CloudTable>.Update(Cqrs.Azure.BlobStorage.EntityTableEntity<TData>)
  nameWithType.vb: StorageStore(Of EntityTableEntity(Of TData), CloudTable).Update(EntityTableEntity(Of TData))
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData), Microsoft.WindowsAzure.Storage.Table.CloudTable).Update(Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData))
  name.vb: Update(EntityTableEntity(Of TData))
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Update(`0)
    name: Update
    nameWithType: StorageStore<EntityTableEntity<TData>, CloudTable>.Update
    fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Azure.BlobStorage.EntityTableEntity<TData>, Microsoft.WindowsAzure.Storage.Table.CloudTable>.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Azure.BlobStorage.EntityTableEntity`1
    name: EntityTableEntity
    nameWithType: EntityTableEntity
    fullName: Cqrs.Azure.BlobStorage.EntityTableEntity
  - name: <
    nameWithType: <
    fullName: <
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Update(`0)
    name: Update
    nameWithType: StorageStore(Of EntityTableEntity(Of TData), CloudTable).Update
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData), Microsoft.WindowsAzure.Storage.Table.CloudTable).Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Azure.BlobStorage.EntityTableEntity`1
    name: EntityTableEntity
    nameWithType: EntityTableEntity
    fullName: Cqrs.Azure.BlobStorage.EntityTableEntity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},Microsoft.WindowsAzure.Storage.Table.CloudTable}.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String,System.Boolean)
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{`0},Microsoft.WindowsAzure.Storage.Table.CloudTable}.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String,System.Boolean)
  parent: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},Microsoft.WindowsAzure.Storage.Table.CloudTable}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String,System.Boolean)
  name: CreateSource(CloudStorageAccount, String, Boolean)
  nameWithType: StorageStore<EntityTableEntity<TData>, CloudTable>.CreateSource(CloudStorageAccount, String, Boolean)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Azure.BlobStorage.EntityTableEntity<TData>, Microsoft.WindowsAzure.Storage.Table.CloudTable>.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount, System.String, System.Boolean)
  nameWithType.vb: StorageStore(Of EntityTableEntity(Of TData), CloudTable).CreateSource(CloudStorageAccount, String, Boolean)
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData), Microsoft.WindowsAzure.Storage.Table.CloudTable).CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount, System.String, System.Boolean)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String,System.Boolean)
    name: CreateSource
    nameWithType: StorageStore<EntityTableEntity<TData>, CloudTable>.CreateSource
    fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Azure.BlobStorage.EntityTableEntity<TData>, Microsoft.WindowsAzure.Storage.Table.CloudTable>.CreateSource
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.CloudStorageAccount
    name: CloudStorageAccount
    nameWithType: CloudStorageAccount
    fullName: Microsoft.WindowsAzure.Storage.CloudStorageAccount
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String,System.Boolean)
    name: CreateSource
    nameWithType: StorageStore(Of EntityTableEntity(Of TData), CloudTable).CreateSource
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData), Microsoft.WindowsAzure.Storage.Table.CloudTable).CreateSource
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.CloudStorageAccount
    name: CloudStorageAccount
    nameWithType: CloudStorageAccount
    fullName: Microsoft.WindowsAzure.Storage.CloudStorageAccount
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},Microsoft.WindowsAzure.Storage.Table.CloudTable}.GetSafeSourceName(System.String)
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{`0},Microsoft.WindowsAzure.Storage.Table.CloudTable}.GetSafeSourceName(System.String)
  parent: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},Microsoft.WindowsAzure.Storage.Table.CloudTable}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.GetSafeSourceName(System.String)
  name: GetSafeSourceName(String)
  nameWithType: StorageStore<EntityTableEntity<TData>, CloudTable>.GetSafeSourceName(String)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Azure.BlobStorage.EntityTableEntity<TData>, Microsoft.WindowsAzure.Storage.Table.CloudTable>.GetSafeSourceName(System.String)
  nameWithType.vb: StorageStore(Of EntityTableEntity(Of TData), CloudTable).GetSafeSourceName(String)
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData), Microsoft.WindowsAzure.Storage.Table.CloudTable).GetSafeSourceName(System.String)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetSafeSourceName(System.String)
    name: GetSafeSourceName
    nameWithType: StorageStore<EntityTableEntity<TData>, CloudTable>.GetSafeSourceName
    fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Azure.BlobStorage.EntityTableEntity<TData>, Microsoft.WindowsAzure.Storage.Table.CloudTable>.GetSafeSourceName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetSafeSourceName(System.String)
    name: GetSafeSourceName
    nameWithType: StorageStore(Of EntityTableEntity(Of TData), CloudTable).GetSafeSourceName
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData), Microsoft.WindowsAzure.Storage.Table.CloudTable).GetSafeSourceName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},Microsoft.WindowsAzure.Storage.Table.CloudTable}.GetSafeSourceName(System.String,System.Boolean)
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{`0},Microsoft.WindowsAzure.Storage.Table.CloudTable}.GetSafeSourceName(System.String,System.Boolean)
  parent: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},Microsoft.WindowsAzure.Storage.Table.CloudTable}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.GetSafeSourceName(System.String,System.Boolean)
  name: GetSafeSourceName(String, Boolean)
  nameWithType: StorageStore<EntityTableEntity<TData>, CloudTable>.GetSafeSourceName(String, Boolean)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Azure.BlobStorage.EntityTableEntity<TData>, Microsoft.WindowsAzure.Storage.Table.CloudTable>.GetSafeSourceName(System.String, System.Boolean)
  nameWithType.vb: StorageStore(Of EntityTableEntity(Of TData), CloudTable).GetSafeSourceName(String, Boolean)
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData), Microsoft.WindowsAzure.Storage.Table.CloudTable).GetSafeSourceName(System.String, System.Boolean)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetSafeSourceName(System.String,System.Boolean)
    name: GetSafeSourceName
    nameWithType: StorageStore<EntityTableEntity<TData>, CloudTable>.GetSafeSourceName
    fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Azure.BlobStorage.EntityTableEntity<TData>, Microsoft.WindowsAzure.Storage.Table.CloudTable>.GetSafeSourceName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetSafeSourceName(System.String,System.Boolean)
    name: GetSafeSourceName
    nameWithType: StorageStore(Of EntityTableEntity(Of TData), CloudTable).GetSafeSourceName
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData), Microsoft.WindowsAzure.Storage.Table.CloudTable).GetSafeSourceName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},Microsoft.WindowsAzure.Storage.Table.CloudTable}.AzureStorageRetryPolicy
  commentId: P:Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{`0},Microsoft.WindowsAzure.Storage.Table.CloudTable}.AzureStorageRetryPolicy
  parent: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},Microsoft.WindowsAzure.Storage.Table.CloudTable}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.AzureStorageRetryPolicy
  name: AzureStorageRetryPolicy
  nameWithType: StorageStore<EntityTableEntity<TData>, CloudTable>.AzureStorageRetryPolicy
  fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Azure.BlobStorage.EntityTableEntity<TData>, Microsoft.WindowsAzure.Storage.Table.CloudTable>.AzureStorageRetryPolicy
  nameWithType.vb: StorageStore(Of EntityTableEntity(Of TData), CloudTable).AzureStorageRetryPolicy
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData), Microsoft.WindowsAzure.Storage.Table.CloudTable).AzureStorageRetryPolicy
- uid: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},Microsoft.WindowsAzure.Storage.Table.CloudTable}.Deserialise(System.IO.Stream)
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{`0},Microsoft.WindowsAzure.Storage.Table.CloudTable}.Deserialise(System.IO.Stream)
  parent: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},Microsoft.WindowsAzure.Storage.Table.CloudTable}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.Deserialise(System.IO.Stream)
  name: Deserialise(Stream)
  nameWithType: StorageStore<EntityTableEntity<TData>, CloudTable>.Deserialise(Stream)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Azure.BlobStorage.EntityTableEntity<TData>, Microsoft.WindowsAzure.Storage.Table.CloudTable>.Deserialise(System.IO.Stream)
  nameWithType.vb: StorageStore(Of EntityTableEntity(Of TData), CloudTable).Deserialise(Stream)
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData), Microsoft.WindowsAzure.Storage.Table.CloudTable).Deserialise(System.IO.Stream)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Deserialise(System.IO.Stream)
    name: Deserialise
    nameWithType: StorageStore<EntityTableEntity<TData>, CloudTable>.Deserialise
    fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Azure.BlobStorage.EntityTableEntity<TData>, Microsoft.WindowsAzure.Storage.Table.CloudTable>.Deserialise
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Deserialise(System.IO.Stream)
    name: Deserialise
    nameWithType: StorageStore(Of EntityTableEntity(Of TData), CloudTable).Deserialise
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData), Microsoft.WindowsAzure.Storage.Table.CloudTable).Deserialise
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},Microsoft.WindowsAzure.Storage.Table.CloudTable}.Deserialise(System.String)
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{`0},Microsoft.WindowsAzure.Storage.Table.CloudTable}.Deserialise(System.String)
  parent: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},Microsoft.WindowsAzure.Storage.Table.CloudTable}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.Deserialise(System.String)
  name: Deserialise(String)
  nameWithType: StorageStore<EntityTableEntity<TData>, CloudTable>.Deserialise(String)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Azure.BlobStorage.EntityTableEntity<TData>, Microsoft.WindowsAzure.Storage.Table.CloudTable>.Deserialise(System.String)
  nameWithType.vb: StorageStore(Of EntityTableEntity(Of TData), CloudTable).Deserialise(String)
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData), Microsoft.WindowsAzure.Storage.Table.CloudTable).Deserialise(System.String)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Deserialise(System.String)
    name: Deserialise
    nameWithType: StorageStore<EntityTableEntity<TData>, CloudTable>.Deserialise
    fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Azure.BlobStorage.EntityTableEntity<TData>, Microsoft.WindowsAzure.Storage.Table.CloudTable>.Deserialise
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Deserialise(System.String)
    name: Deserialise
    nameWithType: StorageStore(Of EntityTableEntity(Of TData), CloudTable).Deserialise
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData), Microsoft.WindowsAzure.Storage.Table.CloudTable).Deserialise
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},Microsoft.WindowsAzure.Storage.Table.CloudTable}.Serialise(Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}})
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{`0},Microsoft.WindowsAzure.Storage.Table.CloudTable}.Serialise(Cqrs.Azure.BlobStorage.EntityTableEntity{`0})
  parent: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},Microsoft.WindowsAzure.Storage.Table.CloudTable}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.Serialise(`0)
  name: Serialise(EntityTableEntity<TData>)
  nameWithType: StorageStore<EntityTableEntity<TData>, CloudTable>.Serialise(EntityTableEntity<TData>)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Azure.BlobStorage.EntityTableEntity<TData>, Microsoft.WindowsAzure.Storage.Table.CloudTable>.Serialise(Cqrs.Azure.BlobStorage.EntityTableEntity<TData>)
  nameWithType.vb: StorageStore(Of EntityTableEntity(Of TData), CloudTable).Serialise(EntityTableEntity(Of TData))
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData), Microsoft.WindowsAzure.Storage.Table.CloudTable).Serialise(Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData))
  name.vb: Serialise(EntityTableEntity(Of TData))
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Serialise(`0)
    name: Serialise
    nameWithType: StorageStore<EntityTableEntity<TData>, CloudTable>.Serialise
    fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Azure.BlobStorage.EntityTableEntity<TData>, Microsoft.WindowsAzure.Storage.Table.CloudTable>.Serialise
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Azure.BlobStorage.EntityTableEntity`1
    name: EntityTableEntity
    nameWithType: EntityTableEntity
    fullName: Cqrs.Azure.BlobStorage.EntityTableEntity
  - name: <
    nameWithType: <
    fullName: <
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Serialise(`0)
    name: Serialise
    nameWithType: StorageStore(Of EntityTableEntity(Of TData), CloudTable).Serialise
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData), Microsoft.WindowsAzure.Storage.Table.CloudTable).Serialise
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Azure.BlobStorage.EntityTableEntity`1
    name: EntityTableEntity
    nameWithType: EntityTableEntity
    fullName: Cqrs.Azure.BlobStorage.EntityTableEntity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},Microsoft.WindowsAzure.Storage.Table.CloudTable}.GetSerialisationSettings
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{`0},Microsoft.WindowsAzure.Storage.Table.CloudTable}.GetSerialisationSettings
  parent: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},Microsoft.WindowsAzure.Storage.Table.CloudTable}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.GetSerialisationSettings
  name: GetSerialisationSettings()
  nameWithType: StorageStore<EntityTableEntity<TData>, CloudTable>.GetSerialisationSettings()
  fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Azure.BlobStorage.EntityTableEntity<TData>, Microsoft.WindowsAzure.Storage.Table.CloudTable>.GetSerialisationSettings()
  nameWithType.vb: StorageStore(Of EntityTableEntity(Of TData), CloudTable).GetSerialisationSettings()
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData), Microsoft.WindowsAzure.Storage.Table.CloudTable).GetSerialisationSettings()
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetSerialisationSettings
    name: GetSerialisationSettings
    nameWithType: StorageStore<EntityTableEntity<TData>, CloudTable>.GetSerialisationSettings
    fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Azure.BlobStorage.EntityTableEntity<TData>, Microsoft.WindowsAzure.Storage.Table.CloudTable>.GetSerialisationSettings
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetSerialisationSettings
    name: GetSerialisationSettings
    nameWithType: StorageStore(Of EntityTableEntity(Of TData), CloudTable).GetSerialisationSettings
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData), Microsoft.WindowsAzure.Storage.Table.CloudTable).GetSerialisationSettings
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},Microsoft.WindowsAzure.Storage.Table.CloudTable}.GetSerialiser
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{`0},Microsoft.WindowsAzure.Storage.Table.CloudTable}.GetSerialiser
  parent: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}},Microsoft.WindowsAzure.Storage.Table.CloudTable}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.GetSerialiser
  name: GetSerialiser()
  nameWithType: StorageStore<EntityTableEntity<TData>, CloudTable>.GetSerialiser()
  fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Azure.BlobStorage.EntityTableEntity<TData>, Microsoft.WindowsAzure.Storage.Table.CloudTable>.GetSerialiser()
  nameWithType.vb: StorageStore(Of EntityTableEntity(Of TData), CloudTable).GetSerialiser()
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData), Microsoft.WindowsAzure.Storage.Table.CloudTable).GetSerialiser()
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetSerialiser
    name: GetSerialiser
    nameWithType: StorageStore<EntityTableEntity<TData>, CloudTable>.GetSerialiser
    fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Azure.BlobStorage.EntityTableEntity<TData>, Microsoft.WindowsAzure.Storage.Table.CloudTable>.GetSerialiser
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetSerialiser
    name: GetSerialiser
    nameWithType: StorageStore(Of EntityTableEntity(Of TData), CloudTable).GetSerialiser
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData), Microsoft.WindowsAzure.Storage.Table.CloudTable).GetSerialiser
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.DataStores.IDataStore{`0}.Cqrs.Sql.DataStores.SqlDataStoreExtensions.Where``2(System.Linq.Expressions.Expression{System.Func{{TData},System.Boolean}})
  commentId: M:Cqrs.Sql.DataStores.SqlDataStoreExtensions.Where``2(Cqrs.DataStores.IDataStore{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  parent: Cqrs.Sql.DataStores.SqlDataStoreExtensions
  definition: Cqrs.Sql.DataStores.SqlDataStoreExtensions.Where``2(Cqrs.DataStores.IDataStore{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  name: Where<TData, TDbEntity>(Expression<Func<TData, Boolean>>)
  nameWithType: SqlDataStoreExtensions.Where<TData, TDbEntity>(Expression<Func<TData, Boolean>>)
  fullName: Cqrs.Sql.DataStores.SqlDataStoreExtensions.Where<TData, TDbEntity>(System.Linq.Expressions.Expression<System.Func<TData, System.Boolean>>)
  nameWithType.vb: SqlDataStoreExtensions.Where(Of TData, TDbEntity)(Expression(Of Func(Of TData, Boolean)))
  fullName.vb: Cqrs.Sql.DataStores.SqlDataStoreExtensions.Where(Of TData, TDbEntity)(System.Linq.Expressions.Expression(Of System.Func(Of TData, System.Boolean)))
  name.vb: Where(Of TData, TDbEntity)(Expression(Of Func(Of TData, Boolean)))
  spec.csharp:
  - uid: Cqrs.Sql.DataStores.SqlDataStoreExtensions.Where``2(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
    name: Where<TData, TDbEntity>
    nameWithType: SqlDataStoreExtensions.Where<TData, TDbEntity>
    fullName: Cqrs.Sql.DataStores.SqlDataStoreExtensions.Where<TData, TDbEntity>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Sql.DataStores.SqlDataStoreExtensions.Where``2(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
    name: Where(Of TData, TDbEntity)
    nameWithType: SqlDataStoreExtensions.Where(Of TData, TDbEntity)
    fullName: Cqrs.Sql.DataStores.SqlDataStoreExtensions.Where(Of TData, TDbEntity)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.DataStores.IDataStore{`0}.Cqrs.Azure.BlobStorage.TableStorageStoreExtensions.GetByKeyAndRow``1(System.Guid)
  commentId: M:Cqrs.Azure.BlobStorage.TableStorageStoreExtensions.GetByKeyAndRow``1(Cqrs.DataStores.IDataStore{``0},System.Guid)
  parent: Cqrs.Azure.BlobStorage.TableStorageStoreExtensions
  definition: Cqrs.Azure.BlobStorage.TableStorageStoreExtensions.GetByKeyAndRow``1(Cqrs.DataStores.IDataStore{``0},System.Guid)
  name: GetByKeyAndRow<TData>(Guid)
  nameWithType: TableStorageStoreExtensions.GetByKeyAndRow<TData>(Guid)
  fullName: Cqrs.Azure.BlobStorage.TableStorageStoreExtensions.GetByKeyAndRow<TData>(System.Guid)
  nameWithType.vb: TableStorageStoreExtensions.GetByKeyAndRow(Of TData)(Guid)
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStoreExtensions.GetByKeyAndRow(Of TData)(System.Guid)
  name.vb: GetByKeyAndRow(Of TData)(Guid)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStoreExtensions.GetByKeyAndRow``1(System.Guid)
    name: GetByKeyAndRow<TData>
    nameWithType: TableStorageStoreExtensions.GetByKeyAndRow<TData>
    fullName: Cqrs.Azure.BlobStorage.TableStorageStoreExtensions.GetByKeyAndRow<TData>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStoreExtensions.GetByKeyAndRow``1(System.Guid)
    name: GetByKeyAndRow(Of TData)
    nameWithType: TableStorageStoreExtensions.GetByKeyAndRow(Of TData)
    fullName: Cqrs.Azure.BlobStorage.TableStorageStoreExtensions.GetByKeyAndRow(Of TData)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.DataStores.IDataStore{`0}.Cqrs.Azure.BlobStorage.TableStorageStoreExtensions.GetByKey``1
  commentId: M:Cqrs.Azure.BlobStorage.TableStorageStoreExtensions.GetByKey``1(Cqrs.DataStores.IDataStore{``0})
  parent: Cqrs.Azure.BlobStorage.TableStorageStoreExtensions
  definition: Cqrs.Azure.BlobStorage.TableStorageStoreExtensions.GetByKey``1(Cqrs.DataStores.IDataStore{``0})
  name: GetByKey<TData>()
  nameWithType: TableStorageStoreExtensions.GetByKey<TData>()
  fullName: Cqrs.Azure.BlobStorage.TableStorageStoreExtensions.GetByKey<TData>()
  nameWithType.vb: TableStorageStoreExtensions.GetByKey(Of TData)()
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStoreExtensions.GetByKey(Of TData)()
  name.vb: GetByKey(Of TData)()
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStoreExtensions.GetByKey``1
    name: GetByKey<TData>
    nameWithType: TableStorageStoreExtensions.GetByKey<TData>
    fullName: Cqrs.Azure.BlobStorage.TableStorageStoreExtensions.GetByKey<TData>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStoreExtensions.GetByKey``1
    name: GetByKey(Of TData)
    nameWithType: TableStorageStoreExtensions.GetByKey(Of TData)
    fullName: Cqrs.Azure.BlobStorage.TableStorageStoreExtensions.GetByKey(Of TData)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.DataStores.IDataStore{`0}.Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByName``1(System.String)
  commentId: M:Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByName``1(Cqrs.DataStores.IDataStore{``0},System.String)
  parent: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions
  definition: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByName``1(Cqrs.DataStores.IDataStore{``0},System.String)
  name: GetByName<TData>(String)
  nameWithType: BlobStorageStoreExtensions.GetByName<TData>(String)
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByName<TData>(System.String)
  nameWithType.vb: BlobStorageStoreExtensions.GetByName(Of TData)(String)
  fullName.vb: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByName(Of TData)(System.String)
  name.vb: GetByName(Of TData)(String)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByName``1(System.String)
    name: GetByName<TData>
    nameWithType: BlobStorageStoreExtensions.GetByName<TData>
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByName<TData>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByName``1(System.String)
    name: GetByName(Of TData)
    nameWithType: BlobStorageStoreExtensions.GetByName(Of TData)
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByName(Of TData)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.DataStores.IDataStore{`0}.Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByFolder``1(System.String)
  commentId: M:Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByFolder``1(Cqrs.DataStores.IDataStore{``0},System.String)
  parent: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions
  definition: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByFolder``1(Cqrs.DataStores.IDataStore{``0},System.String)
  name: GetByFolder<TData>(String)
  nameWithType: BlobStorageStoreExtensions.GetByFolder<TData>(String)
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByFolder<TData>(System.String)
  nameWithType.vb: BlobStorageStoreExtensions.GetByFolder(Of TData)(String)
  fullName.vb: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByFolder(Of TData)(System.String)
  name.vb: GetByFolder(Of TData)(String)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByFolder``1(System.String)
    name: GetByFolder<TData>
    nameWithType: BlobStorageStoreExtensions.GetByFolder<TData>
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByFolder<TData>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByFolder``1(System.String)
    name: GetByFolder(Of TData)
    nameWithType: BlobStorageStoreExtensions.GetByFolder(Of TData)
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByFolder(Of TData)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.DataStores.IDataStore{`0}.Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByFolder``1
  commentId: M:Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByFolder``1(Cqrs.DataStores.IDataStore{``0})
  parent: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions
  definition: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByFolder``1(Cqrs.DataStores.IDataStore{``0})
  name: GetByFolder<TData>()
  nameWithType: BlobStorageStoreExtensions.GetByFolder<TData>()
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByFolder<TData>()
  nameWithType.vb: BlobStorageStoreExtensions.GetByFolder(Of TData)()
  fullName.vb: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByFolder(Of TData)()
  name.vb: GetByFolder(Of TData)()
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByFolder``1
    name: GetByFolder<TData>
    nameWithType: BlobStorageStoreExtensions.GetByFolder<TData>
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByFolder<TData>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByFolder``1
    name: GetByFolder(Of TData)
    nameWithType: BlobStorageStoreExtensions.GetByFolder(Of TData)
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByFolder(Of TData)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.WindowsAzure.Storage.Table
  commentId: N:Microsoft.WindowsAzure.Storage.Table
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.Table
  nameWithType: Microsoft.WindowsAzure.Storage.Table
  fullName: Microsoft.WindowsAzure.Storage.Table
- uid: Cqrs.Azure.BlobStorage.StorageStore`2
  commentId: T:Cqrs.Azure.BlobStorage.StorageStore`2
  isExternal: false
  name: StorageStore<TData, TSource>
  nameWithType: StorageStore<TData, TSource>
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>
  nameWithType.vb: StorageStore(Of TData, TSource)
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource)
  name.vb: StorageStore(Of TData, TSource)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2
    name: StorageStore
    nameWithType: StorageStore
    fullName: Cqrs.Azure.BlobStorage.StorageStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2
    name: StorageStore
    nameWithType: StorageStore
    fullName: Cqrs.Azure.BlobStorage.StorageStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage
  commentId: N:Cqrs.Azure.BlobStorage
  isExternal: false
  name: Cqrs.Azure.BlobStorage
  nameWithType: Cqrs.Azure.BlobStorage
  fullName: Cqrs.Azure.BlobStorage
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Cqrs.DataStores.IDataStore`1
  commentId: T:Cqrs.DataStores.IDataStore`1
  isExternal: false
  name: IDataStore<TData>
  nameWithType: IDataStore<TData>
  fullName: Cqrs.DataStores.IDataStore<TData>
  nameWithType.vb: IDataStore(Of TData)
  fullName.vb: Cqrs.DataStores.IDataStore(Of TData)
  name.vb: IDataStore(Of TData)
  spec.csharp:
  - uid: Cqrs.DataStores.IDataStore`1
    name: IDataStore
    nameWithType: IDataStore
    fullName: Cqrs.DataStores.IDataStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.DataStores.IDataStore`1
    name: IDataStore
    nameWithType: IDataStore
    fullName: Cqrs.DataStores.IDataStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.DataStores
  commentId: N:Cqrs.DataStores
  isExternal: false
  name: Cqrs.DataStores
  nameWithType: Cqrs.DataStores
  fullName: Cqrs.DataStores
- uid: System.Linq.IOrderedQueryable`1
  commentId: T:System.Linq.IOrderedQueryable`1
  isExternal: true
  name: IOrderedQueryable<T>
  nameWithType: IOrderedQueryable<T>
  fullName: System.Linq.IOrderedQueryable<T>
  nameWithType.vb: IOrderedQueryable(Of T)
  fullName.vb: System.Linq.IOrderedQueryable(Of T)
  name.vb: IOrderedQueryable(Of T)
  spec.csharp:
  - uid: System.Linq.IOrderedQueryable`1
    name: IOrderedQueryable
    nameWithType: IOrderedQueryable
    fullName: System.Linq.IOrderedQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.IOrderedQueryable`1
    name: IOrderedQueryable
    nameWithType: IOrderedQueryable
    fullName: System.Linq.IOrderedQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq
  commentId: N:System.Linq
  isExternal: false
  name: System.Linq
  nameWithType: System.Linq
  fullName: System.Linq
- uid: System.Linq.IQueryable`1
  commentId: T:System.Linq.IQueryable`1
  isExternal: true
  name: IQueryable<T>
  nameWithType: IQueryable<T>
  fullName: System.Linq.IQueryable<T>
  nameWithType.vb: IQueryable(Of T)
  fullName.vb: System.Linq.IQueryable(Of T)
  name.vb: IQueryable(Of T)
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: false
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Collection
  commentId: P:Cqrs.Azure.BlobStorage.TableStorageStore`2.Collection
  isExternal: false
  name: Collection
  nameWithType: TableStorageStore<TData, TCollectionItemData>.Collection
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<TData, TCollectionItemData>.Collection
  nameWithType.vb: TableStorageStore(Of TData, TCollectionItemData).Collection
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of TData, TCollectionItemData).Collection
- uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Initialise(Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory)
  commentId: M:Cqrs.Azure.BlobStorage.TableStorageStore`2.Initialise(Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory)
  isExternal: false
  name: Initialise(IStorageStoreConnectionStringFactory)
  nameWithType: TableStorageStore<TData, TCollectionItemData>.Initialise(IStorageStoreConnectionStringFactory)
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<TData, TCollectionItemData>.Initialise(Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory)
  nameWithType.vb: TableStorageStore(Of TData, TCollectionItemData).Initialise(IStorageStoreConnectionStringFactory)
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of TData, TCollectionItemData).Initialise(Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Initialise(Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory)
    name: Initialise
    nameWithType: TableStorageStore<TData, TCollectionItemData>.Initialise
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore<TData, TCollectionItemData>.Initialise
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory
    name: IStorageStoreConnectionStringFactory
    nameWithType: IStorageStoreConnectionStringFactory
    fullName: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Initialise(Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory)
    name: Initialise
    nameWithType: TableStorageStore(Of TData, TCollectionItemData).Initialise
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore(Of TData, TCollectionItemData).Initialise
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory
    name: IStorageStoreConnectionStringFactory
    nameWithType: IStorageStoreConnectionStringFactory
    fullName: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.System#Collections#Generic#IEnumerable{TCollectionItemData}#GetEnumerator
  commentId: M:Cqrs.Azure.BlobStorage.TableStorageStore`2.System#Collections#Generic#IEnumerable{TCollectionItemData}#GetEnumerator
  isExternal: false
  name: IEnumerable<TCollectionItemData>.GetEnumerator()
  nameWithType: TableStorageStore<TData, TCollectionItemData>.IEnumerable<TCollectionItemData>.GetEnumerator()
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<TData, TCollectionItemData>.System.Collections.Generic.IEnumerable<TCollectionItemData>.GetEnumerator()
  nameWithType.vb: TableStorageStore(Of TData, TCollectionItemData).System.Collections.Generic.IEnumerable<TCollectionItemData>.GetEnumerator()
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of TData, TCollectionItemData).System.Collections.Generic.IEnumerable<TCollectionItemData>.GetEnumerator()
  name.vb: System.Collections.Generic.IEnumerable<TCollectionItemData>.GetEnumerator()
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.System#Collections#Generic#IEnumerable{TCollectionItemData}#GetEnumerator
    name: IEnumerable<TCollectionItemData>.GetEnumerator
    nameWithType: TableStorageStore<TData, TCollectionItemData>.IEnumerable<TCollectionItemData>.GetEnumerator
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore<TData, TCollectionItemData>.System.Collections.Generic.IEnumerable<TCollectionItemData>.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.System#Collections#Generic#IEnumerable{TCollectionItemData}#GetEnumerator
    name: System.Collections.Generic.IEnumerable<TCollectionItemData>.GetEnumerator
    nameWithType: TableStorageStore(Of TData, TCollectionItemData).System.Collections.Generic.IEnumerable<TCollectionItemData>.GetEnumerator
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore(Of TData, TCollectionItemData).System.Collections.Generic.IEnumerable<TCollectionItemData>.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.GetEnumerator
  commentId: M:Cqrs.Azure.BlobStorage.TableStorageStore`2.GetEnumerator
  isExternal: false
  name: GetEnumerator()
  nameWithType: TableStorageStore<TData, TCollectionItemData>.GetEnumerator()
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<TData, TCollectionItemData>.GetEnumerator()
  nameWithType.vb: TableStorageStore(Of TData, TCollectionItemData).GetEnumerator()
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of TData, TCollectionItemData).GetEnumerator()
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.GetEnumerator
    name: GetEnumerator
    nameWithType: TableStorageStore<TData, TCollectionItemData>.GetEnumerator
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore<TData, TCollectionItemData>.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.GetEnumerator
    name: GetEnumerator
    nameWithType: TableStorageStore(Of TData, TCollectionItemData).GetEnumerator
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore(Of TData, TCollectionItemData).GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Expression
  commentId: P:Cqrs.Azure.BlobStorage.TableStorageStore`2.Expression
  isExternal: false
  name: Expression
  nameWithType: TableStorageStore<TData, TCollectionItemData>.Expression
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<TData, TCollectionItemData>.Expression
  nameWithType.vb: TableStorageStore(Of TData, TCollectionItemData).Expression
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of TData, TCollectionItemData).Expression
- uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.ElementType
  commentId: P:Cqrs.Azure.BlobStorage.TableStorageStore`2.ElementType
  isExternal: false
  name: ElementType
  nameWithType: TableStorageStore<TData, TCollectionItemData>.ElementType
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<TData, TCollectionItemData>.ElementType
  nameWithType.vb: TableStorageStore(Of TData, TCollectionItemData).ElementType
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of TData, TCollectionItemData).ElementType
- uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Provider
  commentId: P:Cqrs.Azure.BlobStorage.TableStorageStore`2.Provider
  isExternal: false
  name: Provider
  nameWithType: TableStorageStore<TData, TCollectionItemData>.Provider
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<TData, TCollectionItemData>.Provider
  nameWithType.vb: TableStorageStore(Of TData, TCollectionItemData).Provider
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of TData, TCollectionItemData).Provider
- uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.AsyncSaveData``2(``0,System.Func{``0,Microsoft.WindowsAzure.Storage.Table.CloudTable,``1},System.Func{``0,System.String})
  commentId: M:Cqrs.Azure.BlobStorage.TableStorageStore`2.AsyncSaveData``2(``0,System.Func{``0,Microsoft.WindowsAzure.Storage.Table.CloudTable,``1},System.Func{``0,System.String})
  isExternal: true
  name: AsyncSaveData<TSaveData, TResult>(TSaveData, Func<TSaveData, CloudTable, TResult>, Func<TSaveData, String>)
  nameWithType: TableStorageStore<TData, TCollectionItemData>.AsyncSaveData<TSaveData, TResult>(TSaveData, Func<TSaveData, CloudTable, TResult>, Func<TSaveData, String>)
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<TData, TCollectionItemData>.AsyncSaveData<TSaveData, TResult>(TSaveData, System.Func<TSaveData, Microsoft.WindowsAzure.Storage.Table.CloudTable, TResult>, System.Func<TSaveData, System.String>)
  nameWithType.vb: TableStorageStore(Of TData, TCollectionItemData).AsyncSaveData(Of TSaveData, TResult)(TSaveData, Func(Of TSaveData, CloudTable, TResult), Func(Of TSaveData, String))
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of TData, TCollectionItemData).AsyncSaveData(Of TSaveData, TResult)(TSaveData, System.Func(Of TSaveData, Microsoft.WindowsAzure.Storage.Table.CloudTable, TResult), System.Func(Of TSaveData, System.String))
  name.vb: AsyncSaveData(Of TSaveData, TResult)(TSaveData, Func(Of TSaveData, CloudTable, TResult), Func(Of TSaveData, String))
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.AsyncSaveData``2(``0,System.Func{``0,Microsoft.WindowsAzure.Storage.Table.CloudTable,``1},System.Func{``0,System.String})
    name: AsyncSaveData<TSaveData, TResult>
    nameWithType: TableStorageStore<TData, TCollectionItemData>.AsyncSaveData<TSaveData, TResult>
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore<TData, TCollectionItemData>.AsyncSaveData<TSaveData, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: TSaveData
    nameWithType: TSaveData
    fullName: TSaveData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSaveData
    nameWithType: TSaveData
    fullName: TSaveData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Table.CloudTable
    name: CloudTable
    nameWithType: CloudTable
    fullName: Microsoft.WindowsAzure.Storage.Table.CloudTable
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSaveData
    nameWithType: TSaveData
    fullName: TSaveData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.AsyncSaveData``2(``0,System.Func{``0,Microsoft.WindowsAzure.Storage.Table.CloudTable,``1},System.Func{``0,System.String})
    name: AsyncSaveData(Of TSaveData, TResult)
    nameWithType: TableStorageStore(Of TData, TCollectionItemData).AsyncSaveData(Of TSaveData, TResult)
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore(Of TData, TCollectionItemData).AsyncSaveData(Of TSaveData, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: TSaveData
    nameWithType: TSaveData
    fullName: TSaveData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSaveData
    nameWithType: TSaveData
    fullName: TSaveData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Table.CloudTable
    name: CloudTable
    nameWithType: CloudTable
    fullName: Microsoft.WindowsAzure.Storage.Table.CloudTable
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSaveData
    nameWithType: TSaveData
    fullName: TSaveData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.CreateTableEntity(`1)
  commentId: M:Cqrs.Azure.BlobStorage.TableStorageStore`2.CreateTableEntity(`1)
  isExternal: false
  name: CreateTableEntity(TCollectionItemData)
  nameWithType: TableStorageStore<TData, TCollectionItemData>.CreateTableEntity(TCollectionItemData)
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<TData, TCollectionItemData>.CreateTableEntity(TCollectionItemData)
  nameWithType.vb: TableStorageStore(Of TData, TCollectionItemData).CreateTableEntity(TCollectionItemData)
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of TData, TCollectionItemData).CreateTableEntity(TCollectionItemData)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.CreateTableEntity(`1)
    name: CreateTableEntity
    nameWithType: TableStorageStore<TData, TCollectionItemData>.CreateTableEntity
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore<TData, TCollectionItemData>.CreateTableEntity
  - name: (
    nameWithType: (
    fullName: (
  - name: TCollectionItemData
    nameWithType: TCollectionItemData
    fullName: TCollectionItemData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.CreateTableEntity(`1)
    name: CreateTableEntity
    nameWithType: TableStorageStore(Of TData, TCollectionItemData).CreateTableEntity
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore(Of TData, TCollectionItemData).CreateTableEntity
  - name: (
    nameWithType: (
    fullName: (
  - name: TCollectionItemData
    nameWithType: TCollectionItemData
    fullName: TCollectionItemData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Add(`0)
  commentId: M:Cqrs.Azure.BlobStorage.TableStorageStore`2.Add(`0)
  isExternal: false
  name: Add(TData)
  nameWithType: TableStorageStore<TData, TCollectionItemData>.Add(TData)
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<TData, TCollectionItemData>.Add(TData)
  nameWithType.vb: TableStorageStore(Of TData, TCollectionItemData).Add(TData)
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of TData, TCollectionItemData).Add(TData)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Add(`0)
    name: Add
    nameWithType: TableStorageStore<TData, TCollectionItemData>.Add
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore<TData, TCollectionItemData>.Add
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Add(`0)
    name: Add
    nameWithType: TableStorageStore(Of TData, TCollectionItemData).Add
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore(Of TData, TCollectionItemData).Add
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Add(Microsoft.WindowsAzure.Storage.Table.ITableEntity)
  commentId: M:Cqrs.Azure.BlobStorage.TableStorageStore`2.Add(Microsoft.WindowsAzure.Storage.Table.ITableEntity)
  isExternal: true
  name: Add(ITableEntity)
  nameWithType: TableStorageStore<TData, TCollectionItemData>.Add(ITableEntity)
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<TData, TCollectionItemData>.Add(Microsoft.WindowsAzure.Storage.Table.ITableEntity)
  nameWithType.vb: TableStorageStore(Of TData, TCollectionItemData).Add(ITableEntity)
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of TData, TCollectionItemData).Add(Microsoft.WindowsAzure.Storage.Table.ITableEntity)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Add(Microsoft.WindowsAzure.Storage.Table.ITableEntity)
    name: Add
    nameWithType: TableStorageStore<TData, TCollectionItemData>.Add
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore<TData, TCollectionItemData>.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.Table.ITableEntity
    name: ITableEntity
    nameWithType: ITableEntity
    fullName: Microsoft.WindowsAzure.Storage.Table.ITableEntity
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Add(Microsoft.WindowsAzure.Storage.Table.ITableEntity)
    name: Add
    nameWithType: TableStorageStore(Of TData, TCollectionItemData).Add
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore(Of TData, TCollectionItemData).Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.Table.ITableEntity
    name: ITableEntity
    nameWithType: ITableEntity
    fullName: Microsoft.WindowsAzure.Storage.Table.ITableEntity
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Add(System.Collections.Generic.IEnumerable{`0})
  commentId: M:Cqrs.Azure.BlobStorage.TableStorageStore`2.Add(System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  name: Add(IEnumerable<TData>)
  nameWithType: TableStorageStore<TData, TCollectionItemData>.Add(IEnumerable<TData>)
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<TData, TCollectionItemData>.Add(System.Collections.Generic.IEnumerable<TData>)
  nameWithType.vb: TableStorageStore(Of TData, TCollectionItemData).Add(IEnumerable(Of TData))
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of TData, TCollectionItemData).Add(System.Collections.Generic.IEnumerable(Of TData))
  name.vb: Add(IEnumerable(Of TData))
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Add(System.Collections.Generic.IEnumerable{`0})
    name: Add
    nameWithType: TableStorageStore<TData, TCollectionItemData>.Add
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore<TData, TCollectionItemData>.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Add(System.Collections.Generic.IEnumerable{`0})
    name: Add
    nameWithType: TableStorageStore(Of TData, TCollectionItemData).Add
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore(Of TData, TCollectionItemData).Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Add(System.Collections.Generic.IEnumerable{Microsoft.WindowsAzure.Storage.Table.ITableEntity})
  commentId: M:Cqrs.Azure.BlobStorage.TableStorageStore`2.Add(System.Collections.Generic.IEnumerable{Microsoft.WindowsAzure.Storage.Table.ITableEntity})
  isExternal: true
  name: Add(IEnumerable<ITableEntity>)
  nameWithType: TableStorageStore<TData, TCollectionItemData>.Add(IEnumerable<ITableEntity>)
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<TData, TCollectionItemData>.Add(System.Collections.Generic.IEnumerable<Microsoft.WindowsAzure.Storage.Table.ITableEntity>)
  nameWithType.vb: TableStorageStore(Of TData, TCollectionItemData).Add(IEnumerable(Of ITableEntity))
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of TData, TCollectionItemData).Add(System.Collections.Generic.IEnumerable(Of Microsoft.WindowsAzure.Storage.Table.ITableEntity))
  name.vb: Add(IEnumerable(Of ITableEntity))
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Add(System.Collections.Generic.IEnumerable{Microsoft.WindowsAzure.Storage.Table.ITableEntity})
    name: Add
    nameWithType: TableStorageStore<TData, TCollectionItemData>.Add
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore<TData, TCollectionItemData>.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Storage.Table.ITableEntity
    name: ITableEntity
    nameWithType: ITableEntity
    fullName: Microsoft.WindowsAzure.Storage.Table.ITableEntity
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Add(System.Collections.Generic.IEnumerable{Microsoft.WindowsAzure.Storage.Table.ITableEntity})
    name: Add
    nameWithType: TableStorageStore(Of TData, TCollectionItemData).Add
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore(Of TData, TCollectionItemData).Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Storage.Table.ITableEntity
    name: ITableEntity
    nameWithType: ITableEntity
    fullName: Microsoft.WindowsAzure.Storage.Table.ITableEntity
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Destroy(`0)
  commentId: M:Cqrs.Azure.BlobStorage.TableStorageStore`2.Destroy(`0)
  isExternal: false
  name: Destroy(TData)
  nameWithType: TableStorageStore<TData, TCollectionItemData>.Destroy(TData)
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<TData, TCollectionItemData>.Destroy(TData)
  nameWithType.vb: TableStorageStore(Of TData, TCollectionItemData).Destroy(TData)
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of TData, TCollectionItemData).Destroy(TData)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Destroy(`0)
    name: Destroy
    nameWithType: TableStorageStore<TData, TCollectionItemData>.Destroy
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore<TData, TCollectionItemData>.Destroy
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Destroy(`0)
    name: Destroy
    nameWithType: TableStorageStore(Of TData, TCollectionItemData).Destroy
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore(Of TData, TCollectionItemData).Destroy
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Add(`1)
  commentId: M:Cqrs.Azure.BlobStorage.TableStorageStore`2.Add(`1)
  isExternal: false
  name: Add(TCollectionItemData)
  nameWithType: TableStorageStore<TData, TCollectionItemData>.Add(TCollectionItemData)
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<TData, TCollectionItemData>.Add(TCollectionItemData)
  nameWithType.vb: TableStorageStore(Of TData, TCollectionItemData).Add(TCollectionItemData)
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of TData, TCollectionItemData).Add(TCollectionItemData)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Add(`1)
    name: Add
    nameWithType: TableStorageStore<TData, TCollectionItemData>.Add
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore<TData, TCollectionItemData>.Add
  - name: (
    nameWithType: (
    fullName: (
  - name: TCollectionItemData
    nameWithType: TCollectionItemData
    fullName: TCollectionItemData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Add(`1)
    name: Add
    nameWithType: TableStorageStore(Of TData, TCollectionItemData).Add
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore(Of TData, TCollectionItemData).Add
  - name: (
    nameWithType: (
    fullName: (
  - name: TCollectionItemData
    nameWithType: TCollectionItemData
    fullName: TCollectionItemData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Add(System.Collections.Generic.IEnumerable{`1})
  commentId: M:Cqrs.Azure.BlobStorage.TableStorageStore`2.Add(System.Collections.Generic.IEnumerable{`1})
  isExternal: true
  name: Add(IEnumerable<TCollectionItemData>)
  nameWithType: TableStorageStore<TData, TCollectionItemData>.Add(IEnumerable<TCollectionItemData>)
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<TData, TCollectionItemData>.Add(System.Collections.Generic.IEnumerable<TCollectionItemData>)
  nameWithType.vb: TableStorageStore(Of TData, TCollectionItemData).Add(IEnumerable(Of TCollectionItemData))
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of TData, TCollectionItemData).Add(System.Collections.Generic.IEnumerable(Of TCollectionItemData))
  name.vb: Add(IEnumerable(Of TCollectionItemData))
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Add(System.Collections.Generic.IEnumerable{`1})
    name: Add
    nameWithType: TableStorageStore<TData, TCollectionItemData>.Add
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore<TData, TCollectionItemData>.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TCollectionItemData
    nameWithType: TCollectionItemData
    fullName: TCollectionItemData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Add(System.Collections.Generic.IEnumerable{`1})
    name: Add
    nameWithType: TableStorageStore(Of TData, TCollectionItemData).Add
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore(Of TData, TCollectionItemData).Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TCollectionItemData
    nameWithType: TCollectionItemData
    fullName: TCollectionItemData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Remove(`1)
  commentId: M:Cqrs.Azure.BlobStorage.TableStorageStore`2.Remove(`1)
  isExternal: false
  name: Remove(TCollectionItemData)
  nameWithType: TableStorageStore<TData, TCollectionItemData>.Remove(TCollectionItemData)
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<TData, TCollectionItemData>.Remove(TCollectionItemData)
  nameWithType.vb: TableStorageStore(Of TData, TCollectionItemData).Remove(TCollectionItemData)
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of TData, TCollectionItemData).Remove(TCollectionItemData)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Remove(`1)
    name: Remove
    nameWithType: TableStorageStore<TData, TCollectionItemData>.Remove
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore<TData, TCollectionItemData>.Remove
  - name: (
    nameWithType: (
    fullName: (
  - name: TCollectionItemData
    nameWithType: TCollectionItemData
    fullName: TCollectionItemData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Remove(`1)
    name: Remove
    nameWithType: TableStorageStore(Of TData, TCollectionItemData).Remove
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore(Of TData, TCollectionItemData).Remove
  - name: (
    nameWithType: (
    fullName: (
  - name: TCollectionItemData
    nameWithType: TCollectionItemData
    fullName: TCollectionItemData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Destroy(`1)
  commentId: M:Cqrs.Azure.BlobStorage.TableStorageStore`2.Destroy(`1)
  isExternal: false
  name: Destroy(TCollectionItemData)
  nameWithType: TableStorageStore<TData, TCollectionItemData>.Destroy(TCollectionItemData)
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<TData, TCollectionItemData>.Destroy(TCollectionItemData)
  nameWithType.vb: TableStorageStore(Of TData, TCollectionItemData).Destroy(TCollectionItemData)
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of TData, TCollectionItemData).Destroy(TCollectionItemData)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Destroy(`1)
    name: Destroy
    nameWithType: TableStorageStore<TData, TCollectionItemData>.Destroy
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore<TData, TCollectionItemData>.Destroy
  - name: (
    nameWithType: (
    fullName: (
  - name: TCollectionItemData
    nameWithType: TCollectionItemData
    fullName: TCollectionItemData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Destroy(`1)
    name: Destroy
    nameWithType: TableStorageStore(Of TData, TCollectionItemData).Destroy
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore(Of TData, TCollectionItemData).Destroy
  - name: (
    nameWithType: (
    fullName: (
  - name: TCollectionItemData
    nameWithType: TCollectionItemData
    fullName: TCollectionItemData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.RemoveAll
  commentId: M:Cqrs.Azure.BlobStorage.TableStorageStore`2.RemoveAll
  isExternal: false
  name: RemoveAll()
  nameWithType: TableStorageStore<TData, TCollectionItemData>.RemoveAll()
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<TData, TCollectionItemData>.RemoveAll()
  nameWithType.vb: TableStorageStore(Of TData, TCollectionItemData).RemoveAll()
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of TData, TCollectionItemData).RemoveAll()
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.RemoveAll
    name: RemoveAll
    nameWithType: TableStorageStore<TData, TCollectionItemData>.RemoveAll
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore<TData, TCollectionItemData>.RemoveAll
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.RemoveAll
    name: RemoveAll
    nameWithType: TableStorageStore(Of TData, TCollectionItemData).RemoveAll
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore(Of TData, TCollectionItemData).RemoveAll
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Update(`1)
  commentId: M:Cqrs.Azure.BlobStorage.TableStorageStore`2.Update(`1)
  isExternal: false
  name: Update(TCollectionItemData)
  nameWithType: TableStorageStore<TData, TCollectionItemData>.Update(TCollectionItemData)
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<TData, TCollectionItemData>.Update(TCollectionItemData)
  nameWithType.vb: TableStorageStore(Of TData, TCollectionItemData).Update(TCollectionItemData)
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of TData, TCollectionItemData).Update(TCollectionItemData)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Update(`1)
    name: Update
    nameWithType: TableStorageStore<TData, TCollectionItemData>.Update
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore<TData, TCollectionItemData>.Update
  - name: (
    nameWithType: (
    fullName: (
  - name: TCollectionItemData
    nameWithType: TCollectionItemData
    fullName: TCollectionItemData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Update(`1)
    name: Update
    nameWithType: TableStorageStore(Of TData, TCollectionItemData).Update
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore(Of TData, TCollectionItemData).Update
  - name: (
    nameWithType: (
    fullName: (
  - name: TCollectionItemData
    nameWithType: TCollectionItemData
    fullName: TCollectionItemData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Update(`0)
  commentId: M:Cqrs.Azure.BlobStorage.TableStorageStore`2.Update(`0)
  isExternal: false
  name: Update(TData)
  nameWithType: TableStorageStore<TData, TCollectionItemData>.Update(TData)
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<TData, TCollectionItemData>.Update(TData)
  nameWithType.vb: TableStorageStore(Of TData, TCollectionItemData).Update(TData)
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of TData, TCollectionItemData).Update(TData)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Update(`0)
    name: Update
    nameWithType: TableStorageStore<TData, TCollectionItemData>.Update
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore<TData, TCollectionItemData>.Update
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Update(`0)
    name: Update
    nameWithType: TableStorageStore(Of TData, TCollectionItemData).Update
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore(Of TData, TCollectionItemData).Update
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.GetUpdatableTableEntity(`1)
  commentId: M:Cqrs.Azure.BlobStorage.TableStorageStore`2.GetUpdatableTableEntity(`1)
  isExternal: false
  name: GetUpdatableTableEntity(TCollectionItemData)
  nameWithType: TableStorageStore<TData, TCollectionItemData>.GetUpdatableTableEntity(TCollectionItemData)
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<TData, TCollectionItemData>.GetUpdatableTableEntity(TCollectionItemData)
  nameWithType.vb: TableStorageStore(Of TData, TCollectionItemData).GetUpdatableTableEntity(TCollectionItemData)
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of TData, TCollectionItemData).GetUpdatableTableEntity(TCollectionItemData)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.GetUpdatableTableEntity(`1)
    name: GetUpdatableTableEntity
    nameWithType: TableStorageStore<TData, TCollectionItemData>.GetUpdatableTableEntity
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore<TData, TCollectionItemData>.GetUpdatableTableEntity
  - name: (
    nameWithType: (
    fullName: (
  - name: TCollectionItemData
    nameWithType: TCollectionItemData
    fullName: TCollectionItemData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.GetUpdatableTableEntity(`1)
    name: GetUpdatableTableEntity
    nameWithType: TableStorageStore(Of TData, TCollectionItemData).GetUpdatableTableEntity
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore(Of TData, TCollectionItemData).GetUpdatableTableEntity
  - name: (
    nameWithType: (
    fullName: (
  - name: TCollectionItemData
    nameWithType: TCollectionItemData
    fullName: TCollectionItemData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.GetUpdatableTableEntity(`0)
  commentId: M:Cqrs.Azure.BlobStorage.TableStorageStore`2.GetUpdatableTableEntity(`0)
  isExternal: false
  name: GetUpdatableTableEntity(TData)
  nameWithType: TableStorageStore<TData, TCollectionItemData>.GetUpdatableTableEntity(TData)
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<TData, TCollectionItemData>.GetUpdatableTableEntity(TData)
  nameWithType.vb: TableStorageStore(Of TData, TCollectionItemData).GetUpdatableTableEntity(TData)
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of TData, TCollectionItemData).GetUpdatableTableEntity(TData)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.GetUpdatableTableEntity(`0)
    name: GetUpdatableTableEntity
    nameWithType: TableStorageStore<TData, TCollectionItemData>.GetUpdatableTableEntity
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore<TData, TCollectionItemData>.GetUpdatableTableEntity
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.GetUpdatableTableEntity(`0)
    name: GetUpdatableTableEntity
    nameWithType: TableStorageStore(Of TData, TCollectionItemData).GetUpdatableTableEntity
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore(Of TData, TCollectionItemData).GetUpdatableTableEntity
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String,System.Boolean)
  commentId: M:Cqrs.Azure.BlobStorage.TableStorageStore`2.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String,System.Boolean)
  isExternal: true
  name: CreateSource(CloudStorageAccount, String, Boolean)
  nameWithType: TableStorageStore<TData, TCollectionItemData>.CreateSource(CloudStorageAccount, String, Boolean)
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<TData, TCollectionItemData>.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount, System.String, System.Boolean)
  nameWithType.vb: TableStorageStore(Of TData, TCollectionItemData).CreateSource(CloudStorageAccount, String, Boolean)
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of TData, TCollectionItemData).CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount, System.String, System.Boolean)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String,System.Boolean)
    name: CreateSource
    nameWithType: TableStorageStore<TData, TCollectionItemData>.CreateSource
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore<TData, TCollectionItemData>.CreateSource
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.CloudStorageAccount
    name: CloudStorageAccount
    nameWithType: CloudStorageAccount
    fullName: Microsoft.WindowsAzure.Storage.CloudStorageAccount
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String,System.Boolean)
    name: CreateSource
    nameWithType: TableStorageStore(Of TData, TCollectionItemData).CreateSource
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore(Of TData, TCollectionItemData).CreateSource
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.CloudStorageAccount
    name: CloudStorageAccount
    nameWithType: CloudStorageAccount
    fullName: Microsoft.WindowsAzure.Storage.CloudStorageAccount
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.GetByKeyAndRow(System.Guid)
  commentId: M:Cqrs.Azure.BlobStorage.TableStorageStore`2.GetByKeyAndRow(System.Guid)
  isExternal: true
  name: GetByKeyAndRow(Guid)
  nameWithType: TableStorageStore<TData, TCollectionItemData>.GetByKeyAndRow(Guid)
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<TData, TCollectionItemData>.GetByKeyAndRow(System.Guid)
  nameWithType.vb: TableStorageStore(Of TData, TCollectionItemData).GetByKeyAndRow(Guid)
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of TData, TCollectionItemData).GetByKeyAndRow(System.Guid)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.GetByKeyAndRow(System.Guid)
    name: GetByKeyAndRow
    nameWithType: TableStorageStore<TData, TCollectionItemData>.GetByKeyAndRow
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore<TData, TCollectionItemData>.GetByKeyAndRow
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.GetByKeyAndRow(System.Guid)
    name: GetByKeyAndRow
    nameWithType: TableStorageStore(Of TData, TCollectionItemData).GetByKeyAndRow
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore(Of TData, TCollectionItemData).GetByKeyAndRow
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.GetByKey
  commentId: M:Cqrs.Azure.BlobStorage.TableStorageStore`2.GetByKey
  isExternal: false
  name: GetByKey()
  nameWithType: TableStorageStore<TData, TCollectionItemData>.GetByKey()
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<TData, TCollectionItemData>.GetByKey()
  nameWithType.vb: TableStorageStore(Of TData, TCollectionItemData).GetByKey()
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of TData, TCollectionItemData).GetByKey()
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.GetByKey
    name: GetByKey
    nameWithType: TableStorageStore<TData, TCollectionItemData>.GetByKey
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore<TData, TCollectionItemData>.GetByKey
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.GetByKey
    name: GetByKey
    nameWithType: TableStorageStore(Of TData, TCollectionItemData).GetByKey
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore(Of TData, TCollectionItemData).GetByKey
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.ReplaceValues(Microsoft.WindowsAzure.Storage.Table.TableResult,`0)
  commentId: M:Cqrs.Azure.BlobStorage.TableStorageStore`2.ReplaceValues(Microsoft.WindowsAzure.Storage.Table.TableResult,`0)
  isExternal: true
  name: ReplaceValues(TableResult, TData)
  nameWithType: TableStorageStore<TData, TCollectionItemData>.ReplaceValues(TableResult, TData)
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<TData, TCollectionItemData>.ReplaceValues(Microsoft.WindowsAzure.Storage.Table.TableResult, TData)
  nameWithType.vb: TableStorageStore(Of TData, TCollectionItemData).ReplaceValues(TableResult, TData)
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of TData, TCollectionItemData).ReplaceValues(Microsoft.WindowsAzure.Storage.Table.TableResult, TData)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.ReplaceValues(Microsoft.WindowsAzure.Storage.Table.TableResult,`0)
    name: ReplaceValues
    nameWithType: TableStorageStore<TData, TCollectionItemData>.ReplaceValues
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore<TData, TCollectionItemData>.ReplaceValues
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.Table.TableResult
    name: TableResult
    nameWithType: TableResult
    fullName: Microsoft.WindowsAzure.Storage.Table.TableResult
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.ReplaceValues(Microsoft.WindowsAzure.Storage.Table.TableResult,`0)
    name: ReplaceValues
    nameWithType: TableStorageStore(Of TData, TCollectionItemData).ReplaceValues
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore(Of TData, TCollectionItemData).ReplaceValues
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.Table.TableResult
    name: TableResult
    nameWithType: TableResult
    fullName: Microsoft.WindowsAzure.Storage.Table.TableResult
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.GetSafeSourceName(System.String)
  commentId: M:Cqrs.Azure.BlobStorage.TableStorageStore`2.GetSafeSourceName(System.String)
  isExternal: true
  name: GetSafeSourceName(String)
  nameWithType: TableStorageStore<TData, TCollectionItemData>.GetSafeSourceName(String)
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<TData, TCollectionItemData>.GetSafeSourceName(System.String)
  nameWithType.vb: TableStorageStore(Of TData, TCollectionItemData).GetSafeSourceName(String)
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of TData, TCollectionItemData).GetSafeSourceName(System.String)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.GetSafeSourceName(System.String)
    name: GetSafeSourceName
    nameWithType: TableStorageStore<TData, TCollectionItemData>.GetSafeSourceName
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore<TData, TCollectionItemData>.GetSafeSourceName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.GetSafeSourceName(System.String)
    name: GetSafeSourceName
    nameWithType: TableStorageStore(Of TData, TCollectionItemData).GetSafeSourceName
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore(Of TData, TCollectionItemData).GetSafeSourceName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.WritableCollection
  commentId: P:Cqrs.Azure.BlobStorage.StorageStore`2.WritableCollection
  isExternal: false
  name: WritableCollection
  nameWithType: StorageStore<TData, TSource>.WritableCollection
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.WritableCollection
  nameWithType.vb: StorageStore(Of TData, TSource).WritableCollection
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).WritableCollection
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.ReadableStorageAccount
  commentId: P:Cqrs.Azure.BlobStorage.StorageStore`2.ReadableStorageAccount
  isExternal: false
  name: ReadableStorageAccount
  nameWithType: StorageStore<TData, TSource>.ReadableStorageAccount
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.ReadableStorageAccount
  nameWithType.vb: StorageStore(Of TData, TSource).ReadableStorageAccount
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).ReadableStorageAccount
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.Logger
  commentId: P:Cqrs.Azure.BlobStorage.StorageStore`2.Logger
  isExternal: false
  name: Logger
  nameWithType: StorageStore<TData, TSource>.Logger
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.Logger
  nameWithType.vb: StorageStore(Of TData, TSource).Logger
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).Logger
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetContainerName
  commentId: P:Cqrs.Azure.BlobStorage.StorageStore`2.GetContainerName
  isExternal: false
  name: GetContainerName
  nameWithType: StorageStore<TData, TSource>.GetContainerName
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.GetContainerName
  nameWithType.vb: StorageStore(Of TData, TSource).GetContainerName
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).GetContainerName
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.IsContainerPublic
  commentId: P:Cqrs.Azure.BlobStorage.StorageStore`2.IsContainerPublic
  isExternal: false
  name: IsContainerPublic
  nameWithType: StorageStore<TData, TSource>.IsContainerPublic
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.IsContainerPublic
  nameWithType.vb: StorageStore(Of TData, TSource).IsContainerPublic
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).IsContainerPublic
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.DefaultSettings
  commentId: P:Cqrs.Azure.BlobStorage.StorageStore`2.DefaultSettings
  isExternal: false
  name: DefaultSettings
  nameWithType: StorageStore<TData, TSource>.DefaultSettings
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.DefaultSettings
  nameWithType.vb: StorageStore(Of TData, TSource).DefaultSettings
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).DefaultSettings
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.Initialise(Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory)
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore`2.Initialise(Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory)
  isExternal: false
  name: Initialise(IStorageStoreConnectionStringFactory)
  nameWithType: StorageStore<TData, TSource>.Initialise(IStorageStoreConnectionStringFactory)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.Initialise(Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory)
  nameWithType.vb: StorageStore(Of TData, TSource).Initialise(IStorageStoreConnectionStringFactory)
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).Initialise(Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Initialise(Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory)
    name: Initialise
    nameWithType: StorageStore<TData, TSource>.Initialise
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.Initialise
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory
    name: IStorageStoreConnectionStringFactory
    nameWithType: IStorageStoreConnectionStringFactory
    fullName: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Initialise(Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory)
    name: Initialise
    nameWithType: StorageStore(Of TData, TSource).Initialise
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).Initialise
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory
    name: IStorageStoreConnectionStringFactory
    nameWithType: IStorageStoreConnectionStringFactory
    fullName: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetEnumerator
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore`2.GetEnumerator
  isExternal: false
  name: GetEnumerator()
  nameWithType: StorageStore<TData, TSource>.GetEnumerator()
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.GetEnumerator()
  nameWithType.vb: StorageStore(Of TData, TSource).GetEnumerator()
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).GetEnumerator()
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetEnumerator
    name: GetEnumerator
    nameWithType: StorageStore<TData, TSource>.GetEnumerator
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetEnumerator
    name: GetEnumerator
    nameWithType: StorageStore(Of TData, TSource).GetEnumerator
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.System#Collections#IEnumerable#GetEnumerator
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore`2.System#Collections#IEnumerable#GetEnumerator
  isExternal: false
  name: IEnumerable.GetEnumerator()
  nameWithType: StorageStore<TData, TSource>.IEnumerable.GetEnumerator()
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.System.Collections.IEnumerable.GetEnumerator()
  nameWithType.vb: StorageStore(Of TData, TSource).System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.System#Collections#IEnumerable#GetEnumerator
    name: IEnumerable.GetEnumerator
    nameWithType: StorageStore<TData, TSource>.IEnumerable.GetEnumerator
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.System.Collections.IEnumerable.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.System#Collections#IEnumerable#GetEnumerator
    name: System.Collections.IEnumerable.GetEnumerator
    nameWithType: StorageStore(Of TData, TSource).System.Collections.IEnumerable.GetEnumerator
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).System.Collections.IEnumerable.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.Expression
  commentId: P:Cqrs.Azure.BlobStorage.StorageStore`2.Expression
  isExternal: false
  name: Expression
  nameWithType: StorageStore<TData, TSource>.Expression
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.Expression
  nameWithType.vb: StorageStore(Of TData, TSource).Expression
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).Expression
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.ElementType
  commentId: P:Cqrs.Azure.BlobStorage.StorageStore`2.ElementType
  isExternal: false
  name: ElementType
  nameWithType: StorageStore<TData, TSource>.ElementType
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.ElementType
  nameWithType.vb: StorageStore(Of TData, TSource).ElementType
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).ElementType
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.Provider
  commentId: P:Cqrs.Azure.BlobStorage.StorageStore`2.Provider
  isExternal: false
  name: Provider
  nameWithType: StorageStore<TData, TSource>.Provider
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.Provider
  nameWithType.vb: StorageStore(Of TData, TSource).Provider
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).Provider
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.Dispose
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore`2.Dispose
  isExternal: false
  name: Dispose()
  nameWithType: StorageStore<TData, TSource>.Dispose()
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.Dispose()
  nameWithType.vb: StorageStore(Of TData, TSource).Dispose()
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).Dispose()
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Dispose
    name: Dispose
    nameWithType: StorageStore<TData, TSource>.Dispose
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Dispose
    name: Dispose
    nameWithType: StorageStore(Of TData, TSource).Dispose
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.Add(`0)
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore`2.Add(`0)
  isExternal: false
  name: Add(TData)
  nameWithType: StorageStore<TData, TSource>.Add(TData)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.Add(TData)
  nameWithType.vb: StorageStore(Of TData, TSource).Add(TData)
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).Add(TData)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Add(`0)
    name: Add
    nameWithType: StorageStore<TData, TSource>.Add
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.Add
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Add(`0)
    name: Add
    nameWithType: StorageStore(Of TData, TSource).Add
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).Add
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.Add(System.Collections.Generic.IEnumerable{`0})
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore`2.Add(System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  name: Add(IEnumerable<TData>)
  nameWithType: StorageStore<TData, TSource>.Add(IEnumerable<TData>)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.Add(System.Collections.Generic.IEnumerable<TData>)
  nameWithType.vb: StorageStore(Of TData, TSource).Add(IEnumerable(Of TData))
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).Add(System.Collections.Generic.IEnumerable(Of TData))
  name.vb: Add(IEnumerable(Of TData))
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Add(System.Collections.Generic.IEnumerable{`0})
    name: Add
    nameWithType: StorageStore<TData, TSource>.Add
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Add(System.Collections.Generic.IEnumerable{`0})
    name: Add
    nameWithType: StorageStore(Of TData, TSource).Add
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.Destroy(`0)
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore`2.Destroy(`0)
  isExternal: false
  name: Destroy(TData)
  nameWithType: StorageStore<TData, TSource>.Destroy(TData)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.Destroy(TData)
  nameWithType.vb: StorageStore(Of TData, TSource).Destroy(TData)
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).Destroy(TData)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Destroy(`0)
    name: Destroy
    nameWithType: StorageStore<TData, TSource>.Destroy
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.Destroy
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Destroy(`0)
    name: Destroy
    nameWithType: StorageStore(Of TData, TSource).Destroy
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).Destroy
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.RemoveAll
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore`2.RemoveAll
  isExternal: false
  name: RemoveAll()
  nameWithType: StorageStore<TData, TSource>.RemoveAll()
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.RemoveAll()
  nameWithType.vb: StorageStore(Of TData, TSource).RemoveAll()
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).RemoveAll()
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.RemoveAll
    name: RemoveAll
    nameWithType: StorageStore<TData, TSource>.RemoveAll
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.RemoveAll
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.RemoveAll
    name: RemoveAll
    nameWithType: StorageStore(Of TData, TSource).RemoveAll
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).RemoveAll
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.Update(`0)
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore`2.Update(`0)
  isExternal: false
  name: Update(TData)
  nameWithType: StorageStore<TData, TSource>.Update(TData)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.Update(TData)
  nameWithType.vb: StorageStore(Of TData, TSource).Update(TData)
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).Update(TData)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Update(`0)
    name: Update
    nameWithType: StorageStore<TData, TSource>.Update
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.Update
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Update(`0)
    name: Update
    nameWithType: StorageStore(Of TData, TSource).Update
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).Update
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String,System.Boolean)
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore`2.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String,System.Boolean)
  isExternal: true
  name: CreateSource(CloudStorageAccount, String, Boolean)
  nameWithType: StorageStore<TData, TSource>.CreateSource(CloudStorageAccount, String, Boolean)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount, System.String, System.Boolean)
  nameWithType.vb: StorageStore(Of TData, TSource).CreateSource(CloudStorageAccount, String, Boolean)
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount, System.String, System.Boolean)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String,System.Boolean)
    name: CreateSource
    nameWithType: StorageStore<TData, TSource>.CreateSource
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.CreateSource
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.CloudStorageAccount
    name: CloudStorageAccount
    nameWithType: CloudStorageAccount
    fullName: Microsoft.WindowsAzure.Storage.CloudStorageAccount
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String,System.Boolean)
    name: CreateSource
    nameWithType: StorageStore(Of TData, TSource).CreateSource
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).CreateSource
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.CloudStorageAccount
    name: CloudStorageAccount
    nameWithType: CloudStorageAccount
    fullName: Microsoft.WindowsAzure.Storage.CloudStorageAccount
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetSafeSourceName(System.String)
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore`2.GetSafeSourceName(System.String)
  isExternal: true
  name: GetSafeSourceName(String)
  nameWithType: StorageStore<TData, TSource>.GetSafeSourceName(String)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.GetSafeSourceName(System.String)
  nameWithType.vb: StorageStore(Of TData, TSource).GetSafeSourceName(String)
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).GetSafeSourceName(System.String)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetSafeSourceName(System.String)
    name: GetSafeSourceName
    nameWithType: StorageStore<TData, TSource>.GetSafeSourceName
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.GetSafeSourceName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetSafeSourceName(System.String)
    name: GetSafeSourceName
    nameWithType: StorageStore(Of TData, TSource).GetSafeSourceName
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).GetSafeSourceName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetSafeSourceName(System.String,System.Boolean)
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore`2.GetSafeSourceName(System.String,System.Boolean)
  isExternal: true
  name: GetSafeSourceName(String, Boolean)
  nameWithType: StorageStore<TData, TSource>.GetSafeSourceName(String, Boolean)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.GetSafeSourceName(System.String, System.Boolean)
  nameWithType.vb: StorageStore(Of TData, TSource).GetSafeSourceName(String, Boolean)
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).GetSafeSourceName(System.String, System.Boolean)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetSafeSourceName(System.String,System.Boolean)
    name: GetSafeSourceName
    nameWithType: StorageStore<TData, TSource>.GetSafeSourceName
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.GetSafeSourceName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetSafeSourceName(System.String,System.Boolean)
    name: GetSafeSourceName
    nameWithType: StorageStore(Of TData, TSource).GetSafeSourceName
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).GetSafeSourceName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.AzureStorageRetryPolicy
  commentId: P:Cqrs.Azure.BlobStorage.StorageStore`2.AzureStorageRetryPolicy
  isExternal: false
  name: AzureStorageRetryPolicy
  nameWithType: StorageStore<TData, TSource>.AzureStorageRetryPolicy
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.AzureStorageRetryPolicy
  nameWithType.vb: StorageStore(Of TData, TSource).AzureStorageRetryPolicy
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).AzureStorageRetryPolicy
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.Deserialise(System.IO.Stream)
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore`2.Deserialise(System.IO.Stream)
  isExternal: true
  name: Deserialise(Stream)
  nameWithType: StorageStore<TData, TSource>.Deserialise(Stream)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.Deserialise(System.IO.Stream)
  nameWithType.vb: StorageStore(Of TData, TSource).Deserialise(Stream)
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).Deserialise(System.IO.Stream)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Deserialise(System.IO.Stream)
    name: Deserialise
    nameWithType: StorageStore<TData, TSource>.Deserialise
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.Deserialise
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Deserialise(System.IO.Stream)
    name: Deserialise
    nameWithType: StorageStore(Of TData, TSource).Deserialise
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).Deserialise
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.Deserialise(System.String)
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore`2.Deserialise(System.String)
  isExternal: true
  name: Deserialise(String)
  nameWithType: StorageStore<TData, TSource>.Deserialise(String)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.Deserialise(System.String)
  nameWithType.vb: StorageStore(Of TData, TSource).Deserialise(String)
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).Deserialise(System.String)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Deserialise(System.String)
    name: Deserialise
    nameWithType: StorageStore<TData, TSource>.Deserialise
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.Deserialise
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Deserialise(System.String)
    name: Deserialise
    nameWithType: StorageStore(Of TData, TSource).Deserialise
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).Deserialise
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.Serialise(`0)
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore`2.Serialise(`0)
  isExternal: false
  name: Serialise(TData)
  nameWithType: StorageStore<TData, TSource>.Serialise(TData)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.Serialise(TData)
  nameWithType.vb: StorageStore(Of TData, TSource).Serialise(TData)
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).Serialise(TData)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Serialise(`0)
    name: Serialise
    nameWithType: StorageStore<TData, TSource>.Serialise
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.Serialise
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Serialise(`0)
    name: Serialise
    nameWithType: StorageStore(Of TData, TSource).Serialise
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).Serialise
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetSerialisationSettings
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore`2.GetSerialisationSettings
  isExternal: false
  name: GetSerialisationSettings()
  nameWithType: StorageStore<TData, TSource>.GetSerialisationSettings()
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.GetSerialisationSettings()
  nameWithType.vb: StorageStore(Of TData, TSource).GetSerialisationSettings()
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).GetSerialisationSettings()
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetSerialisationSettings
    name: GetSerialisationSettings
    nameWithType: StorageStore<TData, TSource>.GetSerialisationSettings
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.GetSerialisationSettings
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetSerialisationSettings
    name: GetSerialisationSettings
    nameWithType: StorageStore(Of TData, TSource).GetSerialisationSettings
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).GetSerialisationSettings
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetSerialiser
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore`2.GetSerialiser
  isExternal: false
  name: GetSerialiser()
  nameWithType: StorageStore<TData, TSource>.GetSerialiser()
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.GetSerialiser()
  nameWithType.vb: StorageStore(Of TData, TSource).GetSerialiser()
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).GetSerialiser()
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetSerialiser
    name: GetSerialiser
    nameWithType: StorageStore<TData, TSource>.GetSerialiser
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.GetSerialiser
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetSerialiser
    name: GetSerialiser
    nameWithType: StorageStore(Of TData, TSource).GetSerialiser
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).GetSerialiser
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Sql.DataStores.SqlDataStoreExtensions.Where``2(Cqrs.DataStores.IDataStore{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  commentId: M:Cqrs.Sql.DataStores.SqlDataStoreExtensions.Where``2(Cqrs.DataStores.IDataStore{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  isExternal: true
  name: Where<TEntity, TDbEntity>(IDataStore<TEntity>, Expression<Func<TEntity, Boolean>>)
  nameWithType: SqlDataStoreExtensions.Where<TEntity, TDbEntity>(IDataStore<TEntity>, Expression<Func<TEntity, Boolean>>)
  fullName: Cqrs.Sql.DataStores.SqlDataStoreExtensions.Where<TEntity, TDbEntity>(Cqrs.DataStores.IDataStore<TEntity>, System.Linq.Expressions.Expression<System.Func<TEntity, System.Boolean>>)
  nameWithType.vb: SqlDataStoreExtensions.Where(Of TEntity, TDbEntity)(IDataStore(Of TEntity), Expression(Of Func(Of TEntity, Boolean)))
  fullName.vb: Cqrs.Sql.DataStores.SqlDataStoreExtensions.Where(Of TEntity, TDbEntity)(Cqrs.DataStores.IDataStore(Of TEntity), System.Linq.Expressions.Expression(Of System.Func(Of TEntity, System.Boolean)))
  name.vb: Where(Of TEntity, TDbEntity)(IDataStore(Of TEntity), Expression(Of Func(Of TEntity, Boolean)))
  spec.csharp:
  - uid: Cqrs.Sql.DataStores.SqlDataStoreExtensions.Where``2(Cqrs.DataStores.IDataStore{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
    name: Where<TEntity, TDbEntity>
    nameWithType: SqlDataStoreExtensions.Where<TEntity, TDbEntity>
    fullName: Cqrs.Sql.DataStores.SqlDataStoreExtensions.Where<TEntity, TDbEntity>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.DataStores.IDataStore`1
    name: IDataStore
    nameWithType: IDataStore
    fullName: Cqrs.DataStores.IDataStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Sql.DataStores.SqlDataStoreExtensions.Where``2(Cqrs.DataStores.IDataStore{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
    name: Where(Of TEntity, TDbEntity)
    nameWithType: SqlDataStoreExtensions.Where(Of TEntity, TDbEntity)
    fullName: Cqrs.Sql.DataStores.SqlDataStoreExtensions.Where(Of TEntity, TDbEntity)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.DataStores.IDataStore`1
    name: IDataStore
    nameWithType: IDataStore
    fullName: Cqrs.DataStores.IDataStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Sql.DataStores.SqlDataStoreExtensions
  commentId: T:Cqrs.Sql.DataStores.SqlDataStoreExtensions
  parent: Cqrs.Sql.DataStores
  isExternal: false
  name: SqlDataStoreExtensions
  nameWithType: SqlDataStoreExtensions
  fullName: Cqrs.Sql.DataStores.SqlDataStoreExtensions
- uid: Cqrs.Azure.BlobStorage.TableStorageStoreExtensions.GetByKeyAndRow``1(Cqrs.DataStores.IDataStore{``0},System.Guid)
  commentId: M:Cqrs.Azure.BlobStorage.TableStorageStoreExtensions.GetByKeyAndRow``1(Cqrs.DataStores.IDataStore{``0},System.Guid)
  isExternal: true
  name: GetByKeyAndRow<TData>(IDataStore<TData>, Guid)
  nameWithType: TableStorageStoreExtensions.GetByKeyAndRow<TData>(IDataStore<TData>, Guid)
  fullName: Cqrs.Azure.BlobStorage.TableStorageStoreExtensions.GetByKeyAndRow<TData>(Cqrs.DataStores.IDataStore<TData>, System.Guid)
  nameWithType.vb: TableStorageStoreExtensions.GetByKeyAndRow(Of TData)(IDataStore(Of TData), Guid)
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStoreExtensions.GetByKeyAndRow(Of TData)(Cqrs.DataStores.IDataStore(Of TData), System.Guid)
  name.vb: GetByKeyAndRow(Of TData)(IDataStore(Of TData), Guid)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStoreExtensions.GetByKeyAndRow``1(Cqrs.DataStores.IDataStore{``0},System.Guid)
    name: GetByKeyAndRow<TData>
    nameWithType: TableStorageStoreExtensions.GetByKeyAndRow<TData>
    fullName: Cqrs.Azure.BlobStorage.TableStorageStoreExtensions.GetByKeyAndRow<TData>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.DataStores.IDataStore`1
    name: IDataStore
    nameWithType: IDataStore
    fullName: Cqrs.DataStores.IDataStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStoreExtensions.GetByKeyAndRow``1(Cqrs.DataStores.IDataStore{``0},System.Guid)
    name: GetByKeyAndRow(Of TData)
    nameWithType: TableStorageStoreExtensions.GetByKeyAndRow(Of TData)
    fullName: Cqrs.Azure.BlobStorage.TableStorageStoreExtensions.GetByKeyAndRow(Of TData)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.DataStores.IDataStore`1
    name: IDataStore
    nameWithType: IDataStore
    fullName: Cqrs.DataStores.IDataStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.TableStorageStoreExtensions
  commentId: T:Cqrs.Azure.BlobStorage.TableStorageStoreExtensions
  parent: Cqrs.Azure.BlobStorage
  isExternal: false
  name: TableStorageStoreExtensions
  nameWithType: TableStorageStoreExtensions
  fullName: Cqrs.Azure.BlobStorage.TableStorageStoreExtensions
- uid: Cqrs.Azure.BlobStorage.TableStorageStoreExtensions.GetByKey``1(Cqrs.DataStores.IDataStore{``0})
  commentId: M:Cqrs.Azure.BlobStorage.TableStorageStoreExtensions.GetByKey``1(Cqrs.DataStores.IDataStore{``0})
  isExternal: false
  name: GetByKey<TData>(IDataStore<TData>)
  nameWithType: TableStorageStoreExtensions.GetByKey<TData>(IDataStore<TData>)
  fullName: Cqrs.Azure.BlobStorage.TableStorageStoreExtensions.GetByKey<TData>(Cqrs.DataStores.IDataStore<TData>)
  nameWithType.vb: TableStorageStoreExtensions.GetByKey(Of TData)(IDataStore(Of TData))
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStoreExtensions.GetByKey(Of TData)(Cqrs.DataStores.IDataStore(Of TData))
  name.vb: GetByKey(Of TData)(IDataStore(Of TData))
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStoreExtensions.GetByKey``1(Cqrs.DataStores.IDataStore{``0})
    name: GetByKey<TData>
    nameWithType: TableStorageStoreExtensions.GetByKey<TData>
    fullName: Cqrs.Azure.BlobStorage.TableStorageStoreExtensions.GetByKey<TData>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.DataStores.IDataStore`1
    name: IDataStore
    nameWithType: IDataStore
    fullName: Cqrs.DataStores.IDataStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStoreExtensions.GetByKey``1(Cqrs.DataStores.IDataStore{``0})
    name: GetByKey(Of TData)
    nameWithType: TableStorageStoreExtensions.GetByKey(Of TData)
    fullName: Cqrs.Azure.BlobStorage.TableStorageStoreExtensions.GetByKey(Of TData)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.DataStores.IDataStore`1
    name: IDataStore
    nameWithType: IDataStore
    fullName: Cqrs.DataStores.IDataStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByName``1(Cqrs.DataStores.IDataStore{``0},System.String)
  commentId: M:Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByName``1(Cqrs.DataStores.IDataStore{``0},System.String)
  isExternal: true
  name: GetByName<TData>(IDataStore<TData>, String)
  nameWithType: BlobStorageStoreExtensions.GetByName<TData>(IDataStore<TData>, String)
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByName<TData>(Cqrs.DataStores.IDataStore<TData>, System.String)
  nameWithType.vb: BlobStorageStoreExtensions.GetByName(Of TData)(IDataStore(Of TData), String)
  fullName.vb: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByName(Of TData)(Cqrs.DataStores.IDataStore(Of TData), System.String)
  name.vb: GetByName(Of TData)(IDataStore(Of TData), String)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByName``1(Cqrs.DataStores.IDataStore{``0},System.String)
    name: GetByName<TData>
    nameWithType: BlobStorageStoreExtensions.GetByName<TData>
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByName<TData>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.DataStores.IDataStore`1
    name: IDataStore
    nameWithType: IDataStore
    fullName: Cqrs.DataStores.IDataStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByName``1(Cqrs.DataStores.IDataStore{``0},System.String)
    name: GetByName(Of TData)
    nameWithType: BlobStorageStoreExtensions.GetByName(Of TData)
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByName(Of TData)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.DataStores.IDataStore`1
    name: IDataStore
    nameWithType: IDataStore
    fullName: Cqrs.DataStores.IDataStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions
  commentId: T:Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions
  parent: Cqrs.Azure.BlobStorage
  isExternal: false
  name: BlobStorageStoreExtensions
  nameWithType: BlobStorageStoreExtensions
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions
- uid: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByFolder``1(Cqrs.DataStores.IDataStore{``0},System.String)
  commentId: M:Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByFolder``1(Cqrs.DataStores.IDataStore{``0},System.String)
  isExternal: true
  name: GetByFolder<TData>(IDataStore<TData>, String)
  nameWithType: BlobStorageStoreExtensions.GetByFolder<TData>(IDataStore<TData>, String)
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByFolder<TData>(Cqrs.DataStores.IDataStore<TData>, System.String)
  nameWithType.vb: BlobStorageStoreExtensions.GetByFolder(Of TData)(IDataStore(Of TData), String)
  fullName.vb: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByFolder(Of TData)(Cqrs.DataStores.IDataStore(Of TData), System.String)
  name.vb: GetByFolder(Of TData)(IDataStore(Of TData), String)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByFolder``1(Cqrs.DataStores.IDataStore{``0},System.String)
    name: GetByFolder<TData>
    nameWithType: BlobStorageStoreExtensions.GetByFolder<TData>
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByFolder<TData>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.DataStores.IDataStore`1
    name: IDataStore
    nameWithType: IDataStore
    fullName: Cqrs.DataStores.IDataStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByFolder``1(Cqrs.DataStores.IDataStore{``0},System.String)
    name: GetByFolder(Of TData)
    nameWithType: BlobStorageStoreExtensions.GetByFolder(Of TData)
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByFolder(Of TData)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.DataStores.IDataStore`1
    name: IDataStore
    nameWithType: IDataStore
    fullName: Cqrs.DataStores.IDataStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByFolder``1(Cqrs.DataStores.IDataStore{``0})
  commentId: M:Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByFolder``1(Cqrs.DataStores.IDataStore{``0})
  isExternal: false
  name: GetByFolder<TData>(IDataStore<TData>)
  nameWithType: BlobStorageStoreExtensions.GetByFolder<TData>(IDataStore<TData>)
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByFolder<TData>(Cqrs.DataStores.IDataStore<TData>)
  nameWithType.vb: BlobStorageStoreExtensions.GetByFolder(Of TData)(IDataStore(Of TData))
  fullName.vb: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByFolder(Of TData)(Cqrs.DataStores.IDataStore(Of TData))
  name.vb: GetByFolder(Of TData)(IDataStore(Of TData))
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByFolder``1(Cqrs.DataStores.IDataStore{``0})
    name: GetByFolder<TData>
    nameWithType: BlobStorageStoreExtensions.GetByFolder<TData>
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByFolder<TData>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.DataStores.IDataStore`1
    name: IDataStore
    nameWithType: IDataStore
    fullName: Cqrs.DataStores.IDataStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByFolder``1(Cqrs.DataStores.IDataStore{``0})
    name: GetByFolder(Of TData)
    nameWithType: BlobStorageStoreExtensions.GetByFolder(Of TData)
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByFolder(Of TData)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.DataStores.IDataStore`1
    name: IDataStore
    nameWithType: IDataStore
    fullName: Cqrs.DataStores.IDataStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Sql.DataStores
  commentId: N:Cqrs.Sql.DataStores
  isExternal: false
  name: Cqrs.Sql.DataStores
  nameWithType: Cqrs.Sql.DataStores
  fullName: Cqrs.Sql.DataStores
- uid: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStore`1.#ctor*
  commentId: Overload:Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStore`1.#ctor
  isExternal: false
  name: TableStorageDataStore
  nameWithType: TableStorageDataStore<TData>.TableStorageDataStore
  fullName: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStore<TData>.TableStorageDataStore
  nameWithType.vb: TableStorageDataStore(Of TData).TableStorageDataStore
  fullName.vb: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStore(Of TData).TableStorageDataStore
- uid: cdmdotnet.Logging.ILogger
  commentId: T:cdmdotnet.Logging.ILogger
  parent: cdmdotnet.Logging
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: cdmdotnet.Logging.ILogger
- uid: Cqrs.Azure.BlobStorage.DataStores.ITableStorageDataStoreConnectionStringFactory
  commentId: T:Cqrs.Azure.BlobStorage.DataStores.ITableStorageDataStoreConnectionStringFactory
  parent: Cqrs.Azure.BlobStorage.DataStores
  isExternal: false
  name: ITableStorageDataStoreConnectionStringFactory
  nameWithType: ITableStorageDataStoreConnectionStringFactory
  fullName: Cqrs.Azure.BlobStorage.DataStores.ITableStorageDataStoreConnectionStringFactory
- uid: cdmdotnet.Logging
  commentId: N:cdmdotnet.Logging
  isExternal: false
  name: cdmdotnet.Logging
  nameWithType: cdmdotnet.Logging
  fullName: cdmdotnet.Logging
- uid: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStore`1.Remove*
  commentId: Overload:Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStore`1.Remove
  isExternal: false
  name: Remove
  nameWithType: TableStorageDataStore<TData>.Remove
  fullName: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStore<TData>.Remove
  nameWithType.vb: TableStorageDataStore(Of TData).Remove
  fullName.vb: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStore(Of TData).Remove
- uid: '{TData}'
  commentId: '!:TData'
  definition: TData
  name: TData
  nameWithType: TData
  fullName: TData
- uid: TData
  isExternal: false
  name: TData
  nameWithType: TData
  fullName: TData
- uid: Cqrs.Azure.BlobStorage.EntityTableEntity`1
  commentId: T:Cqrs.Azure.BlobStorage.EntityTableEntity`1
  isExternal: false
  name: EntityTableEntity<TEntity>
  nameWithType: EntityTableEntity<TEntity>
  fullName: Cqrs.Azure.BlobStorage.EntityTableEntity<TEntity>
  nameWithType.vb: EntityTableEntity(Of TEntity)
  fullName.vb: Cqrs.Azure.BlobStorage.EntityTableEntity(Of TEntity)
  name.vb: EntityTableEntity(Of TEntity)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.EntityTableEntity`1
    name: EntityTableEntity
    nameWithType: EntityTableEntity
    fullName: Cqrs.Azure.BlobStorage.EntityTableEntity
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.EntityTableEntity`1
    name: EntityTableEntity
    nameWithType: EntityTableEntity
    fullName: Cqrs.Azure.BlobStorage.EntityTableEntity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStore`1.CreateTableEntity*
  commentId: Overload:Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStore`1.CreateTableEntity
  isExternal: false
  name: CreateTableEntity
  nameWithType: TableStorageDataStore<TData>.CreateTableEntity
  fullName: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStore<TData>.CreateTableEntity
  nameWithType.vb: TableStorageDataStore(Of TData).CreateTableEntity
  fullName.vb: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStore(Of TData).CreateTableEntity
- uid: Microsoft.WindowsAzure.Storage.Table.ITableEntity
  commentId: T:Microsoft.WindowsAzure.Storage.Table.ITableEntity
  parent: Microsoft.WindowsAzure.Storage.Table
  isExternal: true
  name: ITableEntity
  nameWithType: ITableEntity
  fullName: Microsoft.WindowsAzure.Storage.Table.ITableEntity
- uid: Microsoft.WindowsAzure.Storage.Table.TableOperation
  commentId: T:Microsoft.WindowsAzure.Storage.Table.TableOperation
  parent: Microsoft.WindowsAzure.Storage.Table
  isExternal: true
  name: TableOperation
  nameWithType: TableOperation
  fullName: Microsoft.WindowsAzure.Storage.Table.TableOperation
- uid: Microsoft.WindowsAzure.Storage.Table.TableOperation.Retrieve``1(System.String,System.String,System.Collections.Generic.List{System.String})
  commentId: M:Microsoft.WindowsAzure.Storage.Table.TableOperation.Retrieve``1(System.String,System.String,System.Collections.Generic.List{System.String})
- uid: Cqrs.Entities.IEntity.Rsn
  commentId: P:Cqrs.Entities.IEntity.Rsn
  parent: Cqrs.Entities.IEntity
  isExternal: false
  name: Rsn
  nameWithType: IEntity.Rsn
  fullName: Cqrs.Entities.IEntity.Rsn
- uid: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStore`1.GetUpdatableTableEntity*
  commentId: Overload:Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStore`1.GetUpdatableTableEntity
  isExternal: false
  name: GetUpdatableTableEntity
  nameWithType: TableStorageDataStore<TData>.GetUpdatableTableEntity
  fullName: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStore<TData>.GetUpdatableTableEntity
  nameWithType.vb: TableStorageDataStore(Of TData).GetUpdatableTableEntity
  fullName.vb: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStore(Of TData).GetUpdatableTableEntity
- uid: Cqrs.Entities.IEntity
  commentId: T:Cqrs.Entities.IEntity
  parent: Cqrs.Entities
  isExternal: false
  name: IEntity
  nameWithType: IEntity
  fullName: Cqrs.Entities.IEntity
- uid: Cqrs.Entities
  commentId: N:Cqrs.Entities
  isExternal: false
  name: Cqrs.Entities
  nameWithType: Cqrs.Entities
  fullName: Cqrs.Entities
- uid: Cqrs.Azure.BlobStorage.EntityTableEntity`1.Entity
  commentId: P:Cqrs.Azure.BlobStorage.EntityTableEntity`1.Entity
- uid: Cqrs.Azure.BlobStorage.EntityTableEntity{{TData}}
  commentId: T:Cqrs.Azure.BlobStorage.EntityTableEntity{`0}
  parent: Cqrs.Azure.BlobStorage
  definition: Cqrs.Azure.BlobStorage.EntityTableEntity`1
  name: EntityTableEntity<TData>
  nameWithType: EntityTableEntity<TData>
  fullName: Cqrs.Azure.BlobStorage.EntityTableEntity<TData>
  nameWithType.vb: EntityTableEntity(Of TData)
  fullName.vb: Cqrs.Azure.BlobStorage.EntityTableEntity(Of TData)
  name.vb: EntityTableEntity(Of TData)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.EntityTableEntity`1
    name: EntityTableEntity
    nameWithType: EntityTableEntity
    fullName: Cqrs.Azure.BlobStorage.EntityTableEntity
  - name: <
    nameWithType: <
    fullName: <
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.EntityTableEntity`1
    name: EntityTableEntity
    nameWithType: EntityTableEntity
    fullName: Cqrs.Azure.BlobStorage.EntityTableEntity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
