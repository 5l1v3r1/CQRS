### YamlMime:ManagedReference
items:
- uid: Cqrs.Azure.BlobStorage.IEventDataTableEntity`1
  commentId: T:Cqrs.Azure.BlobStorage.IEventDataTableEntity`1
  id: IEventDataTableEntity`1
  parent: Cqrs.Azure.BlobStorage
  children:
  - Cqrs.Azure.BlobStorage.IEventDataTableEntity`1.EventData
  langs:
  - csharp
  - vb
  name: IEventDataTableEntity<TEventData>
  nameWithType: IEventDataTableEntity<TEventData>
  fullName: Cqrs.Azure.BlobStorage.IEventDataTableEntity<TEventData>
  type: Interface
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.BlobStorage/IEventDataTableEntity.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: IEventDataTableEntity
    path: Framework/Azure/Cqrs.Azure.BlobStorage/IEventDataTableEntity.cs
    startLine: 13
  assemblies:
  - Cqrs.Azure.BlobStorage
  namespace: Cqrs.Azure.BlobStorage
  summary: "\nA projection/entity especially designed to work with Azure Table storage.\n"
  example: []
  syntax:
    content: public interface IEventDataTableEntity<TEventData>
    typeParameters:
    - id: TEventData
    content.vb: Public Interface IEventDataTableEntity(Of TEventData)
  nameWithType.vb: IEventDataTableEntity(Of TEventData)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: Cqrs.Azure.BlobStorage.IEventDataTableEntity(Of TEventData)
  name.vb: IEventDataTableEntity(Of TEventData)
- uid: Cqrs.Azure.BlobStorage.IEventDataTableEntity`1.EventData
  commentId: P:Cqrs.Azure.BlobStorage.IEventDataTableEntity`1.EventData
  id: EventData
  parent: Cqrs.Azure.BlobStorage.IEventDataTableEntity`1
  langs:
  - csharp
  - vb
  name: EventData
  nameWithType: IEventDataTableEntity<TEventData>.EventData
  fullName: Cqrs.Azure.BlobStorage.IEventDataTableEntity<TEventData>.EventData
  type: Property
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.BlobStorage/IEventDataTableEntity.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: EventData
    path: Framework/Azure/Cqrs.Azure.BlobStorage/IEventDataTableEntity.cs
    startLine: 18
  assemblies:
  - Cqrs.Azure.BlobStorage
  namespace: Cqrs.Azure.BlobStorage
  summary: "\nGets or sets the <code data-dev-comment-type=\"typeparamref\">TEventData</code>.\n"
  example: []
  syntax:
    content: TEventData EventData { get; set; }
    parameters: []
    return:
      type: '{TEventData}'
    content.vb: Property EventData As TEventData
  overload: Cqrs.Azure.BlobStorage.IEventDataTableEntity`1.EventData*
  nameWithType.vb: IEventDataTableEntity(Of TEventData).EventData
  modifiers.csharp:
  - get
  - set
  fullName.vb: Cqrs.Azure.BlobStorage.IEventDataTableEntity(Of TEventData).EventData
references:
- uid: Cqrs.Azure.BlobStorage
  commentId: N:Cqrs.Azure.BlobStorage
  isExternal: false
  name: Cqrs.Azure.BlobStorage
  nameWithType: Cqrs.Azure.BlobStorage
  fullName: Cqrs.Azure.BlobStorage
- uid: Cqrs.Azure.BlobStorage.IEventDataTableEntity`1.EventData*
  commentId: Overload:Cqrs.Azure.BlobStorage.IEventDataTableEntity`1.EventData
  isExternal: false
  name: EventData
  nameWithType: IEventDataTableEntity<TEventData>.EventData
  fullName: Cqrs.Azure.BlobStorage.IEventDataTableEntity<TEventData>.EventData
  nameWithType.vb: IEventDataTableEntity(Of TEventData).EventData
  fullName.vb: Cqrs.Azure.BlobStorage.IEventDataTableEntity(Of TEventData).EventData
- uid: '{TEventData}'
  commentId: '!:TEventData'
  definition: TEventData
  name: TEventData
  nameWithType: TEventData
  fullName: TEventData
- uid: TEventData
  isExternal: false
  name: TEventData
  nameWithType: TEventData
  fullName: TEventData
