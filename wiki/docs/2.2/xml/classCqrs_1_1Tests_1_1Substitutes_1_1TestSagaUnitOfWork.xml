<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classCqrs_1_1Tests_1_1Substitutes_1_1TestSagaUnitOfWork" kind="class" prot="public">
    <compoundname>Cqrs::Tests::Substitutes::TestSagaUnitOfWork</compoundname>
    <basecompoundref prot="public" virt="non-virtual">ISagaUnitOfWork&lt; ISingleSignOnToken &gt;</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">ISagaUnitOfWork&lt; Guid &gt;</basecompoundref>
      <sectiondef kind="property">
      <memberdef kind="property" id="classCqrs_1_1Tests_1_1Substitutes_1_1TestSagaUnitOfWork_ac917d6c520ef42fb92a56a7505b98302_1ac917d6c520ef42fb92a56a7505b98302" prot="public" static="yes" readable="no" writable="no" gettable="yes" settable="yes">
        <type>IDictionary&lt; Guid, Tuple&lt; ISaga&lt; Guid &gt;, int, int, int &gt; &gt;</type>
        <definition>IDictionary&lt;Guid, Tuple&lt;ISaga&lt;Guid&gt;, int, int, int&gt; &gt; Cqrs.Tests.Substitutes.TestSagaUnitOfWork.TestGuidSagasWithAddCountGetCountAndCommitCount</definition>
        <argsstring></argsstring>
        <name>TestGuidSagasWithAddCountGetCountAndCommitCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs.Tests/Substitutes/TestSagaUnitOfWork.cs" line="13" column="1" bodyfile="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs.Tests/Substitutes/TestSagaUnitOfWork.cs" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="classCqrs_1_1Tests_1_1Substitutes_1_1TestSagaUnitOfWork_a159f0f56913792373a9270e888caaa97_1a159f0f56913792373a9270e888caaa97" prot="public" static="yes" readable="no" writable="no" gettable="yes" settable="yes">
        <type>IDictionary&lt; Guid, Tuple&lt; ISaga&lt; <ref refid="interfaceCqrs_1_1Authentication_1_1ISingleSignOnToken" kindref="compound">ISingleSignOnToken</ref> &gt;, int, int, int &gt; &gt;</type>
        <definition>IDictionary&lt;Guid, Tuple&lt;ISaga&lt;ISingleSignOnToken&gt;, int, int, int&gt; &gt; Cqrs.Tests.Substitutes.TestSagaUnitOfWork.TestSagasWithAddCountGetCountAndCommitCount</definition>
        <argsstring></argsstring>
        <name>TestSagasWithAddCountGetCountAndCommitCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs.Tests/Substitutes/TestSagaUnitOfWork.cs" line="15" column="1" bodyfile="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs.Tests/Substitutes/TestSagaUnitOfWork.cs" bodystart="15" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classCqrs_1_1Tests_1_1Substitutes_1_1TestSagaUnitOfWork_a87ddd27ea9b23793e64a3ad577d685aa_1a87ddd27ea9b23793e64a3ad577d685aa" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>static</type>
        <definition>static Cqrs.Tests.Substitutes.TestSagaUnitOfWork.TestSagaUnitOfWork</definition>
        <argsstring>()</argsstring>
        <name>TestSagaUnitOfWork</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs.Tests/Substitutes/TestSagaUnitOfWork.cs" line="17" column="1" bodyfile="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs.Tests/Substitutes/TestSagaUnitOfWork.cs" bodystart="17" bodyend="21"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classCqrs_1_1Tests_1_1Substitutes_1_1TestSagaUnitOfWork_a9469938dc87569d5fa29aea5c97e610f_1a9469938dc87569d5fa29aea5c97e610f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Cqrs.Tests.Substitutes.TestSagaUnitOfWork.Add&lt; TSaga &gt;</definition>
        <argsstring>(TSaga saga)</argsstring>
        <name>Add&lt; TSaga &gt;</name>
        <param>
          <type>TSaga</type>
          <declname>saga</declname>
        </param>
        <briefdescription>
<para>Add an item into the ISagaUnitOfWork{TAuthenticationToken} ready to be committed. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs.Tests/Substitutes/TestSagaUnitOfWork.cs" line="28" column="1" bodyfile="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs.Tests/Substitutes/TestSagaUnitOfWork.cs" bodystart="28" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Tests_1_1Substitutes_1_1TestSagaUnitOfWork_a8e55e492302920c1a69ca632f1fa63fb_1a8e55e492302920c1a69ca632f1fa63fb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>TSaga</type>
        <definition>TSaga Cqrs.Tests.Substitutes.TestSagaUnitOfWork.Get&lt; TSaga &gt;</definition>
        <argsstring>(Guid id, int?expectedVersion=null)</argsstring>
        <name>Get&lt; TSaga &gt;</name>
        <param>
          <type>Guid</type>
          <declname>id</declname>
        </param>
        <param>
          <type>int?</type>
          <declname>expectedVersion</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
<para>Get an item from the ISagaUnitOfWork{TAuthenticationToken} if it has already been loaded. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs.Tests/Substitutes/TestSagaUnitOfWork.cs" line="42" column="1" bodyfile="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs.Tests/Substitutes/TestSagaUnitOfWork.cs" bodystart="42" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Tests_1_1Substitutes_1_1TestSagaUnitOfWork_ab50323c2f6a97c5f7eefa0d718dd7053_1ab50323c2f6a97c5f7eefa0d718dd7053" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Cqrs.Tests.Substitutes.TestSagaUnitOfWork.Commit</definition>
        <argsstring>()</argsstring>
        <name>Commit</name>
        <briefdescription>
<para>Commit any changed Saga{TAuthenticationToken} added to this ISagaUnitOfWork{TAuthenticationToken} via ISagaUnitOfWork{TAuthenticationToken}.Add{TSaga} </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs.Tests/Substitutes/TestSagaUnitOfWork.cs" line="55" column="1" bodyfile="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs.Tests/Substitutes/TestSagaUnitOfWork.cs" bodystart="55" bodyend="69"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classCqrs_1_1Tests_1_1Substitutes_1_1TestSagaUnitOfWork_ad99928d2b3780ef120e39b84b944c7ab_1ad99928d2b3780ef120e39b84b944c7ab" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void ISagaUnitOfWork&lt; <ref refid="interfaceCqrs_1_1Authentication_1_1ISingleSignOnToken" kindref="compound">ISingleSignOnToken</ref> &gt;.</type>
        <definition>void ISagaUnitOfWork&lt;ISingleSignOnToken&gt;. Cqrs.Tests.Substitutes.TestSagaUnitOfWork.Add&lt; TSaga &gt;</definition>
        <argsstring>(TSaga saga)</argsstring>
        <name>Add&lt; TSaga &gt;</name>
        <param>
          <type>TSaga</type>
          <declname>saga</declname>
        </param>
        <briefdescription>
<para>Add an item into the ISagaUnitOfWork{TAuthenticationToken} ready to be committed. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs.Tests/Substitutes/TestSagaUnitOfWork.cs" line="78" column="1" bodyfile="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs.Tests/Substitutes/TestSagaUnitOfWork.cs" bodystart="78" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Tests_1_1Substitutes_1_1TestSagaUnitOfWork_a887493c8a643513bed019513ebf98580_1a887493c8a643513bed019513ebf98580" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>TSaga ISagaUnitOfWork&lt; <ref refid="interfaceCqrs_1_1Authentication_1_1ISingleSignOnToken" kindref="compound">ISingleSignOnToken</ref> &gt;.</type>
        <definition>TSaga ISagaUnitOfWork&lt;ISingleSignOnToken&gt;. Cqrs.Tests.Substitutes.TestSagaUnitOfWork.Get&lt; TSaga &gt;</definition>
        <argsstring>(Guid id, int?expectedVersion)</argsstring>
        <name>Get&lt; TSaga &gt;</name>
        <param>
          <type>Guid</type>
          <declname>id</declname>
        </param>
        <param>
          <type>int?</type>
          <declname>expectedVersion</declname>
        </param>
        <briefdescription>
<para>Get an item from the ISagaUnitOfWork{TAuthenticationToken} if it has already been loaded. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs.Tests/Substitutes/TestSagaUnitOfWork.cs" line="91" column="1" bodyfile="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs.Tests/Substitutes/TestSagaUnitOfWork.cs" bodystart="91" bodyend="98"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2954">
        <label>ISagaUnitOfWork&lt; Guid &gt;</label>
      </node>
      <node id="2953">
        <label>ISagaUnitOfWork&lt; ISingleSignOnToken &gt;</label>
      </node>
      <node id="2952">
        <label>Cqrs.Tests.Substitutes.TestSagaUnitOfWork</label>
        <link refid="classCqrs_1_1Tests_1_1Substitutes_1_1TestSagaUnitOfWork"/>
        <childnode refid="2953" relation="public-inheritance">
        </childnode>
        <childnode refid="2954" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2957">
        <label>ISagaUnitOfWork&lt; Guid &gt;</label>
      </node>
      <node id="2956">
        <label>ISagaUnitOfWork&lt; ISingleSignOnToken &gt;</label>
      </node>
      <node id="2955">
        <label>Cqrs.Tests.Substitutes.TestSagaUnitOfWork</label>
        <link refid="classCqrs_1_1Tests_1_1Substitutes_1_1TestSagaUnitOfWork"/>
        <childnode refid="2956" relation="public-inheritance">
        </childnode>
        <childnode refid="2957" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs.Tests/Substitutes/TestSagaUnitOfWork.cs" line="12" column="1" bodyfile="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs.Tests/Substitutes/TestSagaUnitOfWork.cs" bodystart="9" bodyend="101"/>
    <listofallmembers>
      <member refid="classCqrs_1_1Tests_1_1Substitutes_1_1TestSagaUnitOfWork_a9469938dc87569d5fa29aea5c97e610f_1a9469938dc87569d5fa29aea5c97e610f" prot="public" virt="non-virtual"><scope>Cqrs::Tests::Substitutes::TestSagaUnitOfWork</scope><name>Add&lt; TSaga &gt;</name></member>
      <member refid="classCqrs_1_1Tests_1_1Substitutes_1_1TestSagaUnitOfWork_ad99928d2b3780ef120e39b84b944c7ab_1ad99928d2b3780ef120e39b84b944c7ab" prot="private" virt="non-virtual"><scope>Cqrs::Tests::Substitutes::TestSagaUnitOfWork</scope><name>Add&lt; TSaga &gt;</name></member>
      <member refid="classCqrs_1_1Tests_1_1Substitutes_1_1TestSagaUnitOfWork_ab50323c2f6a97c5f7eefa0d718dd7053_1ab50323c2f6a97c5f7eefa0d718dd7053" prot="public" virt="non-virtual"><scope>Cqrs::Tests::Substitutes::TestSagaUnitOfWork</scope><name>Commit</name></member>
      <member refid="classCqrs_1_1Tests_1_1Substitutes_1_1TestSagaUnitOfWork_a8e55e492302920c1a69ca632f1fa63fb_1a8e55e492302920c1a69ca632f1fa63fb" prot="public" virt="non-virtual"><scope>Cqrs::Tests::Substitutes::TestSagaUnitOfWork</scope><name>Get&lt; TSaga &gt;</name></member>
      <member refid="classCqrs_1_1Tests_1_1Substitutes_1_1TestSagaUnitOfWork_a887493c8a643513bed019513ebf98580_1a887493c8a643513bed019513ebf98580" prot="private" virt="non-virtual"><scope>Cqrs::Tests::Substitutes::TestSagaUnitOfWork</scope><name>Get&lt; TSaga &gt;</name></member>
      <member refid="classCqrs_1_1Tests_1_1Substitutes_1_1TestSagaUnitOfWork_ac917d6c520ef42fb92a56a7505b98302_1ac917d6c520ef42fb92a56a7505b98302" prot="public" virt="non-virtual"><scope>Cqrs::Tests::Substitutes::TestSagaUnitOfWork</scope><name>TestGuidSagasWithAddCountGetCountAndCommitCount</name></member>
      <member refid="classCqrs_1_1Tests_1_1Substitutes_1_1TestSagaUnitOfWork_a159f0f56913792373a9270e888caaa97_1a159f0f56913792373a9270e888caaa97" prot="public" virt="non-virtual"><scope>Cqrs::Tests::Substitutes::TestSagaUnitOfWork</scope><name>TestSagasWithAddCountGetCountAndCommitCount</name></member>
      <member refid="classCqrs_1_1Tests_1_1Substitutes_1_1TestSagaUnitOfWork_a87ddd27ea9b23793e64a3ad577d685aa_1a87ddd27ea9b23793e64a3ad577d685aa" prot="private" virt="non-virtual"><scope>Cqrs::Tests::Substitutes::TestSagaUnitOfWork</scope><name>TestSagaUnitOfWork</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
