### YamlMime:ManagedReference
items:
- uid: Cqrs.Services.WcfDataContractResolverConfiguration
  commentId: T:Cqrs.Services.WcfDataContractResolverConfiguration
  id: WcfDataContractResolverConfiguration
  parent: Cqrs.Services
  children:
  - Cqrs.Services.WcfDataContractResolverConfiguration.#ctor
  - Cqrs.Services.WcfDataContractResolverConfiguration.Current
  - Cqrs.Services.WcfDataContractResolverConfiguration.DataContracts
  - Cqrs.Services.WcfDataContractResolverConfiguration.GetDataContracts``1(System.String)
  - Cqrs.Services.WcfDataContractResolverConfiguration.RegisterDataContract``2(System.String,Cqrs.Services.WcfDataContractResolverConfiguration.RegistrationHandling)
  langs:
  - csharp
  - vb
  name: WcfDataContractResolverConfiguration
  nameWithType: WcfDataContractResolverConfiguration
  fullName: Cqrs.Services.WcfDataContractResolverConfiguration
  type: Class
  source:
    remote:
      path: Framework/Cqrs/Services/WcfDataContractResolverConfiguration.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: WcfDataContractResolverConfiguration
    path: Framework/Cqrs/Services/WcfDataContractResolverConfiguration.cs
    startLine: 18
  assemblies:
  - Cqrs
  namespace: Cqrs.Services
  summary: "\nConfiguration information for setting up WCF <xref href=\"System.Runtime.Serialization.DataContractResolver\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public class WcfDataContractResolverConfiguration
    content.vb: Public Class WcfDataContractResolverConfiguration
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Cqrs.Services.WcfDataContractResolverConfiguration.Current
  commentId: P:Cqrs.Services.WcfDataContractResolverConfiguration.Current
  id: Current
  parent: Cqrs.Services.WcfDataContractResolverConfiguration
  langs:
  - csharp
  - vb
  name: Current
  nameWithType: WcfDataContractResolverConfiguration.Current
  fullName: Cqrs.Services.WcfDataContractResolverConfiguration.Current
  type: Property
  source:
    remote:
      path: Framework/Cqrs/Services/WcfDataContractResolverConfiguration.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Current
    path: Framework/Cqrs/Services/WcfDataContractResolverConfiguration.cs
    startLine: 23
  assemblies:
  - Cqrs
  namespace: Cqrs.Services
  summary: "\nThe current instance of <xref href=\"Cqrs.Services.WcfDataContractResolverConfiguration\" data-throw-if-not-resolved=\"false\"></xref> to use.\n"
  example: []
  syntax:
    content: public static WcfDataContractResolverConfiguration Current { get; protected set; }
    parameters: []
    return:
      type: Cqrs.Services.WcfDataContractResolverConfiguration
    content.vb: Public Shared Property Current As WcfDataContractResolverConfiguration
  overload: Cqrs.Services.WcfDataContractResolverConfiguration.Current*
  modifiers.csharp:
  - public
  - static
  - get
  - protected set
  modifiers.vb:
  - Public
  - Shared
  - Get
  - Protected Set
- uid: Cqrs.Services.WcfDataContractResolverConfiguration.DataContracts
  commentId: P:Cqrs.Services.WcfDataContractResolverConfiguration.DataContracts
  id: DataContracts
  parent: Cqrs.Services.WcfDataContractResolverConfiguration
  langs:
  - csharp
  - vb
  name: DataContracts
  nameWithType: WcfDataContractResolverConfiguration.DataContracts
  fullName: Cqrs.Services.WcfDataContractResolverConfiguration.DataContracts
  type: Property
  source:
    remote:
      path: Framework/Cqrs/Services/WcfDataContractResolverConfiguration.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: DataContracts
    path: Framework/Cqrs/Services/WcfDataContractResolverConfiguration.cs
    startLine: 28
  assemblies:
  - Cqrs
  namespace: Cqrs.Services
  summary: "\nGets or set the data contracts for the system to use.\n"
  example: []
  syntax:
    content: protected IDictionary<Type, IDictionary<string, Type>> DataContracts { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.Type,System.Collections.Generic.IDictionary{System.String,System.Type}}
    content.vb: Protected ReadOnly Property DataContracts As IDictionary(Of Type, IDictionary(Of String, Type))
  overload: Cqrs.Services.WcfDataContractResolverConfiguration.DataContracts*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Cqrs.Services.WcfDataContractResolverConfiguration.#ctor
  commentId: M:Cqrs.Services.WcfDataContractResolverConfiguration.#ctor
  id: '#ctor'
  parent: Cqrs.Services.WcfDataContractResolverConfiguration
  langs:
  - csharp
  - vb
  name: WcfDataContractResolverConfiguration()
  nameWithType: WcfDataContractResolverConfiguration.WcfDataContractResolverConfiguration()
  fullName: Cqrs.Services.WcfDataContractResolverConfiguration.WcfDataContractResolverConfiguration()
  type: Constructor
  source:
    remote:
      path: Framework/Cqrs/Services/WcfDataContractResolverConfiguration.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: .ctor
    path: Framework/Cqrs/Services/WcfDataContractResolverConfiguration.cs
    startLine: 33
  assemblies:
  - Cqrs
  namespace: Cqrs.Services
  summary: "\nInstantiates a new instance of <xref href=\"Cqrs.Services.WcfDataContractResolverConfiguration\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public WcfDataContractResolverConfiguration()
    content.vb: Public Sub New
  overload: Cqrs.Services.WcfDataContractResolverConfiguration.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Cqrs.Services.WcfDataContractResolverConfiguration.RegisterDataContract``2(System.String,Cqrs.Services.WcfDataContractResolverConfiguration.RegistrationHandling)
  commentId: M:Cqrs.Services.WcfDataContractResolverConfiguration.RegisterDataContract``2(System.String,Cqrs.Services.WcfDataContractResolverConfiguration.RegistrationHandling)
  id: RegisterDataContract``2(System.String,Cqrs.Services.WcfDataContractResolverConfiguration.RegistrationHandling)
  parent: Cqrs.Services.WcfDataContractResolverConfiguration
  langs:
  - csharp
  - vb
  name: RegisterDataContract<TService, TDataContract>(String, WcfDataContractResolverConfiguration.RegistrationHandling)
  nameWithType: WcfDataContractResolverConfiguration.RegisterDataContract<TService, TDataContract>(String, WcfDataContractResolverConfiguration.RegistrationHandling)
  fullName: Cqrs.Services.WcfDataContractResolverConfiguration.RegisterDataContract<TService, TDataContract>(System.String, Cqrs.Services.WcfDataContractResolverConfiguration.RegistrationHandling)
  type: Method
  source:
    remote:
      path: Framework/Cqrs/Services/WcfDataContractResolverConfiguration.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: RegisterDataContract
    path: Framework/Cqrs/Services/WcfDataContractResolverConfiguration.cs
    startLine: 50
  assemblies:
  - Cqrs
  namespace: Cqrs.Services
  summary: "\nRegister the <span class=\"typeparamref\">TDataContract</span> to use for the operation named <span class=\"paramref\">operationName</span> for the <span class=\"typeparamref\">TService</span>.\n"
  example: []
  syntax:
    content: 'public virtual void RegisterDataContract<TService, TDataContract>(string operationName, WcfDataContractResolverConfiguration.RegistrationHandling registrationHandling = WcfDataContractResolverConfiguration.RegistrationHandling.Replace)where TDataContract : new ()'
    parameters:
    - id: operationName
      type: System.String
      description: The name of the operation.
    - id: registrationHandling
      type: Cqrs.Services.WcfDataContractResolverConfiguration.RegistrationHandling
      description: Defaults to <xref href="Cqrs.Services.WcfDataContractResolverConfiguration.RegistrationHandling.Replace" data-throw-if-not-resolved="false"></xref>
    typeParameters:
    - id: TService
      description: The <xref href="System.Type" data-throw-if-not-resolved="false"></xref> of service.
    - id: TDataContract
      description: The <xref href="System.Type" data-throw-if-not-resolved="false"></xref> of the resolver.
    content.vb: Public Overridable Sub RegisterDataContract(Of TService, TDataContract As New)(operationName As String, registrationHandling As WcfDataContractResolverConfiguration.RegistrationHandling = WcfDataContractResolverConfiguration.RegistrationHandling.Replace)
  overload: Cqrs.Services.WcfDataContractResolverConfiguration.RegisterDataContract*
  nameWithType.vb: WcfDataContractResolverConfiguration.RegisterDataContract(Of TService, TDataContract)(String, WcfDataContractResolverConfiguration.RegistrationHandling)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Cqrs.Services.WcfDataContractResolverConfiguration.RegisterDataContract(Of TService, TDataContract)(System.String, Cqrs.Services.WcfDataContractResolverConfiguration.RegistrationHandling)
  name.vb: RegisterDataContract(Of TService, TDataContract)(String, WcfDataContractResolverConfiguration.RegistrationHandling)
- uid: Cqrs.Services.WcfDataContractResolverConfiguration.GetDataContracts``1(System.String)
  commentId: M:Cqrs.Services.WcfDataContractResolverConfiguration.GetDataContracts``1(System.String)
  id: GetDataContracts``1(System.String)
  parent: Cqrs.Services.WcfDataContractResolverConfiguration
  langs:
  - csharp
  - vb
  name: GetDataContracts<TService>(String)
  nameWithType: WcfDataContractResolverConfiguration.GetDataContracts<TService>(String)
  fullName: Cqrs.Services.WcfDataContractResolverConfiguration.GetDataContracts<TService>(System.String)
  type: Method
  source:
    remote:
      path: Framework/Cqrs/Services/WcfDataContractResolverConfiguration.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: GetDataContracts
    path: Framework/Cqrs/Services/WcfDataContractResolverConfiguration.cs
    startLine: 90
  assemblies:
  - Cqrs
  namespace: Cqrs.Services
  summary: "\nGets the <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> of <xref href=\"System.Runtime.Serialization.DataContractResolver\" data-throw-if-not-resolved=\"false\"></xref> for the operation named <span class=\"paramref\">operationName</span>\nof the <span class=\"typeparamref\">TService</span>\n"
  example: []
  syntax:
    content: public virtual Type GetDataContracts<TService>(string operationName)
    parameters:
    - id: operationName
      type: System.String
      description: The name of the operation.
    typeParameters:
    - id: TService
      description: The <xref href="System.Type" data-throw-if-not-resolved="false"></xref> of service.
    return:
      type: System.Type
    content.vb: Public Overridable Function GetDataContracts(Of TService)(operationName As String) As Type
  overload: Cqrs.Services.WcfDataContractResolverConfiguration.GetDataContracts*
  nameWithType.vb: WcfDataContractResolverConfiguration.GetDataContracts(Of TService)(String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Cqrs.Services.WcfDataContractResolverConfiguration.GetDataContracts(Of TService)(System.String)
  name.vb: GetDataContracts(Of TService)(String)
references:
- uid: System.Runtime.Serialization.DataContractResolver
  commentId: T:System.Runtime.Serialization.DataContractResolver
  parent: System.Runtime.Serialization
  isExternal: true
  name: DataContractResolver
  nameWithType: DataContractResolver
  fullName: System.Runtime.Serialization.DataContractResolver
- uid: Cqrs.Services
  commentId: N:Cqrs.Services
  isExternal: false
  name: Cqrs.Services
  nameWithType: Cqrs.Services
  fullName: Cqrs.Services
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Runtime.Serialization
  commentId: N:System.Runtime.Serialization
  isExternal: false
  name: System.Runtime.Serialization
  nameWithType: System.Runtime.Serialization
  fullName: System.Runtime.Serialization
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Cqrs.Services.WcfDataContractResolverConfiguration
  commentId: T:Cqrs.Services.WcfDataContractResolverConfiguration
  parent: Cqrs.Services
  isExternal: false
  name: WcfDataContractResolverConfiguration
  nameWithType: WcfDataContractResolverConfiguration
  fullName: Cqrs.Services.WcfDataContractResolverConfiguration
- uid: Cqrs.Services.WcfDataContractResolverConfiguration.Current*
  commentId: Overload:Cqrs.Services.WcfDataContractResolverConfiguration.Current
  isExternal: false
  name: Current
  nameWithType: WcfDataContractResolverConfiguration.Current
  fullName: Cqrs.Services.WcfDataContractResolverConfiguration.Current
- uid: Cqrs.Services.WcfDataContractResolverConfiguration.DataContracts*
  commentId: Overload:Cqrs.Services.WcfDataContractResolverConfiguration.DataContracts
  isExternal: false
  name: DataContracts
  nameWithType: WcfDataContractResolverConfiguration.DataContracts
  fullName: Cqrs.Services.WcfDataContractResolverConfiguration.DataContracts
- uid: System.Collections.Generic.IDictionary{System.Type,System.Collections.Generic.IDictionary{System.String,System.Type}}
  commentId: T:System.Collections.Generic.IDictionary{System.Type,System.Collections.Generic.IDictionary{System.String,System.Type}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<Type, IDictionary<String, Type>>
  nameWithType: IDictionary<Type, IDictionary<String, Type>>
  fullName: System.Collections.Generic.IDictionary<System.Type, System.Collections.Generic.IDictionary<System.String, System.Type>>
  nameWithType.vb: IDictionary(Of Type, IDictionary(Of String, Type))
  fullName.vb: System.Collections.Generic.IDictionary(Of System.Type, System.Collections.Generic.IDictionary(Of System.String, System.Type))
  name.vb: IDictionary(Of Type, IDictionary(Of String, Type))
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Cqrs.Services.WcfDataContractResolverConfiguration.#ctor*
  commentId: Overload:Cqrs.Services.WcfDataContractResolverConfiguration.#ctor
  isExternal: false
  name: WcfDataContractResolverConfiguration
  nameWithType: WcfDataContractResolverConfiguration.WcfDataContractResolverConfiguration
  fullName: Cqrs.Services.WcfDataContractResolverConfiguration.WcfDataContractResolverConfiguration
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Cqrs.Services.WcfDataContractResolverConfiguration.RegistrationHandling.Replace
  commentId: F:Cqrs.Services.WcfDataContractResolverConfiguration.RegistrationHandling.Replace
- uid: Cqrs.Services.WcfDataContractResolverConfiguration.RegisterDataContract*
  commentId: Overload:Cqrs.Services.WcfDataContractResolverConfiguration.RegisterDataContract
  isExternal: false
  name: RegisterDataContract
  nameWithType: WcfDataContractResolverConfiguration.RegisterDataContract
  fullName: Cqrs.Services.WcfDataContractResolverConfiguration.RegisterDataContract
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Cqrs.Services.WcfDataContractResolverConfiguration.RegistrationHandling
  commentId: T:Cqrs.Services.WcfDataContractResolverConfiguration.RegistrationHandling
  parent: Cqrs.Services
  isExternal: false
  name: WcfDataContractResolverConfiguration.RegistrationHandling
  nameWithType: WcfDataContractResolverConfiguration.RegistrationHandling
  fullName: Cqrs.Services.WcfDataContractResolverConfiguration.RegistrationHandling
- uid: Cqrs.Services.WcfDataContractResolverConfiguration.GetDataContracts*
  commentId: Overload:Cqrs.Services.WcfDataContractResolverConfiguration.GetDataContracts
  isExternal: false
  name: GetDataContracts
  nameWithType: WcfDataContractResolverConfiguration.GetDataContracts
  fullName: Cqrs.Services.WcfDataContractResolverConfiguration.GetDataContracts
