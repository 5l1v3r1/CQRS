<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="interfaceCqrs_1_1Bus_1_1IBusHelper" kind="interface" language="C#" prot="public">
    <compoundname>Cqrs::Bus::IBusHelper</compoundname>
    <derivedcompoundref refid="classCqrs_1_1Bus_1_1BusHelper" prot="public" virt="non-virtual">Cqrs.Bus.BusHelper</derivedcompoundref>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="interfaceCqrs_1_1Bus_1_1IBusHelper_acddf7635d6de08e3b09d552361fe4fda_1acddf7635d6de08e3b09d552361fe4fda" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Cqrs.Bus.IBusHelper.IsEventRequired</definition>
        <argsstring>(Type messageType)</argsstring>
        <name>IsEventRequired</name>
        <reimplementedby refid="classCqrs_1_1Bus_1_1BusHelper_a28c675e976adbf348637ec6ff6410c1a_1a28c675e976adbf348637ec6ff6410c1a">IsEventRequired</reimplementedby>
        <param>
          <type>Type</type>
          <declname>messageType</declname>
        </param>
        <briefdescription>
<para>Checks if a white-list or black-list approach is taken, then checks the IConfigurationManager to see if a key exists defining if the event is required or not. If the event is required and it cannot be resolved, an error will be raised. Otherwise the event will be marked as processed. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>messageType</parametername>
</parameternamelist>
<parameterdescription>
<para>The Type of the message being processed.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs/Bus/IBusHelper.cs" line="27" column="1"/>
      </memberdef>
      <memberdef kind="function" id="interfaceCqrs_1_1Bus_1_1IBusHelper_af73d0d2aa8e98566acb4b2fb13a3e986_1af73d0d2aa8e98566acb4b2fb13a3e986" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Cqrs.Bus.IBusHelper.IsEventRequired</definition>
        <argsstring>(string configurationKey)</argsstring>
        <name>IsEventRequired</name>
        <reimplementedby refid="classCqrs_1_1Bus_1_1BusHelper_a60a9603d5c6b7f29ee42491475714895_1a60a9603d5c6b7f29ee42491475714895">IsEventRequired</reimplementedby>
        <param>
          <type>string</type>
          <declname>configurationKey</declname>
        </param>
        <briefdescription>
<para>Checks if a white-list or black-list approach is taken, then checks the IConfigurationManager to see if a key exists defining if the event is required or not. If the event is required and it cannot be resolved, an error will be raised. Otherwise the event will be marked as processed. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>configurationKey</parametername>
</parameternamelist>
<parameterdescription>
<para>The configuration key to check.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs/Bus/IBusHelper.cs" line="35" column="1"/>
      </memberdef>
      <memberdef kind="function" id="interfaceCqrs_1_1Bus_1_1IBusHelper_a29751c186da5e2b042067af6a1be6d5d_1a29751c186da5e2b042067af6a1be6d5d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Action&lt; TMessage &gt;</type>
        <definition>Action&lt;TMessage&gt; Cqrs.Bus.IBusHelper.BuildTelemeteredActionHandler&lt; TMessage, TAuthenticationToken &gt;</definition>
        <argsstring>(ITelemetryHelper telemetryHelper, Action&lt; TMessage &gt; handler, bool holdMessageLock, string source)</argsstring>
        <name>BuildTelemeteredActionHandler&lt; TMessage, TAuthenticationToken &gt;</name>
        <reimplementedby refid="classCqrs_1_1Bus_1_1BusHelper_a7edd5b2ac0d46ce225e592f857f6d525_1a7edd5b2ac0d46ce225e592f857f6d525">BuildTelemeteredActionHandler&lt; TMessage, TAuthenticationToken &gt;</reimplementedby>
        <param>
          <type>ITelemetryHelper</type>
          <declname>telemetryHelper</declname>
        </param>
        <param>
          <type>Action&lt; TMessage &gt;</type>
          <declname>handler</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>holdMessageLock</declname>
        </param>
        <param>
          <type>string</type>
          <declname>source</declname>
        </param>
        <briefdescription>
<para>Build a message handler that implements telemetry capturing as well as off thread handling. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs/Bus/IBusHelper.cs" line="35" column="1"/>
      </memberdef>
      <memberdef kind="function" id="interfaceCqrs_1_1Bus_1_1IBusHelper_ac69a1e4722e2839c2c180b9a06a8646c_1ac69a1e4722e2839c2c180b9a06a8646c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Action&lt; TMessage &gt;</type>
        <definition>Action&lt;TMessage&gt; Cqrs.Bus.IBusHelper.BuildActionHandler&lt; TMessage &gt;</definition>
        <argsstring>(Action&lt; TMessage &gt; handler, bool holdMessageLock)</argsstring>
        <name>BuildActionHandler&lt; TMessage &gt;</name>
        <reimplementedby refid="classCqrs_1_1Bus_1_1BusHelper_a6dc1f5166b7bcd13aa7a0d5e25ded295_1a6dc1f5166b7bcd13aa7a0d5e25ded295">BuildActionHandler&lt; TMessage &gt;</reimplementedby>
        <param>
          <type>Action&lt; TMessage &gt;</type>
          <declname>handler</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>holdMessageLock</declname>
        </param>
        <briefdescription>
<para>Build a message handler that implements telemetry capturing as well as off thread handling. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs/Bus/IBusHelper.cs" line="35" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A helper for command and event buses. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1006">
        <label>Cqrs.Bus.IBusHelper</label>
        <link refid="interfaceCqrs_1_1Bus_1_1IBusHelper"/>
      </node>
      <node id="1007">
        <label>Cqrs.Bus.BusHelper</label>
        <link refid="classCqrs_1_1Bus_1_1BusHelper"/>
        <childnode refid="1006" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs/Bus/IBusHelper.cs" line="20" column="1" bodyfile="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs/Bus/IBusHelper.cs" bodystart="19" bodyend="48"/>
    <listofallmembers>
      <member refid="interfaceCqrs_1_1Bus_1_1IBusHelper_ac69a1e4722e2839c2c180b9a06a8646c_1ac69a1e4722e2839c2c180b9a06a8646c" prot="public" virt="non-virtual"><scope>Cqrs::Bus::IBusHelper</scope><name>BuildActionHandler&lt; TMessage &gt;</name></member>
      <member refid="interfaceCqrs_1_1Bus_1_1IBusHelper_a29751c186da5e2b042067af6a1be6d5d_1a29751c186da5e2b042067af6a1be6d5d" prot="public" virt="non-virtual"><scope>Cqrs::Bus::IBusHelper</scope><name>BuildTelemeteredActionHandler&lt; TMessage, TAuthenticationToken &gt;</name></member>
      <member refid="interfaceCqrs_1_1Bus_1_1IBusHelper_acddf7635d6de08e3b09d552361fe4fda_1acddf7635d6de08e3b09d552361fe4fda" prot="public" virt="non-virtual"><scope>Cqrs::Bus::IBusHelper</scope><name>IsEventRequired</name></member>
      <member refid="interfaceCqrs_1_1Bus_1_1IBusHelper_af73d0d2aa8e98566acb4b2fb13a3e986_1af73d0d2aa8e98566acb4b2fb13a3e986" prot="public" virt="non-virtual"><scope>Cqrs::Bus::IBusHelper</scope><name>IsEventRequired</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
