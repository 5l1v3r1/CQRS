### YamlMime:ManagedReference
items:
- uid: Cqrs.WebApi.SignalR.Hubs.SignalRStartUp
  commentId: T:Cqrs.WebApi.SignalR.Hubs.SignalRStartUp
  id: SignalRStartUp
  parent: Cqrs.WebApi.SignalR.Hubs
  children:
  - Cqrs.WebApi.SignalR.Hubs.SignalRStartUp.#ctor
  - Cqrs.WebApi.SignalR.Hubs.SignalRStartUp.#ctor(Cqrs.Configuration.IConfigurationManager)
  - Cqrs.WebApi.SignalR.Hubs.SignalRStartUp.Configuration(Owin.IAppBuilder)
  - Cqrs.WebApi.SignalR.Hubs.SignalRStartUp.ConfigurationManager
  langs:
  - csharp
  - vb
  name: SignalRStartUp
  nameWithType: SignalRStartUp
  fullName: Cqrs.WebApi.SignalR.Hubs.SignalRStartUp
  type: Class
  source:
    remote:
      path: Framework/Cqrs.WebApi/SignalR/Hubs/SignalRStartUp.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: SignalRStartUp
    path: Framework/Cqrs.WebApi/SignalR/Hubs/SignalRStartUp.cs
    startLine: 21
  assemblies:
  - Cqrs.WebApi
  namespace: Cqrs.WebApi.SignalR.Hubs
  summary: "\nA Start-up class for SignalR. wired in using <xref href=\"Microsoft.Owin.OwinStartupAttribute\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public class SignalRStartUp
    content.vb: Public Class SignalRStartUp
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Cqrs.WebApi.SignalR.Hubs.SignalRStartUp.ConfigurationManager
  commentId: P:Cqrs.WebApi.SignalR.Hubs.SignalRStartUp.ConfigurationManager
  id: ConfigurationManager
  parent: Cqrs.WebApi.SignalR.Hubs.SignalRStartUp
  langs:
  - csharp
  - vb
  name: ConfigurationManager
  nameWithType: SignalRStartUp.ConfigurationManager
  fullName: Cqrs.WebApi.SignalR.Hubs.SignalRStartUp.ConfigurationManager
  type: Property
  source:
    remote:
      path: Framework/Cqrs.WebApi/SignalR/Hubs/SignalRStartUp.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: ConfigurationManager
    path: Framework/Cqrs.WebApi/SignalR/Hubs/SignalRStartUp.cs
    startLine: 26
  assemblies:
  - Cqrs.WebApi
  namespace: Cqrs.WebApi.SignalR.Hubs
  summary: "\nGets or sets the <xref href=\"Cqrs.Configuration.IConfigurationManager\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public IConfigurationManager ConfigurationManager { get; set; }
    parameters: []
    return:
      type: Cqrs.Configuration.IConfigurationManager
    content.vb: Public Property ConfigurationManager As IConfigurationManager
  overload: Cqrs.WebApi.SignalR.Hubs.SignalRStartUp.ConfigurationManager*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Cqrs.WebApi.SignalR.Hubs.SignalRStartUp.#ctor
  commentId: M:Cqrs.WebApi.SignalR.Hubs.SignalRStartUp.#ctor
  id: '#ctor'
  parent: Cqrs.WebApi.SignalR.Hubs.SignalRStartUp
  langs:
  - csharp
  - vb
  name: SignalRStartUp()
  nameWithType: SignalRStartUp.SignalRStartUp()
  fullName: Cqrs.WebApi.SignalR.Hubs.SignalRStartUp.SignalRStartUp()
  type: Constructor
  source:
    remote:
      path: Framework/Cqrs.WebApi/SignalR/Hubs/SignalRStartUp.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: .ctor
    path: Framework/Cqrs.WebApi/SignalR/Hubs/SignalRStartUp.cs
    startLine: 31
  assemblies:
  - Cqrs.WebApi
  namespace: Cqrs.WebApi.SignalR.Hubs
  summary: "\nInstantiates a new instance of <xref href=\"Cqrs.WebApi.SignalR.Hubs.SignalRStartUp\" data-throw-if-not-resolved=\"false\"></xref> creating a new instance of <xref href=\"Cqrs.WebApi.SignalR.Hubs.SignalRStartUp.ConfigurationManager\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public SignalRStartUp()
    content.vb: Public Sub New
  overload: Cqrs.WebApi.SignalR.Hubs.SignalRStartUp.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Cqrs.WebApi.SignalR.Hubs.SignalRStartUp.#ctor(Cqrs.Configuration.IConfigurationManager)
  commentId: M:Cqrs.WebApi.SignalR.Hubs.SignalRStartUp.#ctor(Cqrs.Configuration.IConfigurationManager)
  id: '#ctor(Cqrs.Configuration.IConfigurationManager)'
  parent: Cqrs.WebApi.SignalR.Hubs.SignalRStartUp
  langs:
  - csharp
  - vb
  name: SignalRStartUp(IConfigurationManager)
  nameWithType: SignalRStartUp.SignalRStartUp(IConfigurationManager)
  fullName: Cqrs.WebApi.SignalR.Hubs.SignalRStartUp.SignalRStartUp(Cqrs.Configuration.IConfigurationManager)
  type: Constructor
  source:
    remote:
      path: Framework/Cqrs.WebApi/SignalR/Hubs/SignalRStartUp.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: .ctor
    path: Framework/Cqrs.WebApi/SignalR/Hubs/SignalRStartUp.cs
    startLine: 39
  assemblies:
  - Cqrs.WebApi
  namespace: Cqrs.WebApi.SignalR.Hubs
  summary: "\nInstantiates a new instance of <xref href=\"Cqrs.WebApi.SignalR.Hubs.SignalRStartUp\" data-throw-if-not-resolved=\"false\"></xref> with the provided <span class=\"paramref\">configurationManager</span>.\n"
  example: []
  syntax:
    content: public SignalRStartUp(IConfigurationManager configurationManager)
    parameters:
    - id: configurationManager
      type: Cqrs.Configuration.IConfigurationManager
    content.vb: Public Sub New(configurationManager As IConfigurationManager)
  overload: Cqrs.WebApi.SignalR.Hubs.SignalRStartUp.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Cqrs.WebApi.SignalR.Hubs.SignalRStartUp.Configuration(Owin.IAppBuilder)
  commentId: M:Cqrs.WebApi.SignalR.Hubs.SignalRStartUp.Configuration(Owin.IAppBuilder)
  id: Configuration(Owin.IAppBuilder)
  parent: Cqrs.WebApi.SignalR.Hubs.SignalRStartUp
  langs:
  - csharp
  - vb
  name: Configuration(IAppBuilder)
  nameWithType: SignalRStartUp.Configuration(IAppBuilder)
  fullName: Cqrs.WebApi.SignalR.Hubs.SignalRStartUp.Configuration(Owin.IAppBuilder)
  type: Method
  source:
    remote:
      path: Framework/Cqrs.WebApi/SignalR/Hubs/SignalRStartUp.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Configuration
    path: Framework/Cqrs.WebApi/SignalR/Hubs/SignalRStartUp.cs
    startLine: 47
  assemblies:
  - Cqrs.WebApi
  namespace: Cqrs.WebApi.SignalR.Hubs
  summary: "\nConfigure SignalR to run.\n"
  example: []
  syntax:
    content: public virtual void Configuration(IAppBuilder app)
    parameters:
    - id: app
      type: Owin.IAppBuilder
    content.vb: Public Overridable Sub Configuration(app As IAppBuilder)
  overload: Cqrs.WebApi.SignalR.Hubs.SignalRStartUp.Configuration*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.Owin.OwinStartupAttribute
  commentId: T:Microsoft.Owin.OwinStartupAttribute
- uid: Cqrs.WebApi.SignalR.Hubs
  commentId: N:Cqrs.WebApi.SignalR.Hubs
  isExternal: false
  name: Cqrs.WebApi.SignalR.Hubs
  nameWithType: Cqrs.WebApi.SignalR.Hubs
  fullName: Cqrs.WebApi.SignalR.Hubs
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Cqrs.Configuration.IConfigurationManager
  commentId: T:Cqrs.Configuration.IConfigurationManager
  parent: Cqrs.Configuration
  isExternal: false
  name: IConfigurationManager
  nameWithType: IConfigurationManager
  fullName: Cqrs.Configuration.IConfigurationManager
- uid: Cqrs.WebApi.SignalR.Hubs.SignalRStartUp.ConfigurationManager*
  commentId: Overload:Cqrs.WebApi.SignalR.Hubs.SignalRStartUp.ConfigurationManager
  isExternal: false
  name: ConfigurationManager
  nameWithType: SignalRStartUp.ConfigurationManager
  fullName: Cqrs.WebApi.SignalR.Hubs.SignalRStartUp.ConfigurationManager
- uid: Cqrs.Configuration
  commentId: N:Cqrs.Configuration
  isExternal: false
  name: Cqrs.Configuration
  nameWithType: Cqrs.Configuration
  fullName: Cqrs.Configuration
- uid: Cqrs.WebApi.SignalR.Hubs.SignalRStartUp
  commentId: T:Cqrs.WebApi.SignalR.Hubs.SignalRStartUp
  isExternal: false
  name: SignalRStartUp
  nameWithType: SignalRStartUp
  fullName: Cqrs.WebApi.SignalR.Hubs.SignalRStartUp
- uid: Cqrs.WebApi.SignalR.Hubs.SignalRStartUp.ConfigurationManager
  commentId: P:Cqrs.WebApi.SignalR.Hubs.SignalRStartUp.ConfigurationManager
- uid: Cqrs.WebApi.SignalR.Hubs.SignalRStartUp.#ctor*
  commentId: Overload:Cqrs.WebApi.SignalR.Hubs.SignalRStartUp.#ctor
  isExternal: false
  name: SignalRStartUp
  nameWithType: SignalRStartUp.SignalRStartUp
  fullName: Cqrs.WebApi.SignalR.Hubs.SignalRStartUp.SignalRStartUp
- uid: Cqrs.WebApi.SignalR.Hubs.SignalRStartUp.Configuration*
  commentId: Overload:Cqrs.WebApi.SignalR.Hubs.SignalRStartUp.Configuration
  isExternal: false
  name: Configuration
  nameWithType: SignalRStartUp.Configuration
  fullName: Cqrs.WebApi.SignalR.Hubs.SignalRStartUp.Configuration
- uid: Owin.IAppBuilder
  commentId: T:Owin.IAppBuilder
  parent: Owin
  isExternal: true
  name: IAppBuilder
  nameWithType: IAppBuilder
  fullName: Owin.IAppBuilder
- uid: Owin
  commentId: N:Owin
  isExternal: false
  name: Owin
  nameWithType: Owin
  fullName: Owin
