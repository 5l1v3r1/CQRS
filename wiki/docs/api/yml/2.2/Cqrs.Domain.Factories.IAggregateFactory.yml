### YamlMime:ManagedReference
items:
- uid: Cqrs.Domain.Factories.IAggregateFactory
  commentId: T:Cqrs.Domain.Factories.IAggregateFactory
  id: IAggregateFactory
  parent: Cqrs.Domain.Factories
  children:
  - Cqrs.Domain.Factories.IAggregateFactory.Create(System.Type,System.Nullable{System.Guid},System.Boolean)
  - Cqrs.Domain.Factories.IAggregateFactory.Create``1(System.Nullable{System.Guid},System.Boolean)
  langs:
  - csharp
  - vb
  name: IAggregateFactory
  nameWithType: IAggregateFactory
  fullName: Cqrs.Domain.Factories.IAggregateFactory
  type: Interface
  source:
    remote:
      path: Framework/Cqrs/Domain/Factories/IAggregateFactory.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: IAggregateFactory
    path: Framework/Cqrs/Domain/Factories/IAggregateFactory.cs
    startLine: 8
  assemblies:
  - Cqrs
  namespace: Cqrs.Domain.Factories
  summary: "\nA factory for creating instances of aggregates.\n"
  example: []
  syntax:
    content: public interface IAggregateFactory
    content.vb: Public Interface IAggregateFactory
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Cqrs.Domain.Factories.IAggregateFactory.Create``1(System.Nullable{System.Guid},System.Boolean)
  commentId: M:Cqrs.Domain.Factories.IAggregateFactory.Create``1(System.Nullable{System.Guid},System.Boolean)
  id: Create``1(System.Nullable{System.Guid},System.Boolean)
  parent: Cqrs.Domain.Factories.IAggregateFactory
  langs:
  - csharp
  - vb
  name: Create<TAggregate>(Nullable<Guid>, Boolean)
  nameWithType: IAggregateFactory.Create<TAggregate>(Nullable<Guid>, Boolean)
  fullName: Cqrs.Domain.Factories.IAggregateFactory.Create<TAggregate>(System.Nullable<System.Guid>, System.Boolean)
  type: Method
  source:
    remote:
      path: Framework/Cqrs/Domain/Factories/IAggregateFactory.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Create
    path: Framework/Cqrs/Domain/Factories/IAggregateFactory.cs
    startLine: 16
  assemblies:
  - Cqrs
  namespace: Cqrs.Domain.Factories
  summary: "\nCreates instance of <code data-dev-comment-type=\"typeparamref\">TAggregate</code>.\n"
  example: []
  syntax:
    content: TAggregate Create<TAggregate>(Guid? rsn = null, bool tryDependencyResolutionFirst = true)
    parameters:
    - id: rsn
      type: System.Nullable{System.Guid}
      description: The identifier of the aggregate to create an instance of if an existing aggregate.
    - id: tryDependencyResolutionFirst
      type: System.Boolean
      description: Indicates the use of <xref href="Cqrs.Configuration.IDependencyResolver" data-throw-if-not-resolved="false"></xref> should be tried first.
    typeParameters:
    - id: TAggregate
      description: The <xref href="System.Type" data-throw-if-not-resolved="false"></xref> of the aggregate to create.
    return:
      type: '{TAggregate}'
    content.vb: Function Create(Of TAggregate)(rsn As Guid? = Nothing, tryDependencyResolutionFirst As Boolean = True) As TAggregate
  overload: Cqrs.Domain.Factories.IAggregateFactory.Create*
  nameWithType.vb: IAggregateFactory.Create(Of TAggregate)(Nullable(Of Guid), Boolean)
  fullName.vb: Cqrs.Domain.Factories.IAggregateFactory.Create(Of TAggregate)(System.Nullable(Of System.Guid), System.Boolean)
  name.vb: Create(Of TAggregate)(Nullable(Of Guid), Boolean)
- uid: Cqrs.Domain.Factories.IAggregateFactory.Create(System.Type,System.Nullable{System.Guid},System.Boolean)
  commentId: M:Cqrs.Domain.Factories.IAggregateFactory.Create(System.Type,System.Nullable{System.Guid},System.Boolean)
  id: Create(System.Type,System.Nullable{System.Guid},System.Boolean)
  parent: Cqrs.Domain.Factories.IAggregateFactory
  langs:
  - csharp
  - vb
  name: Create(Type, Nullable<Guid>, Boolean)
  nameWithType: IAggregateFactory.Create(Type, Nullable<Guid>, Boolean)
  fullName: Cqrs.Domain.Factories.IAggregateFactory.Create(System.Type, System.Nullable<System.Guid>, System.Boolean)
  type: Method
  source:
    remote:
      path: Framework/Cqrs/Domain/Factories/IAggregateFactory.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Create
    path: Framework/Cqrs/Domain/Factories/IAggregateFactory.cs
    startLine: 24
  assemblies:
  - Cqrs
  namespace: Cqrs.Domain.Factories
  summary: "\nCreates instance of type <code data-dev-comment-type=\"paramref\">aggregateType</code>\n"
  example: []
  syntax:
    content: object Create(Type aggregateType, Guid? rsn = null, bool tryDependencyResolutionFirst = true)
    parameters:
    - id: aggregateType
      type: System.Type
      description: The <xref href="System.Type" data-throw-if-not-resolved="false"></xref> of the aggregate to create.
    - id: rsn
      type: System.Nullable{System.Guid}
      description: The identifier of the aggregate to create an instance of if an existing aggregate.
    - id: tryDependencyResolutionFirst
      type: System.Boolean
      description: Indicates the use of <xref href="Cqrs.Configuration.IDependencyResolver" data-throw-if-not-resolved="false"></xref> should be tried first.
    return:
      type: System.Object
    content.vb: Function Create(aggregateType As Type, rsn As Guid? = Nothing, tryDependencyResolutionFirst As Boolean = True) As Object
  overload: Cqrs.Domain.Factories.IAggregateFactory.Create*
  nameWithType.vb: IAggregateFactory.Create(Type, Nullable(Of Guid), Boolean)
  fullName.vb: Cqrs.Domain.Factories.IAggregateFactory.Create(System.Type, System.Nullable(Of System.Guid), System.Boolean)
  name.vb: Create(Type, Nullable(Of Guid), Boolean)
references:
- uid: Cqrs.Domain.Factories
  commentId: N:Cqrs.Domain.Factories
  isExternal: false
  name: Cqrs.Domain.Factories
  nameWithType: Cqrs.Domain.Factories
  fullName: Cqrs.Domain.Factories
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Cqrs.Configuration.IDependencyResolver
  commentId: T:Cqrs.Configuration.IDependencyResolver
  parent: Cqrs.Configuration
  isExternal: false
  name: IDependencyResolver
  nameWithType: IDependencyResolver
  fullName: Cqrs.Configuration.IDependencyResolver
- uid: Cqrs.Domain.Factories.IAggregateFactory.Create*
  commentId: Overload:Cqrs.Domain.Factories.IAggregateFactory.Create
  isExternal: false
  name: Create
  nameWithType: IAggregateFactory.Create
  fullName: Cqrs.Domain.Factories.IAggregateFactory.Create
- uid: System.Nullable{System.Guid}
  commentId: T:System.Nullable{System.Guid}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Guid>
  nameWithType: Nullable<Guid>
  fullName: System.Nullable<System.Guid>
  nameWithType.vb: Nullable(Of Guid)
  fullName.vb: System.Nullable(Of System.Guid)
  name.vb: Nullable(Of Guid)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: '{TAggregate}'
  commentId: '!:TAggregate'
  definition: TAggregate
  name: TAggregate
  nameWithType: TAggregate
  fullName: TAggregate
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Cqrs.Configuration
  commentId: N:Cqrs.Configuration
  isExternal: false
  name: Cqrs.Configuration
  nameWithType: Cqrs.Configuration
  fullName: Cqrs.Configuration
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TAggregate
  isExternal: false
  name: TAggregate
  nameWithType: TAggregate
  fullName: TAggregate
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
