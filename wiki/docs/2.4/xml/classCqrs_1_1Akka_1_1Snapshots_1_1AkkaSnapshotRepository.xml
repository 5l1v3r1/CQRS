<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classCqrs_1_1Akka_1_1Snapshots_1_1AkkaSnapshotRepository" kind="class" language="C#" prot="public">
    <compoundname>Cqrs::Akka::Snapshots::AkkaSnapshotRepository</compoundname>
    <basecompoundref refid="interfaceCqrs_1_1Akka_1_1Domain_1_1IAkkaSnapshotAggregateRepository" prot="public" virt="non-virtual">Cqrs::Akka::Domain::IAkkaSnapshotAggregateRepository&lt; TAuthenticationToken &gt;</basecompoundref>
    <templateparamlist>
      <param>
        <type>TAuthenticationToken</type>
      </param>
    </templateparamlist>
      <sectiondef kind="property">
      <memberdef kind="property" id="classCqrs_1_1Akka_1_1Snapshots_1_1AkkaSnapshotRepository_a83f16c1598f3df2a8889fdf5cab5dfb9_1a83f16c1598f3df2a8889fdf5cab5dfb9" prot="protected" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="yes" protectedsettable="no">
        <type><ref refid="interfaceCqrs_1_1Snapshots_1_1ISnapshotStore" kindref="compound">ISnapshotStore</ref></type>
        <definition>ISnapshotStore Cqrs.Akka.Snapshots.AkkaSnapshotRepository&lt; TAuthenticationToken &gt;.SnapshotStore</definition>
        <argsstring></argsstring>
        <name>SnapshotStore</name>
        <briefdescription>
<para>Gets or sets the ISnapshotStore. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/a99f043f4d1af837/Framework/Akka.Net/Cqrs.Akka/Snapshots/AkkaSnapshotRepository.cs" line="33" column="1" bodyfile="/opt/buildAgent/work/a99f043f4d1af837/Framework/Akka.Net/Cqrs.Akka/Snapshots/AkkaSnapshotRepository.cs" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="classCqrs_1_1Akka_1_1Snapshots_1_1AkkaSnapshotRepository_ad230c1d7f2d70973cdf116b14fcd0ab0_1ad230c1d7f2d70973cdf116b14fcd0ab0" prot="protected" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="yes" protectedsettable="no">
        <type><ref refid="interfaceCqrs_1_1Snapshots_1_1ISnapshotStrategy" kindref="compound">ISnapshotStrategy</ref>&lt; TAuthenticationToken &gt;</type>
        <definition>ISnapshotStrategy&lt;TAuthenticationToken&gt; Cqrs.Akka.Snapshots.AkkaSnapshotRepository&lt; TAuthenticationToken &gt;.SnapshotStrategy</definition>
        <argsstring></argsstring>
        <name>SnapshotStrategy</name>
        <briefdescription>
<para>Gets or sets the ISnapshotStrategy&lt;TAuthenticationToken&gt;. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/a99f043f4d1af837/Framework/Akka.Net/Cqrs.Akka/Snapshots/AkkaSnapshotRepository.cs" line="38" column="1" bodyfile="/opt/buildAgent/work/a99f043f4d1af837/Framework/Akka.Net/Cqrs.Akka/Snapshots/AkkaSnapshotRepository.cs" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="classCqrs_1_1Akka_1_1Snapshots_1_1AkkaSnapshotRepository_a4961f1b8481f1205c143172185bae3bb_1a4961f1b8481f1205c143172185bae3bb" prot="protected" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="yes" protectedsettable="no">
        <type><ref refid="interfaceCqrs_1_1Domain_1_1IAggregateRepository" kindref="compound">IAggregateRepository</ref>&lt; TAuthenticationToken &gt;</type>
        <definition>IAggregateRepository&lt;TAuthenticationToken&gt; Cqrs.Akka.Snapshots.AkkaSnapshotRepository&lt; TAuthenticationToken &gt;.Repository</definition>
        <argsstring></argsstring>
        <name>Repository</name>
        <briefdescription>
<para>Gets or sets the IAggregateRepository&lt;TAuthenticationToken&gt;. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/a99f043f4d1af837/Framework/Akka.Net/Cqrs.Akka/Snapshots/AkkaSnapshotRepository.cs" line="43" column="1" bodyfile="/opt/buildAgent/work/a99f043f4d1af837/Framework/Akka.Net/Cqrs.Akka/Snapshots/AkkaSnapshotRepository.cs" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="classCqrs_1_1Akka_1_1Snapshots_1_1AkkaSnapshotRepository_a72905e056029898df21f5644bce4ab69_1a72905e056029898df21f5644bce4ab69" prot="protected" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="yes" protectedsettable="no">
        <type><ref refid="interfaceCqrs_1_1Events_1_1IEventStore" kindref="compound">IEventStore</ref>&lt; TAuthenticationToken &gt;</type>
        <definition>IEventStore&lt;TAuthenticationToken&gt; Cqrs.Akka.Snapshots.AkkaSnapshotRepository&lt; TAuthenticationToken &gt;.EventStore</definition>
        <argsstring></argsstring>
        <name>EventStore</name>
        <briefdescription>
<para>Gets or sets the IEventStore&lt;TAuthenticationToken&gt;. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/a99f043f4d1af837/Framework/Akka.Net/Cqrs.Akka/Snapshots/AkkaSnapshotRepository.cs" line="48" column="1" bodyfile="/opt/buildAgent/work/a99f043f4d1af837/Framework/Akka.Net/Cqrs.Akka/Snapshots/AkkaSnapshotRepository.cs" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="classCqrs_1_1Akka_1_1Snapshots_1_1AkkaSnapshotRepository_a359251dfcca7e157ace7dac46bdf18ef_1a359251dfcca7e157ace7dac46bdf18ef" prot="protected" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="yes" protectedsettable="no">
        <type><ref refid="interfaceCqrs_1_1Domain_1_1Factories_1_1IAggregateFactory" kindref="compound">IAggregateFactory</ref></type>
        <definition>IAggregateFactory Cqrs.Akka.Snapshots.AkkaSnapshotRepository&lt; TAuthenticationToken &gt;.AggregateFactory</definition>
        <argsstring></argsstring>
        <name>AggregateFactory</name>
        <briefdescription>
<para>Gets or sets the IAggregateFactory. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/a99f043f4d1af837/Framework/Akka.Net/Cqrs.Akka/Snapshots/AkkaSnapshotRepository.cs" line="53" column="1" bodyfile="/opt/buildAgent/work/a99f043f4d1af837/Framework/Akka.Net/Cqrs.Akka/Snapshots/AkkaSnapshotRepository.cs" bodystart="53" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classCqrs_1_1Akka_1_1Snapshots_1_1AkkaSnapshotRepository_a59f8c7dabed645143699a8849627c213_1a59f8c7dabed645143699a8849627c213" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Cqrs.Akka.Snapshots.AkkaSnapshotRepository&lt; TAuthenticationToken &gt;.AkkaSnapshotRepository</definition>
        <argsstring>(ISnapshotStore snapshotStore, ISnapshotStrategy&lt; TAuthenticationToken &gt; snapshotStrategy, IAggregateRepository&lt; TAuthenticationToken &gt; repository, IEventStore&lt; TAuthenticationToken &gt; eventStore, IAggregateFactory aggregateFactory)</argsstring>
        <name>AkkaSnapshotRepository</name>
        <param>
          <type><ref refid="interfaceCqrs_1_1Snapshots_1_1ISnapshotStore" kindref="compound">ISnapshotStore</ref></type>
          <declname>snapshotStore</declname>
        </param>
        <param>
          <type><ref refid="interfaceCqrs_1_1Snapshots_1_1ISnapshotStrategy" kindref="compound">ISnapshotStrategy</ref>&lt; TAuthenticationToken &gt;</type>
          <declname>snapshotStrategy</declname>
        </param>
        <param>
          <type><ref refid="interfaceCqrs_1_1Domain_1_1IAggregateRepository" kindref="compound">IAggregateRepository</ref>&lt; TAuthenticationToken &gt;</type>
          <declname>repository</declname>
        </param>
        <param>
          <type><ref refid="interfaceCqrs_1_1Events_1_1IEventStore" kindref="compound">IEventStore</ref>&lt; TAuthenticationToken &gt;</type>
          <declname>eventStore</declname>
        </param>
        <param>
          <type><ref refid="interfaceCqrs_1_1Domain_1_1Factories_1_1IAggregateFactory" kindref="compound">IAggregateFactory</ref></type>
          <declname>aggregateFactory</declname>
        </param>
        <briefdescription>
<para>Instantiates a new instance of SnapshotRepository&lt;TAuthenticationToken&gt;. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/a99f043f4d1af837/Framework/Akka.Net/Cqrs.Akka/Snapshots/AkkaSnapshotRepository.cs" line="58" column="1" bodyfile="/opt/buildAgent/work/a99f043f4d1af837/Framework/Akka.Net/Cqrs.Akka/Snapshots/AkkaSnapshotRepository.cs" bodystart="58" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Akka_1_1Snapshots_1_1AkkaSnapshotRepository_adf399a4ea283ae725bf8f1229d6da30a_1adf399a4ea283ae725bf8f1229d6da30a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Cqrs.Akka.Snapshots.AkkaSnapshotRepository&lt; TAuthenticationToken &gt;.Save&lt; TAggregateRoot &gt;</definition>
        <argsstring>(TAggregateRoot aggregate, int? expectedVersion=null)</argsstring>
        <name>Save&lt; TAggregateRoot &gt;</name>
        <reimplements refid="interfaceCqrs_1_1Domain_1_1IAggregateRepository_a306baf8aa6faabe893f93e5db5d3517d_1a306baf8aa6faabe893f93e5db5d3517d">Save&lt; TAggregateRoot &gt;</reimplements>
        <param>
          <type>TAggregateRoot</type>
          <declname>aggregate</declname>
        </param>
        <param>
          <type>int?</type>
          <declname>expectedVersion</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
<para>Calls <ref refid="classCqrs_1_1Akka_1_1Snapshots_1_1AkkaSnapshotRepository_ae9df38e7f69f1cae3c080fcf8a998a18_1ae9df38e7f69f1cae3c080fcf8a998a18" kindref="member">TryMakeSnapshot</ref> then IAggregateRepository&lt;TAuthenticationToken&gt;.Save&lt;TAggregateRoot&gt; on <ref refid="classCqrs_1_1Akka_1_1Snapshots_1_1AkkaSnapshotRepository_a4961f1b8481f1205c143172185bae3bb_1a4961f1b8481f1205c143172185bae3bb" kindref="member">Repository</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>TAggregateRoot</parametername>
</parameternamelist>
<parameterdescription>
<para>The Type of the IAggregateRoot&lt;TAuthenticationToken&gt;.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aggregate</parametername>
</parameternamelist>
<parameterdescription>
<para>The IAggregateRoot&lt;TAuthenticationToken&gt; to save and persist.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>expectedVersion</parametername>
</parameternamelist>
<parameterdescription>
<para>The version number the IAggregateRoot&lt;TAuthenticationToken&gt; is expected to be at.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/a99f043f4d1af837/Framework/Akka.Net/Cqrs.Akka/Snapshots/AkkaSnapshotRepository.cs" line="73" column="1" bodyfile="/opt/buildAgent/work/a99f043f4d1af837/Framework/Akka.Net/Cqrs.Akka/Snapshots/AkkaSnapshotRepository.cs" bodystart="73" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Akka_1_1Snapshots_1_1AkkaSnapshotRepository_a953067de4f1ed8c4528e92bf896fbf79_1a953067de4f1ed8c4528e92bf896fbf79" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>TAggregateRoot</type>
        <definition>TAggregateRoot Cqrs.Akka.Snapshots.AkkaSnapshotRepository&lt; TAuthenticationToken &gt;.Get&lt; TAggregateRoot &gt;</definition>
        <argsstring>(Guid aggregateId, IList&lt; IEvent&lt; TAuthenticationToken &gt;&gt; events=null)</argsstring>
        <name>Get&lt; TAggregateRoot &gt;</name>
        <reimplements refid="interfaceCqrs_1_1Domain_1_1IAggregateRepository_a890633fddbd05bd3b9e9968a2de095bb_1a890633fddbd05bd3b9e9968a2de095bb">Get&lt; TAggregateRoot &gt;</reimplements>
        <param>
          <type>Guid</type>
          <declname>aggregateId</declname>
        </param>
        <param>
          <type>IList&lt; <ref refid="interfaceCqrs_1_1Events_1_1IEvent" kindref="compound">IEvent</ref>&lt; TAuthenticationToken &gt;&gt;</type>
          <declname>events</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
<para>Retrieves an IAggregateRoot&lt;TAuthenticationToken&gt; of type <emphasis>TAggregateRoot</emphasis> , First using <ref refid="classCqrs_1_1Akka_1_1Snapshots_1_1AkkaSnapshotRepository_aeec6fc99d17848302d908361ea407908_1aeec6fc99d17848302d908361ea407908" kindref="member">TryRestoreAggregateFromSnapshot&lt;TAggregateRoot&gt;</ref>, otherwise via IAggregateRepository&lt;TAuthenticationToken&gt;.Get&lt;TAggregateRoot&gt; on <ref refid="classCqrs_1_1Akka_1_1Snapshots_1_1AkkaSnapshotRepository_a4961f1b8481f1205c143172185bae3bb_1a4961f1b8481f1205c143172185bae3bb" kindref="member">Repository</ref> Then does rehydration. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>TAggregateRoot</parametername>
</parameternamelist>
<parameterdescription>
<para>The Type of the IAggregateRoot&lt;TAuthenticationToken&gt;.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aggregateId</parametername>
</parameternamelist>
<parameterdescription>
<para>The identifier of the IAggregateRoot&lt;TAuthenticationToken&gt; to retrieve.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>events</parametername>
</parameternamelist>
<parameterdescription>
<para>A collection of IEvent&lt;TAuthenticationToken&gt; to replay on the retrieved IAggregateRoot&lt;TAuthenticationToken&gt;. If null, the IEventStore&lt;TAuthenticationToken&gt; will be used to retrieve a list of IEvent&lt;TAuthenticationToken&gt; for you. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/a99f043f4d1af837/Framework/Akka.Net/Cqrs.Akka/Snapshots/AkkaSnapshotRepository.cs" line="94" column="1" bodyfile="/opt/buildAgent/work/a99f043f4d1af837/Framework/Akka.Net/Cqrs.Akka/Snapshots/AkkaSnapshotRepository.cs" bodystart="94" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Akka_1_1Snapshots_1_1AkkaSnapshotRepository_a6a5de2c23b04b9ae9862029b70f6d8d7_1a6a5de2c23b04b9ae9862029b70f6d8d7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>TAggregateRoot</type>
        <definition>TAggregateRoot Cqrs.Akka.Snapshots.AkkaSnapshotRepository&lt; TAuthenticationToken &gt;.GetToVersion&lt; TAggregateRoot &gt;</definition>
        <argsstring>(Guid aggregateId, int version, IList&lt; IEvent&lt; TAuthenticationToken &gt;&gt; events=null)</argsstring>
        <name>GetToVersion&lt; TAggregateRoot &gt;</name>
        <reimplements refid="interfaceCqrs_1_1Domain_1_1IAggregateRepository_aa0d6b4b9b117357e1676cae829fe2a5c_1aa0d6b4b9b117357e1676cae829fe2a5c">GetToVersion&lt; TAggregateRoot &gt;</reimplements>
        <param>
          <type>Guid</type>
          <declname>aggregateId</declname>
        </param>
        <param>
          <type>int</type>
          <declname>version</declname>
        </param>
        <param>
          <type>IList&lt; <ref refid="interfaceCqrs_1_1Events_1_1IEvent" kindref="compound">IEvent</ref>&lt; TAuthenticationToken &gt;&gt;</type>
          <declname>events</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
<para>Retrieves an IAggregateRoot&lt;TAuthenticationToken&gt; of type <emphasis>TAggregateRoot</emphasis>  up to and including the provided <emphasis>version</emphasis> . </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>TAggregateRoot</parametername>
</parameternamelist>
<parameterdescription>
<para>The Type of the IAggregateRoot&lt;TAuthenticationToken&gt;.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aggregateId</parametername>
</parameternamelist>
<parameterdescription>
<para>The identifier of the IAggregateRoot&lt;TAuthenticationToken&gt; to retrieve.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>version</parametername>
</parameternamelist>
<parameterdescription>
<para>Load events up-to and including from this version</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>events</parametername>
</parameternamelist>
<parameterdescription>
<para>A collection of IEvent&lt;TAuthenticationToken&gt; to replay on the retrieved IAggregateRoot&lt;TAuthenticationToken&gt;. If null, the IEventStore&lt;TAuthenticationToken&gt; will be used to retrieve a list of IEvent&lt;TAuthenticationToken&gt; for you. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/a99f043f4d1af837/Framework/Akka.Net/Cqrs.Akka/Snapshots/AkkaSnapshotRepository.cs" line="119" column="1" bodyfile="/opt/buildAgent/work/a99f043f4d1af837/Framework/Akka.Net/Cqrs.Akka/Snapshots/AkkaSnapshotRepository.cs" bodystart="119" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Akka_1_1Snapshots_1_1AkkaSnapshotRepository_a3c6f3596a5eb42eeefcdf6ed536fb690_1a3c6f3596a5eb42eeefcdf6ed536fb690" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>TAggregateRoot</type>
        <definition>TAggregateRoot Cqrs.Akka.Snapshots.AkkaSnapshotRepository&lt; TAuthenticationToken &gt;.GetToDate&lt; TAggregateRoot &gt;</definition>
        <argsstring>(Guid aggregateId, DateTime versionedDate, IList&lt; IEvent&lt; TAuthenticationToken &gt;&gt; events=null)</argsstring>
        <name>GetToDate&lt; TAggregateRoot &gt;</name>
        <reimplements refid="interfaceCqrs_1_1Domain_1_1IAggregateRepository_a32308a27ce03c5d406e16b17430dd040_1a32308a27ce03c5d406e16b17430dd040">GetToDate&lt; TAggregateRoot &gt;</reimplements>
        <param>
          <type>Guid</type>
          <declname>aggregateId</declname>
        </param>
        <param>
          <type>DateTime</type>
          <declname>versionedDate</declname>
        </param>
        <param>
          <type>IList&lt; <ref refid="interfaceCqrs_1_1Events_1_1IEvent" kindref="compound">IEvent</ref>&lt; TAuthenticationToken &gt;&gt;</type>
          <declname>events</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
<para>Retrieves an IAggregateRoot&lt;TAuthenticationToken&gt; of type <emphasis>TAggregateRoot</emphasis>  up to and including the provided <emphasis>versionedDate</emphasis> . </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>TAggregateRoot</parametername>
</parameternamelist>
<parameterdescription>
<para>The Type of the IAggregateRoot&lt;TAuthenticationToken&gt;.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aggregateId</parametername>
</parameternamelist>
<parameterdescription>
<para>The identifier of the IAggregateRoot&lt;TAuthenticationToken&gt; to retrieve.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>versionedDate</parametername>
</parameternamelist>
<parameterdescription>
<para>Load events up-to and including from this DateTime</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>events</parametername>
</parameternamelist>
<parameterdescription>
<para>A collection of IEvent&lt;TAuthenticationToken&gt; to replay on the retrieved IAggregateRoot&lt;TAuthenticationToken&gt;. If null, the IEventStore&lt;TAuthenticationToken&gt; will be used to retrieve a list of IEvent&lt;TAuthenticationToken&gt; for you. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/a99f043f4d1af837/Framework/Akka.Net/Cqrs.Akka/Snapshots/AkkaSnapshotRepository.cs" line="135" column="1" bodyfile="/opt/buildAgent/work/a99f043f4d1af837/Framework/Akka.Net/Cqrs.Akka/Snapshots/AkkaSnapshotRepository.cs" bodystart="135" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Akka_1_1Snapshots_1_1AkkaSnapshotRepository_a22974b2e02f76de5ad76369130fbb8f4_1a22974b2e02f76de5ad76369130fbb8f4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Cqrs.Akka.Snapshots.AkkaSnapshotRepository&lt; TAuthenticationToken &gt;.LoadAggregateHistory&lt; TAggregateRoot &gt;</definition>
        <argsstring>(TAggregateRoot aggregate, IList&lt; IEvent&lt; TAuthenticationToken &gt;&gt; events=null, bool throwExceptionOnNoEvents=true)</argsstring>
        <name>LoadAggregateHistory&lt; TAggregateRoot &gt;</name>
        <reimplements refid="interfaceCqrs_1_1Akka_1_1Domain_1_1IAkkaAggregateRepository_a9010b259daf5d09f7269277361015ddf_1a9010b259daf5d09f7269277361015ddf">LoadAggregateHistory&lt; TAggregateRoot &gt;</reimplements>
        <param>
          <type>TAggregateRoot</type>
          <declname>aggregate</declname>
        </param>
        <param>
          <type>IList&lt; <ref refid="interfaceCqrs_1_1Events_1_1IEvent" kindref="compound">IEvent</ref>&lt; TAuthenticationToken &gt;&gt;</type>
          <declname>events</declname>
          <defval>null</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>throwExceptionOnNoEvents</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>If <emphasis>events</emphasis>  is null, loads the events from IEventStore&lt;TAuthenticationToken&gt;, checks for duplicates and then rehydrates the <emphasis>aggregate</emphasis>  with the events. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>TAggregateRoot</parametername>
</parameternamelist>
<parameterdescription>
<para>The Type of IAggregateRoot&lt;TAuthenticationToken&gt;.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aggregate</parametername>
</parameternamelist>
<parameterdescription>
<para>The <emphasis>TAggregateRoot</emphasis>  to rehydrate.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>events</parametername>
</parameternamelist>
<parameterdescription>
<para>A collection of IEvent&lt;TAuthenticationToken&gt; to replay on the retrieved IAggregateRoot&lt;TAuthenticationToken&gt;. If null, the IEventStore&lt;TAuthenticationToken&gt; will be used to retrieve a list of IEvent&lt;TAuthenticationToken&gt; for you. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>throwExceptionOnNoEvents</parametername>
</parameternamelist>
<parameterdescription>
<para>If true will throw an instance of AggregateNotFoundException&lt;TAggregateRoot,TAuthenticationToken&gt; if no aggregate events or provided or found in the IEventStore&lt;TAuthenticationToken&gt;.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/a99f043f4d1af837/Framework/Akka.Net/Cqrs.Akka/Snapshots/AkkaSnapshotRepository.cs" line="204" column="1" bodyfile="/opt/buildAgent/work/a99f043f4d1af837/Framework/Akka.Net/Cqrs.Akka/Snapshots/AkkaSnapshotRepository.cs" bodystart="204" bodyend="211"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classCqrs_1_1Akka_1_1Snapshots_1_1AkkaSnapshotRepository_aeec6fc99d17848302d908361ea407908_1aeec6fc99d17848302d908361ea407908" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int Cqrs.Akka.Snapshots.AkkaSnapshotRepository&lt; TAuthenticationToken &gt;.TryRestoreAggregateFromSnapshot&lt; TAggregateRoot &gt;</definition>
        <argsstring>(Guid id, TAggregateRoot aggregate)</argsstring>
        <name>TryRestoreAggregateFromSnapshot&lt; TAggregateRoot &gt;</name>
        <param>
          <type>Guid</type>
          <declname>id</declname>
        </param>
        <param>
          <type>TAggregateRoot</type>
          <declname>aggregate</declname>
        </param>
        <briefdescription>
<para>Calls ISnapshotStrategy&lt;TAuthenticationToken&gt;.IsSnapshotable on <ref refid="classCqrs_1_1Akka_1_1Snapshots_1_1AkkaSnapshotRepository_ad230c1d7f2d70973cdf116b14fcd0ab0_1ad230c1d7f2d70973cdf116b14fcd0ab0" kindref="member">SnapshotStrategy</ref> If the <emphasis>TAggregateRoot</emphasis>  is snapshot-able ISnapshotStore.Get&lt;TAggregateRoot&gt; is called on <ref refid="classCqrs_1_1Akka_1_1Snapshots_1_1AkkaSnapshotRepository_a83f16c1598f3df2a8889fdf5cab5dfb9_1a83f16c1598f3df2a8889fdf5cab5dfb9" kindref="member">SnapshotStore</ref>. The Restore method is then called on </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>TAggregateRoot</parametername>
</parameternamelist>
<parameterdescription>
<para>The Type of the IAggregateRoot&lt;TAuthenticationToken&gt;.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>The identifier of the IAggregateRoot&lt;TAuthenticationToken&gt; to restore, since the <emphasis>aggregate</emphasis>  may be completely uninitialised.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aggregate</parametername>
</parameternamelist>
<parameterdescription>
<para>The <emphasis>TAggregateRoot</emphasis> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>-1 if no restoration was made, otherwise version number the <emphasis>TAggregateRoot</emphasis>  was rehydrated to.</para></simplesect>
</para><para>There may be more events after the snapshot that still need to rehydrated into the <emphasis>TAggregateRoot</emphasis>  after restoration.</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/a99f043f4d1af837/Framework/Akka.Net/Cqrs.Akka/Snapshots/AkkaSnapshotRepository.cs" line="151" column="1" bodyfile="/opt/buildAgent/work/a99f043f4d1af837/Framework/Akka.Net/Cqrs.Akka/Snapshots/AkkaSnapshotRepository.cs" bodystart="151" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Akka_1_1Snapshots_1_1AkkaSnapshotRepository_ae9df38e7f69f1cae3c080fcf8a998a18_1ae9df38e7f69f1cae3c080fcf8a998a18" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Cqrs.Akka.Snapshots.AkkaSnapshotRepository&lt; TAuthenticationToken &gt;.TryMakeSnapshot</definition>
        <argsstring>(IAggregateRoot&lt; TAuthenticationToken &gt; aggregate, IEnumerable&lt; IEvent&lt; TAuthenticationToken &gt;&gt; uncommittedChanges)</argsstring>
        <name>TryMakeSnapshot</name>
        <param>
          <type><ref refid="interfaceCqrs_1_1Domain_1_1IAggregateRoot" kindref="compound">IAggregateRoot</ref>&lt; TAuthenticationToken &gt;</type>
          <declname>aggregate</declname>
        </param>
        <param>
          <type>IEnumerable&lt; <ref refid="interfaceCqrs_1_1Events_1_1IEvent" kindref="compound">IEvent</ref>&lt; TAuthenticationToken &gt;&gt;</type>
          <declname>uncommittedChanges</declname>
        </param>
        <briefdescription>
<para>Calls ISnapshotStrategy&lt;TAuthenticationToken&gt;.ShouldMakeSnapShot on <ref refid="classCqrs_1_1Akka_1_1Snapshots_1_1AkkaSnapshotRepository_ad230c1d7f2d70973cdf116b14fcd0ab0_1ad230c1d7f2d70973cdf116b14fcd0ab0" kindref="member">SnapshotStrategy</ref> If the IAggregateRoot&lt;TAuthenticationToken&gt; is snapshot-able SnapshotAggregateRoot&lt;TAuthenticationToken,TSnapshot&gt;.GetSnapshot is called The Snapshot.Version is calculated, finally ISnapshotStore.Save is called on <ref refid="classCqrs_1_1Akka_1_1Snapshots_1_1AkkaSnapshotRepository_a83f16c1598f3df2a8889fdf5cab5dfb9_1a83f16c1598f3df2a8889fdf5cab5dfb9" kindref="member">SnapshotStore</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aggregate</parametername>
</parameternamelist>
<parameterdescription>
<para>The IAggregateRoot&lt;TAuthenticationToken&gt; to try and snapshot.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>uncommittedChanges</parametername>
</parameternamelist>
<parameterdescription>
<para>A collection of uncommited changes to assess. If null the aggregate will be asked to provide them.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/a99f043f4d1af837/Framework/Akka.Net/Cqrs.Akka/Snapshots/AkkaSnapshotRepository.cs" line="173" column="1" bodyfile="/opt/buildAgent/work/a99f043f4d1af837/Framework/Akka.Net/Cqrs.Akka/Snapshots/AkkaSnapshotRepository.cs" bodystart="173" bodyend="189"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Provides basic repository methods for operations with instances of IAggregateRoot&lt;TAuthenticationToken&gt; utilising <ref refid="" kindref="compound">snapshots</ref> for optimised rehydration. </para>    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>TAuthenticationToken</parametername>
</parameternamelist>
<parameterdescription>
<para>The Type of authentication token.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="184">
        <label>IAkkaSnapshotAggregateRepository&lt; TAuthenticationToken &gt;</label>
        <link refid="interfaceCqrs_1_1Akka_1_1Domain_1_1IAkkaSnapshotAggregateRepository"/>
        <childnode refid="185" relation="public-inheritance">
        </childnode>
        <childnode refid="187" relation="public-inheritance">
        </childnode>
      </node>
      <node id="186">
        <label>IAggregateRepository&lt; TAuthenticationToken &gt;</label>
        <link refid="interfaceCqrs_1_1Domain_1_1IAggregateRepository"/>
      </node>
      <node id="183">
        <label>Cqrs.Akka.Snapshots.AkkaSnapshotRepository&lt; TAuthenticationToken &gt;</label>
        <link refid="classCqrs_1_1Akka_1_1Snapshots_1_1AkkaSnapshotRepository"/>
        <childnode refid="184" relation="public-inheritance">
        </childnode>
      </node>
      <node id="187">
        <label>IAkkaAggregateRepository&lt; TAuthenticationToken &gt;</label>
        <link refid="interfaceCqrs_1_1Akka_1_1Domain_1_1IAkkaAggregateRepository"/>
        <childnode refid="186" relation="public-inheritance">
        </childnode>
      </node>
      <node id="185">
        <label>ISnapshotAggregateRepository&lt; TAuthenticationToken &gt;</label>
        <link refid="interfaceCqrs_1_1Domain_1_1ISnapshotAggregateRepository"/>
        <childnode refid="186" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="189">
        <label>IAkkaSnapshotAggregateRepository&lt; TAuthenticationToken &gt;</label>
        <link refid="interfaceCqrs_1_1Akka_1_1Domain_1_1IAkkaSnapshotAggregateRepository"/>
        <childnode refid="190" relation="public-inheritance">
        </childnode>
        <childnode refid="192" relation="public-inheritance">
        </childnode>
      </node>
      <node id="191">
        <label>IAggregateRepository&lt; TAuthenticationToken &gt;</label>
        <link refid="interfaceCqrs_1_1Domain_1_1IAggregateRepository"/>
      </node>
      <node id="188">
        <label>Cqrs.Akka.Snapshots.AkkaSnapshotRepository&lt; TAuthenticationToken &gt;</label>
        <link refid="classCqrs_1_1Akka_1_1Snapshots_1_1AkkaSnapshotRepository"/>
        <childnode refid="189" relation="public-inheritance">
        </childnode>
      </node>
      <node id="192">
        <label>IAkkaAggregateRepository&lt; TAuthenticationToken &gt;</label>
        <link refid="interfaceCqrs_1_1Akka_1_1Domain_1_1IAkkaAggregateRepository"/>
        <childnode refid="191" relation="public-inheritance">
        </childnode>
      </node>
      <node id="190">
        <label>ISnapshotAggregateRepository&lt; TAuthenticationToken &gt;</label>
        <link refid="interfaceCqrs_1_1Domain_1_1ISnapshotAggregateRepository"/>
        <childnode refid="191" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/opt/buildAgent/work/a99f043f4d1af837/Framework/Akka.Net/Cqrs.Akka/Snapshots/AkkaSnapshotRepository.cs" line="29" column="1" bodyfile="/opt/buildAgent/work/a99f043f4d1af837/Framework/Akka.Net/Cqrs.Akka/Snapshots/AkkaSnapshotRepository.cs" bodystart="27" bodyend="214"/>
    <listofallmembers>
      <member refid="classCqrs_1_1Akka_1_1Snapshots_1_1AkkaSnapshotRepository_a359251dfcca7e157ace7dac46bdf18ef_1a359251dfcca7e157ace7dac46bdf18ef" prot="protected" virt="non-virtual"><scope>Cqrs::Akka::Snapshots::AkkaSnapshotRepository</scope><name>AggregateFactory</name></member>
      <member refid="classCqrs_1_1Akka_1_1Snapshots_1_1AkkaSnapshotRepository_a59f8c7dabed645143699a8849627c213_1a59f8c7dabed645143699a8849627c213" prot="public" virt="non-virtual"><scope>Cqrs::Akka::Snapshots::AkkaSnapshotRepository</scope><name>AkkaSnapshotRepository</name></member>
      <member refid="classCqrs_1_1Akka_1_1Snapshots_1_1AkkaSnapshotRepository_a72905e056029898df21f5644bce4ab69_1a72905e056029898df21f5644bce4ab69" prot="protected" virt="non-virtual"><scope>Cqrs::Akka::Snapshots::AkkaSnapshotRepository</scope><name>EventStore</name></member>
      <member refid="classCqrs_1_1Akka_1_1Snapshots_1_1AkkaSnapshotRepository_a953067de4f1ed8c4528e92bf896fbf79_1a953067de4f1ed8c4528e92bf896fbf79" prot="public" virt="non-virtual"><scope>Cqrs::Akka::Snapshots::AkkaSnapshotRepository</scope><name>Get&lt; TAggregateRoot &gt;</name></member>
      <member refid="classCqrs_1_1Akka_1_1Snapshots_1_1AkkaSnapshotRepository_a3c6f3596a5eb42eeefcdf6ed536fb690_1a3c6f3596a5eb42eeefcdf6ed536fb690" prot="public" virt="non-virtual"><scope>Cqrs::Akka::Snapshots::AkkaSnapshotRepository</scope><name>GetToDate&lt; TAggregateRoot &gt;</name></member>
      <member refid="classCqrs_1_1Akka_1_1Snapshots_1_1AkkaSnapshotRepository_a6a5de2c23b04b9ae9862029b70f6d8d7_1a6a5de2c23b04b9ae9862029b70f6d8d7" prot="public" virt="non-virtual"><scope>Cqrs::Akka::Snapshots::AkkaSnapshotRepository</scope><name>GetToVersion&lt; TAggregateRoot &gt;</name></member>
      <member refid="classCqrs_1_1Akka_1_1Snapshots_1_1AkkaSnapshotRepository_a22974b2e02f76de5ad76369130fbb8f4_1a22974b2e02f76de5ad76369130fbb8f4" prot="public" virt="non-virtual"><scope>Cqrs::Akka::Snapshots::AkkaSnapshotRepository</scope><name>LoadAggregateHistory&lt; TAggregateRoot &gt;</name></member>
      <member refid="classCqrs_1_1Akka_1_1Snapshots_1_1AkkaSnapshotRepository_a4961f1b8481f1205c143172185bae3bb_1a4961f1b8481f1205c143172185bae3bb" prot="protected" virt="non-virtual"><scope>Cqrs::Akka::Snapshots::AkkaSnapshotRepository</scope><name>Repository</name></member>
      <member refid="classCqrs_1_1Akka_1_1Snapshots_1_1AkkaSnapshotRepository_adf399a4ea283ae725bf8f1229d6da30a_1adf399a4ea283ae725bf8f1229d6da30a" prot="public" virt="non-virtual"><scope>Cqrs::Akka::Snapshots::AkkaSnapshotRepository</scope><name>Save&lt; TAggregateRoot &gt;</name></member>
      <member refid="classCqrs_1_1Akka_1_1Snapshots_1_1AkkaSnapshotRepository_a83f16c1598f3df2a8889fdf5cab5dfb9_1a83f16c1598f3df2a8889fdf5cab5dfb9" prot="protected" virt="non-virtual"><scope>Cqrs::Akka::Snapshots::AkkaSnapshotRepository</scope><name>SnapshotStore</name></member>
      <member refid="classCqrs_1_1Akka_1_1Snapshots_1_1AkkaSnapshotRepository_ad230c1d7f2d70973cdf116b14fcd0ab0_1ad230c1d7f2d70973cdf116b14fcd0ab0" prot="protected" virt="non-virtual"><scope>Cqrs::Akka::Snapshots::AkkaSnapshotRepository</scope><name>SnapshotStrategy</name></member>
      <member refid="classCqrs_1_1Akka_1_1Snapshots_1_1AkkaSnapshotRepository_ae9df38e7f69f1cae3c080fcf8a998a18_1ae9df38e7f69f1cae3c080fcf8a998a18" prot="protected" virt="virtual"><scope>Cqrs::Akka::Snapshots::AkkaSnapshotRepository</scope><name>TryMakeSnapshot</name></member>
      <member refid="classCqrs_1_1Akka_1_1Snapshots_1_1AkkaSnapshotRepository_aeec6fc99d17848302d908361ea407908_1aeec6fc99d17848302d908361ea407908" prot="protected" virt="virtual"><scope>Cqrs::Akka::Snapshots::AkkaSnapshotRepository</scope><name>TryRestoreAggregateFromSnapshot&lt; TAggregateRoot &gt;</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
