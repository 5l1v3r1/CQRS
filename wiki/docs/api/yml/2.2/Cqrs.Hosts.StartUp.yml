### YamlMime:ManagedReference
items:
- uid: Cqrs.Hosts.StartUp
  commentId: T:Cqrs.Hosts.StartUp
  id: StartUp
  parent: Cqrs.Hosts
  children:
  - Cqrs.Hosts.StartUp.#ctor(System.Action)
  - Cqrs.Hosts.StartUp.DependencyResolverConfigurationFunction
  - Cqrs.Hosts.StartUp.Initialise
  langs:
  - csharp
  - vb
  name: StartUp
  nameWithType: StartUp
  fullName: Cqrs.Hosts.StartUp
  type: Class
  source:
    remote:
      path: Framework/Cqrs/Hosts/StartUp.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: StartUp
    path: Framework/Cqrs/Hosts/StartUp.cs
    startLine: 17
  assemblies:
  - Cqrs
  namespace: Cqrs.Hosts
  summary: "\nA startUp action for the <xref href=\"Cqrs.Hosts.CoreHost%601\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public class StartUp
    content.vb: Public Class StartUp
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Cqrs.Hosts.StartUp.DependencyResolverConfigurationFunction
  commentId: P:Cqrs.Hosts.StartUp.DependencyResolverConfigurationFunction
  id: DependencyResolverConfigurationFunction
  parent: Cqrs.Hosts.StartUp
  langs:
  - csharp
  - vb
  name: DependencyResolverConfigurationFunction
  nameWithType: StartUp.DependencyResolverConfigurationFunction
  fullName: Cqrs.Hosts.StartUp.DependencyResolverConfigurationFunction
  type: Property
  source:
    remote:
      path: Framework/Cqrs/Hosts/StartUp.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: DependencyResolverConfigurationFunction
    path: Framework/Cqrs/Hosts/StartUp.cs
    startLine: 22
  assemblies:
  - Cqrs
  namespace: Cqrs.Hosts
  summary: "\nThe <xref href=\"System.Action\" data-throw-if-not-resolved=\"false\"></xref> that will configure the <xref href=\"Cqrs.Configuration.DependencyResolver\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: protected Action DependencyResolverConfigurationFunction { get; set; }
    parameters: []
    return:
      type: System.Action
    content.vb: Protected Property DependencyResolverConfigurationFunction As Action
  overload: Cqrs.Hosts.StartUp.DependencyResolverConfigurationFunction*
  modifiers.csharp:
  - protected
  - get
  - set
  modifiers.vb:
  - Protected
- uid: Cqrs.Hosts.StartUp.#ctor(System.Action)
  commentId: M:Cqrs.Hosts.StartUp.#ctor(System.Action)
  id: '#ctor(System.Action)'
  parent: Cqrs.Hosts.StartUp
  langs:
  - csharp
  - vb
  name: StartUp(Action)
  nameWithType: StartUp.StartUp(Action)
  fullName: Cqrs.Hosts.StartUp.StartUp(System.Action)
  type: Constructor
  source:
    remote:
      path: Framework/Cqrs/Hosts/StartUp.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: .ctor
    path: Framework/Cqrs/Hosts/StartUp.cs
    startLine: 27
  assemblies:
  - Cqrs
  namespace: Cqrs.Hosts
  summary: "\nInstantiate a new instance of a <xref href=\"Cqrs.Hosts.StartUp\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public StartUp(Action dependencyResolverConfigurationFunction)
    parameters:
    - id: dependencyResolverConfigurationFunction
      type: System.Action
    content.vb: Public Sub New(dependencyResolverConfigurationFunction As Action)
  overload: Cqrs.Hosts.StartUp.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Cqrs.Hosts.StartUp.Initialise
  commentId: M:Cqrs.Hosts.StartUp.Initialise
  id: Initialise
  parent: Cqrs.Hosts.StartUp
  langs:
  - csharp
  - vb
  name: Initialise()
  nameWithType: StartUp.Initialise()
  fullName: Cqrs.Hosts.StartUp.Initialise()
  type: Method
  source:
    remote:
      path: Framework/Cqrs/Hosts/StartUp.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Initialise
    path: Framework/Cqrs/Hosts/StartUp.cs
    startLine: 35
  assemblies:
  - Cqrs
  namespace: Cqrs.Hosts
  summary: "\nInitialise by calling the <xref href=\"Cqrs.Hosts.StartUp.DependencyResolverConfigurationFunction\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public virtual void Initialise()
    content.vb: Public Overridable Sub Initialise
  overload: Cqrs.Hosts.StartUp.Initialise*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Cqrs.Hosts.CoreHost`1
  commentId: T:Cqrs.Hosts.CoreHost`1
  isExternal: false
  name: CoreHost<TAuthenticationToken>
  nameWithType: CoreHost<TAuthenticationToken>
  fullName: Cqrs.Hosts.CoreHost<TAuthenticationToken>
  nameWithType.vb: CoreHost(Of TAuthenticationToken)
  fullName.vb: Cqrs.Hosts.CoreHost(Of TAuthenticationToken)
  name.vb: CoreHost(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Hosts.CoreHost`1
    name: CoreHost
    nameWithType: CoreHost
    fullName: Cqrs.Hosts.CoreHost
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Hosts.CoreHost`1
    name: CoreHost
    nameWithType: CoreHost
    fullName: Cqrs.Hosts.CoreHost
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Hosts
  commentId: N:Cqrs.Hosts
  isExternal: false
  name: Cqrs.Hosts
  nameWithType: Cqrs.Hosts
  fullName: Cqrs.Hosts
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Action
  commentId: T:System.Action
  parent: System
  isExternal: true
  name: Action
  nameWithType: Action
  fullName: System.Action
- uid: Cqrs.Configuration.DependencyResolver
  commentId: T:Cqrs.Configuration.DependencyResolver
  parent: Cqrs.Configuration
  isExternal: false
  name: DependencyResolver
  nameWithType: DependencyResolver
  fullName: Cqrs.Configuration.DependencyResolver
- uid: Cqrs.Hosts.StartUp.DependencyResolverConfigurationFunction*
  commentId: Overload:Cqrs.Hosts.StartUp.DependencyResolverConfigurationFunction
  isExternal: false
  name: DependencyResolverConfigurationFunction
  nameWithType: StartUp.DependencyResolverConfigurationFunction
  fullName: Cqrs.Hosts.StartUp.DependencyResolverConfigurationFunction
- uid: Cqrs.Configuration
  commentId: N:Cqrs.Configuration
  isExternal: false
  name: Cqrs.Configuration
  nameWithType: Cqrs.Configuration
  fullName: Cqrs.Configuration
- uid: Cqrs.Hosts.StartUp
  commentId: T:Cqrs.Hosts.StartUp
  isExternal: false
  name: StartUp
  nameWithType: StartUp
  fullName: Cqrs.Hosts.StartUp
- uid: Cqrs.Hosts.StartUp.#ctor*
  commentId: Overload:Cqrs.Hosts.StartUp.#ctor
  isExternal: false
  name: StartUp
  nameWithType: StartUp.StartUp
  fullName: Cqrs.Hosts.StartUp.StartUp
- uid: Cqrs.Hosts.StartUp.DependencyResolverConfigurationFunction
  commentId: P:Cqrs.Hosts.StartUp.DependencyResolverConfigurationFunction
- uid: Cqrs.Hosts.StartUp.Initialise*
  commentId: Overload:Cqrs.Hosts.StartUp.Initialise
  isExternal: false
  name: Initialise
  nameWithType: StartUp.Initialise
  fullName: Cqrs.Hosts.StartUp.Initialise
