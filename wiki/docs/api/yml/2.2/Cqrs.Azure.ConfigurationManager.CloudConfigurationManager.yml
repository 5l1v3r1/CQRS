### YamlMime:ManagedReference
items:
- uid: Cqrs.Azure.ConfigurationManager.CloudConfigurationManager
  commentId: T:Cqrs.Azure.ConfigurationManager.CloudConfigurationManager
  id: CloudConfigurationManager
  parent: Cqrs.Azure.ConfigurationManager
  children:
  - Cqrs.Azure.ConfigurationManager.CloudConfigurationManager.GetSetting(System.String)
  langs:
  - csharp
  - vb
  name: CloudConfigurationManager
  nameWithType: CloudConfigurationManager
  fullName: Cqrs.Azure.ConfigurationManager.CloudConfigurationManager
  type: Class
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.ConfigurationManager/CloudConfigurationManager.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: CloudConfigurationManager
    path: Framework/Azure/Cqrs.Azure.ConfigurationManager/CloudConfigurationManager.cs
    startLine: 6
  assemblies:
  - Cqrs.Azure.ConfigurationManager
  namespace: Cqrs.Azure.ConfigurationManager
  summary: "\nProvides access to configuration settings from the Azure Portal application settings. If no value is stored there it falls back to reading \napp settings of an app.config or web.config... i.e. <xref href=\"System.Configuration.ConfigurationManager.AppSettings\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: 'public class CloudConfigurationManager : ConfigurationManager, IConfigurationManager'
    content.vb: >-
      Public Class CloudConfigurationManager
          Inherits ConfigurationManager
          Implements IConfigurationManager
  inheritance:
  - System.Object
  - Cqrs.Configuration.ConfigurationManager
  implements:
  - Cqrs.Configuration.IConfigurationManager
  inheritedMembers:
  - Cqrs.Configuration.ConfigurationManager.TryGetSetting(System.String,System.String@)
  - Cqrs.Configuration.ConfigurationManager.TryGetSetting(System.String,System.Boolean@)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Cqrs.Azure.ConfigurationManager.CloudConfigurationManager.GetSetting(System.String)
  commentId: M:Cqrs.Azure.ConfigurationManager.CloudConfigurationManager.GetSetting(System.String)
  id: GetSetting(System.String)
  parent: Cqrs.Azure.ConfigurationManager.CloudConfigurationManager
  langs:
  - csharp
  - vb
  name: GetSetting(String)
  nameWithType: CloudConfigurationManager.GetSetting(String)
  fullName: Cqrs.Azure.ConfigurationManager.CloudConfigurationManager.GetSetting(System.String)
  type: Method
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.ConfigurationManager/CloudConfigurationManager.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: GetSetting
    path: Framework/Azure/Cqrs.Azure.ConfigurationManager/CloudConfigurationManager.cs
    startLine: 14
  assemblies:
  - Cqrs.Azure.ConfigurationManager
  namespace: Cqrs.Azure.ConfigurationManager
  summary: "\nRead the setting named <code data-dev-comment-type=\"paramref\">key</code>.\n"
  example: []
  syntax:
    content: public override string GetSetting(string key)
    parameters:
    - id: key
      type: System.String
      description: The key (or name) of the setting to read.
    return:
      type: System.String
    content.vb: Public Overrides Function GetSetting(key As String) As String
  overridden: Cqrs.Configuration.ConfigurationManager.GetSetting(System.String)
  overload: Cqrs.Azure.ConfigurationManager.CloudConfigurationManager.GetSetting*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.Configuration.ConfigurationManager.AppSettings
  commentId: P:System.Configuration.ConfigurationManager.AppSettings
- uid: Cqrs.Azure.ConfigurationManager
  commentId: N:Cqrs.Azure.ConfigurationManager
  isExternal: false
  name: Cqrs.Azure.ConfigurationManager
  nameWithType: Cqrs.Azure.ConfigurationManager
  fullName: Cqrs.Azure.ConfigurationManager
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Cqrs.Configuration.ConfigurationManager
  commentId: T:Cqrs.Configuration.ConfigurationManager
  parent: Cqrs.Configuration
  isExternal: false
  name: ConfigurationManager
  nameWithType: ConfigurationManager
  fullName: Cqrs.Configuration.ConfigurationManager
- uid: Cqrs.Configuration.IConfigurationManager
  commentId: T:Cqrs.Configuration.IConfigurationManager
  parent: Cqrs.Configuration
  isExternal: false
  name: IConfigurationManager
  nameWithType: IConfigurationManager
  fullName: Cqrs.Configuration.IConfigurationManager
- uid: Cqrs.Configuration.ConfigurationManager.TryGetSetting(System.String,System.String@)
  commentId: M:Cqrs.Configuration.ConfigurationManager.TryGetSetting(System.String,System.String@)
  parent: Cqrs.Configuration.ConfigurationManager
  isExternal: true
  name: TryGetSetting(String, String)
  nameWithType: ConfigurationManager.TryGetSetting(String, String)
  fullName: Cqrs.Configuration.ConfigurationManager.TryGetSetting(System.String, System.String)
  spec.csharp:
  - uid: Cqrs.Configuration.ConfigurationManager.TryGetSetting(System.String,System.String@)
    name: TryGetSetting
    nameWithType: ConfigurationManager.TryGetSetting
    fullName: Cqrs.Configuration.ConfigurationManager.TryGetSetting
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Configuration.ConfigurationManager.TryGetSetting(System.String,System.String@)
    name: TryGetSetting
    nameWithType: ConfigurationManager.TryGetSetting
    fullName: Cqrs.Configuration.ConfigurationManager.TryGetSetting
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Configuration.ConfigurationManager.TryGetSetting(System.String,System.Boolean@)
  commentId: M:Cqrs.Configuration.ConfigurationManager.TryGetSetting(System.String,System.Boolean@)
  parent: Cqrs.Configuration.ConfigurationManager
  isExternal: true
  name: TryGetSetting(String, Boolean)
  nameWithType: ConfigurationManager.TryGetSetting(String, Boolean)
  fullName: Cqrs.Configuration.ConfigurationManager.TryGetSetting(System.String, System.Boolean)
  spec.csharp:
  - uid: Cqrs.Configuration.ConfigurationManager.TryGetSetting(System.String,System.Boolean@)
    name: TryGetSetting
    nameWithType: ConfigurationManager.TryGetSetting
    fullName: Cqrs.Configuration.ConfigurationManager.TryGetSetting
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Configuration.ConfigurationManager.TryGetSetting(System.String,System.Boolean@)
    name: TryGetSetting
    nameWithType: ConfigurationManager.TryGetSetting
    fullName: Cqrs.Configuration.ConfigurationManager.TryGetSetting
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Cqrs.Configuration
  commentId: N:Cqrs.Configuration
  isExternal: false
  name: Cqrs.Configuration
  nameWithType: Cqrs.Configuration
  fullName: Cqrs.Configuration
- uid: Cqrs.Configuration.ConfigurationManager.GetSetting(System.String)
  commentId: M:Cqrs.Configuration.ConfigurationManager.GetSetting(System.String)
  parent: Cqrs.Configuration.ConfigurationManager
  isExternal: true
  name: GetSetting(String)
  nameWithType: ConfigurationManager.GetSetting(String)
  fullName: Cqrs.Configuration.ConfigurationManager.GetSetting(System.String)
  spec.csharp:
  - uid: Cqrs.Configuration.ConfigurationManager.GetSetting(System.String)
    name: GetSetting
    nameWithType: ConfigurationManager.GetSetting
    fullName: Cqrs.Configuration.ConfigurationManager.GetSetting
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Configuration.ConfigurationManager.GetSetting(System.String)
    name: GetSetting
    nameWithType: ConfigurationManager.GetSetting
    fullName: Cqrs.Configuration.ConfigurationManager.GetSetting
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.ConfigurationManager.CloudConfigurationManager.GetSetting*
  commentId: Overload:Cqrs.Azure.ConfigurationManager.CloudConfigurationManager.GetSetting
  isExternal: false
  name: GetSetting
  nameWithType: CloudConfigurationManager.GetSetting
  fullName: Cqrs.Azure.ConfigurationManager.CloudConfigurationManager.GetSetting
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
