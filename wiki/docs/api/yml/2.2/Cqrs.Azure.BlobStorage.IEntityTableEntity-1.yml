### YamlMime:ManagedReference
items:
- uid: Cqrs.Azure.BlobStorage.IEntityTableEntity`1
  commentId: T:Cqrs.Azure.BlobStorage.IEntityTableEntity`1
  id: IEntityTableEntity`1
  parent: Cqrs.Azure.BlobStorage
  children:
  - Cqrs.Azure.BlobStorage.IEntityTableEntity`1.Entity
  langs:
  - csharp
  - vb
  name: IEntityTableEntity<TEntity>
  nameWithType: IEntityTableEntity<TEntity>
  fullName: Cqrs.Azure.BlobStorage.IEntityTableEntity<TEntity>
  type: Interface
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.BlobStorage/IEntityTableEntity.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: IEntityTableEntity
    path: Framework/Azure/Cqrs.Azure.BlobStorage/IEntityTableEntity.cs
    startLine: 13
  assemblies:
  - Cqrs.Azure.BlobStorage
  namespace: Cqrs.Azure.BlobStorage
  summary: "\nA projection/entity especially designed to work with Azure Table storage.\n"
  example: []
  syntax:
    content: public interface IEntityTableEntity<TEntity>
    typeParameters:
    - id: TEntity
    content.vb: Public Interface IEntityTableEntity(Of TEntity)
  nameWithType.vb: IEntityTableEntity(Of TEntity)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: Cqrs.Azure.BlobStorage.IEntityTableEntity(Of TEntity)
  name.vb: IEntityTableEntity(Of TEntity)
- uid: Cqrs.Azure.BlobStorage.IEntityTableEntity`1.Entity
  commentId: P:Cqrs.Azure.BlobStorage.IEntityTableEntity`1.Entity
  id: Entity
  parent: Cqrs.Azure.BlobStorage.IEntityTableEntity`1
  langs:
  - csharp
  - vb
  name: Entity
  nameWithType: IEntityTableEntity<TEntity>.Entity
  fullName: Cqrs.Azure.BlobStorage.IEntityTableEntity<TEntity>.Entity
  type: Property
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.BlobStorage/IEntityTableEntity.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Entity
    path: Framework/Azure/Cqrs.Azure.BlobStorage/IEntityTableEntity.cs
    startLine: 18
  assemblies:
  - Cqrs.Azure.BlobStorage
  namespace: Cqrs.Azure.BlobStorage
  summary: "\nGets or sets the <code data-dev-comment-type=\"typeparamref\">TEntity</code>.\n"
  example: []
  syntax:
    content: TEntity Entity { get; set; }
    parameters: []
    return:
      type: '{TEntity}'
    content.vb: Property Entity As TEntity
  overload: Cqrs.Azure.BlobStorage.IEntityTableEntity`1.Entity*
  nameWithType.vb: IEntityTableEntity(Of TEntity).Entity
  modifiers.csharp:
  - get
  - set
  fullName.vb: Cqrs.Azure.BlobStorage.IEntityTableEntity(Of TEntity).Entity
references:
- uid: Cqrs.Azure.BlobStorage
  commentId: N:Cqrs.Azure.BlobStorage
  isExternal: false
  name: Cqrs.Azure.BlobStorage
  nameWithType: Cqrs.Azure.BlobStorage
  fullName: Cqrs.Azure.BlobStorage
- uid: Cqrs.Azure.BlobStorage.IEntityTableEntity`1.Entity*
  commentId: Overload:Cqrs.Azure.BlobStorage.IEntityTableEntity`1.Entity
  isExternal: false
  name: Entity
  nameWithType: IEntityTableEntity<TEntity>.Entity
  fullName: Cqrs.Azure.BlobStorage.IEntityTableEntity<TEntity>.Entity
  nameWithType.vb: IEntityTableEntity(Of TEntity).Entity
  fullName.vb: Cqrs.Azure.BlobStorage.IEntityTableEntity(Of TEntity).Entity
- uid: '{TEntity}'
  commentId: '!:TEntity'
  definition: TEntity
  name: TEntity
  nameWithType: TEntity
  fullName: TEntity
- uid: TEntity
  isExternal: false
  name: TEntity
  nameWithType: TEntity
  fullName: TEntity
