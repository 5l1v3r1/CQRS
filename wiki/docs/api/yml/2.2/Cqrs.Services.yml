### YamlMime:ManagedReference
items:
- uid: Cqrs.Services
  commentId: N:Cqrs.Services
  id: Cqrs.Services
  children:
  - Cqrs.Services.BasicServiceParameterResolver`2
  - Cqrs.Services.EventService`1
  - Cqrs.Services.IEventDataResolver
  - Cqrs.Services.IEventService`1
  - Cqrs.Services.IServiceParameterResolver
  - Cqrs.Services.IServiceRequest`1
  - Cqrs.Services.IServiceRequestWithData`2
  - Cqrs.Services.IServiceResponse
  - Cqrs.Services.IServiceResponseWithResultData`1
  - Cqrs.Services.ISingleSignOnTokenResolver
  - Cqrs.Services.IUnitOfWorkService
  - Cqrs.Services.IVersionedServiceResponse
  - Cqrs.Services.ServiceChannelFactory`1
  - Cqrs.Services.ServiceParameterResolver`2
  - Cqrs.Services.ServiceRequest`1
  - Cqrs.Services.ServiceRequestWithData`2
  - Cqrs.Services.ServiceResponse
  - Cqrs.Services.ServiceResponseStateType
  - Cqrs.Services.ServiceResponseWithResultData`1
  - Cqrs.Services.UnitOfWorkService`1
  - Cqrs.Services.WcfDataContractResolverConfiguration
  - Cqrs.Services.WcfDataContractResolverConfiguration.RegistrationHandling
  langs:
  - csharp
  - vb
  name: Cqrs.Services
  nameWithType: Cqrs.Services
  fullName: Cqrs.Services
  type: Namespace
  assemblies:
  - Cqrs
references:
- uid: Cqrs.Services.BasicServiceParameterResolver`2
  commentId: T:Cqrs.Services.BasicServiceParameterResolver`2
  isExternal: false
  name: BasicServiceParameterResolver<TServiceParameter, TAuthenticationToken>
  nameWithType: BasicServiceParameterResolver<TServiceParameter, TAuthenticationToken>
  fullName: Cqrs.Services.BasicServiceParameterResolver<TServiceParameter, TAuthenticationToken>
  nameWithType.vb: BasicServiceParameterResolver(Of TServiceParameter, TAuthenticationToken)
  fullName.vb: Cqrs.Services.BasicServiceParameterResolver(Of TServiceParameter, TAuthenticationToken)
  name.vb: BasicServiceParameterResolver(Of TServiceParameter, TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Services.BasicServiceParameterResolver`2
    name: BasicServiceParameterResolver
    nameWithType: BasicServiceParameterResolver
    fullName: Cqrs.Services.BasicServiceParameterResolver
  - name: <
    nameWithType: <
    fullName: <
  - name: TServiceParameter
    nameWithType: TServiceParameter
    fullName: TServiceParameter
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Services.BasicServiceParameterResolver`2
    name: BasicServiceParameterResolver
    nameWithType: BasicServiceParameterResolver
    fullName: Cqrs.Services.BasicServiceParameterResolver
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TServiceParameter
    nameWithType: TServiceParameter
    fullName: TServiceParameter
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Services.IEventDataResolver
  commentId: T:Cqrs.Services.IEventDataResolver
  parent: Cqrs.Services
  isExternal: false
  name: IEventDataResolver
  nameWithType: IEventDataResolver
  fullName: Cqrs.Services.IEventDataResolver
- uid: Cqrs.Services.EventService`1
  commentId: T:Cqrs.Services.EventService`1
  isExternal: false
  name: EventService<TAuthenticationToken>
  nameWithType: EventService<TAuthenticationToken>
  fullName: Cqrs.Services.EventService<TAuthenticationToken>
  nameWithType.vb: EventService(Of TAuthenticationToken)
  fullName.vb: Cqrs.Services.EventService(Of TAuthenticationToken)
  name.vb: EventService(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Services.EventService`1
    name: EventService
    nameWithType: EventService
    fullName: Cqrs.Services.EventService
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Services.EventService`1
    name: EventService
    nameWithType: EventService
    fullName: Cqrs.Services.EventService
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Services.IEventService`1
  commentId: T:Cqrs.Services.IEventService`1
  isExternal: false
  name: IEventService<TAuthenticationToken>
  nameWithType: IEventService<TAuthenticationToken>
  fullName: Cqrs.Services.IEventService<TAuthenticationToken>
  nameWithType.vb: IEventService(Of TAuthenticationToken)
  fullName.vb: Cqrs.Services.IEventService(Of TAuthenticationToken)
  name.vb: IEventService(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Services.IEventService`1
    name: IEventService
    nameWithType: IEventService
    fullName: Cqrs.Services.IEventService
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Services.IEventService`1
    name: IEventService
    nameWithType: IEventService
    fullName: Cqrs.Services.IEventService
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Services.IServiceParameterResolver
  commentId: T:Cqrs.Services.IServiceParameterResolver
  parent: Cqrs.Services
  isExternal: false
  name: IServiceParameterResolver
  nameWithType: IServiceParameterResolver
  fullName: Cqrs.Services.IServiceParameterResolver
- uid: Cqrs.Services.IServiceRequest`1
  commentId: T:Cqrs.Services.IServiceRequest`1
  isExternal: false
  name: IServiceRequest<TAuthenticationToken>
  nameWithType: IServiceRequest<TAuthenticationToken>
  fullName: Cqrs.Services.IServiceRequest<TAuthenticationToken>
  nameWithType.vb: IServiceRequest(Of TAuthenticationToken)
  fullName.vb: Cqrs.Services.IServiceRequest(Of TAuthenticationToken)
  name.vb: IServiceRequest(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Services.IServiceRequest`1
    name: IServiceRequest
    nameWithType: IServiceRequest
    fullName: Cqrs.Services.IServiceRequest
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Services.IServiceRequest`1
    name: IServiceRequest
    nameWithType: IServiceRequest
    fullName: Cqrs.Services.IServiceRequest
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Services.IServiceRequestWithData`2
  commentId: T:Cqrs.Services.IServiceRequestWithData`2
  isExternal: false
  name: IServiceRequestWithData<TAuthenticationToken, TData>
  nameWithType: IServiceRequestWithData<TAuthenticationToken, TData>
  fullName: Cqrs.Services.IServiceRequestWithData<TAuthenticationToken, TData>
  nameWithType.vb: IServiceRequestWithData(Of TAuthenticationToken, TData)
  fullName.vb: Cqrs.Services.IServiceRequestWithData(Of TAuthenticationToken, TData)
  name.vb: IServiceRequestWithData(Of TAuthenticationToken, TData)
  spec.csharp:
  - uid: Cqrs.Services.IServiceRequestWithData`2
    name: IServiceRequestWithData
    nameWithType: IServiceRequestWithData
    fullName: Cqrs.Services.IServiceRequestWithData
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Services.IServiceRequestWithData`2
    name: IServiceRequestWithData
    nameWithType: IServiceRequestWithData
    fullName: Cqrs.Services.IServiceRequestWithData
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Services.IServiceResponse
  commentId: T:Cqrs.Services.IServiceResponse
  parent: Cqrs.Services
  isExternal: false
  name: IServiceResponse
  nameWithType: IServiceResponse
  fullName: Cqrs.Services.IServiceResponse
- uid: Cqrs.Services.IServiceResponseWithResultData`1
  commentId: T:Cqrs.Services.IServiceResponseWithResultData`1
  isExternal: false
  name: IServiceResponseWithResultData<TResultData>
  nameWithType: IServiceResponseWithResultData<TResultData>
  fullName: Cqrs.Services.IServiceResponseWithResultData<TResultData>
  nameWithType.vb: IServiceResponseWithResultData(Of TResultData)
  fullName.vb: Cqrs.Services.IServiceResponseWithResultData(Of TResultData)
  name.vb: IServiceResponseWithResultData(Of TResultData)
  spec.csharp:
  - uid: Cqrs.Services.IServiceResponseWithResultData`1
    name: IServiceResponseWithResultData
    nameWithType: IServiceResponseWithResultData
    fullName: Cqrs.Services.IServiceResponseWithResultData
  - name: <
    nameWithType: <
    fullName: <
  - name: TResultData
    nameWithType: TResultData
    fullName: TResultData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Services.IServiceResponseWithResultData`1
    name: IServiceResponseWithResultData
    nameWithType: IServiceResponseWithResultData
    fullName: Cqrs.Services.IServiceResponseWithResultData
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResultData
    nameWithType: TResultData
    fullName: TResultData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Services.ISingleSignOnTokenResolver
  commentId: T:Cqrs.Services.ISingleSignOnTokenResolver
  parent: Cqrs.Services
  isExternal: false
  name: ISingleSignOnTokenResolver
  nameWithType: ISingleSignOnTokenResolver
  fullName: Cqrs.Services.ISingleSignOnTokenResolver
- uid: Cqrs.Services.IUnitOfWorkService
  commentId: T:Cqrs.Services.IUnitOfWorkService
  parent: Cqrs.Services
  isExternal: false
  name: IUnitOfWorkService
  nameWithType: IUnitOfWorkService
  fullName: Cqrs.Services.IUnitOfWorkService
- uid: Cqrs.Services.IVersionedServiceResponse
  commentId: T:Cqrs.Services.IVersionedServiceResponse
  parent: Cqrs.Services
  isExternal: false
  name: IVersionedServiceResponse
  nameWithType: IVersionedServiceResponse
  fullName: Cqrs.Services.IVersionedServiceResponse
- uid: Cqrs.Services.ServiceChannelFactory`1
  commentId: T:Cqrs.Services.ServiceChannelFactory`1
  isExternal: false
  name: ServiceChannelFactory<TService>
  nameWithType: ServiceChannelFactory<TService>
  fullName: Cqrs.Services.ServiceChannelFactory<TService>
  nameWithType.vb: ServiceChannelFactory(Of TService)
  fullName.vb: Cqrs.Services.ServiceChannelFactory(Of TService)
  name.vb: ServiceChannelFactory(Of TService)
  spec.csharp:
  - uid: Cqrs.Services.ServiceChannelFactory`1
    name: ServiceChannelFactory
    nameWithType: ServiceChannelFactory
    fullName: Cqrs.Services.ServiceChannelFactory
  - name: <
    nameWithType: <
    fullName: <
  - name: TService
    nameWithType: TService
    fullName: TService
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Services.ServiceChannelFactory`1
    name: ServiceChannelFactory
    nameWithType: ServiceChannelFactory
    fullName: Cqrs.Services.ServiceChannelFactory
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TService
    nameWithType: TService
    fullName: TService
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Services.ServiceParameterResolver`2
  commentId: T:Cqrs.Services.ServiceParameterResolver`2
  isExternal: false
  name: ServiceParameterResolver<TServiceParameter, TSingleSignOnTokenResolver>
  nameWithType: ServiceParameterResolver<TServiceParameter, TSingleSignOnTokenResolver>
  fullName: Cqrs.Services.ServiceParameterResolver<TServiceParameter, TSingleSignOnTokenResolver>
  nameWithType.vb: ServiceParameterResolver(Of TServiceParameter, TSingleSignOnTokenResolver)
  fullName.vb: Cqrs.Services.ServiceParameterResolver(Of TServiceParameter, TSingleSignOnTokenResolver)
  name.vb: ServiceParameterResolver(Of TServiceParameter, TSingleSignOnTokenResolver)
  spec.csharp:
  - uid: Cqrs.Services.ServiceParameterResolver`2
    name: ServiceParameterResolver
    nameWithType: ServiceParameterResolver
    fullName: Cqrs.Services.ServiceParameterResolver
  - name: <
    nameWithType: <
    fullName: <
  - name: TServiceParameter
    nameWithType: TServiceParameter
    fullName: TServiceParameter
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TSingleSignOnTokenResolver
    nameWithType: TSingleSignOnTokenResolver
    fullName: TSingleSignOnTokenResolver
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Services.ServiceParameterResolver`2
    name: ServiceParameterResolver
    nameWithType: ServiceParameterResolver
    fullName: Cqrs.Services.ServiceParameterResolver
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TServiceParameter
    nameWithType: TServiceParameter
    fullName: TServiceParameter
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TSingleSignOnTokenResolver
    nameWithType: TSingleSignOnTokenResolver
    fullName: TSingleSignOnTokenResolver
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Services.ServiceRequest`1
  commentId: T:Cqrs.Services.ServiceRequest`1
  isExternal: false
  name: ServiceRequest<TAuthenticationToken>
  nameWithType: ServiceRequest<TAuthenticationToken>
  fullName: Cqrs.Services.ServiceRequest<TAuthenticationToken>
  nameWithType.vb: ServiceRequest(Of TAuthenticationToken)
  fullName.vb: Cqrs.Services.ServiceRequest(Of TAuthenticationToken)
  name.vb: ServiceRequest(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Services.ServiceRequest`1
    name: ServiceRequest
    nameWithType: ServiceRequest
    fullName: Cqrs.Services.ServiceRequest
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Services.ServiceRequest`1
    name: ServiceRequest
    nameWithType: ServiceRequest
    fullName: Cqrs.Services.ServiceRequest
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Services.ServiceRequestWithData`2
  commentId: T:Cqrs.Services.ServiceRequestWithData`2
  isExternal: false
  name: ServiceRequestWithData<TAuthenticationToken, TData>
  nameWithType: ServiceRequestWithData<TAuthenticationToken, TData>
  fullName: Cqrs.Services.ServiceRequestWithData<TAuthenticationToken, TData>
  nameWithType.vb: ServiceRequestWithData(Of TAuthenticationToken, TData)
  fullName.vb: Cqrs.Services.ServiceRequestWithData(Of TAuthenticationToken, TData)
  name.vb: ServiceRequestWithData(Of TAuthenticationToken, TData)
  spec.csharp:
  - uid: Cqrs.Services.ServiceRequestWithData`2
    name: ServiceRequestWithData
    nameWithType: ServiceRequestWithData
    fullName: Cqrs.Services.ServiceRequestWithData
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Services.ServiceRequestWithData`2
    name: ServiceRequestWithData
    nameWithType: ServiceRequestWithData
    fullName: Cqrs.Services.ServiceRequestWithData
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Services.ServiceResponse
  commentId: T:Cqrs.Services.ServiceResponse
  parent: Cqrs.Services
  isExternal: false
  name: ServiceResponse
  nameWithType: ServiceResponse
  fullName: Cqrs.Services.ServiceResponse
- uid: Cqrs.Services.ServiceResponseStateType
  commentId: T:Cqrs.Services.ServiceResponseStateType
  parent: Cqrs.Services
  isExternal: false
  name: ServiceResponseStateType
  nameWithType: ServiceResponseStateType
  fullName: Cqrs.Services.ServiceResponseStateType
- uid: Cqrs.Services.ServiceResponseWithResultData`1
  commentId: T:Cqrs.Services.ServiceResponseWithResultData`1
  isExternal: false
  name: ServiceResponseWithResultData<TResultData>
  nameWithType: ServiceResponseWithResultData<TResultData>
  fullName: Cqrs.Services.ServiceResponseWithResultData<TResultData>
  nameWithType.vb: ServiceResponseWithResultData(Of TResultData)
  fullName.vb: Cqrs.Services.ServiceResponseWithResultData(Of TResultData)
  name.vb: ServiceResponseWithResultData(Of TResultData)
  spec.csharp:
  - uid: Cqrs.Services.ServiceResponseWithResultData`1
    name: ServiceResponseWithResultData
    nameWithType: ServiceResponseWithResultData
    fullName: Cqrs.Services.ServiceResponseWithResultData
  - name: <
    nameWithType: <
    fullName: <
  - name: TResultData
    nameWithType: TResultData
    fullName: TResultData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Services.ServiceResponseWithResultData`1
    name: ServiceResponseWithResultData
    nameWithType: ServiceResponseWithResultData
    fullName: Cqrs.Services.ServiceResponseWithResultData
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResultData
    nameWithType: TResultData
    fullName: TResultData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Services.UnitOfWorkService`1
  commentId: T:Cqrs.Services.UnitOfWorkService`1
  isExternal: false
  name: UnitOfWorkService<TAuthenticationToken>
  nameWithType: UnitOfWorkService<TAuthenticationToken>
  fullName: Cqrs.Services.UnitOfWorkService<TAuthenticationToken>
  nameWithType.vb: UnitOfWorkService(Of TAuthenticationToken)
  fullName.vb: Cqrs.Services.UnitOfWorkService(Of TAuthenticationToken)
  name.vb: UnitOfWorkService(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Services.UnitOfWorkService`1
    name: UnitOfWorkService
    nameWithType: UnitOfWorkService
    fullName: Cqrs.Services.UnitOfWorkService
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Services.UnitOfWorkService`1
    name: UnitOfWorkService
    nameWithType: UnitOfWorkService
    fullName: Cqrs.Services.UnitOfWorkService
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Services.WcfDataContractResolverConfiguration
  commentId: T:Cqrs.Services.WcfDataContractResolverConfiguration
  parent: Cqrs.Services
  isExternal: false
  name: WcfDataContractResolverConfiguration
  nameWithType: WcfDataContractResolverConfiguration
  fullName: Cqrs.Services.WcfDataContractResolverConfiguration
- uid: Cqrs.Services.WcfDataContractResolverConfiguration.RegistrationHandling
  commentId: T:Cqrs.Services.WcfDataContractResolverConfiguration.RegistrationHandling
  parent: Cqrs.Services
  isExternal: false
  name: WcfDataContractResolverConfiguration.RegistrationHandling
  nameWithType: WcfDataContractResolverConfiguration.RegistrationHandling
  fullName: Cqrs.Services.WcfDataContractResolverConfiguration.RegistrationHandling
- uid: Cqrs.Services
  commentId: N:Cqrs.Services
  isExternal: false
  name: Cqrs.Services
  nameWithType: Cqrs.Services
  fullName: Cqrs.Services
