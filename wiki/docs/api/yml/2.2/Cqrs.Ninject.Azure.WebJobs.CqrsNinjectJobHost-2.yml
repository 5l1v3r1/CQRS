### YamlMime:ManagedReference
items:
- uid: Cqrs.Ninject.Azure.WebJobs.CqrsNinjectJobHost`2
  commentId: T:Cqrs.Ninject.Azure.WebJobs.CqrsNinjectJobHost`2
  id: CqrsNinjectJobHost`2
  parent: Cqrs.Ninject.Azure.WebJobs
  children:
  - Cqrs.Ninject.Azure.WebJobs.CqrsNinjectJobHost`2.CoreHost
  - Cqrs.Ninject.Azure.WebJobs.CqrsNinjectJobHost`2.PreRunAndBlockAction
  - Cqrs.Ninject.Azure.WebJobs.CqrsNinjectJobHost`2.StartHost
  langs:
  - csharp
  - vb
  name: CqrsNinjectJobHost<TAuthenticationToken, TAuthenticationTokenHelper>
  nameWithType: CqrsNinjectJobHost<TAuthenticationToken, TAuthenticationTokenHelper>
  fullName: Cqrs.Ninject.Azure.WebJobs.CqrsNinjectJobHost<TAuthenticationToken, TAuthenticationTokenHelper>
  type: Class
  source:
    remote:
      path: Framework/Ninject/Azure/Cqrs.Ninject.Azure.WebJobs/CqrsNinjectJobHost.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: CqrsNinjectJobHost
    path: Framework/Ninject/Azure/Cqrs.Ninject.Azure.WebJobs/CqrsNinjectJobHost.cs
    startLine: 20
  assemblies:
  - Cqrs.Ninject.Azure.WebJobs
  namespace: Cqrs.Ninject.Azure.WebJobs
  summary: "\nExecute command and event handlers in an Azure WebJob using Ninject\n"
  example: []
  syntax:
    content: 'public class CqrsNinjectJobHost<TAuthenticationToken, TAuthenticationTokenHelper> : CqrsWebHost<TAuthenticationToken, TAuthenticationTokenHelper, WebJobHostModule> where TAuthenticationTokenHelper : class, IAuthenticationTokenHelper<TAuthenticationToken>'
    typeParameters:
    - id: TAuthenticationToken
    - id: TAuthenticationTokenHelper
    content.vb: >-
      Public Class CqrsNinjectJobHost(Of TAuthenticationToken, TAuthenticationTokenHelper As {Class, IAuthenticationTokenHelper(Of TAuthenticationToken)})

          Inherits CqrsWebHost(Of TAuthenticationToken, TAuthenticationTokenHelper, WebJobHostModule)
  inheritance:
  - System.Object
  - Cqrs.Hosts.CoreHost{{TAuthenticationToken}}
  - Cqrs.Azure.ConfigurationManager.TelemetryCoreHost{{TAuthenticationToken}}
  - Cqrs.Ninject.Azure.Wcf.CqrsWebHost{{TAuthenticationToken},{TAuthenticationTokenHelper},Cqrs.Ninject.Azure.WebJobs.Configuration.WebJobHostModule}
  inheritedMembers:
  - Cqrs.Ninject.Azure.Wcf.CqrsWebHost{{TAuthenticationToken},{TAuthenticationTokenHelper},Cqrs.Ninject.Azure.WebJobs.Configuration.WebJobHostModule}.ConfigureDefaultDependencyResolver
  - Cqrs.Ninject.Azure.Wcf.CqrsWebHost{{TAuthenticationToken},{TAuthenticationTokenHelper},Cqrs.Ninject.Azure.WebJobs.Configuration.WebJobHostModule}.GetSupplementaryModules
  - Cqrs.Ninject.Azure.Wcf.CqrsWebHost{{TAuthenticationToken},{TAuthenticationTokenHelper},Cqrs.Ninject.Azure.WebJobs.Configuration.WebJobHostModule}.GetCommandBusModules
  - Cqrs.Ninject.Azure.Wcf.CqrsWebHost{{TAuthenticationToken},{TAuthenticationTokenHelper},Cqrs.Ninject.Azure.WebJobs.Configuration.WebJobHostModule}.GetEventBusModules
  - Cqrs.Ninject.Azure.Wcf.CqrsWebHost{{TAuthenticationToken},{TAuthenticationTokenHelper},Cqrs.Ninject.Azure.WebJobs.Configuration.WebJobHostModule}.GetEventStoreModules
  - Cqrs.Azure.ConfigurationManager.TelemetryCoreHost{{TAuthenticationToken}}._configurationManager
  - Cqrs.Azure.ConfigurationManager.TelemetryCoreHost{{TAuthenticationToken}}.ConfigurationManager
  - Cqrs.Azure.ConfigurationManager.TelemetryCoreHost{{TAuthenticationToken}}.TelemetryClient
  - Cqrs.Azure.ConfigurationManager.TelemetryCoreHost{{TAuthenticationToken}}.ConfigureTelemetry
  - Cqrs.Azure.ConfigurationManager.TelemetryCoreHost{{TAuthenticationToken}}.Run(System.Action)
  - Cqrs.Azure.ConfigurationManager.TelemetryCoreHost{{TAuthenticationToken}}.PrepareSecurityProtocol
  - Cqrs.Azure.ConfigurationManager.TelemetryCoreHost{{TAuthenticationToken}}.Prepare
  - Cqrs.Azure.ConfigurationManager.TelemetryCoreHost{{TAuthenticationToken}}.Start
  - Cqrs.Hosts.CoreHost{{TAuthenticationToken}}.HandlerTypes
  - Cqrs.Hosts.CoreHost{{TAuthenticationToken}}.EventBus
  - Cqrs.Hosts.CoreHost{{TAuthenticationToken}}.CommandBus
  - Cqrs.Hosts.CoreHost{{TAuthenticationToken}}.TelemetryName
  - Cqrs.Hosts.CoreHost{{TAuthenticationToken}}.CorrelationIdHelper
  - Cqrs.Hosts.CoreHost{{TAuthenticationToken}}.Logger
  - Cqrs.Hosts.CoreHost{{TAuthenticationToken}}.ConfigureDefaultDependencyResolver
  - Cqrs.Hosts.CoreHost{{TAuthenticationToken}}.ManuallyRegisterEventHandler``1(System.Action{{TMessage}},System.Boolean)
  - Cqrs.Hosts.CoreHost{{TAuthenticationToken}}.ManuallyRegisterCommandHandler``1(System.Action{{TMessage}},System.Boolean)
  - Cqrs.Hosts.CoreHost{{TAuthenticationToken}}.StartBusRegistrar
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: CqrsNinjectJobHost(Of TAuthenticationToken, TAuthenticationTokenHelper)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Cqrs.Ninject.Azure.WebJobs.CqrsNinjectJobHost(Of TAuthenticationToken, TAuthenticationTokenHelper)
  name.vb: CqrsNinjectJobHost(Of TAuthenticationToken, TAuthenticationTokenHelper)
- uid: Cqrs.Ninject.Azure.WebJobs.CqrsNinjectJobHost`2.CoreHost
  commentId: P:Cqrs.Ninject.Azure.WebJobs.CqrsNinjectJobHost`2.CoreHost
  id: CoreHost
  parent: Cqrs.Ninject.Azure.WebJobs.CqrsNinjectJobHost`2
  langs:
  - csharp
  - vb
  name: CoreHost
  nameWithType: CqrsNinjectJobHost<TAuthenticationToken, TAuthenticationTokenHelper>.CoreHost
  fullName: Cqrs.Ninject.Azure.WebJobs.CqrsNinjectJobHost<TAuthenticationToken, TAuthenticationTokenHelper>.CoreHost
  type: Property
  source:
    remote:
      path: Framework/Ninject/Azure/Cqrs.Ninject.Azure.WebJobs/CqrsNinjectJobHost.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: CoreHost
    path: Framework/Ninject/Azure/Cqrs.Ninject.Azure.WebJobs/CqrsNinjectJobHost.cs
    startLine: 27
  assemblies:
  - Cqrs.Ninject.Azure.WebJobs
  namespace: Cqrs.Ninject.Azure.WebJobs
  summary: "\nThe <xref href=\"Cqrs.Ninject.Azure.WebJobs.CqrsNinjectJobHost%602.CoreHost\" data-throw-if-not-resolved=\"false\"></xref> to run, WebJobs are console apps and console apps start via a static method, this is the instance\nthat static method will actually run.\n"
  example: []
  syntax:
    content: protected static CoreHost<TAuthenticationToken> CoreHost { get; set; }
    parameters: []
    return:
      type: Cqrs.Hosts.CoreHost{{TAuthenticationToken}}
    content.vb: Protected Shared Property CoreHost As CoreHost(Of TAuthenticationToken)
  overload: Cqrs.Ninject.Azure.WebJobs.CqrsNinjectJobHost`2.CoreHost*
  nameWithType.vb: CqrsNinjectJobHost(Of TAuthenticationToken, TAuthenticationTokenHelper).CoreHost
  modifiers.csharp:
  - protected
  - static
  - get
  - set
  modifiers.vb:
  - Protected
  - Shared
  fullName.vb: Cqrs.Ninject.Azure.WebJobs.CqrsNinjectJobHost(Of TAuthenticationToken, TAuthenticationTokenHelper).CoreHost
- uid: Cqrs.Ninject.Azure.WebJobs.CqrsNinjectJobHost`2.PreRunAndBlockAction
  commentId: P:Cqrs.Ninject.Azure.WebJobs.CqrsNinjectJobHost`2.PreRunAndBlockAction
  id: PreRunAndBlockAction
  parent: Cqrs.Ninject.Azure.WebJobs.CqrsNinjectJobHost`2
  langs:
  - csharp
  - vb
  name: PreRunAndBlockAction
  nameWithType: CqrsNinjectJobHost<TAuthenticationToken, TAuthenticationTokenHelper>.PreRunAndBlockAction
  fullName: Cqrs.Ninject.Azure.WebJobs.CqrsNinjectJobHost<TAuthenticationToken, TAuthenticationTokenHelper>.PreRunAndBlockAction
  type: Property
  source:
    remote:
      path: Framework/Ninject/Azure/Cqrs.Ninject.Azure.WebJobs/CqrsNinjectJobHost.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: PreRunAndBlockAction
    path: Framework/Ninject/Azure/Cqrs.Ninject.Azure.WebJobs/CqrsNinjectJobHost.cs
    startLine: 32
  assemblies:
  - Cqrs.Ninject.Azure.WebJobs
  namespace: Cqrs.Ninject.Azure.WebJobs
  summary: "\nAn <xref href=\"System.Action\" data-throw-if-not-resolved=\"false\"></xref> to run just before <xref href=\"Microsoft.Azure.WebJobs.JobHost.RunAndBlock\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: protected static Action PreRunAndBlockAction { get; set; }
    parameters: []
    return:
      type: System.Action
    content.vb: Protected Shared Property PreRunAndBlockAction As Action
  overload: Cqrs.Ninject.Azure.WebJobs.CqrsNinjectJobHost`2.PreRunAndBlockAction*
  nameWithType.vb: CqrsNinjectJobHost(Of TAuthenticationToken, TAuthenticationTokenHelper).PreRunAndBlockAction
  modifiers.csharp:
  - protected
  - static
  - get
  - set
  modifiers.vb:
  - Protected
  - Shared
  fullName.vb: Cqrs.Ninject.Azure.WebJobs.CqrsNinjectJobHost(Of TAuthenticationToken, TAuthenticationTokenHelper).PreRunAndBlockAction
- uid: Cqrs.Ninject.Azure.WebJobs.CqrsNinjectJobHost`2.StartHost
  commentId: M:Cqrs.Ninject.Azure.WebJobs.CqrsNinjectJobHost`2.StartHost
  id: StartHost
  parent: Cqrs.Ninject.Azure.WebJobs.CqrsNinjectJobHost`2
  langs:
  - csharp
  - vb
  name: StartHost()
  nameWithType: CqrsNinjectJobHost<TAuthenticationToken, TAuthenticationTokenHelper>.StartHost()
  fullName: Cqrs.Ninject.Azure.WebJobs.CqrsNinjectJobHost<TAuthenticationToken, TAuthenticationTokenHelper>.StartHost()
  type: Method
  source:
    remote:
      path: Framework/Ninject/Azure/Cqrs.Ninject.Azure.WebJobs/CqrsNinjectJobHost.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: StartHost
    path: Framework/Ninject/Azure/Cqrs.Ninject.Azure.WebJobs/CqrsNinjectJobHost.cs
    startLine: 39
  assemblies:
  - Cqrs.Ninject.Azure.WebJobs
  namespace: Cqrs.Ninject.Azure.WebJobs
  remarks: "\nPlease set the following connection strings in app.config for this WebJob to run:\nAzureWebJobsDashboard and AzureWebJobsStorage\nBetter yet, add them to your Azure portal so they can be changed at runtime without re-deploying or re-compiling.\n"
  example: []
  syntax:
    content: protected static void StartHost()
    content.vb: Protected Shared Sub StartHost
  overload: Cqrs.Ninject.Azure.WebJobs.CqrsNinjectJobHost`2.StartHost*
  nameWithType.vb: CqrsNinjectJobHost(Of TAuthenticationToken, TAuthenticationTokenHelper).StartHost()
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
  fullName.vb: Cqrs.Ninject.Azure.WebJobs.CqrsNinjectJobHost(Of TAuthenticationToken, TAuthenticationTokenHelper).StartHost()
references:
- uid: Cqrs.Ninject.Azure.WebJobs
  commentId: N:Cqrs.Ninject.Azure.WebJobs
  isExternal: false
  name: Cqrs.Ninject.Azure.WebJobs
  nameWithType: Cqrs.Ninject.Azure.WebJobs
  fullName: Cqrs.Ninject.Azure.WebJobs
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Cqrs.Hosts.CoreHost{{TAuthenticationToken}}
  commentId: T:Cqrs.Hosts.CoreHost{`0}
  parent: Cqrs.Hosts
  definition: Cqrs.Hosts.CoreHost`1
  name: CoreHost<TAuthenticationToken>
  nameWithType: CoreHost<TAuthenticationToken>
  fullName: Cqrs.Hosts.CoreHost<TAuthenticationToken>
  nameWithType.vb: CoreHost(Of TAuthenticationToken)
  fullName.vb: Cqrs.Hosts.CoreHost(Of TAuthenticationToken)
  name.vb: CoreHost(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Hosts.CoreHost`1
    name: CoreHost
    nameWithType: CoreHost
    fullName: Cqrs.Hosts.CoreHost
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Hosts.CoreHost`1
    name: CoreHost
    nameWithType: CoreHost
    fullName: Cqrs.Hosts.CoreHost
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost{{TAuthenticationToken}}
  commentId: T:Cqrs.Azure.ConfigurationManager.TelemetryCoreHost{`0}
  parent: Cqrs.Azure.ConfigurationManager
  definition: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1
  name: TelemetryCoreHost<TAuthenticationToken>
  nameWithType: TelemetryCoreHost<TAuthenticationToken>
  fullName: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost<TAuthenticationToken>
  nameWithType.vb: TelemetryCoreHost(Of TAuthenticationToken)
  fullName.vb: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost(Of TAuthenticationToken)
  name.vb: TelemetryCoreHost(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1
    name: TelemetryCoreHost
    nameWithType: TelemetryCoreHost
    fullName: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1
    name: TelemetryCoreHost
    nameWithType: TelemetryCoreHost
    fullName: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Ninject.Azure.Wcf.CqrsWebHost{{TAuthenticationToken},{TAuthenticationTokenHelper},Cqrs.Ninject.Azure.WebJobs.Configuration.WebJobHostModule}
  commentId: T:Cqrs.Ninject.Azure.Wcf.CqrsWebHost{`0,`1,Cqrs.Ninject.Azure.WebJobs.Configuration.WebJobHostModule}
  parent: Cqrs.Ninject.Azure.Wcf
  definition: Cqrs.Ninject.Azure.Wcf.CqrsWebHost`3
  name: CqrsWebHost<TAuthenticationToken, TAuthenticationTokenHelper, WebJobHostModule>
  nameWithType: CqrsWebHost<TAuthenticationToken, TAuthenticationTokenHelper, WebJobHostModule>
  fullName: Cqrs.Ninject.Azure.Wcf.CqrsWebHost<TAuthenticationToken, TAuthenticationTokenHelper, Cqrs.Ninject.Azure.WebJobs.Configuration.WebJobHostModule>
  nameWithType.vb: CqrsWebHost(Of TAuthenticationToken, TAuthenticationTokenHelper, WebJobHostModule)
  fullName.vb: Cqrs.Ninject.Azure.Wcf.CqrsWebHost(Of TAuthenticationToken, TAuthenticationTokenHelper, Cqrs.Ninject.Azure.WebJobs.Configuration.WebJobHostModule)
  name.vb: CqrsWebHost(Of TAuthenticationToken, TAuthenticationTokenHelper, WebJobHostModule)
  spec.csharp:
  - uid: Cqrs.Ninject.Azure.Wcf.CqrsWebHost`3
    name: CqrsWebHost
    nameWithType: CqrsWebHost
    fullName: Cqrs.Ninject.Azure.Wcf.CqrsWebHost
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TAuthenticationTokenHelper
    nameWithType: TAuthenticationTokenHelper
    fullName: TAuthenticationTokenHelper
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Cqrs.Ninject.Azure.WebJobs.Configuration.WebJobHostModule
    name: WebJobHostModule
    nameWithType: WebJobHostModule
    fullName: Cqrs.Ninject.Azure.WebJobs.Configuration.WebJobHostModule
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Ninject.Azure.Wcf.CqrsWebHost`3
    name: CqrsWebHost
    nameWithType: CqrsWebHost
    fullName: Cqrs.Ninject.Azure.Wcf.CqrsWebHost
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TAuthenticationTokenHelper
    nameWithType: TAuthenticationTokenHelper
    fullName: TAuthenticationTokenHelper
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Cqrs.Ninject.Azure.WebJobs.Configuration.WebJobHostModule
    name: WebJobHostModule
    nameWithType: WebJobHostModule
    fullName: Cqrs.Ninject.Azure.WebJobs.Configuration.WebJobHostModule
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Ninject.Azure.Wcf.CqrsWebHost{{TAuthenticationToken},{TAuthenticationTokenHelper},Cqrs.Ninject.Azure.WebJobs.Configuration.WebJobHostModule}.ConfigureDefaultDependencyResolver
  commentId: M:Cqrs.Ninject.Azure.Wcf.CqrsWebHost{`0,`1,Cqrs.Ninject.Azure.WebJobs.Configuration.WebJobHostModule}.ConfigureDefaultDependencyResolver
  parent: Cqrs.Ninject.Azure.Wcf.CqrsWebHost{{TAuthenticationToken},{TAuthenticationTokenHelper},Cqrs.Ninject.Azure.WebJobs.Configuration.WebJobHostModule}
  definition: Cqrs.Ninject.Azure.Wcf.CqrsWebHost`3.ConfigureDefaultDependencyResolver
  name: ConfigureDefaultDependencyResolver()
  nameWithType: CqrsWebHost<TAuthenticationToken, TAuthenticationTokenHelper, WebJobHostModule>.ConfigureDefaultDependencyResolver()
  fullName: Cqrs.Ninject.Azure.Wcf.CqrsWebHost<TAuthenticationToken, TAuthenticationTokenHelper, Cqrs.Ninject.Azure.WebJobs.Configuration.WebJobHostModule>.ConfigureDefaultDependencyResolver()
  nameWithType.vb: CqrsWebHost(Of TAuthenticationToken, TAuthenticationTokenHelper, WebJobHostModule).ConfigureDefaultDependencyResolver()
  fullName.vb: Cqrs.Ninject.Azure.Wcf.CqrsWebHost(Of TAuthenticationToken, TAuthenticationTokenHelper, Cqrs.Ninject.Azure.WebJobs.Configuration.WebJobHostModule).ConfigureDefaultDependencyResolver()
  spec.csharp:
  - uid: Cqrs.Ninject.Azure.Wcf.CqrsWebHost`3.ConfigureDefaultDependencyResolver
    name: ConfigureDefaultDependencyResolver
    nameWithType: CqrsWebHost<TAuthenticationToken, TAuthenticationTokenHelper, WebJobHostModule>.ConfigureDefaultDependencyResolver
    fullName: Cqrs.Ninject.Azure.Wcf.CqrsWebHost<TAuthenticationToken, TAuthenticationTokenHelper, Cqrs.Ninject.Azure.WebJobs.Configuration.WebJobHostModule>.ConfigureDefaultDependencyResolver
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Ninject.Azure.Wcf.CqrsWebHost`3.ConfigureDefaultDependencyResolver
    name: ConfigureDefaultDependencyResolver
    nameWithType: CqrsWebHost(Of TAuthenticationToken, TAuthenticationTokenHelper, WebJobHostModule).ConfigureDefaultDependencyResolver
    fullName: Cqrs.Ninject.Azure.Wcf.CqrsWebHost(Of TAuthenticationToken, TAuthenticationTokenHelper, Cqrs.Ninject.Azure.WebJobs.Configuration.WebJobHostModule).ConfigureDefaultDependencyResolver
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Ninject.Azure.Wcf.CqrsWebHost{{TAuthenticationToken},{TAuthenticationTokenHelper},Cqrs.Ninject.Azure.WebJobs.Configuration.WebJobHostModule}.GetSupplementaryModules
  commentId: M:Cqrs.Ninject.Azure.Wcf.CqrsWebHost{`0,`1,Cqrs.Ninject.Azure.WebJobs.Configuration.WebJobHostModule}.GetSupplementaryModules
  parent: Cqrs.Ninject.Azure.Wcf.CqrsWebHost{{TAuthenticationToken},{TAuthenticationTokenHelper},Cqrs.Ninject.Azure.WebJobs.Configuration.WebJobHostModule}
  definition: Cqrs.Ninject.Azure.Wcf.CqrsWebHost`3.GetSupplementaryModules
  name: GetSupplementaryModules()
  nameWithType: CqrsWebHost<TAuthenticationToken, TAuthenticationTokenHelper, WebJobHostModule>.GetSupplementaryModules()
  fullName: Cqrs.Ninject.Azure.Wcf.CqrsWebHost<TAuthenticationToken, TAuthenticationTokenHelper, Cqrs.Ninject.Azure.WebJobs.Configuration.WebJobHostModule>.GetSupplementaryModules()
  nameWithType.vb: CqrsWebHost(Of TAuthenticationToken, TAuthenticationTokenHelper, WebJobHostModule).GetSupplementaryModules()
  fullName.vb: Cqrs.Ninject.Azure.Wcf.CqrsWebHost(Of TAuthenticationToken, TAuthenticationTokenHelper, Cqrs.Ninject.Azure.WebJobs.Configuration.WebJobHostModule).GetSupplementaryModules()
  spec.csharp:
  - uid: Cqrs.Ninject.Azure.Wcf.CqrsWebHost`3.GetSupplementaryModules
    name: GetSupplementaryModules
    nameWithType: CqrsWebHost<TAuthenticationToken, TAuthenticationTokenHelper, WebJobHostModule>.GetSupplementaryModules
    fullName: Cqrs.Ninject.Azure.Wcf.CqrsWebHost<TAuthenticationToken, TAuthenticationTokenHelper, Cqrs.Ninject.Azure.WebJobs.Configuration.WebJobHostModule>.GetSupplementaryModules
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Ninject.Azure.Wcf.CqrsWebHost`3.GetSupplementaryModules
    name: GetSupplementaryModules
    nameWithType: CqrsWebHost(Of TAuthenticationToken, TAuthenticationTokenHelper, WebJobHostModule).GetSupplementaryModules
    fullName: Cqrs.Ninject.Azure.Wcf.CqrsWebHost(Of TAuthenticationToken, TAuthenticationTokenHelper, Cqrs.Ninject.Azure.WebJobs.Configuration.WebJobHostModule).GetSupplementaryModules
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Ninject.Azure.Wcf.CqrsWebHost{{TAuthenticationToken},{TAuthenticationTokenHelper},Cqrs.Ninject.Azure.WebJobs.Configuration.WebJobHostModule}.GetCommandBusModules
  commentId: M:Cqrs.Ninject.Azure.Wcf.CqrsWebHost{`0,`1,Cqrs.Ninject.Azure.WebJobs.Configuration.WebJobHostModule}.GetCommandBusModules
  parent: Cqrs.Ninject.Azure.Wcf.CqrsWebHost{{TAuthenticationToken},{TAuthenticationTokenHelper},Cqrs.Ninject.Azure.WebJobs.Configuration.WebJobHostModule}
  definition: Cqrs.Ninject.Azure.Wcf.CqrsWebHost`3.GetCommandBusModules
  name: GetCommandBusModules()
  nameWithType: CqrsWebHost<TAuthenticationToken, TAuthenticationTokenHelper, WebJobHostModule>.GetCommandBusModules()
  fullName: Cqrs.Ninject.Azure.Wcf.CqrsWebHost<TAuthenticationToken, TAuthenticationTokenHelper, Cqrs.Ninject.Azure.WebJobs.Configuration.WebJobHostModule>.GetCommandBusModules()
  nameWithType.vb: CqrsWebHost(Of TAuthenticationToken, TAuthenticationTokenHelper, WebJobHostModule).GetCommandBusModules()
  fullName.vb: Cqrs.Ninject.Azure.Wcf.CqrsWebHost(Of TAuthenticationToken, TAuthenticationTokenHelper, Cqrs.Ninject.Azure.WebJobs.Configuration.WebJobHostModule).GetCommandBusModules()
  spec.csharp:
  - uid: Cqrs.Ninject.Azure.Wcf.CqrsWebHost`3.GetCommandBusModules
    name: GetCommandBusModules
    nameWithType: CqrsWebHost<TAuthenticationToken, TAuthenticationTokenHelper, WebJobHostModule>.GetCommandBusModules
    fullName: Cqrs.Ninject.Azure.Wcf.CqrsWebHost<TAuthenticationToken, TAuthenticationTokenHelper, Cqrs.Ninject.Azure.WebJobs.Configuration.WebJobHostModule>.GetCommandBusModules
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Ninject.Azure.Wcf.CqrsWebHost`3.GetCommandBusModules
    name: GetCommandBusModules
    nameWithType: CqrsWebHost(Of TAuthenticationToken, TAuthenticationTokenHelper, WebJobHostModule).GetCommandBusModules
    fullName: Cqrs.Ninject.Azure.Wcf.CqrsWebHost(Of TAuthenticationToken, TAuthenticationTokenHelper, Cqrs.Ninject.Azure.WebJobs.Configuration.WebJobHostModule).GetCommandBusModules
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Ninject.Azure.Wcf.CqrsWebHost{{TAuthenticationToken},{TAuthenticationTokenHelper},Cqrs.Ninject.Azure.WebJobs.Configuration.WebJobHostModule}.GetEventBusModules
  commentId: M:Cqrs.Ninject.Azure.Wcf.CqrsWebHost{`0,`1,Cqrs.Ninject.Azure.WebJobs.Configuration.WebJobHostModule}.GetEventBusModules
  parent: Cqrs.Ninject.Azure.Wcf.CqrsWebHost{{TAuthenticationToken},{TAuthenticationTokenHelper},Cqrs.Ninject.Azure.WebJobs.Configuration.WebJobHostModule}
  definition: Cqrs.Ninject.Azure.Wcf.CqrsWebHost`3.GetEventBusModules
  name: GetEventBusModules()
  nameWithType: CqrsWebHost<TAuthenticationToken, TAuthenticationTokenHelper, WebJobHostModule>.GetEventBusModules()
  fullName: Cqrs.Ninject.Azure.Wcf.CqrsWebHost<TAuthenticationToken, TAuthenticationTokenHelper, Cqrs.Ninject.Azure.WebJobs.Configuration.WebJobHostModule>.GetEventBusModules()
  nameWithType.vb: CqrsWebHost(Of TAuthenticationToken, TAuthenticationTokenHelper, WebJobHostModule).GetEventBusModules()
  fullName.vb: Cqrs.Ninject.Azure.Wcf.CqrsWebHost(Of TAuthenticationToken, TAuthenticationTokenHelper, Cqrs.Ninject.Azure.WebJobs.Configuration.WebJobHostModule).GetEventBusModules()
  spec.csharp:
  - uid: Cqrs.Ninject.Azure.Wcf.CqrsWebHost`3.GetEventBusModules
    name: GetEventBusModules
    nameWithType: CqrsWebHost<TAuthenticationToken, TAuthenticationTokenHelper, WebJobHostModule>.GetEventBusModules
    fullName: Cqrs.Ninject.Azure.Wcf.CqrsWebHost<TAuthenticationToken, TAuthenticationTokenHelper, Cqrs.Ninject.Azure.WebJobs.Configuration.WebJobHostModule>.GetEventBusModules
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Ninject.Azure.Wcf.CqrsWebHost`3.GetEventBusModules
    name: GetEventBusModules
    nameWithType: CqrsWebHost(Of TAuthenticationToken, TAuthenticationTokenHelper, WebJobHostModule).GetEventBusModules
    fullName: Cqrs.Ninject.Azure.Wcf.CqrsWebHost(Of TAuthenticationToken, TAuthenticationTokenHelper, Cqrs.Ninject.Azure.WebJobs.Configuration.WebJobHostModule).GetEventBusModules
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Ninject.Azure.Wcf.CqrsWebHost{{TAuthenticationToken},{TAuthenticationTokenHelper},Cqrs.Ninject.Azure.WebJobs.Configuration.WebJobHostModule}.GetEventStoreModules
  commentId: M:Cqrs.Ninject.Azure.Wcf.CqrsWebHost{`0,`1,Cqrs.Ninject.Azure.WebJobs.Configuration.WebJobHostModule}.GetEventStoreModules
  parent: Cqrs.Ninject.Azure.Wcf.CqrsWebHost{{TAuthenticationToken},{TAuthenticationTokenHelper},Cqrs.Ninject.Azure.WebJobs.Configuration.WebJobHostModule}
  definition: Cqrs.Ninject.Azure.Wcf.CqrsWebHost`3.GetEventStoreModules
  name: GetEventStoreModules()
  nameWithType: CqrsWebHost<TAuthenticationToken, TAuthenticationTokenHelper, WebJobHostModule>.GetEventStoreModules()
  fullName: Cqrs.Ninject.Azure.Wcf.CqrsWebHost<TAuthenticationToken, TAuthenticationTokenHelper, Cqrs.Ninject.Azure.WebJobs.Configuration.WebJobHostModule>.GetEventStoreModules()
  nameWithType.vb: CqrsWebHost(Of TAuthenticationToken, TAuthenticationTokenHelper, WebJobHostModule).GetEventStoreModules()
  fullName.vb: Cqrs.Ninject.Azure.Wcf.CqrsWebHost(Of TAuthenticationToken, TAuthenticationTokenHelper, Cqrs.Ninject.Azure.WebJobs.Configuration.WebJobHostModule).GetEventStoreModules()
  spec.csharp:
  - uid: Cqrs.Ninject.Azure.Wcf.CqrsWebHost`3.GetEventStoreModules
    name: GetEventStoreModules
    nameWithType: CqrsWebHost<TAuthenticationToken, TAuthenticationTokenHelper, WebJobHostModule>.GetEventStoreModules
    fullName: Cqrs.Ninject.Azure.Wcf.CqrsWebHost<TAuthenticationToken, TAuthenticationTokenHelper, Cqrs.Ninject.Azure.WebJobs.Configuration.WebJobHostModule>.GetEventStoreModules
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Ninject.Azure.Wcf.CqrsWebHost`3.GetEventStoreModules
    name: GetEventStoreModules
    nameWithType: CqrsWebHost(Of TAuthenticationToken, TAuthenticationTokenHelper, WebJobHostModule).GetEventStoreModules
    fullName: Cqrs.Ninject.Azure.Wcf.CqrsWebHost(Of TAuthenticationToken, TAuthenticationTokenHelper, Cqrs.Ninject.Azure.WebJobs.Configuration.WebJobHostModule).GetEventStoreModules
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost{{TAuthenticationToken}}._configurationManager
  commentId: F:Cqrs.Azure.ConfigurationManager.TelemetryCoreHost{`0}._configurationManager
  parent: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost{{TAuthenticationToken}}
  definition: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1._configurationManager
  name: _configurationManager
  nameWithType: TelemetryCoreHost<TAuthenticationToken>._configurationManager
  fullName: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost<TAuthenticationToken>._configurationManager
  nameWithType.vb: TelemetryCoreHost(Of TAuthenticationToken)._configurationManager
  fullName.vb: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost(Of TAuthenticationToken)._configurationManager
- uid: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost{{TAuthenticationToken}}.ConfigurationManager
  commentId: P:Cqrs.Azure.ConfigurationManager.TelemetryCoreHost{`0}.ConfigurationManager
  parent: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost{{TAuthenticationToken}}
  definition: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1.ConfigurationManager
  name: ConfigurationManager
  nameWithType: TelemetryCoreHost<TAuthenticationToken>.ConfigurationManager
  fullName: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost<TAuthenticationToken>.ConfigurationManager
  nameWithType.vb: TelemetryCoreHost(Of TAuthenticationToken).ConfigurationManager
  fullName.vb: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost(Of TAuthenticationToken).ConfigurationManager
- uid: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost{{TAuthenticationToken}}.TelemetryClient
  commentId: P:Cqrs.Azure.ConfigurationManager.TelemetryCoreHost{`0}.TelemetryClient
  parent: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost{{TAuthenticationToken}}
  definition: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1.TelemetryClient
  name: TelemetryClient
  nameWithType: TelemetryCoreHost<TAuthenticationToken>.TelemetryClient
  fullName: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost<TAuthenticationToken>.TelemetryClient
  nameWithType.vb: TelemetryCoreHost(Of TAuthenticationToken).TelemetryClient
  fullName.vb: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost(Of TAuthenticationToken).TelemetryClient
- uid: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost{{TAuthenticationToken}}.ConfigureTelemetry
  commentId: M:Cqrs.Azure.ConfigurationManager.TelemetryCoreHost{`0}.ConfigureTelemetry
  parent: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost{{TAuthenticationToken}}
  definition: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1.ConfigureTelemetry
  name: ConfigureTelemetry()
  nameWithType: TelemetryCoreHost<TAuthenticationToken>.ConfigureTelemetry()
  fullName: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost<TAuthenticationToken>.ConfigureTelemetry()
  nameWithType.vb: TelemetryCoreHost(Of TAuthenticationToken).ConfigureTelemetry()
  fullName.vb: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost(Of TAuthenticationToken).ConfigureTelemetry()
  spec.csharp:
  - uid: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1.ConfigureTelemetry
    name: ConfigureTelemetry
    nameWithType: TelemetryCoreHost<TAuthenticationToken>.ConfigureTelemetry
    fullName: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost<TAuthenticationToken>.ConfigureTelemetry
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1.ConfigureTelemetry
    name: ConfigureTelemetry
    nameWithType: TelemetryCoreHost(Of TAuthenticationToken).ConfigureTelemetry
    fullName: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost(Of TAuthenticationToken).ConfigureTelemetry
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost{{TAuthenticationToken}}.Run(System.Action)
  commentId: M:Cqrs.Azure.ConfigurationManager.TelemetryCoreHost{`0}.Run(System.Action)
  parent: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost{{TAuthenticationToken}}
  definition: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1.Run(System.Action)
  name: Run(Action)
  nameWithType: TelemetryCoreHost<TAuthenticationToken>.Run(Action)
  fullName: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost<TAuthenticationToken>.Run(System.Action)
  nameWithType.vb: TelemetryCoreHost(Of TAuthenticationToken).Run(Action)
  fullName.vb: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost(Of TAuthenticationToken).Run(System.Action)
  spec.csharp:
  - uid: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1.Run(System.Action)
    name: Run
    nameWithType: TelemetryCoreHost<TAuthenticationToken>.Run
    fullName: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost<TAuthenticationToken>.Run
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1.Run(System.Action)
    name: Run
    nameWithType: TelemetryCoreHost(Of TAuthenticationToken).Run
    fullName: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost(Of TAuthenticationToken).Run
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost{{TAuthenticationToken}}.PrepareSecurityProtocol
  commentId: M:Cqrs.Azure.ConfigurationManager.TelemetryCoreHost{`0}.PrepareSecurityProtocol
  parent: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost{{TAuthenticationToken}}
  definition: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1.PrepareSecurityProtocol
  name: PrepareSecurityProtocol()
  nameWithType: TelemetryCoreHost<TAuthenticationToken>.PrepareSecurityProtocol()
  fullName: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost<TAuthenticationToken>.PrepareSecurityProtocol()
  nameWithType.vb: TelemetryCoreHost(Of TAuthenticationToken).PrepareSecurityProtocol()
  fullName.vb: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost(Of TAuthenticationToken).PrepareSecurityProtocol()
  spec.csharp:
  - uid: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1.PrepareSecurityProtocol
    name: PrepareSecurityProtocol
    nameWithType: TelemetryCoreHost<TAuthenticationToken>.PrepareSecurityProtocol
    fullName: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost<TAuthenticationToken>.PrepareSecurityProtocol
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1.PrepareSecurityProtocol
    name: PrepareSecurityProtocol
    nameWithType: TelemetryCoreHost(Of TAuthenticationToken).PrepareSecurityProtocol
    fullName: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost(Of TAuthenticationToken).PrepareSecurityProtocol
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost{{TAuthenticationToken}}.Prepare
  commentId: M:Cqrs.Azure.ConfigurationManager.TelemetryCoreHost{`0}.Prepare
  parent: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost{{TAuthenticationToken}}
  definition: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1.Prepare
  name: Prepare()
  nameWithType: TelemetryCoreHost<TAuthenticationToken>.Prepare()
  fullName: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost<TAuthenticationToken>.Prepare()
  nameWithType.vb: TelemetryCoreHost(Of TAuthenticationToken).Prepare()
  fullName.vb: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost(Of TAuthenticationToken).Prepare()
  spec.csharp:
  - uid: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1.Prepare
    name: Prepare
    nameWithType: TelemetryCoreHost<TAuthenticationToken>.Prepare
    fullName: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost<TAuthenticationToken>.Prepare
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1.Prepare
    name: Prepare
    nameWithType: TelemetryCoreHost(Of TAuthenticationToken).Prepare
    fullName: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost(Of TAuthenticationToken).Prepare
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost{{TAuthenticationToken}}.Start
  commentId: M:Cqrs.Azure.ConfigurationManager.TelemetryCoreHost{`0}.Start
  parent: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost{{TAuthenticationToken}}
  definition: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1.Start
  name: Start()
  nameWithType: TelemetryCoreHost<TAuthenticationToken>.Start()
  fullName: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost<TAuthenticationToken>.Start()
  nameWithType.vb: TelemetryCoreHost(Of TAuthenticationToken).Start()
  fullName.vb: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost(Of TAuthenticationToken).Start()
  spec.csharp:
  - uid: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1.Start
    name: Start
    nameWithType: TelemetryCoreHost<TAuthenticationToken>.Start
    fullName: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost<TAuthenticationToken>.Start
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1.Start
    name: Start
    nameWithType: TelemetryCoreHost(Of TAuthenticationToken).Start
    fullName: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost(Of TAuthenticationToken).Start
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Hosts.CoreHost{{TAuthenticationToken}}.HandlerTypes
  commentId: P:Cqrs.Hosts.CoreHost{`0}.HandlerTypes
  parent: Cqrs.Hosts.CoreHost{{TAuthenticationToken}}
  definition: Cqrs.Hosts.CoreHost`1.HandlerTypes
  name: HandlerTypes
  nameWithType: CoreHost<TAuthenticationToken>.HandlerTypes
  fullName: Cqrs.Hosts.CoreHost<TAuthenticationToken>.HandlerTypes
  nameWithType.vb: CoreHost(Of TAuthenticationToken).HandlerTypes
  fullName.vb: Cqrs.Hosts.CoreHost(Of TAuthenticationToken).HandlerTypes
- uid: Cqrs.Hosts.CoreHost{{TAuthenticationToken}}.EventBus
  commentId: P:Cqrs.Hosts.CoreHost{`0}.EventBus
  parent: Cqrs.Hosts.CoreHost{{TAuthenticationToken}}
  definition: Cqrs.Hosts.CoreHost`1.EventBus
  name: EventBus
  nameWithType: CoreHost<TAuthenticationToken>.EventBus
  fullName: Cqrs.Hosts.CoreHost<TAuthenticationToken>.EventBus
  nameWithType.vb: CoreHost(Of TAuthenticationToken).EventBus
  fullName.vb: Cqrs.Hosts.CoreHost(Of TAuthenticationToken).EventBus
- uid: Cqrs.Hosts.CoreHost{{TAuthenticationToken}}.CommandBus
  commentId: P:Cqrs.Hosts.CoreHost{`0}.CommandBus
  parent: Cqrs.Hosts.CoreHost{{TAuthenticationToken}}
  definition: Cqrs.Hosts.CoreHost`1.CommandBus
  name: CommandBus
  nameWithType: CoreHost<TAuthenticationToken>.CommandBus
  fullName: Cqrs.Hosts.CoreHost<TAuthenticationToken>.CommandBus
  nameWithType.vb: CoreHost(Of TAuthenticationToken).CommandBus
  fullName.vb: Cqrs.Hosts.CoreHost(Of TAuthenticationToken).CommandBus
- uid: Cqrs.Hosts.CoreHost{{TAuthenticationToken}}.TelemetryName
  commentId: P:Cqrs.Hosts.CoreHost{`0}.TelemetryName
  parent: Cqrs.Hosts.CoreHost{{TAuthenticationToken}}
  definition: Cqrs.Hosts.CoreHost`1.TelemetryName
  name: TelemetryName
  nameWithType: CoreHost<TAuthenticationToken>.TelemetryName
  fullName: Cqrs.Hosts.CoreHost<TAuthenticationToken>.TelemetryName
  nameWithType.vb: CoreHost(Of TAuthenticationToken).TelemetryName
  fullName.vb: Cqrs.Hosts.CoreHost(Of TAuthenticationToken).TelemetryName
- uid: Cqrs.Hosts.CoreHost{{TAuthenticationToken}}.CorrelationIdHelper
  commentId: P:Cqrs.Hosts.CoreHost{`0}.CorrelationIdHelper
  parent: Cqrs.Hosts.CoreHost{{TAuthenticationToken}}
  definition: Cqrs.Hosts.CoreHost`1.CorrelationIdHelper
  name: CorrelationIdHelper
  nameWithType: CoreHost<TAuthenticationToken>.CorrelationIdHelper
  fullName: Cqrs.Hosts.CoreHost<TAuthenticationToken>.CorrelationIdHelper
  nameWithType.vb: CoreHost(Of TAuthenticationToken).CorrelationIdHelper
  fullName.vb: Cqrs.Hosts.CoreHost(Of TAuthenticationToken).CorrelationIdHelper
- uid: Cqrs.Hosts.CoreHost{{TAuthenticationToken}}.Logger
  commentId: P:Cqrs.Hosts.CoreHost{`0}.Logger
  parent: Cqrs.Hosts.CoreHost{{TAuthenticationToken}}
  definition: Cqrs.Hosts.CoreHost`1.Logger
  name: Logger
  nameWithType: CoreHost<TAuthenticationToken>.Logger
  fullName: Cqrs.Hosts.CoreHost<TAuthenticationToken>.Logger
  nameWithType.vb: CoreHost(Of TAuthenticationToken).Logger
  fullName.vb: Cqrs.Hosts.CoreHost(Of TAuthenticationToken).Logger
- uid: Cqrs.Hosts.CoreHost{{TAuthenticationToken}}.ConfigureDefaultDependencyResolver
  commentId: M:Cqrs.Hosts.CoreHost{`0}.ConfigureDefaultDependencyResolver
  parent: Cqrs.Hosts.CoreHost{{TAuthenticationToken}}
  definition: Cqrs.Hosts.CoreHost`1.ConfigureDefaultDependencyResolver
  name: ConfigureDefaultDependencyResolver()
  nameWithType: CoreHost<TAuthenticationToken>.ConfigureDefaultDependencyResolver()
  fullName: Cqrs.Hosts.CoreHost<TAuthenticationToken>.ConfigureDefaultDependencyResolver()
  nameWithType.vb: CoreHost(Of TAuthenticationToken).ConfigureDefaultDependencyResolver()
  fullName.vb: Cqrs.Hosts.CoreHost(Of TAuthenticationToken).ConfigureDefaultDependencyResolver()
  spec.csharp:
  - uid: Cqrs.Hosts.CoreHost`1.ConfigureDefaultDependencyResolver
    name: ConfigureDefaultDependencyResolver
    nameWithType: CoreHost<TAuthenticationToken>.ConfigureDefaultDependencyResolver
    fullName: Cqrs.Hosts.CoreHost<TAuthenticationToken>.ConfigureDefaultDependencyResolver
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Hosts.CoreHost`1.ConfigureDefaultDependencyResolver
    name: ConfigureDefaultDependencyResolver
    nameWithType: CoreHost(Of TAuthenticationToken).ConfigureDefaultDependencyResolver
    fullName: Cqrs.Hosts.CoreHost(Of TAuthenticationToken).ConfigureDefaultDependencyResolver
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Hosts.CoreHost{{TAuthenticationToken}}.ManuallyRegisterEventHandler``1(System.Action{{TMessage}},System.Boolean)
  commentId: M:Cqrs.Hosts.CoreHost{`0}.ManuallyRegisterEventHandler``1(System.Action{``0},System.Boolean)
  parent: Cqrs.Hosts.CoreHost{{TAuthenticationToken}}
  definition: Cqrs.Hosts.CoreHost`1.ManuallyRegisterEventHandler``1(System.Action{``0},System.Boolean)
  name: ManuallyRegisterEventHandler<TMessage>(Action<TMessage>, Boolean)
  nameWithType: CoreHost<TAuthenticationToken>.ManuallyRegisterEventHandler<TMessage>(Action<TMessage>, Boolean)
  fullName: Cqrs.Hosts.CoreHost<TAuthenticationToken>.ManuallyRegisterEventHandler<TMessage>(System.Action<TMessage>, System.Boolean)
  nameWithType.vb: CoreHost(Of TAuthenticationToken).ManuallyRegisterEventHandler(Of TMessage)(Action(Of TMessage), Boolean)
  fullName.vb: Cqrs.Hosts.CoreHost(Of TAuthenticationToken).ManuallyRegisterEventHandler(Of TMessage)(System.Action(Of TMessage), System.Boolean)
  name.vb: ManuallyRegisterEventHandler(Of TMessage)(Action(Of TMessage), Boolean)
  spec.csharp:
  - uid: Cqrs.Hosts.CoreHost`1.ManuallyRegisterEventHandler``1(System.Action{``0},System.Boolean)
    name: ManuallyRegisterEventHandler<TMessage>
    nameWithType: CoreHost<TAuthenticationToken>.ManuallyRegisterEventHandler<TMessage>
    fullName: Cqrs.Hosts.CoreHost<TAuthenticationToken>.ManuallyRegisterEventHandler<TMessage>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TMessage
    nameWithType: TMessage
    fullName: TMessage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Hosts.CoreHost`1.ManuallyRegisterEventHandler``1(System.Action{``0},System.Boolean)
    name: ManuallyRegisterEventHandler(Of TMessage)
    nameWithType: CoreHost(Of TAuthenticationToken).ManuallyRegisterEventHandler(Of TMessage)
    fullName: Cqrs.Hosts.CoreHost(Of TAuthenticationToken).ManuallyRegisterEventHandler(Of TMessage)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TMessage
    nameWithType: TMessage
    fullName: TMessage
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Hosts.CoreHost{{TAuthenticationToken}}.ManuallyRegisterCommandHandler``1(System.Action{{TMessage}},System.Boolean)
  commentId: M:Cqrs.Hosts.CoreHost{`0}.ManuallyRegisterCommandHandler``1(System.Action{``0},System.Boolean)
  parent: Cqrs.Hosts.CoreHost{{TAuthenticationToken}}
  definition: Cqrs.Hosts.CoreHost`1.ManuallyRegisterCommandHandler``1(System.Action{``0},System.Boolean)
  name: ManuallyRegisterCommandHandler<TMessage>(Action<TMessage>, Boolean)
  nameWithType: CoreHost<TAuthenticationToken>.ManuallyRegisterCommandHandler<TMessage>(Action<TMessage>, Boolean)
  fullName: Cqrs.Hosts.CoreHost<TAuthenticationToken>.ManuallyRegisterCommandHandler<TMessage>(System.Action<TMessage>, System.Boolean)
  nameWithType.vb: CoreHost(Of TAuthenticationToken).ManuallyRegisterCommandHandler(Of TMessage)(Action(Of TMessage), Boolean)
  fullName.vb: Cqrs.Hosts.CoreHost(Of TAuthenticationToken).ManuallyRegisterCommandHandler(Of TMessage)(System.Action(Of TMessage), System.Boolean)
  name.vb: ManuallyRegisterCommandHandler(Of TMessage)(Action(Of TMessage), Boolean)
  spec.csharp:
  - uid: Cqrs.Hosts.CoreHost`1.ManuallyRegisterCommandHandler``1(System.Action{``0},System.Boolean)
    name: ManuallyRegisterCommandHandler<TMessage>
    nameWithType: CoreHost<TAuthenticationToken>.ManuallyRegisterCommandHandler<TMessage>
    fullName: Cqrs.Hosts.CoreHost<TAuthenticationToken>.ManuallyRegisterCommandHandler<TMessage>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TMessage
    nameWithType: TMessage
    fullName: TMessage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Hosts.CoreHost`1.ManuallyRegisterCommandHandler``1(System.Action{``0},System.Boolean)
    name: ManuallyRegisterCommandHandler(Of TMessage)
    nameWithType: CoreHost(Of TAuthenticationToken).ManuallyRegisterCommandHandler(Of TMessage)
    fullName: Cqrs.Hosts.CoreHost(Of TAuthenticationToken).ManuallyRegisterCommandHandler(Of TMessage)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TMessage
    nameWithType: TMessage
    fullName: TMessage
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Hosts.CoreHost{{TAuthenticationToken}}.StartBusRegistrar
  commentId: M:Cqrs.Hosts.CoreHost{`0}.StartBusRegistrar
  parent: Cqrs.Hosts.CoreHost{{TAuthenticationToken}}
  definition: Cqrs.Hosts.CoreHost`1.StartBusRegistrar
  name: StartBusRegistrar()
  nameWithType: CoreHost<TAuthenticationToken>.StartBusRegistrar()
  fullName: Cqrs.Hosts.CoreHost<TAuthenticationToken>.StartBusRegistrar()
  nameWithType.vb: CoreHost(Of TAuthenticationToken).StartBusRegistrar()
  fullName.vb: Cqrs.Hosts.CoreHost(Of TAuthenticationToken).StartBusRegistrar()
  spec.csharp:
  - uid: Cqrs.Hosts.CoreHost`1.StartBusRegistrar
    name: StartBusRegistrar
    nameWithType: CoreHost<TAuthenticationToken>.StartBusRegistrar
    fullName: Cqrs.Hosts.CoreHost<TAuthenticationToken>.StartBusRegistrar
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Hosts.CoreHost`1.StartBusRegistrar
    name: StartBusRegistrar
    nameWithType: CoreHost(Of TAuthenticationToken).StartBusRegistrar
    fullName: Cqrs.Hosts.CoreHost(Of TAuthenticationToken).StartBusRegistrar
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Cqrs.Hosts.CoreHost`1
  commentId: T:Cqrs.Hosts.CoreHost`1
  isExternal: false
  name: CoreHost<TAuthenticationToken>
  nameWithType: CoreHost<TAuthenticationToken>
  fullName: Cqrs.Hosts.CoreHost<TAuthenticationToken>
  nameWithType.vb: CoreHost(Of TAuthenticationToken)
  fullName.vb: Cqrs.Hosts.CoreHost(Of TAuthenticationToken)
  name.vb: CoreHost(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Hosts.CoreHost`1
    name: CoreHost
    nameWithType: CoreHost
    fullName: Cqrs.Hosts.CoreHost
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Hosts.CoreHost`1
    name: CoreHost
    nameWithType: CoreHost
    fullName: Cqrs.Hosts.CoreHost
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Hosts
  commentId: N:Cqrs.Hosts
  isExternal: false
  name: Cqrs.Hosts
  nameWithType: Cqrs.Hosts
  fullName: Cqrs.Hosts
- uid: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1
  commentId: T:Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1
  isExternal: false
  name: TelemetryCoreHost<TAuthenticationToken>
  nameWithType: TelemetryCoreHost<TAuthenticationToken>
  fullName: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost<TAuthenticationToken>
  nameWithType.vb: TelemetryCoreHost(Of TAuthenticationToken)
  fullName.vb: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost(Of TAuthenticationToken)
  name.vb: TelemetryCoreHost(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1
    name: TelemetryCoreHost
    nameWithType: TelemetryCoreHost
    fullName: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1
    name: TelemetryCoreHost
    nameWithType: TelemetryCoreHost
    fullName: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.ConfigurationManager
  commentId: N:Cqrs.Azure.ConfigurationManager
  isExternal: false
  name: Cqrs.Azure.ConfigurationManager
  nameWithType: Cqrs.Azure.ConfigurationManager
  fullName: Cqrs.Azure.ConfigurationManager
- uid: Cqrs.Ninject.Azure.Wcf.CqrsWebHost`3
  commentId: T:Cqrs.Ninject.Azure.Wcf.CqrsWebHost`3
  isExternal: false
  name: CqrsWebHost<TAuthenticationToken, TAuthenticationTokenHelper, TWebHostModule>
  nameWithType: CqrsWebHost<TAuthenticationToken, TAuthenticationTokenHelper, TWebHostModule>
  fullName: Cqrs.Ninject.Azure.Wcf.CqrsWebHost<TAuthenticationToken, TAuthenticationTokenHelper, TWebHostModule>
  nameWithType.vb: CqrsWebHost(Of TAuthenticationToken, TAuthenticationTokenHelper, TWebHostModule)
  fullName.vb: Cqrs.Ninject.Azure.Wcf.CqrsWebHost(Of TAuthenticationToken, TAuthenticationTokenHelper, TWebHostModule)
  name.vb: CqrsWebHost(Of TAuthenticationToken, TAuthenticationTokenHelper, TWebHostModule)
  spec.csharp:
  - uid: Cqrs.Ninject.Azure.Wcf.CqrsWebHost`3
    name: CqrsWebHost
    nameWithType: CqrsWebHost
    fullName: Cqrs.Ninject.Azure.Wcf.CqrsWebHost
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TAuthenticationTokenHelper
    nameWithType: TAuthenticationTokenHelper
    fullName: TAuthenticationTokenHelper
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebHostModule
    nameWithType: TWebHostModule
    fullName: TWebHostModule
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Ninject.Azure.Wcf.CqrsWebHost`3
    name: CqrsWebHost
    nameWithType: CqrsWebHost
    fullName: Cqrs.Ninject.Azure.Wcf.CqrsWebHost
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TAuthenticationTokenHelper
    nameWithType: TAuthenticationTokenHelper
    fullName: TAuthenticationTokenHelper
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebHostModule
    nameWithType: TWebHostModule
    fullName: TWebHostModule
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Ninject.Azure.Wcf
  commentId: N:Cqrs.Ninject.Azure.Wcf
  isExternal: false
  name: Cqrs.Ninject.Azure.Wcf
  nameWithType: Cqrs.Ninject.Azure.Wcf
  fullName: Cqrs.Ninject.Azure.Wcf
- uid: Cqrs.Ninject.Azure.Wcf.CqrsWebHost`3.ConfigureDefaultDependencyResolver
  commentId: M:Cqrs.Ninject.Azure.Wcf.CqrsWebHost`3.ConfigureDefaultDependencyResolver
  isExternal: false
  name: ConfigureDefaultDependencyResolver()
  nameWithType: CqrsWebHost<TAuthenticationToken, TAuthenticationTokenHelper, TWebHostModule>.ConfigureDefaultDependencyResolver()
  fullName: Cqrs.Ninject.Azure.Wcf.CqrsWebHost<TAuthenticationToken, TAuthenticationTokenHelper, TWebHostModule>.ConfigureDefaultDependencyResolver()
  nameWithType.vb: CqrsWebHost(Of TAuthenticationToken, TAuthenticationTokenHelper, TWebHostModule).ConfigureDefaultDependencyResolver()
  fullName.vb: Cqrs.Ninject.Azure.Wcf.CqrsWebHost(Of TAuthenticationToken, TAuthenticationTokenHelper, TWebHostModule).ConfigureDefaultDependencyResolver()
  spec.csharp:
  - uid: Cqrs.Ninject.Azure.Wcf.CqrsWebHost`3.ConfigureDefaultDependencyResolver
    name: ConfigureDefaultDependencyResolver
    nameWithType: CqrsWebHost<TAuthenticationToken, TAuthenticationTokenHelper, TWebHostModule>.ConfigureDefaultDependencyResolver
    fullName: Cqrs.Ninject.Azure.Wcf.CqrsWebHost<TAuthenticationToken, TAuthenticationTokenHelper, TWebHostModule>.ConfigureDefaultDependencyResolver
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Ninject.Azure.Wcf.CqrsWebHost`3.ConfigureDefaultDependencyResolver
    name: ConfigureDefaultDependencyResolver
    nameWithType: CqrsWebHost(Of TAuthenticationToken, TAuthenticationTokenHelper, TWebHostModule).ConfigureDefaultDependencyResolver
    fullName: Cqrs.Ninject.Azure.Wcf.CqrsWebHost(Of TAuthenticationToken, TAuthenticationTokenHelper, TWebHostModule).ConfigureDefaultDependencyResolver
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Ninject.Azure.Wcf.CqrsWebHost`3.GetSupplementaryModules
  commentId: M:Cqrs.Ninject.Azure.Wcf.CqrsWebHost`3.GetSupplementaryModules
  isExternal: false
  name: GetSupplementaryModules()
  nameWithType: CqrsWebHost<TAuthenticationToken, TAuthenticationTokenHelper, TWebHostModule>.GetSupplementaryModules()
  fullName: Cqrs.Ninject.Azure.Wcf.CqrsWebHost<TAuthenticationToken, TAuthenticationTokenHelper, TWebHostModule>.GetSupplementaryModules()
  nameWithType.vb: CqrsWebHost(Of TAuthenticationToken, TAuthenticationTokenHelper, TWebHostModule).GetSupplementaryModules()
  fullName.vb: Cqrs.Ninject.Azure.Wcf.CqrsWebHost(Of TAuthenticationToken, TAuthenticationTokenHelper, TWebHostModule).GetSupplementaryModules()
  spec.csharp:
  - uid: Cqrs.Ninject.Azure.Wcf.CqrsWebHost`3.GetSupplementaryModules
    name: GetSupplementaryModules
    nameWithType: CqrsWebHost<TAuthenticationToken, TAuthenticationTokenHelper, TWebHostModule>.GetSupplementaryModules
    fullName: Cqrs.Ninject.Azure.Wcf.CqrsWebHost<TAuthenticationToken, TAuthenticationTokenHelper, TWebHostModule>.GetSupplementaryModules
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Ninject.Azure.Wcf.CqrsWebHost`3.GetSupplementaryModules
    name: GetSupplementaryModules
    nameWithType: CqrsWebHost(Of TAuthenticationToken, TAuthenticationTokenHelper, TWebHostModule).GetSupplementaryModules
    fullName: Cqrs.Ninject.Azure.Wcf.CqrsWebHost(Of TAuthenticationToken, TAuthenticationTokenHelper, TWebHostModule).GetSupplementaryModules
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Ninject.Azure.Wcf.CqrsWebHost`3.GetCommandBusModules
  commentId: M:Cqrs.Ninject.Azure.Wcf.CqrsWebHost`3.GetCommandBusModules
  isExternal: false
  name: GetCommandBusModules()
  nameWithType: CqrsWebHost<TAuthenticationToken, TAuthenticationTokenHelper, TWebHostModule>.GetCommandBusModules()
  fullName: Cqrs.Ninject.Azure.Wcf.CqrsWebHost<TAuthenticationToken, TAuthenticationTokenHelper, TWebHostModule>.GetCommandBusModules()
  nameWithType.vb: CqrsWebHost(Of TAuthenticationToken, TAuthenticationTokenHelper, TWebHostModule).GetCommandBusModules()
  fullName.vb: Cqrs.Ninject.Azure.Wcf.CqrsWebHost(Of TAuthenticationToken, TAuthenticationTokenHelper, TWebHostModule).GetCommandBusModules()
  spec.csharp:
  - uid: Cqrs.Ninject.Azure.Wcf.CqrsWebHost`3.GetCommandBusModules
    name: GetCommandBusModules
    nameWithType: CqrsWebHost<TAuthenticationToken, TAuthenticationTokenHelper, TWebHostModule>.GetCommandBusModules
    fullName: Cqrs.Ninject.Azure.Wcf.CqrsWebHost<TAuthenticationToken, TAuthenticationTokenHelper, TWebHostModule>.GetCommandBusModules
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Ninject.Azure.Wcf.CqrsWebHost`3.GetCommandBusModules
    name: GetCommandBusModules
    nameWithType: CqrsWebHost(Of TAuthenticationToken, TAuthenticationTokenHelper, TWebHostModule).GetCommandBusModules
    fullName: Cqrs.Ninject.Azure.Wcf.CqrsWebHost(Of TAuthenticationToken, TAuthenticationTokenHelper, TWebHostModule).GetCommandBusModules
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Ninject.Azure.Wcf.CqrsWebHost`3.GetEventBusModules
  commentId: M:Cqrs.Ninject.Azure.Wcf.CqrsWebHost`3.GetEventBusModules
  isExternal: false
  name: GetEventBusModules()
  nameWithType: CqrsWebHost<TAuthenticationToken, TAuthenticationTokenHelper, TWebHostModule>.GetEventBusModules()
  fullName: Cqrs.Ninject.Azure.Wcf.CqrsWebHost<TAuthenticationToken, TAuthenticationTokenHelper, TWebHostModule>.GetEventBusModules()
  nameWithType.vb: CqrsWebHost(Of TAuthenticationToken, TAuthenticationTokenHelper, TWebHostModule).GetEventBusModules()
  fullName.vb: Cqrs.Ninject.Azure.Wcf.CqrsWebHost(Of TAuthenticationToken, TAuthenticationTokenHelper, TWebHostModule).GetEventBusModules()
  spec.csharp:
  - uid: Cqrs.Ninject.Azure.Wcf.CqrsWebHost`3.GetEventBusModules
    name: GetEventBusModules
    nameWithType: CqrsWebHost<TAuthenticationToken, TAuthenticationTokenHelper, TWebHostModule>.GetEventBusModules
    fullName: Cqrs.Ninject.Azure.Wcf.CqrsWebHost<TAuthenticationToken, TAuthenticationTokenHelper, TWebHostModule>.GetEventBusModules
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Ninject.Azure.Wcf.CqrsWebHost`3.GetEventBusModules
    name: GetEventBusModules
    nameWithType: CqrsWebHost(Of TAuthenticationToken, TAuthenticationTokenHelper, TWebHostModule).GetEventBusModules
    fullName: Cqrs.Ninject.Azure.Wcf.CqrsWebHost(Of TAuthenticationToken, TAuthenticationTokenHelper, TWebHostModule).GetEventBusModules
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Ninject.Azure.Wcf.CqrsWebHost`3.GetEventStoreModules
  commentId: M:Cqrs.Ninject.Azure.Wcf.CqrsWebHost`3.GetEventStoreModules
  isExternal: false
  name: GetEventStoreModules()
  nameWithType: CqrsWebHost<TAuthenticationToken, TAuthenticationTokenHelper, TWebHostModule>.GetEventStoreModules()
  fullName: Cqrs.Ninject.Azure.Wcf.CqrsWebHost<TAuthenticationToken, TAuthenticationTokenHelper, TWebHostModule>.GetEventStoreModules()
  nameWithType.vb: CqrsWebHost(Of TAuthenticationToken, TAuthenticationTokenHelper, TWebHostModule).GetEventStoreModules()
  fullName.vb: Cqrs.Ninject.Azure.Wcf.CqrsWebHost(Of TAuthenticationToken, TAuthenticationTokenHelper, TWebHostModule).GetEventStoreModules()
  spec.csharp:
  - uid: Cqrs.Ninject.Azure.Wcf.CqrsWebHost`3.GetEventStoreModules
    name: GetEventStoreModules
    nameWithType: CqrsWebHost<TAuthenticationToken, TAuthenticationTokenHelper, TWebHostModule>.GetEventStoreModules
    fullName: Cqrs.Ninject.Azure.Wcf.CqrsWebHost<TAuthenticationToken, TAuthenticationTokenHelper, TWebHostModule>.GetEventStoreModules
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Ninject.Azure.Wcf.CqrsWebHost`3.GetEventStoreModules
    name: GetEventStoreModules
    nameWithType: CqrsWebHost(Of TAuthenticationToken, TAuthenticationTokenHelper, TWebHostModule).GetEventStoreModules
    fullName: Cqrs.Ninject.Azure.Wcf.CqrsWebHost(Of TAuthenticationToken, TAuthenticationTokenHelper, TWebHostModule).GetEventStoreModules
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1._configurationManager
  commentId: F:Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1._configurationManager
  isExternal: false
  name: _configurationManager
  nameWithType: TelemetryCoreHost<TAuthenticationToken>._configurationManager
  fullName: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost<TAuthenticationToken>._configurationManager
  nameWithType.vb: TelemetryCoreHost(Of TAuthenticationToken)._configurationManager
  fullName.vb: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost(Of TAuthenticationToken)._configurationManager
- uid: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1.ConfigurationManager
  commentId: P:Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1.ConfigurationManager
  isExternal: false
  name: ConfigurationManager
  nameWithType: TelemetryCoreHost<TAuthenticationToken>.ConfigurationManager
  fullName: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost<TAuthenticationToken>.ConfigurationManager
  nameWithType.vb: TelemetryCoreHost(Of TAuthenticationToken).ConfigurationManager
  fullName.vb: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost(Of TAuthenticationToken).ConfigurationManager
- uid: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1.TelemetryClient
  commentId: P:Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1.TelemetryClient
  isExternal: false
  name: TelemetryClient
  nameWithType: TelemetryCoreHost<TAuthenticationToken>.TelemetryClient
  fullName: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost<TAuthenticationToken>.TelemetryClient
  nameWithType.vb: TelemetryCoreHost(Of TAuthenticationToken).TelemetryClient
  fullName.vb: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost(Of TAuthenticationToken).TelemetryClient
- uid: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1.ConfigureTelemetry
  commentId: M:Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1.ConfigureTelemetry
  isExternal: false
  name: ConfigureTelemetry()
  nameWithType: TelemetryCoreHost<TAuthenticationToken>.ConfigureTelemetry()
  fullName: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost<TAuthenticationToken>.ConfigureTelemetry()
  nameWithType.vb: TelemetryCoreHost(Of TAuthenticationToken).ConfigureTelemetry()
  fullName.vb: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost(Of TAuthenticationToken).ConfigureTelemetry()
  spec.csharp:
  - uid: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1.ConfigureTelemetry
    name: ConfigureTelemetry
    nameWithType: TelemetryCoreHost<TAuthenticationToken>.ConfigureTelemetry
    fullName: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost<TAuthenticationToken>.ConfigureTelemetry
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1.ConfigureTelemetry
    name: ConfigureTelemetry
    nameWithType: TelemetryCoreHost(Of TAuthenticationToken).ConfigureTelemetry
    fullName: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost(Of TAuthenticationToken).ConfigureTelemetry
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1.Run(System.Action)
  commentId: M:Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1.Run(System.Action)
  isExternal: true
  name: Run(Action)
  nameWithType: TelemetryCoreHost<TAuthenticationToken>.Run(Action)
  fullName: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost<TAuthenticationToken>.Run(System.Action)
  nameWithType.vb: TelemetryCoreHost(Of TAuthenticationToken).Run(Action)
  fullName.vb: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost(Of TAuthenticationToken).Run(System.Action)
  spec.csharp:
  - uid: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1.Run(System.Action)
    name: Run
    nameWithType: TelemetryCoreHost<TAuthenticationToken>.Run
    fullName: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost<TAuthenticationToken>.Run
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1.Run(System.Action)
    name: Run
    nameWithType: TelemetryCoreHost(Of TAuthenticationToken).Run
    fullName: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost(Of TAuthenticationToken).Run
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1.PrepareSecurityProtocol
  commentId: M:Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1.PrepareSecurityProtocol
  isExternal: false
  name: PrepareSecurityProtocol()
  nameWithType: TelemetryCoreHost<TAuthenticationToken>.PrepareSecurityProtocol()
  fullName: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost<TAuthenticationToken>.PrepareSecurityProtocol()
  nameWithType.vb: TelemetryCoreHost(Of TAuthenticationToken).PrepareSecurityProtocol()
  fullName.vb: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost(Of TAuthenticationToken).PrepareSecurityProtocol()
  spec.csharp:
  - uid: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1.PrepareSecurityProtocol
    name: PrepareSecurityProtocol
    nameWithType: TelemetryCoreHost<TAuthenticationToken>.PrepareSecurityProtocol
    fullName: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost<TAuthenticationToken>.PrepareSecurityProtocol
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1.PrepareSecurityProtocol
    name: PrepareSecurityProtocol
    nameWithType: TelemetryCoreHost(Of TAuthenticationToken).PrepareSecurityProtocol
    fullName: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost(Of TAuthenticationToken).PrepareSecurityProtocol
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1.Prepare
  commentId: M:Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1.Prepare
  isExternal: false
  name: Prepare()
  nameWithType: TelemetryCoreHost<TAuthenticationToken>.Prepare()
  fullName: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost<TAuthenticationToken>.Prepare()
  nameWithType.vb: TelemetryCoreHost(Of TAuthenticationToken).Prepare()
  fullName.vb: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost(Of TAuthenticationToken).Prepare()
  spec.csharp:
  - uid: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1.Prepare
    name: Prepare
    nameWithType: TelemetryCoreHost<TAuthenticationToken>.Prepare
    fullName: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost<TAuthenticationToken>.Prepare
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1.Prepare
    name: Prepare
    nameWithType: TelemetryCoreHost(Of TAuthenticationToken).Prepare
    fullName: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost(Of TAuthenticationToken).Prepare
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1.Start
  commentId: M:Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1.Start
  isExternal: false
  name: Start()
  nameWithType: TelemetryCoreHost<TAuthenticationToken>.Start()
  fullName: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost<TAuthenticationToken>.Start()
  nameWithType.vb: TelemetryCoreHost(Of TAuthenticationToken).Start()
  fullName.vb: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost(Of TAuthenticationToken).Start()
  spec.csharp:
  - uid: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1.Start
    name: Start
    nameWithType: TelemetryCoreHost<TAuthenticationToken>.Start
    fullName: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost<TAuthenticationToken>.Start
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1.Start
    name: Start
    nameWithType: TelemetryCoreHost(Of TAuthenticationToken).Start
    fullName: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost(Of TAuthenticationToken).Start
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Hosts.CoreHost`1.HandlerTypes
  commentId: P:Cqrs.Hosts.CoreHost`1.HandlerTypes
  isExternal: false
  name: HandlerTypes
  nameWithType: CoreHost<TAuthenticationToken>.HandlerTypes
  fullName: Cqrs.Hosts.CoreHost<TAuthenticationToken>.HandlerTypes
  nameWithType.vb: CoreHost(Of TAuthenticationToken).HandlerTypes
  fullName.vb: Cqrs.Hosts.CoreHost(Of TAuthenticationToken).HandlerTypes
- uid: Cqrs.Hosts.CoreHost`1.EventBus
  commentId: P:Cqrs.Hosts.CoreHost`1.EventBus
  isExternal: false
  name: EventBus
  nameWithType: CoreHost<TAuthenticationToken>.EventBus
  fullName: Cqrs.Hosts.CoreHost<TAuthenticationToken>.EventBus
  nameWithType.vb: CoreHost(Of TAuthenticationToken).EventBus
  fullName.vb: Cqrs.Hosts.CoreHost(Of TAuthenticationToken).EventBus
- uid: Cqrs.Hosts.CoreHost`1.CommandBus
  commentId: P:Cqrs.Hosts.CoreHost`1.CommandBus
  isExternal: false
  name: CommandBus
  nameWithType: CoreHost<TAuthenticationToken>.CommandBus
  fullName: Cqrs.Hosts.CoreHost<TAuthenticationToken>.CommandBus
  nameWithType.vb: CoreHost(Of TAuthenticationToken).CommandBus
  fullName.vb: Cqrs.Hosts.CoreHost(Of TAuthenticationToken).CommandBus
- uid: Cqrs.Hosts.CoreHost`1.TelemetryName
  commentId: P:Cqrs.Hosts.CoreHost`1.TelemetryName
  isExternal: false
  name: TelemetryName
  nameWithType: CoreHost<TAuthenticationToken>.TelemetryName
  fullName: Cqrs.Hosts.CoreHost<TAuthenticationToken>.TelemetryName
  nameWithType.vb: CoreHost(Of TAuthenticationToken).TelemetryName
  fullName.vb: Cqrs.Hosts.CoreHost(Of TAuthenticationToken).TelemetryName
- uid: Cqrs.Hosts.CoreHost`1.CorrelationIdHelper
  commentId: P:Cqrs.Hosts.CoreHost`1.CorrelationIdHelper
  isExternal: false
  name: CorrelationIdHelper
  nameWithType: CoreHost<TAuthenticationToken>.CorrelationIdHelper
  fullName: Cqrs.Hosts.CoreHost<TAuthenticationToken>.CorrelationIdHelper
  nameWithType.vb: CoreHost(Of TAuthenticationToken).CorrelationIdHelper
  fullName.vb: Cqrs.Hosts.CoreHost(Of TAuthenticationToken).CorrelationIdHelper
- uid: Cqrs.Hosts.CoreHost`1.Logger
  commentId: P:Cqrs.Hosts.CoreHost`1.Logger
  isExternal: false
  name: Logger
  nameWithType: CoreHost<TAuthenticationToken>.Logger
  fullName: Cqrs.Hosts.CoreHost<TAuthenticationToken>.Logger
  nameWithType.vb: CoreHost(Of TAuthenticationToken).Logger
  fullName.vb: Cqrs.Hosts.CoreHost(Of TAuthenticationToken).Logger
- uid: Cqrs.Hosts.CoreHost`1.ConfigureDefaultDependencyResolver
  commentId: M:Cqrs.Hosts.CoreHost`1.ConfigureDefaultDependencyResolver
  isExternal: false
  name: ConfigureDefaultDependencyResolver()
  nameWithType: CoreHost<TAuthenticationToken>.ConfigureDefaultDependencyResolver()
  fullName: Cqrs.Hosts.CoreHost<TAuthenticationToken>.ConfigureDefaultDependencyResolver()
  nameWithType.vb: CoreHost(Of TAuthenticationToken).ConfigureDefaultDependencyResolver()
  fullName.vb: Cqrs.Hosts.CoreHost(Of TAuthenticationToken).ConfigureDefaultDependencyResolver()
  spec.csharp:
  - uid: Cqrs.Hosts.CoreHost`1.ConfigureDefaultDependencyResolver
    name: ConfigureDefaultDependencyResolver
    nameWithType: CoreHost<TAuthenticationToken>.ConfigureDefaultDependencyResolver
    fullName: Cqrs.Hosts.CoreHost<TAuthenticationToken>.ConfigureDefaultDependencyResolver
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Hosts.CoreHost`1.ConfigureDefaultDependencyResolver
    name: ConfigureDefaultDependencyResolver
    nameWithType: CoreHost(Of TAuthenticationToken).ConfigureDefaultDependencyResolver
    fullName: Cqrs.Hosts.CoreHost(Of TAuthenticationToken).ConfigureDefaultDependencyResolver
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Hosts.CoreHost`1.ManuallyRegisterEventHandler``1(System.Action{``0},System.Boolean)
  commentId: M:Cqrs.Hosts.CoreHost`1.ManuallyRegisterEventHandler``1(System.Action{``0},System.Boolean)
  isExternal: true
  name: ManuallyRegisterEventHandler<TMessage>(Action<TMessage>, Boolean)
  nameWithType: CoreHost<TAuthenticationToken>.ManuallyRegisterEventHandler<TMessage>(Action<TMessage>, Boolean)
  fullName: Cqrs.Hosts.CoreHost<TAuthenticationToken>.ManuallyRegisterEventHandler<TMessage>(System.Action<TMessage>, System.Boolean)
  nameWithType.vb: CoreHost(Of TAuthenticationToken).ManuallyRegisterEventHandler(Of TMessage)(Action(Of TMessage), Boolean)
  fullName.vb: Cqrs.Hosts.CoreHost(Of TAuthenticationToken).ManuallyRegisterEventHandler(Of TMessage)(System.Action(Of TMessage), System.Boolean)
  name.vb: ManuallyRegisterEventHandler(Of TMessage)(Action(Of TMessage), Boolean)
  spec.csharp:
  - uid: Cqrs.Hosts.CoreHost`1.ManuallyRegisterEventHandler``1(System.Action{``0},System.Boolean)
    name: ManuallyRegisterEventHandler<TMessage>
    nameWithType: CoreHost<TAuthenticationToken>.ManuallyRegisterEventHandler<TMessage>
    fullName: Cqrs.Hosts.CoreHost<TAuthenticationToken>.ManuallyRegisterEventHandler<TMessage>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TMessage
    nameWithType: TMessage
    fullName: TMessage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Hosts.CoreHost`1.ManuallyRegisterEventHandler``1(System.Action{``0},System.Boolean)
    name: ManuallyRegisterEventHandler(Of TMessage)
    nameWithType: CoreHost(Of TAuthenticationToken).ManuallyRegisterEventHandler(Of TMessage)
    fullName: Cqrs.Hosts.CoreHost(Of TAuthenticationToken).ManuallyRegisterEventHandler(Of TMessage)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TMessage
    nameWithType: TMessage
    fullName: TMessage
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Hosts.CoreHost`1.ManuallyRegisterCommandHandler``1(System.Action{``0},System.Boolean)
  commentId: M:Cqrs.Hosts.CoreHost`1.ManuallyRegisterCommandHandler``1(System.Action{``0},System.Boolean)
  isExternal: true
  name: ManuallyRegisterCommandHandler<TMessage>(Action<TMessage>, Boolean)
  nameWithType: CoreHost<TAuthenticationToken>.ManuallyRegisterCommandHandler<TMessage>(Action<TMessage>, Boolean)
  fullName: Cqrs.Hosts.CoreHost<TAuthenticationToken>.ManuallyRegisterCommandHandler<TMessage>(System.Action<TMessage>, System.Boolean)
  nameWithType.vb: CoreHost(Of TAuthenticationToken).ManuallyRegisterCommandHandler(Of TMessage)(Action(Of TMessage), Boolean)
  fullName.vb: Cqrs.Hosts.CoreHost(Of TAuthenticationToken).ManuallyRegisterCommandHandler(Of TMessage)(System.Action(Of TMessage), System.Boolean)
  name.vb: ManuallyRegisterCommandHandler(Of TMessage)(Action(Of TMessage), Boolean)
  spec.csharp:
  - uid: Cqrs.Hosts.CoreHost`1.ManuallyRegisterCommandHandler``1(System.Action{``0},System.Boolean)
    name: ManuallyRegisterCommandHandler<TMessage>
    nameWithType: CoreHost<TAuthenticationToken>.ManuallyRegisterCommandHandler<TMessage>
    fullName: Cqrs.Hosts.CoreHost<TAuthenticationToken>.ManuallyRegisterCommandHandler<TMessage>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TMessage
    nameWithType: TMessage
    fullName: TMessage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Hosts.CoreHost`1.ManuallyRegisterCommandHandler``1(System.Action{``0},System.Boolean)
    name: ManuallyRegisterCommandHandler(Of TMessage)
    nameWithType: CoreHost(Of TAuthenticationToken).ManuallyRegisterCommandHandler(Of TMessage)
    fullName: Cqrs.Hosts.CoreHost(Of TAuthenticationToken).ManuallyRegisterCommandHandler(Of TMessage)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TMessage
    nameWithType: TMessage
    fullName: TMessage
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Hosts.CoreHost`1.StartBusRegistrar
  commentId: M:Cqrs.Hosts.CoreHost`1.StartBusRegistrar
  isExternal: false
  name: StartBusRegistrar()
  nameWithType: CoreHost<TAuthenticationToken>.StartBusRegistrar()
  fullName: Cqrs.Hosts.CoreHost<TAuthenticationToken>.StartBusRegistrar()
  nameWithType.vb: CoreHost(Of TAuthenticationToken).StartBusRegistrar()
  fullName.vb: Cqrs.Hosts.CoreHost(Of TAuthenticationToken).StartBusRegistrar()
  spec.csharp:
  - uid: Cqrs.Hosts.CoreHost`1.StartBusRegistrar
    name: StartBusRegistrar
    nameWithType: CoreHost<TAuthenticationToken>.StartBusRegistrar
    fullName: Cqrs.Hosts.CoreHost<TAuthenticationToken>.StartBusRegistrar
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Hosts.CoreHost`1.StartBusRegistrar
    name: StartBusRegistrar
    nameWithType: CoreHost(Of TAuthenticationToken).StartBusRegistrar
    fullName: Cqrs.Hosts.CoreHost(Of TAuthenticationToken).StartBusRegistrar
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Ninject.Azure.WebJobs.CqrsNinjectJobHost`2.CoreHost
  commentId: P:Cqrs.Ninject.Azure.WebJobs.CqrsNinjectJobHost`2.CoreHost
- uid: Cqrs.Ninject.Azure.WebJobs.CqrsNinjectJobHost`2.CoreHost*
  commentId: Overload:Cqrs.Ninject.Azure.WebJobs.CqrsNinjectJobHost`2.CoreHost
  isExternal: false
  name: CoreHost
  nameWithType: CqrsNinjectJobHost<TAuthenticationToken, TAuthenticationTokenHelper>.CoreHost
  fullName: Cqrs.Ninject.Azure.WebJobs.CqrsNinjectJobHost<TAuthenticationToken, TAuthenticationTokenHelper>.CoreHost
  nameWithType.vb: CqrsNinjectJobHost(Of TAuthenticationToken, TAuthenticationTokenHelper).CoreHost
  fullName.vb: Cqrs.Ninject.Azure.WebJobs.CqrsNinjectJobHost(Of TAuthenticationToken, TAuthenticationTokenHelper).CoreHost
- uid: System.Action
  commentId: T:System.Action
  parent: System
  isExternal: true
  name: Action
  nameWithType: Action
  fullName: System.Action
- uid: Microsoft.Azure.WebJobs.JobHost.RunAndBlock
  commentId: M:Microsoft.Azure.WebJobs.JobHost.RunAndBlock
- uid: Cqrs.Ninject.Azure.WebJobs.CqrsNinjectJobHost`2.PreRunAndBlockAction*
  commentId: Overload:Cqrs.Ninject.Azure.WebJobs.CqrsNinjectJobHost`2.PreRunAndBlockAction
  isExternal: false
  name: PreRunAndBlockAction
  nameWithType: CqrsNinjectJobHost<TAuthenticationToken, TAuthenticationTokenHelper>.PreRunAndBlockAction
  fullName: Cqrs.Ninject.Azure.WebJobs.CqrsNinjectJobHost<TAuthenticationToken, TAuthenticationTokenHelper>.PreRunAndBlockAction
  nameWithType.vb: CqrsNinjectJobHost(Of TAuthenticationToken, TAuthenticationTokenHelper).PreRunAndBlockAction
  fullName.vb: Cqrs.Ninject.Azure.WebJobs.CqrsNinjectJobHost(Of TAuthenticationToken, TAuthenticationTokenHelper).PreRunAndBlockAction
- uid: Cqrs.Ninject.Azure.WebJobs.CqrsNinjectJobHost`2.StartHost*
  commentId: Overload:Cqrs.Ninject.Azure.WebJobs.CqrsNinjectJobHost`2.StartHost
  isExternal: false
  name: StartHost
  nameWithType: CqrsNinjectJobHost<TAuthenticationToken, TAuthenticationTokenHelper>.StartHost
  fullName: Cqrs.Ninject.Azure.WebJobs.CqrsNinjectJobHost<TAuthenticationToken, TAuthenticationTokenHelper>.StartHost
  nameWithType.vb: CqrsNinjectJobHost(Of TAuthenticationToken, TAuthenticationTokenHelper).StartHost
  fullName.vb: Cqrs.Ninject.Azure.WebJobs.CqrsNinjectJobHost(Of TAuthenticationToken, TAuthenticationTokenHelper).StartHost
