### YamlMime:ManagedReference
items:
- uid: Cqrs.Events.IEventReceiver
  commentId: T:Cqrs.Events.IEventReceiver
  id: IEventReceiver
  parent: Cqrs.Events
  children:
  - Cqrs.Events.IEventReceiver.Start
  langs:
  - csharp
  - vb
  name: IEventReceiver
  nameWithType: IEventReceiver
  fullName: Cqrs.Events.IEventReceiver
  type: Interface
  source:
    remote:
      path: Framework/Cqrs/Events/IEventReceiver.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: IEventReceiver
    path: Framework/Cqrs/Events/IEventReceiver.cs
    startLine: 13
  assemblies:
  - Cqrs
  namespace: Cqrs.Events
  summary: "\nReceives instances of a <xref href=\"Cqrs.Events.IEvent%601\" data-throw-if-not-resolved=\"false\"></xref> from the event bus.\n"
  example: []
  syntax:
    content: public interface IEventReceiver
    content.vb: Public Interface IEventReceiver
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Cqrs.Events.IEventReceiver.Start
  commentId: M:Cqrs.Events.IEventReceiver.Start
  id: Start
  parent: Cqrs.Events.IEventReceiver
  langs:
  - csharp
  - vb
  name: Start()
  nameWithType: IEventReceiver.Start()
  fullName: Cqrs.Events.IEventReceiver.Start()
  type: Method
  source:
    remote:
      path: Framework/Cqrs/Events/IEventReceiver.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Start
    path: Framework/Cqrs/Events/IEventReceiver.cs
    startLine: 18
  assemblies:
  - Cqrs
  namespace: Cqrs.Events
  summary: "\nStarts listening and processing instances of <xref href=\"Cqrs.Events.IEvent%601\" data-throw-if-not-resolved=\"false\"></xref> from the event bus.\n"
  example: []
  syntax:
    content: void Start()
    content.vb: Sub Start
  overload: Cqrs.Events.IEventReceiver.Start*
references:
- uid: Cqrs.Events.IEvent`1
  commentId: T:Cqrs.Events.IEvent`1
  isExternal: false
  name: IEvent<TAuthenticationToken>
  nameWithType: IEvent<TAuthenticationToken>
  fullName: Cqrs.Events.IEvent<TAuthenticationToken>
  nameWithType.vb: IEvent(Of TAuthenticationToken)
  fullName.vb: Cqrs.Events.IEvent(Of TAuthenticationToken)
  name.vb: IEvent(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Events
  commentId: N:Cqrs.Events
  isExternal: false
  name: Cqrs.Events
  nameWithType: Cqrs.Events
  fullName: Cqrs.Events
- uid: Cqrs.Events.IEventReceiver.Start*
  commentId: Overload:Cqrs.Events.IEventReceiver.Start
  isExternal: false
  name: Start
  nameWithType: IEventReceiver.Start
  fullName: Cqrs.Events.IEventReceiver.Start
