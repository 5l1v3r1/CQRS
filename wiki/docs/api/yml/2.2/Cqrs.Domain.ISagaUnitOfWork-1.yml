### YamlMime:ManagedReference
items:
- uid: Cqrs.Domain.ISagaUnitOfWork`1
  commentId: T:Cqrs.Domain.ISagaUnitOfWork`1
  id: ISagaUnitOfWork`1
  parent: Cqrs.Domain
  children:
  - Cqrs.Domain.ISagaUnitOfWork`1.Add``1(``0)
  - Cqrs.Domain.ISagaUnitOfWork`1.Commit
  - Cqrs.Domain.ISagaUnitOfWork`1.Get``1(System.Guid,System.Nullable{System.Int32})
  langs:
  - csharp
  - vb
  name: ISagaUnitOfWork<TAuthenticationToken>
  nameWithType: ISagaUnitOfWork<TAuthenticationToken>
  fullName: Cqrs.Domain.ISagaUnitOfWork<TAuthenticationToken>
  type: Interface
  source:
    remote:
      path: Framework/Cqrs/Domain/ISagaUnitOfWork.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: ISagaUnitOfWork
    path: Framework/Cqrs/Domain/ISagaUnitOfWork.cs
    startLine: 15
  assemblies:
  - Cqrs
  namespace: Cqrs.Domain
  summary: "\nThis is a Unit of Work for sagas\n"
  example: []
  syntax:
    content: public interface ISagaUnitOfWork<TAuthenticationToken>
    typeParameters:
    - id: TAuthenticationToken
    content.vb: Public Interface ISagaUnitOfWork(Of TAuthenticationToken)
  nameWithType.vb: ISagaUnitOfWork(Of TAuthenticationToken)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: Cqrs.Domain.ISagaUnitOfWork(Of TAuthenticationToken)
  name.vb: ISagaUnitOfWork(Of TAuthenticationToken)
- uid: Cqrs.Domain.ISagaUnitOfWork`1.Add``1(``0)
  commentId: M:Cqrs.Domain.ISagaUnitOfWork`1.Add``1(``0)
  id: Add``1(``0)
  parent: Cqrs.Domain.ISagaUnitOfWork`1
  langs:
  - csharp
  - vb
  name: Add<TSaga>(TSaga)
  nameWithType: ISagaUnitOfWork<TAuthenticationToken>.Add<TSaga>(TSaga)
  fullName: Cqrs.Domain.ISagaUnitOfWork<TAuthenticationToken>.Add<TSaga>(TSaga)
  type: Method
  source:
    remote:
      path: Framework/Cqrs/Domain/ISagaUnitOfWork.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Add
    path: Framework/Cqrs/Domain/ISagaUnitOfWork.cs
    startLine: 20
  assemblies:
  - Cqrs
  namespace: Cqrs.Domain
  summary: "\nAdd an item into the <xref href=\"Cqrs.Domain.ISagaUnitOfWork%601\" data-throw-if-not-resolved=\"false\"></xref> ready to be committed.\n"
  example: []
  syntax:
    content: 'void Add<TSaga>(TSaga saga)where TSaga : ISaga<TAuthenticationToken>'
    parameters:
    - id: saga
      type: '{TSaga}'
    typeParameters:
    - id: TSaga
    content.vb: Sub Add(Of TSaga As ISaga(Of TAuthenticationToken))(saga As TSaga)
  overload: Cqrs.Domain.ISagaUnitOfWork`1.Add*
  nameWithType.vb: ISagaUnitOfWork(Of TAuthenticationToken).Add(Of TSaga)(TSaga)
  fullName.vb: Cqrs.Domain.ISagaUnitOfWork(Of TAuthenticationToken).Add(Of TSaga)(TSaga)
  name.vb: Add(Of TSaga)(TSaga)
- uid: Cqrs.Domain.ISagaUnitOfWork`1.Get``1(System.Guid,System.Nullable{System.Int32})
  commentId: M:Cqrs.Domain.ISagaUnitOfWork`1.Get``1(System.Guid,System.Nullable{System.Int32})
  id: Get``1(System.Guid,System.Nullable{System.Int32})
  parent: Cqrs.Domain.ISagaUnitOfWork`1
  langs:
  - csharp
  - vb
  name: Get<TSaga>(Guid, Nullable<Int32>)
  nameWithType: ISagaUnitOfWork<TAuthenticationToken>.Get<TSaga>(Guid, Nullable<Int32>)
  fullName: Cqrs.Domain.ISagaUnitOfWork<TAuthenticationToken>.Get<TSaga>(System.Guid, System.Nullable<System.Int32>)
  type: Method
  source:
    remote:
      path: Framework/Cqrs/Domain/ISagaUnitOfWork.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Get
    path: Framework/Cqrs/Domain/ISagaUnitOfWork.cs
    startLine: 26
  assemblies:
  - Cqrs
  namespace: Cqrs.Domain
  summary: "\nGet an item from the <xref href=\"Cqrs.Domain.ISagaUnitOfWork%601\" data-throw-if-not-resolved=\"false\"></xref> if it has already been loaded.\n"
  example: []
  syntax:
    content: 'TSaga Get<TSaga>(Guid id, int ? expectedVersion = null)where TSaga : ISaga<TAuthenticationToken>'
    parameters:
    - id: id
      type: System.Guid
    - id: expectedVersion
      type: System.Nullable{System.Int32}
    typeParameters:
    - id: TSaga
    return:
      type: '{TSaga}'
    content.vb: Function Get(Of TSaga As ISaga(Of TAuthenticationToken))(id As Guid, expectedVersion As Integer? = Nothing) As TSaga
  overload: Cqrs.Domain.ISagaUnitOfWork`1.Get*
  nameWithType.vb: ISagaUnitOfWork(Of TAuthenticationToken).Get(Of TSaga)(Guid, Nullable(Of Int32))
  fullName.vb: Cqrs.Domain.ISagaUnitOfWork(Of TAuthenticationToken).Get(Of TSaga)(System.Guid, System.Nullable(Of System.Int32))
  name.vb: Get(Of TSaga)(Guid, Nullable(Of Int32))
- uid: Cqrs.Domain.ISagaUnitOfWork`1.Commit
  commentId: M:Cqrs.Domain.ISagaUnitOfWork`1.Commit
  id: Commit
  parent: Cqrs.Domain.ISagaUnitOfWork`1
  langs:
  - csharp
  - vb
  name: Commit()
  nameWithType: ISagaUnitOfWork<TAuthenticationToken>.Commit()
  fullName: Cqrs.Domain.ISagaUnitOfWork<TAuthenticationToken>.Commit()
  type: Method
  source:
    remote:
      path: Framework/Cqrs/Domain/ISagaUnitOfWork.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Commit
    path: Framework/Cqrs/Domain/ISagaUnitOfWork.cs
    startLine: 32
  assemblies:
  - Cqrs
  namespace: Cqrs.Domain
  summary: "\nCommit any changed <xref href=\"Cqrs.Domain.Saga%601\" data-throw-if-not-resolved=\"false\"></xref> added to this <xref href=\"Cqrs.Domain.ISagaUnitOfWork%601\" data-throw-if-not-resolved=\"false\"></xref> via <xref href=\"Cqrs.Domain.ISagaUnitOfWork%601.Add%60%601(%60%600)\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: void Commit()
    content.vb: Sub Commit
  overload: Cqrs.Domain.ISagaUnitOfWork`1.Commit*
  nameWithType.vb: ISagaUnitOfWork(Of TAuthenticationToken).Commit()
  fullName.vb: Cqrs.Domain.ISagaUnitOfWork(Of TAuthenticationToken).Commit()
references:
- uid: Cqrs.Domain
  commentId: N:Cqrs.Domain
  isExternal: false
  name: Cqrs.Domain
  nameWithType: Cqrs.Domain
  fullName: Cqrs.Domain
- uid: Cqrs.Domain.ISagaUnitOfWork`1
  commentId: T:Cqrs.Domain.ISagaUnitOfWork`1
  isExternal: false
  name: ISagaUnitOfWork<TAuthenticationToken>
  nameWithType: ISagaUnitOfWork<TAuthenticationToken>
  fullName: Cqrs.Domain.ISagaUnitOfWork<TAuthenticationToken>
  nameWithType.vb: ISagaUnitOfWork(Of TAuthenticationToken)
  fullName.vb: Cqrs.Domain.ISagaUnitOfWork(Of TAuthenticationToken)
  name.vb: ISagaUnitOfWork(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Domain.ISagaUnitOfWork`1
    name: ISagaUnitOfWork
    nameWithType: ISagaUnitOfWork
    fullName: Cqrs.Domain.ISagaUnitOfWork
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Domain.ISagaUnitOfWork`1
    name: ISagaUnitOfWork
    nameWithType: ISagaUnitOfWork
    fullName: Cqrs.Domain.ISagaUnitOfWork
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Domain.ISagaUnitOfWork`1.Add*
  commentId: Overload:Cqrs.Domain.ISagaUnitOfWork`1.Add
  isExternal: false
  name: Add
  nameWithType: ISagaUnitOfWork<TAuthenticationToken>.Add
  fullName: Cqrs.Domain.ISagaUnitOfWork<TAuthenticationToken>.Add
  nameWithType.vb: ISagaUnitOfWork(Of TAuthenticationToken).Add
  fullName.vb: Cqrs.Domain.ISagaUnitOfWork(Of TAuthenticationToken).Add
- uid: '{TSaga}'
  commentId: '!:TSaga'
  definition: TSaga
  name: TSaga
  nameWithType: TSaga
  fullName: TSaga
- uid: TSaga
  isExternal: false
  name: TSaga
  nameWithType: TSaga
  fullName: TSaga
- uid: Cqrs.Domain.ISagaUnitOfWork`1.Get*
  commentId: Overload:Cqrs.Domain.ISagaUnitOfWork`1.Get
  isExternal: false
  name: Get
  nameWithType: ISagaUnitOfWork<TAuthenticationToken>.Get
  fullName: Cqrs.Domain.ISagaUnitOfWork<TAuthenticationToken>.Get
  nameWithType.vb: ISagaUnitOfWork(Of TAuthenticationToken).Get
  fullName.vb: Cqrs.Domain.ISagaUnitOfWork(Of TAuthenticationToken).Get
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Domain.Saga`1
  commentId: T:Cqrs.Domain.Saga`1
  isExternal: false
  name: Saga<TAuthenticationToken>
  nameWithType: Saga<TAuthenticationToken>
  fullName: Cqrs.Domain.Saga<TAuthenticationToken>
  nameWithType.vb: Saga(Of TAuthenticationToken)
  fullName.vb: Cqrs.Domain.Saga(Of TAuthenticationToken)
  name.vb: Saga(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Domain.Saga`1
    name: Saga
    nameWithType: Saga
    fullName: Cqrs.Domain.Saga
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Domain.Saga`1
    name: Saga
    nameWithType: Saga
    fullName: Cqrs.Domain.Saga
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Domain.ISagaUnitOfWork`1.Add``1(``0)
  commentId: M:Cqrs.Domain.ISagaUnitOfWork`1.Add``1(``0)
  isExternal: false
  name: Add<TSaga>(TSaga)
  nameWithType: ISagaUnitOfWork<TAuthenticationToken>.Add<TSaga>(TSaga)
  fullName: Cqrs.Domain.ISagaUnitOfWork<TAuthenticationToken>.Add<TSaga>(TSaga)
  nameWithType.vb: ISagaUnitOfWork(Of TAuthenticationToken).Add(Of TSaga)(TSaga)
  fullName.vb: Cqrs.Domain.ISagaUnitOfWork(Of TAuthenticationToken).Add(Of TSaga)(TSaga)
  name.vb: Add(Of TSaga)(TSaga)
  spec.csharp:
  - uid: Cqrs.Domain.ISagaUnitOfWork`1.Add``1(``0)
    name: Add<TSaga>
    nameWithType: ISagaUnitOfWork<TAuthenticationToken>.Add<TSaga>
    fullName: Cqrs.Domain.ISagaUnitOfWork<TAuthenticationToken>.Add<TSaga>
  - name: (
    nameWithType: (
    fullName: (
  - name: TSaga
    nameWithType: TSaga
    fullName: TSaga
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Domain.ISagaUnitOfWork`1.Add``1(``0)
    name: Add(Of TSaga)
    nameWithType: ISagaUnitOfWork(Of TAuthenticationToken).Add(Of TSaga)
    fullName: Cqrs.Domain.ISagaUnitOfWork(Of TAuthenticationToken).Add(Of TSaga)
  - name: (
    nameWithType: (
    fullName: (
  - name: TSaga
    nameWithType: TSaga
    fullName: TSaga
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Domain.ISagaUnitOfWork`1.Commit*
  commentId: Overload:Cqrs.Domain.ISagaUnitOfWork`1.Commit
  isExternal: false
  name: Commit
  nameWithType: ISagaUnitOfWork<TAuthenticationToken>.Commit
  fullName: Cqrs.Domain.ISagaUnitOfWork<TAuthenticationToken>.Commit
  nameWithType.vb: ISagaUnitOfWork(Of TAuthenticationToken).Commit
  fullName.vb: Cqrs.Domain.ISagaUnitOfWork(Of TAuthenticationToken).Commit
