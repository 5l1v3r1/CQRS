### YamlMime:ManagedReference
items:
- uid: Cqrs.MongoDB.Events.Indexes.ByCorrelationIdMongoDbIndex
  commentId: T:Cqrs.MongoDB.Events.Indexes.ByCorrelationIdMongoDbIndex
  id: ByCorrelationIdMongoDbIndex
  parent: Cqrs.MongoDB.Events.Indexes
  children:
  - Cqrs.MongoDB.Events.Indexes.ByCorrelationIdMongoDbIndex.#ctor
  langs:
  - csharp
  - vb
  name: ByCorrelationIdMongoDbIndex
  nameWithType: ByCorrelationIdMongoDbIndex
  fullName: Cqrs.MongoDB.Events.Indexes.ByCorrelationIdMongoDbIndex
  type: Class
  source:
    remote:
      path: Framework/Cqrs.MongoDB/Events/Indexes/ByCorrelationIdMongoDbIndex.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: ByCorrelationIdMongoDbIndex
    path: Framework/Cqrs.MongoDB/Events/Indexes/ByCorrelationIdMongoDbIndex.cs
    startLine: 18
  assemblies:
  - Cqrs.MongoDB
  namespace: Cqrs.MongoDB.Events.Indexes
  summary: "\nA <xref href=\"Cqrs.MongoDB.DataStores.Indexes.MongoDbIndex%601\" data-throw-if-not-resolved=\"false\"></xref> for <xref href=\"Cqrs.Events.EventData.CorrelationId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: 'public class ByCorrelationIdMongoDbIndex : MongoDbIndex<MongoDbEventData>'
    content.vb: >-
      Public Class ByCorrelationIdMongoDbIndex

          Inherits MongoDbIndex(Of MongoDbEventData)
  inheritance:
  - System.Object
  - Cqrs.MongoDB.DataStores.Indexes.MongoDbIndex{Cqrs.MongoDB.Events.MongoDbEventData}
  inheritedMembers:
  - Cqrs.MongoDB.DataStores.Indexes.MongoDbIndex{Cqrs.MongoDB.Events.MongoDbEventData}.IsUnique
  - Cqrs.MongoDB.DataStores.Indexes.MongoDbIndex{Cqrs.MongoDB.Events.MongoDbEventData}.IsAcending
  - Cqrs.MongoDB.DataStores.Indexes.MongoDbIndex{Cqrs.MongoDB.Events.MongoDbEventData}.Name
  - Cqrs.MongoDB.DataStores.Indexes.MongoDbIndex{Cqrs.MongoDB.Events.MongoDbEventData}.Selectors
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Cqrs.MongoDB.Events.Indexes.ByCorrelationIdMongoDbIndex.#ctor
  commentId: M:Cqrs.MongoDB.Events.Indexes.ByCorrelationIdMongoDbIndex.#ctor
  id: '#ctor'
  parent: Cqrs.MongoDB.Events.Indexes.ByCorrelationIdMongoDbIndex
  langs:
  - csharp
  - vb
  name: ByCorrelationIdMongoDbIndex()
  nameWithType: ByCorrelationIdMongoDbIndex.ByCorrelationIdMongoDbIndex()
  fullName: Cqrs.MongoDB.Events.Indexes.ByCorrelationIdMongoDbIndex.ByCorrelationIdMongoDbIndex()
  type: Constructor
  source:
    remote:
      path: Framework/Cqrs.MongoDB/Events/Indexes/ByCorrelationIdMongoDbIndex.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: .ctor
    path: Framework/Cqrs.MongoDB/Events/Indexes/ByCorrelationIdMongoDbIndex.cs
    startLine: 23
  assemblies:
  - Cqrs.MongoDB
  namespace: Cqrs.MongoDB.Events.Indexes
  summary: "\nInstantiate a new instance of <xref href=\"Cqrs.MongoDB.Events.Indexes.ByCorrelationIdMongoDbIndex\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public ByCorrelationIdMongoDbIndex()
    content.vb: Public Sub New
  overload: Cqrs.MongoDB.Events.Indexes.ByCorrelationIdMongoDbIndex.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Cqrs.MongoDB.DataStores.Indexes.MongoDbIndex`1
  commentId: T:Cqrs.MongoDB.DataStores.Indexes.MongoDbIndex`1
  isExternal: false
  name: MongoDbIndex<TEntity>
  nameWithType: MongoDbIndex<TEntity>
  fullName: Cqrs.MongoDB.DataStores.Indexes.MongoDbIndex<TEntity>
  nameWithType.vb: MongoDbIndex(Of TEntity)
  fullName.vb: Cqrs.MongoDB.DataStores.Indexes.MongoDbIndex(Of TEntity)
  name.vb: MongoDbIndex(Of TEntity)
  spec.csharp:
  - uid: Cqrs.MongoDB.DataStores.Indexes.MongoDbIndex`1
    name: MongoDbIndex
    nameWithType: MongoDbIndex
    fullName: Cqrs.MongoDB.DataStores.Indexes.MongoDbIndex
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.MongoDB.DataStores.Indexes.MongoDbIndex`1
    name: MongoDbIndex
    nameWithType: MongoDbIndex
    fullName: Cqrs.MongoDB.DataStores.Indexes.MongoDbIndex
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Events.EventData.CorrelationId
  commentId: P:Cqrs.Events.EventData.CorrelationId
  parent: Cqrs.Events.EventData
  isExternal: false
  name: CorrelationId
  nameWithType: EventData.CorrelationId
  fullName: Cqrs.Events.EventData.CorrelationId
- uid: Cqrs.MongoDB.Events.Indexes
  commentId: N:Cqrs.MongoDB.Events.Indexes
  isExternal: false
  name: Cqrs.MongoDB.Events.Indexes
  nameWithType: Cqrs.MongoDB.Events.Indexes
  fullName: Cqrs.MongoDB.Events.Indexes
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Cqrs.MongoDB.DataStores.Indexes.MongoDbIndex{Cqrs.MongoDB.Events.MongoDbEventData}
  commentId: T:Cqrs.MongoDB.DataStores.Indexes.MongoDbIndex{Cqrs.MongoDB.Events.MongoDbEventData}
  parent: Cqrs.MongoDB.DataStores.Indexes
  definition: Cqrs.MongoDB.DataStores.Indexes.MongoDbIndex`1
  name: MongoDbIndex<MongoDbEventData>
  nameWithType: MongoDbIndex<MongoDbEventData>
  fullName: Cqrs.MongoDB.DataStores.Indexes.MongoDbIndex<Cqrs.MongoDB.Events.MongoDbEventData>
  nameWithType.vb: MongoDbIndex(Of MongoDbEventData)
  fullName.vb: Cqrs.MongoDB.DataStores.Indexes.MongoDbIndex(Of Cqrs.MongoDB.Events.MongoDbEventData)
  name.vb: MongoDbIndex(Of MongoDbEventData)
  spec.csharp:
  - uid: Cqrs.MongoDB.DataStores.Indexes.MongoDbIndex`1
    name: MongoDbIndex
    nameWithType: MongoDbIndex
    fullName: Cqrs.MongoDB.DataStores.Indexes.MongoDbIndex
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cqrs.MongoDB.Events.MongoDbEventData
    name: MongoDbEventData
    nameWithType: MongoDbEventData
    fullName: Cqrs.MongoDB.Events.MongoDbEventData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.MongoDB.DataStores.Indexes.MongoDbIndex`1
    name: MongoDbIndex
    nameWithType: MongoDbIndex
    fullName: Cqrs.MongoDB.DataStores.Indexes.MongoDbIndex
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Cqrs.MongoDB.Events.MongoDbEventData
    name: MongoDbEventData
    nameWithType: MongoDbEventData
    fullName: Cqrs.MongoDB.Events.MongoDbEventData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.MongoDB.DataStores.Indexes.MongoDbIndex{Cqrs.MongoDB.Events.MongoDbEventData}.IsUnique
  commentId: P:Cqrs.MongoDB.DataStores.Indexes.MongoDbIndex{Cqrs.MongoDB.Events.MongoDbEventData}.IsUnique
  parent: Cqrs.MongoDB.DataStores.Indexes.MongoDbIndex{Cqrs.MongoDB.Events.MongoDbEventData}
  definition: Cqrs.MongoDB.DataStores.Indexes.MongoDbIndex`1.IsUnique
  name: IsUnique
  nameWithType: MongoDbIndex<MongoDbEventData>.IsUnique
  fullName: Cqrs.MongoDB.DataStores.Indexes.MongoDbIndex<Cqrs.MongoDB.Events.MongoDbEventData>.IsUnique
  nameWithType.vb: MongoDbIndex(Of MongoDbEventData).IsUnique
  fullName.vb: Cqrs.MongoDB.DataStores.Indexes.MongoDbIndex(Of Cqrs.MongoDB.Events.MongoDbEventData).IsUnique
- uid: Cqrs.MongoDB.DataStores.Indexes.MongoDbIndex{Cqrs.MongoDB.Events.MongoDbEventData}.IsAcending
  commentId: P:Cqrs.MongoDB.DataStores.Indexes.MongoDbIndex{Cqrs.MongoDB.Events.MongoDbEventData}.IsAcending
  parent: Cqrs.MongoDB.DataStores.Indexes.MongoDbIndex{Cqrs.MongoDB.Events.MongoDbEventData}
  definition: Cqrs.MongoDB.DataStores.Indexes.MongoDbIndex`1.IsAcending
  name: IsAcending
  nameWithType: MongoDbIndex<MongoDbEventData>.IsAcending
  fullName: Cqrs.MongoDB.DataStores.Indexes.MongoDbIndex<Cqrs.MongoDB.Events.MongoDbEventData>.IsAcending
  nameWithType.vb: MongoDbIndex(Of MongoDbEventData).IsAcending
  fullName.vb: Cqrs.MongoDB.DataStores.Indexes.MongoDbIndex(Of Cqrs.MongoDB.Events.MongoDbEventData).IsAcending
- uid: Cqrs.MongoDB.DataStores.Indexes.MongoDbIndex{Cqrs.MongoDB.Events.MongoDbEventData}.Name
  commentId: P:Cqrs.MongoDB.DataStores.Indexes.MongoDbIndex{Cqrs.MongoDB.Events.MongoDbEventData}.Name
  parent: Cqrs.MongoDB.DataStores.Indexes.MongoDbIndex{Cqrs.MongoDB.Events.MongoDbEventData}
  definition: Cqrs.MongoDB.DataStores.Indexes.MongoDbIndex`1.Name
  name: Name
  nameWithType: MongoDbIndex<MongoDbEventData>.Name
  fullName: Cqrs.MongoDB.DataStores.Indexes.MongoDbIndex<Cqrs.MongoDB.Events.MongoDbEventData>.Name
  nameWithType.vb: MongoDbIndex(Of MongoDbEventData).Name
  fullName.vb: Cqrs.MongoDB.DataStores.Indexes.MongoDbIndex(Of Cqrs.MongoDB.Events.MongoDbEventData).Name
- uid: Cqrs.MongoDB.DataStores.Indexes.MongoDbIndex{Cqrs.MongoDB.Events.MongoDbEventData}.Selectors
  commentId: P:Cqrs.MongoDB.DataStores.Indexes.MongoDbIndex{Cqrs.MongoDB.Events.MongoDbEventData}.Selectors
  parent: Cqrs.MongoDB.DataStores.Indexes.MongoDbIndex{Cqrs.MongoDB.Events.MongoDbEventData}
  definition: Cqrs.MongoDB.DataStores.Indexes.MongoDbIndex`1.Selectors
  name: Selectors
  nameWithType: MongoDbIndex<MongoDbEventData>.Selectors
  fullName: Cqrs.MongoDB.DataStores.Indexes.MongoDbIndex<Cqrs.MongoDB.Events.MongoDbEventData>.Selectors
  nameWithType.vb: MongoDbIndex(Of MongoDbEventData).Selectors
  fullName.vb: Cqrs.MongoDB.DataStores.Indexes.MongoDbIndex(Of Cqrs.MongoDB.Events.MongoDbEventData).Selectors
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Events.EventData
  commentId: T:Cqrs.Events.EventData
  parent: Cqrs.Events
  isExternal: false
  name: EventData
  nameWithType: EventData
  fullName: Cqrs.Events.EventData
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Cqrs.MongoDB.DataStores.Indexes
  commentId: N:Cqrs.MongoDB.DataStores.Indexes
  isExternal: false
  name: Cqrs.MongoDB.DataStores.Indexes
  nameWithType: Cqrs.MongoDB.DataStores.Indexes
  fullName: Cqrs.MongoDB.DataStores.Indexes
- uid: Cqrs.MongoDB.DataStores.Indexes.MongoDbIndex`1.IsUnique
  commentId: P:Cqrs.MongoDB.DataStores.Indexes.MongoDbIndex`1.IsUnique
  isExternal: false
  name: IsUnique
  nameWithType: MongoDbIndex<TEntity>.IsUnique
  fullName: Cqrs.MongoDB.DataStores.Indexes.MongoDbIndex<TEntity>.IsUnique
  nameWithType.vb: MongoDbIndex(Of TEntity).IsUnique
  fullName.vb: Cqrs.MongoDB.DataStores.Indexes.MongoDbIndex(Of TEntity).IsUnique
- uid: Cqrs.MongoDB.DataStores.Indexes.MongoDbIndex`1.IsAcending
  commentId: P:Cqrs.MongoDB.DataStores.Indexes.MongoDbIndex`1.IsAcending
  isExternal: false
  name: IsAcending
  nameWithType: MongoDbIndex<TEntity>.IsAcending
  fullName: Cqrs.MongoDB.DataStores.Indexes.MongoDbIndex<TEntity>.IsAcending
  nameWithType.vb: MongoDbIndex(Of TEntity).IsAcending
  fullName.vb: Cqrs.MongoDB.DataStores.Indexes.MongoDbIndex(Of TEntity).IsAcending
- uid: Cqrs.MongoDB.DataStores.Indexes.MongoDbIndex`1.Name
  commentId: P:Cqrs.MongoDB.DataStores.Indexes.MongoDbIndex`1.Name
  isExternal: false
  name: Name
  nameWithType: MongoDbIndex<TEntity>.Name
  fullName: Cqrs.MongoDB.DataStores.Indexes.MongoDbIndex<TEntity>.Name
  nameWithType.vb: MongoDbIndex(Of TEntity).Name
  fullName.vb: Cqrs.MongoDB.DataStores.Indexes.MongoDbIndex(Of TEntity).Name
- uid: Cqrs.MongoDB.DataStores.Indexes.MongoDbIndex`1.Selectors
  commentId: P:Cqrs.MongoDB.DataStores.Indexes.MongoDbIndex`1.Selectors
  isExternal: false
  name: Selectors
  nameWithType: MongoDbIndex<TEntity>.Selectors
  fullName: Cqrs.MongoDB.DataStores.Indexes.MongoDbIndex<TEntity>.Selectors
  nameWithType.vb: MongoDbIndex(Of TEntity).Selectors
  fullName.vb: Cqrs.MongoDB.DataStores.Indexes.MongoDbIndex(Of TEntity).Selectors
- uid: Cqrs.Events
  commentId: N:Cqrs.Events
  isExternal: false
  name: Cqrs.Events
  nameWithType: Cqrs.Events
  fullName: Cqrs.Events
- uid: Cqrs.MongoDB.Events.Indexes.ByCorrelationIdMongoDbIndex
  commentId: T:Cqrs.MongoDB.Events.Indexes.ByCorrelationIdMongoDbIndex
  isExternal: false
  name: ByCorrelationIdMongoDbIndex
  nameWithType: ByCorrelationIdMongoDbIndex
  fullName: Cqrs.MongoDB.Events.Indexes.ByCorrelationIdMongoDbIndex
- uid: Cqrs.MongoDB.Events.Indexes.ByCorrelationIdMongoDbIndex.#ctor*
  commentId: Overload:Cqrs.MongoDB.Events.Indexes.ByCorrelationIdMongoDbIndex.#ctor
  isExternal: false
  name: ByCorrelationIdMongoDbIndex
  nameWithType: ByCorrelationIdMongoDbIndex.ByCorrelationIdMongoDbIndex
  fullName: Cqrs.MongoDB.Events.Indexes.ByCorrelationIdMongoDbIndex.ByCorrelationIdMongoDbIndex
