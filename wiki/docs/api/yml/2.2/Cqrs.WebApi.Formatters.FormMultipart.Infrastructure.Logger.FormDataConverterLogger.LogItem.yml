### YamlMime:ManagedReference
items:
- uid: Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger.FormDataConverterLogger.LogItem
  commentId: T:Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger.FormDataConverterLogger.LogItem
  id: FormDataConverterLogger.LogItem
  parent: Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger
  children:
  - Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger.FormDataConverterLogger.LogItem.ErrorPath
  - Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger.FormDataConverterLogger.LogItem.Errors
  langs:
  - csharp
  - vb
  name: FormDataConverterLogger.LogItem
  nameWithType: FormDataConverterLogger.LogItem
  fullName: Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger.FormDataConverterLogger.LogItem
  type: Class
  source:
    remote:
      path: Framework/Cqrs.WebApi/Formatters/FormMultipart/Infrastructure/Logger/FormDataConverterLogger.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: LogItem
    path: Framework/Cqrs.WebApi/Formatters/FormMultipart/Infrastructure/Logger/FormDataConverterLogger.cs
    startLine: 95
  assemblies:
  - Cqrs.WebApi
  namespace: Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger
  summary: "\nErrors for a given path.\n"
  example: []
  syntax:
    content: public class LogItem
    content.vb: Public Class LogItem
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger.FormDataConverterLogger.LogItem.ErrorPath
  commentId: P:Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger.FormDataConverterLogger.LogItem.ErrorPath
  id: ErrorPath
  parent: Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger.FormDataConverterLogger.LogItem
  langs:
  - csharp
  - vb
  name: ErrorPath
  nameWithType: FormDataConverterLogger.LogItem.ErrorPath
  fullName: Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger.FormDataConverterLogger.LogItem.ErrorPath
  type: Property
  source:
    remote:
      path: Framework/Cqrs.WebApi/Formatters/FormMultipart/Infrastructure/Logger/FormDataConverterLogger.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: ErrorPath
    path: Framework/Cqrs.WebApi/Formatters/FormMultipart/Infrastructure/Logger/FormDataConverterLogger.cs
    startLine: 100
  assemblies:
  - Cqrs.WebApi
  namespace: Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger
  summary: "\nThe path identifying where the <xref href=\"System.Exception\" data-throw-if-not-resolved=\"false\"></xref> or issue occurred.\n"
  example: []
  syntax:
    content: public string ErrorPath { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ErrorPath As String
  overload: Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger.FormDataConverterLogger.LogItem.ErrorPath*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger.FormDataConverterLogger.LogItem.Errors
  commentId: P:Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger.FormDataConverterLogger.LogItem.Errors
  id: Errors
  parent: Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger.FormDataConverterLogger.LogItem
  langs:
  - csharp
  - vb
  name: Errors
  nameWithType: FormDataConverterLogger.LogItem.Errors
  fullName: Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger.FormDataConverterLogger.LogItem.Errors
  type: Property
  source:
    remote:
      path: Framework/Cqrs.WebApi/Formatters/FormMultipart/Infrastructure/Logger/FormDataConverterLogger.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Errors
    path: Framework/Cqrs.WebApi/Formatters/FormMultipart/Infrastructure/Logger/FormDataConverterLogger.cs
    startLine: 105
  assemblies:
  - Cqrs.WebApi
  namespace: Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger
  summary: "\nAll <xref href=\"System.Exception\" data-throw-if-not-resolved=\"false\"></xref> or issues that occurred for the <xref href=\"Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger.FormDataConverterLogger.LogItem.ErrorPath\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public List<FormDataConverterLogger.LogErrorInfo> Errors { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger.FormDataConverterLogger.LogErrorInfo}
    content.vb: Public Property Errors As List(Of FormDataConverterLogger.LogErrorInfo)
  overload: Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger.FormDataConverterLogger.LogItem.Errors*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger
  commentId: N:Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger
  isExternal: false
  name: Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger
  nameWithType: Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger
  fullName: Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger.FormDataConverterLogger.LogItem.ErrorPath*
  commentId: Overload:Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger.FormDataConverterLogger.LogItem.ErrorPath
  isExternal: false
  name: ErrorPath
  nameWithType: FormDataConverterLogger.LogItem.ErrorPath
  fullName: Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger.FormDataConverterLogger.LogItem.ErrorPath
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger.FormDataConverterLogger.LogItem.ErrorPath
  commentId: P:Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger.FormDataConverterLogger.LogItem.ErrorPath
- uid: Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger.FormDataConverterLogger.LogItem.Errors*
  commentId: Overload:Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger.FormDataConverterLogger.LogItem.Errors
  isExternal: false
  name: Errors
  nameWithType: FormDataConverterLogger.LogItem.Errors
  fullName: Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger.FormDataConverterLogger.LogItem.Errors
- uid: System.Collections.Generic.List{Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger.FormDataConverterLogger.LogErrorInfo}
  commentId: T:System.Collections.Generic.List{Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger.FormDataConverterLogger.LogErrorInfo}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<FormDataConverterLogger.LogErrorInfo>
  nameWithType: List<FormDataConverterLogger.LogErrorInfo>
  fullName: System.Collections.Generic.List<Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger.FormDataConverterLogger.LogErrorInfo>
  nameWithType.vb: List(Of FormDataConverterLogger.LogErrorInfo)
  fullName.vb: System.Collections.Generic.List(Of Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger.FormDataConverterLogger.LogErrorInfo)
  name.vb: List(Of FormDataConverterLogger.LogErrorInfo)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger.FormDataConverterLogger.LogErrorInfo
    name: FormDataConverterLogger.LogErrorInfo
    nameWithType: FormDataConverterLogger.LogErrorInfo
    fullName: Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger.FormDataConverterLogger.LogErrorInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger.FormDataConverterLogger.LogErrorInfo
    name: FormDataConverterLogger.LogErrorInfo
    nameWithType: FormDataConverterLogger.LogErrorInfo
    fullName: Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger.FormDataConverterLogger.LogErrorInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
