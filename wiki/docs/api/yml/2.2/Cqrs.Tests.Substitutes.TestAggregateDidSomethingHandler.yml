### YamlMime:ManagedReference
items:
- uid: Cqrs.Tests.Substitutes.TestAggregateDidSomethingHandler
  commentId: T:Cqrs.Tests.Substitutes.TestAggregateDidSomethingHandler
  id: TestAggregateDidSomethingHandler
  parent: Cqrs.Tests.Substitutes
  children:
  - Cqrs.Tests.Substitutes.TestAggregateDidSomethingHandler.Handle(Cqrs.Tests.Substitutes.TestAggregateDidSomething)
  - Cqrs.Tests.Substitutes.TestAggregateDidSomethingHandler.TimesRun
  langs:
  - csharp
  - vb
  name: TestAggregateDidSomethingHandler
  nameWithType: TestAggregateDidSomethingHandler
  fullName: Cqrs.Tests.Substitutes.TestAggregateDidSomethingHandler
  type: Class
  source:
    remote:
      path: Framework/Cqrs.Tests/Substitutes/TestEvents.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: TestAggregateDidSomethingHandler
    path: Framework/Cqrs.Tests/Substitutes/TestEvents.cs
    startLine: 105
  assemblies:
  - Cqrs.Tests
  namespace: Cqrs.Tests.Substitutes
  syntax:
    content: 'public class TestAggregateDidSomethingHandler : IEventHandler<ISingleSignOnToken, TestAggregateDidSomething>, IMessageHandler<TestAggregateDidSomething>, IEventHandler, IHandler'
    content.vb: >-
      Public Class TestAggregateDidSomethingHandler
          Implements IEventHandler(Of ISingleSignOnToken, TestAggregateDidSomething), IMessageHandler(Of TestAggregateDidSomething), IEventHandler, IHandler
  inheritance:
  - System.Object
  implements:
  - Cqrs.Events.IEventHandler{Cqrs.Authentication.ISingleSignOnToken,Cqrs.Tests.Substitutes.TestAggregateDidSomething}
  - Cqrs.Messages.IMessageHandler{Cqrs.Tests.Substitutes.TestAggregateDidSomething}
  - Cqrs.Events.IEventHandler
  - Cqrs.Messages.IHandler
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Cqrs.Tests.Substitutes.TestAggregateDidSomethingHandler.Handle(Cqrs.Tests.Substitutes.TestAggregateDidSomething)
  commentId: M:Cqrs.Tests.Substitutes.TestAggregateDidSomethingHandler.Handle(Cqrs.Tests.Substitutes.TestAggregateDidSomething)
  id: Handle(Cqrs.Tests.Substitutes.TestAggregateDidSomething)
  parent: Cqrs.Tests.Substitutes.TestAggregateDidSomethingHandler
  langs:
  - csharp
  - vb
  name: Handle(TestAggregateDidSomething)
  nameWithType: TestAggregateDidSomethingHandler.Handle(TestAggregateDidSomething)
  fullName: Cqrs.Tests.Substitutes.TestAggregateDidSomethingHandler.Handle(Cqrs.Tests.Substitutes.TestAggregateDidSomething)
  type: Method
  source:
    remote:
      path: Framework/Cqrs.Tests/Substitutes/TestEvents.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Handle
    path: Framework/Cqrs.Tests/Substitutes/TestEvents.cs
    startLine: 107
  assemblies:
  - Cqrs.Tests
  namespace: Cqrs.Tests.Substitutes
  syntax:
    content: public void Handle(TestAggregateDidSomething message)
    parameters:
    - id: message
      type: Cqrs.Tests.Substitutes.TestAggregateDidSomething
    content.vb: Public Sub Handle(message As TestAggregateDidSomething)
  overload: Cqrs.Tests.Substitutes.TestAggregateDidSomethingHandler.Handle*
  implements:
  - Cqrs.Messages.IMessageHandler{Cqrs.Tests.Substitutes.TestAggregateDidSomething}.Handle(Cqrs.Tests.Substitutes.TestAggregateDidSomething)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Cqrs.Tests.Substitutes.TestAggregateDidSomethingHandler.TimesRun
  commentId: P:Cqrs.Tests.Substitutes.TestAggregateDidSomethingHandler.TimesRun
  id: TimesRun
  parent: Cqrs.Tests.Substitutes.TestAggregateDidSomethingHandler
  langs:
  - csharp
  - vb
  name: TimesRun
  nameWithType: TestAggregateDidSomethingHandler.TimesRun
  fullName: Cqrs.Tests.Substitutes.TestAggregateDidSomethingHandler.TimesRun
  type: Property
  source:
    remote:
      path: Framework/Cqrs.Tests/Substitutes/TestEvents.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: TimesRun
    path: Framework/Cqrs.Tests/Substitutes/TestEvents.cs
    startLine: 115
  assemblies:
  - Cqrs.Tests
  namespace: Cqrs.Tests.Substitutes
  syntax:
    content: public int TimesRun { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property TimesRun As Integer
  overload: Cqrs.Tests.Substitutes.TestAggregateDidSomethingHandler.TimesRun*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Cqrs.Tests.Substitutes
  commentId: N:Cqrs.Tests.Substitutes
  isExternal: false
  name: Cqrs.Tests.Substitutes
  nameWithType: Cqrs.Tests.Substitutes
  fullName: Cqrs.Tests.Substitutes
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Cqrs.Events.IEventHandler{Cqrs.Authentication.ISingleSignOnToken,Cqrs.Tests.Substitutes.TestAggregateDidSomething}
  commentId: T:Cqrs.Events.IEventHandler{Cqrs.Authentication.ISingleSignOnToken,Cqrs.Tests.Substitutes.TestAggregateDidSomething}
  parent: Cqrs.Events
  definition: Cqrs.Events.IEventHandler`2
  name: IEventHandler<ISingleSignOnToken, TestAggregateDidSomething>
  nameWithType: IEventHandler<ISingleSignOnToken, TestAggregateDidSomething>
  fullName: Cqrs.Events.IEventHandler<Cqrs.Authentication.ISingleSignOnToken, Cqrs.Tests.Substitutes.TestAggregateDidSomething>
  nameWithType.vb: IEventHandler(Of ISingleSignOnToken, TestAggregateDidSomething)
  fullName.vb: Cqrs.Events.IEventHandler(Of Cqrs.Authentication.ISingleSignOnToken, Cqrs.Tests.Substitutes.TestAggregateDidSomething)
  name.vb: IEventHandler(Of ISingleSignOnToken, TestAggregateDidSomething)
  spec.csharp:
  - uid: Cqrs.Events.IEventHandler`2
    name: IEventHandler
    nameWithType: IEventHandler
    fullName: Cqrs.Events.IEventHandler
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cqrs.Authentication.ISingleSignOnToken
    name: ISingleSignOnToken
    nameWithType: ISingleSignOnToken
    fullName: Cqrs.Authentication.ISingleSignOnToken
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Cqrs.Tests.Substitutes.TestAggregateDidSomething
    name: TestAggregateDidSomething
    nameWithType: TestAggregateDidSomething
    fullName: Cqrs.Tests.Substitutes.TestAggregateDidSomething
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Events.IEventHandler`2
    name: IEventHandler
    nameWithType: IEventHandler
    fullName: Cqrs.Events.IEventHandler
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Cqrs.Authentication.ISingleSignOnToken
    name: ISingleSignOnToken
    nameWithType: ISingleSignOnToken
    fullName: Cqrs.Authentication.ISingleSignOnToken
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Cqrs.Tests.Substitutes.TestAggregateDidSomething
    name: TestAggregateDidSomething
    nameWithType: TestAggregateDidSomething
    fullName: Cqrs.Tests.Substitutes.TestAggregateDidSomething
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Messages.IMessageHandler{Cqrs.Tests.Substitutes.TestAggregateDidSomething}
  commentId: T:Cqrs.Messages.IMessageHandler{Cqrs.Tests.Substitutes.TestAggregateDidSomething}
  parent: Cqrs.Messages
  definition: Cqrs.Messages.IMessageHandler`1
  name: IMessageHandler<TestAggregateDidSomething>
  nameWithType: IMessageHandler<TestAggregateDidSomething>
  fullName: Cqrs.Messages.IMessageHandler<Cqrs.Tests.Substitutes.TestAggregateDidSomething>
  nameWithType.vb: IMessageHandler(Of TestAggregateDidSomething)
  fullName.vb: Cqrs.Messages.IMessageHandler(Of Cqrs.Tests.Substitutes.TestAggregateDidSomething)
  name.vb: IMessageHandler(Of TestAggregateDidSomething)
  spec.csharp:
  - uid: Cqrs.Messages.IMessageHandler`1
    name: IMessageHandler
    nameWithType: IMessageHandler
    fullName: Cqrs.Messages.IMessageHandler
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cqrs.Tests.Substitutes.TestAggregateDidSomething
    name: TestAggregateDidSomething
    nameWithType: TestAggregateDidSomething
    fullName: Cqrs.Tests.Substitutes.TestAggregateDidSomething
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Messages.IMessageHandler`1
    name: IMessageHandler
    nameWithType: IMessageHandler
    fullName: Cqrs.Messages.IMessageHandler
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Cqrs.Tests.Substitutes.TestAggregateDidSomething
    name: TestAggregateDidSomething
    nameWithType: TestAggregateDidSomething
    fullName: Cqrs.Tests.Substitutes.TestAggregateDidSomething
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Events.IEventHandler
  commentId: T:Cqrs.Events.IEventHandler
  parent: Cqrs.Events
  isExternal: false
  name: IEventHandler
  nameWithType: IEventHandler
  fullName: Cqrs.Events.IEventHandler
- uid: Cqrs.Messages.IHandler
  commentId: T:Cqrs.Messages.IHandler
  parent: Cqrs.Messages
  isExternal: false
  name: IHandler
  nameWithType: IHandler
  fullName: Cqrs.Messages.IHandler
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Cqrs.Events.IEventHandler`2
  commentId: T:Cqrs.Events.IEventHandler`2
  isExternal: false
  name: IEventHandler<TAuthenticationToken, TEvent>
  nameWithType: IEventHandler<TAuthenticationToken, TEvent>
  fullName: Cqrs.Events.IEventHandler<TAuthenticationToken, TEvent>
  nameWithType.vb: IEventHandler(Of TAuthenticationToken, TEvent)
  fullName.vb: Cqrs.Events.IEventHandler(Of TAuthenticationToken, TEvent)
  name.vb: IEventHandler(Of TAuthenticationToken, TEvent)
  spec.csharp:
  - uid: Cqrs.Events.IEventHandler`2
    name: IEventHandler
    nameWithType: IEventHandler
    fullName: Cqrs.Events.IEventHandler
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEvent
    nameWithType: TEvent
    fullName: TEvent
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Events.IEventHandler`2
    name: IEventHandler
    nameWithType: IEventHandler
    fullName: Cqrs.Events.IEventHandler
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEvent
    nameWithType: TEvent
    fullName: TEvent
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Events
  commentId: N:Cqrs.Events
  isExternal: false
  name: Cqrs.Events
  nameWithType: Cqrs.Events
  fullName: Cqrs.Events
- uid: Cqrs.Messages.IMessageHandler`1
  commentId: T:Cqrs.Messages.IMessageHandler`1
  isExternal: false
  name: IMessageHandler<TMessage>
  nameWithType: IMessageHandler<TMessage>
  fullName: Cqrs.Messages.IMessageHandler<TMessage>
  nameWithType.vb: IMessageHandler(Of TMessage)
  fullName.vb: Cqrs.Messages.IMessageHandler(Of TMessage)
  name.vb: IMessageHandler(Of TMessage)
  spec.csharp:
  - uid: Cqrs.Messages.IMessageHandler`1
    name: IMessageHandler
    nameWithType: IMessageHandler
    fullName: Cqrs.Messages.IMessageHandler
  - name: <
    nameWithType: <
    fullName: <
  - name: TMessage
    nameWithType: TMessage
    fullName: TMessage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Messages.IMessageHandler`1
    name: IMessageHandler
    nameWithType: IMessageHandler
    fullName: Cqrs.Messages.IMessageHandler
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TMessage
    nameWithType: TMessage
    fullName: TMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Messages
  commentId: N:Cqrs.Messages
  isExternal: false
  name: Cqrs.Messages
  nameWithType: Cqrs.Messages
  fullName: Cqrs.Messages
- uid: Cqrs.Tests.Substitutes.TestAggregateDidSomethingHandler.Handle*
  commentId: Overload:Cqrs.Tests.Substitutes.TestAggregateDidSomethingHandler.Handle
  isExternal: false
  name: Handle
  nameWithType: TestAggregateDidSomethingHandler.Handle
  fullName: Cqrs.Tests.Substitutes.TestAggregateDidSomethingHandler.Handle
- uid: Cqrs.Messages.IMessageHandler{Cqrs.Tests.Substitutes.TestAggregateDidSomething}.Handle(Cqrs.Tests.Substitutes.TestAggregateDidSomething)
  commentId: M:Cqrs.Messages.IMessageHandler{Cqrs.Tests.Substitutes.TestAggregateDidSomething}.Handle(Cqrs.Tests.Substitutes.TestAggregateDidSomething)
  parent: Cqrs.Messages.IMessageHandler{Cqrs.Tests.Substitutes.TestAggregateDidSomething}
  definition: Cqrs.Messages.IMessageHandler`1.Handle(`0)
  name: Handle(TestAggregateDidSomething)
  nameWithType: IMessageHandler<TestAggregateDidSomething>.Handle(TestAggregateDidSomething)
  fullName: Cqrs.Messages.IMessageHandler<Cqrs.Tests.Substitutes.TestAggregateDidSomething>.Handle(Cqrs.Tests.Substitutes.TestAggregateDidSomething)
  nameWithType.vb: IMessageHandler(Of TestAggregateDidSomething).Handle(TestAggregateDidSomething)
  fullName.vb: Cqrs.Messages.IMessageHandler(Of Cqrs.Tests.Substitutes.TestAggregateDidSomething).Handle(Cqrs.Tests.Substitutes.TestAggregateDidSomething)
  spec.csharp:
  - uid: Cqrs.Messages.IMessageHandler`1.Handle(`0)
    name: Handle
    nameWithType: IMessageHandler<TestAggregateDidSomething>.Handle
    fullName: Cqrs.Messages.IMessageHandler<Cqrs.Tests.Substitutes.TestAggregateDidSomething>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Tests.Substitutes.TestAggregateDidSomething
    name: TestAggregateDidSomething
    nameWithType: TestAggregateDidSomething
    fullName: Cqrs.Tests.Substitutes.TestAggregateDidSomething
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Messages.IMessageHandler`1.Handle(`0)
    name: Handle
    nameWithType: IMessageHandler(Of TestAggregateDidSomething).Handle
    fullName: Cqrs.Messages.IMessageHandler(Of Cqrs.Tests.Substitutes.TestAggregateDidSomething).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Tests.Substitutes.TestAggregateDidSomething
    name: TestAggregateDidSomething
    nameWithType: TestAggregateDidSomething
    fullName: Cqrs.Tests.Substitutes.TestAggregateDidSomething
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Tests.Substitutes.TestAggregateDidSomething
  commentId: T:Cqrs.Tests.Substitutes.TestAggregateDidSomething
  parent: Cqrs.Tests.Substitutes
  isExternal: false
  name: TestAggregateDidSomething
  nameWithType: TestAggregateDidSomething
  fullName: Cqrs.Tests.Substitutes.TestAggregateDidSomething
- uid: Cqrs.Messages.IMessageHandler`1.Handle(`0)
  commentId: M:Cqrs.Messages.IMessageHandler`1.Handle(`0)
  isExternal: false
  name: Handle(TMessage)
  nameWithType: IMessageHandler<TMessage>.Handle(TMessage)
  fullName: Cqrs.Messages.IMessageHandler<TMessage>.Handle(TMessage)
  nameWithType.vb: IMessageHandler(Of TMessage).Handle(TMessage)
  fullName.vb: Cqrs.Messages.IMessageHandler(Of TMessage).Handle(TMessage)
  spec.csharp:
  - uid: Cqrs.Messages.IMessageHandler`1.Handle(`0)
    name: Handle
    nameWithType: IMessageHandler<TMessage>.Handle
    fullName: Cqrs.Messages.IMessageHandler<TMessage>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - name: TMessage
    nameWithType: TMessage
    fullName: TMessage
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Messages.IMessageHandler`1.Handle(`0)
    name: Handle
    nameWithType: IMessageHandler(Of TMessage).Handle
    fullName: Cqrs.Messages.IMessageHandler(Of TMessage).Handle
  - name: (
    nameWithType: (
    fullName: (
  - name: TMessage
    nameWithType: TMessage
    fullName: TMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Tests.Substitutes.TestAggregateDidSomethingHandler.TimesRun*
  commentId: Overload:Cqrs.Tests.Substitutes.TestAggregateDidSomethingHandler.TimesRun
  isExternal: false
  name: TimesRun
  nameWithType: TestAggregateDidSomethingHandler.TimesRun
  fullName: Cqrs.Tests.Substitutes.TestAggregateDidSomethingHandler.TimesRun
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
