### YamlMime:ManagedReference
items:
- uid: Cqrs.Akka.Tests.Unit.Events.Handlers.HelloWorldRepliedToSendEndConversationCommandEventHandler
  commentId: T:Cqrs.Akka.Tests.Unit.Events.Handlers.HelloWorldRepliedToSendEndConversationCommandEventHandler
  id: HelloWorldRepliedToSendEndConversationCommandEventHandler
  parent: Cqrs.Akka.Tests.Unit.Events.Handlers
  children:
  - Cqrs.Akka.Tests.Unit.Events.Handlers.HelloWorldRepliedToSendEndConversationCommandEventHandler.#ctor(Cqrs.Akka.Domain.IAkkaAggregateResolver)
  - Cqrs.Akka.Tests.Unit.Events.Handlers.HelloWorldRepliedToSendEndConversationCommandEventHandler.AggregateResolver
  - Cqrs.Akka.Tests.Unit.Events.Handlers.HelloWorldRepliedToSendEndConversationCommandEventHandler.Handle(Cqrs.Akka.Tests.Unit.Events.HelloWorldRepliedTo)
  langs:
  - csharp
  - vb
  name: HelloWorldRepliedToSendEndConversationCommandEventHandler
  nameWithType: HelloWorldRepliedToSendEndConversationCommandEventHandler
  fullName: Cqrs.Akka.Tests.Unit.Events.Handlers.HelloWorldRepliedToSendEndConversationCommandEventHandler
  type: Class
  source:
    remote:
      path: Framework/Akka.Net/Cqrs.Akka.Tests.Unit/Events/Handlers/HelloWorldRepliedToSendEndConversationCommandEventHandler.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: HelloWorldRepliedToSendEndConversationCommandEventHandler
    path: Framework/Akka.Net/Cqrs.Akka.Tests.Unit/Events/Handlers/HelloWorldRepliedToSendEndConversationCommandEventHandler.cs
    startLine: 25
  assemblies:
  - Cqrs.Akka.Tests.Unit
  namespace: Cqrs.Akka.Tests.Unit.Events.Handlers
  summary: "\nHandles the <xref href=\"Cqrs.Akka.Tests.Unit.Events.HelloWorldRepliedTo\" data-throw-if-not-resolved=\"false\"></xref> and sends a <xref href=\"Cqrs.Akka.Tests.Unit.Commands.EndConversationCommand\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: 'public class HelloWorldRepliedToSendEndConversationCommandEventHandler : IEventHandler<Guid, HelloWorldRepliedTo>, IMessageHandler<HelloWorldRepliedTo>, IEventHandler, IHandler'
    content.vb: >-
      Public Class HelloWorldRepliedToSendEndConversationCommandEventHandler

          Implements IEventHandler(Of Guid, HelloWorldRepliedTo), IMessageHandler(Of HelloWorldRepliedTo), IEventHandler, IHandler
  inheritance:
  - System.Object
  implements:
  - Cqrs.Events.IEventHandler{System.Guid,Cqrs.Akka.Tests.Unit.Events.HelloWorldRepliedTo}
  - Cqrs.Messages.IMessageHandler{Cqrs.Akka.Tests.Unit.Events.HelloWorldRepliedTo}
  - Cqrs.Events.IEventHandler
  - Cqrs.Messages.IHandler
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Cqrs.Akka.Tests.Unit.Events.Handlers.HelloWorldRepliedToSendEndConversationCommandEventHandler.#ctor(Cqrs.Akka.Domain.IAkkaAggregateResolver)
  commentId: M:Cqrs.Akka.Tests.Unit.Events.Handlers.HelloWorldRepliedToSendEndConversationCommandEventHandler.#ctor(Cqrs.Akka.Domain.IAkkaAggregateResolver)
  id: '#ctor(Cqrs.Akka.Domain.IAkkaAggregateResolver)'
  parent: Cqrs.Akka.Tests.Unit.Events.Handlers.HelloWorldRepliedToSendEndConversationCommandEventHandler
  langs:
  - csharp
  - vb
  name: HelloWorldRepliedToSendEndConversationCommandEventHandler(IAkkaAggregateResolver)
  nameWithType: HelloWorldRepliedToSendEndConversationCommandEventHandler.HelloWorldRepliedToSendEndConversationCommandEventHandler(IAkkaAggregateResolver)
  fullName: Cqrs.Akka.Tests.Unit.Events.Handlers.HelloWorldRepliedToSendEndConversationCommandEventHandler.HelloWorldRepliedToSendEndConversationCommandEventHandler(Cqrs.Akka.Domain.IAkkaAggregateResolver)
  type: Constructor
  source:
    remote:
      path: Framework/Akka.Net/Cqrs.Akka.Tests.Unit/Events/Handlers/HelloWorldRepliedToSendEndConversationCommandEventHandler.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: .ctor
    path: Framework/Akka.Net/Cqrs.Akka.Tests.Unit/Events/Handlers/HelloWorldRepliedToSendEndConversationCommandEventHandler.cs
    startLine: 31
  assemblies:
  - Cqrs.Akka.Tests.Unit
  namespace: Cqrs.Akka.Tests.Unit.Events.Handlers
  summary: "\nInstantiates the <xref href=\"Cqrs.Akka.Tests.Unit.Events.Handlers.HelloWorldRepliedToSendEndConversationCommandEventHandler\" data-throw-if-not-resolved=\"false\"></xref> class registering any <xref href=\"Akka.Actor.ReceiveActor.Receive%60%601(System.Func%7b%60%600%2cSystem.Threading.Tasks.Task%7d)\" data-throw-if-not-resolved=\"false\"></xref> required.\n"
  example: []
  syntax:
    content: public HelloWorldRepliedToSendEndConversationCommandEventHandler(IAkkaAggregateResolver aggregateResolver)
    parameters:
    - id: aggregateResolver
      type: Cqrs.Akka.Domain.IAkkaAggregateResolver
    content.vb: Public Sub New(aggregateResolver As IAkkaAggregateResolver)
  overload: Cqrs.Akka.Tests.Unit.Events.Handlers.HelloWorldRepliedToSendEndConversationCommandEventHandler.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Cqrs.Akka.Tests.Unit.Events.Handlers.HelloWorldRepliedToSendEndConversationCommandEventHandler.AggregateResolver
  commentId: P:Cqrs.Akka.Tests.Unit.Events.Handlers.HelloWorldRepliedToSendEndConversationCommandEventHandler.AggregateResolver
  id: AggregateResolver
  parent: Cqrs.Akka.Tests.Unit.Events.Handlers.HelloWorldRepliedToSendEndConversationCommandEventHandler
  langs:
  - csharp
  - vb
  name: AggregateResolver
  nameWithType: HelloWorldRepliedToSendEndConversationCommandEventHandler.AggregateResolver
  fullName: Cqrs.Akka.Tests.Unit.Events.Handlers.HelloWorldRepliedToSendEndConversationCommandEventHandler.AggregateResolver
  type: Property
  source:
    remote:
      path: Framework/Akka.Net/Cqrs.Akka.Tests.Unit/Events/Handlers/HelloWorldRepliedToSendEndConversationCommandEventHandler.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: AggregateResolver
    path: Framework/Akka.Net/Cqrs.Akka.Tests.Unit/Events/Handlers/HelloWorldRepliedToSendEndConversationCommandEventHandler.cs
    startLine: 39
  assemblies:
  - Cqrs.Akka.Tests.Unit
  namespace: Cqrs.Akka.Tests.Unit.Events.Handlers
  summary: "\nResolves Akka.Net actor based <xref href=\"Cqrs.Domain.IAggregateRoot%601\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: protected IAkkaAggregateResolver AggregateResolver { get; }
    parameters: []
    return:
      type: Cqrs.Akka.Domain.IAkkaAggregateResolver
    content.vb: Protected ReadOnly Property AggregateResolver As IAkkaAggregateResolver
  overload: Cqrs.Akka.Tests.Unit.Events.Handlers.HelloWorldRepliedToSendEndConversationCommandEventHandler.AggregateResolver*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Cqrs.Akka.Tests.Unit.Events.Handlers.HelloWorldRepliedToSendEndConversationCommandEventHandler.Handle(Cqrs.Akka.Tests.Unit.Events.HelloWorldRepliedTo)
  commentId: M:Cqrs.Akka.Tests.Unit.Events.Handlers.HelloWorldRepliedToSendEndConversationCommandEventHandler.Handle(Cqrs.Akka.Tests.Unit.Events.HelloWorldRepliedTo)
  id: Handle(Cqrs.Akka.Tests.Unit.Events.HelloWorldRepliedTo)
  parent: Cqrs.Akka.Tests.Unit.Events.Handlers.HelloWorldRepliedToSendEndConversationCommandEventHandler
  langs:
  - csharp
  - vb
  name: Handle(HelloWorldRepliedTo)
  nameWithType: HelloWorldRepliedToSendEndConversationCommandEventHandler.Handle(HelloWorldRepliedTo)
  fullName: Cqrs.Akka.Tests.Unit.Events.Handlers.HelloWorldRepliedToSendEndConversationCommandEventHandler.Handle(Cqrs.Akka.Tests.Unit.Events.HelloWorldRepliedTo)
  type: Method
  source:
    remote:
      path: Framework/Akka.Net/Cqrs.Akka.Tests.Unit/Events/Handlers/HelloWorldRepliedToSendEndConversationCommandEventHandler.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Handle
    path: Framework/Akka.Net/Cqrs.Akka.Tests.Unit/Events/Handlers/HelloWorldRepliedToSendEndConversationCommandEventHandler.cs
    startLine: 47
  assemblies:
  - Cqrs.Akka.Tests.Unit
  namespace: Cqrs.Akka.Tests.Unit.Events.Handlers
  summary: "\nResponds to the provided <span class=\"paramref\">event</span> passing the <span class=\"paramref\">event</span> to an Akka.Net actor.\n"
  example: []
  syntax:
    content: public void Handle(HelloWorldRepliedTo event)
    parameters:
    - id: event
      type: Cqrs.Akka.Tests.Unit.Events.HelloWorldRepliedTo
      description: The <xref href="Cqrs.Akka.Tests.Unit.Events.HelloWorldRepliedTo" data-throw-if-not-resolved="false"></xref> to respond to or &quot;handle&quot;
    content.vb: Public Sub Handle(event As HelloWorldRepliedTo)
  overload: Cqrs.Akka.Tests.Unit.Events.Handlers.HelloWorldRepliedToSendEndConversationCommandEventHandler.Handle*
  implements:
  - Cqrs.Messages.IMessageHandler{Cqrs.Akka.Tests.Unit.Events.HelloWorldRepliedTo}.Handle(Cqrs.Akka.Tests.Unit.Events.HelloWorldRepliedTo)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Cqrs.Akka.Tests.Unit.Events.HelloWorldRepliedTo
  commentId: T:Cqrs.Akka.Tests.Unit.Events.HelloWorldRepliedTo
  parent: Cqrs.Akka.Tests.Unit.Events
  isExternal: false
  name: HelloWorldRepliedTo
  nameWithType: HelloWorldRepliedTo
  fullName: Cqrs.Akka.Tests.Unit.Events.HelloWorldRepliedTo
- uid: Cqrs.Akka.Tests.Unit.Commands.EndConversationCommand
  commentId: T:Cqrs.Akka.Tests.Unit.Commands.EndConversationCommand
  parent: Cqrs.Akka.Tests.Unit.Commands
  isExternal: false
  name: EndConversationCommand
  nameWithType: EndConversationCommand
  fullName: Cqrs.Akka.Tests.Unit.Commands.EndConversationCommand
- uid: Cqrs.Akka.Tests.Unit.Events.Handlers
  commentId: N:Cqrs.Akka.Tests.Unit.Events.Handlers
  isExternal: false
  name: Cqrs.Akka.Tests.Unit.Events.Handlers
  nameWithType: Cqrs.Akka.Tests.Unit.Events.Handlers
  fullName: Cqrs.Akka.Tests.Unit.Events.Handlers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Cqrs.Events.IEventHandler{System.Guid,Cqrs.Akka.Tests.Unit.Events.HelloWorldRepliedTo}
  commentId: T:Cqrs.Events.IEventHandler{System.Guid,Cqrs.Akka.Tests.Unit.Events.HelloWorldRepliedTo}
  parent: Cqrs.Events
  definition: Cqrs.Events.IEventHandler`2
  name: IEventHandler<Guid, HelloWorldRepliedTo>
  nameWithType: IEventHandler<Guid, HelloWorldRepliedTo>
  fullName: Cqrs.Events.IEventHandler<System.Guid, Cqrs.Akka.Tests.Unit.Events.HelloWorldRepliedTo>
  nameWithType.vb: IEventHandler(Of Guid, HelloWorldRepliedTo)
  fullName.vb: Cqrs.Events.IEventHandler(Of System.Guid, Cqrs.Akka.Tests.Unit.Events.HelloWorldRepliedTo)
  name.vb: IEventHandler(Of Guid, HelloWorldRepliedTo)
  spec.csharp:
  - uid: Cqrs.Events.IEventHandler`2
    name: IEventHandler
    nameWithType: IEventHandler
    fullName: Cqrs.Events.IEventHandler
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Cqrs.Akka.Tests.Unit.Events.HelloWorldRepliedTo
    name: HelloWorldRepliedTo
    nameWithType: HelloWorldRepliedTo
    fullName: Cqrs.Akka.Tests.Unit.Events.HelloWorldRepliedTo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Events.IEventHandler`2
    name: IEventHandler
    nameWithType: IEventHandler
    fullName: Cqrs.Events.IEventHandler
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Cqrs.Akka.Tests.Unit.Events.HelloWorldRepliedTo
    name: HelloWorldRepliedTo
    nameWithType: HelloWorldRepliedTo
    fullName: Cqrs.Akka.Tests.Unit.Events.HelloWorldRepliedTo
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Messages.IMessageHandler{Cqrs.Akka.Tests.Unit.Events.HelloWorldRepliedTo}
  commentId: T:Cqrs.Messages.IMessageHandler{Cqrs.Akka.Tests.Unit.Events.HelloWorldRepliedTo}
  parent: Cqrs.Messages
  definition: Cqrs.Messages.IMessageHandler`1
  name: IMessageHandler<HelloWorldRepliedTo>
  nameWithType: IMessageHandler<HelloWorldRepliedTo>
  fullName: Cqrs.Messages.IMessageHandler<Cqrs.Akka.Tests.Unit.Events.HelloWorldRepliedTo>
  nameWithType.vb: IMessageHandler(Of HelloWorldRepliedTo)
  fullName.vb: Cqrs.Messages.IMessageHandler(Of Cqrs.Akka.Tests.Unit.Events.HelloWorldRepliedTo)
  name.vb: IMessageHandler(Of HelloWorldRepliedTo)
  spec.csharp:
  - uid: Cqrs.Messages.IMessageHandler`1
    name: IMessageHandler
    nameWithType: IMessageHandler
    fullName: Cqrs.Messages.IMessageHandler
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cqrs.Akka.Tests.Unit.Events.HelloWorldRepliedTo
    name: HelloWorldRepliedTo
    nameWithType: HelloWorldRepliedTo
    fullName: Cqrs.Akka.Tests.Unit.Events.HelloWorldRepliedTo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Messages.IMessageHandler`1
    name: IMessageHandler
    nameWithType: IMessageHandler
    fullName: Cqrs.Messages.IMessageHandler
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Cqrs.Akka.Tests.Unit.Events.HelloWorldRepliedTo
    name: HelloWorldRepliedTo
    nameWithType: HelloWorldRepliedTo
    fullName: Cqrs.Akka.Tests.Unit.Events.HelloWorldRepliedTo
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Events.IEventHandler
  commentId: T:Cqrs.Events.IEventHandler
  parent: Cqrs.Events
  isExternal: false
  name: IEventHandler
  nameWithType: IEventHandler
  fullName: Cqrs.Events.IEventHandler
- uid: Cqrs.Messages.IHandler
  commentId: T:Cqrs.Messages.IHandler
  parent: Cqrs.Messages
  isExternal: false
  name: IHandler
  nameWithType: IHandler
  fullName: Cqrs.Messages.IHandler
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Akka.Tests.Unit.Events
  commentId: N:Cqrs.Akka.Tests.Unit.Events
  isExternal: false
  name: Cqrs.Akka.Tests.Unit.Events
  nameWithType: Cqrs.Akka.Tests.Unit.Events
  fullName: Cqrs.Akka.Tests.Unit.Events
- uid: Cqrs.Akka.Tests.Unit.Commands
  commentId: N:Cqrs.Akka.Tests.Unit.Commands
  isExternal: false
  name: Cqrs.Akka.Tests.Unit.Commands
  nameWithType: Cqrs.Akka.Tests.Unit.Commands
  fullName: Cqrs.Akka.Tests.Unit.Commands
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Cqrs.Events.IEventHandler`2
  commentId: T:Cqrs.Events.IEventHandler`2
  isExternal: false
  name: IEventHandler<TAuthenticationToken, TEvent>
  nameWithType: IEventHandler<TAuthenticationToken, TEvent>
  fullName: Cqrs.Events.IEventHandler<TAuthenticationToken, TEvent>
  nameWithType.vb: IEventHandler(Of TAuthenticationToken, TEvent)
  fullName.vb: Cqrs.Events.IEventHandler(Of TAuthenticationToken, TEvent)
  name.vb: IEventHandler(Of TAuthenticationToken, TEvent)
  spec.csharp:
  - uid: Cqrs.Events.IEventHandler`2
    name: IEventHandler
    nameWithType: IEventHandler
    fullName: Cqrs.Events.IEventHandler
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEvent
    nameWithType: TEvent
    fullName: TEvent
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Events.IEventHandler`2
    name: IEventHandler
    nameWithType: IEventHandler
    fullName: Cqrs.Events.IEventHandler
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEvent
    nameWithType: TEvent
    fullName: TEvent
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Events
  commentId: N:Cqrs.Events
  isExternal: false
  name: Cqrs.Events
  nameWithType: Cqrs.Events
  fullName: Cqrs.Events
- uid: Cqrs.Messages.IMessageHandler`1
  commentId: T:Cqrs.Messages.IMessageHandler`1
  isExternal: false
  name: IMessageHandler<TMessage>
  nameWithType: IMessageHandler<TMessage>
  fullName: Cqrs.Messages.IMessageHandler<TMessage>
  nameWithType.vb: IMessageHandler(Of TMessage)
  fullName.vb: Cqrs.Messages.IMessageHandler(Of TMessage)
  name.vb: IMessageHandler(Of TMessage)
  spec.csharp:
  - uid: Cqrs.Messages.IMessageHandler`1
    name: IMessageHandler
    nameWithType: IMessageHandler
    fullName: Cqrs.Messages.IMessageHandler
  - name: <
    nameWithType: <
    fullName: <
  - name: TMessage
    nameWithType: TMessage
    fullName: TMessage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Messages.IMessageHandler`1
    name: IMessageHandler
    nameWithType: IMessageHandler
    fullName: Cqrs.Messages.IMessageHandler
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TMessage
    nameWithType: TMessage
    fullName: TMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Messages
  commentId: N:Cqrs.Messages
  isExternal: false
  name: Cqrs.Messages
  nameWithType: Cqrs.Messages
  fullName: Cqrs.Messages
- uid: Cqrs.Akka.Tests.Unit.Events.Handlers.HelloWorldRepliedToSendEndConversationCommandEventHandler
  commentId: T:Cqrs.Akka.Tests.Unit.Events.Handlers.HelloWorldRepliedToSendEndConversationCommandEventHandler
  isExternal: false
  name: HelloWorldRepliedToSendEndConversationCommandEventHandler
  nameWithType: HelloWorldRepliedToSendEndConversationCommandEventHandler
  fullName: Cqrs.Akka.Tests.Unit.Events.Handlers.HelloWorldRepliedToSendEndConversationCommandEventHandler
- uid: Akka.Actor.ReceiveActor.Receive``1(System.Func{``0,System.Threading.Tasks.Task})
  commentId: M:Akka.Actor.ReceiveActor.Receive``1(System.Func{``0,System.Threading.Tasks.Task})
  isExternal: true
  name: Receive<T>(Func<T, Task>)
  nameWithType: ReceiveActor.Receive<T>(Func<T, Task>)
  fullName: Akka.Actor.ReceiveActor.Receive<T>(System.Func<T, System.Threading.Tasks.Task>)
  nameWithType.vb: ReceiveActor.Receive(Of T)(Func(Of T, Task))
  fullName.vb: Akka.Actor.ReceiveActor.Receive(Of T)(System.Func(Of T, System.Threading.Tasks.Task))
  name.vb: Receive(Of T)(Func(Of T, Task))
  spec.csharp:
  - uid: Akka.Actor.ReceiveActor.Receive``1(System.Func{``0,System.Threading.Tasks.Task})
    name: Receive<T>
    nameWithType: ReceiveActor.Receive<T>
    fullName: Akka.Actor.ReceiveActor.Receive<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Akka.Actor.ReceiveActor.Receive``1(System.Func{``0,System.Threading.Tasks.Task})
    name: Receive(Of T)
    nameWithType: ReceiveActor.Receive(Of T)
    fullName: Akka.Actor.ReceiveActor.Receive(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Akka.Tests.Unit.Events.Handlers.HelloWorldRepliedToSendEndConversationCommandEventHandler.#ctor*
  commentId: Overload:Cqrs.Akka.Tests.Unit.Events.Handlers.HelloWorldRepliedToSendEndConversationCommandEventHandler.#ctor
  isExternal: false
  name: HelloWorldRepliedToSendEndConversationCommandEventHandler
  nameWithType: HelloWorldRepliedToSendEndConversationCommandEventHandler.HelloWorldRepliedToSendEndConversationCommandEventHandler
  fullName: Cqrs.Akka.Tests.Unit.Events.Handlers.HelloWorldRepliedToSendEndConversationCommandEventHandler.HelloWorldRepliedToSendEndConversationCommandEventHandler
- uid: Cqrs.Akka.Domain.IAkkaAggregateResolver
  commentId: T:Cqrs.Akka.Domain.IAkkaAggregateResolver
  parent: Cqrs.Akka.Domain
  isExternal: false
  name: IAkkaAggregateResolver
  nameWithType: IAkkaAggregateResolver
  fullName: Cqrs.Akka.Domain.IAkkaAggregateResolver
- uid: Cqrs.Akka.Domain
  commentId: N:Cqrs.Akka.Domain
  isExternal: false
  name: Cqrs.Akka.Domain
  nameWithType: Cqrs.Akka.Domain
  fullName: Cqrs.Akka.Domain
- uid: Cqrs.Domain.IAggregateRoot`1
  commentId: T:Cqrs.Domain.IAggregateRoot`1
  isExternal: false
  name: IAggregateRoot<TAuthenticationToken>
  nameWithType: IAggregateRoot<TAuthenticationToken>
  fullName: Cqrs.Domain.IAggregateRoot<TAuthenticationToken>
  nameWithType.vb: IAggregateRoot(Of TAuthenticationToken)
  fullName.vb: Cqrs.Domain.IAggregateRoot(Of TAuthenticationToken)
  name.vb: IAggregateRoot(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Domain.IAggregateRoot`1
    name: IAggregateRoot
    nameWithType: IAggregateRoot
    fullName: Cqrs.Domain.IAggregateRoot
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Domain.IAggregateRoot`1
    name: IAggregateRoot
    nameWithType: IAggregateRoot
    fullName: Cqrs.Domain.IAggregateRoot
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Akka.Tests.Unit.Events.Handlers.HelloWorldRepliedToSendEndConversationCommandEventHandler.AggregateResolver*
  commentId: Overload:Cqrs.Akka.Tests.Unit.Events.Handlers.HelloWorldRepliedToSendEndConversationCommandEventHandler.AggregateResolver
  isExternal: false
  name: AggregateResolver
  nameWithType: HelloWorldRepliedToSendEndConversationCommandEventHandler.AggregateResolver
  fullName: Cqrs.Akka.Tests.Unit.Events.Handlers.HelloWorldRepliedToSendEndConversationCommandEventHandler.AggregateResolver
- uid: Cqrs.Akka.Tests.Unit.Events.Handlers.HelloWorldRepliedToSendEndConversationCommandEventHandler.Handle*
  commentId: Overload:Cqrs.Akka.Tests.Unit.Events.Handlers.HelloWorldRepliedToSendEndConversationCommandEventHandler.Handle
  isExternal: false
  name: Handle
  nameWithType: HelloWorldRepliedToSendEndConversationCommandEventHandler.Handle
  fullName: Cqrs.Akka.Tests.Unit.Events.Handlers.HelloWorldRepliedToSendEndConversationCommandEventHandler.Handle
- uid: Cqrs.Messages.IMessageHandler{Cqrs.Akka.Tests.Unit.Events.HelloWorldRepliedTo}.Handle(Cqrs.Akka.Tests.Unit.Events.HelloWorldRepliedTo)
  commentId: M:Cqrs.Messages.IMessageHandler{Cqrs.Akka.Tests.Unit.Events.HelloWorldRepliedTo}.Handle(Cqrs.Akka.Tests.Unit.Events.HelloWorldRepliedTo)
  parent: Cqrs.Messages.IMessageHandler{Cqrs.Akka.Tests.Unit.Events.HelloWorldRepliedTo}
  definition: Cqrs.Messages.IMessageHandler`1.Handle(`0)
  name: Handle(HelloWorldRepliedTo)
  nameWithType: IMessageHandler<HelloWorldRepliedTo>.Handle(HelloWorldRepliedTo)
  fullName: Cqrs.Messages.IMessageHandler<Cqrs.Akka.Tests.Unit.Events.HelloWorldRepliedTo>.Handle(Cqrs.Akka.Tests.Unit.Events.HelloWorldRepliedTo)
  nameWithType.vb: IMessageHandler(Of HelloWorldRepliedTo).Handle(HelloWorldRepliedTo)
  fullName.vb: Cqrs.Messages.IMessageHandler(Of Cqrs.Akka.Tests.Unit.Events.HelloWorldRepliedTo).Handle(Cqrs.Akka.Tests.Unit.Events.HelloWorldRepliedTo)
  spec.csharp:
  - uid: Cqrs.Messages.IMessageHandler`1.Handle(`0)
    name: Handle
    nameWithType: IMessageHandler<HelloWorldRepliedTo>.Handle
    fullName: Cqrs.Messages.IMessageHandler<Cqrs.Akka.Tests.Unit.Events.HelloWorldRepliedTo>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Akka.Tests.Unit.Events.HelloWorldRepliedTo
    name: HelloWorldRepliedTo
    nameWithType: HelloWorldRepliedTo
    fullName: Cqrs.Akka.Tests.Unit.Events.HelloWorldRepliedTo
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Messages.IMessageHandler`1.Handle(`0)
    name: Handle
    nameWithType: IMessageHandler(Of HelloWorldRepliedTo).Handle
    fullName: Cqrs.Messages.IMessageHandler(Of Cqrs.Akka.Tests.Unit.Events.HelloWorldRepliedTo).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Akka.Tests.Unit.Events.HelloWorldRepliedTo
    name: HelloWorldRepliedTo
    nameWithType: HelloWorldRepliedTo
    fullName: Cqrs.Akka.Tests.Unit.Events.HelloWorldRepliedTo
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Messages.IMessageHandler`1.Handle(`0)
  commentId: M:Cqrs.Messages.IMessageHandler`1.Handle(`0)
  isExternal: false
  name: Handle(TMessage)
  nameWithType: IMessageHandler<TMessage>.Handle(TMessage)
  fullName: Cqrs.Messages.IMessageHandler<TMessage>.Handle(TMessage)
  nameWithType.vb: IMessageHandler(Of TMessage).Handle(TMessage)
  fullName.vb: Cqrs.Messages.IMessageHandler(Of TMessage).Handle(TMessage)
  spec.csharp:
  - uid: Cqrs.Messages.IMessageHandler`1.Handle(`0)
    name: Handle
    nameWithType: IMessageHandler<TMessage>.Handle
    fullName: Cqrs.Messages.IMessageHandler<TMessage>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - name: TMessage
    nameWithType: TMessage
    fullName: TMessage
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Messages.IMessageHandler`1.Handle(`0)
    name: Handle
    nameWithType: IMessageHandler(Of TMessage).Handle
    fullName: Cqrs.Messages.IMessageHandler(Of TMessage).Handle
  - name: (
    nameWithType: (
    fullName: (
  - name: TMessage
    nameWithType: TMessage
    fullName: TMessage
  - name: )
    nameWithType: )
    fullName: )
