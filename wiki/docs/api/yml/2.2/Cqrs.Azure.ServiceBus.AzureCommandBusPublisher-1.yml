### YamlMime:ManagedReference
items:
- uid: Cqrs.Azure.ServiceBus.AzureCommandBusPublisher`1
  commentId: T:Cqrs.Azure.ServiceBus.AzureCommandBusPublisher`1
  id: AzureCommandBusPublisher`1
  parent: Cqrs.Azure.ServiceBus
  children:
  - Cqrs.Azure.ServiceBus.AzureCommandBusPublisher`1.#ctor(Cqrs.Configuration.IConfigurationManager,Cqrs.Azure.ServiceBus.IMessageSerialiser{`0},Cqrs.Authentication.IAuthenticationTokenHelper{`0},ICorrelationIdHelper,ILogger,Cqrs.Azure.ServiceBus.IAzureBusHelper{`0},Cqrs.Bus.IBusHelper)
  - Cqrs.Azure.ServiceBus.AzureCommandBusPublisher`1.Publish``1(``0)
  - Cqrs.Azure.ServiceBus.AzureCommandBusPublisher`1.Publish``1(IEnumerable{``0})
  - Cqrs.Azure.ServiceBus.AzureCommandBusPublisher`1.PublishAndWait``2(``0,Cqrs.Events.IEventReceiver{`0})
  - Cqrs.Azure.ServiceBus.AzureCommandBusPublisher`1.PublishAndWait``2(``0,Func{IEnumerable{Cqrs.Events.IEvent{`0}},``1},Cqrs.Events.IEventReceiver{`0})
  - Cqrs.Azure.ServiceBus.AzureCommandBusPublisher`1.PublishAndWait``2(``0,Func{IEnumerable{Cqrs.Events.IEvent{`0}},``1},System.Int32,Cqrs.Events.IEventReceiver{`0})
  - Cqrs.Azure.ServiceBus.AzureCommandBusPublisher`1.PublishAndWait``2(``0,Func{IEnumerable{Cqrs.Events.IEvent{`0}},``1},TimeSpan,Cqrs.Events.IEventReceiver{`0})
  - Cqrs.Azure.ServiceBus.AzureCommandBusPublisher`1.PublishAndWait``2(``0,System.Int32,Cqrs.Events.IEventReceiver{`0})
  - Cqrs.Azure.ServiceBus.AzureCommandBusPublisher`1.PublishAndWait``2(``0,TimeSpan,Cqrs.Events.IEventReceiver{`0})
  langs:
  - csharp
  - vb
  name: AzureCommandBusPublisher<TAuthenticationToken>
  nameWithType: AzureCommandBusPublisher<TAuthenticationToken>
  fullName: Cqrs.Azure.ServiceBus.AzureCommandBusPublisher<TAuthenticationToken>
  type: Class
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.ServiceBus/AzureCommandBusPublisher.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: AzureCommandBusPublisher
    path: Framework/Azure/Cqrs.Azure.ServiceBus/AzureCommandBusPublisher.cs
    startLine: 30
  assemblies:
  - Cqrs.Azure.ServiceBus
  namespace: Cqrs.Azure.ServiceBus
  summary: "\nA <xref href=\"Cqrs.Commands.ICommandPublisher%601\" data-throw-if-not-resolved=\"false\"></xref> that resolves handlers , executes the handler and then publishes the <xref href=\"Cqrs.Commands.ICommand%601\" data-throw-if-not-resolved=\"false\"></xref> on the private command bus.\n"
  example: []
  syntax:
    content: 'public class AzureCommandBusPublisher<TAuthenticationToken> : AzureCommandBus<TAuthenticationToken>, IPublishAndWaitCommandPublisher<TAuthenticationToken>, ICommandPublisher<TAuthenticationToken>'
    typeParameters:
    - id: TAuthenticationToken
      description: The <see cref="!:Type"></see> of the authentication token.
    content.vb: >-
      Public Class AzureCommandBusPublisher(Of TAuthenticationToken)
          Inherits AzureCommandBus(Of TAuthenticationToken)
          Implements IPublishAndWaitCommandPublisher(Of TAuthenticationToken), ICommandPublisher(Of TAuthenticationToken)
  inheritance:
  - System.Object
  - Cqrs.Azure.ServiceBus.AzureBus{{TAuthenticationToken}}
  - Cqrs.Azure.ServiceBus.AzureServiceBus{{TAuthenticationToken}}
  - Cqrs.Azure.ServiceBus.AzureCommandBus{{TAuthenticationToken}}
  implements:
  - Cqrs.Commands.IPublishAndWaitCommandPublisher{{TAuthenticationToken}}
  - Cqrs.Commands.ICommandPublisher{{TAuthenticationToken}}
  inheritedMembers:
  - Cqrs.Azure.ServiceBus.AzureCommandBus{{TAuthenticationToken}}.MessageBusConnectionStringConfigurationKey
  - Cqrs.Azure.ServiceBus.AzureCommandBus{{TAuthenticationToken}}.PrivateTopicNameConfigurationKey
  - Cqrs.Azure.ServiceBus.AzureCommandBus{{TAuthenticationToken}}.PublicTopicNameConfigurationKey
  - Cqrs.Azure.ServiceBus.AzureCommandBus{{TAuthenticationToken}}.PrivateTopicSubscriptionNameConfigurationKey
  - Cqrs.Azure.ServiceBus.AzureCommandBus{{TAuthenticationToken}}.PublicTopicSubscriptionNameConfigurationKey
  - Cqrs.Azure.ServiceBus.AzureCommandBus{{TAuthenticationToken}}.DefaultPrivateTopicName
  - Cqrs.Azure.ServiceBus.AzureCommandBus{{TAuthenticationToken}}.DefaultPublicTopicName
  - Cqrs.Azure.ServiceBus.AzureCommandBus{{TAuthenticationToken}}.ThrowExceptionOnReceiverMessageLockLostExceptionDuringCompleteConfigurationKey
  - Cqrs.Azure.ServiceBus.AzureServiceBus{{TAuthenticationToken}}.PrivateServiceBusPublisher
  - Cqrs.Azure.ServiceBus.AzureServiceBus{{TAuthenticationToken}}.PublicServiceBusPublisher
  - Cqrs.Azure.ServiceBus.AzureServiceBus{{TAuthenticationToken}}.PrivateServiceBusReceivers
  - Cqrs.Azure.ServiceBus.AzureServiceBus{{TAuthenticationToken}}.PublicServiceBusReceivers
  - Cqrs.Azure.ServiceBus.AzureServiceBus{{TAuthenticationToken}}.PrivateTopicName
  - Cqrs.Azure.ServiceBus.AzureServiceBus{{TAuthenticationToken}}.PublicTopicName
  - Cqrs.Azure.ServiceBus.AzureServiceBus{{TAuthenticationToken}}.PrivateTopicSubscriptionName
  - Cqrs.Azure.ServiceBus.AzureServiceBus{{TAuthenticationToken}}.PublicTopicSubscriptionName
  - Cqrs.Azure.ServiceBus.AzureServiceBus{{TAuthenticationToken}}.ThrowExceptionOnReceiverMessageLockLostExceptionDuringComplete
  - Cqrs.Azure.ServiceBus.AzureServiceBus{{TAuthenticationToken}}.DefaultPrivateTopicSubscriptionName
  - Cqrs.Azure.ServiceBus.AzureServiceBus{{TAuthenticationToken}}.DefaultPublicTopicSubscriptionName
  - Cqrs.Azure.ServiceBus.AzureServiceBus{{TAuthenticationToken}}.ReceiverMessageHandler
  - Cqrs.Azure.ServiceBus.AzureServiceBus{{TAuthenticationToken}}.ReceiverMessageHandlerOptions
  - Cqrs.Azure.ServiceBus.AzureServiceBus{{TAuthenticationToken}}.BusHelper
  - Cqrs.Azure.ServiceBus.AzureServiceBus{{TAuthenticationToken}}.AzureBusHelper
  - Cqrs.Azure.ServiceBus.AzureServiceBus{{TAuthenticationToken}}.TelemetryHelper
  - Cqrs.Azure.ServiceBus.AzureServiceBus{{TAuthenticationToken}}.GetConnectionString
  - Cqrs.Azure.ServiceBus.AzureServiceBus{{TAuthenticationToken}}.InstantiatePublishing
  - Cqrs.Azure.ServiceBus.AzureServiceBus{{TAuthenticationToken}}.InstantiateReceiving
  - Cqrs.Azure.ServiceBus.AzureServiceBus{{TAuthenticationToken}}.InstantiateReceiving(NamespaceManager,IDictionary{System.Int32,SubscriptionClient},System.String,System.String)
  - Cqrs.Azure.ServiceBus.AzureServiceBus{{TAuthenticationToken}}.CheckPrivateTopicExists(NamespaceManager)
  - Cqrs.Azure.ServiceBus.AzureServiceBus{{TAuthenticationToken}}.CheckPublicTopicExists(NamespaceManager)
  - Cqrs.Azure.ServiceBus.AzureServiceBus{{TAuthenticationToken}}.CheckTopicExists(NamespaceManager,System.String,System.String)
  - Cqrs.Azure.ServiceBus.AzureServiceBus{{TAuthenticationToken}}.TriggerSettingsChecking
  - Cqrs.Azure.ServiceBus.AzureServiceBus{{TAuthenticationToken}}.TriggerSettingsChecking(TopicClient,IDictionary{System.Int32,SubscriptionClient})
  - Cqrs.Azure.ServiceBus.AzureServiceBus{{TAuthenticationToken}}.RegisterReceiverMessageHandler(Action{BrokeredMessage},OnMessageOptions)
  - Cqrs.Azure.ServiceBus.AzureServiceBus{{TAuthenticationToken}}.StoreReceiverMessageHandler(Action{BrokeredMessage},OnMessageOptions)
  - Cqrs.Azure.ServiceBus.AzureServiceBus{{TAuthenticationToken}}.ApplyReceiverMessageHandler
  - Cqrs.Azure.ServiceBus.AzureServiceBus{{TAuthenticationToken}}.CleanUpDeadLetters(System.String,System.String)
  - Cqrs.Azure.ServiceBus.AzureBus{{TAuthenticationToken}}.ConnectionString
  - Cqrs.Azure.ServiceBus.AzureBus{{TAuthenticationToken}}.MessageSerialiser
  - Cqrs.Azure.ServiceBus.AzureBus{{TAuthenticationToken}}.AuthenticationTokenHelper
  - Cqrs.Azure.ServiceBus.AzureBus{{TAuthenticationToken}}.CorrelationIdHelper
  - Cqrs.Azure.ServiceBus.AzureBus{{TAuthenticationToken}}.Logger
  - Cqrs.Azure.ServiceBus.AzureBus{{TAuthenticationToken}}.ConfigurationManager
  - Cqrs.Azure.ServiceBus.AzureBus{{TAuthenticationToken}}.EventWaits
  - Cqrs.Azure.ServiceBus.AzureBus{{TAuthenticationToken}}.DefaultNumberOfReceiversCount
  - Cqrs.Azure.ServiceBus.AzureBus{{TAuthenticationToken}}.NumberOfReceiversCount
  - Cqrs.Azure.ServiceBus.AzureBus{{TAuthenticationToken}}.DefaultMaximumConcurrentReceiverProcessesCount
  - Cqrs.Azure.ServiceBus.AzureBus{{TAuthenticationToken}}.MaximumConcurrentReceiverProcessesCount
  - Cqrs.Azure.ServiceBus.AzureBus{{TAuthenticationToken}}.SetConnectionStrings
  - Cqrs.Azure.ServiceBus.AzureBus{{TAuthenticationToken}}.SetNumberOfReceiversCount
  - Cqrs.Azure.ServiceBus.AzureBus{{TAuthenticationToken}}.SetMaximumConcurrentReceiverProcessesCount
  - Cqrs.Azure.ServiceBus.AzureBus{{TAuthenticationToken}}.GetCurrentNumberOfReceiversCount
  - Cqrs.Azure.ServiceBus.AzureBus{{TAuthenticationToken}}.GetCurrentMaximumConcurrentReceiverProcessesCount
  - Cqrs.Azure.ServiceBus.AzureBus{{TAuthenticationToken}}.GetNamespaceManager
  - Cqrs.Azure.ServiceBus.AzureBus{{TAuthenticationToken}}.AzureServiceBusRetryPolicy
  - Cqrs.Azure.ServiceBus.AzureBus{{TAuthenticationToken}}.StartSettingsChecking
  - Cqrs.Azure.ServiceBus.AzureBus{{TAuthenticationToken}}.ValidateSettingsHaveChanged
  - Cqrs.Azure.ServiceBus.AzureBus{{TAuthenticationToken}}.UpdateSettings
  nameWithType.vb: AzureCommandBusPublisher(Of TAuthenticationToken)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Cqrs.Azure.ServiceBus.AzureCommandBusPublisher(Of TAuthenticationToken)
  name.vb: AzureCommandBusPublisher(Of TAuthenticationToken)
- uid: Cqrs.Azure.ServiceBus.AzureCommandBusPublisher`1.#ctor(Cqrs.Configuration.IConfigurationManager,Cqrs.Azure.ServiceBus.IMessageSerialiser{`0},Cqrs.Authentication.IAuthenticationTokenHelper{`0},ICorrelationIdHelper,ILogger,Cqrs.Azure.ServiceBus.IAzureBusHelper{`0},Cqrs.Bus.IBusHelper)
  commentId: M:Cqrs.Azure.ServiceBus.AzureCommandBusPublisher`1.#ctor(Cqrs.Configuration.IConfigurationManager,Cqrs.Azure.ServiceBus.IMessageSerialiser{`0},Cqrs.Authentication.IAuthenticationTokenHelper{`0},ICorrelationIdHelper,ILogger,Cqrs.Azure.ServiceBus.IAzureBusHelper{`0},Cqrs.Bus.IBusHelper)
  id: '#ctor(Cqrs.Configuration.IConfigurationManager,Cqrs.Azure.ServiceBus.IMessageSerialiser{`0},Cqrs.Authentication.IAuthenticationTokenHelper{`0},ICorrelationIdHelper,ILogger,Cqrs.Azure.ServiceBus.IAzureBusHelper{`0},Cqrs.Bus.IBusHelper)'
  parent: Cqrs.Azure.ServiceBus.AzureCommandBusPublisher`1
  langs:
  - csharp
  - vb
  name: AzureCommandBusPublisher(IConfigurationManager, IMessageSerialiser<TAuthenticationToken>, IAuthenticationTokenHelper<TAuthenticationToken>, ICorrelationIdHelper, ILogger, IAzureBusHelper<TAuthenticationToken>, IBusHelper)
  nameWithType: AzureCommandBusPublisher<TAuthenticationToken>.AzureCommandBusPublisher(IConfigurationManager, IMessageSerialiser<TAuthenticationToken>, IAuthenticationTokenHelper<TAuthenticationToken>, ICorrelationIdHelper, ILogger, IAzureBusHelper<TAuthenticationToken>, IBusHelper)
  fullName: Cqrs.Azure.ServiceBus.AzureCommandBusPublisher<TAuthenticationToken>.AzureCommandBusPublisher(Cqrs.Configuration.IConfigurationManager, Cqrs.Azure.ServiceBus.IMessageSerialiser<TAuthenticationToken>, Cqrs.Authentication.IAuthenticationTokenHelper<TAuthenticationToken>, ICorrelationIdHelper, ILogger, Cqrs.Azure.ServiceBus.IAzureBusHelper<TAuthenticationToken>, Cqrs.Bus.IBusHelper)
  type: Constructor
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.ServiceBus/AzureCommandBusPublisher.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: .ctor
    path: Framework/Azure/Cqrs.Azure.ServiceBus/AzureCommandBusPublisher.cs
    startLine: 38
  assemblies:
  - Cqrs.Azure.ServiceBus
  namespace: Cqrs.Azure.ServiceBus
  summary: "\nInstantiates a new instance of <xref href=\"Cqrs.Azure.ServiceBus.AzureCommandBusPublisher%601\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public AzureCommandBusPublisher(IConfigurationManager configurationManager, IMessageSerialiser<TAuthenticationToken> messageSerialiser, IAuthenticationTokenHelper<TAuthenticationToken> authenticationTokenHelper, ICorrelationIdHelper correlationIdHelper, ILogger logger, IAzureBusHelper<TAuthenticationToken> azureBusHelper, IBusHelper busHelper)
    parameters:
    - id: configurationManager
      type: Cqrs.Configuration.IConfigurationManager
    - id: messageSerialiser
      type: Cqrs.Azure.ServiceBus.IMessageSerialiser{{TAuthenticationToken}}
    - id: authenticationTokenHelper
      type: Cqrs.Authentication.IAuthenticationTokenHelper{{TAuthenticationToken}}
    - id: correlationIdHelper
      type: ICorrelationIdHelper
    - id: logger
      type: ILogger
    - id: azureBusHelper
      type: Cqrs.Azure.ServiceBus.IAzureBusHelper{{TAuthenticationToken}}
    - id: busHelper
      type: Cqrs.Bus.IBusHelper
    content.vb: Public Sub New(configurationManager As IConfigurationManager, messageSerialiser As IMessageSerialiser(Of TAuthenticationToken), authenticationTokenHelper As IAuthenticationTokenHelper(Of TAuthenticationToken), correlationIdHelper As ICorrelationIdHelper, logger As ILogger, azureBusHelper As IAzureBusHelper(Of TAuthenticationToken), busHelper As IBusHelper)
  overload: Cqrs.Azure.ServiceBus.AzureCommandBusPublisher`1.#ctor*
  nameWithType.vb: AzureCommandBusPublisher(Of TAuthenticationToken).AzureCommandBusPublisher(IConfigurationManager, IMessageSerialiser(Of TAuthenticationToken), IAuthenticationTokenHelper(Of TAuthenticationToken), ICorrelationIdHelper, ILogger, IAzureBusHelper(Of TAuthenticationToken), IBusHelper)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Cqrs.Azure.ServiceBus.AzureCommandBusPublisher(Of TAuthenticationToken).AzureCommandBusPublisher(Cqrs.Configuration.IConfigurationManager, Cqrs.Azure.ServiceBus.IMessageSerialiser(Of TAuthenticationToken), Cqrs.Authentication.IAuthenticationTokenHelper(Of TAuthenticationToken), ICorrelationIdHelper, ILogger, Cqrs.Azure.ServiceBus.IAzureBusHelper(Of TAuthenticationToken), Cqrs.Bus.IBusHelper)
  name.vb: AzureCommandBusPublisher(IConfigurationManager, IMessageSerialiser(Of TAuthenticationToken), IAuthenticationTokenHelper(Of TAuthenticationToken), ICorrelationIdHelper, ILogger, IAzureBusHelper(Of TAuthenticationToken), IBusHelper)
- uid: Cqrs.Azure.ServiceBus.AzureCommandBusPublisher`1.Publish``1(``0)
  commentId: M:Cqrs.Azure.ServiceBus.AzureCommandBusPublisher`1.Publish``1(``0)
  id: Publish``1(``0)
  parent: Cqrs.Azure.ServiceBus.AzureCommandBusPublisher`1
  langs:
  - csharp
  - vb
  name: Publish<TCommand>(TCommand)
  nameWithType: AzureCommandBusPublisher<TAuthenticationToken>.Publish<TCommand>(TCommand)
  fullName: Cqrs.Azure.ServiceBus.AzureCommandBusPublisher<TAuthenticationToken>.Publish<TCommand>(TCommand)
  type: Method
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.ServiceBus/AzureCommandBusPublisher.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Publish
    path: Framework/Azure/Cqrs.Azure.ServiceBus/AzureCommandBusPublisher.cs
    startLine: 67
  assemblies:
  - Cqrs.Azure.ServiceBus
  namespace: Cqrs.Azure.ServiceBus
  summary: "\nPublishes the provided <code data-dev-comment-type=\"paramref\">command</code> on the command bus.\n"
  example: []
  syntax:
    content: 'public virtual void Publish<TCommand>(TCommand command)where TCommand : ICommand<TAuthenticationToken>'
    parameters:
    - id: command
      type: '{TCommand}'
    typeParameters:
    - id: TCommand
    content.vb: Public Overridable Sub Publish(Of TCommand As ICommand(Of TAuthenticationToken))(command As TCommand)
  overload: Cqrs.Azure.ServiceBus.AzureCommandBusPublisher`1.Publish*
  implements:
  - Cqrs.Commands.ICommandPublisher{{TAuthenticationToken}}.Publish``1({TCommand})
  nameWithType.vb: AzureCommandBusPublisher(Of TAuthenticationToken).Publish(Of TCommand)(TCommand)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Cqrs.Azure.ServiceBus.AzureCommandBusPublisher(Of TAuthenticationToken).Publish(Of TCommand)(TCommand)
  name.vb: Publish(Of TCommand)(TCommand)
- uid: Cqrs.Azure.ServiceBus.AzureCommandBusPublisher`1.Publish``1(IEnumerable{``0})
  commentId: M:Cqrs.Azure.ServiceBus.AzureCommandBusPublisher`1.Publish``1(IEnumerable{``0})
  id: Publish``1(IEnumerable{``0})
  parent: Cqrs.Azure.ServiceBus.AzureCommandBusPublisher`1
  langs:
  - csharp
  - vb
  name: Publish<TCommand>(IEnumerable<TCommand>)
  nameWithType: AzureCommandBusPublisher<TAuthenticationToken>.Publish<TCommand>(IEnumerable<TCommand>)
  fullName: Cqrs.Azure.ServiceBus.AzureCommandBusPublisher<TAuthenticationToken>.Publish<TCommand>(IEnumerable<TCommand>)
  type: Method
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.ServiceBus/AzureCommandBusPublisher.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Publish
    path: Framework/Azure/Cqrs.Azure.ServiceBus/AzureCommandBusPublisher.cs
    startLine: 122
  assemblies:
  - Cqrs.Azure.ServiceBus
  namespace: Cqrs.Azure.ServiceBus
  summary: "\nPublishes the provided <code data-dev-comment-type=\"paramref\">commands</code> on the command bus.\n"
  example: []
  syntax:
    content: 'public virtual void Publish<TCommand>(IEnumerable<TCommand> commands)where TCommand : ICommand<TAuthenticationToken>'
    parameters:
    - id: commands
      type: IEnumerable{{TCommand}}
    typeParameters:
    - id: TCommand
    content.vb: Public Overridable Sub Publish(Of TCommand As ICommand(Of TAuthenticationToken))(commands As IEnumerable(Of TCommand))
  overload: Cqrs.Azure.ServiceBus.AzureCommandBusPublisher`1.Publish*
  nameWithType.vb: AzureCommandBusPublisher(Of TAuthenticationToken).Publish(Of TCommand)(IEnumerable(Of TCommand))
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Cqrs.Azure.ServiceBus.AzureCommandBusPublisher(Of TAuthenticationToken).Publish(Of TCommand)(IEnumerable(Of TCommand))
  name.vb: Publish(Of TCommand)(IEnumerable(Of TCommand))
- uid: Cqrs.Azure.ServiceBus.AzureCommandBusPublisher`1.PublishAndWait``2(``0,Cqrs.Events.IEventReceiver{`0})
  commentId: M:Cqrs.Azure.ServiceBus.AzureCommandBusPublisher`1.PublishAndWait``2(``0,Cqrs.Events.IEventReceiver{`0})
  id: PublishAndWait``2(``0,Cqrs.Events.IEventReceiver{`0})
  parent: Cqrs.Azure.ServiceBus.AzureCommandBusPublisher`1
  langs:
  - csharp
  - vb
  name: PublishAndWait<TCommand, TEvent>(TCommand, IEventReceiver<TAuthenticationToken>)
  nameWithType: AzureCommandBusPublisher<TAuthenticationToken>.PublishAndWait<TCommand, TEvent>(TCommand, IEventReceiver<TAuthenticationToken>)
  fullName: Cqrs.Azure.ServiceBus.AzureCommandBusPublisher<TAuthenticationToken>.PublishAndWait<TCommand, TEvent>(TCommand, Cqrs.Events.IEventReceiver<TAuthenticationToken>)
  type: Method
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.ServiceBus/AzureCommandBusPublisher.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: PublishAndWait
    path: Framework/Azure/Cqrs.Azure.ServiceBus/AzureCommandBusPublisher.cs
    startLine: 200
  assemblies:
  - Cqrs.Azure.ServiceBus
  namespace: Cqrs.Azure.ServiceBus
  summary: "\nPublishes the provided <code data-dev-comment-type=\"paramref\">command</code> and waits for an event of <code data-dev-comment-type=\"typeparamref\">TEvent</code>\n"
  example: []
  syntax:
    content: 'public virtual TEvent PublishAndWait<TCommand, TEvent>(TCommand command, IEventReceiver<TAuthenticationToken> eventReceiver = null)where TCommand : ICommand<TAuthenticationToken>'
    parameters:
    - id: command
      type: '{TCommand}'
      description: The <code data-dev-comment-type="typeparamref">TCommand</code> to publish.
    - id: eventReceiver
      type: Cqrs.Events.IEventReceiver{{TAuthenticationToken}}
      description: If provided, is the <xref href="Cqrs.Events.IEventReceiver%601" data-throw-if-not-resolved="false"></xref> that the event is expected to be returned on.
    typeParameters:
    - id: TCommand
    - id: TEvent
    return:
      type: '{TEvent}'
    content.vb: Public Overridable Function PublishAndWait(Of TCommand As ICommand(Of TAuthenticationToken), TEvent)(command As TCommand, eventReceiver As IEventReceiver(Of TAuthenticationToken) = Nothing) As TEvent
  overload: Cqrs.Azure.ServiceBus.AzureCommandBusPublisher`1.PublishAndWait*
  implements:
  - Cqrs.Commands.IPublishAndWaitCommandPublisher{{TAuthenticationToken}}.PublishAndWait``2({TCommand},Cqrs.Events.IEventReceiver{{TAuthenticationToken}})
  nameWithType.vb: AzureCommandBusPublisher(Of TAuthenticationToken).PublishAndWait(Of TCommand, TEvent)(TCommand, IEventReceiver(Of TAuthenticationToken))
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Cqrs.Azure.ServiceBus.AzureCommandBusPublisher(Of TAuthenticationToken).PublishAndWait(Of TCommand, TEvent)(TCommand, Cqrs.Events.IEventReceiver(Of TAuthenticationToken))
  name.vb: PublishAndWait(Of TCommand, TEvent)(TCommand, IEventReceiver(Of TAuthenticationToken))
- uid: Cqrs.Azure.ServiceBus.AzureCommandBusPublisher`1.PublishAndWait``2(``0,System.Int32,Cqrs.Events.IEventReceiver{`0})
  commentId: M:Cqrs.Azure.ServiceBus.AzureCommandBusPublisher`1.PublishAndWait``2(``0,System.Int32,Cqrs.Events.IEventReceiver{`0})
  id: PublishAndWait``2(``0,System.Int32,Cqrs.Events.IEventReceiver{`0})
  parent: Cqrs.Azure.ServiceBus.AzureCommandBusPublisher`1
  langs:
  - csharp
  - vb
  name: PublishAndWait<TCommand, TEvent>(TCommand, Int32, IEventReceiver<TAuthenticationToken>)
  nameWithType: AzureCommandBusPublisher<TAuthenticationToken>.PublishAndWait<TCommand, TEvent>(TCommand, Int32, IEventReceiver<TAuthenticationToken>)
  fullName: Cqrs.Azure.ServiceBus.AzureCommandBusPublisher<TAuthenticationToken>.PublishAndWait<TCommand, TEvent>(TCommand, System.Int32, Cqrs.Events.IEventReceiver<TAuthenticationToken>)
  type: Method
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.ServiceBus/AzureCommandBusPublisher.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: PublishAndWait
    path: Framework/Azure/Cqrs.Azure.ServiceBus/AzureCommandBusPublisher.cs
    startLine: 212
  assemblies:
  - Cqrs.Azure.ServiceBus
  namespace: Cqrs.Azure.ServiceBus
  summary: "\nPublishes the provided <code data-dev-comment-type=\"paramref\">command</code> and waits for an event of <code data-dev-comment-type=\"typeparamref\">TEvent</code> or exits if the specified timeout is expired.\n"
  example: []
  syntax:
    content: 'public virtual TEvent PublishAndWait<TCommand, TEvent>(TCommand command, int millisecondsTimeout, IEventReceiver<TAuthenticationToken> eventReceiver = null)where TCommand : ICommand<TAuthenticationToken>'
    parameters:
    - id: command
      type: '{TCommand}'
      description: The <code data-dev-comment-type="typeparamref">TCommand</code> to publish.
    - id: millisecondsTimeout
      type: System.Int32
      description: The number of milliseconds to wait, or <xref href="System.Threading.Timeout.Infinite" data-throw-if-not-resolved="false"></xref> (-1) to wait indefinitely.
    - id: eventReceiver
      type: Cqrs.Events.IEventReceiver{{TAuthenticationToken}}
      description: If provided, is the <xref href="Cqrs.Events.IEventReceiver%601" data-throw-if-not-resolved="false"></xref> that the event is expected to be returned on.
    typeParameters:
    - id: TCommand
    - id: TEvent
    return:
      type: '{TEvent}'
    content.vb: Public Overridable Function PublishAndWait(Of TCommand As ICommand(Of TAuthenticationToken), TEvent)(command As TCommand, millisecondsTimeout As Integer, eventReceiver As IEventReceiver(Of TAuthenticationToken) = Nothing) As TEvent
  overload: Cqrs.Azure.ServiceBus.AzureCommandBusPublisher`1.PublishAndWait*
  implements:
  - Cqrs.Commands.IPublishAndWaitCommandPublisher{{TAuthenticationToken}}.PublishAndWait``2({TCommand},System.Int32,Cqrs.Events.IEventReceiver{{TAuthenticationToken}})
  nameWithType.vb: AzureCommandBusPublisher(Of TAuthenticationToken).PublishAndWait(Of TCommand, TEvent)(TCommand, Int32, IEventReceiver(Of TAuthenticationToken))
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Cqrs.Azure.ServiceBus.AzureCommandBusPublisher(Of TAuthenticationToken).PublishAndWait(Of TCommand, TEvent)(TCommand, System.Int32, Cqrs.Events.IEventReceiver(Of TAuthenticationToken))
  name.vb: PublishAndWait(Of TCommand, TEvent)(TCommand, Int32, IEventReceiver(Of TAuthenticationToken))
- uid: Cqrs.Azure.ServiceBus.AzureCommandBusPublisher`1.PublishAndWait``2(``0,TimeSpan,Cqrs.Events.IEventReceiver{`0})
  commentId: M:Cqrs.Azure.ServiceBus.AzureCommandBusPublisher`1.PublishAndWait``2(``0,TimeSpan,Cqrs.Events.IEventReceiver{`0})
  id: PublishAndWait``2(``0,TimeSpan,Cqrs.Events.IEventReceiver{`0})
  parent: Cqrs.Azure.ServiceBus.AzureCommandBusPublisher`1
  langs:
  - csharp
  - vb
  name: PublishAndWait<TCommand, TEvent>(TCommand, TimeSpan, IEventReceiver<TAuthenticationToken>)
  nameWithType: AzureCommandBusPublisher<TAuthenticationToken>.PublishAndWait<TCommand, TEvent>(TCommand, TimeSpan, IEventReceiver<TAuthenticationToken>)
  fullName: Cqrs.Azure.ServiceBus.AzureCommandBusPublisher<TAuthenticationToken>.PublishAndWait<TCommand, TEvent>(TCommand, TimeSpan, Cqrs.Events.IEventReceiver<TAuthenticationToken>)
  type: Method
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.ServiceBus/AzureCommandBusPublisher.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: PublishAndWait
    path: Framework/Azure/Cqrs.Azure.ServiceBus/AzureCommandBusPublisher.cs
    startLine: 224
  assemblies:
  - Cqrs.Azure.ServiceBus
  namespace: Cqrs.Azure.ServiceBus
  summary: "\nPublishes the provided <code data-dev-comment-type=\"paramref\">command</code> and waits for an event of <code data-dev-comment-type=\"typeparamref\">TEvent</code> or exits if the specified timeout is expired.\n"
  example: []
  syntax:
    content: 'public virtual TEvent PublishAndWait<TCommand, TEvent>(TCommand command, TimeSpan timeout, IEventReceiver<TAuthenticationToken> eventReceiver = null)where TCommand : ICommand<TAuthenticationToken>'
    parameters:
    - id: command
      type: '{TCommand}'
      description: The <code data-dev-comment-type="typeparamref">TCommand</code> to publish.
    - id: timeout
      type: TimeSpan
      description: A <xref href="System.TimeSpan" data-throw-if-not-resolved="false"></xref> that represents the number of milliseconds to wait, or a TimeSpan that represents -1 milliseconds to wait indefinitely.
    - id: eventReceiver
      type: Cqrs.Events.IEventReceiver{{TAuthenticationToken}}
      description: If provided, is the <xref href="Cqrs.Events.IEventReceiver%601" data-throw-if-not-resolved="false"></xref> that the event is expected to be returned on.
    typeParameters:
    - id: TCommand
    - id: TEvent
    return:
      type: '{TEvent}'
    content.vb: Public Overridable Function PublishAndWait(Of TCommand As ICommand(Of TAuthenticationToken), TEvent)(command As TCommand, timeout As TimeSpan, eventReceiver As IEventReceiver(Of TAuthenticationToken) = Nothing) As TEvent
  overload: Cqrs.Azure.ServiceBus.AzureCommandBusPublisher`1.PublishAndWait*
  nameWithType.vb: AzureCommandBusPublisher(Of TAuthenticationToken).PublishAndWait(Of TCommand, TEvent)(TCommand, TimeSpan, IEventReceiver(Of TAuthenticationToken))
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Cqrs.Azure.ServiceBus.AzureCommandBusPublisher(Of TAuthenticationToken).PublishAndWait(Of TCommand, TEvent)(TCommand, TimeSpan, Cqrs.Events.IEventReceiver(Of TAuthenticationToken))
  name.vb: PublishAndWait(Of TCommand, TEvent)(TCommand, TimeSpan, IEventReceiver(Of TAuthenticationToken))
- uid: Cqrs.Azure.ServiceBus.AzureCommandBusPublisher`1.PublishAndWait``2(``0,Func{IEnumerable{Cqrs.Events.IEvent{`0}},``1},Cqrs.Events.IEventReceiver{`0})
  commentId: M:Cqrs.Azure.ServiceBus.AzureCommandBusPublisher`1.PublishAndWait``2(``0,Func{IEnumerable{Cqrs.Events.IEvent{`0}},``1},Cqrs.Events.IEventReceiver{`0})
  id: PublishAndWait``2(``0,Func{IEnumerable{Cqrs.Events.IEvent{`0}},``1},Cqrs.Events.IEventReceiver{`0})
  parent: Cqrs.Azure.ServiceBus.AzureCommandBusPublisher`1
  langs:
  - csharp
  - vb
  name: PublishAndWait<TCommand, TEvent>(TCommand, Func<IEnumerable<IEvent<TAuthenticationToken>>, TEvent>, IEventReceiver<TAuthenticationToken>)
  nameWithType: AzureCommandBusPublisher<TAuthenticationToken>.PublishAndWait<TCommand, TEvent>(TCommand, Func<IEnumerable<IEvent<TAuthenticationToken>>, TEvent>, IEventReceiver<TAuthenticationToken>)
  fullName: Cqrs.Azure.ServiceBus.AzureCommandBusPublisher<TAuthenticationToken>.PublishAndWait<TCommand, TEvent>(TCommand, Func<IEnumerable<Cqrs.Events.IEvent<TAuthenticationToken>>, TEvent>, Cqrs.Events.IEventReceiver<TAuthenticationToken>)
  type: Method
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.ServiceBus/AzureCommandBusPublisher.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: PublishAndWait
    path: Framework/Azure/Cqrs.Azure.ServiceBus/AzureCommandBusPublisher.cs
    startLine: 239
  assemblies:
  - Cqrs.Azure.ServiceBus
  namespace: Cqrs.Azure.ServiceBus
  summary: "\nPublishes the provided <code data-dev-comment-type=\"paramref\">command</code> and waits until the specified condition is satisfied an event of <code data-dev-comment-type=\"typeparamref\">TEvent</code>\n"
  example: []
  syntax:
    content: 'public virtual TEvent PublishAndWait<TCommand, TEvent>(TCommand command, Func<IEnumerable<IEvent<TAuthenticationToken>>, TEvent> condition, IEventReceiver<TAuthenticationToken> eventReceiver = null)where TCommand : ICommand<TAuthenticationToken>'
    parameters:
    - id: command
      type: '{TCommand}'
      description: The <code data-dev-comment-type="typeparamref">TCommand</code> to publish.
    - id: condition
      type: Func{IEnumerable{Cqrs.Events.IEvent{{TAuthenticationToken}}},{TEvent}}
      description: A delegate to be executed over and over until it returns the <code data-dev-comment-type="typeparamref">TEvent</code> that is desired, return null to keep trying.
    - id: eventReceiver
      type: Cqrs.Events.IEventReceiver{{TAuthenticationToken}}
      description: If provided, is the <xref href="Cqrs.Events.IEventReceiver%601" data-throw-if-not-resolved="false"></xref> that the event is expected to be returned on.
    typeParameters:
    - id: TCommand
    - id: TEvent
    return:
      type: '{TEvent}'
    content.vb: Public Overridable Function PublishAndWait(Of TCommand As ICommand(Of TAuthenticationToken), TEvent)(command As TCommand, condition As Func(Of IEnumerable(Of IEvent(Of TAuthenticationToken)), TEvent), eventReceiver As IEventReceiver(Of TAuthenticationToken) = Nothing) As TEvent
  overload: Cqrs.Azure.ServiceBus.AzureCommandBusPublisher`1.PublishAndWait*
  nameWithType.vb: AzureCommandBusPublisher(Of TAuthenticationToken).PublishAndWait(Of TCommand, TEvent)(TCommand, Func(Of IEnumerable(Of IEvent(Of TAuthenticationToken)), TEvent), IEventReceiver(Of TAuthenticationToken))
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Cqrs.Azure.ServiceBus.AzureCommandBusPublisher(Of TAuthenticationToken).PublishAndWait(Of TCommand, TEvent)(TCommand, Func(Of IEnumerable(Of Cqrs.Events.IEvent(Of TAuthenticationToken)), TEvent), Cqrs.Events.IEventReceiver(Of TAuthenticationToken))
  name.vb: PublishAndWait(Of TCommand, TEvent)(TCommand, Func(Of IEnumerable(Of IEvent(Of TAuthenticationToken)), TEvent), IEventReceiver(Of TAuthenticationToken))
- uid: Cqrs.Azure.ServiceBus.AzureCommandBusPublisher`1.PublishAndWait``2(``0,Func{IEnumerable{Cqrs.Events.IEvent{`0}},``1},System.Int32,Cqrs.Events.IEventReceiver{`0})
  commentId: M:Cqrs.Azure.ServiceBus.AzureCommandBusPublisher`1.PublishAndWait``2(``0,Func{IEnumerable{Cqrs.Events.IEvent{`0}},``1},System.Int32,Cqrs.Events.IEventReceiver{`0})
  id: PublishAndWait``2(``0,Func{IEnumerable{Cqrs.Events.IEvent{`0}},``1},System.Int32,Cqrs.Events.IEventReceiver{`0})
  parent: Cqrs.Azure.ServiceBus.AzureCommandBusPublisher`1
  langs:
  - csharp
  - vb
  name: PublishAndWait<TCommand, TEvent>(TCommand, Func<IEnumerable<IEvent<TAuthenticationToken>>, TEvent>, Int32, IEventReceiver<TAuthenticationToken>)
  nameWithType: AzureCommandBusPublisher<TAuthenticationToken>.PublishAndWait<TCommand, TEvent>(TCommand, Func<IEnumerable<IEvent<TAuthenticationToken>>, TEvent>, Int32, IEventReceiver<TAuthenticationToken>)
  fullName: Cqrs.Azure.ServiceBus.AzureCommandBusPublisher<TAuthenticationToken>.PublishAndWait<TCommand, TEvent>(TCommand, Func<IEnumerable<Cqrs.Events.IEvent<TAuthenticationToken>>, TEvent>, System.Int32, Cqrs.Events.IEventReceiver<TAuthenticationToken>)
  type: Method
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.ServiceBus/AzureCommandBusPublisher.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: PublishAndWait
    path: Framework/Azure/Cqrs.Azure.ServiceBus/AzureCommandBusPublisher.cs
    startLine: 252
  assemblies:
  - Cqrs.Azure.ServiceBus
  namespace: Cqrs.Azure.ServiceBus
  summary: "\nPublishes the provided <code data-dev-comment-type=\"paramref\">command</code> and waits for an event of <code data-dev-comment-type=\"typeparamref\">TEvent</code> or exits if the specified timeout is expired.\n"
  example: []
  syntax:
    content: 'public virtual TEvent PublishAndWait<TCommand, TEvent>(TCommand command, Func<IEnumerable<IEvent<TAuthenticationToken>>, TEvent> condition, int millisecondsTimeout, IEventReceiver<TAuthenticationToken> eventReceiver = null)where TCommand : ICommand<TAuthenticationToken>'
    parameters:
    - id: command
      type: '{TCommand}'
      description: The <code data-dev-comment-type="typeparamref">TCommand</code> to publish.
    - id: condition
      type: Func{IEnumerable{Cqrs.Events.IEvent{{TAuthenticationToken}}},{TEvent}}
      description: A delegate to be executed over and over until it returns the <code data-dev-comment-type="typeparamref">TEvent</code> that is desired, return null to keep trying.
    - id: millisecondsTimeout
      type: System.Int32
      description: The number of milliseconds to wait, or <xref href="System.Threading.Timeout.Infinite" data-throw-if-not-resolved="false"></xref> (-1) to wait indefinitely.
    - id: eventReceiver
      type: Cqrs.Events.IEventReceiver{{TAuthenticationToken}}
      description: If provided, is the <xref href="Cqrs.Events.IEventReceiver%601" data-throw-if-not-resolved="false"></xref> that the event is expected to be returned on.
    typeParameters:
    - id: TCommand
    - id: TEvent
    return:
      type: '{TEvent}'
    content.vb: Public Overridable Function PublishAndWait(Of TCommand As ICommand(Of TAuthenticationToken), TEvent)(command As TCommand, condition As Func(Of IEnumerable(Of IEvent(Of TAuthenticationToken)), TEvent), millisecondsTimeout As Integer, eventReceiver As IEventReceiver(Of TAuthenticationToken) = Nothing) As TEvent
  overload: Cqrs.Azure.ServiceBus.AzureCommandBusPublisher`1.PublishAndWait*
  nameWithType.vb: AzureCommandBusPublisher(Of TAuthenticationToken).PublishAndWait(Of TCommand, TEvent)(TCommand, Func(Of IEnumerable(Of IEvent(Of TAuthenticationToken)), TEvent), Int32, IEventReceiver(Of TAuthenticationToken))
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Cqrs.Azure.ServiceBus.AzureCommandBusPublisher(Of TAuthenticationToken).PublishAndWait(Of TCommand, TEvent)(TCommand, Func(Of IEnumerable(Of Cqrs.Events.IEvent(Of TAuthenticationToken)), TEvent), System.Int32, Cqrs.Events.IEventReceiver(Of TAuthenticationToken))
  name.vb: PublishAndWait(Of TCommand, TEvent)(TCommand, Func(Of IEnumerable(Of IEvent(Of TAuthenticationToken)), TEvent), Int32, IEventReceiver(Of TAuthenticationToken))
- uid: Cqrs.Azure.ServiceBus.AzureCommandBusPublisher`1.PublishAndWait``2(``0,Func{IEnumerable{Cqrs.Events.IEvent{`0}},``1},TimeSpan,Cqrs.Events.IEventReceiver{`0})
  commentId: M:Cqrs.Azure.ServiceBus.AzureCommandBusPublisher`1.PublishAndWait``2(``0,Func{IEnumerable{Cqrs.Events.IEvent{`0}},``1},TimeSpan,Cqrs.Events.IEventReceiver{`0})
  id: PublishAndWait``2(``0,Func{IEnumerable{Cqrs.Events.IEvent{`0}},``1},TimeSpan,Cqrs.Events.IEventReceiver{`0})
  parent: Cqrs.Azure.ServiceBus.AzureCommandBusPublisher`1
  langs:
  - csharp
  - vb
  name: PublishAndWait<TCommand, TEvent>(TCommand, Func<IEnumerable<IEvent<TAuthenticationToken>>, TEvent>, TimeSpan, IEventReceiver<TAuthenticationToken>)
  nameWithType: AzureCommandBusPublisher<TAuthenticationToken>.PublishAndWait<TCommand, TEvent>(TCommand, Func<IEnumerable<IEvent<TAuthenticationToken>>, TEvent>, TimeSpan, IEventReceiver<TAuthenticationToken>)
  fullName: Cqrs.Azure.ServiceBus.AzureCommandBusPublisher<TAuthenticationToken>.PublishAndWait<TCommand, TEvent>(TCommand, Func<IEnumerable<Cqrs.Events.IEvent<TAuthenticationToken>>, TEvent>, TimeSpan, Cqrs.Events.IEventReceiver<TAuthenticationToken>)
  type: Method
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.ServiceBus/AzureCommandBusPublisher.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: PublishAndWait
    path: Framework/Azure/Cqrs.Azure.ServiceBus/AzureCommandBusPublisher.cs
    startLine: 329
  assemblies:
  - Cqrs.Azure.ServiceBus
  namespace: Cqrs.Azure.ServiceBus
  summary: "\nPublishes the provided <code data-dev-comment-type=\"paramref\">command</code> and waits for an event of <code data-dev-comment-type=\"typeparamref\">TEvent</code> or exits if the specified timeout is expired.\n"
  example: []
  syntax:
    content: 'public virtual TEvent PublishAndWait<TCommand, TEvent>(TCommand command, Func<IEnumerable<IEvent<TAuthenticationToken>>, TEvent> condition, TimeSpan timeout, IEventReceiver<TAuthenticationToken> eventReceiver = null)where TCommand : ICommand<TAuthenticationToken>'
    parameters:
    - id: command
      type: '{TCommand}'
      description: The <code data-dev-comment-type="typeparamref">TCommand</code> to publish.
    - id: condition
      type: Func{IEnumerable{Cqrs.Events.IEvent{{TAuthenticationToken}}},{TEvent}}
      description: A delegate to be executed over and over until it returns the <code data-dev-comment-type="typeparamref">TEvent</code> that is desired, return null to keep trying.
    - id: timeout
      type: TimeSpan
      description: A <xref href="System.TimeSpan" data-throw-if-not-resolved="false"></xref> that represents the number of milliseconds to wait, or a TimeSpan that represents -1 milliseconds to wait indefinitely.
    - id: eventReceiver
      type: Cqrs.Events.IEventReceiver{{TAuthenticationToken}}
      description: If provided, is the <xref href="Cqrs.Events.IEventReceiver%601" data-throw-if-not-resolved="false"></xref> that the event is expected to be returned on.
    typeParameters:
    - id: TCommand
    - id: TEvent
    return:
      type: '{TEvent}'
    content.vb: Public Overridable Function PublishAndWait(Of TCommand As ICommand(Of TAuthenticationToken), TEvent)(command As TCommand, condition As Func(Of IEnumerable(Of IEvent(Of TAuthenticationToken)), TEvent), timeout As TimeSpan, eventReceiver As IEventReceiver(Of TAuthenticationToken) = Nothing) As TEvent
  overload: Cqrs.Azure.ServiceBus.AzureCommandBusPublisher`1.PublishAndWait*
  nameWithType.vb: AzureCommandBusPublisher(Of TAuthenticationToken).PublishAndWait(Of TCommand, TEvent)(TCommand, Func(Of IEnumerable(Of IEvent(Of TAuthenticationToken)), TEvent), TimeSpan, IEventReceiver(Of TAuthenticationToken))
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Cqrs.Azure.ServiceBus.AzureCommandBusPublisher(Of TAuthenticationToken).PublishAndWait(Of TCommand, TEvent)(TCommand, Func(Of IEnumerable(Of Cqrs.Events.IEvent(Of TAuthenticationToken)), TEvent), TimeSpan, Cqrs.Events.IEventReceiver(Of TAuthenticationToken))
  name.vb: PublishAndWait(Of TCommand, TEvent)(TCommand, Func(Of IEnumerable(Of IEvent(Of TAuthenticationToken)), TEvent), TimeSpan, IEventReceiver(Of TAuthenticationToken))
references:
- uid: Cqrs.Commands.ICommandPublisher`1
  commentId: T:Cqrs.Commands.ICommandPublisher`1
  isExternal: false
  name: ICommandPublisher<TAuthenticationToken>
  nameWithType: ICommandPublisher<TAuthenticationToken>
  fullName: Cqrs.Commands.ICommandPublisher<TAuthenticationToken>
  nameWithType.vb: ICommandPublisher(Of TAuthenticationToken)
  fullName.vb: Cqrs.Commands.ICommandPublisher(Of TAuthenticationToken)
  name.vb: ICommandPublisher(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Commands.ICommandPublisher`1
    name: ICommandPublisher
    nameWithType: ICommandPublisher
    fullName: Cqrs.Commands.ICommandPublisher
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Commands.ICommandPublisher`1
    name: ICommandPublisher
    nameWithType: ICommandPublisher
    fullName: Cqrs.Commands.ICommandPublisher
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Commands.ICommand`1
  commentId: T:Cqrs.Commands.ICommand`1
  isExternal: false
  name: ICommand<TAuthenticationToken>
  nameWithType: ICommand<TAuthenticationToken>
  fullName: Cqrs.Commands.ICommand<TAuthenticationToken>
  nameWithType.vb: ICommand(Of TAuthenticationToken)
  fullName.vb: Cqrs.Commands.ICommand(Of TAuthenticationToken)
  name.vb: ICommand(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Commands.ICommand`1
    name: ICommand
    nameWithType: ICommand
    fullName: Cqrs.Commands.ICommand
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Commands.ICommand`1
    name: ICommand
    nameWithType: ICommand
    fullName: Cqrs.Commands.ICommand
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.ServiceBus
  commentId: N:Cqrs.Azure.ServiceBus
  isExternal: false
  name: Cqrs.Azure.ServiceBus
  nameWithType: Cqrs.Azure.ServiceBus
  fullName: Cqrs.Azure.ServiceBus
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Cqrs.Azure.ServiceBus.AzureBus{{TAuthenticationToken}}
  commentId: T:Cqrs.Azure.ServiceBus.AzureBus{`0}
  parent: Cqrs.Azure.ServiceBus
  definition: Cqrs.Azure.ServiceBus.AzureBus`1
  name: AzureBus<TAuthenticationToken>
  nameWithType: AzureBus<TAuthenticationToken>
  fullName: Cqrs.Azure.ServiceBus.AzureBus<TAuthenticationToken>
  nameWithType.vb: AzureBus(Of TAuthenticationToken)
  fullName.vb: Cqrs.Azure.ServiceBus.AzureBus(Of TAuthenticationToken)
  name.vb: AzureBus(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Azure.ServiceBus.AzureBus`1
    name: AzureBus
    nameWithType: AzureBus
    fullName: Cqrs.Azure.ServiceBus.AzureBus
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Azure.ServiceBus.AzureBus`1
    name: AzureBus
    nameWithType: AzureBus
    fullName: Cqrs.Azure.ServiceBus.AzureBus
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.ServiceBus.AzureServiceBus{{TAuthenticationToken}}
  commentId: T:Cqrs.Azure.ServiceBus.AzureServiceBus{`0}
  parent: Cqrs.Azure.ServiceBus
  definition: Cqrs.Azure.ServiceBus.AzureServiceBus`1
  name: AzureServiceBus<TAuthenticationToken>
  nameWithType: AzureServiceBus<TAuthenticationToken>
  fullName: Cqrs.Azure.ServiceBus.AzureServiceBus<TAuthenticationToken>
  nameWithType.vb: AzureServiceBus(Of TAuthenticationToken)
  fullName.vb: Cqrs.Azure.ServiceBus.AzureServiceBus(Of TAuthenticationToken)
  name.vb: AzureServiceBus(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Azure.ServiceBus.AzureServiceBus`1
    name: AzureServiceBus
    nameWithType: AzureServiceBus
    fullName: Cqrs.Azure.ServiceBus.AzureServiceBus
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Azure.ServiceBus.AzureServiceBus`1
    name: AzureServiceBus
    nameWithType: AzureServiceBus
    fullName: Cqrs.Azure.ServiceBus.AzureServiceBus
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.ServiceBus.AzureCommandBus{{TAuthenticationToken}}
  commentId: T:Cqrs.Azure.ServiceBus.AzureCommandBus{`0}
  parent: Cqrs.Azure.ServiceBus
  definition: Cqrs.Azure.ServiceBus.AzureCommandBus`1
  name: AzureCommandBus<TAuthenticationToken>
  nameWithType: AzureCommandBus<TAuthenticationToken>
  fullName: Cqrs.Azure.ServiceBus.AzureCommandBus<TAuthenticationToken>
  nameWithType.vb: AzureCommandBus(Of TAuthenticationToken)
  fullName.vb: Cqrs.Azure.ServiceBus.AzureCommandBus(Of TAuthenticationToken)
  name.vb: AzureCommandBus(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Azure.ServiceBus.AzureCommandBus`1
    name: AzureCommandBus
    nameWithType: AzureCommandBus
    fullName: Cqrs.Azure.ServiceBus.AzureCommandBus
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Azure.ServiceBus.AzureCommandBus`1
    name: AzureCommandBus
    nameWithType: AzureCommandBus
    fullName: Cqrs.Azure.ServiceBus.AzureCommandBus
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Commands.IPublishAndWaitCommandPublisher{{TAuthenticationToken}}
  commentId: T:Cqrs.Commands.IPublishAndWaitCommandPublisher{`0}
  parent: Cqrs.Commands
  definition: Cqrs.Commands.IPublishAndWaitCommandPublisher`1
  name: IPublishAndWaitCommandPublisher<TAuthenticationToken>
  nameWithType: IPublishAndWaitCommandPublisher<TAuthenticationToken>
  fullName: Cqrs.Commands.IPublishAndWaitCommandPublisher<TAuthenticationToken>
  nameWithType.vb: IPublishAndWaitCommandPublisher(Of TAuthenticationToken)
  fullName.vb: Cqrs.Commands.IPublishAndWaitCommandPublisher(Of TAuthenticationToken)
  name.vb: IPublishAndWaitCommandPublisher(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Commands.IPublishAndWaitCommandPublisher`1
    name: IPublishAndWaitCommandPublisher
    nameWithType: IPublishAndWaitCommandPublisher
    fullName: Cqrs.Commands.IPublishAndWaitCommandPublisher
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Commands.IPublishAndWaitCommandPublisher`1
    name: IPublishAndWaitCommandPublisher
    nameWithType: IPublishAndWaitCommandPublisher
    fullName: Cqrs.Commands.IPublishAndWaitCommandPublisher
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Commands.ICommandPublisher{{TAuthenticationToken}}
  commentId: T:Cqrs.Commands.ICommandPublisher{`0}
  parent: Cqrs.Commands
  definition: Cqrs.Commands.ICommandPublisher`1
  name: ICommandPublisher<TAuthenticationToken>
  nameWithType: ICommandPublisher<TAuthenticationToken>
  fullName: Cqrs.Commands.ICommandPublisher<TAuthenticationToken>
  nameWithType.vb: ICommandPublisher(Of TAuthenticationToken)
  fullName.vb: Cqrs.Commands.ICommandPublisher(Of TAuthenticationToken)
  name.vb: ICommandPublisher(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Commands.ICommandPublisher`1
    name: ICommandPublisher
    nameWithType: ICommandPublisher
    fullName: Cqrs.Commands.ICommandPublisher
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Commands.ICommandPublisher`1
    name: ICommandPublisher
    nameWithType: ICommandPublisher
    fullName: Cqrs.Commands.ICommandPublisher
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.ServiceBus.AzureCommandBus{{TAuthenticationToken}}.MessageBusConnectionStringConfigurationKey
  commentId: P:Cqrs.Azure.ServiceBus.AzureCommandBus{`0}.MessageBusConnectionStringConfigurationKey
  parent: Cqrs.Azure.ServiceBus.AzureCommandBus{{TAuthenticationToken}}
  definition: Cqrs.Azure.ServiceBus.AzureCommandBus`1.MessageBusConnectionStringConfigurationKey
  name: MessageBusConnectionStringConfigurationKey
  nameWithType: AzureCommandBus<TAuthenticationToken>.MessageBusConnectionStringConfigurationKey
  fullName: Cqrs.Azure.ServiceBus.AzureCommandBus<TAuthenticationToken>.MessageBusConnectionStringConfigurationKey
  nameWithType.vb: AzureCommandBus(Of TAuthenticationToken).MessageBusConnectionStringConfigurationKey
  fullName.vb: Cqrs.Azure.ServiceBus.AzureCommandBus(Of TAuthenticationToken).MessageBusConnectionStringConfigurationKey
- uid: Cqrs.Azure.ServiceBus.AzureCommandBus{{TAuthenticationToken}}.PrivateTopicNameConfigurationKey
  commentId: P:Cqrs.Azure.ServiceBus.AzureCommandBus{`0}.PrivateTopicNameConfigurationKey
  parent: Cqrs.Azure.ServiceBus.AzureCommandBus{{TAuthenticationToken}}
  definition: Cqrs.Azure.ServiceBus.AzureCommandBus`1.PrivateTopicNameConfigurationKey
  name: PrivateTopicNameConfigurationKey
  nameWithType: AzureCommandBus<TAuthenticationToken>.PrivateTopicNameConfigurationKey
  fullName: Cqrs.Azure.ServiceBus.AzureCommandBus<TAuthenticationToken>.PrivateTopicNameConfigurationKey
  nameWithType.vb: AzureCommandBus(Of TAuthenticationToken).PrivateTopicNameConfigurationKey
  fullName.vb: Cqrs.Azure.ServiceBus.AzureCommandBus(Of TAuthenticationToken).PrivateTopicNameConfigurationKey
- uid: Cqrs.Azure.ServiceBus.AzureCommandBus{{TAuthenticationToken}}.PublicTopicNameConfigurationKey
  commentId: P:Cqrs.Azure.ServiceBus.AzureCommandBus{`0}.PublicTopicNameConfigurationKey
  parent: Cqrs.Azure.ServiceBus.AzureCommandBus{{TAuthenticationToken}}
  definition: Cqrs.Azure.ServiceBus.AzureCommandBus`1.PublicTopicNameConfigurationKey
  name: PublicTopicNameConfigurationKey
  nameWithType: AzureCommandBus<TAuthenticationToken>.PublicTopicNameConfigurationKey
  fullName: Cqrs.Azure.ServiceBus.AzureCommandBus<TAuthenticationToken>.PublicTopicNameConfigurationKey
  nameWithType.vb: AzureCommandBus(Of TAuthenticationToken).PublicTopicNameConfigurationKey
  fullName.vb: Cqrs.Azure.ServiceBus.AzureCommandBus(Of TAuthenticationToken).PublicTopicNameConfigurationKey
- uid: Cqrs.Azure.ServiceBus.AzureCommandBus{{TAuthenticationToken}}.PrivateTopicSubscriptionNameConfigurationKey
  commentId: P:Cqrs.Azure.ServiceBus.AzureCommandBus{`0}.PrivateTopicSubscriptionNameConfigurationKey
  parent: Cqrs.Azure.ServiceBus.AzureCommandBus{{TAuthenticationToken}}
  definition: Cqrs.Azure.ServiceBus.AzureCommandBus`1.PrivateTopicSubscriptionNameConfigurationKey
  name: PrivateTopicSubscriptionNameConfigurationKey
  nameWithType: AzureCommandBus<TAuthenticationToken>.PrivateTopicSubscriptionNameConfigurationKey
  fullName: Cqrs.Azure.ServiceBus.AzureCommandBus<TAuthenticationToken>.PrivateTopicSubscriptionNameConfigurationKey
  nameWithType.vb: AzureCommandBus(Of TAuthenticationToken).PrivateTopicSubscriptionNameConfigurationKey
  fullName.vb: Cqrs.Azure.ServiceBus.AzureCommandBus(Of TAuthenticationToken).PrivateTopicSubscriptionNameConfigurationKey
- uid: Cqrs.Azure.ServiceBus.AzureCommandBus{{TAuthenticationToken}}.PublicTopicSubscriptionNameConfigurationKey
  commentId: P:Cqrs.Azure.ServiceBus.AzureCommandBus{`0}.PublicTopicSubscriptionNameConfigurationKey
  parent: Cqrs.Azure.ServiceBus.AzureCommandBus{{TAuthenticationToken}}
  definition: Cqrs.Azure.ServiceBus.AzureCommandBus`1.PublicTopicSubscriptionNameConfigurationKey
  name: PublicTopicSubscriptionNameConfigurationKey
  nameWithType: AzureCommandBus<TAuthenticationToken>.PublicTopicSubscriptionNameConfigurationKey
  fullName: Cqrs.Azure.ServiceBus.AzureCommandBus<TAuthenticationToken>.PublicTopicSubscriptionNameConfigurationKey
  nameWithType.vb: AzureCommandBus(Of TAuthenticationToken).PublicTopicSubscriptionNameConfigurationKey
  fullName.vb: Cqrs.Azure.ServiceBus.AzureCommandBus(Of TAuthenticationToken).PublicTopicSubscriptionNameConfigurationKey
- uid: Cqrs.Azure.ServiceBus.AzureCommandBus{{TAuthenticationToken}}.DefaultPrivateTopicName
  commentId: P:Cqrs.Azure.ServiceBus.AzureCommandBus{`0}.DefaultPrivateTopicName
  parent: Cqrs.Azure.ServiceBus.AzureCommandBus{{TAuthenticationToken}}
  definition: Cqrs.Azure.ServiceBus.AzureCommandBus`1.DefaultPrivateTopicName
  name: DefaultPrivateTopicName
  nameWithType: AzureCommandBus<TAuthenticationToken>.DefaultPrivateTopicName
  fullName: Cqrs.Azure.ServiceBus.AzureCommandBus<TAuthenticationToken>.DefaultPrivateTopicName
  nameWithType.vb: AzureCommandBus(Of TAuthenticationToken).DefaultPrivateTopicName
  fullName.vb: Cqrs.Azure.ServiceBus.AzureCommandBus(Of TAuthenticationToken).DefaultPrivateTopicName
- uid: Cqrs.Azure.ServiceBus.AzureCommandBus{{TAuthenticationToken}}.DefaultPublicTopicName
  commentId: P:Cqrs.Azure.ServiceBus.AzureCommandBus{`0}.DefaultPublicTopicName
  parent: Cqrs.Azure.ServiceBus.AzureCommandBus{{TAuthenticationToken}}
  definition: Cqrs.Azure.ServiceBus.AzureCommandBus`1.DefaultPublicTopicName
  name: DefaultPublicTopicName
  nameWithType: AzureCommandBus<TAuthenticationToken>.DefaultPublicTopicName
  fullName: Cqrs.Azure.ServiceBus.AzureCommandBus<TAuthenticationToken>.DefaultPublicTopicName
  nameWithType.vb: AzureCommandBus(Of TAuthenticationToken).DefaultPublicTopicName
  fullName.vb: Cqrs.Azure.ServiceBus.AzureCommandBus(Of TAuthenticationToken).DefaultPublicTopicName
- uid: Cqrs.Azure.ServiceBus.AzureCommandBus{{TAuthenticationToken}}.ThrowExceptionOnReceiverMessageLockLostExceptionDuringCompleteConfigurationKey
  commentId: P:Cqrs.Azure.ServiceBus.AzureCommandBus{`0}.ThrowExceptionOnReceiverMessageLockLostExceptionDuringCompleteConfigurationKey
  parent: Cqrs.Azure.ServiceBus.AzureCommandBus{{TAuthenticationToken}}
  definition: Cqrs.Azure.ServiceBus.AzureCommandBus`1.ThrowExceptionOnReceiverMessageLockLostExceptionDuringCompleteConfigurationKey
  name: ThrowExceptionOnReceiverMessageLockLostExceptionDuringCompleteConfigurationKey
  nameWithType: AzureCommandBus<TAuthenticationToken>.ThrowExceptionOnReceiverMessageLockLostExceptionDuringCompleteConfigurationKey
  fullName: Cqrs.Azure.ServiceBus.AzureCommandBus<TAuthenticationToken>.ThrowExceptionOnReceiverMessageLockLostExceptionDuringCompleteConfigurationKey
  nameWithType.vb: AzureCommandBus(Of TAuthenticationToken).ThrowExceptionOnReceiverMessageLockLostExceptionDuringCompleteConfigurationKey
  fullName.vb: Cqrs.Azure.ServiceBus.AzureCommandBus(Of TAuthenticationToken).ThrowExceptionOnReceiverMessageLockLostExceptionDuringCompleteConfigurationKey
- uid: Cqrs.Azure.ServiceBus.AzureServiceBus{{TAuthenticationToken}}.PrivateServiceBusPublisher
  commentId: P:Cqrs.Azure.ServiceBus.AzureServiceBus{`0}.PrivateServiceBusPublisher
  parent: Cqrs.Azure.ServiceBus.AzureServiceBus{{TAuthenticationToken}}
  definition: Cqrs.Azure.ServiceBus.AzureServiceBus`1.PrivateServiceBusPublisher
  name: PrivateServiceBusPublisher
  nameWithType: AzureServiceBus<TAuthenticationToken>.PrivateServiceBusPublisher
  fullName: Cqrs.Azure.ServiceBus.AzureServiceBus<TAuthenticationToken>.PrivateServiceBusPublisher
  nameWithType.vb: AzureServiceBus(Of TAuthenticationToken).PrivateServiceBusPublisher
  fullName.vb: Cqrs.Azure.ServiceBus.AzureServiceBus(Of TAuthenticationToken).PrivateServiceBusPublisher
- uid: Cqrs.Azure.ServiceBus.AzureServiceBus{{TAuthenticationToken}}.PublicServiceBusPublisher
  commentId: P:Cqrs.Azure.ServiceBus.AzureServiceBus{`0}.PublicServiceBusPublisher
  parent: Cqrs.Azure.ServiceBus.AzureServiceBus{{TAuthenticationToken}}
  definition: Cqrs.Azure.ServiceBus.AzureServiceBus`1.PublicServiceBusPublisher
  name: PublicServiceBusPublisher
  nameWithType: AzureServiceBus<TAuthenticationToken>.PublicServiceBusPublisher
  fullName: Cqrs.Azure.ServiceBus.AzureServiceBus<TAuthenticationToken>.PublicServiceBusPublisher
  nameWithType.vb: AzureServiceBus(Of TAuthenticationToken).PublicServiceBusPublisher
  fullName.vb: Cqrs.Azure.ServiceBus.AzureServiceBus(Of TAuthenticationToken).PublicServiceBusPublisher
- uid: Cqrs.Azure.ServiceBus.AzureServiceBus{{TAuthenticationToken}}.PrivateServiceBusReceivers
  commentId: P:Cqrs.Azure.ServiceBus.AzureServiceBus{`0}.PrivateServiceBusReceivers
  parent: Cqrs.Azure.ServiceBus.AzureServiceBus{{TAuthenticationToken}}
  definition: Cqrs.Azure.ServiceBus.AzureServiceBus`1.PrivateServiceBusReceivers
  name: PrivateServiceBusReceivers
  nameWithType: AzureServiceBus<TAuthenticationToken>.PrivateServiceBusReceivers
  fullName: Cqrs.Azure.ServiceBus.AzureServiceBus<TAuthenticationToken>.PrivateServiceBusReceivers
  nameWithType.vb: AzureServiceBus(Of TAuthenticationToken).PrivateServiceBusReceivers
  fullName.vb: Cqrs.Azure.ServiceBus.AzureServiceBus(Of TAuthenticationToken).PrivateServiceBusReceivers
- uid: Cqrs.Azure.ServiceBus.AzureServiceBus{{TAuthenticationToken}}.PublicServiceBusReceivers
  commentId: P:Cqrs.Azure.ServiceBus.AzureServiceBus{`0}.PublicServiceBusReceivers
  parent: Cqrs.Azure.ServiceBus.AzureServiceBus{{TAuthenticationToken}}
  definition: Cqrs.Azure.ServiceBus.AzureServiceBus`1.PublicServiceBusReceivers
  name: PublicServiceBusReceivers
  nameWithType: AzureServiceBus<TAuthenticationToken>.PublicServiceBusReceivers
  fullName: Cqrs.Azure.ServiceBus.AzureServiceBus<TAuthenticationToken>.PublicServiceBusReceivers
  nameWithType.vb: AzureServiceBus(Of TAuthenticationToken).PublicServiceBusReceivers
  fullName.vb: Cqrs.Azure.ServiceBus.AzureServiceBus(Of TAuthenticationToken).PublicServiceBusReceivers
- uid: Cqrs.Azure.ServiceBus.AzureServiceBus{{TAuthenticationToken}}.PrivateTopicName
  commentId: P:Cqrs.Azure.ServiceBus.AzureServiceBus{`0}.PrivateTopicName
  parent: Cqrs.Azure.ServiceBus.AzureServiceBus{{TAuthenticationToken}}
  definition: Cqrs.Azure.ServiceBus.AzureServiceBus`1.PrivateTopicName
  name: PrivateTopicName
  nameWithType: AzureServiceBus<TAuthenticationToken>.PrivateTopicName
  fullName: Cqrs.Azure.ServiceBus.AzureServiceBus<TAuthenticationToken>.PrivateTopicName
  nameWithType.vb: AzureServiceBus(Of TAuthenticationToken).PrivateTopicName
  fullName.vb: Cqrs.Azure.ServiceBus.AzureServiceBus(Of TAuthenticationToken).PrivateTopicName
- uid: Cqrs.Azure.ServiceBus.AzureServiceBus{{TAuthenticationToken}}.PublicTopicName
  commentId: P:Cqrs.Azure.ServiceBus.AzureServiceBus{`0}.PublicTopicName
  parent: Cqrs.Azure.ServiceBus.AzureServiceBus{{TAuthenticationToken}}
  definition: Cqrs.Azure.ServiceBus.AzureServiceBus`1.PublicTopicName
  name: PublicTopicName
  nameWithType: AzureServiceBus<TAuthenticationToken>.PublicTopicName
  fullName: Cqrs.Azure.ServiceBus.AzureServiceBus<TAuthenticationToken>.PublicTopicName
  nameWithType.vb: AzureServiceBus(Of TAuthenticationToken).PublicTopicName
  fullName.vb: Cqrs.Azure.ServiceBus.AzureServiceBus(Of TAuthenticationToken).PublicTopicName
- uid: Cqrs.Azure.ServiceBus.AzureServiceBus{{TAuthenticationToken}}.PrivateTopicSubscriptionName
  commentId: P:Cqrs.Azure.ServiceBus.AzureServiceBus{`0}.PrivateTopicSubscriptionName
  parent: Cqrs.Azure.ServiceBus.AzureServiceBus{{TAuthenticationToken}}
  definition: Cqrs.Azure.ServiceBus.AzureServiceBus`1.PrivateTopicSubscriptionName
  name: PrivateTopicSubscriptionName
  nameWithType: AzureServiceBus<TAuthenticationToken>.PrivateTopicSubscriptionName
  fullName: Cqrs.Azure.ServiceBus.AzureServiceBus<TAuthenticationToken>.PrivateTopicSubscriptionName
  nameWithType.vb: AzureServiceBus(Of TAuthenticationToken).PrivateTopicSubscriptionName
  fullName.vb: Cqrs.Azure.ServiceBus.AzureServiceBus(Of TAuthenticationToken).PrivateTopicSubscriptionName
- uid: Cqrs.Azure.ServiceBus.AzureServiceBus{{TAuthenticationToken}}.PublicTopicSubscriptionName
  commentId: P:Cqrs.Azure.ServiceBus.AzureServiceBus{`0}.PublicTopicSubscriptionName
  parent: Cqrs.Azure.ServiceBus.AzureServiceBus{{TAuthenticationToken}}
  definition: Cqrs.Azure.ServiceBus.AzureServiceBus`1.PublicTopicSubscriptionName
  name: PublicTopicSubscriptionName
  nameWithType: AzureServiceBus<TAuthenticationToken>.PublicTopicSubscriptionName
  fullName: Cqrs.Azure.ServiceBus.AzureServiceBus<TAuthenticationToken>.PublicTopicSubscriptionName
  nameWithType.vb: AzureServiceBus(Of TAuthenticationToken).PublicTopicSubscriptionName
  fullName.vb: Cqrs.Azure.ServiceBus.AzureServiceBus(Of TAuthenticationToken).PublicTopicSubscriptionName
- uid: Cqrs.Azure.ServiceBus.AzureServiceBus{{TAuthenticationToken}}.ThrowExceptionOnReceiverMessageLockLostExceptionDuringComplete
  commentId: P:Cqrs.Azure.ServiceBus.AzureServiceBus{`0}.ThrowExceptionOnReceiverMessageLockLostExceptionDuringComplete
  parent: Cqrs.Azure.ServiceBus.AzureServiceBus{{TAuthenticationToken}}
  definition: Cqrs.Azure.ServiceBus.AzureServiceBus`1.ThrowExceptionOnReceiverMessageLockLostExceptionDuringComplete
  name: ThrowExceptionOnReceiverMessageLockLostExceptionDuringComplete
  nameWithType: AzureServiceBus<TAuthenticationToken>.ThrowExceptionOnReceiverMessageLockLostExceptionDuringComplete
  fullName: Cqrs.Azure.ServiceBus.AzureServiceBus<TAuthenticationToken>.ThrowExceptionOnReceiverMessageLockLostExceptionDuringComplete
  nameWithType.vb: AzureServiceBus(Of TAuthenticationToken).ThrowExceptionOnReceiverMessageLockLostExceptionDuringComplete
  fullName.vb: Cqrs.Azure.ServiceBus.AzureServiceBus(Of TAuthenticationToken).ThrowExceptionOnReceiverMessageLockLostExceptionDuringComplete
- uid: Cqrs.Azure.ServiceBus.AzureServiceBus{{TAuthenticationToken}}.DefaultPrivateTopicSubscriptionName
  commentId: F:Cqrs.Azure.ServiceBus.AzureServiceBus{`0}.DefaultPrivateTopicSubscriptionName
  parent: Cqrs.Azure.ServiceBus.AzureServiceBus{{TAuthenticationToken}}
  definition: Cqrs.Azure.ServiceBus.AzureServiceBus`1.DefaultPrivateTopicSubscriptionName
  name: DefaultPrivateTopicSubscriptionName
  nameWithType: AzureServiceBus<TAuthenticationToken>.DefaultPrivateTopicSubscriptionName
  fullName: Cqrs.Azure.ServiceBus.AzureServiceBus<TAuthenticationToken>.DefaultPrivateTopicSubscriptionName
  nameWithType.vb: AzureServiceBus(Of TAuthenticationToken).DefaultPrivateTopicSubscriptionName
  fullName.vb: Cqrs.Azure.ServiceBus.AzureServiceBus(Of TAuthenticationToken).DefaultPrivateTopicSubscriptionName
- uid: Cqrs.Azure.ServiceBus.AzureServiceBus{{TAuthenticationToken}}.DefaultPublicTopicSubscriptionName
  commentId: F:Cqrs.Azure.ServiceBus.AzureServiceBus{`0}.DefaultPublicTopicSubscriptionName
  parent: Cqrs.Azure.ServiceBus.AzureServiceBus{{TAuthenticationToken}}
  definition: Cqrs.Azure.ServiceBus.AzureServiceBus`1.DefaultPublicTopicSubscriptionName
  name: DefaultPublicTopicSubscriptionName
  nameWithType: AzureServiceBus<TAuthenticationToken>.DefaultPublicTopicSubscriptionName
  fullName: Cqrs.Azure.ServiceBus.AzureServiceBus<TAuthenticationToken>.DefaultPublicTopicSubscriptionName
  nameWithType.vb: AzureServiceBus(Of TAuthenticationToken).DefaultPublicTopicSubscriptionName
  fullName.vb: Cqrs.Azure.ServiceBus.AzureServiceBus(Of TAuthenticationToken).DefaultPublicTopicSubscriptionName
- uid: Cqrs.Azure.ServiceBus.AzureServiceBus{{TAuthenticationToken}}.ReceiverMessageHandler
  commentId: P:Cqrs.Azure.ServiceBus.AzureServiceBus{`0}.ReceiverMessageHandler
  parent: Cqrs.Azure.ServiceBus.AzureServiceBus{{TAuthenticationToken}}
  definition: Cqrs.Azure.ServiceBus.AzureServiceBus`1.ReceiverMessageHandler
  name: ReceiverMessageHandler
  nameWithType: AzureServiceBus<TAuthenticationToken>.ReceiverMessageHandler
  fullName: Cqrs.Azure.ServiceBus.AzureServiceBus<TAuthenticationToken>.ReceiverMessageHandler
  nameWithType.vb: AzureServiceBus(Of TAuthenticationToken).ReceiverMessageHandler
  fullName.vb: Cqrs.Azure.ServiceBus.AzureServiceBus(Of TAuthenticationToken).ReceiverMessageHandler
- uid: Cqrs.Azure.ServiceBus.AzureServiceBus{{TAuthenticationToken}}.ReceiverMessageHandlerOptions
  commentId: P:Cqrs.Azure.ServiceBus.AzureServiceBus{`0}.ReceiverMessageHandlerOptions
  parent: Cqrs.Azure.ServiceBus.AzureServiceBus{{TAuthenticationToken}}
  definition: Cqrs.Azure.ServiceBus.AzureServiceBus`1.ReceiverMessageHandlerOptions
  name: ReceiverMessageHandlerOptions
  nameWithType: AzureServiceBus<TAuthenticationToken>.ReceiverMessageHandlerOptions
  fullName: Cqrs.Azure.ServiceBus.AzureServiceBus<TAuthenticationToken>.ReceiverMessageHandlerOptions
  nameWithType.vb: AzureServiceBus(Of TAuthenticationToken).ReceiverMessageHandlerOptions
  fullName.vb: Cqrs.Azure.ServiceBus.AzureServiceBus(Of TAuthenticationToken).ReceiverMessageHandlerOptions
- uid: Cqrs.Azure.ServiceBus.AzureServiceBus{{TAuthenticationToken}}.BusHelper
  commentId: P:Cqrs.Azure.ServiceBus.AzureServiceBus{`0}.BusHelper
  parent: Cqrs.Azure.ServiceBus.AzureServiceBus{{TAuthenticationToken}}
  definition: Cqrs.Azure.ServiceBus.AzureServiceBus`1.BusHelper
  name: BusHelper
  nameWithType: AzureServiceBus<TAuthenticationToken>.BusHelper
  fullName: Cqrs.Azure.ServiceBus.AzureServiceBus<TAuthenticationToken>.BusHelper
  nameWithType.vb: AzureServiceBus(Of TAuthenticationToken).BusHelper
  fullName.vb: Cqrs.Azure.ServiceBus.AzureServiceBus(Of TAuthenticationToken).BusHelper
- uid: Cqrs.Azure.ServiceBus.AzureServiceBus{{TAuthenticationToken}}.AzureBusHelper
  commentId: P:Cqrs.Azure.ServiceBus.AzureServiceBus{`0}.AzureBusHelper
  parent: Cqrs.Azure.ServiceBus.AzureServiceBus{{TAuthenticationToken}}
  definition: Cqrs.Azure.ServiceBus.AzureServiceBus`1.AzureBusHelper
  name: AzureBusHelper
  nameWithType: AzureServiceBus<TAuthenticationToken>.AzureBusHelper
  fullName: Cqrs.Azure.ServiceBus.AzureServiceBus<TAuthenticationToken>.AzureBusHelper
  nameWithType.vb: AzureServiceBus(Of TAuthenticationToken).AzureBusHelper
  fullName.vb: Cqrs.Azure.ServiceBus.AzureServiceBus(Of TAuthenticationToken).AzureBusHelper
- uid: Cqrs.Azure.ServiceBus.AzureServiceBus{{TAuthenticationToken}}.TelemetryHelper
  commentId: P:Cqrs.Azure.ServiceBus.AzureServiceBus{`0}.TelemetryHelper
  parent: Cqrs.Azure.ServiceBus.AzureServiceBus{{TAuthenticationToken}}
  definition: Cqrs.Azure.ServiceBus.AzureServiceBus`1.TelemetryHelper
  name: TelemetryHelper
  nameWithType: AzureServiceBus<TAuthenticationToken>.TelemetryHelper
  fullName: Cqrs.Azure.ServiceBus.AzureServiceBus<TAuthenticationToken>.TelemetryHelper
  nameWithType.vb: AzureServiceBus(Of TAuthenticationToken).TelemetryHelper
  fullName.vb: Cqrs.Azure.ServiceBus.AzureServiceBus(Of TAuthenticationToken).TelemetryHelper
- uid: Cqrs.Azure.ServiceBus.AzureServiceBus{{TAuthenticationToken}}.GetConnectionString
  commentId: M:Cqrs.Azure.ServiceBus.AzureServiceBus{`0}.GetConnectionString
  parent: Cqrs.Azure.ServiceBus.AzureServiceBus{{TAuthenticationToken}}
  definition: Cqrs.Azure.ServiceBus.AzureServiceBus`1.GetConnectionString
  name: GetConnectionString()
  nameWithType: AzureServiceBus<TAuthenticationToken>.GetConnectionString()
  fullName: Cqrs.Azure.ServiceBus.AzureServiceBus<TAuthenticationToken>.GetConnectionString()
  nameWithType.vb: AzureServiceBus(Of TAuthenticationToken).GetConnectionString()
  fullName.vb: Cqrs.Azure.ServiceBus.AzureServiceBus(Of TAuthenticationToken).GetConnectionString()
  spec.csharp:
  - uid: Cqrs.Azure.ServiceBus.AzureServiceBus`1.GetConnectionString
    name: GetConnectionString
    nameWithType: AzureServiceBus<TAuthenticationToken>.GetConnectionString
    fullName: Cqrs.Azure.ServiceBus.AzureServiceBus<TAuthenticationToken>.GetConnectionString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.ServiceBus.AzureServiceBus`1.GetConnectionString
    name: GetConnectionString
    nameWithType: AzureServiceBus(Of TAuthenticationToken).GetConnectionString
    fullName: Cqrs.Azure.ServiceBus.AzureServiceBus(Of TAuthenticationToken).GetConnectionString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.ServiceBus.AzureServiceBus{{TAuthenticationToken}}.InstantiatePublishing
  commentId: M:Cqrs.Azure.ServiceBus.AzureServiceBus{`0}.InstantiatePublishing
  parent: Cqrs.Azure.ServiceBus.AzureServiceBus{{TAuthenticationToken}}
  definition: Cqrs.Azure.ServiceBus.AzureServiceBus`1.InstantiatePublishing
  name: InstantiatePublishing()
  nameWithType: AzureServiceBus<TAuthenticationToken>.InstantiatePublishing()
  fullName: Cqrs.Azure.ServiceBus.AzureServiceBus<TAuthenticationToken>.InstantiatePublishing()
  nameWithType.vb: AzureServiceBus(Of TAuthenticationToken).InstantiatePublishing()
  fullName.vb: Cqrs.Azure.ServiceBus.AzureServiceBus(Of TAuthenticationToken).InstantiatePublishing()
  spec.csharp:
  - uid: Cqrs.Azure.ServiceBus.AzureServiceBus`1.InstantiatePublishing
    name: InstantiatePublishing
    nameWithType: AzureServiceBus<TAuthenticationToken>.InstantiatePublishing
    fullName: Cqrs.Azure.ServiceBus.AzureServiceBus<TAuthenticationToken>.InstantiatePublishing
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.ServiceBus.AzureServiceBus`1.InstantiatePublishing
    name: InstantiatePublishing
    nameWithType: AzureServiceBus(Of TAuthenticationToken).InstantiatePublishing
    fullName: Cqrs.Azure.ServiceBus.AzureServiceBus(Of TAuthenticationToken).InstantiatePublishing
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.ServiceBus.AzureServiceBus{{TAuthenticationToken}}.InstantiateReceiving
  commentId: M:Cqrs.Azure.ServiceBus.AzureServiceBus{`0}.InstantiateReceiving
  parent: Cqrs.Azure.ServiceBus.AzureServiceBus{{TAuthenticationToken}}
  definition: Cqrs.Azure.ServiceBus.AzureServiceBus`1.InstantiateReceiving
  name: InstantiateReceiving()
  nameWithType: AzureServiceBus<TAuthenticationToken>.InstantiateReceiving()
  fullName: Cqrs.Azure.ServiceBus.AzureServiceBus<TAuthenticationToken>.InstantiateReceiving()
  nameWithType.vb: AzureServiceBus(Of TAuthenticationToken).InstantiateReceiving()
  fullName.vb: Cqrs.Azure.ServiceBus.AzureServiceBus(Of TAuthenticationToken).InstantiateReceiving()
  spec.csharp:
  - uid: Cqrs.Azure.ServiceBus.AzureServiceBus`1.InstantiateReceiving
    name: InstantiateReceiving
    nameWithType: AzureServiceBus<TAuthenticationToken>.InstantiateReceiving
    fullName: Cqrs.Azure.ServiceBus.AzureServiceBus<TAuthenticationToken>.InstantiateReceiving
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.ServiceBus.AzureServiceBus`1.InstantiateReceiving
    name: InstantiateReceiving
    nameWithType: AzureServiceBus(Of TAuthenticationToken).InstantiateReceiving
    fullName: Cqrs.Azure.ServiceBus.AzureServiceBus(Of TAuthenticationToken).InstantiateReceiving
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.ServiceBus.AzureServiceBus{{TAuthenticationToken}}.InstantiateReceiving(NamespaceManager,IDictionary{System.Int32,SubscriptionClient},System.String,System.String)
  commentId: M:Cqrs.Azure.ServiceBus.AzureServiceBus{`0}.InstantiateReceiving(NamespaceManager,IDictionary{System.Int32,SubscriptionClient},System.String,System.String)
  parent: Cqrs.Azure.ServiceBus.AzureServiceBus{{TAuthenticationToken}}
  definition: Cqrs.Azure.ServiceBus.AzureServiceBus`1.InstantiateReceiving(NamespaceManager,IDictionary{System.Int32,SubscriptionClient},System.String,System.String)
  name: InstantiateReceiving(NamespaceManager, IDictionary<Int32, SubscriptionClient>, String, String)
  nameWithType: AzureServiceBus<TAuthenticationToken>.InstantiateReceiving(NamespaceManager, IDictionary<Int32, SubscriptionClient>, String, String)
  fullName: Cqrs.Azure.ServiceBus.AzureServiceBus<TAuthenticationToken>.InstantiateReceiving(NamespaceManager, IDictionary<System.Int32, SubscriptionClient>, System.String, System.String)
  nameWithType.vb: AzureServiceBus(Of TAuthenticationToken).InstantiateReceiving(NamespaceManager, IDictionary(Of Int32, SubscriptionClient), String, String)
  fullName.vb: Cqrs.Azure.ServiceBus.AzureServiceBus(Of TAuthenticationToken).InstantiateReceiving(NamespaceManager, IDictionary(Of System.Int32, SubscriptionClient), System.String, System.String)
  name.vb: InstantiateReceiving(NamespaceManager, IDictionary(Of Int32, SubscriptionClient), String, String)
  spec.csharp:
  - uid: Cqrs.Azure.ServiceBus.AzureServiceBus`1.InstantiateReceiving(NamespaceManager,IDictionary{System.Int32,SubscriptionClient},System.String,System.String)
    name: InstantiateReceiving
    nameWithType: AzureServiceBus<TAuthenticationToken>.InstantiateReceiving
    fullName: Cqrs.Azure.ServiceBus.AzureServiceBus<TAuthenticationToken>.InstantiateReceiving
  - name: (
    nameWithType: (
    fullName: (
  - uid: NamespaceManager
    name: NamespaceManager
    nameWithType: NamespaceManager
    fullName: NamespaceManager
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SubscriptionClient
    name: SubscriptionClient
    nameWithType: SubscriptionClient
    fullName: SubscriptionClient
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.ServiceBus.AzureServiceBus`1.InstantiateReceiving(NamespaceManager,IDictionary{System.Int32,SubscriptionClient},System.String,System.String)
    name: InstantiateReceiving
    nameWithType: AzureServiceBus(Of TAuthenticationToken).InstantiateReceiving
    fullName: Cqrs.Azure.ServiceBus.AzureServiceBus(Of TAuthenticationToken).InstantiateReceiving
  - name: (
    nameWithType: (
    fullName: (
  - uid: NamespaceManager
    name: NamespaceManager
    nameWithType: NamespaceManager
    fullName: NamespaceManager
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SubscriptionClient
    name: SubscriptionClient
    nameWithType: SubscriptionClient
    fullName: SubscriptionClient
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.ServiceBus.AzureServiceBus{{TAuthenticationToken}}.CheckPrivateTopicExists(NamespaceManager)
  commentId: M:Cqrs.Azure.ServiceBus.AzureServiceBus{`0}.CheckPrivateTopicExists(NamespaceManager)
  parent: Cqrs.Azure.ServiceBus.AzureServiceBus{{TAuthenticationToken}}
  definition: Cqrs.Azure.ServiceBus.AzureServiceBus`1.CheckPrivateTopicExists(NamespaceManager)
  name: CheckPrivateTopicExists(NamespaceManager)
  nameWithType: AzureServiceBus<TAuthenticationToken>.CheckPrivateTopicExists(NamespaceManager)
  fullName: Cqrs.Azure.ServiceBus.AzureServiceBus<TAuthenticationToken>.CheckPrivateTopicExists(NamespaceManager)
  nameWithType.vb: AzureServiceBus(Of TAuthenticationToken).CheckPrivateTopicExists(NamespaceManager)
  fullName.vb: Cqrs.Azure.ServiceBus.AzureServiceBus(Of TAuthenticationToken).CheckPrivateTopicExists(NamespaceManager)
  spec.csharp:
  - uid: Cqrs.Azure.ServiceBus.AzureServiceBus`1.CheckPrivateTopicExists(NamespaceManager)
    name: CheckPrivateTopicExists
    nameWithType: AzureServiceBus<TAuthenticationToken>.CheckPrivateTopicExists
    fullName: Cqrs.Azure.ServiceBus.AzureServiceBus<TAuthenticationToken>.CheckPrivateTopicExists
  - name: (
    nameWithType: (
    fullName: (
  - uid: NamespaceManager
    name: NamespaceManager
    nameWithType: NamespaceManager
    fullName: NamespaceManager
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.ServiceBus.AzureServiceBus`1.CheckPrivateTopicExists(NamespaceManager)
    name: CheckPrivateTopicExists
    nameWithType: AzureServiceBus(Of TAuthenticationToken).CheckPrivateTopicExists
    fullName: Cqrs.Azure.ServiceBus.AzureServiceBus(Of TAuthenticationToken).CheckPrivateTopicExists
  - name: (
    nameWithType: (
    fullName: (
  - uid: NamespaceManager
    name: NamespaceManager
    nameWithType: NamespaceManager
    fullName: NamespaceManager
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.ServiceBus.AzureServiceBus{{TAuthenticationToken}}.CheckPublicTopicExists(NamespaceManager)
  commentId: M:Cqrs.Azure.ServiceBus.AzureServiceBus{`0}.CheckPublicTopicExists(NamespaceManager)
  parent: Cqrs.Azure.ServiceBus.AzureServiceBus{{TAuthenticationToken}}
  definition: Cqrs.Azure.ServiceBus.AzureServiceBus`1.CheckPublicTopicExists(NamespaceManager)
  name: CheckPublicTopicExists(NamespaceManager)
  nameWithType: AzureServiceBus<TAuthenticationToken>.CheckPublicTopicExists(NamespaceManager)
  fullName: Cqrs.Azure.ServiceBus.AzureServiceBus<TAuthenticationToken>.CheckPublicTopicExists(NamespaceManager)
  nameWithType.vb: AzureServiceBus(Of TAuthenticationToken).CheckPublicTopicExists(NamespaceManager)
  fullName.vb: Cqrs.Azure.ServiceBus.AzureServiceBus(Of TAuthenticationToken).CheckPublicTopicExists(NamespaceManager)
  spec.csharp:
  - uid: Cqrs.Azure.ServiceBus.AzureServiceBus`1.CheckPublicTopicExists(NamespaceManager)
    name: CheckPublicTopicExists
    nameWithType: AzureServiceBus<TAuthenticationToken>.CheckPublicTopicExists
    fullName: Cqrs.Azure.ServiceBus.AzureServiceBus<TAuthenticationToken>.CheckPublicTopicExists
  - name: (
    nameWithType: (
    fullName: (
  - uid: NamespaceManager
    name: NamespaceManager
    nameWithType: NamespaceManager
    fullName: NamespaceManager
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.ServiceBus.AzureServiceBus`1.CheckPublicTopicExists(NamespaceManager)
    name: CheckPublicTopicExists
    nameWithType: AzureServiceBus(Of TAuthenticationToken).CheckPublicTopicExists
    fullName: Cqrs.Azure.ServiceBus.AzureServiceBus(Of TAuthenticationToken).CheckPublicTopicExists
  - name: (
    nameWithType: (
    fullName: (
  - uid: NamespaceManager
    name: NamespaceManager
    nameWithType: NamespaceManager
    fullName: NamespaceManager
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.ServiceBus.AzureServiceBus{{TAuthenticationToken}}.CheckTopicExists(NamespaceManager,System.String,System.String)
  commentId: M:Cqrs.Azure.ServiceBus.AzureServiceBus{`0}.CheckTopicExists(NamespaceManager,System.String,System.String)
  parent: Cqrs.Azure.ServiceBus.AzureServiceBus{{TAuthenticationToken}}
  definition: Cqrs.Azure.ServiceBus.AzureServiceBus`1.CheckTopicExists(NamespaceManager,System.String,System.String)
  name: CheckTopicExists(NamespaceManager, String, String)
  nameWithType: AzureServiceBus<TAuthenticationToken>.CheckTopicExists(NamespaceManager, String, String)
  fullName: Cqrs.Azure.ServiceBus.AzureServiceBus<TAuthenticationToken>.CheckTopicExists(NamespaceManager, System.String, System.String)
  nameWithType.vb: AzureServiceBus(Of TAuthenticationToken).CheckTopicExists(NamespaceManager, String, String)
  fullName.vb: Cqrs.Azure.ServiceBus.AzureServiceBus(Of TAuthenticationToken).CheckTopicExists(NamespaceManager, System.String, System.String)
  spec.csharp:
  - uid: Cqrs.Azure.ServiceBus.AzureServiceBus`1.CheckTopicExists(NamespaceManager,System.String,System.String)
    name: CheckTopicExists
    nameWithType: AzureServiceBus<TAuthenticationToken>.CheckTopicExists
    fullName: Cqrs.Azure.ServiceBus.AzureServiceBus<TAuthenticationToken>.CheckTopicExists
  - name: (
    nameWithType: (
    fullName: (
  - uid: NamespaceManager
    name: NamespaceManager
    nameWithType: NamespaceManager
    fullName: NamespaceManager
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.ServiceBus.AzureServiceBus`1.CheckTopicExists(NamespaceManager,System.String,System.String)
    name: CheckTopicExists
    nameWithType: AzureServiceBus(Of TAuthenticationToken).CheckTopicExists
    fullName: Cqrs.Azure.ServiceBus.AzureServiceBus(Of TAuthenticationToken).CheckTopicExists
  - name: (
    nameWithType: (
    fullName: (
  - uid: NamespaceManager
    name: NamespaceManager
    nameWithType: NamespaceManager
    fullName: NamespaceManager
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.ServiceBus.AzureServiceBus{{TAuthenticationToken}}.TriggerSettingsChecking
  commentId: M:Cqrs.Azure.ServiceBus.AzureServiceBus{`0}.TriggerSettingsChecking
  parent: Cqrs.Azure.ServiceBus.AzureServiceBus{{TAuthenticationToken}}
  definition: Cqrs.Azure.ServiceBus.AzureServiceBus`1.TriggerSettingsChecking
  name: TriggerSettingsChecking()
  nameWithType: AzureServiceBus<TAuthenticationToken>.TriggerSettingsChecking()
  fullName: Cqrs.Azure.ServiceBus.AzureServiceBus<TAuthenticationToken>.TriggerSettingsChecking()
  nameWithType.vb: AzureServiceBus(Of TAuthenticationToken).TriggerSettingsChecking()
  fullName.vb: Cqrs.Azure.ServiceBus.AzureServiceBus(Of TAuthenticationToken).TriggerSettingsChecking()
  spec.csharp:
  - uid: Cqrs.Azure.ServiceBus.AzureServiceBus`1.TriggerSettingsChecking
    name: TriggerSettingsChecking
    nameWithType: AzureServiceBus<TAuthenticationToken>.TriggerSettingsChecking
    fullName: Cqrs.Azure.ServiceBus.AzureServiceBus<TAuthenticationToken>.TriggerSettingsChecking
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.ServiceBus.AzureServiceBus`1.TriggerSettingsChecking
    name: TriggerSettingsChecking
    nameWithType: AzureServiceBus(Of TAuthenticationToken).TriggerSettingsChecking
    fullName: Cqrs.Azure.ServiceBus.AzureServiceBus(Of TAuthenticationToken).TriggerSettingsChecking
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.ServiceBus.AzureServiceBus{{TAuthenticationToken}}.TriggerSettingsChecking(TopicClient,IDictionary{System.Int32,SubscriptionClient})
  commentId: M:Cqrs.Azure.ServiceBus.AzureServiceBus{`0}.TriggerSettingsChecking(TopicClient,IDictionary{System.Int32,SubscriptionClient})
  parent: Cqrs.Azure.ServiceBus.AzureServiceBus{{TAuthenticationToken}}
  definition: Cqrs.Azure.ServiceBus.AzureServiceBus`1.TriggerSettingsChecking(TopicClient,IDictionary{System.Int32,SubscriptionClient})
  name: TriggerSettingsChecking(TopicClient, IDictionary<Int32, SubscriptionClient>)
  nameWithType: AzureServiceBus<TAuthenticationToken>.TriggerSettingsChecking(TopicClient, IDictionary<Int32, SubscriptionClient>)
  fullName: Cqrs.Azure.ServiceBus.AzureServiceBus<TAuthenticationToken>.TriggerSettingsChecking(TopicClient, IDictionary<System.Int32, SubscriptionClient>)
  nameWithType.vb: AzureServiceBus(Of TAuthenticationToken).TriggerSettingsChecking(TopicClient, IDictionary(Of Int32, SubscriptionClient))
  fullName.vb: Cqrs.Azure.ServiceBus.AzureServiceBus(Of TAuthenticationToken).TriggerSettingsChecking(TopicClient, IDictionary(Of System.Int32, SubscriptionClient))
  name.vb: TriggerSettingsChecking(TopicClient, IDictionary(Of Int32, SubscriptionClient))
  spec.csharp:
  - uid: Cqrs.Azure.ServiceBus.AzureServiceBus`1.TriggerSettingsChecking(TopicClient,IDictionary{System.Int32,SubscriptionClient})
    name: TriggerSettingsChecking
    nameWithType: AzureServiceBus<TAuthenticationToken>.TriggerSettingsChecking
    fullName: Cqrs.Azure.ServiceBus.AzureServiceBus<TAuthenticationToken>.TriggerSettingsChecking
  - name: (
    nameWithType: (
    fullName: (
  - uid: TopicClient
    name: TopicClient
    nameWithType: TopicClient
    fullName: TopicClient
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SubscriptionClient
    name: SubscriptionClient
    nameWithType: SubscriptionClient
    fullName: SubscriptionClient
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.ServiceBus.AzureServiceBus`1.TriggerSettingsChecking(TopicClient,IDictionary{System.Int32,SubscriptionClient})
    name: TriggerSettingsChecking
    nameWithType: AzureServiceBus(Of TAuthenticationToken).TriggerSettingsChecking
    fullName: Cqrs.Azure.ServiceBus.AzureServiceBus(Of TAuthenticationToken).TriggerSettingsChecking
  - name: (
    nameWithType: (
    fullName: (
  - uid: TopicClient
    name: TopicClient
    nameWithType: TopicClient
    fullName: TopicClient
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SubscriptionClient
    name: SubscriptionClient
    nameWithType: SubscriptionClient
    fullName: SubscriptionClient
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.ServiceBus.AzureServiceBus{{TAuthenticationToken}}.RegisterReceiverMessageHandler(Action{BrokeredMessage},OnMessageOptions)
  commentId: M:Cqrs.Azure.ServiceBus.AzureServiceBus{`0}.RegisterReceiverMessageHandler(Action{BrokeredMessage},OnMessageOptions)
  parent: Cqrs.Azure.ServiceBus.AzureServiceBus{{TAuthenticationToken}}
  definition: Cqrs.Azure.ServiceBus.AzureServiceBus`1.RegisterReceiverMessageHandler(Action{BrokeredMessage},OnMessageOptions)
  name: RegisterReceiverMessageHandler(Action<BrokeredMessage>, OnMessageOptions)
  nameWithType: AzureServiceBus<TAuthenticationToken>.RegisterReceiverMessageHandler(Action<BrokeredMessage>, OnMessageOptions)
  fullName: Cqrs.Azure.ServiceBus.AzureServiceBus<TAuthenticationToken>.RegisterReceiverMessageHandler(Action<BrokeredMessage>, OnMessageOptions)
  nameWithType.vb: AzureServiceBus(Of TAuthenticationToken).RegisterReceiverMessageHandler(Action(Of BrokeredMessage), OnMessageOptions)
  fullName.vb: Cqrs.Azure.ServiceBus.AzureServiceBus(Of TAuthenticationToken).RegisterReceiverMessageHandler(Action(Of BrokeredMessage), OnMessageOptions)
  name.vb: RegisterReceiverMessageHandler(Action(Of BrokeredMessage), OnMessageOptions)
  spec.csharp:
  - uid: Cqrs.Azure.ServiceBus.AzureServiceBus`1.RegisterReceiverMessageHandler(Action{BrokeredMessage},OnMessageOptions)
    name: RegisterReceiverMessageHandler
    nameWithType: AzureServiceBus<TAuthenticationToken>.RegisterReceiverMessageHandler
    fullName: Cqrs.Azure.ServiceBus.AzureServiceBus<TAuthenticationToken>.RegisterReceiverMessageHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BrokeredMessage
    name: BrokeredMessage
    nameWithType: BrokeredMessage
    fullName: BrokeredMessage
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OnMessageOptions
    name: OnMessageOptions
    nameWithType: OnMessageOptions
    fullName: OnMessageOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.ServiceBus.AzureServiceBus`1.RegisterReceiverMessageHandler(Action{BrokeredMessage},OnMessageOptions)
    name: RegisterReceiverMessageHandler
    nameWithType: AzureServiceBus(Of TAuthenticationToken).RegisterReceiverMessageHandler
    fullName: Cqrs.Azure.ServiceBus.AzureServiceBus(Of TAuthenticationToken).RegisterReceiverMessageHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BrokeredMessage
    name: BrokeredMessage
    nameWithType: BrokeredMessage
    fullName: BrokeredMessage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OnMessageOptions
    name: OnMessageOptions
    nameWithType: OnMessageOptions
    fullName: OnMessageOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.ServiceBus.AzureServiceBus{{TAuthenticationToken}}.StoreReceiverMessageHandler(Action{BrokeredMessage},OnMessageOptions)
  commentId: M:Cqrs.Azure.ServiceBus.AzureServiceBus{`0}.StoreReceiverMessageHandler(Action{BrokeredMessage},OnMessageOptions)
  parent: Cqrs.Azure.ServiceBus.AzureServiceBus{{TAuthenticationToken}}
  definition: Cqrs.Azure.ServiceBus.AzureServiceBus`1.StoreReceiverMessageHandler(Action{BrokeredMessage},OnMessageOptions)
  name: StoreReceiverMessageHandler(Action<BrokeredMessage>, OnMessageOptions)
  nameWithType: AzureServiceBus<TAuthenticationToken>.StoreReceiverMessageHandler(Action<BrokeredMessage>, OnMessageOptions)
  fullName: Cqrs.Azure.ServiceBus.AzureServiceBus<TAuthenticationToken>.StoreReceiverMessageHandler(Action<BrokeredMessage>, OnMessageOptions)
  nameWithType.vb: AzureServiceBus(Of TAuthenticationToken).StoreReceiverMessageHandler(Action(Of BrokeredMessage), OnMessageOptions)
  fullName.vb: Cqrs.Azure.ServiceBus.AzureServiceBus(Of TAuthenticationToken).StoreReceiverMessageHandler(Action(Of BrokeredMessage), OnMessageOptions)
  name.vb: StoreReceiverMessageHandler(Action(Of BrokeredMessage), OnMessageOptions)
  spec.csharp:
  - uid: Cqrs.Azure.ServiceBus.AzureServiceBus`1.StoreReceiverMessageHandler(Action{BrokeredMessage},OnMessageOptions)
    name: StoreReceiverMessageHandler
    nameWithType: AzureServiceBus<TAuthenticationToken>.StoreReceiverMessageHandler
    fullName: Cqrs.Azure.ServiceBus.AzureServiceBus<TAuthenticationToken>.StoreReceiverMessageHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BrokeredMessage
    name: BrokeredMessage
    nameWithType: BrokeredMessage
    fullName: BrokeredMessage
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OnMessageOptions
    name: OnMessageOptions
    nameWithType: OnMessageOptions
    fullName: OnMessageOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.ServiceBus.AzureServiceBus`1.StoreReceiverMessageHandler(Action{BrokeredMessage},OnMessageOptions)
    name: StoreReceiverMessageHandler
    nameWithType: AzureServiceBus(Of TAuthenticationToken).StoreReceiverMessageHandler
    fullName: Cqrs.Azure.ServiceBus.AzureServiceBus(Of TAuthenticationToken).StoreReceiverMessageHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BrokeredMessage
    name: BrokeredMessage
    nameWithType: BrokeredMessage
    fullName: BrokeredMessage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OnMessageOptions
    name: OnMessageOptions
    nameWithType: OnMessageOptions
    fullName: OnMessageOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.ServiceBus.AzureServiceBus{{TAuthenticationToken}}.ApplyReceiverMessageHandler
  commentId: M:Cqrs.Azure.ServiceBus.AzureServiceBus{`0}.ApplyReceiverMessageHandler
  parent: Cqrs.Azure.ServiceBus.AzureServiceBus{{TAuthenticationToken}}
  definition: Cqrs.Azure.ServiceBus.AzureServiceBus`1.ApplyReceiverMessageHandler
  name: ApplyReceiverMessageHandler()
  nameWithType: AzureServiceBus<TAuthenticationToken>.ApplyReceiverMessageHandler()
  fullName: Cqrs.Azure.ServiceBus.AzureServiceBus<TAuthenticationToken>.ApplyReceiverMessageHandler()
  nameWithType.vb: AzureServiceBus(Of TAuthenticationToken).ApplyReceiverMessageHandler()
  fullName.vb: Cqrs.Azure.ServiceBus.AzureServiceBus(Of TAuthenticationToken).ApplyReceiverMessageHandler()
  spec.csharp:
  - uid: Cqrs.Azure.ServiceBus.AzureServiceBus`1.ApplyReceiverMessageHandler
    name: ApplyReceiverMessageHandler
    nameWithType: AzureServiceBus<TAuthenticationToken>.ApplyReceiverMessageHandler
    fullName: Cqrs.Azure.ServiceBus.AzureServiceBus<TAuthenticationToken>.ApplyReceiverMessageHandler
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.ServiceBus.AzureServiceBus`1.ApplyReceiverMessageHandler
    name: ApplyReceiverMessageHandler
    nameWithType: AzureServiceBus(Of TAuthenticationToken).ApplyReceiverMessageHandler
    fullName: Cqrs.Azure.ServiceBus.AzureServiceBus(Of TAuthenticationToken).ApplyReceiverMessageHandler
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.ServiceBus.AzureServiceBus{{TAuthenticationToken}}.CleanUpDeadLetters(System.String,System.String)
  commentId: M:Cqrs.Azure.ServiceBus.AzureServiceBus{`0}.CleanUpDeadLetters(System.String,System.String)
  parent: Cqrs.Azure.ServiceBus.AzureServiceBus{{TAuthenticationToken}}
  definition: Cqrs.Azure.ServiceBus.AzureServiceBus`1.CleanUpDeadLetters(System.String,System.String)
  name: CleanUpDeadLetters(String, String)
  nameWithType: AzureServiceBus<TAuthenticationToken>.CleanUpDeadLetters(String, String)
  fullName: Cqrs.Azure.ServiceBus.AzureServiceBus<TAuthenticationToken>.CleanUpDeadLetters(System.String, System.String)
  nameWithType.vb: AzureServiceBus(Of TAuthenticationToken).CleanUpDeadLetters(String, String)
  fullName.vb: Cqrs.Azure.ServiceBus.AzureServiceBus(Of TAuthenticationToken).CleanUpDeadLetters(System.String, System.String)
  spec.csharp:
  - uid: Cqrs.Azure.ServiceBus.AzureServiceBus`1.CleanUpDeadLetters(System.String,System.String)
    name: CleanUpDeadLetters
    nameWithType: AzureServiceBus<TAuthenticationToken>.CleanUpDeadLetters
    fullName: Cqrs.Azure.ServiceBus.AzureServiceBus<TAuthenticationToken>.CleanUpDeadLetters
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.ServiceBus.AzureServiceBus`1.CleanUpDeadLetters(System.String,System.String)
    name: CleanUpDeadLetters
    nameWithType: AzureServiceBus(Of TAuthenticationToken).CleanUpDeadLetters
    fullName: Cqrs.Azure.ServiceBus.AzureServiceBus(Of TAuthenticationToken).CleanUpDeadLetters
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.ServiceBus.AzureBus{{TAuthenticationToken}}.ConnectionString
  commentId: P:Cqrs.Azure.ServiceBus.AzureBus{`0}.ConnectionString
  parent: Cqrs.Azure.ServiceBus.AzureBus{{TAuthenticationToken}}
  definition: Cqrs.Azure.ServiceBus.AzureBus`1.ConnectionString
  name: ConnectionString
  nameWithType: AzureBus<TAuthenticationToken>.ConnectionString
  fullName: Cqrs.Azure.ServiceBus.AzureBus<TAuthenticationToken>.ConnectionString
  nameWithType.vb: AzureBus(Of TAuthenticationToken).ConnectionString
  fullName.vb: Cqrs.Azure.ServiceBus.AzureBus(Of TAuthenticationToken).ConnectionString
- uid: Cqrs.Azure.ServiceBus.AzureBus{{TAuthenticationToken}}.MessageSerialiser
  commentId: P:Cqrs.Azure.ServiceBus.AzureBus{`0}.MessageSerialiser
  parent: Cqrs.Azure.ServiceBus.AzureBus{{TAuthenticationToken}}
  definition: Cqrs.Azure.ServiceBus.AzureBus`1.MessageSerialiser
  name: MessageSerialiser
  nameWithType: AzureBus<TAuthenticationToken>.MessageSerialiser
  fullName: Cqrs.Azure.ServiceBus.AzureBus<TAuthenticationToken>.MessageSerialiser
  nameWithType.vb: AzureBus(Of TAuthenticationToken).MessageSerialiser
  fullName.vb: Cqrs.Azure.ServiceBus.AzureBus(Of TAuthenticationToken).MessageSerialiser
- uid: Cqrs.Azure.ServiceBus.AzureBus{{TAuthenticationToken}}.AuthenticationTokenHelper
  commentId: P:Cqrs.Azure.ServiceBus.AzureBus{`0}.AuthenticationTokenHelper
  parent: Cqrs.Azure.ServiceBus.AzureBus{{TAuthenticationToken}}
  definition: Cqrs.Azure.ServiceBus.AzureBus`1.AuthenticationTokenHelper
  name: AuthenticationTokenHelper
  nameWithType: AzureBus<TAuthenticationToken>.AuthenticationTokenHelper
  fullName: Cqrs.Azure.ServiceBus.AzureBus<TAuthenticationToken>.AuthenticationTokenHelper
  nameWithType.vb: AzureBus(Of TAuthenticationToken).AuthenticationTokenHelper
  fullName.vb: Cqrs.Azure.ServiceBus.AzureBus(Of TAuthenticationToken).AuthenticationTokenHelper
- uid: Cqrs.Azure.ServiceBus.AzureBus{{TAuthenticationToken}}.CorrelationIdHelper
  commentId: P:Cqrs.Azure.ServiceBus.AzureBus{`0}.CorrelationIdHelper
  parent: Cqrs.Azure.ServiceBus.AzureBus{{TAuthenticationToken}}
  definition: Cqrs.Azure.ServiceBus.AzureBus`1.CorrelationIdHelper
  name: CorrelationIdHelper
  nameWithType: AzureBus<TAuthenticationToken>.CorrelationIdHelper
  fullName: Cqrs.Azure.ServiceBus.AzureBus<TAuthenticationToken>.CorrelationIdHelper
  nameWithType.vb: AzureBus(Of TAuthenticationToken).CorrelationIdHelper
  fullName.vb: Cqrs.Azure.ServiceBus.AzureBus(Of TAuthenticationToken).CorrelationIdHelper
- uid: Cqrs.Azure.ServiceBus.AzureBus{{TAuthenticationToken}}.Logger
  commentId: P:Cqrs.Azure.ServiceBus.AzureBus{`0}.Logger
  parent: Cqrs.Azure.ServiceBus.AzureBus{{TAuthenticationToken}}
  definition: Cqrs.Azure.ServiceBus.AzureBus`1.Logger
  name: Logger
  nameWithType: AzureBus<TAuthenticationToken>.Logger
  fullName: Cqrs.Azure.ServiceBus.AzureBus<TAuthenticationToken>.Logger
  nameWithType.vb: AzureBus(Of TAuthenticationToken).Logger
  fullName.vb: Cqrs.Azure.ServiceBus.AzureBus(Of TAuthenticationToken).Logger
- uid: Cqrs.Azure.ServiceBus.AzureBus{{TAuthenticationToken}}.ConfigurationManager
  commentId: P:Cqrs.Azure.ServiceBus.AzureBus{`0}.ConfigurationManager
  parent: Cqrs.Azure.ServiceBus.AzureBus{{TAuthenticationToken}}
  definition: Cqrs.Azure.ServiceBus.AzureBus`1.ConfigurationManager
  name: ConfigurationManager
  nameWithType: AzureBus<TAuthenticationToken>.ConfigurationManager
  fullName: Cqrs.Azure.ServiceBus.AzureBus<TAuthenticationToken>.ConfigurationManager
  nameWithType.vb: AzureBus(Of TAuthenticationToken).ConfigurationManager
  fullName.vb: Cqrs.Azure.ServiceBus.AzureBus(Of TAuthenticationToken).ConfigurationManager
- uid: Cqrs.Azure.ServiceBus.AzureBus{{TAuthenticationToken}}.EventWaits
  commentId: P:Cqrs.Azure.ServiceBus.AzureBus{`0}.EventWaits
  parent: Cqrs.Azure.ServiceBus.AzureBus{{TAuthenticationToken}}
  definition: Cqrs.Azure.ServiceBus.AzureBus`1.EventWaits
  name: EventWaits
  nameWithType: AzureBus<TAuthenticationToken>.EventWaits
  fullName: Cqrs.Azure.ServiceBus.AzureBus<TAuthenticationToken>.EventWaits
  nameWithType.vb: AzureBus(Of TAuthenticationToken).EventWaits
  fullName.vb: Cqrs.Azure.ServiceBus.AzureBus(Of TAuthenticationToken).EventWaits
- uid: Cqrs.Azure.ServiceBus.AzureBus{{TAuthenticationToken}}.DefaultNumberOfReceiversCount
  commentId: F:Cqrs.Azure.ServiceBus.AzureBus{`0}.DefaultNumberOfReceiversCount
  parent: Cqrs.Azure.ServiceBus.AzureBus{{TAuthenticationToken}}
  definition: Cqrs.Azure.ServiceBus.AzureBus`1.DefaultNumberOfReceiversCount
  name: DefaultNumberOfReceiversCount
  nameWithType: AzureBus<TAuthenticationToken>.DefaultNumberOfReceiversCount
  fullName: Cqrs.Azure.ServiceBus.AzureBus<TAuthenticationToken>.DefaultNumberOfReceiversCount
  nameWithType.vb: AzureBus(Of TAuthenticationToken).DefaultNumberOfReceiversCount
  fullName.vb: Cqrs.Azure.ServiceBus.AzureBus(Of TAuthenticationToken).DefaultNumberOfReceiversCount
- uid: Cqrs.Azure.ServiceBus.AzureBus{{TAuthenticationToken}}.NumberOfReceiversCount
  commentId: P:Cqrs.Azure.ServiceBus.AzureBus{`0}.NumberOfReceiversCount
  parent: Cqrs.Azure.ServiceBus.AzureBus{{TAuthenticationToken}}
  definition: Cqrs.Azure.ServiceBus.AzureBus`1.NumberOfReceiversCount
  name: NumberOfReceiversCount
  nameWithType: AzureBus<TAuthenticationToken>.NumberOfReceiversCount
  fullName: Cqrs.Azure.ServiceBus.AzureBus<TAuthenticationToken>.NumberOfReceiversCount
  nameWithType.vb: AzureBus(Of TAuthenticationToken).NumberOfReceiversCount
  fullName.vb: Cqrs.Azure.ServiceBus.AzureBus(Of TAuthenticationToken).NumberOfReceiversCount
- uid: Cqrs.Azure.ServiceBus.AzureBus{{TAuthenticationToken}}.DefaultMaximumConcurrentReceiverProcessesCount
  commentId: F:Cqrs.Azure.ServiceBus.AzureBus{`0}.DefaultMaximumConcurrentReceiverProcessesCount
  parent: Cqrs.Azure.ServiceBus.AzureBus{{TAuthenticationToken}}
  definition: Cqrs.Azure.ServiceBus.AzureBus`1.DefaultMaximumConcurrentReceiverProcessesCount
  name: DefaultMaximumConcurrentReceiverProcessesCount
  nameWithType: AzureBus<TAuthenticationToken>.DefaultMaximumConcurrentReceiverProcessesCount
  fullName: Cqrs.Azure.ServiceBus.AzureBus<TAuthenticationToken>.DefaultMaximumConcurrentReceiverProcessesCount
  nameWithType.vb: AzureBus(Of TAuthenticationToken).DefaultMaximumConcurrentReceiverProcessesCount
  fullName.vb: Cqrs.Azure.ServiceBus.AzureBus(Of TAuthenticationToken).DefaultMaximumConcurrentReceiverProcessesCount
- uid: Cqrs.Azure.ServiceBus.AzureBus{{TAuthenticationToken}}.MaximumConcurrentReceiverProcessesCount
  commentId: P:Cqrs.Azure.ServiceBus.AzureBus{`0}.MaximumConcurrentReceiverProcessesCount
  parent: Cqrs.Azure.ServiceBus.AzureBus{{TAuthenticationToken}}
  definition: Cqrs.Azure.ServiceBus.AzureBus`1.MaximumConcurrentReceiverProcessesCount
  name: MaximumConcurrentReceiverProcessesCount
  nameWithType: AzureBus<TAuthenticationToken>.MaximumConcurrentReceiverProcessesCount
  fullName: Cqrs.Azure.ServiceBus.AzureBus<TAuthenticationToken>.MaximumConcurrentReceiverProcessesCount
  nameWithType.vb: AzureBus(Of TAuthenticationToken).MaximumConcurrentReceiverProcessesCount
  fullName.vb: Cqrs.Azure.ServiceBus.AzureBus(Of TAuthenticationToken).MaximumConcurrentReceiverProcessesCount
- uid: Cqrs.Azure.ServiceBus.AzureBus{{TAuthenticationToken}}.SetConnectionStrings
  commentId: M:Cqrs.Azure.ServiceBus.AzureBus{`0}.SetConnectionStrings
  parent: Cqrs.Azure.ServiceBus.AzureBus{{TAuthenticationToken}}
  definition: Cqrs.Azure.ServiceBus.AzureBus`1.SetConnectionStrings
  name: SetConnectionStrings()
  nameWithType: AzureBus<TAuthenticationToken>.SetConnectionStrings()
  fullName: Cqrs.Azure.ServiceBus.AzureBus<TAuthenticationToken>.SetConnectionStrings()
  nameWithType.vb: AzureBus(Of TAuthenticationToken).SetConnectionStrings()
  fullName.vb: Cqrs.Azure.ServiceBus.AzureBus(Of TAuthenticationToken).SetConnectionStrings()
  spec.csharp:
  - uid: Cqrs.Azure.ServiceBus.AzureBus`1.SetConnectionStrings
    name: SetConnectionStrings
    nameWithType: AzureBus<TAuthenticationToken>.SetConnectionStrings
    fullName: Cqrs.Azure.ServiceBus.AzureBus<TAuthenticationToken>.SetConnectionStrings
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.ServiceBus.AzureBus`1.SetConnectionStrings
    name: SetConnectionStrings
    nameWithType: AzureBus(Of TAuthenticationToken).SetConnectionStrings
    fullName: Cqrs.Azure.ServiceBus.AzureBus(Of TAuthenticationToken).SetConnectionStrings
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.ServiceBus.AzureBus{{TAuthenticationToken}}.SetNumberOfReceiversCount
  commentId: M:Cqrs.Azure.ServiceBus.AzureBus{`0}.SetNumberOfReceiversCount
  parent: Cqrs.Azure.ServiceBus.AzureBus{{TAuthenticationToken}}
  definition: Cqrs.Azure.ServiceBus.AzureBus`1.SetNumberOfReceiversCount
  name: SetNumberOfReceiversCount()
  nameWithType: AzureBus<TAuthenticationToken>.SetNumberOfReceiversCount()
  fullName: Cqrs.Azure.ServiceBus.AzureBus<TAuthenticationToken>.SetNumberOfReceiversCount()
  nameWithType.vb: AzureBus(Of TAuthenticationToken).SetNumberOfReceiversCount()
  fullName.vb: Cqrs.Azure.ServiceBus.AzureBus(Of TAuthenticationToken).SetNumberOfReceiversCount()
  spec.csharp:
  - uid: Cqrs.Azure.ServiceBus.AzureBus`1.SetNumberOfReceiversCount
    name: SetNumberOfReceiversCount
    nameWithType: AzureBus<TAuthenticationToken>.SetNumberOfReceiversCount
    fullName: Cqrs.Azure.ServiceBus.AzureBus<TAuthenticationToken>.SetNumberOfReceiversCount
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.ServiceBus.AzureBus`1.SetNumberOfReceiversCount
    name: SetNumberOfReceiversCount
    nameWithType: AzureBus(Of TAuthenticationToken).SetNumberOfReceiversCount
    fullName: Cqrs.Azure.ServiceBus.AzureBus(Of TAuthenticationToken).SetNumberOfReceiversCount
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.ServiceBus.AzureBus{{TAuthenticationToken}}.SetMaximumConcurrentReceiverProcessesCount
  commentId: M:Cqrs.Azure.ServiceBus.AzureBus{`0}.SetMaximumConcurrentReceiverProcessesCount
  parent: Cqrs.Azure.ServiceBus.AzureBus{{TAuthenticationToken}}
  definition: Cqrs.Azure.ServiceBus.AzureBus`1.SetMaximumConcurrentReceiverProcessesCount
  name: SetMaximumConcurrentReceiverProcessesCount()
  nameWithType: AzureBus<TAuthenticationToken>.SetMaximumConcurrentReceiverProcessesCount()
  fullName: Cqrs.Azure.ServiceBus.AzureBus<TAuthenticationToken>.SetMaximumConcurrentReceiverProcessesCount()
  nameWithType.vb: AzureBus(Of TAuthenticationToken).SetMaximumConcurrentReceiverProcessesCount()
  fullName.vb: Cqrs.Azure.ServiceBus.AzureBus(Of TAuthenticationToken).SetMaximumConcurrentReceiverProcessesCount()
  spec.csharp:
  - uid: Cqrs.Azure.ServiceBus.AzureBus`1.SetMaximumConcurrentReceiverProcessesCount
    name: SetMaximumConcurrentReceiverProcessesCount
    nameWithType: AzureBus<TAuthenticationToken>.SetMaximumConcurrentReceiverProcessesCount
    fullName: Cqrs.Azure.ServiceBus.AzureBus<TAuthenticationToken>.SetMaximumConcurrentReceiverProcessesCount
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.ServiceBus.AzureBus`1.SetMaximumConcurrentReceiverProcessesCount
    name: SetMaximumConcurrentReceiverProcessesCount
    nameWithType: AzureBus(Of TAuthenticationToken).SetMaximumConcurrentReceiverProcessesCount
    fullName: Cqrs.Azure.ServiceBus.AzureBus(Of TAuthenticationToken).SetMaximumConcurrentReceiverProcessesCount
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.ServiceBus.AzureBus{{TAuthenticationToken}}.GetCurrentNumberOfReceiversCount
  commentId: M:Cqrs.Azure.ServiceBus.AzureBus{`0}.GetCurrentNumberOfReceiversCount
  parent: Cqrs.Azure.ServiceBus.AzureBus{{TAuthenticationToken}}
  definition: Cqrs.Azure.ServiceBus.AzureBus`1.GetCurrentNumberOfReceiversCount
  name: GetCurrentNumberOfReceiversCount()
  nameWithType: AzureBus<TAuthenticationToken>.GetCurrentNumberOfReceiversCount()
  fullName: Cqrs.Azure.ServiceBus.AzureBus<TAuthenticationToken>.GetCurrentNumberOfReceiversCount()
  nameWithType.vb: AzureBus(Of TAuthenticationToken).GetCurrentNumberOfReceiversCount()
  fullName.vb: Cqrs.Azure.ServiceBus.AzureBus(Of TAuthenticationToken).GetCurrentNumberOfReceiversCount()
  spec.csharp:
  - uid: Cqrs.Azure.ServiceBus.AzureBus`1.GetCurrentNumberOfReceiversCount
    name: GetCurrentNumberOfReceiversCount
    nameWithType: AzureBus<TAuthenticationToken>.GetCurrentNumberOfReceiversCount
    fullName: Cqrs.Azure.ServiceBus.AzureBus<TAuthenticationToken>.GetCurrentNumberOfReceiversCount
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.ServiceBus.AzureBus`1.GetCurrentNumberOfReceiversCount
    name: GetCurrentNumberOfReceiversCount
    nameWithType: AzureBus(Of TAuthenticationToken).GetCurrentNumberOfReceiversCount
    fullName: Cqrs.Azure.ServiceBus.AzureBus(Of TAuthenticationToken).GetCurrentNumberOfReceiversCount
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.ServiceBus.AzureBus{{TAuthenticationToken}}.GetCurrentMaximumConcurrentReceiverProcessesCount
  commentId: M:Cqrs.Azure.ServiceBus.AzureBus{`0}.GetCurrentMaximumConcurrentReceiverProcessesCount
  parent: Cqrs.Azure.ServiceBus.AzureBus{{TAuthenticationToken}}
  definition: Cqrs.Azure.ServiceBus.AzureBus`1.GetCurrentMaximumConcurrentReceiverProcessesCount
  name: GetCurrentMaximumConcurrentReceiverProcessesCount()
  nameWithType: AzureBus<TAuthenticationToken>.GetCurrentMaximumConcurrentReceiverProcessesCount()
  fullName: Cqrs.Azure.ServiceBus.AzureBus<TAuthenticationToken>.GetCurrentMaximumConcurrentReceiverProcessesCount()
  nameWithType.vb: AzureBus(Of TAuthenticationToken).GetCurrentMaximumConcurrentReceiverProcessesCount()
  fullName.vb: Cqrs.Azure.ServiceBus.AzureBus(Of TAuthenticationToken).GetCurrentMaximumConcurrentReceiverProcessesCount()
  spec.csharp:
  - uid: Cqrs.Azure.ServiceBus.AzureBus`1.GetCurrentMaximumConcurrentReceiverProcessesCount
    name: GetCurrentMaximumConcurrentReceiverProcessesCount
    nameWithType: AzureBus<TAuthenticationToken>.GetCurrentMaximumConcurrentReceiverProcessesCount
    fullName: Cqrs.Azure.ServiceBus.AzureBus<TAuthenticationToken>.GetCurrentMaximumConcurrentReceiverProcessesCount
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.ServiceBus.AzureBus`1.GetCurrentMaximumConcurrentReceiverProcessesCount
    name: GetCurrentMaximumConcurrentReceiverProcessesCount
    nameWithType: AzureBus(Of TAuthenticationToken).GetCurrentMaximumConcurrentReceiverProcessesCount
    fullName: Cqrs.Azure.ServiceBus.AzureBus(Of TAuthenticationToken).GetCurrentMaximumConcurrentReceiverProcessesCount
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.ServiceBus.AzureBus{{TAuthenticationToken}}.GetNamespaceManager
  commentId: M:Cqrs.Azure.ServiceBus.AzureBus{`0}.GetNamespaceManager
  parent: Cqrs.Azure.ServiceBus.AzureBus{{TAuthenticationToken}}
  definition: Cqrs.Azure.ServiceBus.AzureBus`1.GetNamespaceManager
  name: GetNamespaceManager()
  nameWithType: AzureBus<TAuthenticationToken>.GetNamespaceManager()
  fullName: Cqrs.Azure.ServiceBus.AzureBus<TAuthenticationToken>.GetNamespaceManager()
  nameWithType.vb: AzureBus(Of TAuthenticationToken).GetNamespaceManager()
  fullName.vb: Cqrs.Azure.ServiceBus.AzureBus(Of TAuthenticationToken).GetNamespaceManager()
  spec.csharp:
  - uid: Cqrs.Azure.ServiceBus.AzureBus`1.GetNamespaceManager
    name: GetNamespaceManager
    nameWithType: AzureBus<TAuthenticationToken>.GetNamespaceManager
    fullName: Cqrs.Azure.ServiceBus.AzureBus<TAuthenticationToken>.GetNamespaceManager
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.ServiceBus.AzureBus`1.GetNamespaceManager
    name: GetNamespaceManager
    nameWithType: AzureBus(Of TAuthenticationToken).GetNamespaceManager
    fullName: Cqrs.Azure.ServiceBus.AzureBus(Of TAuthenticationToken).GetNamespaceManager
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.ServiceBus.AzureBus{{TAuthenticationToken}}.AzureServiceBusRetryPolicy
  commentId: P:Cqrs.Azure.ServiceBus.AzureBus{`0}.AzureServiceBusRetryPolicy
  parent: Cqrs.Azure.ServiceBus.AzureBus{{TAuthenticationToken}}
  definition: Cqrs.Azure.ServiceBus.AzureBus`1.AzureServiceBusRetryPolicy
  name: AzureServiceBusRetryPolicy
  nameWithType: AzureBus<TAuthenticationToken>.AzureServiceBusRetryPolicy
  fullName: Cqrs.Azure.ServiceBus.AzureBus<TAuthenticationToken>.AzureServiceBusRetryPolicy
  nameWithType.vb: AzureBus(Of TAuthenticationToken).AzureServiceBusRetryPolicy
  fullName.vb: Cqrs.Azure.ServiceBus.AzureBus(Of TAuthenticationToken).AzureServiceBusRetryPolicy
- uid: Cqrs.Azure.ServiceBus.AzureBus{{TAuthenticationToken}}.StartSettingsChecking
  commentId: M:Cqrs.Azure.ServiceBus.AzureBus{`0}.StartSettingsChecking
  parent: Cqrs.Azure.ServiceBus.AzureBus{{TAuthenticationToken}}
  definition: Cqrs.Azure.ServiceBus.AzureBus`1.StartSettingsChecking
  name: StartSettingsChecking()
  nameWithType: AzureBus<TAuthenticationToken>.StartSettingsChecking()
  fullName: Cqrs.Azure.ServiceBus.AzureBus<TAuthenticationToken>.StartSettingsChecking()
  nameWithType.vb: AzureBus(Of TAuthenticationToken).StartSettingsChecking()
  fullName.vb: Cqrs.Azure.ServiceBus.AzureBus(Of TAuthenticationToken).StartSettingsChecking()
  spec.csharp:
  - uid: Cqrs.Azure.ServiceBus.AzureBus`1.StartSettingsChecking
    name: StartSettingsChecking
    nameWithType: AzureBus<TAuthenticationToken>.StartSettingsChecking
    fullName: Cqrs.Azure.ServiceBus.AzureBus<TAuthenticationToken>.StartSettingsChecking
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.ServiceBus.AzureBus`1.StartSettingsChecking
    name: StartSettingsChecking
    nameWithType: AzureBus(Of TAuthenticationToken).StartSettingsChecking
    fullName: Cqrs.Azure.ServiceBus.AzureBus(Of TAuthenticationToken).StartSettingsChecking
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.ServiceBus.AzureBus{{TAuthenticationToken}}.ValidateSettingsHaveChanged
  commentId: M:Cqrs.Azure.ServiceBus.AzureBus{`0}.ValidateSettingsHaveChanged
  parent: Cqrs.Azure.ServiceBus.AzureBus{{TAuthenticationToken}}
  definition: Cqrs.Azure.ServiceBus.AzureBus`1.ValidateSettingsHaveChanged
  name: ValidateSettingsHaveChanged()
  nameWithType: AzureBus<TAuthenticationToken>.ValidateSettingsHaveChanged()
  fullName: Cqrs.Azure.ServiceBus.AzureBus<TAuthenticationToken>.ValidateSettingsHaveChanged()
  nameWithType.vb: AzureBus(Of TAuthenticationToken).ValidateSettingsHaveChanged()
  fullName.vb: Cqrs.Azure.ServiceBus.AzureBus(Of TAuthenticationToken).ValidateSettingsHaveChanged()
  spec.csharp:
  - uid: Cqrs.Azure.ServiceBus.AzureBus`1.ValidateSettingsHaveChanged
    name: ValidateSettingsHaveChanged
    nameWithType: AzureBus<TAuthenticationToken>.ValidateSettingsHaveChanged
    fullName: Cqrs.Azure.ServiceBus.AzureBus<TAuthenticationToken>.ValidateSettingsHaveChanged
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.ServiceBus.AzureBus`1.ValidateSettingsHaveChanged
    name: ValidateSettingsHaveChanged
    nameWithType: AzureBus(Of TAuthenticationToken).ValidateSettingsHaveChanged
    fullName: Cqrs.Azure.ServiceBus.AzureBus(Of TAuthenticationToken).ValidateSettingsHaveChanged
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.ServiceBus.AzureBus{{TAuthenticationToken}}.UpdateSettings
  commentId: M:Cqrs.Azure.ServiceBus.AzureBus{`0}.UpdateSettings
  parent: Cqrs.Azure.ServiceBus.AzureBus{{TAuthenticationToken}}
  definition: Cqrs.Azure.ServiceBus.AzureBus`1.UpdateSettings
  name: UpdateSettings()
  nameWithType: AzureBus<TAuthenticationToken>.UpdateSettings()
  fullName: Cqrs.Azure.ServiceBus.AzureBus<TAuthenticationToken>.UpdateSettings()
  nameWithType.vb: AzureBus(Of TAuthenticationToken).UpdateSettings()
  fullName.vb: Cqrs.Azure.ServiceBus.AzureBus(Of TAuthenticationToken).UpdateSettings()
  spec.csharp:
  - uid: Cqrs.Azure.ServiceBus.AzureBus`1.UpdateSettings
    name: UpdateSettings
    nameWithType: AzureBus<TAuthenticationToken>.UpdateSettings
    fullName: Cqrs.Azure.ServiceBus.AzureBus<TAuthenticationToken>.UpdateSettings
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.ServiceBus.AzureBus`1.UpdateSettings
    name: UpdateSettings
    nameWithType: AzureBus(Of TAuthenticationToken).UpdateSettings
    fullName: Cqrs.Azure.ServiceBus.AzureBus(Of TAuthenticationToken).UpdateSettings
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Cqrs.Azure.ServiceBus.AzureBus`1
  commentId: T:Cqrs.Azure.ServiceBus.AzureBus`1
  isExternal: false
  name: AzureBus<TAuthenticationToken>
  nameWithType: AzureBus<TAuthenticationToken>
  fullName: Cqrs.Azure.ServiceBus.AzureBus<TAuthenticationToken>
  nameWithType.vb: AzureBus(Of TAuthenticationToken)
  fullName.vb: Cqrs.Azure.ServiceBus.AzureBus(Of TAuthenticationToken)
  name.vb: AzureBus(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Azure.ServiceBus.AzureBus`1
    name: AzureBus
    nameWithType: AzureBus
    fullName: Cqrs.Azure.ServiceBus.AzureBus
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Azure.ServiceBus.AzureBus`1
    name: AzureBus
    nameWithType: AzureBus
    fullName: Cqrs.Azure.ServiceBus.AzureBus
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.ServiceBus.AzureServiceBus`1
  commentId: T:Cqrs.Azure.ServiceBus.AzureServiceBus`1
  isExternal: false
  name: AzureServiceBus<TAuthenticationToken>
  nameWithType: AzureServiceBus<TAuthenticationToken>
  fullName: Cqrs.Azure.ServiceBus.AzureServiceBus<TAuthenticationToken>
  nameWithType.vb: AzureServiceBus(Of TAuthenticationToken)
  fullName.vb: Cqrs.Azure.ServiceBus.AzureServiceBus(Of TAuthenticationToken)
  name.vb: AzureServiceBus(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Azure.ServiceBus.AzureServiceBus`1
    name: AzureServiceBus
    nameWithType: AzureServiceBus
    fullName: Cqrs.Azure.ServiceBus.AzureServiceBus
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Azure.ServiceBus.AzureServiceBus`1
    name: AzureServiceBus
    nameWithType: AzureServiceBus
    fullName: Cqrs.Azure.ServiceBus.AzureServiceBus
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.ServiceBus.AzureCommandBus`1
  commentId: T:Cqrs.Azure.ServiceBus.AzureCommandBus`1
  isExternal: false
  name: AzureCommandBus<TAuthenticationToken>
  nameWithType: AzureCommandBus<TAuthenticationToken>
  fullName: Cqrs.Azure.ServiceBus.AzureCommandBus<TAuthenticationToken>
  nameWithType.vb: AzureCommandBus(Of TAuthenticationToken)
  fullName.vb: Cqrs.Azure.ServiceBus.AzureCommandBus(Of TAuthenticationToken)
  name.vb: AzureCommandBus(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Azure.ServiceBus.AzureCommandBus`1
    name: AzureCommandBus
    nameWithType: AzureCommandBus
    fullName: Cqrs.Azure.ServiceBus.AzureCommandBus
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Azure.ServiceBus.AzureCommandBus`1
    name: AzureCommandBus
    nameWithType: AzureCommandBus
    fullName: Cqrs.Azure.ServiceBus.AzureCommandBus
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Commands.IPublishAndWaitCommandPublisher`1
  commentId: T:Cqrs.Commands.IPublishAndWaitCommandPublisher`1
  isExternal: false
  name: IPublishAndWaitCommandPublisher<TAuthenticationToken>
  nameWithType: IPublishAndWaitCommandPublisher<TAuthenticationToken>
  fullName: Cqrs.Commands.IPublishAndWaitCommandPublisher<TAuthenticationToken>
  nameWithType.vb: IPublishAndWaitCommandPublisher(Of TAuthenticationToken)
  fullName.vb: Cqrs.Commands.IPublishAndWaitCommandPublisher(Of TAuthenticationToken)
  name.vb: IPublishAndWaitCommandPublisher(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Commands.IPublishAndWaitCommandPublisher`1
    name: IPublishAndWaitCommandPublisher
    nameWithType: IPublishAndWaitCommandPublisher
    fullName: Cqrs.Commands.IPublishAndWaitCommandPublisher
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Commands.IPublishAndWaitCommandPublisher`1
    name: IPublishAndWaitCommandPublisher
    nameWithType: IPublishAndWaitCommandPublisher
    fullName: Cqrs.Commands.IPublishAndWaitCommandPublisher
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Commands
  commentId: N:Cqrs.Commands
  isExternal: false
  name: Cqrs.Commands
  nameWithType: Cqrs.Commands
  fullName: Cqrs.Commands
- uid: Cqrs.Azure.ServiceBus.AzureCommandBus`1.MessageBusConnectionStringConfigurationKey
  commentId: P:Cqrs.Azure.ServiceBus.AzureCommandBus`1.MessageBusConnectionStringConfigurationKey
  isExternal: false
  name: MessageBusConnectionStringConfigurationKey
  nameWithType: AzureCommandBus<TAuthenticationToken>.MessageBusConnectionStringConfigurationKey
  fullName: Cqrs.Azure.ServiceBus.AzureCommandBus<TAuthenticationToken>.MessageBusConnectionStringConfigurationKey
  nameWithType.vb: AzureCommandBus(Of TAuthenticationToken).MessageBusConnectionStringConfigurationKey
  fullName.vb: Cqrs.Azure.ServiceBus.AzureCommandBus(Of TAuthenticationToken).MessageBusConnectionStringConfigurationKey
- uid: Cqrs.Azure.ServiceBus.AzureCommandBus`1.PrivateTopicNameConfigurationKey
  commentId: P:Cqrs.Azure.ServiceBus.AzureCommandBus`1.PrivateTopicNameConfigurationKey
  isExternal: false
  name: PrivateTopicNameConfigurationKey
  nameWithType: AzureCommandBus<TAuthenticationToken>.PrivateTopicNameConfigurationKey
  fullName: Cqrs.Azure.ServiceBus.AzureCommandBus<TAuthenticationToken>.PrivateTopicNameConfigurationKey
  nameWithType.vb: AzureCommandBus(Of TAuthenticationToken).PrivateTopicNameConfigurationKey
  fullName.vb: Cqrs.Azure.ServiceBus.AzureCommandBus(Of TAuthenticationToken).PrivateTopicNameConfigurationKey
- uid: Cqrs.Azure.ServiceBus.AzureCommandBus`1.PublicTopicNameConfigurationKey
  commentId: P:Cqrs.Azure.ServiceBus.AzureCommandBus`1.PublicTopicNameConfigurationKey
  isExternal: false
  name: PublicTopicNameConfigurationKey
  nameWithType: AzureCommandBus<TAuthenticationToken>.PublicTopicNameConfigurationKey
  fullName: Cqrs.Azure.ServiceBus.AzureCommandBus<TAuthenticationToken>.PublicTopicNameConfigurationKey
  nameWithType.vb: AzureCommandBus(Of TAuthenticationToken).PublicTopicNameConfigurationKey
  fullName.vb: Cqrs.Azure.ServiceBus.AzureCommandBus(Of TAuthenticationToken).PublicTopicNameConfigurationKey
- uid: Cqrs.Azure.ServiceBus.AzureCommandBus`1.PrivateTopicSubscriptionNameConfigurationKey
  commentId: P:Cqrs.Azure.ServiceBus.AzureCommandBus`1.PrivateTopicSubscriptionNameConfigurationKey
  isExternal: false
  name: PrivateTopicSubscriptionNameConfigurationKey
  nameWithType: AzureCommandBus<TAuthenticationToken>.PrivateTopicSubscriptionNameConfigurationKey
  fullName: Cqrs.Azure.ServiceBus.AzureCommandBus<TAuthenticationToken>.PrivateTopicSubscriptionNameConfigurationKey
  nameWithType.vb: AzureCommandBus(Of TAuthenticationToken).PrivateTopicSubscriptionNameConfigurationKey
  fullName.vb: Cqrs.Azure.ServiceBus.AzureCommandBus(Of TAuthenticationToken).PrivateTopicSubscriptionNameConfigurationKey
- uid: Cqrs.Azure.ServiceBus.AzureCommandBus`1.PublicTopicSubscriptionNameConfigurationKey
  commentId: P:Cqrs.Azure.ServiceBus.AzureCommandBus`1.PublicTopicSubscriptionNameConfigurationKey
  isExternal: false
  name: PublicTopicSubscriptionNameConfigurationKey
  nameWithType: AzureCommandBus<TAuthenticationToken>.PublicTopicSubscriptionNameConfigurationKey
  fullName: Cqrs.Azure.ServiceBus.AzureCommandBus<TAuthenticationToken>.PublicTopicSubscriptionNameConfigurationKey
  nameWithType.vb: AzureCommandBus(Of TAuthenticationToken).PublicTopicSubscriptionNameConfigurationKey
  fullName.vb: Cqrs.Azure.ServiceBus.AzureCommandBus(Of TAuthenticationToken).PublicTopicSubscriptionNameConfigurationKey
- uid: Cqrs.Azure.ServiceBus.AzureCommandBus`1.DefaultPrivateTopicName
  commentId: P:Cqrs.Azure.ServiceBus.AzureCommandBus`1.DefaultPrivateTopicName
  isExternal: false
  name: DefaultPrivateTopicName
  nameWithType: AzureCommandBus<TAuthenticationToken>.DefaultPrivateTopicName
  fullName: Cqrs.Azure.ServiceBus.AzureCommandBus<TAuthenticationToken>.DefaultPrivateTopicName
  nameWithType.vb: AzureCommandBus(Of TAuthenticationToken).DefaultPrivateTopicName
  fullName.vb: Cqrs.Azure.ServiceBus.AzureCommandBus(Of TAuthenticationToken).DefaultPrivateTopicName
- uid: Cqrs.Azure.ServiceBus.AzureCommandBus`1.DefaultPublicTopicName
  commentId: P:Cqrs.Azure.ServiceBus.AzureCommandBus`1.DefaultPublicTopicName
  isExternal: false
  name: DefaultPublicTopicName
  nameWithType: AzureCommandBus<TAuthenticationToken>.DefaultPublicTopicName
  fullName: Cqrs.Azure.ServiceBus.AzureCommandBus<TAuthenticationToken>.DefaultPublicTopicName
  nameWithType.vb: AzureCommandBus(Of TAuthenticationToken).DefaultPublicTopicName
  fullName.vb: Cqrs.Azure.ServiceBus.AzureCommandBus(Of TAuthenticationToken).DefaultPublicTopicName
- uid: Cqrs.Azure.ServiceBus.AzureCommandBus`1.ThrowExceptionOnReceiverMessageLockLostExceptionDuringCompleteConfigurationKey
  commentId: P:Cqrs.Azure.ServiceBus.AzureCommandBus`1.ThrowExceptionOnReceiverMessageLockLostExceptionDuringCompleteConfigurationKey
  isExternal: false
  name: ThrowExceptionOnReceiverMessageLockLostExceptionDuringCompleteConfigurationKey
  nameWithType: AzureCommandBus<TAuthenticationToken>.ThrowExceptionOnReceiverMessageLockLostExceptionDuringCompleteConfigurationKey
  fullName: Cqrs.Azure.ServiceBus.AzureCommandBus<TAuthenticationToken>.ThrowExceptionOnReceiverMessageLockLostExceptionDuringCompleteConfigurationKey
  nameWithType.vb: AzureCommandBus(Of TAuthenticationToken).ThrowExceptionOnReceiverMessageLockLostExceptionDuringCompleteConfigurationKey
  fullName.vb: Cqrs.Azure.ServiceBus.AzureCommandBus(Of TAuthenticationToken).ThrowExceptionOnReceiverMessageLockLostExceptionDuringCompleteConfigurationKey
- uid: Cqrs.Azure.ServiceBus.AzureServiceBus`1.PrivateServiceBusPublisher
  commentId: P:Cqrs.Azure.ServiceBus.AzureServiceBus`1.PrivateServiceBusPublisher
  isExternal: false
  name: PrivateServiceBusPublisher
  nameWithType: AzureServiceBus<TAuthenticationToken>.PrivateServiceBusPublisher
  fullName: Cqrs.Azure.ServiceBus.AzureServiceBus<TAuthenticationToken>.PrivateServiceBusPublisher
  nameWithType.vb: AzureServiceBus(Of TAuthenticationToken).PrivateServiceBusPublisher
  fullName.vb: Cqrs.Azure.ServiceBus.AzureServiceBus(Of TAuthenticationToken).PrivateServiceBusPublisher
- uid: Cqrs.Azure.ServiceBus.AzureServiceBus`1.PublicServiceBusPublisher
  commentId: P:Cqrs.Azure.ServiceBus.AzureServiceBus`1.PublicServiceBusPublisher
  isExternal: false
  name: PublicServiceBusPublisher
  nameWithType: AzureServiceBus<TAuthenticationToken>.PublicServiceBusPublisher
  fullName: Cqrs.Azure.ServiceBus.AzureServiceBus<TAuthenticationToken>.PublicServiceBusPublisher
  nameWithType.vb: AzureServiceBus(Of TAuthenticationToken).PublicServiceBusPublisher
  fullName.vb: Cqrs.Azure.ServiceBus.AzureServiceBus(Of TAuthenticationToken).PublicServiceBusPublisher
- uid: Cqrs.Azure.ServiceBus.AzureServiceBus`1.PrivateServiceBusReceivers
  commentId: P:Cqrs.Azure.ServiceBus.AzureServiceBus`1.PrivateServiceBusReceivers
  isExternal: false
  name: PrivateServiceBusReceivers
  nameWithType: AzureServiceBus<TAuthenticationToken>.PrivateServiceBusReceivers
  fullName: Cqrs.Azure.ServiceBus.AzureServiceBus<TAuthenticationToken>.PrivateServiceBusReceivers
  nameWithType.vb: AzureServiceBus(Of TAuthenticationToken).PrivateServiceBusReceivers
  fullName.vb: Cqrs.Azure.ServiceBus.AzureServiceBus(Of TAuthenticationToken).PrivateServiceBusReceivers
- uid: Cqrs.Azure.ServiceBus.AzureServiceBus`1.PublicServiceBusReceivers
  commentId: P:Cqrs.Azure.ServiceBus.AzureServiceBus`1.PublicServiceBusReceivers
  isExternal: false
  name: PublicServiceBusReceivers
  nameWithType: AzureServiceBus<TAuthenticationToken>.PublicServiceBusReceivers
  fullName: Cqrs.Azure.ServiceBus.AzureServiceBus<TAuthenticationToken>.PublicServiceBusReceivers
  nameWithType.vb: AzureServiceBus(Of TAuthenticationToken).PublicServiceBusReceivers
  fullName.vb: Cqrs.Azure.ServiceBus.AzureServiceBus(Of TAuthenticationToken).PublicServiceBusReceivers
- uid: Cqrs.Azure.ServiceBus.AzureServiceBus`1.PrivateTopicName
  commentId: P:Cqrs.Azure.ServiceBus.AzureServiceBus`1.PrivateTopicName
  isExternal: false
  name: PrivateTopicName
  nameWithType: AzureServiceBus<TAuthenticationToken>.PrivateTopicName
  fullName: Cqrs.Azure.ServiceBus.AzureServiceBus<TAuthenticationToken>.PrivateTopicName
  nameWithType.vb: AzureServiceBus(Of TAuthenticationToken).PrivateTopicName
  fullName.vb: Cqrs.Azure.ServiceBus.AzureServiceBus(Of TAuthenticationToken).PrivateTopicName
- uid: Cqrs.Azure.ServiceBus.AzureServiceBus`1.PublicTopicName
  commentId: P:Cqrs.Azure.ServiceBus.AzureServiceBus`1.PublicTopicName
  isExternal: false
  name: PublicTopicName
  nameWithType: AzureServiceBus<TAuthenticationToken>.PublicTopicName
  fullName: Cqrs.Azure.ServiceBus.AzureServiceBus<TAuthenticationToken>.PublicTopicName
  nameWithType.vb: AzureServiceBus(Of TAuthenticationToken).PublicTopicName
  fullName.vb: Cqrs.Azure.ServiceBus.AzureServiceBus(Of TAuthenticationToken).PublicTopicName
- uid: Cqrs.Azure.ServiceBus.AzureServiceBus`1.PrivateTopicSubscriptionName
  commentId: P:Cqrs.Azure.ServiceBus.AzureServiceBus`1.PrivateTopicSubscriptionName
  isExternal: false
  name: PrivateTopicSubscriptionName
  nameWithType: AzureServiceBus<TAuthenticationToken>.PrivateTopicSubscriptionName
  fullName: Cqrs.Azure.ServiceBus.AzureServiceBus<TAuthenticationToken>.PrivateTopicSubscriptionName
  nameWithType.vb: AzureServiceBus(Of TAuthenticationToken).PrivateTopicSubscriptionName
  fullName.vb: Cqrs.Azure.ServiceBus.AzureServiceBus(Of TAuthenticationToken).PrivateTopicSubscriptionName
- uid: Cqrs.Azure.ServiceBus.AzureServiceBus`1.PublicTopicSubscriptionName
  commentId: P:Cqrs.Azure.ServiceBus.AzureServiceBus`1.PublicTopicSubscriptionName
  isExternal: false
  name: PublicTopicSubscriptionName
  nameWithType: AzureServiceBus<TAuthenticationToken>.PublicTopicSubscriptionName
  fullName: Cqrs.Azure.ServiceBus.AzureServiceBus<TAuthenticationToken>.PublicTopicSubscriptionName
  nameWithType.vb: AzureServiceBus(Of TAuthenticationToken).PublicTopicSubscriptionName
  fullName.vb: Cqrs.Azure.ServiceBus.AzureServiceBus(Of TAuthenticationToken).PublicTopicSubscriptionName
- uid: Cqrs.Azure.ServiceBus.AzureServiceBus`1.ThrowExceptionOnReceiverMessageLockLostExceptionDuringComplete
  commentId: P:Cqrs.Azure.ServiceBus.AzureServiceBus`1.ThrowExceptionOnReceiverMessageLockLostExceptionDuringComplete
  isExternal: false
  name: ThrowExceptionOnReceiverMessageLockLostExceptionDuringComplete
  nameWithType: AzureServiceBus<TAuthenticationToken>.ThrowExceptionOnReceiverMessageLockLostExceptionDuringComplete
  fullName: Cqrs.Azure.ServiceBus.AzureServiceBus<TAuthenticationToken>.ThrowExceptionOnReceiverMessageLockLostExceptionDuringComplete
  nameWithType.vb: AzureServiceBus(Of TAuthenticationToken).ThrowExceptionOnReceiverMessageLockLostExceptionDuringComplete
  fullName.vb: Cqrs.Azure.ServiceBus.AzureServiceBus(Of TAuthenticationToken).ThrowExceptionOnReceiverMessageLockLostExceptionDuringComplete
- uid: Cqrs.Azure.ServiceBus.AzureServiceBus`1.DefaultPrivateTopicSubscriptionName
  commentId: F:Cqrs.Azure.ServiceBus.AzureServiceBus`1.DefaultPrivateTopicSubscriptionName
  isExternal: false
  name: DefaultPrivateTopicSubscriptionName
  nameWithType: AzureServiceBus<TAuthenticationToken>.DefaultPrivateTopicSubscriptionName
  fullName: Cqrs.Azure.ServiceBus.AzureServiceBus<TAuthenticationToken>.DefaultPrivateTopicSubscriptionName
  nameWithType.vb: AzureServiceBus(Of TAuthenticationToken).DefaultPrivateTopicSubscriptionName
  fullName.vb: Cqrs.Azure.ServiceBus.AzureServiceBus(Of TAuthenticationToken).DefaultPrivateTopicSubscriptionName
- uid: Cqrs.Azure.ServiceBus.AzureServiceBus`1.DefaultPublicTopicSubscriptionName
  commentId: F:Cqrs.Azure.ServiceBus.AzureServiceBus`1.DefaultPublicTopicSubscriptionName
  isExternal: false
  name: DefaultPublicTopicSubscriptionName
  nameWithType: AzureServiceBus<TAuthenticationToken>.DefaultPublicTopicSubscriptionName
  fullName: Cqrs.Azure.ServiceBus.AzureServiceBus<TAuthenticationToken>.DefaultPublicTopicSubscriptionName
  nameWithType.vb: AzureServiceBus(Of TAuthenticationToken).DefaultPublicTopicSubscriptionName
  fullName.vb: Cqrs.Azure.ServiceBus.AzureServiceBus(Of TAuthenticationToken).DefaultPublicTopicSubscriptionName
- uid: Cqrs.Azure.ServiceBus.AzureServiceBus`1.ReceiverMessageHandler
  commentId: P:Cqrs.Azure.ServiceBus.AzureServiceBus`1.ReceiverMessageHandler
  isExternal: false
  name: ReceiverMessageHandler
  nameWithType: AzureServiceBus<TAuthenticationToken>.ReceiverMessageHandler
  fullName: Cqrs.Azure.ServiceBus.AzureServiceBus<TAuthenticationToken>.ReceiverMessageHandler
  nameWithType.vb: AzureServiceBus(Of TAuthenticationToken).ReceiverMessageHandler
  fullName.vb: Cqrs.Azure.ServiceBus.AzureServiceBus(Of TAuthenticationToken).ReceiverMessageHandler
- uid: Cqrs.Azure.ServiceBus.AzureServiceBus`1.ReceiverMessageHandlerOptions
  commentId: P:Cqrs.Azure.ServiceBus.AzureServiceBus`1.ReceiverMessageHandlerOptions
  isExternal: false
  name: ReceiverMessageHandlerOptions
  nameWithType: AzureServiceBus<TAuthenticationToken>.ReceiverMessageHandlerOptions
  fullName: Cqrs.Azure.ServiceBus.AzureServiceBus<TAuthenticationToken>.ReceiverMessageHandlerOptions
  nameWithType.vb: AzureServiceBus(Of TAuthenticationToken).ReceiverMessageHandlerOptions
  fullName.vb: Cqrs.Azure.ServiceBus.AzureServiceBus(Of TAuthenticationToken).ReceiverMessageHandlerOptions
- uid: Cqrs.Azure.ServiceBus.AzureServiceBus`1.BusHelper
  commentId: P:Cqrs.Azure.ServiceBus.AzureServiceBus`1.BusHelper
  isExternal: false
  name: BusHelper
  nameWithType: AzureServiceBus<TAuthenticationToken>.BusHelper
  fullName: Cqrs.Azure.ServiceBus.AzureServiceBus<TAuthenticationToken>.BusHelper
  nameWithType.vb: AzureServiceBus(Of TAuthenticationToken).BusHelper
  fullName.vb: Cqrs.Azure.ServiceBus.AzureServiceBus(Of TAuthenticationToken).BusHelper
- uid: Cqrs.Azure.ServiceBus.AzureServiceBus`1.AzureBusHelper
  commentId: P:Cqrs.Azure.ServiceBus.AzureServiceBus`1.AzureBusHelper
  isExternal: false
  name: AzureBusHelper
  nameWithType: AzureServiceBus<TAuthenticationToken>.AzureBusHelper
  fullName: Cqrs.Azure.ServiceBus.AzureServiceBus<TAuthenticationToken>.AzureBusHelper
  nameWithType.vb: AzureServiceBus(Of TAuthenticationToken).AzureBusHelper
  fullName.vb: Cqrs.Azure.ServiceBus.AzureServiceBus(Of TAuthenticationToken).AzureBusHelper
- uid: Cqrs.Azure.ServiceBus.AzureServiceBus`1.TelemetryHelper
  commentId: P:Cqrs.Azure.ServiceBus.AzureServiceBus`1.TelemetryHelper
  isExternal: false
  name: TelemetryHelper
  nameWithType: AzureServiceBus<TAuthenticationToken>.TelemetryHelper
  fullName: Cqrs.Azure.ServiceBus.AzureServiceBus<TAuthenticationToken>.TelemetryHelper
  nameWithType.vb: AzureServiceBus(Of TAuthenticationToken).TelemetryHelper
  fullName.vb: Cqrs.Azure.ServiceBus.AzureServiceBus(Of TAuthenticationToken).TelemetryHelper
- uid: Cqrs.Azure.ServiceBus.AzureServiceBus`1.GetConnectionString
  commentId: M:Cqrs.Azure.ServiceBus.AzureServiceBus`1.GetConnectionString
  isExternal: false
  name: GetConnectionString()
  nameWithType: AzureServiceBus<TAuthenticationToken>.GetConnectionString()
  fullName: Cqrs.Azure.ServiceBus.AzureServiceBus<TAuthenticationToken>.GetConnectionString()
  nameWithType.vb: AzureServiceBus(Of TAuthenticationToken).GetConnectionString()
  fullName.vb: Cqrs.Azure.ServiceBus.AzureServiceBus(Of TAuthenticationToken).GetConnectionString()
  spec.csharp:
  - uid: Cqrs.Azure.ServiceBus.AzureServiceBus`1.GetConnectionString
    name: GetConnectionString
    nameWithType: AzureServiceBus<TAuthenticationToken>.GetConnectionString
    fullName: Cqrs.Azure.ServiceBus.AzureServiceBus<TAuthenticationToken>.GetConnectionString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.ServiceBus.AzureServiceBus`1.GetConnectionString
    name: GetConnectionString
    nameWithType: AzureServiceBus(Of TAuthenticationToken).GetConnectionString
    fullName: Cqrs.Azure.ServiceBus.AzureServiceBus(Of TAuthenticationToken).GetConnectionString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.ServiceBus.AzureServiceBus`1.InstantiatePublishing
  commentId: M:Cqrs.Azure.ServiceBus.AzureServiceBus`1.InstantiatePublishing
  isExternal: false
  name: InstantiatePublishing()
  nameWithType: AzureServiceBus<TAuthenticationToken>.InstantiatePublishing()
  fullName: Cqrs.Azure.ServiceBus.AzureServiceBus<TAuthenticationToken>.InstantiatePublishing()
  nameWithType.vb: AzureServiceBus(Of TAuthenticationToken).InstantiatePublishing()
  fullName.vb: Cqrs.Azure.ServiceBus.AzureServiceBus(Of TAuthenticationToken).InstantiatePublishing()
  spec.csharp:
  - uid: Cqrs.Azure.ServiceBus.AzureServiceBus`1.InstantiatePublishing
    name: InstantiatePublishing
    nameWithType: AzureServiceBus<TAuthenticationToken>.InstantiatePublishing
    fullName: Cqrs.Azure.ServiceBus.AzureServiceBus<TAuthenticationToken>.InstantiatePublishing
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.ServiceBus.AzureServiceBus`1.InstantiatePublishing
    name: InstantiatePublishing
    nameWithType: AzureServiceBus(Of TAuthenticationToken).InstantiatePublishing
    fullName: Cqrs.Azure.ServiceBus.AzureServiceBus(Of TAuthenticationToken).InstantiatePublishing
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.ServiceBus.AzureServiceBus`1.InstantiateReceiving
  commentId: M:Cqrs.Azure.ServiceBus.AzureServiceBus`1.InstantiateReceiving
  isExternal: false
  name: InstantiateReceiving()
  nameWithType: AzureServiceBus<TAuthenticationToken>.InstantiateReceiving()
  fullName: Cqrs.Azure.ServiceBus.AzureServiceBus<TAuthenticationToken>.InstantiateReceiving()
  nameWithType.vb: AzureServiceBus(Of TAuthenticationToken).InstantiateReceiving()
  fullName.vb: Cqrs.Azure.ServiceBus.AzureServiceBus(Of TAuthenticationToken).InstantiateReceiving()
  spec.csharp:
  - uid: Cqrs.Azure.ServiceBus.AzureServiceBus`1.InstantiateReceiving
    name: InstantiateReceiving
    nameWithType: AzureServiceBus<TAuthenticationToken>.InstantiateReceiving
    fullName: Cqrs.Azure.ServiceBus.AzureServiceBus<TAuthenticationToken>.InstantiateReceiving
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.ServiceBus.AzureServiceBus`1.InstantiateReceiving
    name: InstantiateReceiving
    nameWithType: AzureServiceBus(Of TAuthenticationToken).InstantiateReceiving
    fullName: Cqrs.Azure.ServiceBus.AzureServiceBus(Of TAuthenticationToken).InstantiateReceiving
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.ServiceBus.AzureServiceBus`1.InstantiateReceiving(NamespaceManager,IDictionary{System.Int32,SubscriptionClient},System.String,System.String)
  commentId: M:Cqrs.Azure.ServiceBus.AzureServiceBus`1.InstantiateReceiving(NamespaceManager,IDictionary{System.Int32,SubscriptionClient},System.String,System.String)
  isExternal: true
  name: InstantiateReceiving(NamespaceManager, IDictionary<Int32, SubscriptionClient>, String, String)
  nameWithType: AzureServiceBus<TAuthenticationToken>.InstantiateReceiving(NamespaceManager, IDictionary<Int32, SubscriptionClient>, String, String)
  fullName: Cqrs.Azure.ServiceBus.AzureServiceBus<TAuthenticationToken>.InstantiateReceiving(NamespaceManager, IDictionary<System.Int32, SubscriptionClient>, System.String, System.String)
  nameWithType.vb: AzureServiceBus(Of TAuthenticationToken).InstantiateReceiving(NamespaceManager, IDictionary(Of Int32, SubscriptionClient), String, String)
  fullName.vb: Cqrs.Azure.ServiceBus.AzureServiceBus(Of TAuthenticationToken).InstantiateReceiving(NamespaceManager, IDictionary(Of System.Int32, SubscriptionClient), System.String, System.String)
  name.vb: InstantiateReceiving(NamespaceManager, IDictionary(Of Int32, SubscriptionClient), String, String)
  spec.csharp:
  - uid: Cqrs.Azure.ServiceBus.AzureServiceBus`1.InstantiateReceiving(NamespaceManager,IDictionary{System.Int32,SubscriptionClient},System.String,System.String)
    name: InstantiateReceiving
    nameWithType: AzureServiceBus<TAuthenticationToken>.InstantiateReceiving
    fullName: Cqrs.Azure.ServiceBus.AzureServiceBus<TAuthenticationToken>.InstantiateReceiving
  - name: (
    nameWithType: (
    fullName: (
  - uid: NamespaceManager
    name: NamespaceManager
    nameWithType: NamespaceManager
    fullName: NamespaceManager
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SubscriptionClient
    name: SubscriptionClient
    nameWithType: SubscriptionClient
    fullName: SubscriptionClient
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.ServiceBus.AzureServiceBus`1.InstantiateReceiving(NamespaceManager,IDictionary{System.Int32,SubscriptionClient},System.String,System.String)
    name: InstantiateReceiving
    nameWithType: AzureServiceBus(Of TAuthenticationToken).InstantiateReceiving
    fullName: Cqrs.Azure.ServiceBus.AzureServiceBus(Of TAuthenticationToken).InstantiateReceiving
  - name: (
    nameWithType: (
    fullName: (
  - uid: NamespaceManager
    name: NamespaceManager
    nameWithType: NamespaceManager
    fullName: NamespaceManager
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SubscriptionClient
    name: SubscriptionClient
    nameWithType: SubscriptionClient
    fullName: SubscriptionClient
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.ServiceBus.AzureServiceBus`1.CheckPrivateTopicExists(NamespaceManager)
  commentId: M:Cqrs.Azure.ServiceBus.AzureServiceBus`1.CheckPrivateTopicExists(NamespaceManager)
  isExternal: true
  name: CheckPrivateTopicExists(NamespaceManager)
  nameWithType: AzureServiceBus<TAuthenticationToken>.CheckPrivateTopicExists(NamespaceManager)
  fullName: Cqrs.Azure.ServiceBus.AzureServiceBus<TAuthenticationToken>.CheckPrivateTopicExists(NamespaceManager)
  nameWithType.vb: AzureServiceBus(Of TAuthenticationToken).CheckPrivateTopicExists(NamespaceManager)
  fullName.vb: Cqrs.Azure.ServiceBus.AzureServiceBus(Of TAuthenticationToken).CheckPrivateTopicExists(NamespaceManager)
  spec.csharp:
  - uid: Cqrs.Azure.ServiceBus.AzureServiceBus`1.CheckPrivateTopicExists(NamespaceManager)
    name: CheckPrivateTopicExists
    nameWithType: AzureServiceBus<TAuthenticationToken>.CheckPrivateTopicExists
    fullName: Cqrs.Azure.ServiceBus.AzureServiceBus<TAuthenticationToken>.CheckPrivateTopicExists
  - name: (
    nameWithType: (
    fullName: (
  - uid: NamespaceManager
    name: NamespaceManager
    nameWithType: NamespaceManager
    fullName: NamespaceManager
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.ServiceBus.AzureServiceBus`1.CheckPrivateTopicExists(NamespaceManager)
    name: CheckPrivateTopicExists
    nameWithType: AzureServiceBus(Of TAuthenticationToken).CheckPrivateTopicExists
    fullName: Cqrs.Azure.ServiceBus.AzureServiceBus(Of TAuthenticationToken).CheckPrivateTopicExists
  - name: (
    nameWithType: (
    fullName: (
  - uid: NamespaceManager
    name: NamespaceManager
    nameWithType: NamespaceManager
    fullName: NamespaceManager
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.ServiceBus.AzureServiceBus`1.CheckPublicTopicExists(NamespaceManager)
  commentId: M:Cqrs.Azure.ServiceBus.AzureServiceBus`1.CheckPublicTopicExists(NamespaceManager)
  isExternal: true
  name: CheckPublicTopicExists(NamespaceManager)
  nameWithType: AzureServiceBus<TAuthenticationToken>.CheckPublicTopicExists(NamespaceManager)
  fullName: Cqrs.Azure.ServiceBus.AzureServiceBus<TAuthenticationToken>.CheckPublicTopicExists(NamespaceManager)
  nameWithType.vb: AzureServiceBus(Of TAuthenticationToken).CheckPublicTopicExists(NamespaceManager)
  fullName.vb: Cqrs.Azure.ServiceBus.AzureServiceBus(Of TAuthenticationToken).CheckPublicTopicExists(NamespaceManager)
  spec.csharp:
  - uid: Cqrs.Azure.ServiceBus.AzureServiceBus`1.CheckPublicTopicExists(NamespaceManager)
    name: CheckPublicTopicExists
    nameWithType: AzureServiceBus<TAuthenticationToken>.CheckPublicTopicExists
    fullName: Cqrs.Azure.ServiceBus.AzureServiceBus<TAuthenticationToken>.CheckPublicTopicExists
  - name: (
    nameWithType: (
    fullName: (
  - uid: NamespaceManager
    name: NamespaceManager
    nameWithType: NamespaceManager
    fullName: NamespaceManager
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.ServiceBus.AzureServiceBus`1.CheckPublicTopicExists(NamespaceManager)
    name: CheckPublicTopicExists
    nameWithType: AzureServiceBus(Of TAuthenticationToken).CheckPublicTopicExists
    fullName: Cqrs.Azure.ServiceBus.AzureServiceBus(Of TAuthenticationToken).CheckPublicTopicExists
  - name: (
    nameWithType: (
    fullName: (
  - uid: NamespaceManager
    name: NamespaceManager
    nameWithType: NamespaceManager
    fullName: NamespaceManager
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.ServiceBus.AzureServiceBus`1.CheckTopicExists(NamespaceManager,System.String,System.String)
  commentId: M:Cqrs.Azure.ServiceBus.AzureServiceBus`1.CheckTopicExists(NamespaceManager,System.String,System.String)
  isExternal: true
  name: CheckTopicExists(NamespaceManager, String, String)
  nameWithType: AzureServiceBus<TAuthenticationToken>.CheckTopicExists(NamespaceManager, String, String)
  fullName: Cqrs.Azure.ServiceBus.AzureServiceBus<TAuthenticationToken>.CheckTopicExists(NamespaceManager, System.String, System.String)
  nameWithType.vb: AzureServiceBus(Of TAuthenticationToken).CheckTopicExists(NamespaceManager, String, String)
  fullName.vb: Cqrs.Azure.ServiceBus.AzureServiceBus(Of TAuthenticationToken).CheckTopicExists(NamespaceManager, System.String, System.String)
  spec.csharp:
  - uid: Cqrs.Azure.ServiceBus.AzureServiceBus`1.CheckTopicExists(NamespaceManager,System.String,System.String)
    name: CheckTopicExists
    nameWithType: AzureServiceBus<TAuthenticationToken>.CheckTopicExists
    fullName: Cqrs.Azure.ServiceBus.AzureServiceBus<TAuthenticationToken>.CheckTopicExists
  - name: (
    nameWithType: (
    fullName: (
  - uid: NamespaceManager
    name: NamespaceManager
    nameWithType: NamespaceManager
    fullName: NamespaceManager
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.ServiceBus.AzureServiceBus`1.CheckTopicExists(NamespaceManager,System.String,System.String)
    name: CheckTopicExists
    nameWithType: AzureServiceBus(Of TAuthenticationToken).CheckTopicExists
    fullName: Cqrs.Azure.ServiceBus.AzureServiceBus(Of TAuthenticationToken).CheckTopicExists
  - name: (
    nameWithType: (
    fullName: (
  - uid: NamespaceManager
    name: NamespaceManager
    nameWithType: NamespaceManager
    fullName: NamespaceManager
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.ServiceBus.AzureServiceBus`1.TriggerSettingsChecking
  commentId: M:Cqrs.Azure.ServiceBus.AzureServiceBus`1.TriggerSettingsChecking
  isExternal: false
  name: TriggerSettingsChecking()
  nameWithType: AzureServiceBus<TAuthenticationToken>.TriggerSettingsChecking()
  fullName: Cqrs.Azure.ServiceBus.AzureServiceBus<TAuthenticationToken>.TriggerSettingsChecking()
  nameWithType.vb: AzureServiceBus(Of TAuthenticationToken).TriggerSettingsChecking()
  fullName.vb: Cqrs.Azure.ServiceBus.AzureServiceBus(Of TAuthenticationToken).TriggerSettingsChecking()
  spec.csharp:
  - uid: Cqrs.Azure.ServiceBus.AzureServiceBus`1.TriggerSettingsChecking
    name: TriggerSettingsChecking
    nameWithType: AzureServiceBus<TAuthenticationToken>.TriggerSettingsChecking
    fullName: Cqrs.Azure.ServiceBus.AzureServiceBus<TAuthenticationToken>.TriggerSettingsChecking
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.ServiceBus.AzureServiceBus`1.TriggerSettingsChecking
    name: TriggerSettingsChecking
    nameWithType: AzureServiceBus(Of TAuthenticationToken).TriggerSettingsChecking
    fullName: Cqrs.Azure.ServiceBus.AzureServiceBus(Of TAuthenticationToken).TriggerSettingsChecking
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.ServiceBus.AzureServiceBus`1.TriggerSettingsChecking(TopicClient,IDictionary{System.Int32,SubscriptionClient})
  commentId: M:Cqrs.Azure.ServiceBus.AzureServiceBus`1.TriggerSettingsChecking(TopicClient,IDictionary{System.Int32,SubscriptionClient})
  isExternal: true
  name: TriggerSettingsChecking(TopicClient, IDictionary<Int32, SubscriptionClient>)
  nameWithType: AzureServiceBus<TAuthenticationToken>.TriggerSettingsChecking(TopicClient, IDictionary<Int32, SubscriptionClient>)
  fullName: Cqrs.Azure.ServiceBus.AzureServiceBus<TAuthenticationToken>.TriggerSettingsChecking(TopicClient, IDictionary<System.Int32, SubscriptionClient>)
  nameWithType.vb: AzureServiceBus(Of TAuthenticationToken).TriggerSettingsChecking(TopicClient, IDictionary(Of Int32, SubscriptionClient))
  fullName.vb: Cqrs.Azure.ServiceBus.AzureServiceBus(Of TAuthenticationToken).TriggerSettingsChecking(TopicClient, IDictionary(Of System.Int32, SubscriptionClient))
  name.vb: TriggerSettingsChecking(TopicClient, IDictionary(Of Int32, SubscriptionClient))
  spec.csharp:
  - uid: Cqrs.Azure.ServiceBus.AzureServiceBus`1.TriggerSettingsChecking(TopicClient,IDictionary{System.Int32,SubscriptionClient})
    name: TriggerSettingsChecking
    nameWithType: AzureServiceBus<TAuthenticationToken>.TriggerSettingsChecking
    fullName: Cqrs.Azure.ServiceBus.AzureServiceBus<TAuthenticationToken>.TriggerSettingsChecking
  - name: (
    nameWithType: (
    fullName: (
  - uid: TopicClient
    name: TopicClient
    nameWithType: TopicClient
    fullName: TopicClient
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SubscriptionClient
    name: SubscriptionClient
    nameWithType: SubscriptionClient
    fullName: SubscriptionClient
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.ServiceBus.AzureServiceBus`1.TriggerSettingsChecking(TopicClient,IDictionary{System.Int32,SubscriptionClient})
    name: TriggerSettingsChecking
    nameWithType: AzureServiceBus(Of TAuthenticationToken).TriggerSettingsChecking
    fullName: Cqrs.Azure.ServiceBus.AzureServiceBus(Of TAuthenticationToken).TriggerSettingsChecking
  - name: (
    nameWithType: (
    fullName: (
  - uid: TopicClient
    name: TopicClient
    nameWithType: TopicClient
    fullName: TopicClient
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SubscriptionClient
    name: SubscriptionClient
    nameWithType: SubscriptionClient
    fullName: SubscriptionClient
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.ServiceBus.AzureServiceBus`1.RegisterReceiverMessageHandler(Action{BrokeredMessage},OnMessageOptions)
  commentId: M:Cqrs.Azure.ServiceBus.AzureServiceBus`1.RegisterReceiverMessageHandler(Action{BrokeredMessage},OnMessageOptions)
  isExternal: true
  name: RegisterReceiverMessageHandler(Action<BrokeredMessage>, OnMessageOptions)
  nameWithType: AzureServiceBus<TAuthenticationToken>.RegisterReceiverMessageHandler(Action<BrokeredMessage>, OnMessageOptions)
  fullName: Cqrs.Azure.ServiceBus.AzureServiceBus<TAuthenticationToken>.RegisterReceiverMessageHandler(Action<BrokeredMessage>, OnMessageOptions)
  nameWithType.vb: AzureServiceBus(Of TAuthenticationToken).RegisterReceiverMessageHandler(Action(Of BrokeredMessage), OnMessageOptions)
  fullName.vb: Cqrs.Azure.ServiceBus.AzureServiceBus(Of TAuthenticationToken).RegisterReceiverMessageHandler(Action(Of BrokeredMessage), OnMessageOptions)
  name.vb: RegisterReceiverMessageHandler(Action(Of BrokeredMessage), OnMessageOptions)
  spec.csharp:
  - uid: Cqrs.Azure.ServiceBus.AzureServiceBus`1.RegisterReceiverMessageHandler(Action{BrokeredMessage},OnMessageOptions)
    name: RegisterReceiverMessageHandler
    nameWithType: AzureServiceBus<TAuthenticationToken>.RegisterReceiverMessageHandler
    fullName: Cqrs.Azure.ServiceBus.AzureServiceBus<TAuthenticationToken>.RegisterReceiverMessageHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BrokeredMessage
    name: BrokeredMessage
    nameWithType: BrokeredMessage
    fullName: BrokeredMessage
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OnMessageOptions
    name: OnMessageOptions
    nameWithType: OnMessageOptions
    fullName: OnMessageOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.ServiceBus.AzureServiceBus`1.RegisterReceiverMessageHandler(Action{BrokeredMessage},OnMessageOptions)
    name: RegisterReceiverMessageHandler
    nameWithType: AzureServiceBus(Of TAuthenticationToken).RegisterReceiverMessageHandler
    fullName: Cqrs.Azure.ServiceBus.AzureServiceBus(Of TAuthenticationToken).RegisterReceiverMessageHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BrokeredMessage
    name: BrokeredMessage
    nameWithType: BrokeredMessage
    fullName: BrokeredMessage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OnMessageOptions
    name: OnMessageOptions
    nameWithType: OnMessageOptions
    fullName: OnMessageOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.ServiceBus.AzureServiceBus`1.StoreReceiverMessageHandler(Action{BrokeredMessage},OnMessageOptions)
  commentId: M:Cqrs.Azure.ServiceBus.AzureServiceBus`1.StoreReceiverMessageHandler(Action{BrokeredMessage},OnMessageOptions)
  isExternal: true
  name: StoreReceiverMessageHandler(Action<BrokeredMessage>, OnMessageOptions)
  nameWithType: AzureServiceBus<TAuthenticationToken>.StoreReceiverMessageHandler(Action<BrokeredMessage>, OnMessageOptions)
  fullName: Cqrs.Azure.ServiceBus.AzureServiceBus<TAuthenticationToken>.StoreReceiverMessageHandler(Action<BrokeredMessage>, OnMessageOptions)
  nameWithType.vb: AzureServiceBus(Of TAuthenticationToken).StoreReceiverMessageHandler(Action(Of BrokeredMessage), OnMessageOptions)
  fullName.vb: Cqrs.Azure.ServiceBus.AzureServiceBus(Of TAuthenticationToken).StoreReceiverMessageHandler(Action(Of BrokeredMessage), OnMessageOptions)
  name.vb: StoreReceiverMessageHandler(Action(Of BrokeredMessage), OnMessageOptions)
  spec.csharp:
  - uid: Cqrs.Azure.ServiceBus.AzureServiceBus`1.StoreReceiverMessageHandler(Action{BrokeredMessage},OnMessageOptions)
    name: StoreReceiverMessageHandler
    nameWithType: AzureServiceBus<TAuthenticationToken>.StoreReceiverMessageHandler
    fullName: Cqrs.Azure.ServiceBus.AzureServiceBus<TAuthenticationToken>.StoreReceiverMessageHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BrokeredMessage
    name: BrokeredMessage
    nameWithType: BrokeredMessage
    fullName: BrokeredMessage
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OnMessageOptions
    name: OnMessageOptions
    nameWithType: OnMessageOptions
    fullName: OnMessageOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.ServiceBus.AzureServiceBus`1.StoreReceiverMessageHandler(Action{BrokeredMessage},OnMessageOptions)
    name: StoreReceiverMessageHandler
    nameWithType: AzureServiceBus(Of TAuthenticationToken).StoreReceiverMessageHandler
    fullName: Cqrs.Azure.ServiceBus.AzureServiceBus(Of TAuthenticationToken).StoreReceiverMessageHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BrokeredMessage
    name: BrokeredMessage
    nameWithType: BrokeredMessage
    fullName: BrokeredMessage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OnMessageOptions
    name: OnMessageOptions
    nameWithType: OnMessageOptions
    fullName: OnMessageOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.ServiceBus.AzureServiceBus`1.ApplyReceiverMessageHandler
  commentId: M:Cqrs.Azure.ServiceBus.AzureServiceBus`1.ApplyReceiverMessageHandler
  isExternal: false
  name: ApplyReceiverMessageHandler()
  nameWithType: AzureServiceBus<TAuthenticationToken>.ApplyReceiverMessageHandler()
  fullName: Cqrs.Azure.ServiceBus.AzureServiceBus<TAuthenticationToken>.ApplyReceiverMessageHandler()
  nameWithType.vb: AzureServiceBus(Of TAuthenticationToken).ApplyReceiverMessageHandler()
  fullName.vb: Cqrs.Azure.ServiceBus.AzureServiceBus(Of TAuthenticationToken).ApplyReceiverMessageHandler()
  spec.csharp:
  - uid: Cqrs.Azure.ServiceBus.AzureServiceBus`1.ApplyReceiverMessageHandler
    name: ApplyReceiverMessageHandler
    nameWithType: AzureServiceBus<TAuthenticationToken>.ApplyReceiverMessageHandler
    fullName: Cqrs.Azure.ServiceBus.AzureServiceBus<TAuthenticationToken>.ApplyReceiverMessageHandler
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.ServiceBus.AzureServiceBus`1.ApplyReceiverMessageHandler
    name: ApplyReceiverMessageHandler
    nameWithType: AzureServiceBus(Of TAuthenticationToken).ApplyReceiverMessageHandler
    fullName: Cqrs.Azure.ServiceBus.AzureServiceBus(Of TAuthenticationToken).ApplyReceiverMessageHandler
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.ServiceBus.AzureServiceBus`1.CleanUpDeadLetters(System.String,System.String)
  commentId: M:Cqrs.Azure.ServiceBus.AzureServiceBus`1.CleanUpDeadLetters(System.String,System.String)
  isExternal: true
  name: CleanUpDeadLetters(String, String)
  nameWithType: AzureServiceBus<TAuthenticationToken>.CleanUpDeadLetters(String, String)
  fullName: Cqrs.Azure.ServiceBus.AzureServiceBus<TAuthenticationToken>.CleanUpDeadLetters(System.String, System.String)
  nameWithType.vb: AzureServiceBus(Of TAuthenticationToken).CleanUpDeadLetters(String, String)
  fullName.vb: Cqrs.Azure.ServiceBus.AzureServiceBus(Of TAuthenticationToken).CleanUpDeadLetters(System.String, System.String)
  spec.csharp:
  - uid: Cqrs.Azure.ServiceBus.AzureServiceBus`1.CleanUpDeadLetters(System.String,System.String)
    name: CleanUpDeadLetters
    nameWithType: AzureServiceBus<TAuthenticationToken>.CleanUpDeadLetters
    fullName: Cqrs.Azure.ServiceBus.AzureServiceBus<TAuthenticationToken>.CleanUpDeadLetters
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.ServiceBus.AzureServiceBus`1.CleanUpDeadLetters(System.String,System.String)
    name: CleanUpDeadLetters
    nameWithType: AzureServiceBus(Of TAuthenticationToken).CleanUpDeadLetters
    fullName: Cqrs.Azure.ServiceBus.AzureServiceBus(Of TAuthenticationToken).CleanUpDeadLetters
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.ServiceBus.AzureBus`1.ConnectionString
  commentId: P:Cqrs.Azure.ServiceBus.AzureBus`1.ConnectionString
  isExternal: false
  name: ConnectionString
  nameWithType: AzureBus<TAuthenticationToken>.ConnectionString
  fullName: Cqrs.Azure.ServiceBus.AzureBus<TAuthenticationToken>.ConnectionString
  nameWithType.vb: AzureBus(Of TAuthenticationToken).ConnectionString
  fullName.vb: Cqrs.Azure.ServiceBus.AzureBus(Of TAuthenticationToken).ConnectionString
- uid: Cqrs.Azure.ServiceBus.AzureBus`1.MessageSerialiser
  commentId: P:Cqrs.Azure.ServiceBus.AzureBus`1.MessageSerialiser
  isExternal: false
  name: MessageSerialiser
  nameWithType: AzureBus<TAuthenticationToken>.MessageSerialiser
  fullName: Cqrs.Azure.ServiceBus.AzureBus<TAuthenticationToken>.MessageSerialiser
  nameWithType.vb: AzureBus(Of TAuthenticationToken).MessageSerialiser
  fullName.vb: Cqrs.Azure.ServiceBus.AzureBus(Of TAuthenticationToken).MessageSerialiser
- uid: Cqrs.Azure.ServiceBus.AzureBus`1.AuthenticationTokenHelper
  commentId: P:Cqrs.Azure.ServiceBus.AzureBus`1.AuthenticationTokenHelper
  isExternal: false
  name: AuthenticationTokenHelper
  nameWithType: AzureBus<TAuthenticationToken>.AuthenticationTokenHelper
  fullName: Cqrs.Azure.ServiceBus.AzureBus<TAuthenticationToken>.AuthenticationTokenHelper
  nameWithType.vb: AzureBus(Of TAuthenticationToken).AuthenticationTokenHelper
  fullName.vb: Cqrs.Azure.ServiceBus.AzureBus(Of TAuthenticationToken).AuthenticationTokenHelper
- uid: Cqrs.Azure.ServiceBus.AzureBus`1.CorrelationIdHelper
  commentId: P:Cqrs.Azure.ServiceBus.AzureBus`1.CorrelationIdHelper
  isExternal: false
  name: CorrelationIdHelper
  nameWithType: AzureBus<TAuthenticationToken>.CorrelationIdHelper
  fullName: Cqrs.Azure.ServiceBus.AzureBus<TAuthenticationToken>.CorrelationIdHelper
  nameWithType.vb: AzureBus(Of TAuthenticationToken).CorrelationIdHelper
  fullName.vb: Cqrs.Azure.ServiceBus.AzureBus(Of TAuthenticationToken).CorrelationIdHelper
- uid: Cqrs.Azure.ServiceBus.AzureBus`1.Logger
  commentId: P:Cqrs.Azure.ServiceBus.AzureBus`1.Logger
  isExternal: false
  name: Logger
  nameWithType: AzureBus<TAuthenticationToken>.Logger
  fullName: Cqrs.Azure.ServiceBus.AzureBus<TAuthenticationToken>.Logger
  nameWithType.vb: AzureBus(Of TAuthenticationToken).Logger
  fullName.vb: Cqrs.Azure.ServiceBus.AzureBus(Of TAuthenticationToken).Logger
- uid: Cqrs.Azure.ServiceBus.AzureBus`1.ConfigurationManager
  commentId: P:Cqrs.Azure.ServiceBus.AzureBus`1.ConfigurationManager
  isExternal: false
  name: ConfigurationManager
  nameWithType: AzureBus<TAuthenticationToken>.ConfigurationManager
  fullName: Cqrs.Azure.ServiceBus.AzureBus<TAuthenticationToken>.ConfigurationManager
  nameWithType.vb: AzureBus(Of TAuthenticationToken).ConfigurationManager
  fullName.vb: Cqrs.Azure.ServiceBus.AzureBus(Of TAuthenticationToken).ConfigurationManager
- uid: Cqrs.Azure.ServiceBus.AzureBus`1.EventWaits
  commentId: P:Cqrs.Azure.ServiceBus.AzureBus`1.EventWaits
  isExternal: false
  name: EventWaits
  nameWithType: AzureBus<TAuthenticationToken>.EventWaits
  fullName: Cqrs.Azure.ServiceBus.AzureBus<TAuthenticationToken>.EventWaits
  nameWithType.vb: AzureBus(Of TAuthenticationToken).EventWaits
  fullName.vb: Cqrs.Azure.ServiceBus.AzureBus(Of TAuthenticationToken).EventWaits
- uid: Cqrs.Azure.ServiceBus.AzureBus`1.DefaultNumberOfReceiversCount
  commentId: F:Cqrs.Azure.ServiceBus.AzureBus`1.DefaultNumberOfReceiversCount
  isExternal: false
  name: DefaultNumberOfReceiversCount
  nameWithType: AzureBus<TAuthenticationToken>.DefaultNumberOfReceiversCount
  fullName: Cqrs.Azure.ServiceBus.AzureBus<TAuthenticationToken>.DefaultNumberOfReceiversCount
  nameWithType.vb: AzureBus(Of TAuthenticationToken).DefaultNumberOfReceiversCount
  fullName.vb: Cqrs.Azure.ServiceBus.AzureBus(Of TAuthenticationToken).DefaultNumberOfReceiversCount
- uid: Cqrs.Azure.ServiceBus.AzureBus`1.NumberOfReceiversCount
  commentId: P:Cqrs.Azure.ServiceBus.AzureBus`1.NumberOfReceiversCount
  isExternal: false
  name: NumberOfReceiversCount
  nameWithType: AzureBus<TAuthenticationToken>.NumberOfReceiversCount
  fullName: Cqrs.Azure.ServiceBus.AzureBus<TAuthenticationToken>.NumberOfReceiversCount
  nameWithType.vb: AzureBus(Of TAuthenticationToken).NumberOfReceiversCount
  fullName.vb: Cqrs.Azure.ServiceBus.AzureBus(Of TAuthenticationToken).NumberOfReceiversCount
- uid: Cqrs.Azure.ServiceBus.AzureBus`1.DefaultMaximumConcurrentReceiverProcessesCount
  commentId: F:Cqrs.Azure.ServiceBus.AzureBus`1.DefaultMaximumConcurrentReceiverProcessesCount
  isExternal: false
  name: DefaultMaximumConcurrentReceiverProcessesCount
  nameWithType: AzureBus<TAuthenticationToken>.DefaultMaximumConcurrentReceiverProcessesCount
  fullName: Cqrs.Azure.ServiceBus.AzureBus<TAuthenticationToken>.DefaultMaximumConcurrentReceiverProcessesCount
  nameWithType.vb: AzureBus(Of TAuthenticationToken).DefaultMaximumConcurrentReceiverProcessesCount
  fullName.vb: Cqrs.Azure.ServiceBus.AzureBus(Of TAuthenticationToken).DefaultMaximumConcurrentReceiverProcessesCount
- uid: Cqrs.Azure.ServiceBus.AzureBus`1.MaximumConcurrentReceiverProcessesCount
  commentId: P:Cqrs.Azure.ServiceBus.AzureBus`1.MaximumConcurrentReceiverProcessesCount
  isExternal: false
  name: MaximumConcurrentReceiverProcessesCount
  nameWithType: AzureBus<TAuthenticationToken>.MaximumConcurrentReceiverProcessesCount
  fullName: Cqrs.Azure.ServiceBus.AzureBus<TAuthenticationToken>.MaximumConcurrentReceiverProcessesCount
  nameWithType.vb: AzureBus(Of TAuthenticationToken).MaximumConcurrentReceiverProcessesCount
  fullName.vb: Cqrs.Azure.ServiceBus.AzureBus(Of TAuthenticationToken).MaximumConcurrentReceiverProcessesCount
- uid: Cqrs.Azure.ServiceBus.AzureBus`1.SetConnectionStrings
  commentId: M:Cqrs.Azure.ServiceBus.AzureBus`1.SetConnectionStrings
  isExternal: false
  name: SetConnectionStrings()
  nameWithType: AzureBus<TAuthenticationToken>.SetConnectionStrings()
  fullName: Cqrs.Azure.ServiceBus.AzureBus<TAuthenticationToken>.SetConnectionStrings()
  nameWithType.vb: AzureBus(Of TAuthenticationToken).SetConnectionStrings()
  fullName.vb: Cqrs.Azure.ServiceBus.AzureBus(Of TAuthenticationToken).SetConnectionStrings()
  spec.csharp:
  - uid: Cqrs.Azure.ServiceBus.AzureBus`1.SetConnectionStrings
    name: SetConnectionStrings
    nameWithType: AzureBus<TAuthenticationToken>.SetConnectionStrings
    fullName: Cqrs.Azure.ServiceBus.AzureBus<TAuthenticationToken>.SetConnectionStrings
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.ServiceBus.AzureBus`1.SetConnectionStrings
    name: SetConnectionStrings
    nameWithType: AzureBus(Of TAuthenticationToken).SetConnectionStrings
    fullName: Cqrs.Azure.ServiceBus.AzureBus(Of TAuthenticationToken).SetConnectionStrings
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.ServiceBus.AzureBus`1.SetNumberOfReceiversCount
  commentId: M:Cqrs.Azure.ServiceBus.AzureBus`1.SetNumberOfReceiversCount
  isExternal: false
  name: SetNumberOfReceiversCount()
  nameWithType: AzureBus<TAuthenticationToken>.SetNumberOfReceiversCount()
  fullName: Cqrs.Azure.ServiceBus.AzureBus<TAuthenticationToken>.SetNumberOfReceiversCount()
  nameWithType.vb: AzureBus(Of TAuthenticationToken).SetNumberOfReceiversCount()
  fullName.vb: Cqrs.Azure.ServiceBus.AzureBus(Of TAuthenticationToken).SetNumberOfReceiversCount()
  spec.csharp:
  - uid: Cqrs.Azure.ServiceBus.AzureBus`1.SetNumberOfReceiversCount
    name: SetNumberOfReceiversCount
    nameWithType: AzureBus<TAuthenticationToken>.SetNumberOfReceiversCount
    fullName: Cqrs.Azure.ServiceBus.AzureBus<TAuthenticationToken>.SetNumberOfReceiversCount
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.ServiceBus.AzureBus`1.SetNumberOfReceiversCount
    name: SetNumberOfReceiversCount
    nameWithType: AzureBus(Of TAuthenticationToken).SetNumberOfReceiversCount
    fullName: Cqrs.Azure.ServiceBus.AzureBus(Of TAuthenticationToken).SetNumberOfReceiversCount
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.ServiceBus.AzureBus`1.SetMaximumConcurrentReceiverProcessesCount
  commentId: M:Cqrs.Azure.ServiceBus.AzureBus`1.SetMaximumConcurrentReceiverProcessesCount
  isExternal: false
  name: SetMaximumConcurrentReceiverProcessesCount()
  nameWithType: AzureBus<TAuthenticationToken>.SetMaximumConcurrentReceiverProcessesCount()
  fullName: Cqrs.Azure.ServiceBus.AzureBus<TAuthenticationToken>.SetMaximumConcurrentReceiverProcessesCount()
  nameWithType.vb: AzureBus(Of TAuthenticationToken).SetMaximumConcurrentReceiverProcessesCount()
  fullName.vb: Cqrs.Azure.ServiceBus.AzureBus(Of TAuthenticationToken).SetMaximumConcurrentReceiverProcessesCount()
  spec.csharp:
  - uid: Cqrs.Azure.ServiceBus.AzureBus`1.SetMaximumConcurrentReceiverProcessesCount
    name: SetMaximumConcurrentReceiverProcessesCount
    nameWithType: AzureBus<TAuthenticationToken>.SetMaximumConcurrentReceiverProcessesCount
    fullName: Cqrs.Azure.ServiceBus.AzureBus<TAuthenticationToken>.SetMaximumConcurrentReceiverProcessesCount
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.ServiceBus.AzureBus`1.SetMaximumConcurrentReceiverProcessesCount
    name: SetMaximumConcurrentReceiverProcessesCount
    nameWithType: AzureBus(Of TAuthenticationToken).SetMaximumConcurrentReceiverProcessesCount
    fullName: Cqrs.Azure.ServiceBus.AzureBus(Of TAuthenticationToken).SetMaximumConcurrentReceiverProcessesCount
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.ServiceBus.AzureBus`1.GetCurrentNumberOfReceiversCount
  commentId: M:Cqrs.Azure.ServiceBus.AzureBus`1.GetCurrentNumberOfReceiversCount
  isExternal: false
  name: GetCurrentNumberOfReceiversCount()
  nameWithType: AzureBus<TAuthenticationToken>.GetCurrentNumberOfReceiversCount()
  fullName: Cqrs.Azure.ServiceBus.AzureBus<TAuthenticationToken>.GetCurrentNumberOfReceiversCount()
  nameWithType.vb: AzureBus(Of TAuthenticationToken).GetCurrentNumberOfReceiversCount()
  fullName.vb: Cqrs.Azure.ServiceBus.AzureBus(Of TAuthenticationToken).GetCurrentNumberOfReceiversCount()
  spec.csharp:
  - uid: Cqrs.Azure.ServiceBus.AzureBus`1.GetCurrentNumberOfReceiversCount
    name: GetCurrentNumberOfReceiversCount
    nameWithType: AzureBus<TAuthenticationToken>.GetCurrentNumberOfReceiversCount
    fullName: Cqrs.Azure.ServiceBus.AzureBus<TAuthenticationToken>.GetCurrentNumberOfReceiversCount
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.ServiceBus.AzureBus`1.GetCurrentNumberOfReceiversCount
    name: GetCurrentNumberOfReceiversCount
    nameWithType: AzureBus(Of TAuthenticationToken).GetCurrentNumberOfReceiversCount
    fullName: Cqrs.Azure.ServiceBus.AzureBus(Of TAuthenticationToken).GetCurrentNumberOfReceiversCount
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.ServiceBus.AzureBus`1.GetCurrentMaximumConcurrentReceiverProcessesCount
  commentId: M:Cqrs.Azure.ServiceBus.AzureBus`1.GetCurrentMaximumConcurrentReceiverProcessesCount
  isExternal: false
  name: GetCurrentMaximumConcurrentReceiverProcessesCount()
  nameWithType: AzureBus<TAuthenticationToken>.GetCurrentMaximumConcurrentReceiverProcessesCount()
  fullName: Cqrs.Azure.ServiceBus.AzureBus<TAuthenticationToken>.GetCurrentMaximumConcurrentReceiverProcessesCount()
  nameWithType.vb: AzureBus(Of TAuthenticationToken).GetCurrentMaximumConcurrentReceiverProcessesCount()
  fullName.vb: Cqrs.Azure.ServiceBus.AzureBus(Of TAuthenticationToken).GetCurrentMaximumConcurrentReceiverProcessesCount()
  spec.csharp:
  - uid: Cqrs.Azure.ServiceBus.AzureBus`1.GetCurrentMaximumConcurrentReceiverProcessesCount
    name: GetCurrentMaximumConcurrentReceiverProcessesCount
    nameWithType: AzureBus<TAuthenticationToken>.GetCurrentMaximumConcurrentReceiverProcessesCount
    fullName: Cqrs.Azure.ServiceBus.AzureBus<TAuthenticationToken>.GetCurrentMaximumConcurrentReceiverProcessesCount
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.ServiceBus.AzureBus`1.GetCurrentMaximumConcurrentReceiverProcessesCount
    name: GetCurrentMaximumConcurrentReceiverProcessesCount
    nameWithType: AzureBus(Of TAuthenticationToken).GetCurrentMaximumConcurrentReceiverProcessesCount
    fullName: Cqrs.Azure.ServiceBus.AzureBus(Of TAuthenticationToken).GetCurrentMaximumConcurrentReceiverProcessesCount
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.ServiceBus.AzureBus`1.GetNamespaceManager
  commentId: M:Cqrs.Azure.ServiceBus.AzureBus`1.GetNamespaceManager
  isExternal: false
  name: GetNamespaceManager()
  nameWithType: AzureBus<TAuthenticationToken>.GetNamespaceManager()
  fullName: Cqrs.Azure.ServiceBus.AzureBus<TAuthenticationToken>.GetNamespaceManager()
  nameWithType.vb: AzureBus(Of TAuthenticationToken).GetNamespaceManager()
  fullName.vb: Cqrs.Azure.ServiceBus.AzureBus(Of TAuthenticationToken).GetNamespaceManager()
  spec.csharp:
  - uid: Cqrs.Azure.ServiceBus.AzureBus`1.GetNamespaceManager
    name: GetNamespaceManager
    nameWithType: AzureBus<TAuthenticationToken>.GetNamespaceManager
    fullName: Cqrs.Azure.ServiceBus.AzureBus<TAuthenticationToken>.GetNamespaceManager
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.ServiceBus.AzureBus`1.GetNamespaceManager
    name: GetNamespaceManager
    nameWithType: AzureBus(Of TAuthenticationToken).GetNamespaceManager
    fullName: Cqrs.Azure.ServiceBus.AzureBus(Of TAuthenticationToken).GetNamespaceManager
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.ServiceBus.AzureBus`1.AzureServiceBusRetryPolicy
  commentId: P:Cqrs.Azure.ServiceBus.AzureBus`1.AzureServiceBusRetryPolicy
  isExternal: false
  name: AzureServiceBusRetryPolicy
  nameWithType: AzureBus<TAuthenticationToken>.AzureServiceBusRetryPolicy
  fullName: Cqrs.Azure.ServiceBus.AzureBus<TAuthenticationToken>.AzureServiceBusRetryPolicy
  nameWithType.vb: AzureBus(Of TAuthenticationToken).AzureServiceBusRetryPolicy
  fullName.vb: Cqrs.Azure.ServiceBus.AzureBus(Of TAuthenticationToken).AzureServiceBusRetryPolicy
- uid: Cqrs.Azure.ServiceBus.AzureBus`1.StartSettingsChecking
  commentId: M:Cqrs.Azure.ServiceBus.AzureBus`1.StartSettingsChecking
  isExternal: false
  name: StartSettingsChecking()
  nameWithType: AzureBus<TAuthenticationToken>.StartSettingsChecking()
  fullName: Cqrs.Azure.ServiceBus.AzureBus<TAuthenticationToken>.StartSettingsChecking()
  nameWithType.vb: AzureBus(Of TAuthenticationToken).StartSettingsChecking()
  fullName.vb: Cqrs.Azure.ServiceBus.AzureBus(Of TAuthenticationToken).StartSettingsChecking()
  spec.csharp:
  - uid: Cqrs.Azure.ServiceBus.AzureBus`1.StartSettingsChecking
    name: StartSettingsChecking
    nameWithType: AzureBus<TAuthenticationToken>.StartSettingsChecking
    fullName: Cqrs.Azure.ServiceBus.AzureBus<TAuthenticationToken>.StartSettingsChecking
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.ServiceBus.AzureBus`1.StartSettingsChecking
    name: StartSettingsChecking
    nameWithType: AzureBus(Of TAuthenticationToken).StartSettingsChecking
    fullName: Cqrs.Azure.ServiceBus.AzureBus(Of TAuthenticationToken).StartSettingsChecking
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.ServiceBus.AzureBus`1.ValidateSettingsHaveChanged
  commentId: M:Cqrs.Azure.ServiceBus.AzureBus`1.ValidateSettingsHaveChanged
  isExternal: false
  name: ValidateSettingsHaveChanged()
  nameWithType: AzureBus<TAuthenticationToken>.ValidateSettingsHaveChanged()
  fullName: Cqrs.Azure.ServiceBus.AzureBus<TAuthenticationToken>.ValidateSettingsHaveChanged()
  nameWithType.vb: AzureBus(Of TAuthenticationToken).ValidateSettingsHaveChanged()
  fullName.vb: Cqrs.Azure.ServiceBus.AzureBus(Of TAuthenticationToken).ValidateSettingsHaveChanged()
  spec.csharp:
  - uid: Cqrs.Azure.ServiceBus.AzureBus`1.ValidateSettingsHaveChanged
    name: ValidateSettingsHaveChanged
    nameWithType: AzureBus<TAuthenticationToken>.ValidateSettingsHaveChanged
    fullName: Cqrs.Azure.ServiceBus.AzureBus<TAuthenticationToken>.ValidateSettingsHaveChanged
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.ServiceBus.AzureBus`1.ValidateSettingsHaveChanged
    name: ValidateSettingsHaveChanged
    nameWithType: AzureBus(Of TAuthenticationToken).ValidateSettingsHaveChanged
    fullName: Cqrs.Azure.ServiceBus.AzureBus(Of TAuthenticationToken).ValidateSettingsHaveChanged
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.ServiceBus.AzureBus`1.UpdateSettings
  commentId: M:Cqrs.Azure.ServiceBus.AzureBus`1.UpdateSettings
  isExternal: false
  name: UpdateSettings()
  nameWithType: AzureBus<TAuthenticationToken>.UpdateSettings()
  fullName: Cqrs.Azure.ServiceBus.AzureBus<TAuthenticationToken>.UpdateSettings()
  nameWithType.vb: AzureBus(Of TAuthenticationToken).UpdateSettings()
  fullName.vb: Cqrs.Azure.ServiceBus.AzureBus(Of TAuthenticationToken).UpdateSettings()
  spec.csharp:
  - uid: Cqrs.Azure.ServiceBus.AzureBus`1.UpdateSettings
    name: UpdateSettings
    nameWithType: AzureBus<TAuthenticationToken>.UpdateSettings
    fullName: Cqrs.Azure.ServiceBus.AzureBus<TAuthenticationToken>.UpdateSettings
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.ServiceBus.AzureBus`1.UpdateSettings
    name: UpdateSettings
    nameWithType: AzureBus(Of TAuthenticationToken).UpdateSettings
    fullName: Cqrs.Azure.ServiceBus.AzureBus(Of TAuthenticationToken).UpdateSettings
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.ServiceBus.AzureCommandBusPublisher`1
  commentId: T:Cqrs.Azure.ServiceBus.AzureCommandBusPublisher`1
  isExternal: false
  name: AzureCommandBusPublisher<TAuthenticationToken>
  nameWithType: AzureCommandBusPublisher<TAuthenticationToken>
  fullName: Cqrs.Azure.ServiceBus.AzureCommandBusPublisher<TAuthenticationToken>
  nameWithType.vb: AzureCommandBusPublisher(Of TAuthenticationToken)
  fullName.vb: Cqrs.Azure.ServiceBus.AzureCommandBusPublisher(Of TAuthenticationToken)
  name.vb: AzureCommandBusPublisher(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Azure.ServiceBus.AzureCommandBusPublisher`1
    name: AzureCommandBusPublisher
    nameWithType: AzureCommandBusPublisher
    fullName: Cqrs.Azure.ServiceBus.AzureCommandBusPublisher
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Azure.ServiceBus.AzureCommandBusPublisher`1
    name: AzureCommandBusPublisher
    nameWithType: AzureCommandBusPublisher
    fullName: Cqrs.Azure.ServiceBus.AzureCommandBusPublisher
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.ServiceBus.AzureCommandBusPublisher`1.#ctor*
  commentId: Overload:Cqrs.Azure.ServiceBus.AzureCommandBusPublisher`1.#ctor
  isExternal: false
  name: AzureCommandBusPublisher
  nameWithType: AzureCommandBusPublisher<TAuthenticationToken>.AzureCommandBusPublisher
  fullName: Cqrs.Azure.ServiceBus.AzureCommandBusPublisher<TAuthenticationToken>.AzureCommandBusPublisher
  nameWithType.vb: AzureCommandBusPublisher(Of TAuthenticationToken).AzureCommandBusPublisher
  fullName.vb: Cqrs.Azure.ServiceBus.AzureCommandBusPublisher(Of TAuthenticationToken).AzureCommandBusPublisher
- uid: Cqrs.Configuration.IConfigurationManager
  commentId: T:Cqrs.Configuration.IConfigurationManager
  parent: Cqrs.Configuration
  isExternal: false
  name: IConfigurationManager
  nameWithType: IConfigurationManager
  fullName: Cqrs.Configuration.IConfigurationManager
- uid: Cqrs.Azure.ServiceBus.IMessageSerialiser{{TAuthenticationToken}}
  commentId: T:Cqrs.Azure.ServiceBus.IMessageSerialiser{`0}
  parent: Cqrs.Azure.ServiceBus
  definition: Cqrs.Azure.ServiceBus.IMessageSerialiser`1
  name: IMessageSerialiser<TAuthenticationToken>
  nameWithType: IMessageSerialiser<TAuthenticationToken>
  fullName: Cqrs.Azure.ServiceBus.IMessageSerialiser<TAuthenticationToken>
  nameWithType.vb: IMessageSerialiser(Of TAuthenticationToken)
  fullName.vb: Cqrs.Azure.ServiceBus.IMessageSerialiser(Of TAuthenticationToken)
  name.vb: IMessageSerialiser(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Azure.ServiceBus.IMessageSerialiser`1
    name: IMessageSerialiser
    nameWithType: IMessageSerialiser
    fullName: Cqrs.Azure.ServiceBus.IMessageSerialiser
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Azure.ServiceBus.IMessageSerialiser`1
    name: IMessageSerialiser
    nameWithType: IMessageSerialiser
    fullName: Cqrs.Azure.ServiceBus.IMessageSerialiser
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Authentication.IAuthenticationTokenHelper{{TAuthenticationToken}}
  commentId: T:Cqrs.Authentication.IAuthenticationTokenHelper{`0}
  parent: Cqrs.Authentication
  definition: Cqrs.Authentication.IAuthenticationTokenHelper`1
  name: IAuthenticationTokenHelper<TAuthenticationToken>
  nameWithType: IAuthenticationTokenHelper<TAuthenticationToken>
  fullName: Cqrs.Authentication.IAuthenticationTokenHelper<TAuthenticationToken>
  nameWithType.vb: IAuthenticationTokenHelper(Of TAuthenticationToken)
  fullName.vb: Cqrs.Authentication.IAuthenticationTokenHelper(Of TAuthenticationToken)
  name.vb: IAuthenticationTokenHelper(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Authentication.IAuthenticationTokenHelper`1
    name: IAuthenticationTokenHelper
    nameWithType: IAuthenticationTokenHelper
    fullName: Cqrs.Authentication.IAuthenticationTokenHelper
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Authentication.IAuthenticationTokenHelper`1
    name: IAuthenticationTokenHelper
    nameWithType: IAuthenticationTokenHelper
    fullName: Cqrs.Authentication.IAuthenticationTokenHelper
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: ICorrelationIdHelper
  isExternal: true
  name: ICorrelationIdHelper
  nameWithType: ICorrelationIdHelper
  fullName: ICorrelationIdHelper
- uid: ILogger
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: ILogger
- uid: Cqrs.Azure.ServiceBus.IAzureBusHelper{{TAuthenticationToken}}
  commentId: T:Cqrs.Azure.ServiceBus.IAzureBusHelper{`0}
  parent: Cqrs.Azure.ServiceBus
  definition: Cqrs.Azure.ServiceBus.IAzureBusHelper`1
  name: IAzureBusHelper<TAuthenticationToken>
  nameWithType: IAzureBusHelper<TAuthenticationToken>
  fullName: Cqrs.Azure.ServiceBus.IAzureBusHelper<TAuthenticationToken>
  nameWithType.vb: IAzureBusHelper(Of TAuthenticationToken)
  fullName.vb: Cqrs.Azure.ServiceBus.IAzureBusHelper(Of TAuthenticationToken)
  name.vb: IAzureBusHelper(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Azure.ServiceBus.IAzureBusHelper`1
    name: IAzureBusHelper
    nameWithType: IAzureBusHelper
    fullName: Cqrs.Azure.ServiceBus.IAzureBusHelper
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Azure.ServiceBus.IAzureBusHelper`1
    name: IAzureBusHelper
    nameWithType: IAzureBusHelper
    fullName: Cqrs.Azure.ServiceBus.IAzureBusHelper
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Bus.IBusHelper
  commentId: T:Cqrs.Bus.IBusHelper
  parent: Cqrs.Bus
  isExternal: false
  name: IBusHelper
  nameWithType: IBusHelper
  fullName: Cqrs.Bus.IBusHelper
- uid: Cqrs.Configuration
  commentId: N:Cqrs.Configuration
  isExternal: false
  name: Cqrs.Configuration
  nameWithType: Cqrs.Configuration
  fullName: Cqrs.Configuration
- uid: Cqrs.Azure.ServiceBus.IMessageSerialiser`1
  commentId: T:Cqrs.Azure.ServiceBus.IMessageSerialiser`1
  isExternal: false
  name: IMessageSerialiser<TAuthenticationToken>
  nameWithType: IMessageSerialiser<TAuthenticationToken>
  fullName: Cqrs.Azure.ServiceBus.IMessageSerialiser<TAuthenticationToken>
  nameWithType.vb: IMessageSerialiser(Of TAuthenticationToken)
  fullName.vb: Cqrs.Azure.ServiceBus.IMessageSerialiser(Of TAuthenticationToken)
  name.vb: IMessageSerialiser(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Azure.ServiceBus.IMessageSerialiser`1
    name: IMessageSerialiser
    nameWithType: IMessageSerialiser
    fullName: Cqrs.Azure.ServiceBus.IMessageSerialiser
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Azure.ServiceBus.IMessageSerialiser`1
    name: IMessageSerialiser
    nameWithType: IMessageSerialiser
    fullName: Cqrs.Azure.ServiceBus.IMessageSerialiser
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Authentication.IAuthenticationTokenHelper`1
  commentId: T:Cqrs.Authentication.IAuthenticationTokenHelper`1
  isExternal: false
  name: IAuthenticationTokenHelper<TAuthenticationToken>
  nameWithType: IAuthenticationTokenHelper<TAuthenticationToken>
  fullName: Cqrs.Authentication.IAuthenticationTokenHelper<TAuthenticationToken>
  nameWithType.vb: IAuthenticationTokenHelper(Of TAuthenticationToken)
  fullName.vb: Cqrs.Authentication.IAuthenticationTokenHelper(Of TAuthenticationToken)
  name.vb: IAuthenticationTokenHelper(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Authentication.IAuthenticationTokenHelper`1
    name: IAuthenticationTokenHelper
    nameWithType: IAuthenticationTokenHelper
    fullName: Cqrs.Authentication.IAuthenticationTokenHelper
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Authentication.IAuthenticationTokenHelper`1
    name: IAuthenticationTokenHelper
    nameWithType: IAuthenticationTokenHelper
    fullName: Cqrs.Authentication.IAuthenticationTokenHelper
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Authentication
  commentId: N:Cqrs.Authentication
  isExternal: false
  name: Cqrs.Authentication
  nameWithType: Cqrs.Authentication
  fullName: Cqrs.Authentication
- uid: Cqrs.Azure.ServiceBus.IAzureBusHelper`1
  commentId: T:Cqrs.Azure.ServiceBus.IAzureBusHelper`1
  isExternal: false
  name: IAzureBusHelper<TAuthenticationToken>
  nameWithType: IAzureBusHelper<TAuthenticationToken>
  fullName: Cqrs.Azure.ServiceBus.IAzureBusHelper<TAuthenticationToken>
  nameWithType.vb: IAzureBusHelper(Of TAuthenticationToken)
  fullName.vb: Cqrs.Azure.ServiceBus.IAzureBusHelper(Of TAuthenticationToken)
  name.vb: IAzureBusHelper(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Azure.ServiceBus.IAzureBusHelper`1
    name: IAzureBusHelper
    nameWithType: IAzureBusHelper
    fullName: Cqrs.Azure.ServiceBus.IAzureBusHelper
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Azure.ServiceBus.IAzureBusHelper`1
    name: IAzureBusHelper
    nameWithType: IAzureBusHelper
    fullName: Cqrs.Azure.ServiceBus.IAzureBusHelper
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Bus
  commentId: N:Cqrs.Bus
  isExternal: false
  name: Cqrs.Bus
  nameWithType: Cqrs.Bus
  fullName: Cqrs.Bus
- uid: Cqrs.Azure.ServiceBus.AzureCommandBusPublisher`1.Publish*
  commentId: Overload:Cqrs.Azure.ServiceBus.AzureCommandBusPublisher`1.Publish
  isExternal: false
  name: Publish
  nameWithType: AzureCommandBusPublisher<TAuthenticationToken>.Publish
  fullName: Cqrs.Azure.ServiceBus.AzureCommandBusPublisher<TAuthenticationToken>.Publish
  nameWithType.vb: AzureCommandBusPublisher(Of TAuthenticationToken).Publish
  fullName.vb: Cqrs.Azure.ServiceBus.AzureCommandBusPublisher(Of TAuthenticationToken).Publish
- uid: Cqrs.Commands.ICommandPublisher{{TAuthenticationToken}}.Publish``1({TCommand})
  commentId: M:Cqrs.Commands.ICommandPublisher{`0}.Publish``1(``0)
  parent: Cqrs.Commands.ICommandPublisher{{TAuthenticationToken}}
  definition: Cqrs.Commands.ICommandPublisher`1.Publish``1(``0)
  name: Publish<TCommand>(TCommand)
  nameWithType: ICommandPublisher<TAuthenticationToken>.Publish<TCommand>(TCommand)
  fullName: Cqrs.Commands.ICommandPublisher<TAuthenticationToken>.Publish<TCommand>(TCommand)
  nameWithType.vb: ICommandPublisher(Of TAuthenticationToken).Publish(Of TCommand)(TCommand)
  fullName.vb: Cqrs.Commands.ICommandPublisher(Of TAuthenticationToken).Publish(Of TCommand)(TCommand)
  name.vb: Publish(Of TCommand)(TCommand)
  spec.csharp:
  - uid: Cqrs.Commands.ICommandPublisher`1.Publish``1(``0)
    name: Publish<TCommand>
    nameWithType: ICommandPublisher<TAuthenticationToken>.Publish<TCommand>
    fullName: Cqrs.Commands.ICommandPublisher<TAuthenticationToken>.Publish<TCommand>
  - name: (
    nameWithType: (
    fullName: (
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Commands.ICommandPublisher`1.Publish``1(``0)
    name: Publish(Of TCommand)
    nameWithType: ICommandPublisher(Of TAuthenticationToken).Publish(Of TCommand)
    fullName: Cqrs.Commands.ICommandPublisher(Of TAuthenticationToken).Publish(Of TCommand)
  - name: (
    nameWithType: (
    fullName: (
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: )
    nameWithType: )
    fullName: )
- uid: '{TCommand}'
  commentId: '!:TCommand'
  definition: TCommand
  name: TCommand
  nameWithType: TCommand
  fullName: TCommand
- uid: Cqrs.Commands.ICommandPublisher`1.Publish``1(``0)
  commentId: M:Cqrs.Commands.ICommandPublisher`1.Publish``1(``0)
  isExternal: false
  name: Publish<TCommand>(TCommand)
  nameWithType: ICommandPublisher<TAuthenticationToken>.Publish<TCommand>(TCommand)
  fullName: Cqrs.Commands.ICommandPublisher<TAuthenticationToken>.Publish<TCommand>(TCommand)
  nameWithType.vb: ICommandPublisher(Of TAuthenticationToken).Publish(Of TCommand)(TCommand)
  fullName.vb: Cqrs.Commands.ICommandPublisher(Of TAuthenticationToken).Publish(Of TCommand)(TCommand)
  name.vb: Publish(Of TCommand)(TCommand)
  spec.csharp:
  - uid: Cqrs.Commands.ICommandPublisher`1.Publish``1(``0)
    name: Publish<TCommand>
    nameWithType: ICommandPublisher<TAuthenticationToken>.Publish<TCommand>
    fullName: Cqrs.Commands.ICommandPublisher<TAuthenticationToken>.Publish<TCommand>
  - name: (
    nameWithType: (
    fullName: (
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Commands.ICommandPublisher`1.Publish``1(``0)
    name: Publish(Of TCommand)
    nameWithType: ICommandPublisher(Of TAuthenticationToken).Publish(Of TCommand)
    fullName: Cqrs.Commands.ICommandPublisher(Of TAuthenticationToken).Publish(Of TCommand)
  - name: (
    nameWithType: (
    fullName: (
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: )
    nameWithType: )
    fullName: )
- uid: TCommand
  isExternal: false
  name: TCommand
  nameWithType: TCommand
  fullName: TCommand
- uid: IEnumerable{{TCommand}}
  commentId: '!:IEnumerable{``0}'
  definition: IEnumerable`1
  name: IEnumerable<TCommand>
  nameWithType: IEnumerable<TCommand>
  fullName: IEnumerable<TCommand>
  nameWithType.vb: IEnumerable(Of TCommand)
  fullName.vb: IEnumerable(Of TCommand)
  name.vb: IEnumerable(Of TCommand)
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: )
    nameWithType: )
    fullName: )
- uid: IEnumerable`1
  isExternal: true
  name: IEnumerable<>
  nameWithType: IEnumerable<>
  fullName: IEnumerable<>
  nameWithType.vb: IEnumerable(Of )
  fullName.vb: IEnumerable(Of )
  name.vb: IEnumerable(Of )
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Events.IEventReceiver`1
  commentId: T:Cqrs.Events.IEventReceiver`1
  isExternal: false
  name: IEventReceiver<TAuthenticationToken>
  nameWithType: IEventReceiver<TAuthenticationToken>
  fullName: Cqrs.Events.IEventReceiver<TAuthenticationToken>
  nameWithType.vb: IEventReceiver(Of TAuthenticationToken)
  fullName.vb: Cqrs.Events.IEventReceiver(Of TAuthenticationToken)
  name.vb: IEventReceiver(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Events.IEventReceiver`1
    name: IEventReceiver
    nameWithType: IEventReceiver
    fullName: Cqrs.Events.IEventReceiver
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Events.IEventReceiver`1
    name: IEventReceiver
    nameWithType: IEventReceiver
    fullName: Cqrs.Events.IEventReceiver
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.ServiceBus.AzureCommandBusPublisher`1.PublishAndWait*
  commentId: Overload:Cqrs.Azure.ServiceBus.AzureCommandBusPublisher`1.PublishAndWait
  isExternal: false
  name: PublishAndWait
  nameWithType: AzureCommandBusPublisher<TAuthenticationToken>.PublishAndWait
  fullName: Cqrs.Azure.ServiceBus.AzureCommandBusPublisher<TAuthenticationToken>.PublishAndWait
  nameWithType.vb: AzureCommandBusPublisher(Of TAuthenticationToken).PublishAndWait
  fullName.vb: Cqrs.Azure.ServiceBus.AzureCommandBusPublisher(Of TAuthenticationToken).PublishAndWait
- uid: Cqrs.Commands.IPublishAndWaitCommandPublisher{{TAuthenticationToken}}.PublishAndWait``2({TCommand},Cqrs.Events.IEventReceiver{{TAuthenticationToken}})
  commentId: M:Cqrs.Commands.IPublishAndWaitCommandPublisher{`0}.PublishAndWait``2(``0,Cqrs.Events.IEventReceiver{`0})
  parent: Cqrs.Commands.IPublishAndWaitCommandPublisher{{TAuthenticationToken}}
  definition: Cqrs.Commands.IPublishAndWaitCommandPublisher`1.PublishAndWait``2(``0,Cqrs.Events.IEventReceiver{`0})
  name: PublishAndWait<TCommand, TEvent>(TCommand, IEventReceiver<TAuthenticationToken>)
  nameWithType: IPublishAndWaitCommandPublisher<TAuthenticationToken>.PublishAndWait<TCommand, TEvent>(TCommand, IEventReceiver<TAuthenticationToken>)
  fullName: Cqrs.Commands.IPublishAndWaitCommandPublisher<TAuthenticationToken>.PublishAndWait<TCommand, TEvent>(TCommand, Cqrs.Events.IEventReceiver<TAuthenticationToken>)
  nameWithType.vb: IPublishAndWaitCommandPublisher(Of TAuthenticationToken).PublishAndWait(Of TCommand, TEvent)(TCommand, IEventReceiver(Of TAuthenticationToken))
  fullName.vb: Cqrs.Commands.IPublishAndWaitCommandPublisher(Of TAuthenticationToken).PublishAndWait(Of TCommand, TEvent)(TCommand, Cqrs.Events.IEventReceiver(Of TAuthenticationToken))
  name.vb: PublishAndWait(Of TCommand, TEvent)(TCommand, IEventReceiver(Of TAuthenticationToken))
  spec.csharp:
  - uid: Cqrs.Commands.IPublishAndWaitCommandPublisher`1.PublishAndWait``2(``0,Cqrs.Events.IEventReceiver{`0})
    name: PublishAndWait<TCommand, TEvent>
    nameWithType: IPublishAndWaitCommandPublisher<TAuthenticationToken>.PublishAndWait<TCommand, TEvent>
    fullName: Cqrs.Commands.IPublishAndWaitCommandPublisher<TAuthenticationToken>.PublishAndWait<TCommand, TEvent>
  - name: (
    nameWithType: (
    fullName: (
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Cqrs.Events.IEventReceiver`1
    name: IEventReceiver
    nameWithType: IEventReceiver
    fullName: Cqrs.Events.IEventReceiver
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Commands.IPublishAndWaitCommandPublisher`1.PublishAndWait``2(``0,Cqrs.Events.IEventReceiver{`0})
    name: PublishAndWait(Of TCommand, TEvent)
    nameWithType: IPublishAndWaitCommandPublisher(Of TAuthenticationToken).PublishAndWait(Of TCommand, TEvent)
    fullName: Cqrs.Commands.IPublishAndWaitCommandPublisher(Of TAuthenticationToken).PublishAndWait(Of TCommand, TEvent)
  - name: (
    nameWithType: (
    fullName: (
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Cqrs.Events.IEventReceiver`1
    name: IEventReceiver
    nameWithType: IEventReceiver
    fullName: Cqrs.Events.IEventReceiver
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Events.IEventReceiver{{TAuthenticationToken}}
  commentId: T:Cqrs.Events.IEventReceiver{`0}
  parent: Cqrs.Events
  definition: Cqrs.Events.IEventReceiver`1
  name: IEventReceiver<TAuthenticationToken>
  nameWithType: IEventReceiver<TAuthenticationToken>
  fullName: Cqrs.Events.IEventReceiver<TAuthenticationToken>
  nameWithType.vb: IEventReceiver(Of TAuthenticationToken)
  fullName.vb: Cqrs.Events.IEventReceiver(Of TAuthenticationToken)
  name.vb: IEventReceiver(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Events.IEventReceiver`1
    name: IEventReceiver
    nameWithType: IEventReceiver
    fullName: Cqrs.Events.IEventReceiver
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Events.IEventReceiver`1
    name: IEventReceiver
    nameWithType: IEventReceiver
    fullName: Cqrs.Events.IEventReceiver
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: '{TEvent}'
  commentId: '!:TEvent'
  definition: TEvent
  name: TEvent
  nameWithType: TEvent
  fullName: TEvent
- uid: Cqrs.Commands.IPublishAndWaitCommandPublisher`1.PublishAndWait``2(``0,Cqrs.Events.IEventReceiver{`0})
  commentId: M:Cqrs.Commands.IPublishAndWaitCommandPublisher`1.PublishAndWait``2(``0,Cqrs.Events.IEventReceiver{`0})
  isExternal: false
  name: PublishAndWait<TCommand, TEvent>(TCommand, IEventReceiver<TAuthenticationToken>)
  nameWithType: IPublishAndWaitCommandPublisher<TAuthenticationToken>.PublishAndWait<TCommand, TEvent>(TCommand, IEventReceiver<TAuthenticationToken>)
  fullName: Cqrs.Commands.IPublishAndWaitCommandPublisher<TAuthenticationToken>.PublishAndWait<TCommand, TEvent>(TCommand, Cqrs.Events.IEventReceiver<TAuthenticationToken>)
  nameWithType.vb: IPublishAndWaitCommandPublisher(Of TAuthenticationToken).PublishAndWait(Of TCommand, TEvent)(TCommand, IEventReceiver(Of TAuthenticationToken))
  fullName.vb: Cqrs.Commands.IPublishAndWaitCommandPublisher(Of TAuthenticationToken).PublishAndWait(Of TCommand, TEvent)(TCommand, Cqrs.Events.IEventReceiver(Of TAuthenticationToken))
  name.vb: PublishAndWait(Of TCommand, TEvent)(TCommand, IEventReceiver(Of TAuthenticationToken))
  spec.csharp:
  - uid: Cqrs.Commands.IPublishAndWaitCommandPublisher`1.PublishAndWait``2(``0,Cqrs.Events.IEventReceiver{`0})
    name: PublishAndWait<TCommand, TEvent>
    nameWithType: IPublishAndWaitCommandPublisher<TAuthenticationToken>.PublishAndWait<TCommand, TEvent>
    fullName: Cqrs.Commands.IPublishAndWaitCommandPublisher<TAuthenticationToken>.PublishAndWait<TCommand, TEvent>
  - name: (
    nameWithType: (
    fullName: (
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Cqrs.Events.IEventReceiver`1
    name: IEventReceiver
    nameWithType: IEventReceiver
    fullName: Cqrs.Events.IEventReceiver
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Commands.IPublishAndWaitCommandPublisher`1.PublishAndWait``2(``0,Cqrs.Events.IEventReceiver{`0})
    name: PublishAndWait(Of TCommand, TEvent)
    nameWithType: IPublishAndWaitCommandPublisher(Of TAuthenticationToken).PublishAndWait(Of TCommand, TEvent)
    fullName: Cqrs.Commands.IPublishAndWaitCommandPublisher(Of TAuthenticationToken).PublishAndWait(Of TCommand, TEvent)
  - name: (
    nameWithType: (
    fullName: (
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Cqrs.Events.IEventReceiver`1
    name: IEventReceiver
    nameWithType: IEventReceiver
    fullName: Cqrs.Events.IEventReceiver
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Events
  commentId: N:Cqrs.Events
  isExternal: false
  name: Cqrs.Events
  nameWithType: Cqrs.Events
  fullName: Cqrs.Events
- uid: TEvent
  isExternal: false
  name: TEvent
  nameWithType: TEvent
  fullName: TEvent
- uid: System.Threading.Timeout.Infinite
  commentId: F:System.Threading.Timeout.Infinite
- uid: Cqrs.Commands.IPublishAndWaitCommandPublisher{{TAuthenticationToken}}.PublishAndWait``2({TCommand},System.Int32,Cqrs.Events.IEventReceiver{{TAuthenticationToken}})
  commentId: M:Cqrs.Commands.IPublishAndWaitCommandPublisher{`0}.PublishAndWait``2(``0,System.Int32,Cqrs.Events.IEventReceiver{`0})
  parent: Cqrs.Commands.IPublishAndWaitCommandPublisher{{TAuthenticationToken}}
  definition: Cqrs.Commands.IPublishAndWaitCommandPublisher`1.PublishAndWait``2(``0,System.Int32,Cqrs.Events.IEventReceiver{`0})
  name: PublishAndWait<TCommand, TEvent>(TCommand, Int32, IEventReceiver<TAuthenticationToken>)
  nameWithType: IPublishAndWaitCommandPublisher<TAuthenticationToken>.PublishAndWait<TCommand, TEvent>(TCommand, Int32, IEventReceiver<TAuthenticationToken>)
  fullName: Cqrs.Commands.IPublishAndWaitCommandPublisher<TAuthenticationToken>.PublishAndWait<TCommand, TEvent>(TCommand, System.Int32, Cqrs.Events.IEventReceiver<TAuthenticationToken>)
  nameWithType.vb: IPublishAndWaitCommandPublisher(Of TAuthenticationToken).PublishAndWait(Of TCommand, TEvent)(TCommand, Int32, IEventReceiver(Of TAuthenticationToken))
  fullName.vb: Cqrs.Commands.IPublishAndWaitCommandPublisher(Of TAuthenticationToken).PublishAndWait(Of TCommand, TEvent)(TCommand, System.Int32, Cqrs.Events.IEventReceiver(Of TAuthenticationToken))
  name.vb: PublishAndWait(Of TCommand, TEvent)(TCommand, Int32, IEventReceiver(Of TAuthenticationToken))
  spec.csharp:
  - uid: Cqrs.Commands.IPublishAndWaitCommandPublisher`1.PublishAndWait``2(``0,System.Int32,Cqrs.Events.IEventReceiver{`0})
    name: PublishAndWait<TCommand, TEvent>
    nameWithType: IPublishAndWaitCommandPublisher<TAuthenticationToken>.PublishAndWait<TCommand, TEvent>
    fullName: Cqrs.Commands.IPublishAndWaitCommandPublisher<TAuthenticationToken>.PublishAndWait<TCommand, TEvent>
  - name: (
    nameWithType: (
    fullName: (
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Cqrs.Events.IEventReceiver`1
    name: IEventReceiver
    nameWithType: IEventReceiver
    fullName: Cqrs.Events.IEventReceiver
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Commands.IPublishAndWaitCommandPublisher`1.PublishAndWait``2(``0,System.Int32,Cqrs.Events.IEventReceiver{`0})
    name: PublishAndWait(Of TCommand, TEvent)
    nameWithType: IPublishAndWaitCommandPublisher(Of TAuthenticationToken).PublishAndWait(Of TCommand, TEvent)
    fullName: Cqrs.Commands.IPublishAndWaitCommandPublisher(Of TAuthenticationToken).PublishAndWait(Of TCommand, TEvent)
  - name: (
    nameWithType: (
    fullName: (
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Cqrs.Events.IEventReceiver`1
    name: IEventReceiver
    nameWithType: IEventReceiver
    fullName: Cqrs.Events.IEventReceiver
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Cqrs.Commands.IPublishAndWaitCommandPublisher`1.PublishAndWait``2(``0,System.Int32,Cqrs.Events.IEventReceiver{`0})
  commentId: M:Cqrs.Commands.IPublishAndWaitCommandPublisher`1.PublishAndWait``2(``0,System.Int32,Cqrs.Events.IEventReceiver{`0})
  isExternal: true
  name: PublishAndWait<TCommand, TEvent>(TCommand, Int32, IEventReceiver<TAuthenticationToken>)
  nameWithType: IPublishAndWaitCommandPublisher<TAuthenticationToken>.PublishAndWait<TCommand, TEvent>(TCommand, Int32, IEventReceiver<TAuthenticationToken>)
  fullName: Cqrs.Commands.IPublishAndWaitCommandPublisher<TAuthenticationToken>.PublishAndWait<TCommand, TEvent>(TCommand, System.Int32, Cqrs.Events.IEventReceiver<TAuthenticationToken>)
  nameWithType.vb: IPublishAndWaitCommandPublisher(Of TAuthenticationToken).PublishAndWait(Of TCommand, TEvent)(TCommand, Int32, IEventReceiver(Of TAuthenticationToken))
  fullName.vb: Cqrs.Commands.IPublishAndWaitCommandPublisher(Of TAuthenticationToken).PublishAndWait(Of TCommand, TEvent)(TCommand, System.Int32, Cqrs.Events.IEventReceiver(Of TAuthenticationToken))
  name.vb: PublishAndWait(Of TCommand, TEvent)(TCommand, Int32, IEventReceiver(Of TAuthenticationToken))
  spec.csharp:
  - uid: Cqrs.Commands.IPublishAndWaitCommandPublisher`1.PublishAndWait``2(``0,System.Int32,Cqrs.Events.IEventReceiver{`0})
    name: PublishAndWait<TCommand, TEvent>
    nameWithType: IPublishAndWaitCommandPublisher<TAuthenticationToken>.PublishAndWait<TCommand, TEvent>
    fullName: Cqrs.Commands.IPublishAndWaitCommandPublisher<TAuthenticationToken>.PublishAndWait<TCommand, TEvent>
  - name: (
    nameWithType: (
    fullName: (
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Cqrs.Events.IEventReceiver`1
    name: IEventReceiver
    nameWithType: IEventReceiver
    fullName: Cqrs.Events.IEventReceiver
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Commands.IPublishAndWaitCommandPublisher`1.PublishAndWait``2(``0,System.Int32,Cqrs.Events.IEventReceiver{`0})
    name: PublishAndWait(Of TCommand, TEvent)
    nameWithType: IPublishAndWaitCommandPublisher(Of TAuthenticationToken).PublishAndWait(Of TCommand, TEvent)
    fullName: Cqrs.Commands.IPublishAndWaitCommandPublisher(Of TAuthenticationToken).PublishAndWait(Of TCommand, TEvent)
  - name: (
    nameWithType: (
    fullName: (
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Cqrs.Events.IEventReceiver`1
    name: IEventReceiver
    nameWithType: IEventReceiver
    fullName: Cqrs.Events.IEventReceiver
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: TimeSpan
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: TimeSpan
- uid: Func{IEnumerable{Cqrs.Events.IEvent{{TAuthenticationToken}}},{TEvent}}
  commentId: '!:Func{IEnumerable{Cqrs.Events.IEvent{`0}},``1}'
  definition: Func`2
  name: Func<IEnumerable<IEvent<TAuthenticationToken>>, TEvent>
  nameWithType: Func<IEnumerable<IEvent<TAuthenticationToken>>, TEvent>
  fullName: Func<IEnumerable<Cqrs.Events.IEvent<TAuthenticationToken>>, TEvent>
  nameWithType.vb: Func(Of IEnumerable(Of IEvent(Of TAuthenticationToken)), TEvent)
  fullName.vb: Func(Of IEnumerable(Of Cqrs.Events.IEvent(Of TAuthenticationToken)), TEvent)
  name.vb: Func(Of IEnumerable(Of IEvent(Of TAuthenticationToken)), TEvent)
  spec.csharp:
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEvent
    nameWithType: TEvent
    fullName: TEvent
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEvent
    nameWithType: TEvent
    fullName: TEvent
  - name: )
    nameWithType: )
    fullName: )
- uid: Func`2
  isExternal: true
  name: Func<, >
  nameWithType: Func<, >
  fullName: Func<, >
  nameWithType.vb: Func(Of , )
  fullName.vb: Func(Of , )
  name.vb: Func(Of , )
  spec.csharp:
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
