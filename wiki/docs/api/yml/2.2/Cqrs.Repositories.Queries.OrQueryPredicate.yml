### YamlMime:ManagedReference
items:
- uid: Cqrs.Repositories.Queries.OrQueryPredicate
  commentId: T:Cqrs.Repositories.Queries.OrQueryPredicate
  id: OrQueryPredicate
  parent: Cqrs.Repositories.Queries
  children:
  - Cqrs.Repositories.Queries.OrQueryPredicate.LeftQueryPredicate
  - Cqrs.Repositories.Queries.OrQueryPredicate.RightQueryPredicate
  langs:
  - csharp
  - vb
  name: OrQueryPredicate
  nameWithType: OrQueryPredicate
  fullName: Cqrs.Repositories.Queries.OrQueryPredicate
  type: Class
  source:
    remote:
      path: Framework/Cqrs/Repositories/Queries/OrQueryPredicate.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: OrQueryPredicate
    path: Framework/Cqrs/Repositories/Queries/OrQueryPredicate.cs
    startLine: 13
  assemblies:
  - Cqrs
  namespace: Cqrs.Repositories.Queries
  summary: "\nAn <xref href=\"Cqrs.Repositories.Queries.IQueryPredicate\" data-throw-if-not-resolved=\"false\"></xref> where either the <xref href=\"Cqrs.Repositories.Queries.OrQueryPredicate.LeftQueryPredicate\" data-throw-if-not-resolved=\"false\"></xref> or the <xref href=\"Cqrs.Repositories.Queries.OrQueryPredicate.RightQueryPredicate\" data-throw-if-not-resolved=\"false\"></xref> must evaluate to true.\n"
  example: []
  syntax:
    content: 'public class OrQueryPredicate : IAndQueryPredicate, IQueryPredicate'
    content.vb: >-
      Public Class OrQueryPredicate

          Implements IAndQueryPredicate, IQueryPredicate
  inheritance:
  - System.Object
  implements:
  - Cqrs.Repositories.Queries.IAndQueryPredicate
  - Cqrs.Repositories.Queries.IQueryPredicate
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Cqrs.Repositories.Queries.OrQueryPredicate.LeftQueryPredicate
  commentId: P:Cqrs.Repositories.Queries.OrQueryPredicate.LeftQueryPredicate
  id: LeftQueryPredicate
  parent: Cqrs.Repositories.Queries.OrQueryPredicate
  langs:
  - csharp
  - vb
  name: LeftQueryPredicate
  nameWithType: OrQueryPredicate.LeftQueryPredicate
  fullName: Cqrs.Repositories.Queries.OrQueryPredicate.LeftQueryPredicate
  type: Property
  source:
    remote:
      path: Framework/Cqrs/Repositories/Queries/OrQueryPredicate.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: LeftQueryPredicate
    path: Framework/Cqrs/Repositories/Queries/OrQueryPredicate.cs
    startLine: 20
  assemblies:
  - Cqrs
  namespace: Cqrs.Repositories.Queries
  summary: "\nThe left side <xref href=\"Cqrs.Repositories.Queries.IQueryPredicate\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public IQueryPredicate LeftQueryPredicate { get; }
    parameters: []
    return:
      type: Cqrs.Repositories.Queries.IQueryPredicate
    content.vb: Public ReadOnly Property LeftQueryPredicate As IQueryPredicate
  overload: Cqrs.Repositories.Queries.OrQueryPredicate.LeftQueryPredicate*
  implements:
  - Cqrs.Repositories.Queries.IAndQueryPredicate.LeftQueryPredicate
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Cqrs.Repositories.Queries.OrQueryPredicate.RightQueryPredicate
  commentId: P:Cqrs.Repositories.Queries.OrQueryPredicate.RightQueryPredicate
  id: RightQueryPredicate
  parent: Cqrs.Repositories.Queries.OrQueryPredicate
  langs:
  - csharp
  - vb
  name: RightQueryPredicate
  nameWithType: OrQueryPredicate.RightQueryPredicate
  fullName: Cqrs.Repositories.Queries.OrQueryPredicate.RightQueryPredicate
  type: Property
  source:
    remote:
      path: Framework/Cqrs/Repositories/Queries/OrQueryPredicate.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: RightQueryPredicate
    path: Framework/Cqrs/Repositories/Queries/OrQueryPredicate.cs
    startLine: 25
  assemblies:
  - Cqrs
  namespace: Cqrs.Repositories.Queries
  summary: "\nThe right side <xref href=\"Cqrs.Repositories.Queries.IQueryPredicate\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public IQueryPredicate RightQueryPredicate { get; }
    parameters: []
    return:
      type: Cqrs.Repositories.Queries.IQueryPredicate
    content.vb: Public ReadOnly Property RightQueryPredicate As IQueryPredicate
  overload: Cqrs.Repositories.Queries.OrQueryPredicate.RightQueryPredicate*
  implements:
  - Cqrs.Repositories.Queries.IAndQueryPredicate.RightQueryPredicate
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Cqrs.Repositories.Queries.IQueryPredicate
  commentId: T:Cqrs.Repositories.Queries.IQueryPredicate
  parent: Cqrs.Repositories.Queries
  isExternal: false
  name: IQueryPredicate
  nameWithType: IQueryPredicate
  fullName: Cqrs.Repositories.Queries.IQueryPredicate
- uid: Cqrs.Repositories.Queries.OrQueryPredicate.LeftQueryPredicate
  commentId: P:Cqrs.Repositories.Queries.OrQueryPredicate.LeftQueryPredicate
- uid: Cqrs.Repositories.Queries.OrQueryPredicate.RightQueryPredicate
  commentId: P:Cqrs.Repositories.Queries.OrQueryPredicate.RightQueryPredicate
- uid: Cqrs.Repositories.Queries
  commentId: N:Cqrs.Repositories.Queries
  isExternal: false
  name: Cqrs.Repositories.Queries
  nameWithType: Cqrs.Repositories.Queries
  fullName: Cqrs.Repositories.Queries
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Cqrs.Repositories.Queries.IAndQueryPredicate
  commentId: T:Cqrs.Repositories.Queries.IAndQueryPredicate
  parent: Cqrs.Repositories.Queries
  isExternal: false
  name: IAndQueryPredicate
  nameWithType: IAndQueryPredicate
  fullName: Cqrs.Repositories.Queries.IAndQueryPredicate
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Cqrs.Repositories.Queries.OrQueryPredicate.LeftQueryPredicate*
  commentId: Overload:Cqrs.Repositories.Queries.OrQueryPredicate.LeftQueryPredicate
  isExternal: false
  name: LeftQueryPredicate
  nameWithType: OrQueryPredicate.LeftQueryPredicate
  fullName: Cqrs.Repositories.Queries.OrQueryPredicate.LeftQueryPredicate
- uid: Cqrs.Repositories.Queries.IAndQueryPredicate.LeftQueryPredicate
  commentId: P:Cqrs.Repositories.Queries.IAndQueryPredicate.LeftQueryPredicate
  parent: Cqrs.Repositories.Queries.IAndQueryPredicate
  isExternal: false
  name: LeftQueryPredicate
  nameWithType: IAndQueryPredicate.LeftQueryPredicate
  fullName: Cqrs.Repositories.Queries.IAndQueryPredicate.LeftQueryPredicate
- uid: Cqrs.Repositories.Queries.OrQueryPredicate.RightQueryPredicate*
  commentId: Overload:Cqrs.Repositories.Queries.OrQueryPredicate.RightQueryPredicate
  isExternal: false
  name: RightQueryPredicate
  nameWithType: OrQueryPredicate.RightQueryPredicate
  fullName: Cqrs.Repositories.Queries.OrQueryPredicate.RightQueryPredicate
- uid: Cqrs.Repositories.Queries.IAndQueryPredicate.RightQueryPredicate
  commentId: P:Cqrs.Repositories.Queries.IAndQueryPredicate.RightQueryPredicate
  parent: Cqrs.Repositories.Queries.IAndQueryPredicate
  isExternal: false
  name: RightQueryPredicate
  nameWithType: IAndQueryPredicate.RightQueryPredicate
  fullName: Cqrs.Repositories.Queries.IAndQueryPredicate.RightQueryPredicate
