### YamlMime:ManagedReference
items:
- uid: Cqrs.Azure.DocumentDb.Factories.IAzureDocumentDbDataStoreConnectionStringFactory
  commentId: T:Cqrs.Azure.DocumentDb.Factories.IAzureDocumentDbDataStoreConnectionStringFactory
  id: IAzureDocumentDbDataStoreConnectionStringFactory
  parent: Cqrs.Azure.DocumentDb.Factories
  children:
  - Cqrs.Azure.DocumentDb.Factories.IAzureDocumentDbDataStoreConnectionStringFactory.GetAzureDocumentDbCollectionName
  - Cqrs.Azure.DocumentDb.Factories.IAzureDocumentDbDataStoreConnectionStringFactory.GetAzureDocumentDbConnectionClient
  - Cqrs.Azure.DocumentDb.Factories.IAzureDocumentDbDataStoreConnectionStringFactory.GetAzureDocumentDbDatabaseName
  - Cqrs.Azure.DocumentDb.Factories.IAzureDocumentDbDataStoreConnectionStringFactory.UseSingleCollectionForAllDataStores
  langs:
  - csharp
  - vb
  name: IAzureDocumentDbDataStoreConnectionStringFactory
  nameWithType: IAzureDocumentDbDataStoreConnectionStringFactory
  fullName: Cqrs.Azure.DocumentDb.Factories.IAzureDocumentDbDataStoreConnectionStringFactory
  type: Interface
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.DocumentDb/Factories/IAzureDocumentDbDataStoreConnectionStringFactory.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: IAzureDocumentDbDataStoreConnectionStringFactory
    path: Framework/Azure/Cqrs.Azure.DocumentDb/Factories/IAzureDocumentDbDataStoreConnectionStringFactory.cs
    startLine: 17
  assemblies:
  - Cqrs.Azure.DocumentDb
  namespace: Cqrs.Azure.DocumentDb.Factories
  summary: "\nA factory for getting connections and database names for <xref href=\"Cqrs.DataStores.IDataStore%601\" data-throw-if-not-resolved=\"false\"></xref> access.\n"
  example: []
  syntax:
    content: public interface IAzureDocumentDbDataStoreConnectionStringFactory
    content.vb: Public Interface IAzureDocumentDbDataStoreConnectionStringFactory
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Cqrs.Azure.DocumentDb.Factories.IAzureDocumentDbDataStoreConnectionStringFactory.GetAzureDocumentDbConnectionClient
  commentId: M:Cqrs.Azure.DocumentDb.Factories.IAzureDocumentDbDataStoreConnectionStringFactory.GetAzureDocumentDbConnectionClient
  id: GetAzureDocumentDbConnectionClient
  parent: Cqrs.Azure.DocumentDb.Factories.IAzureDocumentDbDataStoreConnectionStringFactory
  langs:
  - csharp
  - vb
  name: GetAzureDocumentDbConnectionClient()
  nameWithType: IAzureDocumentDbDataStoreConnectionStringFactory.GetAzureDocumentDbConnectionClient()
  fullName: Cqrs.Azure.DocumentDb.Factories.IAzureDocumentDbDataStoreConnectionStringFactory.GetAzureDocumentDbConnectionClient()
  type: Method
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.DocumentDb/Factories/IAzureDocumentDbDataStoreConnectionStringFactory.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: GetAzureDocumentDbConnectionClient
    path: Framework/Azure/Cqrs.Azure.DocumentDb/Factories/IAzureDocumentDbDataStoreConnectionStringFactory.cs
    startLine: 22
  assemblies:
  - Cqrs.Azure.DocumentDb
  namespace: Cqrs.Azure.DocumentDb.Factories
  summary: "\nGets the current <see cref=\"!:DocumentClient\"></see>.\n"
  example: []
  syntax:
    content: DocumentClient GetAzureDocumentDbConnectionClient()
    return:
      type: DocumentClient
    content.vb: Function GetAzureDocumentDbConnectionClient As DocumentClient
  overload: Cqrs.Azure.DocumentDb.Factories.IAzureDocumentDbDataStoreConnectionStringFactory.GetAzureDocumentDbConnectionClient*
- uid: Cqrs.Azure.DocumentDb.Factories.IAzureDocumentDbDataStoreConnectionStringFactory.GetAzureDocumentDbDatabaseName
  commentId: M:Cqrs.Azure.DocumentDb.Factories.IAzureDocumentDbDataStoreConnectionStringFactory.GetAzureDocumentDbDatabaseName
  id: GetAzureDocumentDbDatabaseName
  parent: Cqrs.Azure.DocumentDb.Factories.IAzureDocumentDbDataStoreConnectionStringFactory
  langs:
  - csharp
  - vb
  name: GetAzureDocumentDbDatabaseName()
  nameWithType: IAzureDocumentDbDataStoreConnectionStringFactory.GetAzureDocumentDbDatabaseName()
  fullName: Cqrs.Azure.DocumentDb.Factories.IAzureDocumentDbDataStoreConnectionStringFactory.GetAzureDocumentDbDatabaseName()
  type: Method
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.DocumentDb/Factories/IAzureDocumentDbDataStoreConnectionStringFactory.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: GetAzureDocumentDbDatabaseName
    path: Framework/Azure/Cqrs.Azure.DocumentDb/Factories/IAzureDocumentDbDataStoreConnectionStringFactory.cs
    startLine: 27
  assemblies:
  - Cqrs.Azure.DocumentDb
  namespace: Cqrs.Azure.DocumentDb.Factories
  summary: "\nGets the current database name.\n"
  example: []
  syntax:
    content: string GetAzureDocumentDbDatabaseName()
    return:
      type: System.String
    content.vb: Function GetAzureDocumentDbDatabaseName As String
  overload: Cqrs.Azure.DocumentDb.Factories.IAzureDocumentDbDataStoreConnectionStringFactory.GetAzureDocumentDbDatabaseName*
- uid: Cqrs.Azure.DocumentDb.Factories.IAzureDocumentDbDataStoreConnectionStringFactory.GetAzureDocumentDbCollectionName
  commentId: M:Cqrs.Azure.DocumentDb.Factories.IAzureDocumentDbDataStoreConnectionStringFactory.GetAzureDocumentDbCollectionName
  id: GetAzureDocumentDbCollectionName
  parent: Cqrs.Azure.DocumentDb.Factories.IAzureDocumentDbDataStoreConnectionStringFactory
  langs:
  - csharp
  - vb
  name: GetAzureDocumentDbCollectionName()
  nameWithType: IAzureDocumentDbDataStoreConnectionStringFactory.GetAzureDocumentDbCollectionName()
  fullName: Cqrs.Azure.DocumentDb.Factories.IAzureDocumentDbDataStoreConnectionStringFactory.GetAzureDocumentDbCollectionName()
  type: Method
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.DocumentDb/Factories/IAzureDocumentDbDataStoreConnectionStringFactory.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: GetAzureDocumentDbCollectionName
    path: Framework/Azure/Cqrs.Azure.DocumentDb/Factories/IAzureDocumentDbDataStoreConnectionStringFactory.cs
    startLine: 32
  assemblies:
  - Cqrs.Azure.DocumentDb
  namespace: Cqrs.Azure.DocumentDb.Factories
  summary: "\nGets the current collection name.\n"
  example: []
  syntax:
    content: string GetAzureDocumentDbCollectionName()
    return:
      type: System.String
    content.vb: Function GetAzureDocumentDbCollectionName As String
  overload: Cqrs.Azure.DocumentDb.Factories.IAzureDocumentDbDataStoreConnectionStringFactory.GetAzureDocumentDbCollectionName*
- uid: Cqrs.Azure.DocumentDb.Factories.IAzureDocumentDbDataStoreConnectionStringFactory.UseSingleCollectionForAllDataStores
  commentId: M:Cqrs.Azure.DocumentDb.Factories.IAzureDocumentDbDataStoreConnectionStringFactory.UseSingleCollectionForAllDataStores
  id: UseSingleCollectionForAllDataStores
  parent: Cqrs.Azure.DocumentDb.Factories.IAzureDocumentDbDataStoreConnectionStringFactory
  langs:
  - csharp
  - vb
  name: UseSingleCollectionForAllDataStores()
  nameWithType: IAzureDocumentDbDataStoreConnectionStringFactory.UseSingleCollectionForAllDataStores()
  fullName: Cqrs.Azure.DocumentDb.Factories.IAzureDocumentDbDataStoreConnectionStringFactory.UseSingleCollectionForAllDataStores()
  type: Method
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.DocumentDb/Factories/IAzureDocumentDbDataStoreConnectionStringFactory.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: UseSingleCollectionForAllDataStores
    path: Framework/Azure/Cqrs.Azure.DocumentDb/Factories/IAzureDocumentDbDataStoreConnectionStringFactory.cs
    startLine: 38
  assemblies:
  - Cqrs.Azure.DocumentDb
  namespace: Cqrs.Azure.DocumentDb.Factories
  summary: "\nIndicates if a different collection should be used per <xref href=\"Cqrs.Entities.IEntity\" data-throw-if-not-resolved=\"false\"></xref>/<xref href=\"Cqrs.DataStores.IDataStore%601\" data-throw-if-not-resolved=\"false\"></xref> or a single collection used for all instances of <xref href=\"Cqrs.DataStores.IDataStore%601\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"Cqrs.DataStores.IDataStore%601\" data-throw-if-not-resolved=\"false\"></xref>.\nSetting this to true can become expensive as each <xref href=\"Cqrs.Entities.IEntity\" data-throw-if-not-resolved=\"false\"></xref> will have it&apos;s own collection. Check the relevant SDK/pricing models.\n"
  example: []
  syntax:
    content: bool UseSingleCollectionForAllDataStores()
    return:
      type: System.Boolean
    content.vb: Function UseSingleCollectionForAllDataStores As Boolean
  overload: Cqrs.Azure.DocumentDb.Factories.IAzureDocumentDbDataStoreConnectionStringFactory.UseSingleCollectionForAllDataStores*
references:
- uid: Cqrs.DataStores.IDataStore`1
  commentId: T:Cqrs.DataStores.IDataStore`1
  isExternal: false
  name: IDataStore<TData>
  nameWithType: IDataStore<TData>
  fullName: Cqrs.DataStores.IDataStore<TData>
  nameWithType.vb: IDataStore(Of TData)
  fullName.vb: Cqrs.DataStores.IDataStore(Of TData)
  name.vb: IDataStore(Of TData)
  spec.csharp:
  - uid: Cqrs.DataStores.IDataStore`1
    name: IDataStore
    nameWithType: IDataStore
    fullName: Cqrs.DataStores.IDataStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.DataStores.IDataStore`1
    name: IDataStore
    nameWithType: IDataStore
    fullName: Cqrs.DataStores.IDataStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.DocumentDb.Factories
  commentId: N:Cqrs.Azure.DocumentDb.Factories
  isExternal: false
  name: Cqrs.Azure.DocumentDb.Factories
  nameWithType: Cqrs.Azure.DocumentDb.Factories
  fullName: Cqrs.Azure.DocumentDb.Factories
- uid: Cqrs.Azure.DocumentDb.Factories.IAzureDocumentDbDataStoreConnectionStringFactory.GetAzureDocumentDbConnectionClient*
  commentId: Overload:Cqrs.Azure.DocumentDb.Factories.IAzureDocumentDbDataStoreConnectionStringFactory.GetAzureDocumentDbConnectionClient
  isExternal: false
  name: GetAzureDocumentDbConnectionClient
  nameWithType: IAzureDocumentDbDataStoreConnectionStringFactory.GetAzureDocumentDbConnectionClient
  fullName: Cqrs.Azure.DocumentDb.Factories.IAzureDocumentDbDataStoreConnectionStringFactory.GetAzureDocumentDbConnectionClient
- uid: DocumentClient
  isExternal: true
  name: DocumentClient
  nameWithType: DocumentClient
  fullName: DocumentClient
- uid: Cqrs.Azure.DocumentDb.Factories.IAzureDocumentDbDataStoreConnectionStringFactory.GetAzureDocumentDbDatabaseName*
  commentId: Overload:Cqrs.Azure.DocumentDb.Factories.IAzureDocumentDbDataStoreConnectionStringFactory.GetAzureDocumentDbDatabaseName
  isExternal: false
  name: GetAzureDocumentDbDatabaseName
  nameWithType: IAzureDocumentDbDataStoreConnectionStringFactory.GetAzureDocumentDbDatabaseName
  fullName: Cqrs.Azure.DocumentDb.Factories.IAzureDocumentDbDataStoreConnectionStringFactory.GetAzureDocumentDbDatabaseName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Cqrs.Azure.DocumentDb.Factories.IAzureDocumentDbDataStoreConnectionStringFactory.GetAzureDocumentDbCollectionName*
  commentId: Overload:Cqrs.Azure.DocumentDb.Factories.IAzureDocumentDbDataStoreConnectionStringFactory.GetAzureDocumentDbCollectionName
  isExternal: false
  name: GetAzureDocumentDbCollectionName
  nameWithType: IAzureDocumentDbDataStoreConnectionStringFactory.GetAzureDocumentDbCollectionName
  fullName: Cqrs.Azure.DocumentDb.Factories.IAzureDocumentDbDataStoreConnectionStringFactory.GetAzureDocumentDbCollectionName
- uid: Cqrs.Entities.IEntity
  commentId: T:Cqrs.Entities.IEntity
  parent: Cqrs.Entities
  isExternal: false
  name: IEntity
  nameWithType: IEntity
  fullName: Cqrs.Entities.IEntity
- uid: Cqrs.Azure.DocumentDb.Factories.IAzureDocumentDbDataStoreConnectionStringFactory.UseSingleCollectionForAllDataStores*
  commentId: Overload:Cqrs.Azure.DocumentDb.Factories.IAzureDocumentDbDataStoreConnectionStringFactory.UseSingleCollectionForAllDataStores
  isExternal: false
  name: UseSingleCollectionForAllDataStores
  nameWithType: IAzureDocumentDbDataStoreConnectionStringFactory.UseSingleCollectionForAllDataStores
  fullName: Cqrs.Azure.DocumentDb.Factories.IAzureDocumentDbDataStoreConnectionStringFactory.UseSingleCollectionForAllDataStores
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Cqrs.Entities
  commentId: N:Cqrs.Entities
  isExternal: false
  name: Cqrs.Entities
  nameWithType: Cqrs.Entities
  fullName: Cqrs.Entities
