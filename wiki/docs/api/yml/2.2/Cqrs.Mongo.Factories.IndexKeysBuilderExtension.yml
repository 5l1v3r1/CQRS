### YamlMime:ManagedReference
items:
- uid: Cqrs.Mongo.Factories.IndexKeysBuilderExtension
  commentId: T:Cqrs.Mongo.Factories.IndexKeysBuilderExtension
  id: IndexKeysBuilderExtension
  parent: Cqrs.Mongo.Factories
  children:
  - Cqrs.Mongo.Factories.IndexKeysBuilderExtension.Ascending``1(MongoDB.Driver.Builders.IndexKeysBuilder,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  - Cqrs.Mongo.Factories.IndexKeysBuilderExtension.CheckForChildProperty(System.Linq.Expressions.MemberExpression)
  - Cqrs.Mongo.Factories.IndexKeysBuilderExtension.Descending``1(MongoDB.Driver.Builders.IndexKeysBuilder,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  langs:
  - csharp
  - vb
  name: IndexKeysBuilderExtension
  nameWithType: IndexKeysBuilderExtension
  fullName: Cqrs.Mongo.Factories.IndexKeysBuilderExtension
  type: Class
  source:
    remote:
      path: Framework/Cqrs.Mongo/Factories/IndexKeysBuilderExtension.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: IndexKeysBuilderExtension
    path: Framework/Cqrs.Mongo/Factories/IndexKeysBuilderExtension.cs
    startLine: 19
  assemblies:
  - Cqrs.Mongo
  namespace: Cqrs.Mongo.Factories
  summary: "\nA set of extension methods for <xref href=\"MongoDB.Driver.Builders.IndexKeysBuilder\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static class IndexKeysBuilderExtension
    content.vb: Public Module IndexKeysBuilderExtension
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Cqrs.Mongo.Factories.IndexKeysBuilderExtension.Ascending``1(MongoDB.Driver.Builders.IndexKeysBuilder,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  commentId: M:Cqrs.Mongo.Factories.IndexKeysBuilderExtension.Ascending``1(MongoDB.Driver.Builders.IndexKeysBuilder,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  id: Ascending``1(MongoDB.Driver.Builders.IndexKeysBuilder,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  isExtensionMethod: true
  parent: Cqrs.Mongo.Factories.IndexKeysBuilderExtension
  langs:
  - csharp
  - vb
  name: Ascending<T>(IndexKeysBuilder, Expression<Func<T, Object>>[])
  nameWithType: IndexKeysBuilderExtension.Ascending<T>(IndexKeysBuilder, Expression<Func<T, Object>>[])
  fullName: Cqrs.Mongo.Factories.IndexKeysBuilderExtension.Ascending<T>(MongoDB.Driver.Builders.IndexKeysBuilder, System.Linq.Expressions.Expression<System.Func<T, System.Object>>[])
  type: Method
  source:
    remote:
      path: Framework/Cqrs.Mongo/Factories/IndexKeysBuilderExtension.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Ascending
    path: Framework/Cqrs.Mongo/Factories/IndexKeysBuilderExtension.cs
    startLine: 24
  assemblies:
  - Cqrs.Mongo
  namespace: Cqrs.Mongo.Factories
  summary: "\nDefine the index as ascending.\n"
  example: []
  syntax:
    content: public static IndexKeysBuilder Ascending<T>(this IndexKeysBuilder mongoIndexKeys, params Expression<Func<T, object>>[] selectors)
    parameters:
    - id: mongoIndexKeys
      type: MongoDB.Driver.Builders.IndexKeysBuilder
    - id: selectors
      type: System.Linq.Expressions.Expression{System.Func{{T},System.Object}}[]
    typeParameters:
    - id: T
    return:
      type: MongoDB.Driver.Builders.IndexKeysBuilder
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Ascending(Of T)(mongoIndexKeys As IndexKeysBuilder, ParamArray selectors As Expression(Of Func(Of T, Object))()) As IndexKeysBuilder
  overload: Cqrs.Mongo.Factories.IndexKeysBuilderExtension.Ascending*
  nameWithType.vb: IndexKeysBuilderExtension.Ascending(Of T)(IndexKeysBuilder, Expression(Of Func(Of T, Object))())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Cqrs.Mongo.Factories.IndexKeysBuilderExtension.Ascending(Of T)(MongoDB.Driver.Builders.IndexKeysBuilder, System.Linq.Expressions.Expression(Of System.Func(Of T, System.Object))())
  name.vb: Ascending(Of T)(IndexKeysBuilder, Expression(Of Func(Of T, Object))())
- uid: Cqrs.Mongo.Factories.IndexKeysBuilderExtension.Descending``1(MongoDB.Driver.Builders.IndexKeysBuilder,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  commentId: M:Cqrs.Mongo.Factories.IndexKeysBuilderExtension.Descending``1(MongoDB.Driver.Builders.IndexKeysBuilder,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  id: Descending``1(MongoDB.Driver.Builders.IndexKeysBuilder,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  isExtensionMethod: true
  parent: Cqrs.Mongo.Factories.IndexKeysBuilderExtension
  langs:
  - csharp
  - vb
  name: Descending<T>(IndexKeysBuilder, Expression<Func<T, Object>>[])
  nameWithType: IndexKeysBuilderExtension.Descending<T>(IndexKeysBuilder, Expression<Func<T, Object>>[])
  fullName: Cqrs.Mongo.Factories.IndexKeysBuilderExtension.Descending<T>(MongoDB.Driver.Builders.IndexKeysBuilder, System.Linq.Expressions.Expression<System.Func<T, System.Object>>[])
  type: Method
  source:
    remote:
      path: Framework/Cqrs.Mongo/Factories/IndexKeysBuilderExtension.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Descending
    path: Framework/Cqrs.Mongo/Factories/IndexKeysBuilderExtension.cs
    startLine: 48
  assemblies:
  - Cqrs.Mongo
  namespace: Cqrs.Mongo.Factories
  summary: "\nDefine the index as descending.\n"
  example: []
  syntax:
    content: public static IndexKeysBuilder Descending<T>(this IndexKeysBuilder mongoIndexKeys, params Expression<Func<T, object>>[] selectors)
    parameters:
    - id: mongoIndexKeys
      type: MongoDB.Driver.Builders.IndexKeysBuilder
    - id: selectors
      type: System.Linq.Expressions.Expression{System.Func{{T},System.Object}}[]
    typeParameters:
    - id: T
    return:
      type: MongoDB.Driver.Builders.IndexKeysBuilder
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Descending(Of T)(mongoIndexKeys As IndexKeysBuilder, ParamArray selectors As Expression(Of Func(Of T, Object))()) As IndexKeysBuilder
  overload: Cqrs.Mongo.Factories.IndexKeysBuilderExtension.Descending*
  nameWithType.vb: IndexKeysBuilderExtension.Descending(Of T)(IndexKeysBuilder, Expression(Of Func(Of T, Object))())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Cqrs.Mongo.Factories.IndexKeysBuilderExtension.Descending(Of T)(MongoDB.Driver.Builders.IndexKeysBuilder, System.Linq.Expressions.Expression(Of System.Func(Of T, System.Object))())
  name.vb: Descending(Of T)(IndexKeysBuilder, Expression(Of Func(Of T, Object))())
- uid: Cqrs.Mongo.Factories.IndexKeysBuilderExtension.CheckForChildProperty(System.Linq.Expressions.MemberExpression)
  commentId: M:Cqrs.Mongo.Factories.IndexKeysBuilderExtension.CheckForChildProperty(System.Linq.Expressions.MemberExpression)
  id: CheckForChildProperty(System.Linq.Expressions.MemberExpression)
  parent: Cqrs.Mongo.Factories.IndexKeysBuilderExtension
  langs:
  - csharp
  - vb
  name: CheckForChildProperty(MemberExpression)
  nameWithType: IndexKeysBuilderExtension.CheckForChildProperty(MemberExpression)
  fullName: Cqrs.Mongo.Factories.IndexKeysBuilderExtension.CheckForChildProperty(System.Linq.Expressions.MemberExpression)
  type: Method
  source:
    remote:
      path: Framework/Cqrs.Mongo/Factories/IndexKeysBuilderExtension.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: CheckForChildProperty
    path: Framework/Cqrs.Mongo/Factories/IndexKeysBuilderExtension.cs
    startLine: 72
  assemblies:
  - Cqrs.Mongo
  namespace: Cqrs.Mongo.Factories
  summary: "\nChecks if the property name is a child and maps it appropriately.\n"
  example: []
  syntax:
    content: public static string CheckForChildProperty(MemberExpression selectorMemberExpression)
    parameters:
    - id: selectorMemberExpression
      type: System.Linq.Expressions.MemberExpression
    return:
      type: System.String
    content.vb: Public Shared Function CheckForChildProperty(selectorMemberExpression As MemberExpression) As String
  overload: Cqrs.Mongo.Factories.IndexKeysBuilderExtension.CheckForChildProperty*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: MongoDB.Driver.Builders.IndexKeysBuilder
  commentId: T:MongoDB.Driver.Builders.IndexKeysBuilder
  parent: MongoDB.Driver.Builders
  isExternal: true
  name: IndexKeysBuilder
  nameWithType: IndexKeysBuilder
  fullName: MongoDB.Driver.Builders.IndexKeysBuilder
- uid: Cqrs.Mongo.Factories
  commentId: N:Cqrs.Mongo.Factories
  isExternal: false
  name: Cqrs.Mongo.Factories
  nameWithType: Cqrs.Mongo.Factories
  fullName: Cqrs.Mongo.Factories
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Driver.Builders
  commentId: N:MongoDB.Driver.Builders
  isExternal: false
  name: MongoDB.Driver.Builders
  nameWithType: MongoDB.Driver.Builders
  fullName: MongoDB.Driver.Builders
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Cqrs.Mongo.Factories.IndexKeysBuilderExtension.Ascending*
  commentId: Overload:Cqrs.Mongo.Factories.IndexKeysBuilderExtension.Ascending
  isExternal: false
  name: Ascending
  nameWithType: IndexKeysBuilderExtension.Ascending
  fullName: Cqrs.Mongo.Factories.IndexKeysBuilderExtension.Ascending
- uid: System.Linq.Expressions.Expression{System.Func{{T},System.Object}}[]
  name: Expression<Func<T, Object>>[]
  nameWithType: Expression<Func<T, Object>>[]
  fullName: System.Linq.Expressions.Expression<System.Func<T, System.Object>>[]
  nameWithType.vb: Expression(Of Func(Of T, Object))()
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of T, System.Object))()
  name.vb: Expression(Of Func(Of T, Object))()
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Cqrs.Mongo.Factories.IndexKeysBuilderExtension.Descending*
  commentId: Overload:Cqrs.Mongo.Factories.IndexKeysBuilderExtension.Descending
  isExternal: false
  name: Descending
  nameWithType: IndexKeysBuilderExtension.Descending
  fullName: Cqrs.Mongo.Factories.IndexKeysBuilderExtension.Descending
- uid: Cqrs.Mongo.Factories.IndexKeysBuilderExtension.CheckForChildProperty*
  commentId: Overload:Cqrs.Mongo.Factories.IndexKeysBuilderExtension.CheckForChildProperty
  isExternal: false
  name: CheckForChildProperty
  nameWithType: IndexKeysBuilderExtension.CheckForChildProperty
  fullName: Cqrs.Mongo.Factories.IndexKeysBuilderExtension.CheckForChildProperty
- uid: System.Linq.Expressions.MemberExpression
  commentId: T:System.Linq.Expressions.MemberExpression
  parent: System.Linq.Expressions
  isExternal: true
  name: MemberExpression
  nameWithType: MemberExpression
  fullName: System.Linq.Expressions.MemberExpression
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Linq.Expressions
  commentId: N:System.Linq.Expressions
  isExternal: false
  name: System.Linq.Expressions
  nameWithType: System.Linq.Expressions
  fullName: System.Linq.Expressions
