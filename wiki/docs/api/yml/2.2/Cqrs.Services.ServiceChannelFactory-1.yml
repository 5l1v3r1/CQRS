### YamlMime:ManagedReference
items:
- uid: Cqrs.Services.ServiceChannelFactory`1
  commentId: T:Cqrs.Services.ServiceChannelFactory`1
  id: ServiceChannelFactory`1
  parent: Cqrs.Services
  children:
  - Cqrs.Services.ServiceChannelFactory`1.#ctor(System.String)
  - Cqrs.Services.ServiceChannelFactory`1.AttachDataContractResolver(System.ServiceModel.Description.ServiceEndpoint)
  - Cqrs.Services.ServiceChannelFactory`1.RegisterDataContracts
  langs:
  - csharp
  - vb
  name: ServiceChannelFactory<TService>
  nameWithType: ServiceChannelFactory<TService>
  fullName: Cqrs.Services.ServiceChannelFactory<TService>
  type: Class
  source:
    remote:
      path: Framework/Cqrs/Services/ServiceChannelFactory.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: ServiceChannelFactory
    path: Framework/Cqrs/Services/ServiceChannelFactory.cs
    startLine: 19
  assemblies:
  - Cqrs
  namespace: Cqrs.Services
  summary: "\nA factory that creates channels of different types that are used by clients to send messages to variously configured service endpoints.\n"
  example: []
  syntax:
    content: 'public class ServiceChannelFactory<TService> : ChannelFactory<TService>, IDisposable, IChannelFactory<TService>, IChannelFactory, ICommunicationObject'
    typeParameters:
    - id: TService
      description: The <xref href="System.Type" data-throw-if-not-resolved="false"></xref> of service this <xref href="System.ServiceModel.ChannelFactory" data-throw-if-not-resolved="false"></xref> is for.
    content.vb: >-
      Public Class ServiceChannelFactory(Of TService)
          Inherits ChannelFactory(Of TService)
          Implements IDisposable, IChannelFactory(Of TService), IChannelFactory, ICommunicationObject
  inheritance:
  - System.Object
  - System.ServiceModel.Channels.CommunicationObject
  - System.ServiceModel.ChannelFactory
  - System.ServiceModel.ChannelFactory{{TService}}
  implements:
  - System.IDisposable
  - System.ServiceModel.Channels.IChannelFactory{{TService}}
  - System.ServiceModel.Channels.IChannelFactory
  - System.ServiceModel.ICommunicationObject
  inheritedMembers:
  - System.ServiceModel.ChannelFactory{{TService}}.CreateChannel(System.ServiceModel.EndpointAddress)
  - System.ServiceModel.ChannelFactory{{TService}}.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)
  - System.ServiceModel.ChannelFactory{{TService}}.CreateChannel
  - System.ServiceModel.ChannelFactory{{TService}}.CreateDescription
  - System.ServiceModel.ChannelFactory{{TService}}.CreateChannel(System.String)
  - System.ServiceModel.ChannelFactory{{TService}}.CreateChannel(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)
  - System.ServiceModel.ChannelFactory{{TService}}.CreateChannel(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress,System.Uri)
  - System.ServiceModel.ChannelFactory.EnsureOpened
  - System.ServiceModel.ChannelFactory.ApplyConfiguration(System.String)
  - System.ServiceModel.ChannelFactory.CreateFactory
  - System.ServiceModel.ChannelFactory.System#IDisposable#Dispose
  - System.ServiceModel.ChannelFactory.GetProperty``1
  - System.ServiceModel.ChannelFactory.InitializeEndpoint(System.String,System.ServiceModel.EndpointAddress)
  - System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Description.ServiceEndpoint)
  - System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)
  - System.ServiceModel.ChannelFactory.OnOpened
  - System.ServiceModel.ChannelFactory.OnAbort
  - System.ServiceModel.ChannelFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.ChannelFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.ChannelFactory.OnClose(System.TimeSpan)
  - System.ServiceModel.ChannelFactory.OnEndClose(System.IAsyncResult)
  - System.ServiceModel.ChannelFactory.OnEndOpen(System.IAsyncResult)
  - System.ServiceModel.ChannelFactory.OnOpen(System.TimeSpan)
  - System.ServiceModel.ChannelFactory.OnOpening
  - System.ServiceModel.ChannelFactory.Credentials
  - System.ServiceModel.ChannelFactory.DefaultCloseTimeout
  - System.ServiceModel.ChannelFactory.DefaultOpenTimeout
  - System.ServiceModel.ChannelFactory.Endpoint
  - System.ServiceModel.Channels.CommunicationObject.Abort
  - System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.CommunicationObject.Close
  - System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)
  - System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)
  - System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)
  - System.ServiceModel.Channels.CommunicationObject.Fault
  - System.ServiceModel.Channels.CommunicationObject.Open
  - System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)
  - System.ServiceModel.Channels.CommunicationObject.OnClosed
  - System.ServiceModel.Channels.CommunicationObject.OnClosing
  - System.ServiceModel.Channels.CommunicationObject.OnFaulted
  - System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType
  - System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed
  - System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable
  - System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen
  - System.ServiceModel.Channels.CommunicationObject.IsDisposed
  - System.ServiceModel.Channels.CommunicationObject.State
  - System.ServiceModel.Channels.CommunicationObject.ThisLock
  - System.ServiceModel.Channels.CommunicationObject.Closed
  - System.ServiceModel.Channels.CommunicationObject.Closing
  - System.ServiceModel.Channels.CommunicationObject.Faulted
  - System.ServiceModel.Channels.CommunicationObject.Opened
  - System.ServiceModel.Channels.CommunicationObject.Opening
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: ServiceChannelFactory(Of TService)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Cqrs.Services.ServiceChannelFactory(Of TService)
  name.vb: ServiceChannelFactory(Of TService)
- uid: Cqrs.Services.ServiceChannelFactory`1.#ctor(System.String)
  commentId: M:Cqrs.Services.ServiceChannelFactory`1.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Cqrs.Services.ServiceChannelFactory`1
  langs:
  - csharp
  - vb
  name: ServiceChannelFactory(String)
  nameWithType: ServiceChannelFactory<TService>.ServiceChannelFactory(String)
  fullName: Cqrs.Services.ServiceChannelFactory<TService>.ServiceChannelFactory(System.String)
  type: Constructor
  source:
    remote:
      path: Framework/Cqrs/Services/ServiceChannelFactory.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: .ctor
    path: Framework/Cqrs/Services/ServiceChannelFactory.cs
    startLine: 25
  assemblies:
  - Cqrs
  namespace: Cqrs.Services
  summary: "\nInstantiates a new instance of the <xref href=\"Cqrs.Services.ServiceChannelFactory%601\" data-throw-if-not-resolved=\"false\"></xref> class with a specified endpoint configuration name.\n"
  example: []
  syntax:
    content: public ServiceChannelFactory(string endpointConfigurationName)
    parameters:
    - id: endpointConfigurationName
      type: System.String
      description: The configuration name used for the endpoint.
    content.vb: Public Sub New(endpointConfigurationName As String)
  overload: Cqrs.Services.ServiceChannelFactory`1.#ctor*
  nameWithType.vb: ServiceChannelFactory(Of TService).ServiceChannelFactory(String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Cqrs.Services.ServiceChannelFactory(Of TService).ServiceChannelFactory(System.String)
- uid: Cqrs.Services.ServiceChannelFactory`1.AttachDataContractResolver(System.ServiceModel.Description.ServiceEndpoint)
  commentId: M:Cqrs.Services.ServiceChannelFactory`1.AttachDataContractResolver(System.ServiceModel.Description.ServiceEndpoint)
  id: AttachDataContractResolver(System.ServiceModel.Description.ServiceEndpoint)
  parent: Cqrs.Services.ServiceChannelFactory`1
  langs:
  - csharp
  - vb
  name: AttachDataContractResolver(ServiceEndpoint)
  nameWithType: ServiceChannelFactory<TService>.AttachDataContractResolver(ServiceEndpoint)
  fullName: Cqrs.Services.ServiceChannelFactory<TService>.AttachDataContractResolver(System.ServiceModel.Description.ServiceEndpoint)
  type: Method
  source:
    remote:
      path: Framework/Cqrs/Services/ServiceChannelFactory.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: AttachDataContractResolver
    path: Framework/Cqrs/Services/ServiceChannelFactory.cs
    startLine: 37
  assemblies:
  - Cqrs
  namespace: Cqrs.Services
  summary: "\nUses <xref href=\"Cqrs.Services.WcfDataContractResolverConfiguration.GetDataContracts%60%601(System.String)\" data-throw-if-not-resolved=\"false\"></xref>\nto find <xref href=\"System.Runtime.Serialization.DataContractResolver\" data-throw-if-not-resolved=\"false\"></xref> to automatically attach to each\n<xref href=\"System.ServiceModel.Description.OperationDescription\" data-throw-if-not-resolved=\"false\"></xref> in <xref href=\"System.ServiceModel.Description.ContractDescription.Operations\" data-throw-if-not-resolved=\"false\"></xref> of <xref href=\"System.ServiceModel.Description.ServiceEndpoint.Contract\" data-throw-if-not-resolved=\"false\"></xref> of the provided <span class=\"paramref\">endpoint</span>.\n"
  example: []
  syntax:
    content: protected virtual void AttachDataContractResolver(ServiceEndpoint endpoint)
    parameters:
    - id: endpoint
      type: System.ServiceModel.Description.ServiceEndpoint
    content.vb: Protected Overridable Sub AttachDataContractResolver(endpoint As ServiceEndpoint)
  overload: Cqrs.Services.ServiceChannelFactory`1.AttachDataContractResolver*
  nameWithType.vb: ServiceChannelFactory(Of TService).AttachDataContractResolver(ServiceEndpoint)
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Cqrs.Services.ServiceChannelFactory(Of TService).AttachDataContractResolver(System.ServiceModel.Description.ServiceEndpoint)
- uid: Cqrs.Services.ServiceChannelFactory`1.RegisterDataContracts
  commentId: M:Cqrs.Services.ServiceChannelFactory`1.RegisterDataContracts
  id: RegisterDataContracts
  parent: Cqrs.Services.ServiceChannelFactory`1
  langs:
  - csharp
  - vb
  name: RegisterDataContracts()
  nameWithType: ServiceChannelFactory<TService>.RegisterDataContracts()
  fullName: Cqrs.Services.ServiceChannelFactory<TService>.RegisterDataContracts()
  type: Method
  source:
    remote:
      path: Framework/Cqrs/Services/ServiceChannelFactory.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: RegisterDataContracts
    path: Framework/Cqrs/Services/ServiceChannelFactory.cs
    startLine: 56
  assemblies:
  - Cqrs
  namespace: Cqrs.Services
  summary: "\nRegister any additional <xref href=\"System.Runtime.Serialization.DataContractResolver\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: protected virtual void RegisterDataContracts()
    content.vb: Protected Overridable Sub RegisterDataContracts
  overload: Cqrs.Services.ServiceChannelFactory`1.RegisterDataContracts*
  nameWithType.vb: ServiceChannelFactory(Of TService).RegisterDataContracts()
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Cqrs.Services.ServiceChannelFactory(Of TService).RegisterDataContracts()
references:
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ServiceModel.ChannelFactory
  commentId: T:System.ServiceModel.ChannelFactory
  parent: System.ServiceModel
  isExternal: true
  name: ChannelFactory
  nameWithType: ChannelFactory
  fullName: System.ServiceModel.ChannelFactory
- uid: Cqrs.Services
  commentId: N:Cqrs.Services
  isExternal: false
  name: Cqrs.Services
  nameWithType: Cqrs.Services
  fullName: Cqrs.Services
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ServiceModel.Channels.CommunicationObject
  commentId: T:System.ServiceModel.Channels.CommunicationObject
  parent: System.ServiceModel.Channels
  isExternal: true
  name: CommunicationObject
  nameWithType: CommunicationObject
  fullName: System.ServiceModel.Channels.CommunicationObject
- uid: System.ServiceModel.ChannelFactory{{TService}}
  commentId: T:System.ServiceModel.ChannelFactory{`0}
  parent: System.ServiceModel
  definition: System.ServiceModel.ChannelFactory`1
  name: ChannelFactory<TService>
  nameWithType: ChannelFactory<TService>
  fullName: System.ServiceModel.ChannelFactory<TService>
  nameWithType.vb: ChannelFactory(Of TService)
  fullName.vb: System.ServiceModel.ChannelFactory(Of TService)
  name.vb: ChannelFactory(Of TService)
  spec.csharp:
  - uid: System.ServiceModel.ChannelFactory`1
    name: ChannelFactory
    nameWithType: ChannelFactory
    fullName: System.ServiceModel.ChannelFactory
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TService
    nameWithType: TService
    fullName: TService
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.ServiceModel.ChannelFactory`1
    name: ChannelFactory
    nameWithType: ChannelFactory
    fullName: System.ServiceModel.ChannelFactory
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TService
    nameWithType: TService
    fullName: TService
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.ServiceModel.Channels.IChannelFactory{{TService}}
  commentId: T:System.ServiceModel.Channels.IChannelFactory{`0}
  parent: System.ServiceModel.Channels
  definition: System.ServiceModel.Channels.IChannelFactory`1
  name: IChannelFactory<TService>
  nameWithType: IChannelFactory<TService>
  fullName: System.ServiceModel.Channels.IChannelFactory<TService>
  nameWithType.vb: IChannelFactory(Of TService)
  fullName.vb: System.ServiceModel.Channels.IChannelFactory(Of TService)
  name.vb: IChannelFactory(Of TService)
  spec.csharp:
  - uid: System.ServiceModel.Channels.IChannelFactory`1
    name: IChannelFactory
    nameWithType: IChannelFactory
    fullName: System.ServiceModel.Channels.IChannelFactory
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TService
    nameWithType: TService
    fullName: TService
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.ServiceModel.Channels.IChannelFactory`1
    name: IChannelFactory
    nameWithType: IChannelFactory
    fullName: System.ServiceModel.Channels.IChannelFactory
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TService
    nameWithType: TService
    fullName: TService
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.Channels.IChannelFactory
  commentId: T:System.ServiceModel.Channels.IChannelFactory
  parent: System.ServiceModel.Channels
  isExternal: true
  name: IChannelFactory
  nameWithType: IChannelFactory
  fullName: System.ServiceModel.Channels.IChannelFactory
- uid: System.ServiceModel.ICommunicationObject
  commentId: T:System.ServiceModel.ICommunicationObject
  parent: System.ServiceModel
  isExternal: true
  name: ICommunicationObject
  nameWithType: ICommunicationObject
  fullName: System.ServiceModel.ICommunicationObject
- uid: System.ServiceModel.ChannelFactory{{TService}}.CreateChannel(System.ServiceModel.EndpointAddress)
  commentId: M:System.ServiceModel.ChannelFactory{`0}.CreateChannel(System.ServiceModel.EndpointAddress)
  parent: System.ServiceModel.ChannelFactory{{TService}}
  definition: System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress)
  name: CreateChannel(EndpointAddress)
  nameWithType: ChannelFactory<TService>.CreateChannel(EndpointAddress)
  fullName: System.ServiceModel.ChannelFactory<TService>.CreateChannel(System.ServiceModel.EndpointAddress)
  nameWithType.vb: ChannelFactory(Of TService).CreateChannel(EndpointAddress)
  fullName.vb: System.ServiceModel.ChannelFactory(Of TService).CreateChannel(System.ServiceModel.EndpointAddress)
  spec.csharp:
  - uid: System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress)
    name: CreateChannel
    nameWithType: ChannelFactory<TService>.CreateChannel
    fullName: System.ServiceModel.ChannelFactory<TService>.CreateChannel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ServiceModel.EndpointAddress
    name: EndpointAddress
    nameWithType: EndpointAddress
    fullName: System.ServiceModel.EndpointAddress
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress)
    name: CreateChannel
    nameWithType: ChannelFactory(Of TService).CreateChannel
    fullName: System.ServiceModel.ChannelFactory(Of TService).CreateChannel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ServiceModel.EndpointAddress
    name: EndpointAddress
    nameWithType: EndpointAddress
    fullName: System.ServiceModel.EndpointAddress
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.ChannelFactory{{TService}}.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)
  commentId: M:System.ServiceModel.ChannelFactory{`0}.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)
  parent: System.ServiceModel.ChannelFactory{{TService}}
  definition: System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)
  name: CreateChannel(EndpointAddress, Uri)
  nameWithType: ChannelFactory<TService>.CreateChannel(EndpointAddress, Uri)
  fullName: System.ServiceModel.ChannelFactory<TService>.CreateChannel(System.ServiceModel.EndpointAddress, System.Uri)
  nameWithType.vb: ChannelFactory(Of TService).CreateChannel(EndpointAddress, Uri)
  fullName.vb: System.ServiceModel.ChannelFactory(Of TService).CreateChannel(System.ServiceModel.EndpointAddress, System.Uri)
  spec.csharp:
  - uid: System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)
    name: CreateChannel
    nameWithType: ChannelFactory<TService>.CreateChannel
    fullName: System.ServiceModel.ChannelFactory<TService>.CreateChannel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ServiceModel.EndpointAddress
    name: EndpointAddress
    nameWithType: EndpointAddress
    fullName: System.ServiceModel.EndpointAddress
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)
    name: CreateChannel
    nameWithType: ChannelFactory(Of TService).CreateChannel
    fullName: System.ServiceModel.ChannelFactory(Of TService).CreateChannel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ServiceModel.EndpointAddress
    name: EndpointAddress
    nameWithType: EndpointAddress
    fullName: System.ServiceModel.EndpointAddress
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.ChannelFactory{{TService}}.CreateChannel
  commentId: M:System.ServiceModel.ChannelFactory{`0}.CreateChannel
  parent: System.ServiceModel.ChannelFactory{{TService}}
  definition: System.ServiceModel.ChannelFactory`1.CreateChannel
  name: CreateChannel()
  nameWithType: ChannelFactory<TService>.CreateChannel()
  fullName: System.ServiceModel.ChannelFactory<TService>.CreateChannel()
  nameWithType.vb: ChannelFactory(Of TService).CreateChannel()
  fullName.vb: System.ServiceModel.ChannelFactory(Of TService).CreateChannel()
  spec.csharp:
  - uid: System.ServiceModel.ChannelFactory`1.CreateChannel
    name: CreateChannel
    nameWithType: ChannelFactory<TService>.CreateChannel
    fullName: System.ServiceModel.ChannelFactory<TService>.CreateChannel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ChannelFactory`1.CreateChannel
    name: CreateChannel
    nameWithType: ChannelFactory(Of TService).CreateChannel
    fullName: System.ServiceModel.ChannelFactory(Of TService).CreateChannel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.ChannelFactory{{TService}}.CreateDescription
  commentId: M:System.ServiceModel.ChannelFactory{`0}.CreateDescription
  parent: System.ServiceModel.ChannelFactory{{TService}}
  definition: System.ServiceModel.ChannelFactory`1.CreateDescription
  name: CreateDescription()
  nameWithType: ChannelFactory<TService>.CreateDescription()
  fullName: System.ServiceModel.ChannelFactory<TService>.CreateDescription()
  nameWithType.vb: ChannelFactory(Of TService).CreateDescription()
  fullName.vb: System.ServiceModel.ChannelFactory(Of TService).CreateDescription()
  spec.csharp:
  - uid: System.ServiceModel.ChannelFactory`1.CreateDescription
    name: CreateDescription
    nameWithType: ChannelFactory<TService>.CreateDescription
    fullName: System.ServiceModel.ChannelFactory<TService>.CreateDescription
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ChannelFactory`1.CreateDescription
    name: CreateDescription
    nameWithType: ChannelFactory(Of TService).CreateDescription
    fullName: System.ServiceModel.ChannelFactory(Of TService).CreateDescription
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.ChannelFactory{{TService}}.CreateChannel(System.String)
  commentId: M:System.ServiceModel.ChannelFactory{`0}.CreateChannel(System.String)
  parent: System.ServiceModel.ChannelFactory{{TService}}
  definition: System.ServiceModel.ChannelFactory`1.CreateChannel(System.String)
  name: CreateChannel(String)
  nameWithType: ChannelFactory<TService>.CreateChannel(String)
  fullName: System.ServiceModel.ChannelFactory<TService>.CreateChannel(System.String)
  nameWithType.vb: ChannelFactory(Of TService).CreateChannel(String)
  fullName.vb: System.ServiceModel.ChannelFactory(Of TService).CreateChannel(System.String)
  spec.csharp:
  - uid: System.ServiceModel.ChannelFactory`1.CreateChannel(System.String)
    name: CreateChannel
    nameWithType: ChannelFactory<TService>.CreateChannel
    fullName: System.ServiceModel.ChannelFactory<TService>.CreateChannel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ChannelFactory`1.CreateChannel(System.String)
    name: CreateChannel
    nameWithType: ChannelFactory(Of TService).CreateChannel
    fullName: System.ServiceModel.ChannelFactory(Of TService).CreateChannel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.ChannelFactory{{TService}}.CreateChannel(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)
  commentId: M:System.ServiceModel.ChannelFactory{`0}.CreateChannel(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)
  parent: System.ServiceModel.ChannelFactory{{TService}}
  definition: System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)
  name: CreateChannel(Binding, EndpointAddress)
  nameWithType: ChannelFactory<TService>.CreateChannel(Binding, EndpointAddress)
  fullName: System.ServiceModel.ChannelFactory<TService>.CreateChannel(System.ServiceModel.Channels.Binding, System.ServiceModel.EndpointAddress)
  nameWithType.vb: ChannelFactory(Of TService).CreateChannel(Binding, EndpointAddress)
  fullName.vb: System.ServiceModel.ChannelFactory(Of TService).CreateChannel(System.ServiceModel.Channels.Binding, System.ServiceModel.EndpointAddress)
  spec.csharp:
  - uid: System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)
    name: CreateChannel
    nameWithType: ChannelFactory<TService>.CreateChannel
    fullName: System.ServiceModel.ChannelFactory<TService>.CreateChannel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ServiceModel.Channels.Binding
    name: Binding
    nameWithType: Binding
    fullName: System.ServiceModel.Channels.Binding
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.ServiceModel.EndpointAddress
    name: EndpointAddress
    nameWithType: EndpointAddress
    fullName: System.ServiceModel.EndpointAddress
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)
    name: CreateChannel
    nameWithType: ChannelFactory(Of TService).CreateChannel
    fullName: System.ServiceModel.ChannelFactory(Of TService).CreateChannel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ServiceModel.Channels.Binding
    name: Binding
    nameWithType: Binding
    fullName: System.ServiceModel.Channels.Binding
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.ServiceModel.EndpointAddress
    name: EndpointAddress
    nameWithType: EndpointAddress
    fullName: System.ServiceModel.EndpointAddress
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.ChannelFactory{{TService}}.CreateChannel(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress,System.Uri)
  commentId: M:System.ServiceModel.ChannelFactory{`0}.CreateChannel(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress,System.Uri)
  parent: System.ServiceModel.ChannelFactory{{TService}}
  definition: System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress,System.Uri)
  name: CreateChannel(Binding, EndpointAddress, Uri)
  nameWithType: ChannelFactory<TService>.CreateChannel(Binding, EndpointAddress, Uri)
  fullName: System.ServiceModel.ChannelFactory<TService>.CreateChannel(System.ServiceModel.Channels.Binding, System.ServiceModel.EndpointAddress, System.Uri)
  nameWithType.vb: ChannelFactory(Of TService).CreateChannel(Binding, EndpointAddress, Uri)
  fullName.vb: System.ServiceModel.ChannelFactory(Of TService).CreateChannel(System.ServiceModel.Channels.Binding, System.ServiceModel.EndpointAddress, System.Uri)
  spec.csharp:
  - uid: System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress,System.Uri)
    name: CreateChannel
    nameWithType: ChannelFactory<TService>.CreateChannel
    fullName: System.ServiceModel.ChannelFactory<TService>.CreateChannel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ServiceModel.Channels.Binding
    name: Binding
    nameWithType: Binding
    fullName: System.ServiceModel.Channels.Binding
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.ServiceModel.EndpointAddress
    name: EndpointAddress
    nameWithType: EndpointAddress
    fullName: System.ServiceModel.EndpointAddress
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress,System.Uri)
    name: CreateChannel
    nameWithType: ChannelFactory(Of TService).CreateChannel
    fullName: System.ServiceModel.ChannelFactory(Of TService).CreateChannel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ServiceModel.Channels.Binding
    name: Binding
    nameWithType: Binding
    fullName: System.ServiceModel.Channels.Binding
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.ServiceModel.EndpointAddress
    name: EndpointAddress
    nameWithType: EndpointAddress
    fullName: System.ServiceModel.EndpointAddress
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.ChannelFactory.EnsureOpened
  commentId: M:System.ServiceModel.ChannelFactory.EnsureOpened
  parent: System.ServiceModel.ChannelFactory
  isExternal: true
  name: EnsureOpened()
  nameWithType: ChannelFactory.EnsureOpened()
  fullName: System.ServiceModel.ChannelFactory.EnsureOpened()
  spec.csharp:
  - uid: System.ServiceModel.ChannelFactory.EnsureOpened
    name: EnsureOpened
    nameWithType: ChannelFactory.EnsureOpened
    fullName: System.ServiceModel.ChannelFactory.EnsureOpened
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ChannelFactory.EnsureOpened
    name: EnsureOpened
    nameWithType: ChannelFactory.EnsureOpened
    fullName: System.ServiceModel.ChannelFactory.EnsureOpened
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.ChannelFactory.ApplyConfiguration(System.String)
  commentId: M:System.ServiceModel.ChannelFactory.ApplyConfiguration(System.String)
  parent: System.ServiceModel.ChannelFactory
  isExternal: true
  name: ApplyConfiguration(String)
  nameWithType: ChannelFactory.ApplyConfiguration(String)
  fullName: System.ServiceModel.ChannelFactory.ApplyConfiguration(System.String)
  spec.csharp:
  - uid: System.ServiceModel.ChannelFactory.ApplyConfiguration(System.String)
    name: ApplyConfiguration
    nameWithType: ChannelFactory.ApplyConfiguration
    fullName: System.ServiceModel.ChannelFactory.ApplyConfiguration
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ChannelFactory.ApplyConfiguration(System.String)
    name: ApplyConfiguration
    nameWithType: ChannelFactory.ApplyConfiguration
    fullName: System.ServiceModel.ChannelFactory.ApplyConfiguration
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.ChannelFactory.CreateFactory
  commentId: M:System.ServiceModel.ChannelFactory.CreateFactory
  parent: System.ServiceModel.ChannelFactory
  isExternal: true
  name: CreateFactory()
  nameWithType: ChannelFactory.CreateFactory()
  fullName: System.ServiceModel.ChannelFactory.CreateFactory()
  spec.csharp:
  - uid: System.ServiceModel.ChannelFactory.CreateFactory
    name: CreateFactory
    nameWithType: ChannelFactory.CreateFactory
    fullName: System.ServiceModel.ChannelFactory.CreateFactory
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ChannelFactory.CreateFactory
    name: CreateFactory
    nameWithType: ChannelFactory.CreateFactory
    fullName: System.ServiceModel.ChannelFactory.CreateFactory
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.ChannelFactory.System#IDisposable#Dispose
  commentId: M:System.ServiceModel.ChannelFactory.System#IDisposable#Dispose
  parent: System.ServiceModel.ChannelFactory
  isExternal: true
  name: IDisposable.Dispose()
  nameWithType: ChannelFactory.IDisposable.Dispose()
  fullName: System.ServiceModel.ChannelFactory.System.IDisposable.Dispose()
  nameWithType.vb: ChannelFactory.System.IDisposable.Dispose()
  name.vb: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.ServiceModel.ChannelFactory.System#IDisposable#Dispose
    name: IDisposable.Dispose
    nameWithType: ChannelFactory.IDisposable.Dispose
    fullName: System.ServiceModel.ChannelFactory.System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ChannelFactory.System#IDisposable#Dispose
    name: System.IDisposable.Dispose
    nameWithType: ChannelFactory.System.IDisposable.Dispose
    fullName: System.ServiceModel.ChannelFactory.System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.ChannelFactory.GetProperty``1
  commentId: M:System.ServiceModel.ChannelFactory.GetProperty``1
  parent: System.ServiceModel.ChannelFactory
  isExternal: true
  name: GetProperty<T>()
  nameWithType: ChannelFactory.GetProperty<T>()
  fullName: System.ServiceModel.ChannelFactory.GetProperty<T>()
  nameWithType.vb: ChannelFactory.GetProperty(Of T)()
  fullName.vb: System.ServiceModel.ChannelFactory.GetProperty(Of T)()
  name.vb: GetProperty(Of T)()
  spec.csharp:
  - uid: System.ServiceModel.ChannelFactory.GetProperty``1
    name: GetProperty<T>
    nameWithType: ChannelFactory.GetProperty<T>
    fullName: System.ServiceModel.ChannelFactory.GetProperty<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ChannelFactory.GetProperty``1
    name: GetProperty(Of T)
    nameWithType: ChannelFactory.GetProperty(Of T)
    fullName: System.ServiceModel.ChannelFactory.GetProperty(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.ChannelFactory.InitializeEndpoint(System.String,System.ServiceModel.EndpointAddress)
  commentId: M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.String,System.ServiceModel.EndpointAddress)
  parent: System.ServiceModel.ChannelFactory
  isExternal: true
  name: InitializeEndpoint(String, EndpointAddress)
  nameWithType: ChannelFactory.InitializeEndpoint(String, EndpointAddress)
  fullName: System.ServiceModel.ChannelFactory.InitializeEndpoint(System.String, System.ServiceModel.EndpointAddress)
  spec.csharp:
  - uid: System.ServiceModel.ChannelFactory.InitializeEndpoint(System.String,System.ServiceModel.EndpointAddress)
    name: InitializeEndpoint
    nameWithType: ChannelFactory.InitializeEndpoint
    fullName: System.ServiceModel.ChannelFactory.InitializeEndpoint
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.ServiceModel.EndpointAddress
    name: EndpointAddress
    nameWithType: EndpointAddress
    fullName: System.ServiceModel.EndpointAddress
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ChannelFactory.InitializeEndpoint(System.String,System.ServiceModel.EndpointAddress)
    name: InitializeEndpoint
    nameWithType: ChannelFactory.InitializeEndpoint
    fullName: System.ServiceModel.ChannelFactory.InitializeEndpoint
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.ServiceModel.EndpointAddress
    name: EndpointAddress
    nameWithType: EndpointAddress
    fullName: System.ServiceModel.EndpointAddress
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Description.ServiceEndpoint)
  commentId: M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Description.ServiceEndpoint)
  parent: System.ServiceModel.ChannelFactory
  isExternal: true
  name: InitializeEndpoint(ServiceEndpoint)
  nameWithType: ChannelFactory.InitializeEndpoint(ServiceEndpoint)
  fullName: System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Description.ServiceEndpoint)
  spec.csharp:
  - uid: System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Description.ServiceEndpoint)
    name: InitializeEndpoint
    nameWithType: ChannelFactory.InitializeEndpoint
    fullName: System.ServiceModel.ChannelFactory.InitializeEndpoint
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ServiceModel.Description.ServiceEndpoint
    name: ServiceEndpoint
    nameWithType: ServiceEndpoint
    fullName: System.ServiceModel.Description.ServiceEndpoint
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Description.ServiceEndpoint)
    name: InitializeEndpoint
    nameWithType: ChannelFactory.InitializeEndpoint
    fullName: System.ServiceModel.ChannelFactory.InitializeEndpoint
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ServiceModel.Description.ServiceEndpoint
    name: ServiceEndpoint
    nameWithType: ServiceEndpoint
    fullName: System.ServiceModel.Description.ServiceEndpoint
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)
  commentId: M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)
  parent: System.ServiceModel.ChannelFactory
  isExternal: true
  name: InitializeEndpoint(Binding, EndpointAddress)
  nameWithType: ChannelFactory.InitializeEndpoint(Binding, EndpointAddress)
  fullName: System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Channels.Binding, System.ServiceModel.EndpointAddress)
  spec.csharp:
  - uid: System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)
    name: InitializeEndpoint
    nameWithType: ChannelFactory.InitializeEndpoint
    fullName: System.ServiceModel.ChannelFactory.InitializeEndpoint
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ServiceModel.Channels.Binding
    name: Binding
    nameWithType: Binding
    fullName: System.ServiceModel.Channels.Binding
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.ServiceModel.EndpointAddress
    name: EndpointAddress
    nameWithType: EndpointAddress
    fullName: System.ServiceModel.EndpointAddress
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)
    name: InitializeEndpoint
    nameWithType: ChannelFactory.InitializeEndpoint
    fullName: System.ServiceModel.ChannelFactory.InitializeEndpoint
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ServiceModel.Channels.Binding
    name: Binding
    nameWithType: Binding
    fullName: System.ServiceModel.Channels.Binding
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.ServiceModel.EndpointAddress
    name: EndpointAddress
    nameWithType: EndpointAddress
    fullName: System.ServiceModel.EndpointAddress
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.ChannelFactory.OnOpened
  commentId: M:System.ServiceModel.ChannelFactory.OnOpened
  parent: System.ServiceModel.ChannelFactory
  isExternal: true
  name: OnOpened()
  nameWithType: ChannelFactory.OnOpened()
  fullName: System.ServiceModel.ChannelFactory.OnOpened()
  spec.csharp:
  - uid: System.ServiceModel.ChannelFactory.OnOpened
    name: OnOpened
    nameWithType: ChannelFactory.OnOpened
    fullName: System.ServiceModel.ChannelFactory.OnOpened
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ChannelFactory.OnOpened
    name: OnOpened
    nameWithType: ChannelFactory.OnOpened
    fullName: System.ServiceModel.ChannelFactory.OnOpened
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.ChannelFactory.OnAbort
  commentId: M:System.ServiceModel.ChannelFactory.OnAbort
  parent: System.ServiceModel.ChannelFactory
  isExternal: true
  name: OnAbort()
  nameWithType: ChannelFactory.OnAbort()
  fullName: System.ServiceModel.ChannelFactory.OnAbort()
  spec.csharp:
  - uid: System.ServiceModel.ChannelFactory.OnAbort
    name: OnAbort
    nameWithType: ChannelFactory.OnAbort
    fullName: System.ServiceModel.ChannelFactory.OnAbort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ChannelFactory.OnAbort
    name: OnAbort
    nameWithType: ChannelFactory.OnAbort
    fullName: System.ServiceModel.ChannelFactory.OnAbort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.ChannelFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  commentId: M:System.ServiceModel.ChannelFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.ChannelFactory
  isExternal: true
  name: OnBeginClose(TimeSpan, AsyncCallback, Object)
  nameWithType: ChannelFactory.OnBeginClose(TimeSpan, AsyncCallback, Object)
  fullName: System.ServiceModel.ChannelFactory.OnBeginClose(System.TimeSpan, System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: System.ServiceModel.ChannelFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
    name: OnBeginClose
    nameWithType: ChannelFactory.OnBeginClose
    fullName: System.ServiceModel.ChannelFactory.OnBeginClose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    nameWithType: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ChannelFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
    name: OnBeginClose
    nameWithType: ChannelFactory.OnBeginClose
    fullName: System.ServiceModel.ChannelFactory.OnBeginClose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    nameWithType: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.ChannelFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  commentId: M:System.ServiceModel.ChannelFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.ChannelFactory
  isExternal: true
  name: OnBeginOpen(TimeSpan, AsyncCallback, Object)
  nameWithType: ChannelFactory.OnBeginOpen(TimeSpan, AsyncCallback, Object)
  fullName: System.ServiceModel.ChannelFactory.OnBeginOpen(System.TimeSpan, System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: System.ServiceModel.ChannelFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
    name: OnBeginOpen
    nameWithType: ChannelFactory.OnBeginOpen
    fullName: System.ServiceModel.ChannelFactory.OnBeginOpen
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    nameWithType: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ChannelFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
    name: OnBeginOpen
    nameWithType: ChannelFactory.OnBeginOpen
    fullName: System.ServiceModel.ChannelFactory.OnBeginOpen
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    nameWithType: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.ChannelFactory.OnClose(System.TimeSpan)
  commentId: M:System.ServiceModel.ChannelFactory.OnClose(System.TimeSpan)
  parent: System.ServiceModel.ChannelFactory
  isExternal: true
  name: OnClose(TimeSpan)
  nameWithType: ChannelFactory.OnClose(TimeSpan)
  fullName: System.ServiceModel.ChannelFactory.OnClose(System.TimeSpan)
  spec.csharp:
  - uid: System.ServiceModel.ChannelFactory.OnClose(System.TimeSpan)
    name: OnClose
    nameWithType: ChannelFactory.OnClose
    fullName: System.ServiceModel.ChannelFactory.OnClose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ChannelFactory.OnClose(System.TimeSpan)
    name: OnClose
    nameWithType: ChannelFactory.OnClose
    fullName: System.ServiceModel.ChannelFactory.OnClose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.ChannelFactory.OnEndClose(System.IAsyncResult)
  commentId: M:System.ServiceModel.ChannelFactory.OnEndClose(System.IAsyncResult)
  parent: System.ServiceModel.ChannelFactory
  isExternal: true
  name: OnEndClose(IAsyncResult)
  nameWithType: ChannelFactory.OnEndClose(IAsyncResult)
  fullName: System.ServiceModel.ChannelFactory.OnEndClose(System.IAsyncResult)
  spec.csharp:
  - uid: System.ServiceModel.ChannelFactory.OnEndClose(System.IAsyncResult)
    name: OnEndClose
    nameWithType: ChannelFactory.OnEndClose
    fullName: System.ServiceModel.ChannelFactory.OnEndClose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    nameWithType: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ChannelFactory.OnEndClose(System.IAsyncResult)
    name: OnEndClose
    nameWithType: ChannelFactory.OnEndClose
    fullName: System.ServiceModel.ChannelFactory.OnEndClose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    nameWithType: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.ChannelFactory.OnEndOpen(System.IAsyncResult)
  commentId: M:System.ServiceModel.ChannelFactory.OnEndOpen(System.IAsyncResult)
  parent: System.ServiceModel.ChannelFactory
  isExternal: true
  name: OnEndOpen(IAsyncResult)
  nameWithType: ChannelFactory.OnEndOpen(IAsyncResult)
  fullName: System.ServiceModel.ChannelFactory.OnEndOpen(System.IAsyncResult)
  spec.csharp:
  - uid: System.ServiceModel.ChannelFactory.OnEndOpen(System.IAsyncResult)
    name: OnEndOpen
    nameWithType: ChannelFactory.OnEndOpen
    fullName: System.ServiceModel.ChannelFactory.OnEndOpen
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    nameWithType: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ChannelFactory.OnEndOpen(System.IAsyncResult)
    name: OnEndOpen
    nameWithType: ChannelFactory.OnEndOpen
    fullName: System.ServiceModel.ChannelFactory.OnEndOpen
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    nameWithType: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.ChannelFactory.OnOpen(System.TimeSpan)
  commentId: M:System.ServiceModel.ChannelFactory.OnOpen(System.TimeSpan)
  parent: System.ServiceModel.ChannelFactory
  isExternal: true
  name: OnOpen(TimeSpan)
  nameWithType: ChannelFactory.OnOpen(TimeSpan)
  fullName: System.ServiceModel.ChannelFactory.OnOpen(System.TimeSpan)
  spec.csharp:
  - uid: System.ServiceModel.ChannelFactory.OnOpen(System.TimeSpan)
    name: OnOpen
    nameWithType: ChannelFactory.OnOpen
    fullName: System.ServiceModel.ChannelFactory.OnOpen
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ChannelFactory.OnOpen(System.TimeSpan)
    name: OnOpen
    nameWithType: ChannelFactory.OnOpen
    fullName: System.ServiceModel.ChannelFactory.OnOpen
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.ChannelFactory.OnOpening
  commentId: M:System.ServiceModel.ChannelFactory.OnOpening
  parent: System.ServiceModel.ChannelFactory
  isExternal: true
  name: OnOpening()
  nameWithType: ChannelFactory.OnOpening()
  fullName: System.ServiceModel.ChannelFactory.OnOpening()
  spec.csharp:
  - uid: System.ServiceModel.ChannelFactory.OnOpening
    name: OnOpening
    nameWithType: ChannelFactory.OnOpening
    fullName: System.ServiceModel.ChannelFactory.OnOpening
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ChannelFactory.OnOpening
    name: OnOpening
    nameWithType: ChannelFactory.OnOpening
    fullName: System.ServiceModel.ChannelFactory.OnOpening
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.ChannelFactory.Credentials
  commentId: P:System.ServiceModel.ChannelFactory.Credentials
  parent: System.ServiceModel.ChannelFactory
  isExternal: true
  name: Credentials
  nameWithType: ChannelFactory.Credentials
  fullName: System.ServiceModel.ChannelFactory.Credentials
- uid: System.ServiceModel.ChannelFactory.DefaultCloseTimeout
  commentId: P:System.ServiceModel.ChannelFactory.DefaultCloseTimeout
  parent: System.ServiceModel.ChannelFactory
  isExternal: true
  name: DefaultCloseTimeout
  nameWithType: ChannelFactory.DefaultCloseTimeout
  fullName: System.ServiceModel.ChannelFactory.DefaultCloseTimeout
- uid: System.ServiceModel.ChannelFactory.DefaultOpenTimeout
  commentId: P:System.ServiceModel.ChannelFactory.DefaultOpenTimeout
  parent: System.ServiceModel.ChannelFactory
  isExternal: true
  name: DefaultOpenTimeout
  nameWithType: ChannelFactory.DefaultOpenTimeout
  fullName: System.ServiceModel.ChannelFactory.DefaultOpenTimeout
- uid: System.ServiceModel.ChannelFactory.Endpoint
  commentId: P:System.ServiceModel.ChannelFactory.Endpoint
  parent: System.ServiceModel.ChannelFactory
  isExternal: true
  name: Endpoint
  nameWithType: ChannelFactory.Endpoint
  fullName: System.ServiceModel.ChannelFactory.Endpoint
- uid: System.ServiceModel.Channels.CommunicationObject.Abort
  commentId: M:System.ServiceModel.Channels.CommunicationObject.Abort
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: true
  name: Abort()
  nameWithType: CommunicationObject.Abort()
  fullName: System.ServiceModel.Channels.CommunicationObject.Abort()
  spec.csharp:
  - uid: System.ServiceModel.Channels.CommunicationObject.Abort
    name: Abort
    nameWithType: CommunicationObject.Abort
    fullName: System.ServiceModel.Channels.CommunicationObject.Abort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.CommunicationObject.Abort
    name: Abort
    nameWithType: CommunicationObject.Abort
    fullName: System.ServiceModel.Channels.CommunicationObject.Abort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)
  commentId: M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: true
  name: BeginClose(AsyncCallback, Object)
  nameWithType: CommunicationObject.BeginClose(AsyncCallback, Object)
  fullName: System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)
    name: BeginClose
    nameWithType: CommunicationObject.BeginClose
    fullName: System.ServiceModel.Channels.CommunicationObject.BeginClose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.AsyncCallback
    name: AsyncCallback
    nameWithType: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)
    name: BeginClose
    nameWithType: CommunicationObject.BeginClose
    fullName: System.ServiceModel.Channels.CommunicationObject.BeginClose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.AsyncCallback
    name: AsyncCallback
    nameWithType: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  commentId: M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: true
  name: BeginClose(TimeSpan, AsyncCallback, Object)
  nameWithType: CommunicationObject.BeginClose(TimeSpan, AsyncCallback, Object)
  fullName: System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan, System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
    name: BeginClose
    nameWithType: CommunicationObject.BeginClose
    fullName: System.ServiceModel.Channels.CommunicationObject.BeginClose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    nameWithType: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
    name: BeginClose
    nameWithType: CommunicationObject.BeginClose
    fullName: System.ServiceModel.Channels.CommunicationObject.BeginClose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    nameWithType: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)
  commentId: M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: true
  name: BeginOpen(AsyncCallback, Object)
  nameWithType: CommunicationObject.BeginOpen(AsyncCallback, Object)
  fullName: System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)
    name: BeginOpen
    nameWithType: CommunicationObject.BeginOpen
    fullName: System.ServiceModel.Channels.CommunicationObject.BeginOpen
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.AsyncCallback
    name: AsyncCallback
    nameWithType: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)
    name: BeginOpen
    nameWithType: CommunicationObject.BeginOpen
    fullName: System.ServiceModel.Channels.CommunicationObject.BeginOpen
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.AsyncCallback
    name: AsyncCallback
    nameWithType: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  commentId: M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: true
  name: BeginOpen(TimeSpan, AsyncCallback, Object)
  nameWithType: CommunicationObject.BeginOpen(TimeSpan, AsyncCallback, Object)
  fullName: System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan, System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
    name: BeginOpen
    nameWithType: CommunicationObject.BeginOpen
    fullName: System.ServiceModel.Channels.CommunicationObject.BeginOpen
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    nameWithType: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
    name: BeginOpen
    nameWithType: CommunicationObject.BeginOpen
    fullName: System.ServiceModel.Channels.CommunicationObject.BeginOpen
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    nameWithType: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.Channels.CommunicationObject.Close
  commentId: M:System.ServiceModel.Channels.CommunicationObject.Close
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: true
  name: Close()
  nameWithType: CommunicationObject.Close()
  fullName: System.ServiceModel.Channels.CommunicationObject.Close()
  spec.csharp:
  - uid: System.ServiceModel.Channels.CommunicationObject.Close
    name: Close
    nameWithType: CommunicationObject.Close
    fullName: System.ServiceModel.Channels.CommunicationObject.Close
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.CommunicationObject.Close
    name: Close
    nameWithType: CommunicationObject.Close
    fullName: System.ServiceModel.Channels.CommunicationObject.Close
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)
  commentId: M:System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: true
  name: Close(TimeSpan)
  nameWithType: CommunicationObject.Close(TimeSpan)
  fullName: System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)
  spec.csharp:
  - uid: System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)
    name: Close
    nameWithType: CommunicationObject.Close
    fullName: System.ServiceModel.Channels.CommunicationObject.Close
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)
    name: Close
    nameWithType: CommunicationObject.Close
    fullName: System.ServiceModel.Channels.CommunicationObject.Close
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)
  commentId: M:System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: true
  name: EndClose(IAsyncResult)
  nameWithType: CommunicationObject.EndClose(IAsyncResult)
  fullName: System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)
  spec.csharp:
  - uid: System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)
    name: EndClose
    nameWithType: CommunicationObject.EndClose
    fullName: System.ServiceModel.Channels.CommunicationObject.EndClose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    nameWithType: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)
    name: EndClose
    nameWithType: CommunicationObject.EndClose
    fullName: System.ServiceModel.Channels.CommunicationObject.EndClose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    nameWithType: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)
  commentId: M:System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: true
  name: EndOpen(IAsyncResult)
  nameWithType: CommunicationObject.EndOpen(IAsyncResult)
  fullName: System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)
  spec.csharp:
  - uid: System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)
    name: EndOpen
    nameWithType: CommunicationObject.EndOpen
    fullName: System.ServiceModel.Channels.CommunicationObject.EndOpen
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    nameWithType: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)
    name: EndOpen
    nameWithType: CommunicationObject.EndOpen
    fullName: System.ServiceModel.Channels.CommunicationObject.EndOpen
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    nameWithType: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.Channels.CommunicationObject.Fault
  commentId: M:System.ServiceModel.Channels.CommunicationObject.Fault
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: true
  name: Fault()
  nameWithType: CommunicationObject.Fault()
  fullName: System.ServiceModel.Channels.CommunicationObject.Fault()
  spec.csharp:
  - uid: System.ServiceModel.Channels.CommunicationObject.Fault
    name: Fault
    nameWithType: CommunicationObject.Fault
    fullName: System.ServiceModel.Channels.CommunicationObject.Fault
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.CommunicationObject.Fault
    name: Fault
    nameWithType: CommunicationObject.Fault
    fullName: System.ServiceModel.Channels.CommunicationObject.Fault
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.Channels.CommunicationObject.Open
  commentId: M:System.ServiceModel.Channels.CommunicationObject.Open
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: true
  name: Open()
  nameWithType: CommunicationObject.Open()
  fullName: System.ServiceModel.Channels.CommunicationObject.Open()
  spec.csharp:
  - uid: System.ServiceModel.Channels.CommunicationObject.Open
    name: Open
    nameWithType: CommunicationObject.Open
    fullName: System.ServiceModel.Channels.CommunicationObject.Open
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.CommunicationObject.Open
    name: Open
    nameWithType: CommunicationObject.Open
    fullName: System.ServiceModel.Channels.CommunicationObject.Open
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)
  commentId: M:System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: true
  name: Open(TimeSpan)
  nameWithType: CommunicationObject.Open(TimeSpan)
  fullName: System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)
  spec.csharp:
  - uid: System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)
    name: Open
    nameWithType: CommunicationObject.Open
    fullName: System.ServiceModel.Channels.CommunicationObject.Open
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)
    name: Open
    nameWithType: CommunicationObject.Open
    fullName: System.ServiceModel.Channels.CommunicationObject.Open
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.Channels.CommunicationObject.OnClosed
  commentId: M:System.ServiceModel.Channels.CommunicationObject.OnClosed
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: true
  name: OnClosed()
  nameWithType: CommunicationObject.OnClosed()
  fullName: System.ServiceModel.Channels.CommunicationObject.OnClosed()
  spec.csharp:
  - uid: System.ServiceModel.Channels.CommunicationObject.OnClosed
    name: OnClosed
    nameWithType: CommunicationObject.OnClosed
    fullName: System.ServiceModel.Channels.CommunicationObject.OnClosed
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.CommunicationObject.OnClosed
    name: OnClosed
    nameWithType: CommunicationObject.OnClosed
    fullName: System.ServiceModel.Channels.CommunicationObject.OnClosed
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.Channels.CommunicationObject.OnClosing
  commentId: M:System.ServiceModel.Channels.CommunicationObject.OnClosing
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: true
  name: OnClosing()
  nameWithType: CommunicationObject.OnClosing()
  fullName: System.ServiceModel.Channels.CommunicationObject.OnClosing()
  spec.csharp:
  - uid: System.ServiceModel.Channels.CommunicationObject.OnClosing
    name: OnClosing
    nameWithType: CommunicationObject.OnClosing
    fullName: System.ServiceModel.Channels.CommunicationObject.OnClosing
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.CommunicationObject.OnClosing
    name: OnClosing
    nameWithType: CommunicationObject.OnClosing
    fullName: System.ServiceModel.Channels.CommunicationObject.OnClosing
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.Channels.CommunicationObject.OnFaulted
  commentId: M:System.ServiceModel.Channels.CommunicationObject.OnFaulted
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: true
  name: OnFaulted()
  nameWithType: CommunicationObject.OnFaulted()
  fullName: System.ServiceModel.Channels.CommunicationObject.OnFaulted()
  spec.csharp:
  - uid: System.ServiceModel.Channels.CommunicationObject.OnFaulted
    name: OnFaulted
    nameWithType: CommunicationObject.OnFaulted
    fullName: System.ServiceModel.Channels.CommunicationObject.OnFaulted
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.CommunicationObject.OnFaulted
    name: OnFaulted
    nameWithType: CommunicationObject.OnFaulted
    fullName: System.ServiceModel.Channels.CommunicationObject.OnFaulted
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType
  commentId: M:System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: true
  name: GetCommunicationObjectType()
  nameWithType: CommunicationObject.GetCommunicationObjectType()
  fullName: System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType()
  spec.csharp:
  - uid: System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType
    name: GetCommunicationObjectType
    nameWithType: CommunicationObject.GetCommunicationObjectType
    fullName: System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType
    name: GetCommunicationObjectType
    nameWithType: CommunicationObject.GetCommunicationObjectType
    fullName: System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed
  commentId: M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: true
  name: ThrowIfDisposed()
  nameWithType: CommunicationObject.ThrowIfDisposed()
  fullName: System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed()
  spec.csharp:
  - uid: System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed
    name: ThrowIfDisposed
    nameWithType: CommunicationObject.ThrowIfDisposed
    fullName: System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed
    name: ThrowIfDisposed
    nameWithType: CommunicationObject.ThrowIfDisposed
    fullName: System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable
  commentId: M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: true
  name: ThrowIfDisposedOrImmutable()
  nameWithType: CommunicationObject.ThrowIfDisposedOrImmutable()
  fullName: System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable()
  spec.csharp:
  - uid: System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable
    name: ThrowIfDisposedOrImmutable
    nameWithType: CommunicationObject.ThrowIfDisposedOrImmutable
    fullName: System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable
    name: ThrowIfDisposedOrImmutable
    nameWithType: CommunicationObject.ThrowIfDisposedOrImmutable
    fullName: System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen
  commentId: M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: true
  name: ThrowIfDisposedOrNotOpen()
  nameWithType: CommunicationObject.ThrowIfDisposedOrNotOpen()
  fullName: System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen()
  spec.csharp:
  - uid: System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen
    name: ThrowIfDisposedOrNotOpen
    nameWithType: CommunicationObject.ThrowIfDisposedOrNotOpen
    fullName: System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen
    name: ThrowIfDisposedOrNotOpen
    nameWithType: CommunicationObject.ThrowIfDisposedOrNotOpen
    fullName: System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.Channels.CommunicationObject.IsDisposed
  commentId: P:System.ServiceModel.Channels.CommunicationObject.IsDisposed
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: true
  name: IsDisposed
  nameWithType: CommunicationObject.IsDisposed
  fullName: System.ServiceModel.Channels.CommunicationObject.IsDisposed
- uid: System.ServiceModel.Channels.CommunicationObject.State
  commentId: P:System.ServiceModel.Channels.CommunicationObject.State
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: true
  name: State
  nameWithType: CommunicationObject.State
  fullName: System.ServiceModel.Channels.CommunicationObject.State
- uid: System.ServiceModel.Channels.CommunicationObject.ThisLock
  commentId: P:System.ServiceModel.Channels.CommunicationObject.ThisLock
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: true
  name: ThisLock
  nameWithType: CommunicationObject.ThisLock
  fullName: System.ServiceModel.Channels.CommunicationObject.ThisLock
- uid: System.ServiceModel.Channels.CommunicationObject.Closed
  commentId: E:System.ServiceModel.Channels.CommunicationObject.Closed
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: true
  name: Closed
  nameWithType: CommunicationObject.Closed
  fullName: System.ServiceModel.Channels.CommunicationObject.Closed
- uid: System.ServiceModel.Channels.CommunicationObject.Closing
  commentId: E:System.ServiceModel.Channels.CommunicationObject.Closing
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: true
  name: Closing
  nameWithType: CommunicationObject.Closing
  fullName: System.ServiceModel.Channels.CommunicationObject.Closing
- uid: System.ServiceModel.Channels.CommunicationObject.Faulted
  commentId: E:System.ServiceModel.Channels.CommunicationObject.Faulted
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: true
  name: Faulted
  nameWithType: CommunicationObject.Faulted
  fullName: System.ServiceModel.Channels.CommunicationObject.Faulted
- uid: System.ServiceModel.Channels.CommunicationObject.Opened
  commentId: E:System.ServiceModel.Channels.CommunicationObject.Opened
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: true
  name: Opened
  nameWithType: CommunicationObject.Opened
  fullName: System.ServiceModel.Channels.CommunicationObject.Opened
- uid: System.ServiceModel.Channels.CommunicationObject.Opening
  commentId: E:System.ServiceModel.Channels.CommunicationObject.Opening
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: true
  name: Opening
  nameWithType: CommunicationObject.Opening
  fullName: System.ServiceModel.Channels.CommunicationObject.Opening
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.ServiceModel
  commentId: N:System.ServiceModel
  isExternal: false
  name: System.ServiceModel
  nameWithType: System.ServiceModel
  fullName: System.ServiceModel
- uid: System.ServiceModel.Channels
  commentId: N:System.ServiceModel.Channels
  isExternal: false
  name: System.ServiceModel.Channels
  nameWithType: System.ServiceModel.Channels
  fullName: System.ServiceModel.Channels
- uid: System.ServiceModel.ChannelFactory`1
  commentId: T:System.ServiceModel.ChannelFactory`1
  isExternal: true
  name: ChannelFactory<TChannel>
  nameWithType: ChannelFactory<TChannel>
  fullName: System.ServiceModel.ChannelFactory<TChannel>
  nameWithType.vb: ChannelFactory(Of TChannel)
  fullName.vb: System.ServiceModel.ChannelFactory(Of TChannel)
  name.vb: ChannelFactory(Of TChannel)
  spec.csharp:
  - uid: System.ServiceModel.ChannelFactory`1
    name: ChannelFactory
    nameWithType: ChannelFactory
    fullName: System.ServiceModel.ChannelFactory
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TChannel
    nameWithType: TChannel
    fullName: TChannel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.ServiceModel.ChannelFactory`1
    name: ChannelFactory
    nameWithType: ChannelFactory
    fullName: System.ServiceModel.ChannelFactory
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TChannel
    nameWithType: TChannel
    fullName: TChannel
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.Channels.IChannelFactory`1
  commentId: T:System.ServiceModel.Channels.IChannelFactory`1
  isExternal: true
  name: IChannelFactory<TChannel>
  nameWithType: IChannelFactory<TChannel>
  fullName: System.ServiceModel.Channels.IChannelFactory<TChannel>
  nameWithType.vb: IChannelFactory(Of TChannel)
  fullName.vb: System.ServiceModel.Channels.IChannelFactory(Of TChannel)
  name.vb: IChannelFactory(Of TChannel)
  spec.csharp:
  - uid: System.ServiceModel.Channels.IChannelFactory`1
    name: IChannelFactory
    nameWithType: IChannelFactory
    fullName: System.ServiceModel.Channels.IChannelFactory
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TChannel
    nameWithType: TChannel
    fullName: TChannel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.ServiceModel.Channels.IChannelFactory`1
    name: IChannelFactory
    nameWithType: IChannelFactory
    fullName: System.ServiceModel.Channels.IChannelFactory
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TChannel
    nameWithType: TChannel
    fullName: TChannel
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress)
  commentId: M:System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress)
  isExternal: true
  name: CreateChannel(EndpointAddress)
  nameWithType: ChannelFactory<TChannel>.CreateChannel(EndpointAddress)
  fullName: System.ServiceModel.ChannelFactory<TChannel>.CreateChannel(System.ServiceModel.EndpointAddress)
  nameWithType.vb: ChannelFactory(Of TChannel).CreateChannel(EndpointAddress)
  fullName.vb: System.ServiceModel.ChannelFactory(Of TChannel).CreateChannel(System.ServiceModel.EndpointAddress)
  spec.csharp:
  - uid: System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress)
    name: CreateChannel
    nameWithType: ChannelFactory<TChannel>.CreateChannel
    fullName: System.ServiceModel.ChannelFactory<TChannel>.CreateChannel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ServiceModel.EndpointAddress
    name: EndpointAddress
    nameWithType: EndpointAddress
    fullName: System.ServiceModel.EndpointAddress
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress)
    name: CreateChannel
    nameWithType: ChannelFactory(Of TChannel).CreateChannel
    fullName: System.ServiceModel.ChannelFactory(Of TChannel).CreateChannel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ServiceModel.EndpointAddress
    name: EndpointAddress
    nameWithType: EndpointAddress
    fullName: System.ServiceModel.EndpointAddress
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)
  commentId: M:System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)
  isExternal: true
  name: CreateChannel(EndpointAddress, Uri)
  nameWithType: ChannelFactory<TChannel>.CreateChannel(EndpointAddress, Uri)
  fullName: System.ServiceModel.ChannelFactory<TChannel>.CreateChannel(System.ServiceModel.EndpointAddress, System.Uri)
  nameWithType.vb: ChannelFactory(Of TChannel).CreateChannel(EndpointAddress, Uri)
  fullName.vb: System.ServiceModel.ChannelFactory(Of TChannel).CreateChannel(System.ServiceModel.EndpointAddress, System.Uri)
  spec.csharp:
  - uid: System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)
    name: CreateChannel
    nameWithType: ChannelFactory<TChannel>.CreateChannel
    fullName: System.ServiceModel.ChannelFactory<TChannel>.CreateChannel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ServiceModel.EndpointAddress
    name: EndpointAddress
    nameWithType: EndpointAddress
    fullName: System.ServiceModel.EndpointAddress
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)
    name: CreateChannel
    nameWithType: ChannelFactory(Of TChannel).CreateChannel
    fullName: System.ServiceModel.ChannelFactory(Of TChannel).CreateChannel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ServiceModel.EndpointAddress
    name: EndpointAddress
    nameWithType: EndpointAddress
    fullName: System.ServiceModel.EndpointAddress
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.ChannelFactory`1.CreateChannel
  commentId: M:System.ServiceModel.ChannelFactory`1.CreateChannel
  isExternal: true
  name: CreateChannel()
  nameWithType: ChannelFactory<TChannel>.CreateChannel()
  fullName: System.ServiceModel.ChannelFactory<TChannel>.CreateChannel()
  nameWithType.vb: ChannelFactory(Of TChannel).CreateChannel()
  fullName.vb: System.ServiceModel.ChannelFactory(Of TChannel).CreateChannel()
  spec.csharp:
  - uid: System.ServiceModel.ChannelFactory`1.CreateChannel
    name: CreateChannel
    nameWithType: ChannelFactory<TChannel>.CreateChannel
    fullName: System.ServiceModel.ChannelFactory<TChannel>.CreateChannel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ChannelFactory`1.CreateChannel
    name: CreateChannel
    nameWithType: ChannelFactory(Of TChannel).CreateChannel
    fullName: System.ServiceModel.ChannelFactory(Of TChannel).CreateChannel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.ChannelFactory`1.CreateDescription
  commentId: M:System.ServiceModel.ChannelFactory`1.CreateDescription
  isExternal: true
  name: CreateDescription()
  nameWithType: ChannelFactory<TChannel>.CreateDescription()
  fullName: System.ServiceModel.ChannelFactory<TChannel>.CreateDescription()
  nameWithType.vb: ChannelFactory(Of TChannel).CreateDescription()
  fullName.vb: System.ServiceModel.ChannelFactory(Of TChannel).CreateDescription()
  spec.csharp:
  - uid: System.ServiceModel.ChannelFactory`1.CreateDescription
    name: CreateDescription
    nameWithType: ChannelFactory<TChannel>.CreateDescription
    fullName: System.ServiceModel.ChannelFactory<TChannel>.CreateDescription
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ChannelFactory`1.CreateDescription
    name: CreateDescription
    nameWithType: ChannelFactory(Of TChannel).CreateDescription
    fullName: System.ServiceModel.ChannelFactory(Of TChannel).CreateDescription
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.ChannelFactory`1.CreateChannel(System.String)
  commentId: M:System.ServiceModel.ChannelFactory`1.CreateChannel(System.String)
  isExternal: true
  name: CreateChannel(String)
  nameWithType: ChannelFactory<TChannel>.CreateChannel(String)
  fullName: System.ServiceModel.ChannelFactory<TChannel>.CreateChannel(System.String)
  nameWithType.vb: ChannelFactory(Of TChannel).CreateChannel(String)
  fullName.vb: System.ServiceModel.ChannelFactory(Of TChannel).CreateChannel(System.String)
  spec.csharp:
  - uid: System.ServiceModel.ChannelFactory`1.CreateChannel(System.String)
    name: CreateChannel
    nameWithType: ChannelFactory<TChannel>.CreateChannel
    fullName: System.ServiceModel.ChannelFactory<TChannel>.CreateChannel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ChannelFactory`1.CreateChannel(System.String)
    name: CreateChannel
    nameWithType: ChannelFactory(Of TChannel).CreateChannel
    fullName: System.ServiceModel.ChannelFactory(Of TChannel).CreateChannel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)
  commentId: M:System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)
  isExternal: true
  name: CreateChannel(Binding, EndpointAddress)
  nameWithType: ChannelFactory<TChannel>.CreateChannel(Binding, EndpointAddress)
  fullName: System.ServiceModel.ChannelFactory<TChannel>.CreateChannel(System.ServiceModel.Channels.Binding, System.ServiceModel.EndpointAddress)
  nameWithType.vb: ChannelFactory(Of TChannel).CreateChannel(Binding, EndpointAddress)
  fullName.vb: System.ServiceModel.ChannelFactory(Of TChannel).CreateChannel(System.ServiceModel.Channels.Binding, System.ServiceModel.EndpointAddress)
  spec.csharp:
  - uid: System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)
    name: CreateChannel
    nameWithType: ChannelFactory<TChannel>.CreateChannel
    fullName: System.ServiceModel.ChannelFactory<TChannel>.CreateChannel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ServiceModel.Channels.Binding
    name: Binding
    nameWithType: Binding
    fullName: System.ServiceModel.Channels.Binding
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.ServiceModel.EndpointAddress
    name: EndpointAddress
    nameWithType: EndpointAddress
    fullName: System.ServiceModel.EndpointAddress
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)
    name: CreateChannel
    nameWithType: ChannelFactory(Of TChannel).CreateChannel
    fullName: System.ServiceModel.ChannelFactory(Of TChannel).CreateChannel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ServiceModel.Channels.Binding
    name: Binding
    nameWithType: Binding
    fullName: System.ServiceModel.Channels.Binding
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.ServiceModel.EndpointAddress
    name: EndpointAddress
    nameWithType: EndpointAddress
    fullName: System.ServiceModel.EndpointAddress
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress,System.Uri)
  commentId: M:System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress,System.Uri)
  isExternal: true
  name: CreateChannel(Binding, EndpointAddress, Uri)
  nameWithType: ChannelFactory<TChannel>.CreateChannel(Binding, EndpointAddress, Uri)
  fullName: System.ServiceModel.ChannelFactory<TChannel>.CreateChannel(System.ServiceModel.Channels.Binding, System.ServiceModel.EndpointAddress, System.Uri)
  nameWithType.vb: ChannelFactory(Of TChannel).CreateChannel(Binding, EndpointAddress, Uri)
  fullName.vb: System.ServiceModel.ChannelFactory(Of TChannel).CreateChannel(System.ServiceModel.Channels.Binding, System.ServiceModel.EndpointAddress, System.Uri)
  spec.csharp:
  - uid: System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress,System.Uri)
    name: CreateChannel
    nameWithType: ChannelFactory<TChannel>.CreateChannel
    fullName: System.ServiceModel.ChannelFactory<TChannel>.CreateChannel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ServiceModel.Channels.Binding
    name: Binding
    nameWithType: Binding
    fullName: System.ServiceModel.Channels.Binding
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.ServiceModel.EndpointAddress
    name: EndpointAddress
    nameWithType: EndpointAddress
    fullName: System.ServiceModel.EndpointAddress
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress,System.Uri)
    name: CreateChannel
    nameWithType: ChannelFactory(Of TChannel).CreateChannel
    fullName: System.ServiceModel.ChannelFactory(Of TChannel).CreateChannel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ServiceModel.Channels.Binding
    name: Binding
    nameWithType: Binding
    fullName: System.ServiceModel.Channels.Binding
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.ServiceModel.EndpointAddress
    name: EndpointAddress
    nameWithType: EndpointAddress
    fullName: System.ServiceModel.EndpointAddress
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Services.ServiceChannelFactory`1
  commentId: T:Cqrs.Services.ServiceChannelFactory`1
  isExternal: false
  name: ServiceChannelFactory<TService>
  nameWithType: ServiceChannelFactory<TService>
  fullName: Cqrs.Services.ServiceChannelFactory<TService>
  nameWithType.vb: ServiceChannelFactory(Of TService)
  fullName.vb: Cqrs.Services.ServiceChannelFactory(Of TService)
  name.vb: ServiceChannelFactory(Of TService)
  spec.csharp:
  - uid: Cqrs.Services.ServiceChannelFactory`1
    name: ServiceChannelFactory
    nameWithType: ServiceChannelFactory
    fullName: Cqrs.Services.ServiceChannelFactory
  - name: <
    nameWithType: <
    fullName: <
  - name: TService
    nameWithType: TService
    fullName: TService
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Services.ServiceChannelFactory`1
    name: ServiceChannelFactory
    nameWithType: ServiceChannelFactory
    fullName: Cqrs.Services.ServiceChannelFactory
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TService
    nameWithType: TService
    fullName: TService
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Services.ServiceChannelFactory`1.#ctor*
  commentId: Overload:Cqrs.Services.ServiceChannelFactory`1.#ctor
  isExternal: false
  name: ServiceChannelFactory
  nameWithType: ServiceChannelFactory<TService>.ServiceChannelFactory
  fullName: Cqrs.Services.ServiceChannelFactory<TService>.ServiceChannelFactory
  nameWithType.vb: ServiceChannelFactory(Of TService).ServiceChannelFactory
  fullName.vb: Cqrs.Services.ServiceChannelFactory(Of TService).ServiceChannelFactory
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Cqrs.Services.WcfDataContractResolverConfiguration.GetDataContracts``1(System.String)
  commentId: M:Cqrs.Services.WcfDataContractResolverConfiguration.GetDataContracts``1(System.String)
- uid: System.Runtime.Serialization.DataContractResolver
  commentId: T:System.Runtime.Serialization.DataContractResolver
  parent: System.Runtime.Serialization
  isExternal: true
  name: DataContractResolver
  nameWithType: DataContractResolver
  fullName: System.Runtime.Serialization.DataContractResolver
- uid: System.ServiceModel.Description.OperationDescription
  commentId: T:System.ServiceModel.Description.OperationDescription
- uid: System.ServiceModel.Description.ContractDescription.Operations
  commentId: P:System.ServiceModel.Description.ContractDescription.Operations
- uid: System.ServiceModel.Description.ServiceEndpoint.Contract
  commentId: P:System.ServiceModel.Description.ServiceEndpoint.Contract
- uid: Cqrs.Services.ServiceChannelFactory`1.AttachDataContractResolver*
  commentId: Overload:Cqrs.Services.ServiceChannelFactory`1.AttachDataContractResolver
  isExternal: false
  name: AttachDataContractResolver
  nameWithType: ServiceChannelFactory<TService>.AttachDataContractResolver
  fullName: Cqrs.Services.ServiceChannelFactory<TService>.AttachDataContractResolver
  nameWithType.vb: ServiceChannelFactory(Of TService).AttachDataContractResolver
  fullName.vb: Cqrs.Services.ServiceChannelFactory(Of TService).AttachDataContractResolver
- uid: System.ServiceModel.Description.ServiceEndpoint
  commentId: T:System.ServiceModel.Description.ServiceEndpoint
  parent: System.ServiceModel.Description
  isExternal: true
  name: ServiceEndpoint
  nameWithType: ServiceEndpoint
  fullName: System.ServiceModel.Description.ServiceEndpoint
- uid: System.Runtime.Serialization
  commentId: N:System.Runtime.Serialization
  isExternal: false
  name: System.Runtime.Serialization
  nameWithType: System.Runtime.Serialization
  fullName: System.Runtime.Serialization
- uid: System.ServiceModel.Description
  commentId: N:System.ServiceModel.Description
  isExternal: false
  name: System.ServiceModel.Description
  nameWithType: System.ServiceModel.Description
  fullName: System.ServiceModel.Description
- uid: Cqrs.Services.ServiceChannelFactory`1.RegisterDataContracts*
  commentId: Overload:Cqrs.Services.ServiceChannelFactory`1.RegisterDataContracts
  isExternal: false
  name: RegisterDataContracts
  nameWithType: ServiceChannelFactory<TService>.RegisterDataContracts
  fullName: Cqrs.Services.ServiceChannelFactory<TService>.RegisterDataContracts
  nameWithType.vb: ServiceChannelFactory(Of TService).RegisterDataContracts
  fullName.vb: Cqrs.Services.ServiceChannelFactory(Of TService).RegisterDataContracts
