### YamlMime:ManagedReference
items:
- uid: Cqrs.EventStore.ProjectionReader`1
  commentId: T:Cqrs.EventStore.ProjectionReader`1
  id: ProjectionReader`1
  parent: Cqrs.EventStore
  children:
  - Cqrs.EventStore.ProjectionReader`1.#ctor(Cqrs.EventStore.IEventStoreConnectionHelper,Cqrs.EventStore.IEventDeserialiser{`0})
  - Cqrs.EventStore.ProjectionReader`1.EventDeserialiser
  - Cqrs.EventStore.ProjectionReader`1.EventStoreConnectionHelper
  - Cqrs.EventStore.ProjectionReader`1.GetDataByStreamName(System.String)
  - Cqrs.EventStore.ProjectionReader`1.GetDataByStreamName``1(System.String)
  langs:
  - csharp
  - vb
  name: ProjectionReader<TAuthenticationToken>
  nameWithType: ProjectionReader<TAuthenticationToken>
  fullName: Cqrs.EventStore.ProjectionReader<TAuthenticationToken>
  type: Class
  source:
    remote:
      path: Framework/Cqrs.EventStore/ProjectionReader.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: ProjectionReader
    path: Framework/Cqrs.EventStore/ProjectionReader.cs
    startLine: 21
  assemblies:
  - Cqrs.EventStore
  namespace: Cqrs.EventStore
  summary: "\nReads projection streams from a Greg Young&apos;s Event sTore.\n"
  example: []
  syntax:
    content: public abstract class ProjectionReader<TAuthenticationToken>
    typeParameters:
    - id: TAuthenticationToken
      description: The <xref href="System.Type" data-throw-if-not-resolved="false"></xref> of the authentication token.
    content.vb: Public MustInherit Class ProjectionReader(Of TAuthenticationToken)
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: ProjectionReader(Of TAuthenticationToken)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: Cqrs.EventStore.ProjectionReader(Of TAuthenticationToken)
  name.vb: ProjectionReader(Of TAuthenticationToken)
- uid: Cqrs.EventStore.ProjectionReader`1.EventStoreConnectionHelper
  commentId: P:Cqrs.EventStore.ProjectionReader`1.EventStoreConnectionHelper
  id: EventStoreConnectionHelper
  parent: Cqrs.EventStore.ProjectionReader`1
  langs:
  - csharp
  - vb
  name: EventStoreConnectionHelper
  nameWithType: ProjectionReader<TAuthenticationToken>.EventStoreConnectionHelper
  fullName: Cqrs.EventStore.ProjectionReader<TAuthenticationToken>.EventStoreConnectionHelper
  type: Property
  source:
    remote:
      path: Framework/Cqrs.EventStore/ProjectionReader.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: EventStoreConnectionHelper
    path: Framework/Cqrs.EventStore/ProjectionReader.cs
    startLine: 26
  assemblies:
  - Cqrs.EventStore
  namespace: Cqrs.EventStore
  summary: "\nThe <xref href=\"EventStore.ClientAPI.IEventStoreConnection\" data-throw-if-not-resolved=\"false\"></xref> used to read and write streams in the Greg Young Event Store.\n"
  example: []
  syntax:
    content: protected IEventStoreConnectionHelper EventStoreConnectionHelper { get; set; }
    parameters: []
    return:
      type: Cqrs.EventStore.IEventStoreConnectionHelper
    content.vb: Protected Property EventStoreConnectionHelper As IEventStoreConnectionHelper
  overload: Cqrs.EventStore.ProjectionReader`1.EventStoreConnectionHelper*
  nameWithType.vb: ProjectionReader(Of TAuthenticationToken).EventStoreConnectionHelper
  modifiers.csharp:
  - protected
  - get
  - set
  modifiers.vb:
  - Protected
  fullName.vb: Cqrs.EventStore.ProjectionReader(Of TAuthenticationToken).EventStoreConnectionHelper
- uid: Cqrs.EventStore.ProjectionReader`1.EventDeserialiser
  commentId: P:Cqrs.EventStore.ProjectionReader`1.EventDeserialiser
  id: EventDeserialiser
  parent: Cqrs.EventStore.ProjectionReader`1
  langs:
  - csharp
  - vb
  name: EventDeserialiser
  nameWithType: ProjectionReader<TAuthenticationToken>.EventDeserialiser
  fullName: Cqrs.EventStore.ProjectionReader<TAuthenticationToken>.EventDeserialiser
  type: Property
  source:
    remote:
      path: Framework/Cqrs.EventStore/ProjectionReader.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: EventDeserialiser
    path: Framework/Cqrs.EventStore/ProjectionReader.cs
    startLine: 31
  assemblies:
  - Cqrs.EventStore
  namespace: Cqrs.EventStore
  summary: "\nThe <xref href=\"Cqrs.EventStore.IEventDeserialiser%601\" data-throw-if-not-resolved=\"false\"></xref> used to deserialise events.\n"
  example: []
  syntax:
    content: protected IEventDeserialiser<TAuthenticationToken> EventDeserialiser { get; set; }
    parameters: []
    return:
      type: Cqrs.EventStore.IEventDeserialiser{{TAuthenticationToken}}
    content.vb: Protected Property EventDeserialiser As IEventDeserialiser(Of TAuthenticationToken)
  overload: Cqrs.EventStore.ProjectionReader`1.EventDeserialiser*
  nameWithType.vb: ProjectionReader(Of TAuthenticationToken).EventDeserialiser
  modifiers.csharp:
  - protected
  - get
  - set
  modifiers.vb:
  - Protected
  fullName.vb: Cqrs.EventStore.ProjectionReader(Of TAuthenticationToken).EventDeserialiser
- uid: Cqrs.EventStore.ProjectionReader`1.#ctor(Cqrs.EventStore.IEventStoreConnectionHelper,Cqrs.EventStore.IEventDeserialiser{`0})
  commentId: M:Cqrs.EventStore.ProjectionReader`1.#ctor(Cqrs.EventStore.IEventStoreConnectionHelper,Cqrs.EventStore.IEventDeserialiser{`0})
  id: '#ctor(Cqrs.EventStore.IEventStoreConnectionHelper,Cqrs.EventStore.IEventDeserialiser{`0})'
  parent: Cqrs.EventStore.ProjectionReader`1
  langs:
  - csharp
  - vb
  name: ProjectionReader(IEventStoreConnectionHelper, IEventDeserialiser<TAuthenticationToken>)
  nameWithType: ProjectionReader<TAuthenticationToken>.ProjectionReader(IEventStoreConnectionHelper, IEventDeserialiser<TAuthenticationToken>)
  fullName: Cqrs.EventStore.ProjectionReader<TAuthenticationToken>.ProjectionReader(Cqrs.EventStore.IEventStoreConnectionHelper, Cqrs.EventStore.IEventDeserialiser<TAuthenticationToken>)
  type: Constructor
  source:
    remote:
      path: Framework/Cqrs.EventStore/ProjectionReader.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: .ctor
    path: Framework/Cqrs.EventStore/ProjectionReader.cs
    startLine: 36
  assemblies:
  - Cqrs.EventStore
  namespace: Cqrs.EventStore
  summary: "\nInstantiates a new instance of <xref href=\"Cqrs.EventStore.ProjectionReader%601\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: protected ProjectionReader(IEventStoreConnectionHelper eventStoreConnectionHelper, IEventDeserialiser<TAuthenticationToken> eventDeserialiser)
    parameters:
    - id: eventStoreConnectionHelper
      type: Cqrs.EventStore.IEventStoreConnectionHelper
    - id: eventDeserialiser
      type: Cqrs.EventStore.IEventDeserialiser{{TAuthenticationToken}}
    content.vb: Protected Sub New(eventStoreConnectionHelper As IEventStoreConnectionHelper, eventDeserialiser As IEventDeserialiser(Of TAuthenticationToken))
  overload: Cqrs.EventStore.ProjectionReader`1.#ctor*
  nameWithType.vb: ProjectionReader(Of TAuthenticationToken).ProjectionReader(IEventStoreConnectionHelper, IEventDeserialiser(Of TAuthenticationToken))
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Cqrs.EventStore.ProjectionReader(Of TAuthenticationToken).ProjectionReader(Cqrs.EventStore.IEventStoreConnectionHelper, Cqrs.EventStore.IEventDeserialiser(Of TAuthenticationToken))
  name.vb: ProjectionReader(IEventStoreConnectionHelper, IEventDeserialiser(Of TAuthenticationToken))
- uid: Cqrs.EventStore.ProjectionReader`1.GetDataByStreamName(System.String)
  commentId: M:Cqrs.EventStore.ProjectionReader`1.GetDataByStreamName(System.String)
  id: GetDataByStreamName(System.String)
  parent: Cqrs.EventStore.ProjectionReader`1
  langs:
  - csharp
  - vb
  name: GetDataByStreamName(String)
  nameWithType: ProjectionReader<TAuthenticationToken>.GetDataByStreamName(String)
  fullName: Cqrs.EventStore.ProjectionReader<TAuthenticationToken>.GetDataByStreamName(System.String)
  type: Method
  source:
    remote:
      path: Framework/Cqrs.EventStore/ProjectionReader.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: GetDataByStreamName
    path: Framework/Cqrs.EventStore/ProjectionReader.cs
    startLine: 46
  assemblies:
  - Cqrs.EventStore
  namespace: Cqrs.EventStore
  summary: "\nGet a collection of data objects from a stream with the provided <span class=\"paramref\">streamName</span>.\n"
  example: []
  syntax:
    content: protected IEnumerable<dynamic> GetDataByStreamName(string streamName)
    parameters:
    - id: streamName
      type: System.String
      description: The name of the stream to read events from.
    return:
      type: System.Collections.Generic.IEnumerable{System.Object}
    content.vb: Protected Function GetDataByStreamName(streamName As String) As IEnumerable(Of Object)
  overload: Cqrs.EventStore.ProjectionReader`1.GetDataByStreamName*
  nameWithType.vb: ProjectionReader(Of TAuthenticationToken).GetDataByStreamName(String)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Cqrs.EventStore.ProjectionReader(Of TAuthenticationToken).GetDataByStreamName(System.String)
- uid: Cqrs.EventStore.ProjectionReader`1.GetDataByStreamName``1(System.String)
  commentId: M:Cqrs.EventStore.ProjectionReader`1.GetDataByStreamName``1(System.String)
  id: GetDataByStreamName``1(System.String)
  parent: Cqrs.EventStore.ProjectionReader`1
  langs:
  - csharp
  - vb
  name: GetDataByStreamName<TData>(String)
  nameWithType: ProjectionReader<TAuthenticationToken>.GetDataByStreamName<TData>(String)
  fullName: Cqrs.EventStore.ProjectionReader<TAuthenticationToken>.GetDataByStreamName<TData>(System.String)
  type: Method
  source:
    remote:
      path: Framework/Cqrs.EventStore/ProjectionReader.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: GetDataByStreamName
    path: Framework/Cqrs.EventStore/ProjectionReader.cs
    startLine: 74
  assemblies:
  - Cqrs.EventStore
  namespace: Cqrs.EventStore
  summary: "\nGet a collection of <span class=\"typeparamref\">TData</span> from a stream with the provided <span class=\"paramref\">streamName</span>.\n"
  example: []
  syntax:
    content: protected IEnumerable<TData> GetDataByStreamName<TData>(string streamName)
    parameters:
    - id: streamName
      type: System.String
      description: The name of the stream to read events from.
    typeParameters:
    - id: TData
    return:
      type: System.Collections.Generic.IEnumerable{{TData}}
    content.vb: Protected Function GetDataByStreamName(Of TData)(streamName As String) As IEnumerable(Of TData)
  overload: Cqrs.EventStore.ProjectionReader`1.GetDataByStreamName*
  nameWithType.vb: ProjectionReader(Of TAuthenticationToken).GetDataByStreamName(Of TData)(String)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Cqrs.EventStore.ProjectionReader(Of TAuthenticationToken).GetDataByStreamName(Of TData)(System.String)
  name.vb: GetDataByStreamName(Of TData)(String)
references:
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Cqrs.EventStore
  commentId: N:Cqrs.EventStore
  isExternal: false
  name: Cqrs.EventStore
  nameWithType: Cqrs.EventStore
  fullName: Cqrs.EventStore
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.ClientAPI.IEventStoreConnection
  commentId: T:EventStore.ClientAPI.IEventStoreConnection
  parent: EventStore.ClientAPI
  isExternal: true
  name: IEventStoreConnection
  nameWithType: IEventStoreConnection
  fullName: EventStore.ClientAPI.IEventStoreConnection
- uid: Cqrs.EventStore.ProjectionReader`1.EventStoreConnectionHelper*
  commentId: Overload:Cqrs.EventStore.ProjectionReader`1.EventStoreConnectionHelper
  isExternal: false
  name: EventStoreConnectionHelper
  nameWithType: ProjectionReader<TAuthenticationToken>.EventStoreConnectionHelper
  fullName: Cqrs.EventStore.ProjectionReader<TAuthenticationToken>.EventStoreConnectionHelper
  nameWithType.vb: ProjectionReader(Of TAuthenticationToken).EventStoreConnectionHelper
  fullName.vb: Cqrs.EventStore.ProjectionReader(Of TAuthenticationToken).EventStoreConnectionHelper
- uid: Cqrs.EventStore.IEventStoreConnectionHelper
  commentId: T:Cqrs.EventStore.IEventStoreConnectionHelper
  parent: Cqrs.EventStore
  isExternal: false
  name: IEventStoreConnectionHelper
  nameWithType: IEventStoreConnectionHelper
  fullName: Cqrs.EventStore.IEventStoreConnectionHelper
- uid: EventStore.ClientAPI
  commentId: N:EventStore.ClientAPI
  isExternal: false
  name: EventStore.ClientAPI
  nameWithType: EventStore.ClientAPI
  fullName: EventStore.ClientAPI
- uid: Cqrs.EventStore.IEventDeserialiser`1
  commentId: T:Cqrs.EventStore.IEventDeserialiser`1
  isExternal: false
  name: IEventDeserialiser<TAuthenticationToken>
  nameWithType: IEventDeserialiser<TAuthenticationToken>
  fullName: Cqrs.EventStore.IEventDeserialiser<TAuthenticationToken>
  nameWithType.vb: IEventDeserialiser(Of TAuthenticationToken)
  fullName.vb: Cqrs.EventStore.IEventDeserialiser(Of TAuthenticationToken)
  name.vb: IEventDeserialiser(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.EventStore.IEventDeserialiser`1
    name: IEventDeserialiser
    nameWithType: IEventDeserialiser
    fullName: Cqrs.EventStore.IEventDeserialiser
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.EventStore.IEventDeserialiser`1
    name: IEventDeserialiser
    nameWithType: IEventDeserialiser
    fullName: Cqrs.EventStore.IEventDeserialiser
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.EventStore.ProjectionReader`1.EventDeserialiser*
  commentId: Overload:Cqrs.EventStore.ProjectionReader`1.EventDeserialiser
  isExternal: false
  name: EventDeserialiser
  nameWithType: ProjectionReader<TAuthenticationToken>.EventDeserialiser
  fullName: Cqrs.EventStore.ProjectionReader<TAuthenticationToken>.EventDeserialiser
  nameWithType.vb: ProjectionReader(Of TAuthenticationToken).EventDeserialiser
  fullName.vb: Cqrs.EventStore.ProjectionReader(Of TAuthenticationToken).EventDeserialiser
- uid: Cqrs.EventStore.IEventDeserialiser{{TAuthenticationToken}}
  commentId: T:Cqrs.EventStore.IEventDeserialiser{`0}
  parent: Cqrs.EventStore
  definition: Cqrs.EventStore.IEventDeserialiser`1
  name: IEventDeserialiser<TAuthenticationToken>
  nameWithType: IEventDeserialiser<TAuthenticationToken>
  fullName: Cqrs.EventStore.IEventDeserialiser<TAuthenticationToken>
  nameWithType.vb: IEventDeserialiser(Of TAuthenticationToken)
  fullName.vb: Cqrs.EventStore.IEventDeserialiser(Of TAuthenticationToken)
  name.vb: IEventDeserialiser(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.EventStore.IEventDeserialiser`1
    name: IEventDeserialiser
    nameWithType: IEventDeserialiser
    fullName: Cqrs.EventStore.IEventDeserialiser
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.EventStore.IEventDeserialiser`1
    name: IEventDeserialiser
    nameWithType: IEventDeserialiser
    fullName: Cqrs.EventStore.IEventDeserialiser
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.EventStore.ProjectionReader`1
  commentId: T:Cqrs.EventStore.ProjectionReader`1
  isExternal: false
  name: ProjectionReader<TAuthenticationToken>
  nameWithType: ProjectionReader<TAuthenticationToken>
  fullName: Cqrs.EventStore.ProjectionReader<TAuthenticationToken>
  nameWithType.vb: ProjectionReader(Of TAuthenticationToken)
  fullName.vb: Cqrs.EventStore.ProjectionReader(Of TAuthenticationToken)
  name.vb: ProjectionReader(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.EventStore.ProjectionReader`1
    name: ProjectionReader
    nameWithType: ProjectionReader
    fullName: Cqrs.EventStore.ProjectionReader
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.EventStore.ProjectionReader`1
    name: ProjectionReader
    nameWithType: ProjectionReader
    fullName: Cqrs.EventStore.ProjectionReader
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.EventStore.ProjectionReader`1.#ctor*
  commentId: Overload:Cqrs.EventStore.ProjectionReader`1.#ctor
  isExternal: false
  name: ProjectionReader
  nameWithType: ProjectionReader<TAuthenticationToken>.ProjectionReader
  fullName: Cqrs.EventStore.ProjectionReader<TAuthenticationToken>.ProjectionReader
  nameWithType.vb: ProjectionReader(Of TAuthenticationToken).ProjectionReader
  fullName.vb: Cqrs.EventStore.ProjectionReader(Of TAuthenticationToken).ProjectionReader
- uid: Cqrs.EventStore.ProjectionReader`1.GetDataByStreamName*
  commentId: Overload:Cqrs.EventStore.ProjectionReader`1.GetDataByStreamName
  isExternal: false
  name: GetDataByStreamName
  nameWithType: ProjectionReader<TAuthenticationToken>.GetDataByStreamName
  fullName: Cqrs.EventStore.ProjectionReader<TAuthenticationToken>.GetDataByStreamName
  nameWithType.vb: ProjectionReader(Of TAuthenticationToken).GetDataByStreamName
  fullName.vb: Cqrs.EventStore.ProjectionReader(Of TAuthenticationToken).GetDataByStreamName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IEnumerable{System.Object}
  commentId: T:System.Collections.Generic.IEnumerable{System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Object>
  nameWithType: IEnumerable<Object>
  fullName: System.Collections.Generic.IEnumerable<System.Object>
  nameWithType.vb: IEnumerable(Of )
  fullName.vb: System.Collections.Generic.IEnumerable(Of )
  name.vb: IEnumerable(Of )
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IEnumerable{{TData}}
  commentId: T:System.Collections.Generic.IEnumerable{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<TData>
  nameWithType: IEnumerable<TData>
  fullName: System.Collections.Generic.IEnumerable<TData>
  nameWithType.vb: IEnumerable(Of TData)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TData)
  name.vb: IEnumerable(Of TData)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
