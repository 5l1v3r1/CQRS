<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classCqrs_1_1Azure_1_1BlobStorage_1_1Events_1_1TableStorageEventStore" kind="class" language="C#" prot="public">
    <compoundname>Cqrs::Azure::BlobStorage::Events::TableStorageEventStore</compoundname>
    <basecompoundref refid="classCqrs_1_1Events_1_1EventStore" prot="public" virt="non-virtual">Cqrs::Events::EventStore&lt; TAuthenticationToken &gt;</basecompoundref>
    <derivedcompoundref refid="classCqrs_1_1Azure_1_1Storage_1_1Events_1_1TableStorageEventStore" prot="public" virt="non-virtual">Cqrs.Azure.Storage.Events.TableStorageEventStore&lt; TAuthenticationToken &gt;</derivedcompoundref>
    <innerclass refid="classCqrs_1_1Azure_1_1BlobStorage_1_1Events_1_1TableStorageEventStore_1_1RawTableStorageEventStore" prot="public">Cqrs::Azure::BlobStorage::Events::TableStorageEventStore::RawTableStorageEventStore</innerclass>
    <templateparamlist>
      <param>
        <type>TAuthenticationToken</type>
      </param>
    </templateparamlist>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classCqrs_1_1Azure_1_1BlobStorage_1_1Events_1_1TableStorageEventStore_a6e64df5250bd136250259e0a573097e4_1a6e64df5250bd136250259e0a573097e4" prot="protected" static="no" mutable="no">
        <type>const string</type>
        <definition>const string Cqrs.Azure.BlobStorage.Events.TableStorageEventStore&lt; TAuthenticationToken &gt;.TableCqrsEventStoreStreamNamePattern</definition>
        <argsstring></argsstring>
        <name>TableCqrsEventStoreStreamNamePattern</name>
        <initializer>= &quot;{0}.{1}&quot;</initializer>
        <briefdescription>
<para>The pattern used to generate the stream name. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/a99f043f4d1af837/Framework/Azure/Cqrs.Azure.BlobStorage/Events/TableStorageEventStore.cs" line="30" column="1" bodyfile="/opt/buildAgent/work/a99f043f4d1af837/Framework/Azure/Cqrs.Azure.BlobStorage/Events/TableStorageEventStore.cs" bodystart="30" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="property">
      <memberdef kind="property" id="classCqrs_1_1Azure_1_1BlobStorage_1_1Events_1_1TableStorageEventStore_ad86c24c28321c16b1f3601b3e7d870c4_1ad86c24c28321c16b1f3601b3e7d870c4" prot="protected" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="yes" privatesettable="no" protectedsettable="no">
        <type><ref refid="classCqrs_1_1Azure_1_1BlobStorage_1_1Events_1_1TableStorageEventStore_1_1RawTableStorageEventStore" kindref="compound">RawTableStorageEventStore</ref></type>
        <definition>RawTableStorageEventStore Cqrs.Azure.BlobStorage.Events.TableStorageEventStore&lt; TAuthenticationToken &gt;.TableStorageStore</definition>
        <argsstring></argsstring>
        <name>TableStorageStore</name>
        <briefdescription>
<para>Gets or sets the underlying <ref refid="classCqrs_1_1Azure_1_1BlobStorage_1_1TableStorageStore" kindref="compound">TableStorageStore</ref> used for persisting and reading IEvent&lt;TAuthenticationToken&gt; data. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/a99f043f4d1af837/Framework/Azure/Cqrs.Azure.BlobStorage/Events/TableStorageEventStore.cs" line="35" column="1" bodyfile="/opt/buildAgent/work/a99f043f4d1af837/Framework/Azure/Cqrs.Azure.BlobStorage/Events/TableStorageEventStore.cs" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="classCqrs_1_1Azure_1_1BlobStorage_1_1Events_1_1TableStorageEventStore_a06b6a3a1ac68dfce2d27aacadffa5beb_1a06b6a3a1ac68dfce2d27aacadffa5beb" prot="protected" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="yes" privatesettable="no" protectedsettable="no">
        <type><ref refid="classCqrs_1_1Azure_1_1BlobStorage_1_1Events_1_1TableStorageEventStore_1_1RawTableStorageEventStore" kindref="compound">RawTableStorageEventStore</ref></type>
        <definition>RawTableStorageEventStore Cqrs.Azure.BlobStorage.Events.TableStorageEventStore&lt; TAuthenticationToken &gt;.CorrelationIdTableStorageStore</definition>
        <argsstring></argsstring>
        <name>CorrelationIdTableStorageStore</name>
        <briefdescription>
<para>Gets or sets the underlying <ref refid="classCqrs_1_1Azure_1_1BlobStorage_1_1TableStorageStore" kindref="compound">TableStorageStore</ref> used specifically for <ref refid="classCqrs_1_1Azure_1_1BlobStorage_1_1Events_1_1TableStorageEventStore_a9b952a9257dc6f458b98eba87684412e_1a9b952a9257dc6f458b98eba87684412e" kindref="member">Get(Guid)</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/a99f043f4d1af837/Framework/Azure/Cqrs.Azure.BlobStorage/Events/TableStorageEventStore.cs" line="40" column="1" bodyfile="/opt/buildAgent/work/a99f043f4d1af837/Framework/Azure/Cqrs.Azure.BlobStorage/Events/TableStorageEventStore.cs" bodystart="40" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classCqrs_1_1Azure_1_1BlobStorage_1_1Events_1_1TableStorageEventStore_a25a65bc4a027b2a16ebf02e763ac3b95_1a25a65bc4a027b2a16ebf02e763ac3b95" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Cqrs.Azure.BlobStorage.Events.TableStorageEventStore&lt; TAuthenticationToken &gt;.TableStorageEventStore</definition>
        <argsstring>(IEventBuilder&lt; TAuthenticationToken &gt; eventBuilder, IEventDeserialiser&lt; TAuthenticationToken &gt; eventDeserialiser, ILogger logger, ITableStorageStoreConnectionStringFactory tableStorageEventStoreConnectionStringFactory, Func&lt; ILogger, ITableStorageStoreConnectionStringFactory, bool, RawTableStorageEventStore &gt; createRawTableStorageEventStoreFunction=null)</argsstring>
        <name>TableStorageEventStore</name>
        <param>
          <type><ref refid="interfaceCqrs_1_1Events_1_1IEventBuilder" kindref="compound">IEventBuilder</ref>&lt; TAuthenticationToken &gt;</type>
          <declname>eventBuilder</declname>
        </param>
        <param>
          <type><ref refid="interfaceCqrs_1_1Events_1_1IEventDeserialiser" kindref="compound">IEventDeserialiser</ref>&lt; TAuthenticationToken &gt;</type>
          <declname>eventDeserialiser</declname>
        </param>
        <param>
          <type>ILogger</type>
          <declname>logger</declname>
        </param>
        <param>
          <type><ref refid="interfaceCqrs_1_1Azure_1_1BlobStorage_1_1ITableStorageStoreConnectionStringFactory" kindref="compound">ITableStorageStoreConnectionStringFactory</ref></type>
          <declname>tableStorageEventStoreConnectionStringFactory</declname>
        </param>
        <param>
          <type>Func&lt; ILogger, <ref refid="interfaceCqrs_1_1Azure_1_1BlobStorage_1_1ITableStorageStoreConnectionStringFactory" kindref="compound">ITableStorageStoreConnectionStringFactory</ref>, bool, <ref refid="classCqrs_1_1Azure_1_1BlobStorage_1_1Events_1_1TableStorageEventStore_1_1RawTableStorageEventStore" kindref="compound">RawTableStorageEventStore</ref> &gt;</type>
          <declname>createRawTableStorageEventStoreFunction</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
<para>Initializes a new instance of the <ref refid="classCqrs_1_1Azure_1_1BlobStorage_1_1Events_1_1TableStorageEventStore_a25a65bc4a027b2a16ebf02e763ac3b95_1a25a65bc4a027b2a16ebf02e763ac3b95" kindref="member">TableStorageEventStore&lt;TAuthenticationToken&gt;</ref> class using the specified container. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/a99f043f4d1af837/Framework/Azure/Cqrs.Azure.BlobStorage/Events/TableStorageEventStore.cs" line="45" column="1" bodyfile="/opt/buildAgent/work/a99f043f4d1af837/Framework/Azure/Cqrs.Azure.BlobStorage/Events/TableStorageEventStore.cs" bodystart="45" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Azure_1_1BlobStorage_1_1Events_1_1TableStorageEventStore_a420c94c86d8d1c2959aee8602f43c0c0_1a420c94c86d8d1c2959aee8602f43c0c0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>override IEnumerable&lt; <ref refid="interfaceCqrs_1_1Events_1_1IEvent" kindref="compound">IEvent</ref>&lt; TAuthenticationToken &gt; &gt;</type>
        <definition>override IEnumerable&lt;IEvent&lt;TAuthenticationToken&gt; &gt; Cqrs.Azure.BlobStorage.Events.TableStorageEventStore&lt; TAuthenticationToken &gt;.Get</definition>
        <argsstring>(Type aggregateRootType, Guid aggregateId, bool useLastEventOnly=false, int fromVersion=-1)</argsstring>
        <name>Get</name>
        <reimplements refid="classCqrs_1_1Events_1_1EventStore_aa1d0d399a35c1e3b0759e27202695d8b_1aa1d0d399a35c1e3b0759e27202695d8b">Get</reimplements>
        <reimplementedby refid="classCqrs_1_1Azure_1_1Storage_1_1Events_1_1TableStorageEventStore_a089514182da7a70f35f9237c521c49f0_1a089514182da7a70f35f9237c521c49f0">Get</reimplementedby>
        <param>
          <type>Type</type>
          <declname>aggregateRootType</declname>
        </param>
        <param>
          <type>Guid</type>
          <declname>aggregateId</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>useLastEventOnly</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>int</type>
          <declname>fromVersion</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
<para>Gets a collection of IEvent&lt;TAuthenticationToken&gt; for the IAggregateRoot&lt;TAuthenticationToken&gt; of type <emphasis>aggregateRootType</emphasis>  with the ID matching the provided <emphasis>aggregateId</emphasis> . </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aggregateRootType</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the IAggregateRoot&lt;TAuthenticationToken&gt; the IEvent&lt;TAuthenticationToken&gt; was raised in.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aggregateId</parametername>
</parameternamelist>
<parameterdescription>
<para>The IAggregateRoot&lt;TAuthenticationToken&gt;.Id of the IAggregateRoot&lt;TAuthenticationToken&gt;.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>useLastEventOnly</parametername>
</parameternamelist>
<parameterdescription>
<para>Loads only the last eventIEvent&lt;TAuthenticationToken&gt;.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fromVersion</parametername>
</parameternamelist>
<parameterdescription>
<para>Load events starting from this version</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/a99f043f4d1af837/Framework/Azure/Cqrs.Azure.BlobStorage/Events/TableStorageEventStore.cs" line="73" column="1" bodyfile="/opt/buildAgent/work/a99f043f4d1af837/Framework/Azure/Cqrs.Azure.BlobStorage/Events/TableStorageEventStore.cs" bodystart="73" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Azure_1_1BlobStorage_1_1Events_1_1TableStorageEventStore_ae6bd61257a3218d7ceb51a5ff54fb442_1ae6bd61257a3218d7ceb51a5ff54fb442" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>override IEnumerable&lt; <ref refid="interfaceCqrs_1_1Events_1_1IEvent" kindref="compound">IEvent</ref>&lt; TAuthenticationToken &gt; &gt;</type>
        <definition>override IEnumerable&lt;IEvent&lt;TAuthenticationToken&gt; &gt; Cqrs.Azure.BlobStorage.Events.TableStorageEventStore&lt; TAuthenticationToken &gt;.GetToVersion</definition>
        <argsstring>(Type aggregateRootType, Guid aggregateId, int version)</argsstring>
        <name>GetToVersion</name>
        <reimplements refid="classCqrs_1_1Events_1_1EventStore_a2785f85c9d986cdf11ab6054826c195d_1a2785f85c9d986cdf11ab6054826c195d">GetToVersion</reimplements>
        <param>
          <type>Type</type>
          <declname>aggregateRootType</declname>
        </param>
        <param>
          <type>Guid</type>
          <declname>aggregateId</declname>
        </param>
        <param>
          <type>int</type>
          <declname>version</declname>
        </param>
        <briefdescription>
<para>Gets a collection of IEvent&lt;TAuthenticationToken&gt; for the IAggregateRoot&lt;TAuthenticationToken&gt; of type <emphasis>aggregateRootType</emphasis>  with the ID matching the provided <emphasis>aggregateId</emphasis>  up to and including the provided <emphasis>version</emphasis> . </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aggregateRootType</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the IAggregateRoot&lt;TAuthenticationToken&gt; the IEvent&lt;TAuthenticationToken&gt; was raised in.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aggregateId</parametername>
</parameternamelist>
<parameterdescription>
<para>The IAggregateRoot&lt;TAuthenticationToken&gt;.Id of the IAggregateRoot&lt;TAuthenticationToken&gt;.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>version</parametername>
</parameternamelist>
<parameterdescription>
<para>Load events up-to and including from this version</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/a99f043f4d1af837/Framework/Azure/Cqrs.Azure.BlobStorage/Events/TableStorageEventStore.cs" line="102" column="1" bodyfile="/opt/buildAgent/work/a99f043f4d1af837/Framework/Azure/Cqrs.Azure.BlobStorage/Events/TableStorageEventStore.cs" bodystart="102" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Azure_1_1BlobStorage_1_1Events_1_1TableStorageEventStore_a90fb91dfb58f69deb6f5e91bae69330d_1a90fb91dfb58f69deb6f5e91bae69330d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>override IEnumerable&lt; <ref refid="interfaceCqrs_1_1Events_1_1IEvent" kindref="compound">IEvent</ref>&lt; TAuthenticationToken &gt; &gt;</type>
        <definition>override IEnumerable&lt;IEvent&lt;TAuthenticationToken&gt; &gt; Cqrs.Azure.BlobStorage.Events.TableStorageEventStore&lt; TAuthenticationToken &gt;.GetToDate</definition>
        <argsstring>(Type aggregateRootType, Guid aggregateId, DateTime versionedDate)</argsstring>
        <name>GetToDate</name>
        <reimplements refid="classCqrs_1_1Events_1_1EventStore_acc2cf147ad6420c5359485f04367d5d1_1acc2cf147ad6420c5359485f04367d5d1">GetToDate</reimplements>
        <param>
          <type>Type</type>
          <declname>aggregateRootType</declname>
        </param>
        <param>
          <type>Guid</type>
          <declname>aggregateId</declname>
        </param>
        <param>
          <type>DateTime</type>
          <declname>versionedDate</declname>
        </param>
        <briefdescription>
<para>Gets a collection of IEvent&lt;TAuthenticationToken&gt; for the IAggregateRoot&lt;TAuthenticationToken&gt; of type <emphasis>aggregateRootType</emphasis>  with the ID matching the provided <emphasis>aggregateId</emphasis>  up to and including the provided <emphasis>versionedDate</emphasis> . </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aggregateRootType</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the IAggregateRoot&lt;TAuthenticationToken&gt; the IEvent&lt;TAuthenticationToken&gt; was raised in.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aggregateId</parametername>
</parameternamelist>
<parameterdescription>
<para>The IAggregateRoot&lt;TAuthenticationToken&gt;.Id of the IAggregateRoot&lt;TAuthenticationToken&gt;.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>versionedDate</parametername>
</parameternamelist>
<parameterdescription>
<para>Load events up-to and including from this DateTime</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/a99f043f4d1af837/Framework/Azure/Cqrs.Azure.BlobStorage/Events/TableStorageEventStore.cs" line="128" column="1" bodyfile="/opt/buildAgent/work/a99f043f4d1af837/Framework/Azure/Cqrs.Azure.BlobStorage/Events/TableStorageEventStore.cs" bodystart="128" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Azure_1_1BlobStorage_1_1Events_1_1TableStorageEventStore_a715c0d5258d8a9203f68a1070420fb7b_1a715c0d5258d8a9203f68a1070420fb7b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>override IEnumerable&lt; <ref refid="interfaceCqrs_1_1Events_1_1IEvent" kindref="compound">IEvent</ref>&lt; TAuthenticationToken &gt; &gt;</type>
        <definition>override IEnumerable&lt;IEvent&lt;TAuthenticationToken&gt; &gt; Cqrs.Azure.BlobStorage.Events.TableStorageEventStore&lt; TAuthenticationToken &gt;.GetBetweenDates</definition>
        <argsstring>(Type aggregateRootType, Guid aggregateId, DateTime fromVersionedDate, DateTime toVersionedDate)</argsstring>
        <name>GetBetweenDates</name>
        <reimplements refid="classCqrs_1_1Events_1_1EventStore_add415731fcea6a9367e1031c4608c922_1add415731fcea6a9367e1031c4608c922">GetBetweenDates</reimplements>
        <param>
          <type>Type</type>
          <declname>aggregateRootType</declname>
        </param>
        <param>
          <type>Guid</type>
          <declname>aggregateId</declname>
        </param>
        <param>
          <type>DateTime</type>
          <declname>fromVersionedDate</declname>
        </param>
        <param>
          <type>DateTime</type>
          <declname>toVersionedDate</declname>
        </param>
        <briefdescription>
<para>Gets a collection of IEvent&lt;TAuthenticationToken&gt; for the IAggregateRoot&lt;TAuthenticationToken&gt; of type <emphasis>aggregateRootType</emphasis>  with the ID matching the provided <emphasis>aggregateId</emphasis>  from and including the provided <emphasis>fromVersionedDate</emphasis>  up to and including the provided <emphasis>toVersionedDate</emphasis> . </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aggregateRootType</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the IAggregateRoot&lt;TAuthenticationToken&gt; the IEvent&lt;TAuthenticationToken&gt; was raised in.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aggregateId</parametername>
</parameternamelist>
<parameterdescription>
<para>The IAggregateRoot&lt;TAuthenticationToken&gt;.Id of the IAggregateRoot&lt;TAuthenticationToken&gt;.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fromVersionedDate</parametername>
</parameternamelist>
<parameterdescription>
<para>Load events from and including from this DateTime</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>toVersionedDate</parametername>
</parameternamelist>
<parameterdescription>
<para>Load events up-to and including from this DateTime</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/a99f043f4d1af837/Framework/Azure/Cqrs.Azure.BlobStorage/Events/TableStorageEventStore.cs" line="155" column="1" bodyfile="/opt/buildAgent/work/a99f043f4d1af837/Framework/Azure/Cqrs.Azure.BlobStorage/Events/TableStorageEventStore.cs" bodystart="155" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Azure_1_1BlobStorage_1_1Events_1_1TableStorageEventStore_a9b952a9257dc6f458b98eba87684412e_1a9b952a9257dc6f458b98eba87684412e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>override IEnumerable&lt; <ref refid="classCqrs_1_1Events_1_1EventData" kindref="compound">EventData</ref> &gt;</type>
        <definition>override IEnumerable&lt;EventData&gt; Cqrs.Azure.BlobStorage.Events.TableStorageEventStore&lt; TAuthenticationToken &gt;.Get</definition>
        <argsstring>(Guid correlationId)</argsstring>
        <name>Get</name>
        <reimplements refid="classCqrs_1_1Events_1_1EventStore_a0096646f5dff730b0041b9469719c420_1a0096646f5dff730b0041b9469719c420">Get</reimplements>
        <reimplementedby refid="classCqrs_1_1Azure_1_1Storage_1_1Events_1_1TableStorageEventStore_a1b436bbb111b14b85ee6ba7f90fb1a35_1a1b436bbb111b14b85ee6ba7f90fb1a35">Get</reimplementedby>
        <param>
          <type>Guid</type>
          <declname>correlationId</declname>
        </param>
        <briefdescription>
<para>Get all IEvent&lt;TAuthenticationToken&gt; instances for the given <emphasis>correlationId</emphasis> . </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>correlationId</parametername>
</parameternamelist>
<parameterdescription>
<para>The IMessage.CorrelationId of the IEvent&lt;TAuthenticationToken&gt; instances to retrieve.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/a99f043f4d1af837/Framework/Azure/Cqrs.Azure.BlobStorage/Events/TableStorageEventStore.cs" line="179" column="1" bodyfile="/opt/buildAgent/work/a99f043f4d1af837/Framework/Azure/Cqrs.Azure.BlobStorage/Events/TableStorageEventStore.cs" bodystart="179" bodyend="192"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classCqrs_1_1Azure_1_1BlobStorage_1_1Events_1_1TableStorageEventStore_a5cee1f388c1a03d9cfea5ee1a9f42657_1a5cee1f388c1a03d9cfea5ee1a9f42657" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>override string</type>
        <definition>override string Cqrs.Azure.BlobStorage.Events.TableStorageEventStore&lt; TAuthenticationToken &gt;.GenerateStreamName</definition>
        <argsstring>(Type aggregateRootType, Guid aggregateId)</argsstring>
        <name>GenerateStreamName</name>
        <reimplements refid="classCqrs_1_1Events_1_1EventStore_aba61739e47fdd0f7fce656f896cbe908_1aba61739e47fdd0f7fce656f896cbe908">GenerateStreamName</reimplements>
        <param>
          <type>Type</type>
          <declname>aggregateRootType</declname>
        </param>
        <param>
          <type>Guid</type>
          <declname>aggregateId</declname>
        </param>
        <briefdescription>
<para>Generate a unique stream name based on the provided <emphasis>aggregateRootType</emphasis>  and the <emphasis>aggregateId</emphasis> . </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aggregateRootType</parametername>
</parameternamelist>
<parameterdescription>
<para>The Type of the IAggregateRoot&lt;TAuthenticationToken&gt;.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aggregateId</parametername>
</parameternamelist>
<parameterdescription>
<para>The ID of the IAggregateRoot&lt;TAuthenticationToken&gt;.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/a99f043f4d1af837/Framework/Azure/Cqrs.Azure.BlobStorage/Events/TableStorageEventStore.cs" line="61" column="1" bodyfile="/opt/buildAgent/work/a99f043f4d1af837/Framework/Azure/Cqrs.Azure.BlobStorage/Events/TableStorageEventStore.cs" bodystart="61" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Azure_1_1BlobStorage_1_1Events_1_1TableStorageEventStore_ae63921d0ace265b1b269c865080b5712_1ae63921d0ace265b1b269c865080b5712" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>override void</type>
        <definition>override void Cqrs.Azure.BlobStorage.Events.TableStorageEventStore&lt; TAuthenticationToken &gt;.PersistEvent</definition>
        <argsstring>(EventData eventData)</argsstring>
        <name>PersistEvent</name>
        <reimplements refid="classCqrs_1_1Events_1_1EventStore_aedb71ca0ddf21220e323bc60ad7508cd_1aedb71ca0ddf21220e323bc60ad7508cd">PersistEvent</reimplements>
        <param>
          <type><ref refid="classCqrs_1_1Events_1_1EventData" kindref="compound">EventData</ref></type>
          <declname>eventData</declname>
        </param>
        <briefdescription>
<para>Persist the provided <emphasis>eventData</emphasis>  into storage. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eventData</parametername>
</parameternamelist>
<parameterdescription>
<para>The EventData to persist.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/a99f043f4d1af837/Framework/Azure/Cqrs.Azure.BlobStorage/Events/TableStorageEventStore.cs" line="198" column="1" bodyfile="/opt/buildAgent/work/a99f043f4d1af837/Framework/Azure/Cqrs.Azure.BlobStorage/Events/TableStorageEventStore.cs" bodystart="198" bodyend="204"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>An <ref refid="namespaceCqrs_1_1Azure" kindref="compound">Azure</ref> <ref refid="namespaceCqrs_1_1Azure_1_1Storage" kindref="compound">Storage</ref> based <ref refid="classCqrs_1_1Events_1_1EventStore_a6346cb2aea4c5b4e740dc6cfb15abab8_1a6346cb2aea4c5b4e740dc6cfb15abab8" kindref="member">EventStore&lt;TAuthenticationToken&gt;</ref>. </para>    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>TAuthenticationToken</parametername>
</parameternamelist>
<parameterdescription>
<para>The Type of the authentication token.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="494">
        <label>IEventStore&lt; TAuthenticationToken &gt;</label>
        <link refid="interfaceCqrs_1_1Events_1_1IEventStore"/>
      </node>
      <node id="492">
        <label>Cqrs.Azure.BlobStorage.Events.TableStorageEventStore&lt; TAuthenticationToken &gt;</label>
        <link refid="classCqrs_1_1Azure_1_1BlobStorage_1_1Events_1_1TableStorageEventStore"/>
        <childnode refid="493" relation="public-inheritance">
        </childnode>
      </node>
      <node id="495">
        <label>Cqrs::Azure::Storage::Events::TableStorageEventStore&lt; TAuthenticationToken &gt;</label>
        <link refid="classCqrs_1_1Azure_1_1Storage_1_1Events_1_1TableStorageEventStore"/>
        <childnode refid="492" relation="public-inheritance">
        </childnode>
      </node>
      <node id="493">
        <label>EventStore&lt; TAuthenticationToken &gt;</label>
        <link refid="classCqrs_1_1Events_1_1EventStore"/>
        <childnode refid="494" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="498">
        <label>IEventStore&lt; TAuthenticationToken &gt;</label>
        <link refid="interfaceCqrs_1_1Events_1_1IEventStore"/>
      </node>
      <node id="496">
        <label>Cqrs.Azure.BlobStorage.Events.TableStorageEventStore&lt; TAuthenticationToken &gt;</label>
        <link refid="classCqrs_1_1Azure_1_1BlobStorage_1_1Events_1_1TableStorageEventStore"/>
        <childnode refid="497" relation="public-inheritance">
        </childnode>
      </node>
      <node id="497">
        <label>EventStore&lt; TAuthenticationToken &gt;</label>
        <link refid="classCqrs_1_1Events_1_1EventStore"/>
        <childnode refid="498" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/opt/buildAgent/work/a99f043f4d1af837/Framework/Azure/Cqrs.Azure.BlobStorage/Events/TableStorageEventStore.cs" line="26" column="1" bodyfile="/opt/buildAgent/work/a99f043f4d1af837/Framework/Azure/Cqrs.Azure.BlobStorage/Events/TableStorageEventStore.cs" bodystart="24" bodyend="289"/>
    <listofallmembers>
      <member refid="classCqrs_1_1Azure_1_1BlobStorage_1_1Events_1_1TableStorageEventStore_a06b6a3a1ac68dfce2d27aacadffa5beb_1a06b6a3a1ac68dfce2d27aacadffa5beb" prot="protected" virt="non-virtual"><scope>Cqrs::Azure::BlobStorage::Events::TableStorageEventStore</scope><name>CorrelationIdTableStorageStore</name></member>
      <member refid="classCqrs_1_1Events_1_1EventStore_a1e6d87995d38d6fbb148388ec165a87e_1a1e6d87995d38d6fbb148388ec165a87e" prot="protected" virt="non-virtual"><scope>Cqrs::Azure::BlobStorage::Events::TableStorageEventStore</scope><name>CqrsEventStoreStreamNamePattern</name></member>
      <member refid="classCqrs_1_1Events_1_1EventStore_a05393aedf2eae4b2eeae3977e7f1c6f9_1a05393aedf2eae4b2eeae3977e7f1c6f9" prot="protected" virt="non-virtual"><scope>Cqrs::Azure::BlobStorage::Events::TableStorageEventStore</scope><name>EventBuilder</name></member>
      <member refid="classCqrs_1_1Events_1_1EventStore_a24f17302c069058e5814dedfb614d599_1a24f17302c069058e5814dedfb614d599" prot="protected" virt="non-virtual"><scope>Cqrs::Azure::BlobStorage::Events::TableStorageEventStore</scope><name>EventDeserialiser</name></member>
      <member refid="classCqrs_1_1Events_1_1EventStore_a6346cb2aea4c5b4e740dc6cfb15abab8_1a6346cb2aea4c5b4e740dc6cfb15abab8" prot="protected" virt="non-virtual"><scope>Cqrs::Azure::BlobStorage::Events::TableStorageEventStore</scope><name>EventStore</name></member>
      <member refid="classCqrs_1_1Azure_1_1BlobStorage_1_1Events_1_1TableStorageEventStore_a5cee1f388c1a03d9cfea5ee1a9f42657_1a5cee1f388c1a03d9cfea5ee1a9f42657" prot="protected" virt="virtual"><scope>Cqrs::Azure::BlobStorage::Events::TableStorageEventStore</scope><name>GenerateStreamName</name></member>
      <member refid="classCqrs_1_1Events_1_1EventStore_a03df06d4ce9c6d16201c079f2de0a7f3_1a03df06d4ce9c6d16201c079f2de0a7f3" prot="protected" virt="virtual" ambiguityscope="Cqrs::Events::EventStore."><scope>Cqrs::Azure::BlobStorage::Events::TableStorageEventStore</scope><name>GenerateStreamName</name></member>
      <member refid="classCqrs_1_1Azure_1_1BlobStorage_1_1Events_1_1TableStorageEventStore_a420c94c86d8d1c2959aee8602f43c0c0_1a420c94c86d8d1c2959aee8602f43c0c0" prot="public" virt="virtual"><scope>Cqrs::Azure::BlobStorage::Events::TableStorageEventStore</scope><name>Get</name></member>
      <member refid="classCqrs_1_1Azure_1_1BlobStorage_1_1Events_1_1TableStorageEventStore_a9b952a9257dc6f458b98eba87684412e_1a9b952a9257dc6f458b98eba87684412e" prot="public" virt="virtual"><scope>Cqrs::Azure::BlobStorage::Events::TableStorageEventStore</scope><name>Get</name></member>
      <member refid="classCqrs_1_1Events_1_1EventStore_aa6ffed5d7dd365600669149da29f9e89_1aa6ffed5d7dd365600669149da29f9e89" prot="public" virt="virtual"><scope>Cqrs::Azure::BlobStorage::Events::TableStorageEventStore</scope><name>Get&lt; T &gt;</name></member>
      <member refid="classCqrs_1_1Azure_1_1BlobStorage_1_1Events_1_1TableStorageEventStore_a715c0d5258d8a9203f68a1070420fb7b_1a715c0d5258d8a9203f68a1070420fb7b" prot="public" virt="virtual"><scope>Cqrs::Azure::BlobStorage::Events::TableStorageEventStore</scope><name>GetBetweenDates</name></member>
      <member refid="classCqrs_1_1Events_1_1EventStore_a273b6bf609a82564fda68380d381209e_1a273b6bf609a82564fda68380d381209e" prot="public" virt="virtual"><scope>Cqrs::Azure::BlobStorage::Events::TableStorageEventStore</scope><name>GetBetweenDates&lt; T &gt;</name></member>
      <member refid="classCqrs_1_1Azure_1_1BlobStorage_1_1Events_1_1TableStorageEventStore_a90fb91dfb58f69deb6f5e91bae69330d_1a90fb91dfb58f69deb6f5e91bae69330d" prot="public" virt="virtual"><scope>Cqrs::Azure::BlobStorage::Events::TableStorageEventStore</scope><name>GetToDate</name></member>
      <member refid="classCqrs_1_1Events_1_1EventStore_a8a7b9c1ae079b28d3fedb4f815d93fb9_1a8a7b9c1ae079b28d3fedb4f815d93fb9" prot="public" virt="virtual"><scope>Cqrs::Azure::BlobStorage::Events::TableStorageEventStore</scope><name>GetToDate&lt; T &gt;</name></member>
      <member refid="classCqrs_1_1Azure_1_1BlobStorage_1_1Events_1_1TableStorageEventStore_ae6bd61257a3218d7ceb51a5ff54fb442_1ae6bd61257a3218d7ceb51a5ff54fb442" prot="public" virt="virtual"><scope>Cqrs::Azure::BlobStorage::Events::TableStorageEventStore</scope><name>GetToVersion</name></member>
      <member refid="classCqrs_1_1Events_1_1EventStore_abbefa3356d8082902bb2b51f2bfab3fc_1abbefa3356d8082902bb2b51f2bfab3fc" prot="public" virt="virtual"><scope>Cqrs::Azure::BlobStorage::Events::TableStorageEventStore</scope><name>GetToVersion&lt; T &gt;</name></member>
      <member refid="classCqrs_1_1Events_1_1EventStore_a99506f7136a658364f8b74ef6a779a3f_1a99506f7136a658364f8b74ef6a779a3f" prot="protected" virt="non-virtual"><scope>Cqrs::Azure::BlobStorage::Events::TableStorageEventStore</scope><name>Logger</name></member>
      <member refid="classCqrs_1_1Azure_1_1BlobStorage_1_1Events_1_1TableStorageEventStore_ae63921d0ace265b1b269c865080b5712_1ae63921d0ace265b1b269c865080b5712" prot="protected" virt="virtual"><scope>Cqrs::Azure::BlobStorage::Events::TableStorageEventStore</scope><name>PersistEvent</name></member>
      <member refid="classCqrs_1_1Events_1_1EventStore_a3ba5ba04a36382b6d36a6ad8867dc766_1a3ba5ba04a36382b6d36a6ad8867dc766" prot="public" virt="virtual"><scope>Cqrs::Azure::BlobStorage::Events::TableStorageEventStore</scope><name>Save</name></member>
      <member refid="classCqrs_1_1Events_1_1EventStore_a958854f49c3eb4fcf1922ba7737a8dfe_1a958854f49c3eb4fcf1922ba7737a8dfe" prot="public" virt="virtual"><scope>Cqrs::Azure::BlobStorage::Events::TableStorageEventStore</scope><name>Save&lt; T &gt;</name></member>
      <member refid="classCqrs_1_1Azure_1_1BlobStorage_1_1Events_1_1TableStorageEventStore_a6e64df5250bd136250259e0a573097e4_1a6e64df5250bd136250259e0a573097e4" prot="protected" virt="non-virtual"><scope>Cqrs::Azure::BlobStorage::Events::TableStorageEventStore</scope><name>TableCqrsEventStoreStreamNamePattern</name></member>
      <member refid="classCqrs_1_1Azure_1_1BlobStorage_1_1Events_1_1TableStorageEventStore_a25a65bc4a027b2a16ebf02e763ac3b95_1a25a65bc4a027b2a16ebf02e763ac3b95" prot="public" virt="non-virtual"><scope>Cqrs::Azure::BlobStorage::Events::TableStorageEventStore</scope><name>TableStorageEventStore</name></member>
      <member refid="classCqrs_1_1Azure_1_1BlobStorage_1_1Events_1_1TableStorageEventStore_ad86c24c28321c16b1f3601b3e7d870c4_1ad86c24c28321c16b1f3601b3e7d870c4" prot="protected" virt="non-virtual"><scope>Cqrs::Azure::BlobStorage::Events::TableStorageEventStore</scope><name>TableStorageStore</name></member>
      <member refid="classCqrs_1_1Events_1_1EventStore_a75d6d3ad3a26fb9b511e2a98e72260f9_1a75d6d3ad3a26fb9b511e2a98e72260f9" prot="protected" virt="non-virtual"><scope>Cqrs::Azure::BlobStorage::Events::TableStorageEventStore</scope><name>TelemetryHelper</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
