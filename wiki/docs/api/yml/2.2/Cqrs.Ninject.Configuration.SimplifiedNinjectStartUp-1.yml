### YamlMime:ManagedReference
items:
- uid: Cqrs.Ninject.Configuration.SimplifiedNinjectStartUp`1
  commentId: T:Cqrs.Ninject.Configuration.SimplifiedNinjectStartUp`1
  id: SimplifiedNinjectStartUp`1
  parent: Cqrs.Ninject.Configuration
  children:
  - Cqrs.Ninject.Configuration.SimplifiedNinjectStartUp`1.#ctor(Cqrs.Configuration.IConfigurationManager)
  - Cqrs.Ninject.Configuration.SimplifiedNinjectStartUp`1.AddSupplementryModules
  - Cqrs.Ninject.Configuration.SimplifiedNinjectStartUp`1.ConfigurationManager
  - Cqrs.Ninject.Configuration.SimplifiedNinjectStartUp`1.CreateKernel
  - Cqrs.Ninject.Configuration.SimplifiedNinjectStartUp`1.CreateNinjectKernel
  - Cqrs.Ninject.Configuration.SimplifiedNinjectStartUp`1.StartResolver(IKernel)
  langs:
  - csharp
  - vb
  name: SimplifiedNinjectStartUp<THostModule>
  nameWithType: SimplifiedNinjectStartUp<THostModule>
  fullName: Cqrs.Ninject.Configuration.SimplifiedNinjectStartUp<THostModule>
  type: Class
  source:
    remote:
      path: Framework/Ninject/Cqrs.Ninject/Configuration/SimplifiedNinjectStartUp.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: SimplifiedNinjectStartUp
    path: Framework/Ninject/Cqrs.Ninject/Configuration/SimplifiedNinjectStartUp.cs
    startLine: 20
  assemblies:
  - Cqrs.Ninject
  namespace: Cqrs.Ninject.Configuration
  summary: "\nA start-up class.\n"
  example: []
  syntax:
    content: 'public class SimplifiedNinjectStartUp<THostModule> : object where THostModule : INinjectModule, new ()'
    typeParameters:
    - id: THostModule
      description: The base <see cref="!:INinjectModule"></see> that is loaded first.
    content.vb: >-
      Public Class SimplifiedNinjectStartUp(Of THostModule As {INinjectModule, New})
          Inherits Object
  inheritance:
  - System.Object
  nameWithType.vb: SimplifiedNinjectStartUp(Of THostModule)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Cqrs.Ninject.Configuration.SimplifiedNinjectStartUp(Of THostModule)
  name.vb: SimplifiedNinjectStartUp(Of THostModule)
- uid: Cqrs.Ninject.Configuration.SimplifiedNinjectStartUp`1.#ctor(Cqrs.Configuration.IConfigurationManager)
  commentId: M:Cqrs.Ninject.Configuration.SimplifiedNinjectStartUp`1.#ctor(Cqrs.Configuration.IConfigurationManager)
  id: '#ctor(Cqrs.Configuration.IConfigurationManager)'
  parent: Cqrs.Ninject.Configuration.SimplifiedNinjectStartUp`1
  langs:
  - csharp
  - vb
  name: SimplifiedNinjectStartUp(IConfigurationManager)
  nameWithType: SimplifiedNinjectStartUp<THostModule>.SimplifiedNinjectStartUp(IConfigurationManager)
  fullName: Cqrs.Ninject.Configuration.SimplifiedNinjectStartUp<THostModule>.SimplifiedNinjectStartUp(Cqrs.Configuration.IConfigurationManager)
  type: Constructor
  source:
    remote:
      path: Framework/Ninject/Cqrs.Ninject/Configuration/SimplifiedNinjectStartUp.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: .ctor
    path: Framework/Ninject/Cqrs.Ninject/Configuration/SimplifiedNinjectStartUp.cs
    startLine: 26
  assemblies:
  - Cqrs.Ninject
  namespace: Cqrs.Ninject.Configuration
  summary: "\nInstantiates a new instance of <xref href=\"Cqrs.Ninject.Configuration.SimplifiedNinjectStartUp%601\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public SimplifiedNinjectStartUp(IConfigurationManager configurationManager)
    parameters:
    - id: configurationManager
      type: Cqrs.Configuration.IConfigurationManager
    content.vb: Public Sub New(configurationManager As IConfigurationManager)
  overload: Cqrs.Ninject.Configuration.SimplifiedNinjectStartUp`1.#ctor*
  nameWithType.vb: SimplifiedNinjectStartUp(Of THostModule).SimplifiedNinjectStartUp(IConfigurationManager)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Cqrs.Ninject.Configuration.SimplifiedNinjectStartUp(Of THostModule).SimplifiedNinjectStartUp(Cqrs.Configuration.IConfigurationManager)
- uid: Cqrs.Ninject.Configuration.SimplifiedNinjectStartUp`1.ConfigurationManager
  commentId: P:Cqrs.Ninject.Configuration.SimplifiedNinjectStartUp`1.ConfigurationManager
  id: ConfigurationManager
  parent: Cqrs.Ninject.Configuration.SimplifiedNinjectStartUp`1
  langs:
  - csharp
  - vb
  name: ConfigurationManager
  nameWithType: SimplifiedNinjectStartUp<THostModule>.ConfigurationManager
  fullName: Cqrs.Ninject.Configuration.SimplifiedNinjectStartUp<THostModule>.ConfigurationManager
  type: Property
  source:
    remote:
      path: Framework/Ninject/Cqrs.Ninject/Configuration/SimplifiedNinjectStartUp.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: ConfigurationManager
    path: Framework/Ninject/Cqrs.Ninject/Configuration/SimplifiedNinjectStartUp.cs
    startLine: 35
  assemblies:
  - Cqrs.Ninject
  namespace: Cqrs.Ninject.Configuration
  summary: "\nThe <xref href=\"Cqrs.Configuration.IConfigurationManager\" data-throw-if-not-resolved=\"false\"></xref> that will be used to resolve configuration settings in <xref href=\"Cqrs.Ninject.Configuration.SimplifiedNinjectStartUp%601.CreateKernel\" data-throw-if-not-resolved=\"false\"></xref>.\nIt is not used elsewhere.\n"
  example: []
  syntax:
    content: protected IConfigurationManager ConfigurationManager { get; }
    parameters: []
    return:
      type: Cqrs.Configuration.IConfigurationManager
    content.vb: Protected ReadOnly Property ConfigurationManager As IConfigurationManager
  overload: Cqrs.Ninject.Configuration.SimplifiedNinjectStartUp`1.ConfigurationManager*
  nameWithType.vb: SimplifiedNinjectStartUp(Of THostModule).ConfigurationManager
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: Cqrs.Ninject.Configuration.SimplifiedNinjectStartUp(Of THostModule).ConfigurationManager
- uid: Cqrs.Ninject.Configuration.SimplifiedNinjectStartUp`1.CreateKernel
  commentId: M:Cqrs.Ninject.Configuration.SimplifiedNinjectStartUp`1.CreateKernel
  id: CreateKernel
  parent: Cqrs.Ninject.Configuration.SimplifiedNinjectStartUp`1
  langs:
  - csharp
  - vb
  name: CreateKernel()
  nameWithType: SimplifiedNinjectStartUp<THostModule>.CreateKernel()
  fullName: Cqrs.Ninject.Configuration.SimplifiedNinjectStartUp<THostModule>.CreateKernel()
  type: Method
  source:
    remote:
      path: Framework/Ninject/Cqrs.Ninject/Configuration/SimplifiedNinjectStartUp.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: CreateKernel
    path: Framework/Ninject/Cqrs.Ninject/Configuration/SimplifiedNinjectStartUp.cs
    startLine: 41
  assemblies:
  - Cqrs.Ninject
  namespace: Cqrs.Ninject.Configuration
  summary: "\nCreates the kernel that will manage your application.\n"
  example: []
  syntax:
    content: public virtual IKernel CreateKernel()
    return:
      type: IKernel
      description: The created kernel.
    content.vb: Public Overridable Function CreateKernel As IKernel
  overload: Cqrs.Ninject.Configuration.SimplifiedNinjectStartUp`1.CreateKernel*
  nameWithType.vb: SimplifiedNinjectStartUp(Of THostModule).CreateKernel()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Cqrs.Ninject.Configuration.SimplifiedNinjectStartUp(Of THostModule).CreateKernel()
- uid: Cqrs.Ninject.Configuration.SimplifiedNinjectStartUp`1.AddSupplementryModules
  commentId: M:Cqrs.Ninject.Configuration.SimplifiedNinjectStartUp`1.AddSupplementryModules
  id: AddSupplementryModules
  parent: Cqrs.Ninject.Configuration.SimplifiedNinjectStartUp`1
  langs:
  - csharp
  - vb
  name: AddSupplementryModules()
  nameWithType: SimplifiedNinjectStartUp<THostModule>.AddSupplementryModules()
  fullName: Cqrs.Ninject.Configuration.SimplifiedNinjectStartUp<THostModule>.AddSupplementryModules()
  type: Method
  source:
    remote:
      path: Framework/Ninject/Cqrs.Ninject/Configuration/SimplifiedNinjectStartUp.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: AddSupplementryModules
    path: Framework/Ninject/Cqrs.Ninject/Configuration/SimplifiedNinjectStartUp.cs
    startLine: 85
  assemblies:
  - Cqrs.Ninject
  namespace: Cqrs.Ninject.Configuration
  summary: "\nWhen overridden allows for the addition of any additional <see cref=\"!:INinjectModule\">modules</see> required.\n"
  example: []
  syntax:
    content: protected virtual void AddSupplementryModules()
    content.vb: Protected Overridable Sub AddSupplementryModules
  overload: Cqrs.Ninject.Configuration.SimplifiedNinjectStartUp`1.AddSupplementryModules*
  nameWithType.vb: SimplifiedNinjectStartUp(Of THostModule).AddSupplementryModules()
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Cqrs.Ninject.Configuration.SimplifiedNinjectStartUp(Of THostModule).AddSupplementryModules()
- uid: Cqrs.Ninject.Configuration.SimplifiedNinjectStartUp`1.CreateNinjectKernel
  commentId: M:Cqrs.Ninject.Configuration.SimplifiedNinjectStartUp`1.CreateNinjectKernel
  id: CreateNinjectKernel
  parent: Cqrs.Ninject.Configuration.SimplifiedNinjectStartUp`1
  langs:
  - csharp
  - vb
  name: CreateNinjectKernel()
  nameWithType: SimplifiedNinjectStartUp<THostModule>.CreateNinjectKernel()
  fullName: Cqrs.Ninject.Configuration.SimplifiedNinjectStartUp<THostModule>.CreateNinjectKernel()
  type: Method
  source:
    remote:
      path: Framework/Ninject/Cqrs.Ninject/Configuration/SimplifiedNinjectStartUp.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: CreateNinjectKernel
    path: Framework/Ninject/Cqrs.Ninject/Configuration/SimplifiedNinjectStartUp.cs
    startLine: 92
  assemblies:
  - Cqrs.Ninject
  namespace: Cqrs.Ninject.Configuration
  summary: "\nCreate a new <see cref=\"!:StandardKernel\"></see>\n"
  example: []
  syntax:
    content: protected virtual StandardKernel CreateNinjectKernel()
    return:
      type: StandardKernel
    content.vb: Protected Overridable Function CreateNinjectKernel As StandardKernel
  overload: Cqrs.Ninject.Configuration.SimplifiedNinjectStartUp`1.CreateNinjectKernel*
  nameWithType.vb: SimplifiedNinjectStartUp(Of THostModule).CreateNinjectKernel()
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Cqrs.Ninject.Configuration.SimplifiedNinjectStartUp(Of THostModule).CreateNinjectKernel()
- uid: Cqrs.Ninject.Configuration.SimplifiedNinjectStartUp`1.StartResolver(IKernel)
  commentId: M:Cqrs.Ninject.Configuration.SimplifiedNinjectStartUp`1.StartResolver(IKernel)
  id: StartResolver(IKernel)
  parent: Cqrs.Ninject.Configuration.SimplifiedNinjectStartUp`1
  langs:
  - csharp
  - vb
  name: StartResolver(IKernel)
  nameWithType: SimplifiedNinjectStartUp<THostModule>.StartResolver(IKernel)
  fullName: Cqrs.Ninject.Configuration.SimplifiedNinjectStartUp<THostModule>.StartResolver(IKernel)
  type: Method
  source:
    remote:
      path: Framework/Ninject/Cqrs.Ninject/Configuration/SimplifiedNinjectStartUp.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: StartResolver
    path: Framework/Ninject/Cqrs.Ninject/Configuration/SimplifiedNinjectStartUp.cs
    startLine: 100
  assemblies:
  - Cqrs.Ninject
  namespace: Cqrs.Ninject.Configuration
  summary: "\nCalls <xref href=\"Cqrs.Ninject.Configuration.NinjectDependencyResolver.Start(IKernel%2cSystem.Boolean)\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: protected virtual void StartResolver(IKernel kernel)
    parameters:
    - id: kernel
      type: IKernel
    content.vb: Protected Overridable Sub StartResolver(kernel As IKernel)
  overload: Cqrs.Ninject.Configuration.SimplifiedNinjectStartUp`1.StartResolver*
  nameWithType.vb: SimplifiedNinjectStartUp(Of THostModule).StartResolver(IKernel)
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Cqrs.Ninject.Configuration.SimplifiedNinjectStartUp(Of THostModule).StartResolver(IKernel)
references:
- uid: Cqrs.Ninject.Configuration
  commentId: N:Cqrs.Ninject.Configuration
  isExternal: false
  name: Cqrs.Ninject.Configuration
  nameWithType: Cqrs.Ninject.Configuration
  fullName: Cqrs.Ninject.Configuration
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Cqrs.Ninject.Configuration.SimplifiedNinjectStartUp`1
  commentId: T:Cqrs.Ninject.Configuration.SimplifiedNinjectStartUp`1
  isExternal: false
  name: SimplifiedNinjectStartUp<THostModule>
  nameWithType: SimplifiedNinjectStartUp<THostModule>
  fullName: Cqrs.Ninject.Configuration.SimplifiedNinjectStartUp<THostModule>
  nameWithType.vb: SimplifiedNinjectStartUp(Of THostModule)
  fullName.vb: Cqrs.Ninject.Configuration.SimplifiedNinjectStartUp(Of THostModule)
  name.vb: SimplifiedNinjectStartUp(Of THostModule)
  spec.csharp:
  - uid: Cqrs.Ninject.Configuration.SimplifiedNinjectStartUp`1
    name: SimplifiedNinjectStartUp
    nameWithType: SimplifiedNinjectStartUp
    fullName: Cqrs.Ninject.Configuration.SimplifiedNinjectStartUp
  - name: <
    nameWithType: <
    fullName: <
  - name: THostModule
    nameWithType: THostModule
    fullName: THostModule
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Ninject.Configuration.SimplifiedNinjectStartUp`1
    name: SimplifiedNinjectStartUp
    nameWithType: SimplifiedNinjectStartUp
    fullName: Cqrs.Ninject.Configuration.SimplifiedNinjectStartUp
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: THostModule
    nameWithType: THostModule
    fullName: THostModule
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Ninject.Configuration.SimplifiedNinjectStartUp`1.#ctor*
  commentId: Overload:Cqrs.Ninject.Configuration.SimplifiedNinjectStartUp`1.#ctor
  isExternal: false
  name: SimplifiedNinjectStartUp
  nameWithType: SimplifiedNinjectStartUp<THostModule>.SimplifiedNinjectStartUp
  fullName: Cqrs.Ninject.Configuration.SimplifiedNinjectStartUp<THostModule>.SimplifiedNinjectStartUp
  nameWithType.vb: SimplifiedNinjectStartUp(Of THostModule).SimplifiedNinjectStartUp
  fullName.vb: Cqrs.Ninject.Configuration.SimplifiedNinjectStartUp(Of THostModule).SimplifiedNinjectStartUp
- uid: Cqrs.Configuration.IConfigurationManager
  commentId: T:Cqrs.Configuration.IConfigurationManager
  parent: Cqrs.Configuration
  isExternal: false
  name: IConfigurationManager
  nameWithType: IConfigurationManager
  fullName: Cqrs.Configuration.IConfigurationManager
- uid: Cqrs.Configuration
  commentId: N:Cqrs.Configuration
  isExternal: false
  name: Cqrs.Configuration
  nameWithType: Cqrs.Configuration
  fullName: Cqrs.Configuration
- uid: Cqrs.Ninject.Configuration.SimplifiedNinjectStartUp`1.CreateKernel
  commentId: M:Cqrs.Ninject.Configuration.SimplifiedNinjectStartUp`1.CreateKernel
- uid: Cqrs.Ninject.Configuration.SimplifiedNinjectStartUp`1.ConfigurationManager*
  commentId: Overload:Cqrs.Ninject.Configuration.SimplifiedNinjectStartUp`1.ConfigurationManager
  isExternal: false
  name: ConfigurationManager
  nameWithType: SimplifiedNinjectStartUp<THostModule>.ConfigurationManager
  fullName: Cqrs.Ninject.Configuration.SimplifiedNinjectStartUp<THostModule>.ConfigurationManager
  nameWithType.vb: SimplifiedNinjectStartUp(Of THostModule).ConfigurationManager
  fullName.vb: Cqrs.Ninject.Configuration.SimplifiedNinjectStartUp(Of THostModule).ConfigurationManager
- uid: Cqrs.Ninject.Configuration.SimplifiedNinjectStartUp`1.CreateKernel*
  commentId: Overload:Cqrs.Ninject.Configuration.SimplifiedNinjectStartUp`1.CreateKernel
  isExternal: false
  name: CreateKernel
  nameWithType: SimplifiedNinjectStartUp<THostModule>.CreateKernel
  fullName: Cqrs.Ninject.Configuration.SimplifiedNinjectStartUp<THostModule>.CreateKernel
  nameWithType.vb: SimplifiedNinjectStartUp(Of THostModule).CreateKernel
  fullName.vb: Cqrs.Ninject.Configuration.SimplifiedNinjectStartUp(Of THostModule).CreateKernel
- uid: IKernel
  isExternal: true
  name: IKernel
  nameWithType: IKernel
  fullName: IKernel
- uid: Cqrs.Ninject.Configuration.SimplifiedNinjectStartUp`1.AddSupplementryModules*
  commentId: Overload:Cqrs.Ninject.Configuration.SimplifiedNinjectStartUp`1.AddSupplementryModules
  isExternal: false
  name: AddSupplementryModules
  nameWithType: SimplifiedNinjectStartUp<THostModule>.AddSupplementryModules
  fullName: Cqrs.Ninject.Configuration.SimplifiedNinjectStartUp<THostModule>.AddSupplementryModules
  nameWithType.vb: SimplifiedNinjectStartUp(Of THostModule).AddSupplementryModules
  fullName.vb: Cqrs.Ninject.Configuration.SimplifiedNinjectStartUp(Of THostModule).AddSupplementryModules
- uid: Cqrs.Ninject.Configuration.SimplifiedNinjectStartUp`1.CreateNinjectKernel*
  commentId: Overload:Cqrs.Ninject.Configuration.SimplifiedNinjectStartUp`1.CreateNinjectKernel
  isExternal: false
  name: CreateNinjectKernel
  nameWithType: SimplifiedNinjectStartUp<THostModule>.CreateNinjectKernel
  fullName: Cqrs.Ninject.Configuration.SimplifiedNinjectStartUp<THostModule>.CreateNinjectKernel
  nameWithType.vb: SimplifiedNinjectStartUp(Of THostModule).CreateNinjectKernel
  fullName.vb: Cqrs.Ninject.Configuration.SimplifiedNinjectStartUp(Of THostModule).CreateNinjectKernel
- uid: StandardKernel
  commentId: '!:StandardKernel'
  isExternal: true
  name: StandardKernel
  nameWithType: StandardKernel
  fullName: StandardKernel
- uid: Cqrs.Ninject.Configuration.NinjectDependencyResolver.Start(IKernel,System.Boolean)
  commentId: M:Cqrs.Ninject.Configuration.NinjectDependencyResolver.Start(IKernel,System.Boolean)
  parent: Cqrs.Ninject.Configuration.NinjectDependencyResolver
  isExternal: true
  name: Start(IKernel, Boolean)
  nameWithType: NinjectDependencyResolver.Start(IKernel, Boolean)
  fullName: Cqrs.Ninject.Configuration.NinjectDependencyResolver.Start(IKernel, System.Boolean)
  spec.csharp:
  - uid: Cqrs.Ninject.Configuration.NinjectDependencyResolver.Start(IKernel,System.Boolean)
    name: Start
    nameWithType: NinjectDependencyResolver.Start
    fullName: Cqrs.Ninject.Configuration.NinjectDependencyResolver.Start
  - name: (
    nameWithType: (
    fullName: (
  - uid: IKernel
    name: IKernel
    nameWithType: IKernel
    fullName: IKernel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Ninject.Configuration.NinjectDependencyResolver.Start(IKernel,System.Boolean)
    name: Start
    nameWithType: NinjectDependencyResolver.Start
    fullName: Cqrs.Ninject.Configuration.NinjectDependencyResolver.Start
  - name: (
    nameWithType: (
    fullName: (
  - uid: IKernel
    name: IKernel
    nameWithType: IKernel
    fullName: IKernel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Ninject.Configuration.SimplifiedNinjectStartUp`1.StartResolver*
  commentId: Overload:Cqrs.Ninject.Configuration.SimplifiedNinjectStartUp`1.StartResolver
  isExternal: false
  name: StartResolver
  nameWithType: SimplifiedNinjectStartUp<THostModule>.StartResolver
  fullName: Cqrs.Ninject.Configuration.SimplifiedNinjectStartUp<THostModule>.StartResolver
  nameWithType.vb: SimplifiedNinjectStartUp(Of THostModule).StartResolver
  fullName.vb: Cqrs.Ninject.Configuration.SimplifiedNinjectStartUp(Of THostModule).StartResolver
- uid: Cqrs.Ninject.Configuration.NinjectDependencyResolver
  commentId: T:Cqrs.Ninject.Configuration.NinjectDependencyResolver
  parent: Cqrs.Ninject.Configuration
  isExternal: false
  name: NinjectDependencyResolver
  nameWithType: NinjectDependencyResolver
  fullName: Cqrs.Ninject.Configuration.NinjectDependencyResolver
