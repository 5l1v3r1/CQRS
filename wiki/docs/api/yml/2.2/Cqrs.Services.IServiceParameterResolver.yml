### YamlMime:ManagedReference
items:
- uid: Cqrs.Services.IServiceParameterResolver
  commentId: T:Cqrs.Services.IServiceParameterResolver
  id: IServiceParameterResolver
  parent: Cqrs.Services
  children:
  - Cqrs.Services.IServiceParameterResolver.ResolveName(System.String,System.String,System.Type,System.Runtime.Serialization.DataContractResolver)
  - Cqrs.Services.IServiceParameterResolver.TryResolveType(System.Type,System.Type,System.Runtime.Serialization.DataContractResolver,System.Xml.XmlDictionaryString@,System.Xml.XmlDictionaryString@)
  langs:
  - csharp
  - vb
  name: IServiceParameterResolver
  nameWithType: IServiceParameterResolver
  fullName: Cqrs.Services.IServiceParameterResolver
  type: Interface
  source:
    remote:
      path: Framework/Cqrs/Services/IServiceParameterResolver.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: IServiceParameterResolver
    path: Framework/Cqrs/Services/IServiceParameterResolver.cs
    startLine: 17
  assemblies:
  - Cqrs
  namespace: Cqrs.Services
  summary: "\nResolves parameter types when serialising with WCF.\n"
  example: []
  syntax:
    content: public interface IServiceParameterResolver
    content.vb: Public Interface IServiceParameterResolver
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Cqrs.Services.IServiceParameterResolver.ResolveName(System.String,System.String,System.Type,System.Runtime.Serialization.DataContractResolver)
  commentId: M:Cqrs.Services.IServiceParameterResolver.ResolveName(System.String,System.String,System.Type,System.Runtime.Serialization.DataContractResolver)
  id: ResolveName(System.String,System.String,System.Type,System.Runtime.Serialization.DataContractResolver)
  parent: Cqrs.Services.IServiceParameterResolver
  langs:
  - csharp
  - vb
  name: ResolveName(String, String, Type, DataContractResolver)
  nameWithType: IServiceParameterResolver.ResolveName(String, String, Type, DataContractResolver)
  fullName: Cqrs.Services.IServiceParameterResolver.ResolveName(System.String, System.String, System.Type, System.Runtime.Serialization.DataContractResolver)
  type: Method
  source:
    remote:
      path: Framework/Cqrs/Services/IServiceParameterResolver.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: ResolveName
    path: Framework/Cqrs/Services/IServiceParameterResolver.cs
    startLine: 22
  assemblies:
  - Cqrs
  namespace: Cqrs.Services
  summary: "\nIndicates if the provided <span class=\"paramref\">typeName</span> is resolvable.\n"
  example: []
  syntax:
    content: Type ResolveName(string typeName, string typeNamespace, Type declaredType, DataContractResolver knownTypeResolver)
    parameters:
    - id: typeName
      type: System.String
    - id: typeNamespace
      type: System.String
    - id: declaredType
      type: System.Type
    - id: knownTypeResolver
      type: System.Runtime.Serialization.DataContractResolver
    return:
      type: System.Type
    content.vb: Function ResolveName(typeName As String, typeNamespace As String, declaredType As Type, knownTypeResolver As DataContractResolver) As Type
  overload: Cqrs.Services.IServiceParameterResolver.ResolveName*
- uid: Cqrs.Services.IServiceParameterResolver.TryResolveType(System.Type,System.Type,System.Runtime.Serialization.DataContractResolver,System.Xml.XmlDictionaryString@,System.Xml.XmlDictionaryString@)
  commentId: M:Cqrs.Services.IServiceParameterResolver.TryResolveType(System.Type,System.Type,System.Runtime.Serialization.DataContractResolver,System.Xml.XmlDictionaryString@,System.Xml.XmlDictionaryString@)
  id: TryResolveType(System.Type,System.Type,System.Runtime.Serialization.DataContractResolver,System.Xml.XmlDictionaryString@,System.Xml.XmlDictionaryString@)
  parent: Cqrs.Services.IServiceParameterResolver
  langs:
  - csharp
  - vb
  name: TryResolveType(Type, Type, DataContractResolver, out XmlDictionaryString, out XmlDictionaryString)
  nameWithType: IServiceParameterResolver.TryResolveType(Type, Type, DataContractResolver, out XmlDictionaryString, out XmlDictionaryString)
  fullName: Cqrs.Services.IServiceParameterResolver.TryResolveType(System.Type, System.Type, System.Runtime.Serialization.DataContractResolver, out System.Xml.XmlDictionaryString, out System.Xml.XmlDictionaryString)
  type: Method
  source:
    remote:
      path: Framework/Cqrs/Services/IServiceParameterResolver.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: TryResolveType
    path: Framework/Cqrs/Services/IServiceParameterResolver.cs
    startLine: 27
  assemblies:
  - Cqrs
  namespace: Cqrs.Services
  summary: "\nReturns the <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> if the <span class=\"paramref\">typeName</span> is resolvable.\n"
  example: []
  syntax:
    content: bool TryResolveType(Type dataContractType, Type declaredType, DataContractResolver knownTypeResolver, out XmlDictionaryString typeName, out XmlDictionaryString typeNamespace)
    parameters:
    - id: dataContractType
      type: System.Type
    - id: declaredType
      type: System.Type
    - id: knownTypeResolver
      type: System.Runtime.Serialization.DataContractResolver
    - id: typeName
      type: System.Xml.XmlDictionaryString
    - id: typeNamespace
      type: System.Xml.XmlDictionaryString
    return:
      type: System.Boolean
    content.vb: Function TryResolveType(dataContractType As Type, declaredType As Type, knownTypeResolver As DataContractResolver, ByRef typeName As XmlDictionaryString, ByRef typeNamespace As XmlDictionaryString) As Boolean
  overload: Cqrs.Services.IServiceParameterResolver.TryResolveType*
  nameWithType.vb: IServiceParameterResolver.TryResolveType(Type, Type, DataContractResolver, ByRef XmlDictionaryString, ByRef XmlDictionaryString)
  fullName.vb: Cqrs.Services.IServiceParameterResolver.TryResolveType(System.Type, System.Type, System.Runtime.Serialization.DataContractResolver, ByRef System.Xml.XmlDictionaryString, ByRef System.Xml.XmlDictionaryString)
  name.vb: TryResolveType(Type, Type, DataContractResolver, ByRef XmlDictionaryString, ByRef XmlDictionaryString)
references:
- uid: Cqrs.Services
  commentId: N:Cqrs.Services
  isExternal: false
  name: Cqrs.Services
  nameWithType: Cqrs.Services
  fullName: Cqrs.Services
- uid: Cqrs.Services.IServiceParameterResolver.ResolveName*
  commentId: Overload:Cqrs.Services.IServiceParameterResolver.ResolveName
  isExternal: false
  name: ResolveName
  nameWithType: IServiceParameterResolver.ResolveName
  fullName: Cqrs.Services.IServiceParameterResolver.ResolveName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Runtime.Serialization.DataContractResolver
  commentId: T:System.Runtime.Serialization.DataContractResolver
  parent: System.Runtime.Serialization
  isExternal: true
  name: DataContractResolver
  nameWithType: DataContractResolver
  fullName: System.Runtime.Serialization.DataContractResolver
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Runtime.Serialization
  commentId: N:System.Runtime.Serialization
  isExternal: false
  name: System.Runtime.Serialization
  nameWithType: System.Runtime.Serialization
  fullName: System.Runtime.Serialization
- uid: Cqrs.Services.IServiceParameterResolver.TryResolveType*
  commentId: Overload:Cqrs.Services.IServiceParameterResolver.TryResolveType
  isExternal: false
  name: TryResolveType
  nameWithType: IServiceParameterResolver.TryResolveType
  fullName: Cqrs.Services.IServiceParameterResolver.TryResolveType
- uid: System.Xml.XmlDictionaryString
  commentId: T:System.Xml.XmlDictionaryString
  parent: System.Xml
  isExternal: true
  name: XmlDictionaryString
  nameWithType: XmlDictionaryString
  fullName: System.Xml.XmlDictionaryString
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: false
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
