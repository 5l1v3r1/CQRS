### YamlMime:ManagedReference
items:
- uid: Cqrs.Entities.IntegerRange
  commentId: T:Cqrs.Entities.IntegerRange
  id: IntegerRange
  parent: Cqrs.Entities
  children:
  - Cqrs.Entities.IntegerRange.#ctor
  langs:
  - csharp
  - vb
  name: IntegerRange
  nameWithType: IntegerRange
  fullName: Cqrs.Entities.IntegerRange
  type: Class
  source:
    remote:
      path: Framework/Cqrs/Entities/IntegerRange.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: IntegerRange
    path: Framework/Cqrs/Entities/IntegerRange.cs
    startLine: 13
  assemblies:
  - Cqrs
  namespace: Cqrs.Entities
  summary: "\nA <xref href=\"Cqrs.Entities.Range%601\" data-throw-if-not-resolved=\"false\"></xref> object for collecting a <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref> lower and upper limit.\n"
  example: []
  syntax:
    content: 'public class IntegerRange : Range<int>'
    content.vb: >-
      Public Class IntegerRange

          Inherits Range(Of Integer)
  inheritance:
  - System.Object
  - Cqrs.Entities.Range{System.Int32}
  inheritedMembers:
  - Cqrs.Entities.Range{System.Int32}.From
  - Cqrs.Entities.Range{System.Int32}.To
  - Cqrs.Entities.Range{System.Int32}.IsFromInclusive
  - Cqrs.Entities.Range{System.Int32}.IsToInclusive
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Cqrs.Entities.IntegerRange.#ctor
  commentId: M:Cqrs.Entities.IntegerRange.#ctor
  id: '#ctor'
  parent: Cqrs.Entities.IntegerRange
  langs:
  - csharp
  - vb
  name: IntegerRange()
  nameWithType: IntegerRange.IntegerRange()
  fullName: Cqrs.Entities.IntegerRange.IntegerRange()
  type: Constructor
  source:
    remote:
      path: Framework/Cqrs/Entities/IntegerRange.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: .ctor
    path: Framework/Cqrs/Entities/IntegerRange.cs
    startLine: 18
  assemblies:
  - Cqrs
  namespace: Cqrs.Entities
  summary: "\nInstantiates and Initialises a new instance of the <xref href=\"Cqrs.Entities.IntegerRange\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public IntegerRange()
    content.vb: Public Sub New
  overload: Cqrs.Entities.IntegerRange.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Cqrs.Entities.Range`1
  commentId: T:Cqrs.Entities.Range`1
  isExternal: false
  name: Range<TPrimitive>
  nameWithType: Range<TPrimitive>
  fullName: Cqrs.Entities.Range<TPrimitive>
  nameWithType.vb: Range(Of TPrimitive)
  fullName.vb: Cqrs.Entities.Range(Of TPrimitive)
  name.vb: Range(Of TPrimitive)
  spec.csharp:
  - uid: Cqrs.Entities.Range`1
    name: Range
    nameWithType: Range
    fullName: Cqrs.Entities.Range
  - name: <
    nameWithType: <
    fullName: <
  - name: TPrimitive
    nameWithType: TPrimitive
    fullName: TPrimitive
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Entities.Range`1
    name: Range
    nameWithType: Range
    fullName: Cqrs.Entities.Range
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TPrimitive
    nameWithType: TPrimitive
    fullName: TPrimitive
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Cqrs.Entities
  commentId: N:Cqrs.Entities
  isExternal: false
  name: Cqrs.Entities
  nameWithType: Cqrs.Entities
  fullName: Cqrs.Entities
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Cqrs.Entities.Range{System.Int32}
  commentId: T:Cqrs.Entities.Range{System.Int32}
  parent: Cqrs.Entities
  definition: Cqrs.Entities.Range`1
  name: Range<Int32>
  nameWithType: Range<Int32>
  fullName: Cqrs.Entities.Range<System.Int32>
  nameWithType.vb: Range(Of Int32)
  fullName.vb: Cqrs.Entities.Range(Of System.Int32)
  name.vb: Range(Of Int32)
  spec.csharp:
  - uid: Cqrs.Entities.Range`1
    name: Range
    nameWithType: Range
    fullName: Cqrs.Entities.Range
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Entities.Range`1
    name: Range
    nameWithType: Range
    fullName: Cqrs.Entities.Range
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Entities.Range{System.Int32}.From
  commentId: P:Cqrs.Entities.Range{System.Int32}.From
  parent: Cqrs.Entities.Range{System.Int32}
  definition: Cqrs.Entities.Range`1.From
  name: From
  nameWithType: Range<Int32>.From
  fullName: Cqrs.Entities.Range<System.Int32>.From
  nameWithType.vb: Range(Of Int32).From
  fullName.vb: Cqrs.Entities.Range(Of System.Int32).From
- uid: Cqrs.Entities.Range{System.Int32}.To
  commentId: P:Cqrs.Entities.Range{System.Int32}.To
  parent: Cqrs.Entities.Range{System.Int32}
  definition: Cqrs.Entities.Range`1.To
  name: To
  nameWithType: Range<Int32>.To
  fullName: Cqrs.Entities.Range<System.Int32>.To
  nameWithType.vb: Range(Of Int32).To
  fullName.vb: Cqrs.Entities.Range(Of System.Int32).To
- uid: Cqrs.Entities.Range{System.Int32}.IsFromInclusive
  commentId: P:Cqrs.Entities.Range{System.Int32}.IsFromInclusive
  parent: Cqrs.Entities.Range{System.Int32}
  definition: Cqrs.Entities.Range`1.IsFromInclusive
  name: IsFromInclusive
  nameWithType: Range<Int32>.IsFromInclusive
  fullName: Cqrs.Entities.Range<System.Int32>.IsFromInclusive
  nameWithType.vb: Range(Of Int32).IsFromInclusive
  fullName.vb: Cqrs.Entities.Range(Of System.Int32).IsFromInclusive
- uid: Cqrs.Entities.Range{System.Int32}.IsToInclusive
  commentId: P:Cqrs.Entities.Range{System.Int32}.IsToInclusive
  parent: Cqrs.Entities.Range{System.Int32}
  definition: Cqrs.Entities.Range`1.IsToInclusive
  name: IsToInclusive
  nameWithType: Range<Int32>.IsToInclusive
  fullName: Cqrs.Entities.Range<System.Int32>.IsToInclusive
  nameWithType.vb: Range(Of Int32).IsToInclusive
  fullName.vb: Cqrs.Entities.Range(Of System.Int32).IsToInclusive
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Cqrs.Entities.Range`1.From
  commentId: P:Cqrs.Entities.Range`1.From
  isExternal: false
  name: From
  nameWithType: Range<TPrimitive>.From
  fullName: Cqrs.Entities.Range<TPrimitive>.From
  nameWithType.vb: Range(Of TPrimitive).From
  fullName.vb: Cqrs.Entities.Range(Of TPrimitive).From
- uid: Cqrs.Entities.Range`1.To
  commentId: P:Cqrs.Entities.Range`1.To
  isExternal: false
  name: To
  nameWithType: Range<TPrimitive>.To
  fullName: Cqrs.Entities.Range<TPrimitive>.To
  nameWithType.vb: Range(Of TPrimitive).To
  fullName.vb: Cqrs.Entities.Range(Of TPrimitive).To
- uid: Cqrs.Entities.Range`1.IsFromInclusive
  commentId: P:Cqrs.Entities.Range`1.IsFromInclusive
  isExternal: false
  name: IsFromInclusive
  nameWithType: Range<TPrimitive>.IsFromInclusive
  fullName: Cqrs.Entities.Range<TPrimitive>.IsFromInclusive
  nameWithType.vb: Range(Of TPrimitive).IsFromInclusive
  fullName.vb: Cqrs.Entities.Range(Of TPrimitive).IsFromInclusive
- uid: Cqrs.Entities.Range`1.IsToInclusive
  commentId: P:Cqrs.Entities.Range`1.IsToInclusive
  isExternal: false
  name: IsToInclusive
  nameWithType: Range<TPrimitive>.IsToInclusive
  fullName: Cqrs.Entities.Range<TPrimitive>.IsToInclusive
  nameWithType.vb: Range(Of TPrimitive).IsToInclusive
  fullName.vb: Cqrs.Entities.Range(Of TPrimitive).IsToInclusive
- uid: Cqrs.Entities.IntegerRange
  commentId: T:Cqrs.Entities.IntegerRange
  isExternal: false
  name: IntegerRange
  nameWithType: IntegerRange
  fullName: Cqrs.Entities.IntegerRange
- uid: Cqrs.Entities.IntegerRange.#ctor*
  commentId: Overload:Cqrs.Entities.IntegerRange.#ctor
  isExternal: false
  name: IntegerRange
  nameWithType: IntegerRange.IntegerRange
  fullName: Cqrs.Entities.IntegerRange.IntegerRange
