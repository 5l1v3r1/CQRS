<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classCqrs_1_1Exceptions_1_1MultipleCommandHandlersRegisteredException" kind="class" language="C#" prot="public">
    <compoundname>Cqrs::Exceptions::MultipleCommandHandlersRegisteredException</compoundname>
    <basecompoundref refid="classCqrs_1_1Exceptions_1_1MultipleHandlersRegisteredException" prot="public" virt="non-virtual">Cqrs.Exceptions.MultipleHandlersRegisteredException</basecompoundref>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classCqrs_1_1Exceptions_1_1MultipleCommandHandlersRegisteredException_aa8e0bffc3404b091301abaec4c770aa6_1aa8e0bffc3404b091301abaec4c770aa6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Cqrs.Exceptions.MultipleCommandHandlersRegisteredException.MultipleCommandHandlersRegisteredException</definition>
        <argsstring>(Type type)</argsstring>
        <name>MultipleCommandHandlersRegisteredException</name>
        <param>
          <type>Type</type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Instantiates a new instance of <ref refid="classCqrs_1_1Exceptions_1_1MultipleCommandHandlersRegisteredException" kindref="compound">MultipleCommandHandlersRegisteredException</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>The Type of ICommand&lt;TAuthenticationToken&gt; that expected only one ICommandHandler&lt;TAuthenticationToken,TCommand&gt;.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs/Exceptions/MultipleCommandHandlersRegisteredException.cs" line="24" column="1" bodyfile="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs/Exceptions/MultipleCommandHandlersRegisteredException.cs" bodystart="24" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Exceptions_1_1MultipleCommandHandlersRegisteredException_aa3457b26ff5ab06b6b6762578fce5f67_1aa3457b26ff5ab06b6b6762578fce5f67" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Cqrs.Exceptions.MultipleCommandHandlersRegisteredException.MultipleCommandHandlersRegisteredException</definition>
        <argsstring>(string message)</argsstring>
        <name>MultipleCommandHandlersRegisteredException</name>
        <param>
          <type>string</type>
          <declname>message</declname>
        </param>
        <briefdescription>
<para>Instantiates a new instance of <ref refid="classCqrs_1_1Exceptions_1_1MultipleCommandHandlersRegisteredException" kindref="compound">MultipleCommandHandlersRegisteredException</ref> with a specified error message. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The message that describes the error.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs/Exceptions/MultipleCommandHandlersRegisteredException.cs" line="33" column="1" bodyfile="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs/Exceptions/MultipleCommandHandlersRegisteredException.cs" bodystart="33" bodyend="36"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The Exception that is thrown when more than one ICommandHandler&lt;TAuthenticationToken,TCommand&gt; if found for a given ICommand&lt;TAuthenticationToken&gt; that only expects one. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1655">
        <label>MultipleHandlersRegisteredException</label>
        <link refid="classCqrs_1_1Exceptions_1_1MultipleHandlersRegisteredException"/>
        <childnode refid="1656" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1656">
        <label>InvalidOperationException</label>
      </node>
      <node id="1654">
        <label>Cqrs.Exceptions.MultipleCommandHandlersRegisteredException</label>
        <link refid="classCqrs_1_1Exceptions_1_1MultipleCommandHandlersRegisteredException"/>
        <childnode refid="1655" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1658">
        <label>MultipleHandlersRegisteredException</label>
        <link refid="classCqrs_1_1Exceptions_1_1MultipleHandlersRegisteredException"/>
        <childnode refid="1659" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1659">
        <label>InvalidOperationException</label>
      </node>
      <node id="1657">
        <label>Cqrs.Exceptions.MultipleCommandHandlersRegisteredException</label>
        <link refid="classCqrs_1_1Exceptions_1_1MultipleCommandHandlersRegisteredException"/>
        <childnode refid="1658" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs/Exceptions/MultipleCommandHandlersRegisteredException.cs" line="19" column="1" bodyfile="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs/Exceptions/MultipleCommandHandlersRegisteredException.cs" bodystart="18" bodyend="37"/>
    <listofallmembers>
      <member refid="classCqrs_1_1Exceptions_1_1MultipleCommandHandlersRegisteredException_aa8e0bffc3404b091301abaec4c770aa6_1aa8e0bffc3404b091301abaec4c770aa6" prot="public" virt="non-virtual"><scope>Cqrs::Exceptions::MultipleCommandHandlersRegisteredException</scope><name>MultipleCommandHandlersRegisteredException</name></member>
      <member refid="classCqrs_1_1Exceptions_1_1MultipleCommandHandlersRegisteredException_aa3457b26ff5ab06b6b6762578fce5f67_1aa3457b26ff5ab06b6b6762578fce5f67" prot="public" virt="non-virtual"><scope>Cqrs::Exceptions::MultipleCommandHandlersRegisteredException</scope><name>MultipleCommandHandlersRegisteredException</name></member>
      <member refid="classCqrs_1_1Exceptions_1_1MultipleHandlersRegisteredException_a5cfe27c70026da5cc37f5ad2de2bce9c_1a5cfe27c70026da5cc37f5ad2de2bce9c" prot="protected" virt="non-virtual"><scope>Cqrs::Exceptions::MultipleCommandHandlersRegisteredException</scope><name>MultipleHandlersRegisteredException</name></member>
      <member refid="classCqrs_1_1Exceptions_1_1MultipleHandlersRegisteredException_ade772c573d129335b96ef168aec74183_1ade772c573d129335b96ef168aec74183" prot="protected" virt="non-virtual"><scope>Cqrs::Exceptions::MultipleCommandHandlersRegisteredException</scope><name>MultipleHandlersRegisteredException</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
