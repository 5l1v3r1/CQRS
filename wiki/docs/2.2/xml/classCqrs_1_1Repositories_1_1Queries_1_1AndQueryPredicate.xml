<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classCqrs_1_1Repositories_1_1Queries_1_1AndQueryPredicate" kind="class" language="C#" prot="public">
    <compoundname>Cqrs::Repositories::Queries::AndQueryPredicate</compoundname>
    <basecompoundref refid="interfaceCqrs_1_1Repositories_1_1Queries_1_1IAndQueryPredicate" prot="public" virt="non-virtual">Cqrs.Repositories.Queries.IAndQueryPredicate</basecompoundref>
      <sectiondef kind="property">
      <memberdef kind="property" id="classCqrs_1_1Repositories_1_1Queries_1_1AndQueryPredicate_ae083f7e251a564554bdb00b111226f18_1ae083f7e251a564554bdb00b111226f18" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="yes" privatesettable="no" protectedsettable="no">
        <type><ref refid="interfaceCqrs_1_1Repositories_1_1Queries_1_1IQueryPredicate" kindref="compound">IQueryPredicate</ref></type>
        <definition>IQueryPredicate Cqrs.Repositories.Queries.AndQueryPredicate.LeftQueryPredicate</definition>
        <argsstring></argsstring>
        <name>LeftQueryPredicate</name>
        <briefdescription>
<para>The left side <ref refid="interfaceCqrs_1_1Repositories_1_1Queries_1_1IQueryPredicate" kindref="compound">IQueryPredicate</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs/Repositories/Queries/AndQueryPredicate.cs" line="21" column="1" bodyfile="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs/Repositories/Queries/AndQueryPredicate.cs" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="classCqrs_1_1Repositories_1_1Queries_1_1AndQueryPredicate_aa55816927e363ba4e7e313ad30ac2c2e_1aa55816927e363ba4e7e313ad30ac2c2e" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="yes" privatesettable="no" protectedsettable="no">
        <type><ref refid="interfaceCqrs_1_1Repositories_1_1Queries_1_1IQueryPredicate" kindref="compound">IQueryPredicate</ref></type>
        <definition>IQueryPredicate Cqrs.Repositories.Queries.AndQueryPredicate.RightQueryPredicate</definition>
        <argsstring></argsstring>
        <name>RightQueryPredicate</name>
        <briefdescription>
<para>The right side <ref refid="interfaceCqrs_1_1Repositories_1_1Queries_1_1IQueryPredicate" kindref="compound">IQueryPredicate</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs/Repositories/Queries/AndQueryPredicate.cs" line="26" column="1" bodyfile="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs/Repositories/Queries/AndQueryPredicate.cs" bodystart="26" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>An <ref refid="interfaceCqrs_1_1Repositories_1_1Queries_1_1IQueryPredicate" kindref="compound">IQueryPredicate</ref> where both the <ref refid="classCqrs_1_1Repositories_1_1Queries_1_1AndQueryPredicate_ae083f7e251a564554bdb00b111226f18_1ae083f7e251a564554bdb00b111226f18" kindref="member">LeftQueryPredicate</ref> and the <ref refid="classCqrs_1_1Repositories_1_1Queries_1_1AndQueryPredicate_aa55816927e363ba4e7e313ad30ac2c2e_1aa55816927e363ba4e7e313ad30ac2c2e" kindref="member">RightQueryPredicate</ref> must evaluate to true. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2239">
        <label>IQueryPredicate</label>
        <link refid="interfaceCqrs_1_1Repositories_1_1Queries_1_1IQueryPredicate"/>
      </node>
      <node id="2237">
        <label>Cqrs.Repositories.Queries.AndQueryPredicate</label>
        <link refid="classCqrs_1_1Repositories_1_1Queries_1_1AndQueryPredicate"/>
        <childnode refid="2238" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2238">
        <label>IAndQueryPredicate</label>
        <link refid="interfaceCqrs_1_1Repositories_1_1Queries_1_1IAndQueryPredicate"/>
        <childnode refid="2239" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2242">
        <label>IQueryPredicate</label>
        <link refid="interfaceCqrs_1_1Repositories_1_1Queries_1_1IQueryPredicate"/>
      </node>
      <node id="2240">
        <label>Cqrs.Repositories.Queries.AndQueryPredicate</label>
        <link refid="classCqrs_1_1Repositories_1_1Queries_1_1AndQueryPredicate"/>
        <childnode refid="2241" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2241">
        <label>IAndQueryPredicate</label>
        <link refid="interfaceCqrs_1_1Repositories_1_1Queries_1_1IAndQueryPredicate"/>
        <childnode refid="2242" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs/Repositories/Queries/AndQueryPredicate.cs" line="15" column="1" bodyfile="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs/Repositories/Queries/AndQueryPredicate.cs" bodystart="14" bodyend="29"/>
    <listofallmembers>
      <member refid="classCqrs_1_1Repositories_1_1Queries_1_1AndQueryPredicate_ae083f7e251a564554bdb00b111226f18_1ae083f7e251a564554bdb00b111226f18" prot="public" virt="non-virtual"><scope>Cqrs::Repositories::Queries::AndQueryPredicate</scope><name>LeftQueryPredicate</name></member>
      <member refid="classCqrs_1_1Repositories_1_1Queries_1_1AndQueryPredicate_aa55816927e363ba4e7e313ad30ac2c2e_1aa55816927e363ba4e7e313ad30ac2c2e" prot="public" virt="non-virtual"><scope>Cqrs::Repositories::Queries::AndQueryPredicate</scope><name>RightQueryPredicate</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
