<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Cqrs.Ninject.Azure.Wcf</name>
    </assembly>
    <members>
        <member name="T:Cqrs.Ninject.Azure.Wcf.Configuration.SimplifiedNinjectWcf">
            <summary>
            A <see cref="T:WebActivatorEx.PreApplicationStartMethodAttribute"/> that calls <see cref="M:Cqrs.Ninject.Azure.Wcf.Configuration.SimplifiedNinjectWcf.Start"/>
            and <see cref="T:WebActivatorEx.ApplicationShutdownMethodAttribute"/> that calls <see cref="M:Cqrs.Ninject.Azure.Wcf.Configuration.SimplifiedNinjectWcf.Stop"/>
            configuring Simplified SQL by wiring up <see cref="T:Cqrs.Ninject.Configuration.SimplifiedSqlModule`1"/>.
            </summary>
        </member>
        <member name="M:Cqrs.Ninject.Azure.Wcf.Configuration.SimplifiedNinjectWcf.Start">
            <summary>
            Starts the application
            </summary>
        </member>
        <member name="M:Cqrs.Ninject.Azure.Wcf.Configuration.SimplifiedNinjectWcf.Stop">
            <summary>
            Stops the application.
            </summary>
        </member>
        <member name="M:Cqrs.Ninject.Azure.Wcf.Configuration.SimplifiedNinjectWcf.CreateKernel">
            <summary>
            Creates the kernel that will manage your application.
            </summary>
            <returns>The created kernel.</returns>
        </member>
        <member name="T:Cqrs.Ninject.Azure.Wcf.Configuration.WcfStartUp">
            <summary>
            Referenced internally.
            </summary>
        </member>
        <member name="M:Cqrs.Ninject.Azure.Wcf.Configuration.WcfStartUp.#ctor(Cqrs.Configuration.IConfigurationManager)">
            <summary>
            Instantiate a new instance of <see cref="T:Cqrs.Ninject.Azure.Wcf.Configuration.WcfStartUp"/>
            </summary>
        </member>
        <member name="M:Cqrs.Ninject.Azure.Wcf.Configuration.WcfStartUp.AddSupplementryModules">
            <summary>
            Adds the <see cref="T:Cqrs.Ninject.Configuration.SimplifiedSqlModule`1"/> into <see cref="F:Cqrs.Ninject.Configuration.NinjectDependencyResolver.ModulesToLoad"/>.
            </summary>
        </member>
        <member name="T:Cqrs.Ninject.Azure.Wcf.Configuration.WebHostModule">
            <summary>
            The core <see cref="T:Ninject.Modules.INinjectModule"/> for use defining base level requirements.
            </summary>
        </member>
        <member name="M:Cqrs.Ninject.Azure.Wcf.Configuration.WebHostModule.Load">
            <summary>
            Loads the module into the kernel.
            </summary>
        </member>
        <member name="M:Cqrs.Ninject.Azure.Wcf.Configuration.WebHostModule.RegisterAzureConfigurations">
            <summary>
            Register the all Azure configurations
            </summary>
        </member>
        <member name="M:Cqrs.Ninject.Azure.Wcf.Configuration.WebHostModule.RegisterBasicHelpers">
            <summary>
            Registers the basic helpers required.
            </summary>
        </member>
        <member name="M:Cqrs.Ninject.Azure.Wcf.Configuration.WebHostModule.RegisterContextItemCollectionFactory">
            <summary>
            Registers the <see cref="T:Chinchilla.StateManagement.IContextItemCollectionFactory"/> required.
            </summary>
        </member>
        <member name="M:Cqrs.Ninject.Azure.Wcf.Configuration.WebHostModule.RegisterBasicSerives">
            <summary>
            Registers the basic services required.
            </summary>
        </member>
        <member name="M:Cqrs.Ninject.Azure.Wcf.Configuration.WebHostModule.RegisterWebBit">
            <summary>
            Registers some things Ninject likes.
            </summary>
        </member>
        <member name="T:Cqrs.Ninject.Azure.Wcf.CqrsWebHost`2">
            <summary>
            Execute command and event handlers in a WCF Host using Ninject, defaulting to <see cref="T:Cqrs.Ninject.Azure.Wcf.Configuration.WebHostModule"/> as the module to load.
            </summary>
        </member>
        <member name="T:Cqrs.Ninject.Azure.Wcf.CqrsWebHost`3">
            <summary>
            Execute command and event handlers in a WCF Host using Ninject
            </summary>
        </member>
        <member name="M:Cqrs.Ninject.Azure.Wcf.CqrsWebHost`3.ConfigureDefaultDependencyResolver">
            <summary>
            Configure the <see cref="T:Cqrs.Configuration.DependencyResolver"/>.
            </summary>
        </member>
        <member name="M:Cqrs.Ninject.Azure.Wcf.CqrsWebHost`3.GetSupplementaryModules">
            <summary>
            A collection of <see cref="T:Ninject.Modules.INinjectModule"/> that are required to be loaded
            </summary>
        </member>
        <member name="M:Cqrs.Ninject.Azure.Wcf.CqrsWebHost`3.GetCommandBusModules">
            <summary>
            A collection of <see cref="T:Ninject.Modules.INinjectModule"/> that configure the Azure Servicebus as a command bus as both
            <see cref="T:Cqrs.Commands.ICommandPublisher`1"/> and <see cref="T:Cqrs.Commands.ICommandReceiver`1"/>.
            </summary>
        </member>
        <member name="M:Cqrs.Ninject.Azure.Wcf.CqrsWebHost`3.GetEventBusModules">
            <summary>
            A collection of <see cref="T:Ninject.Modules.INinjectModule"/> that configure the Azure Servicebus as a event bus as both
            <see cref="T:Cqrs.Events.IEventPublisher`1"/> and <see cref="T:Cqrs.Events.IEventReceiver`1"/>
            If the app setting Cqrs.Host.EnableEventReceiving is "false" then no modules will be returned.
            </summary>
        </member>
        <member name="M:Cqrs.Ninject.Azure.Wcf.CqrsWebHost`3.GetEventStoreModules">
            <summary>
            A collection of <see cref="T:Ninject.Modules.INinjectModule"/> that configure SQL server as the <see cref="T:Cqrs.Events.IEventStore`1"/>
            </summary>
        </member>
    </members>
</doc>
