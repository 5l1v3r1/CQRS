### YamlMime:ManagedReference
items:
- uid: Cqrs.Akka.Domain
  commentId: N:Cqrs.Akka.Domain
  id: Cqrs.Akka.Domain
  children:
  - Cqrs.Akka.Domain.AkkaAggregateRepository`1
  - Cqrs.Akka.Domain.AkkaAggregateRoot`1
  - Cqrs.Akka.Domain.AkkaAggregateRootProxy`2
  - Cqrs.Akka.Domain.AkkaSaga`1
  - Cqrs.Akka.Domain.AkkaSagaProxy`2
  - Cqrs.Akka.Domain.AkkaSagaRepository`1
  - Cqrs.Akka.Domain.IAkkaAggregateRepository`1
  - Cqrs.Akka.Domain.IAkkaAggregateResolver
  - Cqrs.Akka.Domain.IAkkaAggregateRootProxy`1
  - Cqrs.Akka.Domain.IAkkaSagaProxy`1
  - Cqrs.Akka.Domain.IAkkaSagaRepository`1
  - Cqrs.Akka.Domain.IAkkaSagaResolver
  langs:
  - csharp
  - vb
  name: Cqrs.Akka.Domain
  nameWithType: Cqrs.Akka.Domain
  fullName: Cqrs.Akka.Domain
  type: Namespace
  assemblies:
  - Cqrs.Akka
references:
- uid: Cqrs.Akka.Domain.AkkaSagaProxy`2
  commentId: T:Cqrs.Akka.Domain.AkkaSagaProxy`2
  isExternal: false
  name: AkkaSagaProxy<TAuthenticationToken, TSaga>
  nameWithType: AkkaSagaProxy<TAuthenticationToken, TSaga>
  fullName: Cqrs.Akka.Domain.AkkaSagaProxy<TAuthenticationToken, TSaga>
  nameWithType.vb: AkkaSagaProxy(Of TAuthenticationToken, TSaga)
  fullName.vb: Cqrs.Akka.Domain.AkkaSagaProxy(Of TAuthenticationToken, TSaga)
  name.vb: AkkaSagaProxy(Of TAuthenticationToken, TSaga)
  spec.csharp:
  - uid: Cqrs.Akka.Domain.AkkaSagaProxy`2
    name: AkkaSagaProxy
    nameWithType: AkkaSagaProxy
    fullName: Cqrs.Akka.Domain.AkkaSagaProxy
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TSaga
    nameWithType: TSaga
    fullName: TSaga
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Akka.Domain.AkkaSagaProxy`2
    name: AkkaSagaProxy
    nameWithType: AkkaSagaProxy
    fullName: Cqrs.Akka.Domain.AkkaSagaProxy
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TSaga
    nameWithType: TSaga
    fullName: TSaga
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Akka.Domain.AkkaSagaRepository`1
  commentId: T:Cqrs.Akka.Domain.AkkaSagaRepository`1
  isExternal: false
  name: AkkaSagaRepository<TAuthenticationToken>
  nameWithType: AkkaSagaRepository<TAuthenticationToken>
  fullName: Cqrs.Akka.Domain.AkkaSagaRepository<TAuthenticationToken>
  nameWithType.vb: AkkaSagaRepository(Of TAuthenticationToken)
  fullName.vb: Cqrs.Akka.Domain.AkkaSagaRepository(Of TAuthenticationToken)
  name.vb: AkkaSagaRepository(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Akka.Domain.AkkaSagaRepository`1
    name: AkkaSagaRepository
    nameWithType: AkkaSagaRepository
    fullName: Cqrs.Akka.Domain.AkkaSagaRepository
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Akka.Domain.AkkaSagaRepository`1
    name: AkkaSagaRepository
    nameWithType: AkkaSagaRepository
    fullName: Cqrs.Akka.Domain.AkkaSagaRepository
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Akka.Domain.AkkaSaga`1
  commentId: T:Cqrs.Akka.Domain.AkkaSaga`1
  isExternal: false
  name: AkkaSaga<TAuthenticationToken>
  nameWithType: AkkaSaga<TAuthenticationToken>
  fullName: Cqrs.Akka.Domain.AkkaSaga<TAuthenticationToken>
  nameWithType.vb: AkkaSaga(Of TAuthenticationToken)
  fullName.vb: Cqrs.Akka.Domain.AkkaSaga(Of TAuthenticationToken)
  name.vb: AkkaSaga(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Akka.Domain.AkkaSaga`1
    name: AkkaSaga
    nameWithType: AkkaSaga
    fullName: Cqrs.Akka.Domain.AkkaSaga
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Akka.Domain.AkkaSaga`1
    name: AkkaSaga
    nameWithType: AkkaSaga
    fullName: Cqrs.Akka.Domain.AkkaSaga
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Akka.Domain.AkkaAggregateRoot`1
  commentId: T:Cqrs.Akka.Domain.AkkaAggregateRoot`1
  isExternal: false
  name: AkkaAggregateRoot<TAuthenticationToken>
  nameWithType: AkkaAggregateRoot<TAuthenticationToken>
  fullName: Cqrs.Akka.Domain.AkkaAggregateRoot<TAuthenticationToken>
  nameWithType.vb: AkkaAggregateRoot(Of TAuthenticationToken)
  fullName.vb: Cqrs.Akka.Domain.AkkaAggregateRoot(Of TAuthenticationToken)
  name.vb: AkkaAggregateRoot(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Akka.Domain.AkkaAggregateRoot`1
    name: AkkaAggregateRoot
    nameWithType: AkkaAggregateRoot
    fullName: Cqrs.Akka.Domain.AkkaAggregateRoot
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Akka.Domain.AkkaAggregateRoot`1
    name: AkkaAggregateRoot
    nameWithType: AkkaAggregateRoot
    fullName: Cqrs.Akka.Domain.AkkaAggregateRoot
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Akka.Domain.AkkaAggregateRootProxy`2
  commentId: T:Cqrs.Akka.Domain.AkkaAggregateRootProxy`2
  isExternal: false
  name: AkkaAggregateRootProxy<TAuthenticationToken, TAggregateRoot>
  nameWithType: AkkaAggregateRootProxy<TAuthenticationToken, TAggregateRoot>
  fullName: Cqrs.Akka.Domain.AkkaAggregateRootProxy<TAuthenticationToken, TAggregateRoot>
  nameWithType.vb: AkkaAggregateRootProxy(Of TAuthenticationToken, TAggregateRoot)
  fullName.vb: Cqrs.Akka.Domain.AkkaAggregateRootProxy(Of TAuthenticationToken, TAggregateRoot)
  name.vb: AkkaAggregateRootProxy(Of TAuthenticationToken, TAggregateRoot)
  spec.csharp:
  - uid: Cqrs.Akka.Domain.AkkaAggregateRootProxy`2
    name: AkkaAggregateRootProxy
    nameWithType: AkkaAggregateRootProxy
    fullName: Cqrs.Akka.Domain.AkkaAggregateRootProxy
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TAggregateRoot
    nameWithType: TAggregateRoot
    fullName: TAggregateRoot
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Akka.Domain.AkkaAggregateRootProxy`2
    name: AkkaAggregateRootProxy
    nameWithType: AkkaAggregateRootProxy
    fullName: Cqrs.Akka.Domain.AkkaAggregateRootProxy
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TAggregateRoot
    nameWithType: TAggregateRoot
    fullName: TAggregateRoot
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Akka.Domain.AkkaAggregateRepository`1
  commentId: T:Cqrs.Akka.Domain.AkkaAggregateRepository`1
  isExternal: false
  name: AkkaAggregateRepository<TAuthenticationToken>
  nameWithType: AkkaAggregateRepository<TAuthenticationToken>
  fullName: Cqrs.Akka.Domain.AkkaAggregateRepository<TAuthenticationToken>
  nameWithType.vb: AkkaAggregateRepository(Of TAuthenticationToken)
  fullName.vb: Cqrs.Akka.Domain.AkkaAggregateRepository(Of TAuthenticationToken)
  name.vb: AkkaAggregateRepository(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Akka.Domain.AkkaAggregateRepository`1
    name: AkkaAggregateRepository
    nameWithType: AkkaAggregateRepository
    fullName: Cqrs.Akka.Domain.AkkaAggregateRepository
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Akka.Domain.AkkaAggregateRepository`1
    name: AkkaAggregateRepository
    nameWithType: AkkaAggregateRepository
    fullName: Cqrs.Akka.Domain.AkkaAggregateRepository
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Akka.Domain.IAkkaSagaProxy`1
  commentId: T:Cqrs.Akka.Domain.IAkkaSagaProxy`1
  isExternal: false
  name: IAkkaSagaProxy<TSaga>
  nameWithType: IAkkaSagaProxy<TSaga>
  fullName: Cqrs.Akka.Domain.IAkkaSagaProxy<TSaga>
  nameWithType.vb: IAkkaSagaProxy(Of TSaga)
  fullName.vb: Cqrs.Akka.Domain.IAkkaSagaProxy(Of TSaga)
  name.vb: IAkkaSagaProxy(Of TSaga)
  spec.csharp:
  - uid: Cqrs.Akka.Domain.IAkkaSagaProxy`1
    name: IAkkaSagaProxy
    nameWithType: IAkkaSagaProxy
    fullName: Cqrs.Akka.Domain.IAkkaSagaProxy
  - name: <
    nameWithType: <
    fullName: <
  - name: TSaga
    nameWithType: TSaga
    fullName: TSaga
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Akka.Domain.IAkkaSagaProxy`1
    name: IAkkaSagaProxy
    nameWithType: IAkkaSagaProxy
    fullName: Cqrs.Akka.Domain.IAkkaSagaProxy
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSaga
    nameWithType: TSaga
    fullName: TSaga
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Akka.Domain.IAkkaSagaResolver
  commentId: T:Cqrs.Akka.Domain.IAkkaSagaResolver
  parent: Cqrs.Akka.Domain
  isExternal: false
  name: IAkkaSagaResolver
  nameWithType: IAkkaSagaResolver
  fullName: Cqrs.Akka.Domain.IAkkaSagaResolver
- uid: Cqrs.Akka.Domain.IAkkaSagaRepository`1
  commentId: T:Cqrs.Akka.Domain.IAkkaSagaRepository`1
  isExternal: false
  name: IAkkaSagaRepository<TAuthenticationToken>
  nameWithType: IAkkaSagaRepository<TAuthenticationToken>
  fullName: Cqrs.Akka.Domain.IAkkaSagaRepository<TAuthenticationToken>
  nameWithType.vb: IAkkaSagaRepository(Of TAuthenticationToken)
  fullName.vb: Cqrs.Akka.Domain.IAkkaSagaRepository(Of TAuthenticationToken)
  name.vb: IAkkaSagaRepository(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Akka.Domain.IAkkaSagaRepository`1
    name: IAkkaSagaRepository
    nameWithType: IAkkaSagaRepository
    fullName: Cqrs.Akka.Domain.IAkkaSagaRepository
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Akka.Domain.IAkkaSagaRepository`1
    name: IAkkaSagaRepository
    nameWithType: IAkkaSagaRepository
    fullName: Cqrs.Akka.Domain.IAkkaSagaRepository
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Akka.Domain.IAkkaAggregateRootProxy`1
  commentId: T:Cqrs.Akka.Domain.IAkkaAggregateRootProxy`1
  isExternal: false
  name: IAkkaAggregateRootProxy<TAggregate>
  nameWithType: IAkkaAggregateRootProxy<TAggregate>
  fullName: Cqrs.Akka.Domain.IAkkaAggregateRootProxy<TAggregate>
  nameWithType.vb: IAkkaAggregateRootProxy(Of TAggregate)
  fullName.vb: Cqrs.Akka.Domain.IAkkaAggregateRootProxy(Of TAggregate)
  name.vb: IAkkaAggregateRootProxy(Of TAggregate)
  spec.csharp:
  - uid: Cqrs.Akka.Domain.IAkkaAggregateRootProxy`1
    name: IAkkaAggregateRootProxy
    nameWithType: IAkkaAggregateRootProxy
    fullName: Cqrs.Akka.Domain.IAkkaAggregateRootProxy
  - name: <
    nameWithType: <
    fullName: <
  - name: TAggregate
    nameWithType: TAggregate
    fullName: TAggregate
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Akka.Domain.IAkkaAggregateRootProxy`1
    name: IAkkaAggregateRootProxy
    nameWithType: IAkkaAggregateRootProxy
    fullName: Cqrs.Akka.Domain.IAkkaAggregateRootProxy
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAggregate
    nameWithType: TAggregate
    fullName: TAggregate
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Akka.Domain.IAkkaAggregateRepository`1
  commentId: T:Cqrs.Akka.Domain.IAkkaAggregateRepository`1
  isExternal: false
  name: IAkkaAggregateRepository<TAuthenticationToken>
  nameWithType: IAkkaAggregateRepository<TAuthenticationToken>
  fullName: Cqrs.Akka.Domain.IAkkaAggregateRepository<TAuthenticationToken>
  nameWithType.vb: IAkkaAggregateRepository(Of TAuthenticationToken)
  fullName.vb: Cqrs.Akka.Domain.IAkkaAggregateRepository(Of TAuthenticationToken)
  name.vb: IAkkaAggregateRepository(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Akka.Domain.IAkkaAggregateRepository`1
    name: IAkkaAggregateRepository
    nameWithType: IAkkaAggregateRepository
    fullName: Cqrs.Akka.Domain.IAkkaAggregateRepository
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Akka.Domain.IAkkaAggregateRepository`1
    name: IAkkaAggregateRepository
    nameWithType: IAkkaAggregateRepository
    fullName: Cqrs.Akka.Domain.IAkkaAggregateRepository
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Akka.Domain.IAkkaAggregateResolver
  commentId: T:Cqrs.Akka.Domain.IAkkaAggregateResolver
  parent: Cqrs.Akka.Domain
  isExternal: false
  name: IAkkaAggregateResolver
  nameWithType: IAkkaAggregateResolver
  fullName: Cqrs.Akka.Domain.IAkkaAggregateResolver
- uid: Cqrs.Akka.Domain
  commentId: N:Cqrs.Akka.Domain
  isExternal: false
  name: Cqrs.Akka.Domain
  nameWithType: Cqrs.Akka.Domain
  fullName: Cqrs.Akka.Domain
