### YamlMime:ManagedReference
items:
- uid: Cqrs.Messages.IMessageHandler`1
  commentId: T:Cqrs.Messages.IMessageHandler`1
  id: IMessageHandler`1
  parent: Cqrs.Messages
  children:
  - Cqrs.Messages.IMessageHandler`1.Handle(`0)
  langs:
  - csharp
  - vb
  name: IMessageHandler<TMessage>
  nameWithType: IMessageHandler<TMessage>
  fullName: Cqrs.Messages.IMessageHandler<TMessage>
  type: Interface
  source:
    remote:
      path: Framework/Cqrs/Messages/IMessageHandler.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: IMessageHandler
    path: Framework/Cqrs/Messages/IMessageHandler.cs
    startLine: 16
  assemblies:
  - Cqrs
  namespace: Cqrs.Messages
  summary: "\nResponds to or &quot;Handles&quot; a <xref href=\"Cqrs.Messages.IMessage\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: 'public interface IMessageHandler<in TMessage> : IHandler where TMessage : IMessage'
    typeParameters:
    - id: TMessage
      description: The <xref href="System.Type" data-throw-if-not-resolved="false"></xref> of <xref href="Cqrs.Messages.IMessage" data-throw-if-not-resolved="false"></xref>.
    content.vb: >-
      Public Interface IMessageHandler(Of In TMessage As IMessage)
          Inherits IHandler
  nameWithType.vb: IMessageHandler(Of TMessage)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: Cqrs.Messages.IMessageHandler(Of TMessage)
  name.vb: IMessageHandler(Of TMessage)
- uid: Cqrs.Messages.IMessageHandler`1.Handle(`0)
  commentId: M:Cqrs.Messages.IMessageHandler`1.Handle(`0)
  id: Handle(`0)
  parent: Cqrs.Messages.IMessageHandler`1
  langs:
  - csharp
  - vb
  name: Handle(TMessage)
  nameWithType: IMessageHandler<TMessage>.Handle(TMessage)
  fullName: Cqrs.Messages.IMessageHandler<TMessage>.Handle(TMessage)
  type: Method
  source:
    remote:
      path: Framework/Cqrs/Messages/IMessageHandler.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Handle
    path: Framework/Cqrs/Messages/IMessageHandler.cs
    startLine: 24
  assemblies:
  - Cqrs
  namespace: Cqrs.Messages
  summary: "\nResponds to the provided <span class=\"paramref\">message</span>.\n"
  example: []
  syntax:
    content: void Handle(TMessage message)
    parameters:
    - id: message
      type: '{TMessage}'
      description: The <span class="typeparamref">TMessage</span> to respond to or &quot;handle&quot;
    content.vb: Sub Handle(message As TMessage)
  overload: Cqrs.Messages.IMessageHandler`1.Handle*
  nameWithType.vb: IMessageHandler(Of TMessage).Handle(TMessage)
  fullName.vb: Cqrs.Messages.IMessageHandler(Of TMessage).Handle(TMessage)
references:
- uid: Cqrs.Messages.IMessage
  commentId: T:Cqrs.Messages.IMessage
  parent: Cqrs.Messages
  isExternal: false
  name: IMessage
  nameWithType: IMessage
  fullName: Cqrs.Messages.IMessage
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Cqrs.Messages
  commentId: N:Cqrs.Messages
  isExternal: false
  name: Cqrs.Messages
  nameWithType: Cqrs.Messages
  fullName: Cqrs.Messages
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Cqrs.Messages.IMessageHandler`1.Handle*
  commentId: Overload:Cqrs.Messages.IMessageHandler`1.Handle
  isExternal: false
  name: Handle
  nameWithType: IMessageHandler<TMessage>.Handle
  fullName: Cqrs.Messages.IMessageHandler<TMessage>.Handle
  nameWithType.vb: IMessageHandler(Of TMessage).Handle
  fullName.vb: Cqrs.Messages.IMessageHandler(Of TMessage).Handle
- uid: '{TMessage}'
  commentId: '!:TMessage'
  definition: TMessage
  name: TMessage
  nameWithType: TMessage
  fullName: TMessage
- uid: TMessage
  isExternal: false
  name: TMessage
  nameWithType: TMessage
  fullName: TMessage
