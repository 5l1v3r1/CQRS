### YamlMime:ManagedReference
items:
- uid: Cqrs.Events.IEventReceiver`1
  commentId: T:Cqrs.Events.IEventReceiver`1
  id: IEventReceiver`1
  parent: Cqrs.Events
  children:
  - Cqrs.Events.IEventReceiver`1.ReceiveEvent(Cqrs.Events.IEvent{`0})
  langs:
  - csharp
  - vb
  name: IEventReceiver<TAuthenticationToken>
  nameWithType: IEventReceiver<TAuthenticationToken>
  fullName: Cqrs.Events.IEventReceiver<TAuthenticationToken>
  type: Interface
  source:
    remote:
      path: Framework/Cqrs/Events/IEventReceiver.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: IEventReceiver
    path: Framework/Cqrs/Events/IEventReceiver.cs
    startLine: 24
  assemblies:
  - Cqrs
  namespace: Cqrs.Events
  summary: "\nReceives instances of a <xref href=\"Cqrs.Events.IEvent%601\" data-throw-if-not-resolved=\"false\"></xref> from the event bus.\n"
  example: []
  syntax:
    content: 'public interface IEventReceiver<TAuthenticationToken> : IEventReceiver'
    typeParameters:
    - id: TAuthenticationToken
    content.vb: >-
      Public Interface IEventReceiver(Of TAuthenticationToken)

          Inherits IEventReceiver
  inheritedMembers:
  - Cqrs.Events.IEventReceiver.Start
  nameWithType.vb: IEventReceiver(Of TAuthenticationToken)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: Cqrs.Events.IEventReceiver(Of TAuthenticationToken)
  name.vb: IEventReceiver(Of TAuthenticationToken)
- uid: Cqrs.Events.IEventReceiver`1.ReceiveEvent(Cqrs.Events.IEvent{`0})
  commentId: M:Cqrs.Events.IEventReceiver`1.ReceiveEvent(Cqrs.Events.IEvent{`0})
  id: ReceiveEvent(Cqrs.Events.IEvent{`0})
  parent: Cqrs.Events.IEventReceiver`1
  langs:
  - csharp
  - vb
  name: ReceiveEvent(IEvent<TAuthenticationToken>)
  nameWithType: IEventReceiver<TAuthenticationToken>.ReceiveEvent(IEvent<TAuthenticationToken>)
  fullName: Cqrs.Events.IEventReceiver<TAuthenticationToken>.ReceiveEvent(Cqrs.Events.IEvent<TAuthenticationToken>)
  type: Method
  source:
    remote:
      path: Framework/Cqrs/Events/IEventReceiver.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: ReceiveEvent
    path: Framework/Cqrs/Events/IEventReceiver.cs
    startLine: 30
  assemblies:
  - Cqrs
  namespace: Cqrs.Events
  summary: "\nReceives a <xref href=\"Cqrs.Events.IEvent%601\" data-throw-if-not-resolved=\"false\"></xref> from the event bus.\n"
  example: []
  syntax:
    content: bool ? ReceiveEvent(IEvent<TAuthenticationToken> event)
    parameters:
    - id: event
      type: Cqrs.Events.IEvent{{TAuthenticationToken}}
    return:
      type: System.Nullable{System.Boolean}
    content.vb: Function ReceiveEvent(event As IEvent(Of TAuthenticationToken)) As Boolean?
  overload: Cqrs.Events.IEventReceiver`1.ReceiveEvent*
  nameWithType.vb: IEventReceiver(Of TAuthenticationToken).ReceiveEvent(IEvent(Of TAuthenticationToken))
  fullName.vb: Cqrs.Events.IEventReceiver(Of TAuthenticationToken).ReceiveEvent(Cqrs.Events.IEvent(Of TAuthenticationToken))
  name.vb: ReceiveEvent(IEvent(Of TAuthenticationToken))
references:
- uid: Cqrs.Events.IEvent`1
  commentId: T:Cqrs.Events.IEvent`1
  isExternal: false
  name: IEvent<TAuthenticationToken>
  nameWithType: IEvent<TAuthenticationToken>
  fullName: Cqrs.Events.IEvent<TAuthenticationToken>
  nameWithType.vb: IEvent(Of TAuthenticationToken)
  fullName.vb: Cqrs.Events.IEvent(Of TAuthenticationToken)
  name.vb: IEvent(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Events
  commentId: N:Cqrs.Events
  isExternal: false
  name: Cqrs.Events
  nameWithType: Cqrs.Events
  fullName: Cqrs.Events
- uid: Cqrs.Events.IEventReceiver.Start
  commentId: M:Cqrs.Events.IEventReceiver.Start
  parent: Cqrs.Events.IEventReceiver
  isExternal: false
  name: Start()
  nameWithType: IEventReceiver.Start()
  fullName: Cqrs.Events.IEventReceiver.Start()
  spec.csharp:
  - uid: Cqrs.Events.IEventReceiver.Start
    name: Start
    nameWithType: IEventReceiver.Start
    fullName: Cqrs.Events.IEventReceiver.Start
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Events.IEventReceiver.Start
    name: Start
    nameWithType: IEventReceiver.Start
    fullName: Cqrs.Events.IEventReceiver.Start
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Events.IEventReceiver
  commentId: T:Cqrs.Events.IEventReceiver
  parent: Cqrs.Events
  isExternal: false
  name: IEventReceiver
  nameWithType: IEventReceiver
  fullName: Cqrs.Events.IEventReceiver
- uid: Cqrs.Events.IEventReceiver`1.ReceiveEvent*
  commentId: Overload:Cqrs.Events.IEventReceiver`1.ReceiveEvent
  isExternal: false
  name: ReceiveEvent
  nameWithType: IEventReceiver<TAuthenticationToken>.ReceiveEvent
  fullName: Cqrs.Events.IEventReceiver<TAuthenticationToken>.ReceiveEvent
  nameWithType.vb: IEventReceiver(Of TAuthenticationToken).ReceiveEvent
  fullName.vb: Cqrs.Events.IEventReceiver(Of TAuthenticationToken).ReceiveEvent
- uid: Cqrs.Events.IEvent{{TAuthenticationToken}}
  commentId: T:Cqrs.Events.IEvent{`0}
  parent: Cqrs.Events
  definition: Cqrs.Events.IEvent`1
  name: IEvent<TAuthenticationToken>
  nameWithType: IEvent<TAuthenticationToken>
  fullName: Cqrs.Events.IEvent<TAuthenticationToken>
  nameWithType.vb: IEvent(Of TAuthenticationToken)
  fullName.vb: Cqrs.Events.IEvent(Of TAuthenticationToken)
  name.vb: IEvent(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullName.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
