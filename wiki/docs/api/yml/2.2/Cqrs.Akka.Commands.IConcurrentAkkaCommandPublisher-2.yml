### YamlMime:ManagedReference
items:
- uid: Cqrs.Akka.Commands.IConcurrentAkkaCommandPublisher`2
  commentId: T:Cqrs.Akka.Commands.IConcurrentAkkaCommandPublisher`2
  id: IConcurrentAkkaCommandPublisher`2
  parent: Cqrs.Akka.Commands
  children: []
  langs:
  - csharp
  - vb
  name: IConcurrentAkkaCommandPublisher<TAuthenticationToken, TTarget>
  nameWithType: IConcurrentAkkaCommandPublisher<TAuthenticationToken, TTarget>
  fullName: Cqrs.Akka.Commands.IConcurrentAkkaCommandPublisher<TAuthenticationToken, TTarget>
  type: Interface
  source:
    remote:
      path: Framework/Akka.Net/Cqrs.Akka/Commands/IConcurrentAkkaCommandPublisher.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: IConcurrentAkkaCommandPublisher
    path: Framework/Akka.Net/Cqrs.Akka/Commands/IConcurrentAkkaCommandPublisher.cs
    startLine: 18
  assemblies:
  - Cqrs.Akka
  namespace: Cqrs.Akka.Commands
  summary: "\nA <xref href=\"Cqrs.Akka.Commands.IAkkaCommandPublisher%601\" data-throw-if-not-resolved=\"false\"></xref> that ensure concurrency regardless of what it passes the command onto as it is a <xref href=\"Akka.Actor.ReceiveActor\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: 'public interface IConcurrentAkkaCommandPublisher<TAuthenticationToken, TTarget> : IConcurrentAkkaCommandPublisher<TAuthenticationToken>, IAkkaCommandPublisher<TAuthenticationToken>, IPublishAndWaitCommandPublisher<TAuthenticationToken>, ICommandPublisher<TAuthenticationToken>'
    typeParameters:
    - id: TAuthenticationToken
      description: The <xref href="System.Type" data-throw-if-not-resolved="false"></xref> of the authentication token.
    - id: TTarget
      description: The <xref href="System.Type" data-throw-if-not-resolved="false"></xref> of the object that is targeted that needs concurrency.
    content.vb: >-
      Public Interface IConcurrentAkkaCommandPublisher(Of TAuthenticationToken, TTarget)

          Inherits IConcurrentAkkaCommandPublisher(Of TAuthenticationToken)
  inheritedMembers:
  - Cqrs.Commands.IPublishAndWaitCommandPublisher{{TAuthenticationToken}}.PublishAndWait``2({TCommand},Cqrs.Events.IEventReceiver{{TAuthenticationToken}})
  - Cqrs.Commands.IPublishAndWaitCommandPublisher{{TAuthenticationToken}}.PublishAndWait``2({TCommand},System.Int32,Cqrs.Events.IEventReceiver{{TAuthenticationToken}})
  - Cqrs.Commands.IPublishAndWaitCommandPublisher{{TAuthenticationToken}}.PublishAndWait``2({TCommand},System.TimeSpan,Cqrs.Events.IEventReceiver{{TAuthenticationToken}})
  - Cqrs.Commands.IPublishAndWaitCommandPublisher{{TAuthenticationToken}}.PublishAndWait``2({TCommand},System.Func{System.Collections.Generic.IEnumerable{Cqrs.Events.IEvent{{TAuthenticationToken}}},{TEvent}},Cqrs.Events.IEventReceiver{{TAuthenticationToken}})
  - Cqrs.Commands.IPublishAndWaitCommandPublisher{{TAuthenticationToken}}.PublishAndWait``2({TCommand},System.Func{System.Collections.Generic.IEnumerable{Cqrs.Events.IEvent{{TAuthenticationToken}}},{TEvent}},System.Int32,Cqrs.Events.IEventReceiver{{TAuthenticationToken}})
  - Cqrs.Commands.IPublishAndWaitCommandPublisher{{TAuthenticationToken}}.PublishAndWait``2({TCommand},System.Func{System.Collections.Generic.IEnumerable{Cqrs.Events.IEvent{{TAuthenticationToken}}},{TEvent}},System.TimeSpan,Cqrs.Events.IEventReceiver{{TAuthenticationToken}})
  - Cqrs.Commands.ICommandPublisher{{TAuthenticationToken}}.Publish``1({TCommand})
  - Cqrs.Commands.ICommandPublisher{{TAuthenticationToken}}.Publish``1(System.Collections.Generic.IEnumerable{{TCommand}})
  nameWithType.vb: IConcurrentAkkaCommandPublisher(Of TAuthenticationToken, TTarget)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: Cqrs.Akka.Commands.IConcurrentAkkaCommandPublisher(Of TAuthenticationToken, TTarget)
  name.vb: IConcurrentAkkaCommandPublisher(Of TAuthenticationToken, TTarget)
references:
- uid: Cqrs.Akka.Commands.IAkkaCommandPublisher`1
  commentId: T:Cqrs.Akka.Commands.IAkkaCommandPublisher`1
  isExternal: false
  name: IAkkaCommandPublisher<TAuthenticationToken>
  nameWithType: IAkkaCommandPublisher<TAuthenticationToken>
  fullName: Cqrs.Akka.Commands.IAkkaCommandPublisher<TAuthenticationToken>
  nameWithType.vb: IAkkaCommandPublisher(Of TAuthenticationToken)
  fullName.vb: Cqrs.Akka.Commands.IAkkaCommandPublisher(Of TAuthenticationToken)
  name.vb: IAkkaCommandPublisher(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Akka.Commands.IAkkaCommandPublisher`1
    name: IAkkaCommandPublisher
    nameWithType: IAkkaCommandPublisher
    fullName: Cqrs.Akka.Commands.IAkkaCommandPublisher
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Akka.Commands.IAkkaCommandPublisher`1
    name: IAkkaCommandPublisher
    nameWithType: IAkkaCommandPublisher
    fullName: Cqrs.Akka.Commands.IAkkaCommandPublisher
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Akka.Actor.ReceiveActor
  commentId: T:Akka.Actor.ReceiveActor
  parent: Akka.Actor
  isExternal: true
  name: ReceiveActor
  nameWithType: ReceiveActor
  fullName: Akka.Actor.ReceiveActor
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Cqrs.Akka.Commands
  commentId: N:Cqrs.Akka.Commands
  isExternal: false
  name: Cqrs.Akka.Commands
  nameWithType: Cqrs.Akka.Commands
  fullName: Cqrs.Akka.Commands
- uid: Cqrs.Commands.IPublishAndWaitCommandPublisher{{TAuthenticationToken}}.PublishAndWait``2({TCommand},Cqrs.Events.IEventReceiver{{TAuthenticationToken}})
  commentId: M:Cqrs.Commands.IPublishAndWaitCommandPublisher{`0}.PublishAndWait``2(``0,Cqrs.Events.IEventReceiver{`0})
  parent: Cqrs.Commands.IPublishAndWaitCommandPublisher{{TAuthenticationToken}}
  definition: Cqrs.Commands.IPublishAndWaitCommandPublisher`1.PublishAndWait``2(``0,Cqrs.Events.IEventReceiver{`0})
  name: PublishAndWait<TCommand, TEvent>(TCommand, IEventReceiver<TAuthenticationToken>)
  nameWithType: IPublishAndWaitCommandPublisher<TAuthenticationToken>.PublishAndWait<TCommand, TEvent>(TCommand, IEventReceiver<TAuthenticationToken>)
  fullName: Cqrs.Commands.IPublishAndWaitCommandPublisher<TAuthenticationToken>.PublishAndWait<TCommand, TEvent>(TCommand, Cqrs.Events.IEventReceiver<TAuthenticationToken>)
  nameWithType.vb: IPublishAndWaitCommandPublisher(Of TAuthenticationToken).PublishAndWait(Of TCommand, TEvent)(TCommand, IEventReceiver(Of TAuthenticationToken))
  fullName.vb: Cqrs.Commands.IPublishAndWaitCommandPublisher(Of TAuthenticationToken).PublishAndWait(Of TCommand, TEvent)(TCommand, Cqrs.Events.IEventReceiver(Of TAuthenticationToken))
  name.vb: PublishAndWait(Of TCommand, TEvent)(TCommand, IEventReceiver(Of TAuthenticationToken))
  spec.csharp:
  - uid: Cqrs.Commands.IPublishAndWaitCommandPublisher`1.PublishAndWait``2(``0,Cqrs.Events.IEventReceiver{`0})
    name: PublishAndWait<TCommand, TEvent>
    nameWithType: IPublishAndWaitCommandPublisher<TAuthenticationToken>.PublishAndWait<TCommand, TEvent>
    fullName: Cqrs.Commands.IPublishAndWaitCommandPublisher<TAuthenticationToken>.PublishAndWait<TCommand, TEvent>
  - name: (
    nameWithType: (
    fullName: (
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Cqrs.Events.IEventReceiver`1
    name: IEventReceiver
    nameWithType: IEventReceiver
    fullName: Cqrs.Events.IEventReceiver
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Commands.IPublishAndWaitCommandPublisher`1.PublishAndWait``2(``0,Cqrs.Events.IEventReceiver{`0})
    name: PublishAndWait(Of TCommand, TEvent)
    nameWithType: IPublishAndWaitCommandPublisher(Of TAuthenticationToken).PublishAndWait(Of TCommand, TEvent)
    fullName: Cqrs.Commands.IPublishAndWaitCommandPublisher(Of TAuthenticationToken).PublishAndWait(Of TCommand, TEvent)
  - name: (
    nameWithType: (
    fullName: (
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Cqrs.Events.IEventReceiver`1
    name: IEventReceiver
    nameWithType: IEventReceiver
    fullName: Cqrs.Events.IEventReceiver
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Commands.IPublishAndWaitCommandPublisher{{TAuthenticationToken}}.PublishAndWait``2({TCommand},System.Int32,Cqrs.Events.IEventReceiver{{TAuthenticationToken}})
  commentId: M:Cqrs.Commands.IPublishAndWaitCommandPublisher{`0}.PublishAndWait``2(``0,System.Int32,Cqrs.Events.IEventReceiver{`0})
  parent: Cqrs.Commands.IPublishAndWaitCommandPublisher{{TAuthenticationToken}}
  definition: Cqrs.Commands.IPublishAndWaitCommandPublisher`1.PublishAndWait``2(``0,System.Int32,Cqrs.Events.IEventReceiver{`0})
  name: PublishAndWait<TCommand, TEvent>(TCommand, Int32, IEventReceiver<TAuthenticationToken>)
  nameWithType: IPublishAndWaitCommandPublisher<TAuthenticationToken>.PublishAndWait<TCommand, TEvent>(TCommand, Int32, IEventReceiver<TAuthenticationToken>)
  fullName: Cqrs.Commands.IPublishAndWaitCommandPublisher<TAuthenticationToken>.PublishAndWait<TCommand, TEvent>(TCommand, System.Int32, Cqrs.Events.IEventReceiver<TAuthenticationToken>)
  nameWithType.vb: IPublishAndWaitCommandPublisher(Of TAuthenticationToken).PublishAndWait(Of TCommand, TEvent)(TCommand, Int32, IEventReceiver(Of TAuthenticationToken))
  fullName.vb: Cqrs.Commands.IPublishAndWaitCommandPublisher(Of TAuthenticationToken).PublishAndWait(Of TCommand, TEvent)(TCommand, System.Int32, Cqrs.Events.IEventReceiver(Of TAuthenticationToken))
  name.vb: PublishAndWait(Of TCommand, TEvent)(TCommand, Int32, IEventReceiver(Of TAuthenticationToken))
  spec.csharp:
  - uid: Cqrs.Commands.IPublishAndWaitCommandPublisher`1.PublishAndWait``2(``0,System.Int32,Cqrs.Events.IEventReceiver{`0})
    name: PublishAndWait<TCommand, TEvent>
    nameWithType: IPublishAndWaitCommandPublisher<TAuthenticationToken>.PublishAndWait<TCommand, TEvent>
    fullName: Cqrs.Commands.IPublishAndWaitCommandPublisher<TAuthenticationToken>.PublishAndWait<TCommand, TEvent>
  - name: (
    nameWithType: (
    fullName: (
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Cqrs.Events.IEventReceiver`1
    name: IEventReceiver
    nameWithType: IEventReceiver
    fullName: Cqrs.Events.IEventReceiver
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Commands.IPublishAndWaitCommandPublisher`1.PublishAndWait``2(``0,System.Int32,Cqrs.Events.IEventReceiver{`0})
    name: PublishAndWait(Of TCommand, TEvent)
    nameWithType: IPublishAndWaitCommandPublisher(Of TAuthenticationToken).PublishAndWait(Of TCommand, TEvent)
    fullName: Cqrs.Commands.IPublishAndWaitCommandPublisher(Of TAuthenticationToken).PublishAndWait(Of TCommand, TEvent)
  - name: (
    nameWithType: (
    fullName: (
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Cqrs.Events.IEventReceiver`1
    name: IEventReceiver
    nameWithType: IEventReceiver
    fullName: Cqrs.Events.IEventReceiver
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Commands.IPublishAndWaitCommandPublisher{{TAuthenticationToken}}.PublishAndWait``2({TCommand},System.TimeSpan,Cqrs.Events.IEventReceiver{{TAuthenticationToken}})
  commentId: M:Cqrs.Commands.IPublishAndWaitCommandPublisher{`0}.PublishAndWait``2(``0,System.TimeSpan,Cqrs.Events.IEventReceiver{`0})
  parent: Cqrs.Commands.IPublishAndWaitCommandPublisher{{TAuthenticationToken}}
  definition: Cqrs.Commands.IPublishAndWaitCommandPublisher`1.PublishAndWait``2(``0,System.TimeSpan,Cqrs.Events.IEventReceiver{`0})
  name: PublishAndWait<TCommand, TEvent>(TCommand, TimeSpan, IEventReceiver<TAuthenticationToken>)
  nameWithType: IPublishAndWaitCommandPublisher<TAuthenticationToken>.PublishAndWait<TCommand, TEvent>(TCommand, TimeSpan, IEventReceiver<TAuthenticationToken>)
  fullName: Cqrs.Commands.IPublishAndWaitCommandPublisher<TAuthenticationToken>.PublishAndWait<TCommand, TEvent>(TCommand, System.TimeSpan, Cqrs.Events.IEventReceiver<TAuthenticationToken>)
  nameWithType.vb: IPublishAndWaitCommandPublisher(Of TAuthenticationToken).PublishAndWait(Of TCommand, TEvent)(TCommand, TimeSpan, IEventReceiver(Of TAuthenticationToken))
  fullName.vb: Cqrs.Commands.IPublishAndWaitCommandPublisher(Of TAuthenticationToken).PublishAndWait(Of TCommand, TEvent)(TCommand, System.TimeSpan, Cqrs.Events.IEventReceiver(Of TAuthenticationToken))
  name.vb: PublishAndWait(Of TCommand, TEvent)(TCommand, TimeSpan, IEventReceiver(Of TAuthenticationToken))
  spec.csharp:
  - uid: Cqrs.Commands.IPublishAndWaitCommandPublisher`1.PublishAndWait``2(``0,System.TimeSpan,Cqrs.Events.IEventReceiver{`0})
    name: PublishAndWait<TCommand, TEvent>
    nameWithType: IPublishAndWaitCommandPublisher<TAuthenticationToken>.PublishAndWait<TCommand, TEvent>
    fullName: Cqrs.Commands.IPublishAndWaitCommandPublisher<TAuthenticationToken>.PublishAndWait<TCommand, TEvent>
  - name: (
    nameWithType: (
    fullName: (
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Cqrs.Events.IEventReceiver`1
    name: IEventReceiver
    nameWithType: IEventReceiver
    fullName: Cqrs.Events.IEventReceiver
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Commands.IPublishAndWaitCommandPublisher`1.PublishAndWait``2(``0,System.TimeSpan,Cqrs.Events.IEventReceiver{`0})
    name: PublishAndWait(Of TCommand, TEvent)
    nameWithType: IPublishAndWaitCommandPublisher(Of TAuthenticationToken).PublishAndWait(Of TCommand, TEvent)
    fullName: Cqrs.Commands.IPublishAndWaitCommandPublisher(Of TAuthenticationToken).PublishAndWait(Of TCommand, TEvent)
  - name: (
    nameWithType: (
    fullName: (
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Cqrs.Events.IEventReceiver`1
    name: IEventReceiver
    nameWithType: IEventReceiver
    fullName: Cqrs.Events.IEventReceiver
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Commands.IPublishAndWaitCommandPublisher{{TAuthenticationToken}}.PublishAndWait``2({TCommand},System.Func{System.Collections.Generic.IEnumerable{Cqrs.Events.IEvent{{TAuthenticationToken}}},{TEvent}},Cqrs.Events.IEventReceiver{{TAuthenticationToken}})
  commentId: M:Cqrs.Commands.IPublishAndWaitCommandPublisher{`0}.PublishAndWait``2(``0,System.Func{System.Collections.Generic.IEnumerable{Cqrs.Events.IEvent{`0}},``1},Cqrs.Events.IEventReceiver{`0})
  parent: Cqrs.Commands.IPublishAndWaitCommandPublisher{{TAuthenticationToken}}
  definition: Cqrs.Commands.IPublishAndWaitCommandPublisher`1.PublishAndWait``2(``0,System.Func{System.Collections.Generic.IEnumerable{Cqrs.Events.IEvent{`0}},``1},Cqrs.Events.IEventReceiver{`0})
  name: PublishAndWait<TCommand, TEvent>(TCommand, Func<IEnumerable<IEvent<TAuthenticationToken>>, TEvent>, IEventReceiver<TAuthenticationToken>)
  nameWithType: IPublishAndWaitCommandPublisher<TAuthenticationToken>.PublishAndWait<TCommand, TEvent>(TCommand, Func<IEnumerable<IEvent<TAuthenticationToken>>, TEvent>, IEventReceiver<TAuthenticationToken>)
  fullName: Cqrs.Commands.IPublishAndWaitCommandPublisher<TAuthenticationToken>.PublishAndWait<TCommand, TEvent>(TCommand, System.Func<System.Collections.Generic.IEnumerable<Cqrs.Events.IEvent<TAuthenticationToken>>, TEvent>, Cqrs.Events.IEventReceiver<TAuthenticationToken>)
  nameWithType.vb: IPublishAndWaitCommandPublisher(Of TAuthenticationToken).PublishAndWait(Of TCommand, TEvent)(TCommand, Func(Of IEnumerable(Of IEvent(Of TAuthenticationToken)), TEvent), IEventReceiver(Of TAuthenticationToken))
  fullName.vb: Cqrs.Commands.IPublishAndWaitCommandPublisher(Of TAuthenticationToken).PublishAndWait(Of TCommand, TEvent)(TCommand, System.Func(Of System.Collections.Generic.IEnumerable(Of Cqrs.Events.IEvent(Of TAuthenticationToken)), TEvent), Cqrs.Events.IEventReceiver(Of TAuthenticationToken))
  name.vb: PublishAndWait(Of TCommand, TEvent)(TCommand, Func(Of IEnumerable(Of IEvent(Of TAuthenticationToken)), TEvent), IEventReceiver(Of TAuthenticationToken))
  spec.csharp:
  - uid: Cqrs.Commands.IPublishAndWaitCommandPublisher`1.PublishAndWait``2(``0,System.Func{System.Collections.Generic.IEnumerable{Cqrs.Events.IEvent{`0}},``1},Cqrs.Events.IEventReceiver{`0})
    name: PublishAndWait<TCommand, TEvent>
    nameWithType: IPublishAndWaitCommandPublisher<TAuthenticationToken>.PublishAndWait<TCommand, TEvent>
    fullName: Cqrs.Commands.IPublishAndWaitCommandPublisher<TAuthenticationToken>.PublishAndWait<TCommand, TEvent>
  - name: (
    nameWithType: (
    fullName: (
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEvent
    nameWithType: TEvent
    fullName: TEvent
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Cqrs.Events.IEventReceiver`1
    name: IEventReceiver
    nameWithType: IEventReceiver
    fullName: Cqrs.Events.IEventReceiver
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Commands.IPublishAndWaitCommandPublisher`1.PublishAndWait``2(``0,System.Func{System.Collections.Generic.IEnumerable{Cqrs.Events.IEvent{`0}},``1},Cqrs.Events.IEventReceiver{`0})
    name: PublishAndWait(Of TCommand, TEvent)
    nameWithType: IPublishAndWaitCommandPublisher(Of TAuthenticationToken).PublishAndWait(Of TCommand, TEvent)
    fullName: Cqrs.Commands.IPublishAndWaitCommandPublisher(Of TAuthenticationToken).PublishAndWait(Of TCommand, TEvent)
  - name: (
    nameWithType: (
    fullName: (
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEvent
    nameWithType: TEvent
    fullName: TEvent
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Cqrs.Events.IEventReceiver`1
    name: IEventReceiver
    nameWithType: IEventReceiver
    fullName: Cqrs.Events.IEventReceiver
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Commands.IPublishAndWaitCommandPublisher{{TAuthenticationToken}}.PublishAndWait``2({TCommand},System.Func{System.Collections.Generic.IEnumerable{Cqrs.Events.IEvent{{TAuthenticationToken}}},{TEvent}},System.Int32,Cqrs.Events.IEventReceiver{{TAuthenticationToken}})
  commentId: M:Cqrs.Commands.IPublishAndWaitCommandPublisher{`0}.PublishAndWait``2(``0,System.Func{System.Collections.Generic.IEnumerable{Cqrs.Events.IEvent{`0}},``1},System.Int32,Cqrs.Events.IEventReceiver{`0})
  parent: Cqrs.Commands.IPublishAndWaitCommandPublisher{{TAuthenticationToken}}
  definition: Cqrs.Commands.IPublishAndWaitCommandPublisher`1.PublishAndWait``2(``0,System.Func{System.Collections.Generic.IEnumerable{Cqrs.Events.IEvent{`0}},``1},System.Int32,Cqrs.Events.IEventReceiver{`0})
  name: PublishAndWait<TCommand, TEvent>(TCommand, Func<IEnumerable<IEvent<TAuthenticationToken>>, TEvent>, Int32, IEventReceiver<TAuthenticationToken>)
  nameWithType: IPublishAndWaitCommandPublisher<TAuthenticationToken>.PublishAndWait<TCommand, TEvent>(TCommand, Func<IEnumerable<IEvent<TAuthenticationToken>>, TEvent>, Int32, IEventReceiver<TAuthenticationToken>)
  fullName: Cqrs.Commands.IPublishAndWaitCommandPublisher<TAuthenticationToken>.PublishAndWait<TCommand, TEvent>(TCommand, System.Func<System.Collections.Generic.IEnumerable<Cqrs.Events.IEvent<TAuthenticationToken>>, TEvent>, System.Int32, Cqrs.Events.IEventReceiver<TAuthenticationToken>)
  nameWithType.vb: IPublishAndWaitCommandPublisher(Of TAuthenticationToken).PublishAndWait(Of TCommand, TEvent)(TCommand, Func(Of IEnumerable(Of IEvent(Of TAuthenticationToken)), TEvent), Int32, IEventReceiver(Of TAuthenticationToken))
  fullName.vb: Cqrs.Commands.IPublishAndWaitCommandPublisher(Of TAuthenticationToken).PublishAndWait(Of TCommand, TEvent)(TCommand, System.Func(Of System.Collections.Generic.IEnumerable(Of Cqrs.Events.IEvent(Of TAuthenticationToken)), TEvent), System.Int32, Cqrs.Events.IEventReceiver(Of TAuthenticationToken))
  name.vb: PublishAndWait(Of TCommand, TEvent)(TCommand, Func(Of IEnumerable(Of IEvent(Of TAuthenticationToken)), TEvent), Int32, IEventReceiver(Of TAuthenticationToken))
  spec.csharp:
  - uid: Cqrs.Commands.IPublishAndWaitCommandPublisher`1.PublishAndWait``2(``0,System.Func{System.Collections.Generic.IEnumerable{Cqrs.Events.IEvent{`0}},``1},System.Int32,Cqrs.Events.IEventReceiver{`0})
    name: PublishAndWait<TCommand, TEvent>
    nameWithType: IPublishAndWaitCommandPublisher<TAuthenticationToken>.PublishAndWait<TCommand, TEvent>
    fullName: Cqrs.Commands.IPublishAndWaitCommandPublisher<TAuthenticationToken>.PublishAndWait<TCommand, TEvent>
  - name: (
    nameWithType: (
    fullName: (
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEvent
    nameWithType: TEvent
    fullName: TEvent
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Cqrs.Events.IEventReceiver`1
    name: IEventReceiver
    nameWithType: IEventReceiver
    fullName: Cqrs.Events.IEventReceiver
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Commands.IPublishAndWaitCommandPublisher`1.PublishAndWait``2(``0,System.Func{System.Collections.Generic.IEnumerable{Cqrs.Events.IEvent{`0}},``1},System.Int32,Cqrs.Events.IEventReceiver{`0})
    name: PublishAndWait(Of TCommand, TEvent)
    nameWithType: IPublishAndWaitCommandPublisher(Of TAuthenticationToken).PublishAndWait(Of TCommand, TEvent)
    fullName: Cqrs.Commands.IPublishAndWaitCommandPublisher(Of TAuthenticationToken).PublishAndWait(Of TCommand, TEvent)
  - name: (
    nameWithType: (
    fullName: (
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEvent
    nameWithType: TEvent
    fullName: TEvent
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Cqrs.Events.IEventReceiver`1
    name: IEventReceiver
    nameWithType: IEventReceiver
    fullName: Cqrs.Events.IEventReceiver
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Commands.IPublishAndWaitCommandPublisher{{TAuthenticationToken}}.PublishAndWait``2({TCommand},System.Func{System.Collections.Generic.IEnumerable{Cqrs.Events.IEvent{{TAuthenticationToken}}},{TEvent}},System.TimeSpan,Cqrs.Events.IEventReceiver{{TAuthenticationToken}})
  commentId: M:Cqrs.Commands.IPublishAndWaitCommandPublisher{`0}.PublishAndWait``2(``0,System.Func{System.Collections.Generic.IEnumerable{Cqrs.Events.IEvent{`0}},``1},System.TimeSpan,Cqrs.Events.IEventReceiver{`0})
  parent: Cqrs.Commands.IPublishAndWaitCommandPublisher{{TAuthenticationToken}}
  definition: Cqrs.Commands.IPublishAndWaitCommandPublisher`1.PublishAndWait``2(``0,System.Func{System.Collections.Generic.IEnumerable{Cqrs.Events.IEvent{`0}},``1},System.TimeSpan,Cqrs.Events.IEventReceiver{`0})
  name: PublishAndWait<TCommand, TEvent>(TCommand, Func<IEnumerable<IEvent<TAuthenticationToken>>, TEvent>, TimeSpan, IEventReceiver<TAuthenticationToken>)
  nameWithType: IPublishAndWaitCommandPublisher<TAuthenticationToken>.PublishAndWait<TCommand, TEvent>(TCommand, Func<IEnumerable<IEvent<TAuthenticationToken>>, TEvent>, TimeSpan, IEventReceiver<TAuthenticationToken>)
  fullName: Cqrs.Commands.IPublishAndWaitCommandPublisher<TAuthenticationToken>.PublishAndWait<TCommand, TEvent>(TCommand, System.Func<System.Collections.Generic.IEnumerable<Cqrs.Events.IEvent<TAuthenticationToken>>, TEvent>, System.TimeSpan, Cqrs.Events.IEventReceiver<TAuthenticationToken>)
  nameWithType.vb: IPublishAndWaitCommandPublisher(Of TAuthenticationToken).PublishAndWait(Of TCommand, TEvent)(TCommand, Func(Of IEnumerable(Of IEvent(Of TAuthenticationToken)), TEvent), TimeSpan, IEventReceiver(Of TAuthenticationToken))
  fullName.vb: Cqrs.Commands.IPublishAndWaitCommandPublisher(Of TAuthenticationToken).PublishAndWait(Of TCommand, TEvent)(TCommand, System.Func(Of System.Collections.Generic.IEnumerable(Of Cqrs.Events.IEvent(Of TAuthenticationToken)), TEvent), System.TimeSpan, Cqrs.Events.IEventReceiver(Of TAuthenticationToken))
  name.vb: PublishAndWait(Of TCommand, TEvent)(TCommand, Func(Of IEnumerable(Of IEvent(Of TAuthenticationToken)), TEvent), TimeSpan, IEventReceiver(Of TAuthenticationToken))
  spec.csharp:
  - uid: Cqrs.Commands.IPublishAndWaitCommandPublisher`1.PublishAndWait``2(``0,System.Func{System.Collections.Generic.IEnumerable{Cqrs.Events.IEvent{`0}},``1},System.TimeSpan,Cqrs.Events.IEventReceiver{`0})
    name: PublishAndWait<TCommand, TEvent>
    nameWithType: IPublishAndWaitCommandPublisher<TAuthenticationToken>.PublishAndWait<TCommand, TEvent>
    fullName: Cqrs.Commands.IPublishAndWaitCommandPublisher<TAuthenticationToken>.PublishAndWait<TCommand, TEvent>
  - name: (
    nameWithType: (
    fullName: (
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEvent
    nameWithType: TEvent
    fullName: TEvent
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Cqrs.Events.IEventReceiver`1
    name: IEventReceiver
    nameWithType: IEventReceiver
    fullName: Cqrs.Events.IEventReceiver
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Commands.IPublishAndWaitCommandPublisher`1.PublishAndWait``2(``0,System.Func{System.Collections.Generic.IEnumerable{Cqrs.Events.IEvent{`0}},``1},System.TimeSpan,Cqrs.Events.IEventReceiver{`0})
    name: PublishAndWait(Of TCommand, TEvent)
    nameWithType: IPublishAndWaitCommandPublisher(Of TAuthenticationToken).PublishAndWait(Of TCommand, TEvent)
    fullName: Cqrs.Commands.IPublishAndWaitCommandPublisher(Of TAuthenticationToken).PublishAndWait(Of TCommand, TEvent)
  - name: (
    nameWithType: (
    fullName: (
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEvent
    nameWithType: TEvent
    fullName: TEvent
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Cqrs.Events.IEventReceiver`1
    name: IEventReceiver
    nameWithType: IEventReceiver
    fullName: Cqrs.Events.IEventReceiver
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Commands.ICommandPublisher{{TAuthenticationToken}}.Publish``1({TCommand})
  commentId: M:Cqrs.Commands.ICommandPublisher{`0}.Publish``1(``0)
  parent: Cqrs.Commands.ICommandPublisher{{TAuthenticationToken}}
  definition: Cqrs.Commands.ICommandPublisher`1.Publish``1(``0)
  name: Publish<TCommand>(TCommand)
  nameWithType: ICommandPublisher<TAuthenticationToken>.Publish<TCommand>(TCommand)
  fullName: Cqrs.Commands.ICommandPublisher<TAuthenticationToken>.Publish<TCommand>(TCommand)
  nameWithType.vb: ICommandPublisher(Of TAuthenticationToken).Publish(Of TCommand)(TCommand)
  fullName.vb: Cqrs.Commands.ICommandPublisher(Of TAuthenticationToken).Publish(Of TCommand)(TCommand)
  name.vb: Publish(Of TCommand)(TCommand)
  spec.csharp:
  - uid: Cqrs.Commands.ICommandPublisher`1.Publish``1(``0)
    name: Publish<TCommand>
    nameWithType: ICommandPublisher<TAuthenticationToken>.Publish<TCommand>
    fullName: Cqrs.Commands.ICommandPublisher<TAuthenticationToken>.Publish<TCommand>
  - name: (
    nameWithType: (
    fullName: (
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Commands.ICommandPublisher`1.Publish``1(``0)
    name: Publish(Of TCommand)
    nameWithType: ICommandPublisher(Of TAuthenticationToken).Publish(Of TCommand)
    fullName: Cqrs.Commands.ICommandPublisher(Of TAuthenticationToken).Publish(Of TCommand)
  - name: (
    nameWithType: (
    fullName: (
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Commands.ICommandPublisher{{TAuthenticationToken}}.Publish``1(System.Collections.Generic.IEnumerable{{TCommand}})
  commentId: M:Cqrs.Commands.ICommandPublisher{`0}.Publish``1(System.Collections.Generic.IEnumerable{``0})
  parent: Cqrs.Commands.ICommandPublisher{{TAuthenticationToken}}
  definition: Cqrs.Commands.ICommandPublisher`1.Publish``1(System.Collections.Generic.IEnumerable{``0})
  name: Publish<TCommand>(IEnumerable<TCommand>)
  nameWithType: ICommandPublisher<TAuthenticationToken>.Publish<TCommand>(IEnumerable<TCommand>)
  fullName: Cqrs.Commands.ICommandPublisher<TAuthenticationToken>.Publish<TCommand>(System.Collections.Generic.IEnumerable<TCommand>)
  nameWithType.vb: ICommandPublisher(Of TAuthenticationToken).Publish(Of TCommand)(IEnumerable(Of TCommand))
  fullName.vb: Cqrs.Commands.ICommandPublisher(Of TAuthenticationToken).Publish(Of TCommand)(System.Collections.Generic.IEnumerable(Of TCommand))
  name.vb: Publish(Of TCommand)(IEnumerable(Of TCommand))
  spec.csharp:
  - uid: Cqrs.Commands.ICommandPublisher`1.Publish``1(System.Collections.Generic.IEnumerable{``0})
    name: Publish<TCommand>
    nameWithType: ICommandPublisher<TAuthenticationToken>.Publish<TCommand>
    fullName: Cqrs.Commands.ICommandPublisher<TAuthenticationToken>.Publish<TCommand>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Commands.ICommandPublisher`1.Publish``1(System.Collections.Generic.IEnumerable{``0})
    name: Publish(Of TCommand)
    nameWithType: ICommandPublisher(Of TAuthenticationToken).Publish(Of TCommand)
    fullName: Cqrs.Commands.ICommandPublisher(Of TAuthenticationToken).Publish(Of TCommand)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Akka.Actor
  commentId: N:Akka.Actor
  isExternal: false
  name: Akka.Actor
  nameWithType: Akka.Actor
  fullName: Akka.Actor
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Cqrs.Commands.IPublishAndWaitCommandPublisher`1.PublishAndWait``2(``0,Cqrs.Events.IEventReceiver{`0})
  commentId: M:Cqrs.Commands.IPublishAndWaitCommandPublisher`1.PublishAndWait``2(``0,Cqrs.Events.IEventReceiver{`0})
  isExternal: false
  name: PublishAndWait<TCommand, TEvent>(TCommand, IEventReceiver<TAuthenticationToken>)
  nameWithType: IPublishAndWaitCommandPublisher<TAuthenticationToken>.PublishAndWait<TCommand, TEvent>(TCommand, IEventReceiver<TAuthenticationToken>)
  fullName: Cqrs.Commands.IPublishAndWaitCommandPublisher<TAuthenticationToken>.PublishAndWait<TCommand, TEvent>(TCommand, Cqrs.Events.IEventReceiver<TAuthenticationToken>)
  nameWithType.vb: IPublishAndWaitCommandPublisher(Of TAuthenticationToken).PublishAndWait(Of TCommand, TEvent)(TCommand, IEventReceiver(Of TAuthenticationToken))
  fullName.vb: Cqrs.Commands.IPublishAndWaitCommandPublisher(Of TAuthenticationToken).PublishAndWait(Of TCommand, TEvent)(TCommand, Cqrs.Events.IEventReceiver(Of TAuthenticationToken))
  name.vb: PublishAndWait(Of TCommand, TEvent)(TCommand, IEventReceiver(Of TAuthenticationToken))
  spec.csharp:
  - uid: Cqrs.Commands.IPublishAndWaitCommandPublisher`1.PublishAndWait``2(``0,Cqrs.Events.IEventReceiver{`0})
    name: PublishAndWait<TCommand, TEvent>
    nameWithType: IPublishAndWaitCommandPublisher<TAuthenticationToken>.PublishAndWait<TCommand, TEvent>
    fullName: Cqrs.Commands.IPublishAndWaitCommandPublisher<TAuthenticationToken>.PublishAndWait<TCommand, TEvent>
  - name: (
    nameWithType: (
    fullName: (
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Cqrs.Events.IEventReceiver`1
    name: IEventReceiver
    nameWithType: IEventReceiver
    fullName: Cqrs.Events.IEventReceiver
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Commands.IPublishAndWaitCommandPublisher`1.PublishAndWait``2(``0,Cqrs.Events.IEventReceiver{`0})
    name: PublishAndWait(Of TCommand, TEvent)
    nameWithType: IPublishAndWaitCommandPublisher(Of TAuthenticationToken).PublishAndWait(Of TCommand, TEvent)
    fullName: Cqrs.Commands.IPublishAndWaitCommandPublisher(Of TAuthenticationToken).PublishAndWait(Of TCommand, TEvent)
  - name: (
    nameWithType: (
    fullName: (
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Cqrs.Events.IEventReceiver`1
    name: IEventReceiver
    nameWithType: IEventReceiver
    fullName: Cqrs.Events.IEventReceiver
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Commands.IPublishAndWaitCommandPublisher{{TAuthenticationToken}}
  commentId: T:Cqrs.Commands.IPublishAndWaitCommandPublisher{`0}
  parent: Cqrs.Commands
  definition: Cqrs.Commands.IPublishAndWaitCommandPublisher`1
  name: IPublishAndWaitCommandPublisher<TAuthenticationToken>
  nameWithType: IPublishAndWaitCommandPublisher<TAuthenticationToken>
  fullName: Cqrs.Commands.IPublishAndWaitCommandPublisher<TAuthenticationToken>
  nameWithType.vb: IPublishAndWaitCommandPublisher(Of TAuthenticationToken)
  fullName.vb: Cqrs.Commands.IPublishAndWaitCommandPublisher(Of TAuthenticationToken)
  name.vb: IPublishAndWaitCommandPublisher(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Commands.IPublishAndWaitCommandPublisher`1
    name: IPublishAndWaitCommandPublisher
    nameWithType: IPublishAndWaitCommandPublisher
    fullName: Cqrs.Commands.IPublishAndWaitCommandPublisher
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Commands.IPublishAndWaitCommandPublisher`1
    name: IPublishAndWaitCommandPublisher
    nameWithType: IPublishAndWaitCommandPublisher
    fullName: Cqrs.Commands.IPublishAndWaitCommandPublisher
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Commands.IPublishAndWaitCommandPublisher`1.PublishAndWait``2(``0,System.Int32,Cqrs.Events.IEventReceiver{`0})
  commentId: M:Cqrs.Commands.IPublishAndWaitCommandPublisher`1.PublishAndWait``2(``0,System.Int32,Cqrs.Events.IEventReceiver{`0})
  isExternal: true
  name: PublishAndWait<TCommand, TEvent>(TCommand, Int32, IEventReceiver<TAuthenticationToken>)
  nameWithType: IPublishAndWaitCommandPublisher<TAuthenticationToken>.PublishAndWait<TCommand, TEvent>(TCommand, Int32, IEventReceiver<TAuthenticationToken>)
  fullName: Cqrs.Commands.IPublishAndWaitCommandPublisher<TAuthenticationToken>.PublishAndWait<TCommand, TEvent>(TCommand, System.Int32, Cqrs.Events.IEventReceiver<TAuthenticationToken>)
  nameWithType.vb: IPublishAndWaitCommandPublisher(Of TAuthenticationToken).PublishAndWait(Of TCommand, TEvent)(TCommand, Int32, IEventReceiver(Of TAuthenticationToken))
  fullName.vb: Cqrs.Commands.IPublishAndWaitCommandPublisher(Of TAuthenticationToken).PublishAndWait(Of TCommand, TEvent)(TCommand, System.Int32, Cqrs.Events.IEventReceiver(Of TAuthenticationToken))
  name.vb: PublishAndWait(Of TCommand, TEvent)(TCommand, Int32, IEventReceiver(Of TAuthenticationToken))
  spec.csharp:
  - uid: Cqrs.Commands.IPublishAndWaitCommandPublisher`1.PublishAndWait``2(``0,System.Int32,Cqrs.Events.IEventReceiver{`0})
    name: PublishAndWait<TCommand, TEvent>
    nameWithType: IPublishAndWaitCommandPublisher<TAuthenticationToken>.PublishAndWait<TCommand, TEvent>
    fullName: Cqrs.Commands.IPublishAndWaitCommandPublisher<TAuthenticationToken>.PublishAndWait<TCommand, TEvent>
  - name: (
    nameWithType: (
    fullName: (
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Cqrs.Events.IEventReceiver`1
    name: IEventReceiver
    nameWithType: IEventReceiver
    fullName: Cqrs.Events.IEventReceiver
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Commands.IPublishAndWaitCommandPublisher`1.PublishAndWait``2(``0,System.Int32,Cqrs.Events.IEventReceiver{`0})
    name: PublishAndWait(Of TCommand, TEvent)
    nameWithType: IPublishAndWaitCommandPublisher(Of TAuthenticationToken).PublishAndWait(Of TCommand, TEvent)
    fullName: Cqrs.Commands.IPublishAndWaitCommandPublisher(Of TAuthenticationToken).PublishAndWait(Of TCommand, TEvent)
  - name: (
    nameWithType: (
    fullName: (
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Cqrs.Events.IEventReceiver`1
    name: IEventReceiver
    nameWithType: IEventReceiver
    fullName: Cqrs.Events.IEventReceiver
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Commands.IPublishAndWaitCommandPublisher`1.PublishAndWait``2(``0,System.TimeSpan,Cqrs.Events.IEventReceiver{`0})
  commentId: M:Cqrs.Commands.IPublishAndWaitCommandPublisher`1.PublishAndWait``2(``0,System.TimeSpan,Cqrs.Events.IEventReceiver{`0})
  isExternal: true
  name: PublishAndWait<TCommand, TEvent>(TCommand, TimeSpan, IEventReceiver<TAuthenticationToken>)
  nameWithType: IPublishAndWaitCommandPublisher<TAuthenticationToken>.PublishAndWait<TCommand, TEvent>(TCommand, TimeSpan, IEventReceiver<TAuthenticationToken>)
  fullName: Cqrs.Commands.IPublishAndWaitCommandPublisher<TAuthenticationToken>.PublishAndWait<TCommand, TEvent>(TCommand, System.TimeSpan, Cqrs.Events.IEventReceiver<TAuthenticationToken>)
  nameWithType.vb: IPublishAndWaitCommandPublisher(Of TAuthenticationToken).PublishAndWait(Of TCommand, TEvent)(TCommand, TimeSpan, IEventReceiver(Of TAuthenticationToken))
  fullName.vb: Cqrs.Commands.IPublishAndWaitCommandPublisher(Of TAuthenticationToken).PublishAndWait(Of TCommand, TEvent)(TCommand, System.TimeSpan, Cqrs.Events.IEventReceiver(Of TAuthenticationToken))
  name.vb: PublishAndWait(Of TCommand, TEvent)(TCommand, TimeSpan, IEventReceiver(Of TAuthenticationToken))
  spec.csharp:
  - uid: Cqrs.Commands.IPublishAndWaitCommandPublisher`1.PublishAndWait``2(``0,System.TimeSpan,Cqrs.Events.IEventReceiver{`0})
    name: PublishAndWait<TCommand, TEvent>
    nameWithType: IPublishAndWaitCommandPublisher<TAuthenticationToken>.PublishAndWait<TCommand, TEvent>
    fullName: Cqrs.Commands.IPublishAndWaitCommandPublisher<TAuthenticationToken>.PublishAndWait<TCommand, TEvent>
  - name: (
    nameWithType: (
    fullName: (
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Cqrs.Events.IEventReceiver`1
    name: IEventReceiver
    nameWithType: IEventReceiver
    fullName: Cqrs.Events.IEventReceiver
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Commands.IPublishAndWaitCommandPublisher`1.PublishAndWait``2(``0,System.TimeSpan,Cqrs.Events.IEventReceiver{`0})
    name: PublishAndWait(Of TCommand, TEvent)
    nameWithType: IPublishAndWaitCommandPublisher(Of TAuthenticationToken).PublishAndWait(Of TCommand, TEvent)
    fullName: Cqrs.Commands.IPublishAndWaitCommandPublisher(Of TAuthenticationToken).PublishAndWait(Of TCommand, TEvent)
  - name: (
    nameWithType: (
    fullName: (
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Cqrs.Events.IEventReceiver`1
    name: IEventReceiver
    nameWithType: IEventReceiver
    fullName: Cqrs.Events.IEventReceiver
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Commands.IPublishAndWaitCommandPublisher`1.PublishAndWait``2(``0,System.Func{System.Collections.Generic.IEnumerable{Cqrs.Events.IEvent{`0}},``1},Cqrs.Events.IEventReceiver{`0})
  commentId: M:Cqrs.Commands.IPublishAndWaitCommandPublisher`1.PublishAndWait``2(``0,System.Func{System.Collections.Generic.IEnumerable{Cqrs.Events.IEvent{`0}},``1},Cqrs.Events.IEventReceiver{`0})
  isExternal: true
  name: PublishAndWait<TCommand, TEvent>(TCommand, Func<IEnumerable<IEvent<TAuthenticationToken>>, TEvent>, IEventReceiver<TAuthenticationToken>)
  nameWithType: IPublishAndWaitCommandPublisher<TAuthenticationToken>.PublishAndWait<TCommand, TEvent>(TCommand, Func<IEnumerable<IEvent<TAuthenticationToken>>, TEvent>, IEventReceiver<TAuthenticationToken>)
  fullName: Cqrs.Commands.IPublishAndWaitCommandPublisher<TAuthenticationToken>.PublishAndWait<TCommand, TEvent>(TCommand, System.Func<System.Collections.Generic.IEnumerable<Cqrs.Events.IEvent<TAuthenticationToken>>, TEvent>, Cqrs.Events.IEventReceiver<TAuthenticationToken>)
  nameWithType.vb: IPublishAndWaitCommandPublisher(Of TAuthenticationToken).PublishAndWait(Of TCommand, TEvent)(TCommand, Func(Of IEnumerable(Of IEvent(Of TAuthenticationToken)), TEvent), IEventReceiver(Of TAuthenticationToken))
  fullName.vb: Cqrs.Commands.IPublishAndWaitCommandPublisher(Of TAuthenticationToken).PublishAndWait(Of TCommand, TEvent)(TCommand, System.Func(Of System.Collections.Generic.IEnumerable(Of Cqrs.Events.IEvent(Of TAuthenticationToken)), TEvent), Cqrs.Events.IEventReceiver(Of TAuthenticationToken))
  name.vb: PublishAndWait(Of TCommand, TEvent)(TCommand, Func(Of IEnumerable(Of IEvent(Of TAuthenticationToken)), TEvent), IEventReceiver(Of TAuthenticationToken))
  spec.csharp:
  - uid: Cqrs.Commands.IPublishAndWaitCommandPublisher`1.PublishAndWait``2(``0,System.Func{System.Collections.Generic.IEnumerable{Cqrs.Events.IEvent{`0}},``1},Cqrs.Events.IEventReceiver{`0})
    name: PublishAndWait<TCommand, TEvent>
    nameWithType: IPublishAndWaitCommandPublisher<TAuthenticationToken>.PublishAndWait<TCommand, TEvent>
    fullName: Cqrs.Commands.IPublishAndWaitCommandPublisher<TAuthenticationToken>.PublishAndWait<TCommand, TEvent>
  - name: (
    nameWithType: (
    fullName: (
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEvent
    nameWithType: TEvent
    fullName: TEvent
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Cqrs.Events.IEventReceiver`1
    name: IEventReceiver
    nameWithType: IEventReceiver
    fullName: Cqrs.Events.IEventReceiver
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Commands.IPublishAndWaitCommandPublisher`1.PublishAndWait``2(``0,System.Func{System.Collections.Generic.IEnumerable{Cqrs.Events.IEvent{`0}},``1},Cqrs.Events.IEventReceiver{`0})
    name: PublishAndWait(Of TCommand, TEvent)
    nameWithType: IPublishAndWaitCommandPublisher(Of TAuthenticationToken).PublishAndWait(Of TCommand, TEvent)
    fullName: Cqrs.Commands.IPublishAndWaitCommandPublisher(Of TAuthenticationToken).PublishAndWait(Of TCommand, TEvent)
  - name: (
    nameWithType: (
    fullName: (
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEvent
    nameWithType: TEvent
    fullName: TEvent
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Cqrs.Events.IEventReceiver`1
    name: IEventReceiver
    nameWithType: IEventReceiver
    fullName: Cqrs.Events.IEventReceiver
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Commands.IPublishAndWaitCommandPublisher`1.PublishAndWait``2(``0,System.Func{System.Collections.Generic.IEnumerable{Cqrs.Events.IEvent{`0}},``1},System.Int32,Cqrs.Events.IEventReceiver{`0})
  commentId: M:Cqrs.Commands.IPublishAndWaitCommandPublisher`1.PublishAndWait``2(``0,System.Func{System.Collections.Generic.IEnumerable{Cqrs.Events.IEvent{`0}},``1},System.Int32,Cqrs.Events.IEventReceiver{`0})
  isExternal: true
  name: PublishAndWait<TCommand, TEvent>(TCommand, Func<IEnumerable<IEvent<TAuthenticationToken>>, TEvent>, Int32, IEventReceiver<TAuthenticationToken>)
  nameWithType: IPublishAndWaitCommandPublisher<TAuthenticationToken>.PublishAndWait<TCommand, TEvent>(TCommand, Func<IEnumerable<IEvent<TAuthenticationToken>>, TEvent>, Int32, IEventReceiver<TAuthenticationToken>)
  fullName: Cqrs.Commands.IPublishAndWaitCommandPublisher<TAuthenticationToken>.PublishAndWait<TCommand, TEvent>(TCommand, System.Func<System.Collections.Generic.IEnumerable<Cqrs.Events.IEvent<TAuthenticationToken>>, TEvent>, System.Int32, Cqrs.Events.IEventReceiver<TAuthenticationToken>)
  nameWithType.vb: IPublishAndWaitCommandPublisher(Of TAuthenticationToken).PublishAndWait(Of TCommand, TEvent)(TCommand, Func(Of IEnumerable(Of IEvent(Of TAuthenticationToken)), TEvent), Int32, IEventReceiver(Of TAuthenticationToken))
  fullName.vb: Cqrs.Commands.IPublishAndWaitCommandPublisher(Of TAuthenticationToken).PublishAndWait(Of TCommand, TEvent)(TCommand, System.Func(Of System.Collections.Generic.IEnumerable(Of Cqrs.Events.IEvent(Of TAuthenticationToken)), TEvent), System.Int32, Cqrs.Events.IEventReceiver(Of TAuthenticationToken))
  name.vb: PublishAndWait(Of TCommand, TEvent)(TCommand, Func(Of IEnumerable(Of IEvent(Of TAuthenticationToken)), TEvent), Int32, IEventReceiver(Of TAuthenticationToken))
  spec.csharp:
  - uid: Cqrs.Commands.IPublishAndWaitCommandPublisher`1.PublishAndWait``2(``0,System.Func{System.Collections.Generic.IEnumerable{Cqrs.Events.IEvent{`0}},``1},System.Int32,Cqrs.Events.IEventReceiver{`0})
    name: PublishAndWait<TCommand, TEvent>
    nameWithType: IPublishAndWaitCommandPublisher<TAuthenticationToken>.PublishAndWait<TCommand, TEvent>
    fullName: Cqrs.Commands.IPublishAndWaitCommandPublisher<TAuthenticationToken>.PublishAndWait<TCommand, TEvent>
  - name: (
    nameWithType: (
    fullName: (
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEvent
    nameWithType: TEvent
    fullName: TEvent
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Cqrs.Events.IEventReceiver`1
    name: IEventReceiver
    nameWithType: IEventReceiver
    fullName: Cqrs.Events.IEventReceiver
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Commands.IPublishAndWaitCommandPublisher`1.PublishAndWait``2(``0,System.Func{System.Collections.Generic.IEnumerable{Cqrs.Events.IEvent{`0}},``1},System.Int32,Cqrs.Events.IEventReceiver{`0})
    name: PublishAndWait(Of TCommand, TEvent)
    nameWithType: IPublishAndWaitCommandPublisher(Of TAuthenticationToken).PublishAndWait(Of TCommand, TEvent)
    fullName: Cqrs.Commands.IPublishAndWaitCommandPublisher(Of TAuthenticationToken).PublishAndWait(Of TCommand, TEvent)
  - name: (
    nameWithType: (
    fullName: (
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEvent
    nameWithType: TEvent
    fullName: TEvent
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Cqrs.Events.IEventReceiver`1
    name: IEventReceiver
    nameWithType: IEventReceiver
    fullName: Cqrs.Events.IEventReceiver
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Commands.IPublishAndWaitCommandPublisher`1.PublishAndWait``2(``0,System.Func{System.Collections.Generic.IEnumerable{Cqrs.Events.IEvent{`0}},``1},System.TimeSpan,Cqrs.Events.IEventReceiver{`0})
  commentId: M:Cqrs.Commands.IPublishAndWaitCommandPublisher`1.PublishAndWait``2(``0,System.Func{System.Collections.Generic.IEnumerable{Cqrs.Events.IEvent{`0}},``1},System.TimeSpan,Cqrs.Events.IEventReceiver{`0})
  isExternal: true
  name: PublishAndWait<TCommand, TEvent>(TCommand, Func<IEnumerable<IEvent<TAuthenticationToken>>, TEvent>, TimeSpan, IEventReceiver<TAuthenticationToken>)
  nameWithType: IPublishAndWaitCommandPublisher<TAuthenticationToken>.PublishAndWait<TCommand, TEvent>(TCommand, Func<IEnumerable<IEvent<TAuthenticationToken>>, TEvent>, TimeSpan, IEventReceiver<TAuthenticationToken>)
  fullName: Cqrs.Commands.IPublishAndWaitCommandPublisher<TAuthenticationToken>.PublishAndWait<TCommand, TEvent>(TCommand, System.Func<System.Collections.Generic.IEnumerable<Cqrs.Events.IEvent<TAuthenticationToken>>, TEvent>, System.TimeSpan, Cqrs.Events.IEventReceiver<TAuthenticationToken>)
  nameWithType.vb: IPublishAndWaitCommandPublisher(Of TAuthenticationToken).PublishAndWait(Of TCommand, TEvent)(TCommand, Func(Of IEnumerable(Of IEvent(Of TAuthenticationToken)), TEvent), TimeSpan, IEventReceiver(Of TAuthenticationToken))
  fullName.vb: Cqrs.Commands.IPublishAndWaitCommandPublisher(Of TAuthenticationToken).PublishAndWait(Of TCommand, TEvent)(TCommand, System.Func(Of System.Collections.Generic.IEnumerable(Of Cqrs.Events.IEvent(Of TAuthenticationToken)), TEvent), System.TimeSpan, Cqrs.Events.IEventReceiver(Of TAuthenticationToken))
  name.vb: PublishAndWait(Of TCommand, TEvent)(TCommand, Func(Of IEnumerable(Of IEvent(Of TAuthenticationToken)), TEvent), TimeSpan, IEventReceiver(Of TAuthenticationToken))
  spec.csharp:
  - uid: Cqrs.Commands.IPublishAndWaitCommandPublisher`1.PublishAndWait``2(``0,System.Func{System.Collections.Generic.IEnumerable{Cqrs.Events.IEvent{`0}},``1},System.TimeSpan,Cqrs.Events.IEventReceiver{`0})
    name: PublishAndWait<TCommand, TEvent>
    nameWithType: IPublishAndWaitCommandPublisher<TAuthenticationToken>.PublishAndWait<TCommand, TEvent>
    fullName: Cqrs.Commands.IPublishAndWaitCommandPublisher<TAuthenticationToken>.PublishAndWait<TCommand, TEvent>
  - name: (
    nameWithType: (
    fullName: (
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEvent
    nameWithType: TEvent
    fullName: TEvent
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Cqrs.Events.IEventReceiver`1
    name: IEventReceiver
    nameWithType: IEventReceiver
    fullName: Cqrs.Events.IEventReceiver
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Commands.IPublishAndWaitCommandPublisher`1.PublishAndWait``2(``0,System.Func{System.Collections.Generic.IEnumerable{Cqrs.Events.IEvent{`0}},``1},System.TimeSpan,Cqrs.Events.IEventReceiver{`0})
    name: PublishAndWait(Of TCommand, TEvent)
    nameWithType: IPublishAndWaitCommandPublisher(Of TAuthenticationToken).PublishAndWait(Of TCommand, TEvent)
    fullName: Cqrs.Commands.IPublishAndWaitCommandPublisher(Of TAuthenticationToken).PublishAndWait(Of TCommand, TEvent)
  - name: (
    nameWithType: (
    fullName: (
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEvent
    nameWithType: TEvent
    fullName: TEvent
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Cqrs.Events.IEventReceiver`1
    name: IEventReceiver
    nameWithType: IEventReceiver
    fullName: Cqrs.Events.IEventReceiver
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Commands.ICommandPublisher`1.Publish``1(``0)
  commentId: M:Cqrs.Commands.ICommandPublisher`1.Publish``1(``0)
  isExternal: false
  name: Publish<TCommand>(TCommand)
  nameWithType: ICommandPublisher<TAuthenticationToken>.Publish<TCommand>(TCommand)
  fullName: Cqrs.Commands.ICommandPublisher<TAuthenticationToken>.Publish<TCommand>(TCommand)
  nameWithType.vb: ICommandPublisher(Of TAuthenticationToken).Publish(Of TCommand)(TCommand)
  fullName.vb: Cqrs.Commands.ICommandPublisher(Of TAuthenticationToken).Publish(Of TCommand)(TCommand)
  name.vb: Publish(Of TCommand)(TCommand)
  spec.csharp:
  - uid: Cqrs.Commands.ICommandPublisher`1.Publish``1(``0)
    name: Publish<TCommand>
    nameWithType: ICommandPublisher<TAuthenticationToken>.Publish<TCommand>
    fullName: Cqrs.Commands.ICommandPublisher<TAuthenticationToken>.Publish<TCommand>
  - name: (
    nameWithType: (
    fullName: (
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Commands.ICommandPublisher`1.Publish``1(``0)
    name: Publish(Of TCommand)
    nameWithType: ICommandPublisher(Of TAuthenticationToken).Publish(Of TCommand)
    fullName: Cqrs.Commands.ICommandPublisher(Of TAuthenticationToken).Publish(Of TCommand)
  - name: (
    nameWithType: (
    fullName: (
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Commands.ICommandPublisher{{TAuthenticationToken}}
  commentId: T:Cqrs.Commands.ICommandPublisher{`0}
  parent: Cqrs.Commands
  definition: Cqrs.Commands.ICommandPublisher`1
  name: ICommandPublisher<TAuthenticationToken>
  nameWithType: ICommandPublisher<TAuthenticationToken>
  fullName: Cqrs.Commands.ICommandPublisher<TAuthenticationToken>
  nameWithType.vb: ICommandPublisher(Of TAuthenticationToken)
  fullName.vb: Cqrs.Commands.ICommandPublisher(Of TAuthenticationToken)
  name.vb: ICommandPublisher(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Commands.ICommandPublisher`1
    name: ICommandPublisher
    nameWithType: ICommandPublisher
    fullName: Cqrs.Commands.ICommandPublisher
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Commands.ICommandPublisher`1
    name: ICommandPublisher
    nameWithType: ICommandPublisher
    fullName: Cqrs.Commands.ICommandPublisher
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Commands.ICommandPublisher`1.Publish``1(System.Collections.Generic.IEnumerable{``0})
  commentId: M:Cqrs.Commands.ICommandPublisher`1.Publish``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: Publish<TCommand>(IEnumerable<TCommand>)
  nameWithType: ICommandPublisher<TAuthenticationToken>.Publish<TCommand>(IEnumerable<TCommand>)
  fullName: Cqrs.Commands.ICommandPublisher<TAuthenticationToken>.Publish<TCommand>(System.Collections.Generic.IEnumerable<TCommand>)
  nameWithType.vb: ICommandPublisher(Of TAuthenticationToken).Publish(Of TCommand)(IEnumerable(Of TCommand))
  fullName.vb: Cqrs.Commands.ICommandPublisher(Of TAuthenticationToken).Publish(Of TCommand)(System.Collections.Generic.IEnumerable(Of TCommand))
  name.vb: Publish(Of TCommand)(IEnumerable(Of TCommand))
  spec.csharp:
  - uid: Cqrs.Commands.ICommandPublisher`1.Publish``1(System.Collections.Generic.IEnumerable{``0})
    name: Publish<TCommand>
    nameWithType: ICommandPublisher<TAuthenticationToken>.Publish<TCommand>
    fullName: Cqrs.Commands.ICommandPublisher<TAuthenticationToken>.Publish<TCommand>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Commands.ICommandPublisher`1.Publish``1(System.Collections.Generic.IEnumerable{``0})
    name: Publish(Of TCommand)
    nameWithType: ICommandPublisher(Of TAuthenticationToken).Publish(Of TCommand)
    fullName: Cqrs.Commands.ICommandPublisher(Of TAuthenticationToken).Publish(Of TCommand)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Commands.IPublishAndWaitCommandPublisher`1
  commentId: T:Cqrs.Commands.IPublishAndWaitCommandPublisher`1
  isExternal: false
  name: IPublishAndWaitCommandPublisher<TAuthenticationToken>
  nameWithType: IPublishAndWaitCommandPublisher<TAuthenticationToken>
  fullName: Cqrs.Commands.IPublishAndWaitCommandPublisher<TAuthenticationToken>
  nameWithType.vb: IPublishAndWaitCommandPublisher(Of TAuthenticationToken)
  fullName.vb: Cqrs.Commands.IPublishAndWaitCommandPublisher(Of TAuthenticationToken)
  name.vb: IPublishAndWaitCommandPublisher(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Commands.IPublishAndWaitCommandPublisher`1
    name: IPublishAndWaitCommandPublisher
    nameWithType: IPublishAndWaitCommandPublisher
    fullName: Cqrs.Commands.IPublishAndWaitCommandPublisher
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Commands.IPublishAndWaitCommandPublisher`1
    name: IPublishAndWaitCommandPublisher
    nameWithType: IPublishAndWaitCommandPublisher
    fullName: Cqrs.Commands.IPublishAndWaitCommandPublisher
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Commands
  commentId: N:Cqrs.Commands
  isExternal: false
  name: Cqrs.Commands
  nameWithType: Cqrs.Commands
  fullName: Cqrs.Commands
- uid: Cqrs.Commands.ICommandPublisher`1
  commentId: T:Cqrs.Commands.ICommandPublisher`1
  isExternal: false
  name: ICommandPublisher<TAuthenticationToken>
  nameWithType: ICommandPublisher<TAuthenticationToken>
  fullName: Cqrs.Commands.ICommandPublisher<TAuthenticationToken>
  nameWithType.vb: ICommandPublisher(Of TAuthenticationToken)
  fullName.vb: Cqrs.Commands.ICommandPublisher(Of TAuthenticationToken)
  name.vb: ICommandPublisher(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Commands.ICommandPublisher`1
    name: ICommandPublisher
    nameWithType: ICommandPublisher
    fullName: Cqrs.Commands.ICommandPublisher
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Commands.ICommandPublisher`1
    name: ICommandPublisher
    nameWithType: ICommandPublisher
    fullName: Cqrs.Commands.ICommandPublisher
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
