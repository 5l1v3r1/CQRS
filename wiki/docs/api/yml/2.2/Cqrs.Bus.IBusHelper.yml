### YamlMime:ManagedReference
items:
- uid: Cqrs.Bus.IBusHelper
  commentId: T:Cqrs.Bus.IBusHelper
  id: IBusHelper
  parent: Cqrs.Bus
  children:
  - Cqrs.Bus.IBusHelper.BuildActionHandler``1(System.Action{``0},System.Boolean)
  - Cqrs.Bus.IBusHelper.BuildTelemeteredActionHandler``2(cdmdotnet.Logging.ITelemetryHelper,System.Action{``0},System.Boolean,System.String)
  - Cqrs.Bus.IBusHelper.IsEventRequired(System.String)
  - Cqrs.Bus.IBusHelper.IsEventRequired(System.Type)
  langs:
  - csharp
  - vb
  name: IBusHelper
  nameWithType: IBusHelper
  fullName: Cqrs.Bus.IBusHelper
  type: Interface
  source:
    remote:
      path: Framework/Cqrs/Bus/IBusHelper.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: IBusHelper
    path: Framework/Cqrs/Bus/IBusHelper.cs
    startLine: 18
  assemblies:
  - Cqrs
  namespace: Cqrs.Bus
  summary: "\nA helper for command and event buses.\n"
  example: []
  syntax:
    content: public interface IBusHelper
    content.vb: Public Interface IBusHelper
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Cqrs.Bus.IBusHelper.IsEventRequired(System.Type)
  commentId: M:Cqrs.Bus.IBusHelper.IsEventRequired(System.Type)
  id: IsEventRequired(System.Type)
  parent: Cqrs.Bus.IBusHelper
  langs:
  - csharp
  - vb
  name: IsEventRequired(Type)
  nameWithType: IBusHelper.IsEventRequired(Type)
  fullName: Cqrs.Bus.IBusHelper.IsEventRequired(System.Type)
  type: Method
  source:
    remote:
      path: Framework/Cqrs/Bus/IBusHelper.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: IsEventRequired
    path: Framework/Cqrs/Bus/IBusHelper.cs
    startLine: 26
  assemblies:
  - Cqrs
  namespace: Cqrs.Bus
  summary: "\nChecks if a white-list or black-list approach is taken, then checks the <xref href=\"Cqrs.Configuration.IConfigurationManager\" data-throw-if-not-resolved=\"false\"></xref> to see if a key exists defining if the event is required or not.\nIf the event is required and it cannot be resolved, an error will be raised.\nOtherwise the event will be marked as processed.\n"
  example: []
  syntax:
    content: bool IsEventRequired(Type messageType)
    parameters:
    - id: messageType
      type: System.Type
      description: The <xref href="System.Type" data-throw-if-not-resolved="false"></xref> of the message being processed.
    return:
      type: System.Boolean
    content.vb: Function IsEventRequired(messageType As Type) As Boolean
  overload: Cqrs.Bus.IBusHelper.IsEventRequired*
- uid: Cqrs.Bus.IBusHelper.IsEventRequired(System.String)
  commentId: M:Cqrs.Bus.IBusHelper.IsEventRequired(System.String)
  id: IsEventRequired(System.String)
  parent: Cqrs.Bus.IBusHelper
  langs:
  - csharp
  - vb
  name: IsEventRequired(String)
  nameWithType: IBusHelper.IsEventRequired(String)
  fullName: Cqrs.Bus.IBusHelper.IsEventRequired(System.String)
  type: Method
  source:
    remote:
      path: Framework/Cqrs/Bus/IBusHelper.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: IsEventRequired
    path: Framework/Cqrs/Bus/IBusHelper.cs
    startLine: 34
  assemblies:
  - Cqrs
  namespace: Cqrs.Bus
  summary: "\nChecks if a white-list or black-list approach is taken, then checks the <xref href=\"Cqrs.Configuration.IConfigurationManager\" data-throw-if-not-resolved=\"false\"></xref> to see if a key exists defining if the event is required or not.\nIf the event is required and it cannot be resolved, an error will be raised.\nOtherwise the event will be marked as processed.\n"
  example: []
  syntax:
    content: bool IsEventRequired(string configurationKey)
    parameters:
    - id: configurationKey
      type: System.String
      description: The configuration key to check.
    return:
      type: System.Boolean
    content.vb: Function IsEventRequired(configurationKey As String) As Boolean
  overload: Cqrs.Bus.IBusHelper.IsEventRequired*
- uid: Cqrs.Bus.IBusHelper.BuildTelemeteredActionHandler``2(cdmdotnet.Logging.ITelemetryHelper,System.Action{``0},System.Boolean,System.String)
  commentId: M:Cqrs.Bus.IBusHelper.BuildTelemeteredActionHandler``2(cdmdotnet.Logging.ITelemetryHelper,System.Action{``0},System.Boolean,System.String)
  id: BuildTelemeteredActionHandler``2(cdmdotnet.Logging.ITelemetryHelper,System.Action{``0},System.Boolean,System.String)
  parent: Cqrs.Bus.IBusHelper
  langs:
  - csharp
  - vb
  name: BuildTelemeteredActionHandler<TMessage, TAuthenticationToken>(ITelemetryHelper, Action<TMessage>, Boolean, String)
  nameWithType: IBusHelper.BuildTelemeteredActionHandler<TMessage, TAuthenticationToken>(ITelemetryHelper, Action<TMessage>, Boolean, String)
  fullName: Cqrs.Bus.IBusHelper.BuildTelemeteredActionHandler<TMessage, TAuthenticationToken>(cdmdotnet.Logging.ITelemetryHelper, System.Action<TMessage>, System.Boolean, System.String)
  type: Method
  source:
    remote:
      path: Framework/Cqrs/Bus/IBusHelper.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: BuildTelemeteredActionHandler
    path: Framework/Cqrs/Bus/IBusHelper.cs
    startLine: 39
  assemblies:
  - Cqrs
  namespace: Cqrs.Bus
  summary: "\nBuild a message handler that implements telemetry capturing as well as off thread handling.\n"
  example: []
  syntax:
    content: 'Action<TMessage> BuildTelemeteredActionHandler<TMessage, TAuthenticationToken>(ITelemetryHelper telemetryHelper, Action<TMessage> handler, bool holdMessageLock, string source)where TMessage : IMessage'
    parameters:
    - id: telemetryHelper
      type: cdmdotnet.Logging.ITelemetryHelper
    - id: handler
      type: System.Action{{TMessage}}
    - id: holdMessageLock
      type: System.Boolean
    - id: source
      type: System.String
    typeParameters:
    - id: TMessage
    - id: TAuthenticationToken
    return:
      type: System.Action{{TMessage}}
    content.vb: Function BuildTelemeteredActionHandler(Of TMessage As IMessage, TAuthenticationToken)(telemetryHelper As ITelemetryHelper, handler As Action(Of TMessage), holdMessageLock As Boolean, source As String) As Action(Of TMessage)
  overload: Cqrs.Bus.IBusHelper.BuildTelemeteredActionHandler*
  nameWithType.vb: IBusHelper.BuildTelemeteredActionHandler(Of TMessage, TAuthenticationToken)(ITelemetryHelper, Action(Of TMessage), Boolean, String)
  fullName.vb: Cqrs.Bus.IBusHelper.BuildTelemeteredActionHandler(Of TMessage, TAuthenticationToken)(cdmdotnet.Logging.ITelemetryHelper, System.Action(Of TMessage), System.Boolean, System.String)
  name.vb: BuildTelemeteredActionHandler(Of TMessage, TAuthenticationToken)(ITelemetryHelper, Action(Of TMessage), Boolean, String)
- uid: Cqrs.Bus.IBusHelper.BuildActionHandler``1(System.Action{``0},System.Boolean)
  commentId: M:Cqrs.Bus.IBusHelper.BuildActionHandler``1(System.Action{``0},System.Boolean)
  id: BuildActionHandler``1(System.Action{``0},System.Boolean)
  parent: Cqrs.Bus.IBusHelper
  langs:
  - csharp
  - vb
  name: BuildActionHandler<TMessage>(Action<TMessage>, Boolean)
  nameWithType: IBusHelper.BuildActionHandler<TMessage>(Action<TMessage>, Boolean)
  fullName: Cqrs.Bus.IBusHelper.BuildActionHandler<TMessage>(System.Action<TMessage>, System.Boolean)
  type: Method
  source:
    remote:
      path: Framework/Cqrs/Bus/IBusHelper.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: BuildActionHandler
    path: Framework/Cqrs/Bus/IBusHelper.cs
    startLine: 45
  assemblies:
  - Cqrs
  namespace: Cqrs.Bus
  summary: "\nBuild a message handler that implements telemetry capturing as well as off thread handling.\n"
  example: []
  syntax:
    content: 'Action<TMessage> BuildActionHandler<TMessage>(Action<TMessage> handler, bool holdMessageLock)where TMessage : IMessage'
    parameters:
    - id: handler
      type: System.Action{{TMessage}}
    - id: holdMessageLock
      type: System.Boolean
    typeParameters:
    - id: TMessage
    return:
      type: System.Action{{TMessage}}
    content.vb: Function BuildActionHandler(Of TMessage As IMessage)(handler As Action(Of TMessage), holdMessageLock As Boolean) As Action(Of TMessage)
  overload: Cqrs.Bus.IBusHelper.BuildActionHandler*
  nameWithType.vb: IBusHelper.BuildActionHandler(Of TMessage)(Action(Of TMessage), Boolean)
  fullName.vb: Cqrs.Bus.IBusHelper.BuildActionHandler(Of TMessage)(System.Action(Of TMessage), System.Boolean)
  name.vb: BuildActionHandler(Of TMessage)(Action(Of TMessage), Boolean)
references:
- uid: Cqrs.Bus
  commentId: N:Cqrs.Bus
  isExternal: false
  name: Cqrs.Bus
  nameWithType: Cqrs.Bus
  fullName: Cqrs.Bus
- uid: Cqrs.Configuration.IConfigurationManager
  commentId: T:Cqrs.Configuration.IConfigurationManager
  parent: Cqrs.Configuration
  isExternal: false
  name: IConfigurationManager
  nameWithType: IConfigurationManager
  fullName: Cqrs.Configuration.IConfigurationManager
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Cqrs.Bus.IBusHelper.IsEventRequired*
  commentId: Overload:Cqrs.Bus.IBusHelper.IsEventRequired
  isExternal: false
  name: IsEventRequired
  nameWithType: IBusHelper.IsEventRequired
  fullName: Cqrs.Bus.IBusHelper.IsEventRequired
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Cqrs.Configuration
  commentId: N:Cqrs.Configuration
  isExternal: false
  name: Cqrs.Configuration
  nameWithType: Cqrs.Configuration
  fullName: Cqrs.Configuration
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Cqrs.Bus.IBusHelper.BuildTelemeteredActionHandler*
  commentId: Overload:Cqrs.Bus.IBusHelper.BuildTelemeteredActionHandler
  isExternal: false
  name: BuildTelemeteredActionHandler
  nameWithType: IBusHelper.BuildTelemeteredActionHandler
  fullName: Cqrs.Bus.IBusHelper.BuildTelemeteredActionHandler
- uid: cdmdotnet.Logging.ITelemetryHelper
  commentId: T:cdmdotnet.Logging.ITelemetryHelper
  parent: cdmdotnet.Logging
  isExternal: true
  name: ITelemetryHelper
  nameWithType: ITelemetryHelper
  fullName: cdmdotnet.Logging.ITelemetryHelper
- uid: System.Action{{TMessage}}
  commentId: T:System.Action{``0}
  parent: System
  definition: System.Action`1
  name: Action<TMessage>
  nameWithType: Action<TMessage>
  fullName: System.Action<TMessage>
  nameWithType.vb: Action(Of TMessage)
  fullName.vb: System.Action(Of TMessage)
  name.vb: Action(Of TMessage)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TMessage
    nameWithType: TMessage
    fullName: TMessage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TMessage
    nameWithType: TMessage
    fullName: TMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: cdmdotnet.Logging
  commentId: N:cdmdotnet.Logging
  isExternal: false
  name: cdmdotnet.Logging
  nameWithType: cdmdotnet.Logging
  fullName: cdmdotnet.Logging
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Bus.IBusHelper.BuildActionHandler*
  commentId: Overload:Cqrs.Bus.IBusHelper.BuildActionHandler
  isExternal: false
  name: BuildActionHandler
  nameWithType: IBusHelper.BuildActionHandler
  fullName: Cqrs.Bus.IBusHelper.BuildActionHandler
