<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classCqrs_1_1Tests_1_1Domain_1_1When__getting__an__aggregate" kind="class" prot="public">
    <compoundname>Cqrs::Tests::Domain::When_getting_an_aggregate</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classCqrs_1_1Tests_1_1Domain_1_1When__getting__an__aggregate_a34b9adeca0b51e924d05f4ca94c48812_1a34b9adeca0b51e924d05f4ca94c48812" prot="private" static="no" mutable="no">
        <type>IUnitOfWork&lt; <ref refid="interfaceCqrs_1_1Authentication_1_1ISingleSignOnToken" kindref="compound">ISingleSignOnToken</ref> &gt;</type>
        <definition>IUnitOfWork&lt;ISingleSignOnToken&gt; Cqrs.Tests.Domain.When_getting_an_aggregate._unitOfWork</definition>
        <argsstring></argsstring>
        <name>_unitOfWork</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs.Tests/Domain/Aggregates/When_getting_an_aggregate.cs" line="15" column="1" bodyfile="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs.Tests/Domain/Aggregates/When_getting_an_aggregate.cs" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCqrs_1_1Tests_1_1Domain_1_1When__getting__an__aggregate_aba3005309f00d15548c524ec224291fe_1aba3005309f00d15548c524ec224291fe" prot="private" static="no" mutable="no">
        <type><ref refid="classCqrs_1_1Tests_1_1Substitutes_1_1TestDependencyResolver" kindref="compound">TestDependencyResolver</ref></type>
        <definition>TestDependencyResolver Cqrs.Tests.Domain.When_getting_an_aggregate._dependencyResolver</definition>
        <argsstring></argsstring>
        <name>_dependencyResolver</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs.Tests/Domain/Aggregates/When_getting_an_aggregate.cs" line="17" column="1" bodyfile="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs.Tests/Domain/Aggregates/When_getting_an_aggregate.cs" bodystart="17" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classCqrs_1_1Tests_1_1Domain_1_1When__getting__an__aggregate_a17e6e5fee963f1be91d116e16f010fdb_1a17e6e5fee963f1be91d116e16f010fdb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Cqrs.Tests.Domain.When_getting_an_aggregate.Setup</definition>
        <argsstring>()</argsstring>
        <name>Setup</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs.Tests/Domain/Aggregates/When_getting_an_aggregate.cs" line="20" column="1" bodyfile="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs.Tests/Domain/Aggregates/When_getting_an_aggregate.cs" bodystart="20" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Tests_1_1Domain_1_1When__getting__an__aggregate_a8567c3c63d43386e34601e2f760fdea6_1a8567c3c63d43386e34601e2f760fdea6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Cqrs.Tests.Domain.When_getting_an_aggregate.Should_get_aggregate_from_eventstore</definition>
        <argsstring>()</argsstring>
        <name>Should_get_aggregate_from_eventstore</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs.Tests/Domain/Aggregates/When_getting_an_aggregate.cs" line="30" column="1" bodyfile="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs.Tests/Domain/Aggregates/When_getting_an_aggregate.cs" bodystart="30" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Tests_1_1Domain_1_1When__getting__an__aggregate_a7dac44c94e1139f61b9689d8ef57f924_1a7dac44c94e1139f61b9689d8ef57f924" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Cqrs.Tests.Domain.When_getting_an_aggregate.Should_apply_events</definition>
        <argsstring>()</argsstring>
        <name>Should_apply_events</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs.Tests/Domain/Aggregates/When_getting_an_aggregate.cs" line="38" column="1" bodyfile="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs.Tests/Domain/Aggregates/When_getting_an_aggregate.cs" bodystart="38" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Tests_1_1Domain_1_1When__getting__an__aggregate_abffb22b1af3fdb7005cd27477aaa8b03_1abffb22b1af3fdb7005cd27477aaa8b03" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Cqrs.Tests.Domain.When_getting_an_aggregate.Should_fail_if_aggregate_do_not_exist</definition>
        <argsstring>()</argsstring>
        <name>Should_fail_if_aggregate_do_not_exist</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs.Tests/Domain/Aggregates/When_getting_an_aggregate.cs" line="45" column="1" bodyfile="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs.Tests/Domain/Aggregates/When_getting_an_aggregate.cs" bodystart="45" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Tests_1_1Domain_1_1When__getting__an__aggregate_a6dc0bedf2d67b0a6bc84afa023815464_1a6dc0bedf2d67b0a6bc84afa023815464" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Cqrs.Tests.Domain.When_getting_an_aggregate.Should_track_changes</definition>
        <argsstring>()</argsstring>
        <name>Should_track_changes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs.Tests/Domain/Aggregates/When_getting_an_aggregate.cs" line="52" column="1" bodyfile="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs.Tests/Domain/Aggregates/When_getting_an_aggregate.cs" bodystart="52" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Tests_1_1Domain_1_1When__getting__an__aggregate_ab19bbe152359e6370a1395f71aea851b_1ab19bbe152359e6370a1395f71aea851b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Cqrs.Tests.Domain.When_getting_an_aggregate.Should_get_from_session_if_tracked</definition>
        <argsstring>()</argsstring>
        <name>Should_get_from_session_if_tracked</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs.Tests/Domain/Aggregates/When_getting_an_aggregate.cs" line="61" column="1" bodyfile="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs.Tests/Domain/Aggregates/When_getting_an_aggregate.cs" bodystart="61" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Tests_1_1Domain_1_1When__getting__an__aggregate_a82cc413f6fb26f7b47dc274dc01dbcf3_1a82cc413f6fb26f7b47dc274dc01dbcf3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Cqrs.Tests.Domain.When_getting_an_aggregate.Should_throw_concurrency_exception_if_tracked</definition>
        <argsstring>()</argsstring>
        <name>Should_throw_concurrency_exception_if_tracked</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs.Tests/Domain/Aggregates/When_getting_an_aggregate.cs" line="72" column="1" bodyfile="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs.Tests/Domain/Aggregates/When_getting_an_aggregate.cs" bodystart="72" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Tests_1_1Domain_1_1When__getting__an__aggregate_a6160a2d5764a545d0bbd1ad084fa3a4e_1a6160a2d5764a545d0bbd1ad084fa3a4e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Cqrs.Tests.Domain.When_getting_an_aggregate.Should_get_correct_version</definition>
        <argsstring>()</argsstring>
        <name>Should_get_correct_version</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs.Tests/Domain/Aggregates/When_getting_an_aggregate.cs" line="81" column="1" bodyfile="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs.Tests/Domain/Aggregates/When_getting_an_aggregate.cs" bodystart="81" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Tests_1_1Domain_1_1When__getting__an__aggregate_a855326fe351727f2aa5550de24f553ab_1a855326fe351727f2aa5550de24f553ab" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Cqrs.Tests.Domain.When_getting_an_aggregate.Should_throw_concurrency_exception</definition>
        <argsstring>()</argsstring>
        <name>Should_throw_concurrency_exception</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs.Tests/Domain/Aggregates/When_getting_an_aggregate.cs" line="90" column="1" bodyfile="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs.Tests/Domain/Aggregates/When_getting_an_aggregate.cs" bodystart="90" bodyend="94"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs.Tests/Domain/Aggregates/When_getting_an_aggregate.cs" line="14" column="1" bodyfile="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs.Tests/Domain/Aggregates/When_getting_an_aggregate.cs" bodystart="13" bodyend="95"/>
    <listofallmembers>
      <member refid="classCqrs_1_1Tests_1_1Domain_1_1When__getting__an__aggregate_aba3005309f00d15548c524ec224291fe_1aba3005309f00d15548c524ec224291fe" prot="private" virt="non-virtual"><scope>Cqrs::Tests::Domain::When_getting_an_aggregate</scope><name>_dependencyResolver</name></member>
      <member refid="classCqrs_1_1Tests_1_1Domain_1_1When__getting__an__aggregate_a34b9adeca0b51e924d05f4ca94c48812_1a34b9adeca0b51e924d05f4ca94c48812" prot="private" virt="non-virtual"><scope>Cqrs::Tests::Domain::When_getting_an_aggregate</scope><name>_unitOfWork</name></member>
      <member refid="classCqrs_1_1Tests_1_1Domain_1_1When__getting__an__aggregate_a17e6e5fee963f1be91d116e16f010fdb_1a17e6e5fee963f1be91d116e16f010fdb" prot="public" virt="non-virtual"><scope>Cqrs::Tests::Domain::When_getting_an_aggregate</scope><name>Setup</name></member>
      <member refid="classCqrs_1_1Tests_1_1Domain_1_1When__getting__an__aggregate_a7dac44c94e1139f61b9689d8ef57f924_1a7dac44c94e1139f61b9689d8ef57f924" prot="public" virt="non-virtual"><scope>Cqrs::Tests::Domain::When_getting_an_aggregate</scope><name>Should_apply_events</name></member>
      <member refid="classCqrs_1_1Tests_1_1Domain_1_1When__getting__an__aggregate_abffb22b1af3fdb7005cd27477aaa8b03_1abffb22b1af3fdb7005cd27477aaa8b03" prot="public" virt="non-virtual"><scope>Cqrs::Tests::Domain::When_getting_an_aggregate</scope><name>Should_fail_if_aggregate_do_not_exist</name></member>
      <member refid="classCqrs_1_1Tests_1_1Domain_1_1When__getting__an__aggregate_a8567c3c63d43386e34601e2f760fdea6_1a8567c3c63d43386e34601e2f760fdea6" prot="public" virt="non-virtual"><scope>Cqrs::Tests::Domain::When_getting_an_aggregate</scope><name>Should_get_aggregate_from_eventstore</name></member>
      <member refid="classCqrs_1_1Tests_1_1Domain_1_1When__getting__an__aggregate_a6160a2d5764a545d0bbd1ad084fa3a4e_1a6160a2d5764a545d0bbd1ad084fa3a4e" prot="public" virt="non-virtual"><scope>Cqrs::Tests::Domain::When_getting_an_aggregate</scope><name>Should_get_correct_version</name></member>
      <member refid="classCqrs_1_1Tests_1_1Domain_1_1When__getting__an__aggregate_ab19bbe152359e6370a1395f71aea851b_1ab19bbe152359e6370a1395f71aea851b" prot="public" virt="non-virtual"><scope>Cqrs::Tests::Domain::When_getting_an_aggregate</scope><name>Should_get_from_session_if_tracked</name></member>
      <member refid="classCqrs_1_1Tests_1_1Domain_1_1When__getting__an__aggregate_a855326fe351727f2aa5550de24f553ab_1a855326fe351727f2aa5550de24f553ab" prot="public" virt="non-virtual"><scope>Cqrs::Tests::Domain::When_getting_an_aggregate</scope><name>Should_throw_concurrency_exception</name></member>
      <member refid="classCqrs_1_1Tests_1_1Domain_1_1When__getting__an__aggregate_a82cc413f6fb26f7b47dc274dc01dbcf3_1a82cc413f6fb26f7b47dc274dc01dbcf3" prot="public" virt="non-virtual"><scope>Cqrs::Tests::Domain::When_getting_an_aggregate</scope><name>Should_throw_concurrency_exception_if_tracked</name></member>
      <member refid="classCqrs_1_1Tests_1_1Domain_1_1When__getting__an__aggregate_a6dc0bedf2d67b0a6bc84afa023815464_1a6dc0bedf2d67b0a6bc84afa023815464" prot="public" virt="non-virtual"><scope>Cqrs::Tests::Domain::When_getting_an_aggregate</scope><name>Should_track_changes</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
