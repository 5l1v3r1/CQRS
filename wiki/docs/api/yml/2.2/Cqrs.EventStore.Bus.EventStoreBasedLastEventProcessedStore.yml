### YamlMime:ManagedReference
items:
- uid: Cqrs.EventStore.Bus.EventStoreBasedLastEventProcessedStore
  commentId: T:Cqrs.EventStore.Bus.EventStoreBasedLastEventProcessedStore
  id: EventStoreBasedLastEventProcessedStore
  parent: Cqrs.EventStore.Bus
  children:
  - Cqrs.EventStore.Bus.EventStoreBasedLastEventProcessedStore.#ctor(EventStore.ClientAPI.IEventStoreConnection)
  - Cqrs.EventStore.Bus.EventStoreBasedLastEventProcessedStore.EventLocation
  - Cqrs.EventStore.Bus.EventStoreBasedLastEventProcessedStore.EventsProcessedStreamName
  - Cqrs.EventStore.Bus.EventStoreBasedLastEventProcessedStore.EventStoreConnection
  - Cqrs.EventStore.Bus.EventStoreBasedLastEventProcessedStore.EventType
  langs:
  - csharp
  - vb
  name: EventStoreBasedLastEventProcessedStore
  nameWithType: EventStoreBasedLastEventProcessedStore
  fullName: Cqrs.EventStore.Bus.EventStoreBasedLastEventProcessedStore
  type: Class
  source:
    remote:
      path: Framework/Cqrs.EventStore/Bus/EventStoreBasedLastEventProcessedStore.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: EventStoreBasedLastEventProcessedStore
    path: Framework/Cqrs.EventStore/Bus/EventStoreBasedLastEventProcessedStore.cs
    startLine: 17
  assemblies:
  - Cqrs.EventStore
  namespace: Cqrs.EventStore.Bus
  summary: "\nIndicates the position in store where the stream has been read up to.\n"
  example: []
  syntax:
    content: 'public class EventStoreBasedLastEventProcessedStore : IStoreLastEventProcessed'
    content.vb: >-
      Public Class EventStoreBasedLastEventProcessedStore
          Implements IStoreLastEventProcessed
  inheritance:
  - System.Object
  implements:
  - Cqrs.Bus.IStoreLastEventProcessed
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Cqrs.EventStore.Bus.EventStoreBasedLastEventProcessedStore.EventsProcessedStreamName
  commentId: F:Cqrs.EventStore.Bus.EventStoreBasedLastEventProcessedStore.EventsProcessedStreamName
  id: EventsProcessedStreamName
  parent: Cqrs.EventStore.Bus.EventStoreBasedLastEventProcessedStore
  langs:
  - csharp
  - vb
  name: EventsProcessedStreamName
  nameWithType: EventStoreBasedLastEventProcessedStore.EventsProcessedStreamName
  fullName: Cqrs.EventStore.Bus.EventStoreBasedLastEventProcessedStore.EventsProcessedStreamName
  type: Field
  source:
    remote:
      path: Framework/Cqrs.EventStore/Bus/EventStoreBasedLastEventProcessedStore.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: EventsProcessedStreamName
    path: Framework/Cqrs.EventStore/Bus/EventStoreBasedLastEventProcessedStore.cs
    startLine: 22
  assemblies:
  - Cqrs.EventStore
  namespace: Cqrs.EventStore.Bus
  summary: "\nThe name of the event stream use to store the position/location information.\n"
  example: []
  syntax:
    content: public const string EventsProcessedStreamName = "EventsProcessed"
    return:
      type: System.String
    content.vb: Public Const EventsProcessedStreamName As String = "EventsProcessed"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Cqrs.EventStore.Bus.EventStoreBasedLastEventProcessedStore.EventType
  commentId: F:Cqrs.EventStore.Bus.EventStoreBasedLastEventProcessedStore.EventType
  id: EventType
  parent: Cqrs.EventStore.Bus.EventStoreBasedLastEventProcessedStore
  langs:
  - csharp
  - vb
  name: EventType
  nameWithType: EventStoreBasedLastEventProcessedStore.EventType
  fullName: Cqrs.EventStore.Bus.EventStoreBasedLastEventProcessedStore.EventType
  type: Field
  source:
    remote:
      path: Framework/Cqrs.EventStore/Bus/EventStoreBasedLastEventProcessedStore.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: EventType
    path: Framework/Cqrs.EventStore/Bus/EventStoreBasedLastEventProcessedStore.cs
    startLine: 27
  assemblies:
  - Cqrs.EventStore
  namespace: Cqrs.EventStore.Bus
  summary: "\nThe name of the event type we use in the event stream to store the position/location information.\n"
  example: []
  syntax:
    content: public const string EventType = "ProcessedEvent"
    return:
      type: System.String
    content.vb: Public Const EventType As String = "ProcessedEvent"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Cqrs.EventStore.Bus.EventStoreBasedLastEventProcessedStore.EventStoreConnection
  commentId: P:Cqrs.EventStore.Bus.EventStoreBasedLastEventProcessedStore.EventStoreConnection
  id: EventStoreConnection
  parent: Cqrs.EventStore.Bus.EventStoreBasedLastEventProcessedStore
  langs:
  - csharp
  - vb
  name: EventStoreConnection
  nameWithType: EventStoreBasedLastEventProcessedStore.EventStoreConnection
  fullName: Cqrs.EventStore.Bus.EventStoreBasedLastEventProcessedStore.EventStoreConnection
  type: Property
  source:
    remote:
      path: Framework/Cqrs.EventStore/Bus/EventStoreBasedLastEventProcessedStore.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: EventStoreConnection
    path: Framework/Cqrs.EventStore/Bus/EventStoreBasedLastEventProcessedStore.cs
    startLine: 32
  assemblies:
  - Cqrs.EventStore
  namespace: Cqrs.EventStore.Bus
  summary: "\nThe <xref href=\"EventStore.ClientAPI.IEventStoreConnection\" data-throw-if-not-resolved=\"false\"></xref> used to read and write streams in the Greg Young Event Store.\n"
  example: []
  syntax:
    content: protected IEventStoreConnection EventStoreConnection { get; }
    parameters: []
    return:
      type: EventStore.ClientAPI.IEventStoreConnection
    content.vb: Protected ReadOnly Property EventStoreConnection As IEventStoreConnection
  overload: Cqrs.EventStore.Bus.EventStoreBasedLastEventProcessedStore.EventStoreConnection*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Cqrs.EventStore.Bus.EventStoreBasedLastEventProcessedStore.#ctor(EventStore.ClientAPI.IEventStoreConnection)
  commentId: M:Cqrs.EventStore.Bus.EventStoreBasedLastEventProcessedStore.#ctor(EventStore.ClientAPI.IEventStoreConnection)
  id: '#ctor(EventStore.ClientAPI.IEventStoreConnection)'
  parent: Cqrs.EventStore.Bus.EventStoreBasedLastEventProcessedStore
  langs:
  - csharp
  - vb
  name: EventStoreBasedLastEventProcessedStore(IEventStoreConnection)
  nameWithType: EventStoreBasedLastEventProcessedStore.EventStoreBasedLastEventProcessedStore(IEventStoreConnection)
  fullName: Cqrs.EventStore.Bus.EventStoreBasedLastEventProcessedStore.EventStoreBasedLastEventProcessedStore(EventStore.ClientAPI.IEventStoreConnection)
  type: Constructor
  source:
    remote:
      path: Framework/Cqrs.EventStore/Bus/EventStoreBasedLastEventProcessedStore.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: .ctor
    path: Framework/Cqrs.EventStore/Bus/EventStoreBasedLastEventProcessedStore.cs
    startLine: 38
  assemblies:
  - Cqrs.EventStore
  namespace: Cqrs.EventStore.Bus
  summary: "\nInstantiates a new instance of <xref href=\"Cqrs.EventStore.Bus.EventStoreBasedLastEventProcessedStore\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public EventStoreBasedLastEventProcessedStore(IEventStoreConnection eventStoreConnection)
    parameters:
    - id: eventStoreConnection
      type: EventStore.ClientAPI.IEventStoreConnection
      description: The <xref href="EventStore.ClientAPI.IEventStoreConnection" data-throw-if-not-resolved="false"></xref> used to read streams.
    content.vb: Public Sub New(eventStoreConnection As IEventStoreConnection)
  overload: Cqrs.EventStore.Bus.EventStoreBasedLastEventProcessedStore.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Cqrs.EventStore.Bus.EventStoreBasedLastEventProcessedStore.EventLocation
  commentId: P:Cqrs.EventStore.Bus.EventStoreBasedLastEventProcessedStore.EventLocation
  id: EventLocation
  parent: Cqrs.EventStore.Bus.EventStoreBasedLastEventProcessedStore
  langs:
  - csharp
  - vb
  name: EventLocation
  nameWithType: EventStoreBasedLastEventProcessedStore.EventLocation
  fullName: Cqrs.EventStore.Bus.EventStoreBasedLastEventProcessedStore.EventLocation
  type: Property
  source:
    remote:
      path: Framework/Cqrs.EventStore/Bus/EventStoreBasedLastEventProcessedStore.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: EventLocation
    path: Framework/Cqrs.EventStore/Bus/EventStoreBasedLastEventProcessedStore.cs
    startLine: 51
  assemblies:
  - Cqrs.EventStore
  namespace: Cqrs.EventStore.Bus
  summary: "\nThe location within the store where the stream has been read up to.\n"
  example: []
  syntax:
    content: public string EventLocation { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property EventLocation As String
  overload: Cqrs.EventStore.Bus.EventStoreBasedLastEventProcessedStore.EventLocation*
  implements:
  - Cqrs.Bus.IStoreLastEventProcessed.EventLocation
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Cqrs.EventStore.Bus
  commentId: N:Cqrs.EventStore.Bus
  isExternal: false
  name: Cqrs.EventStore.Bus
  nameWithType: Cqrs.EventStore.Bus
  fullName: Cqrs.EventStore.Bus
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Cqrs.Bus.IStoreLastEventProcessed
  commentId: T:Cqrs.Bus.IStoreLastEventProcessed
  parent: Cqrs.Bus
  isExternal: false
  name: IStoreLastEventProcessed
  nameWithType: IStoreLastEventProcessed
  fullName: Cqrs.Bus.IStoreLastEventProcessed
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Cqrs.Bus
  commentId: N:Cqrs.Bus
  isExternal: false
  name: Cqrs.Bus
  nameWithType: Cqrs.Bus
  fullName: Cqrs.Bus
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.ClientAPI.IEventStoreConnection
  commentId: T:EventStore.ClientAPI.IEventStoreConnection
  parent: EventStore.ClientAPI
  isExternal: true
  name: IEventStoreConnection
  nameWithType: IEventStoreConnection
  fullName: EventStore.ClientAPI.IEventStoreConnection
- uid: Cqrs.EventStore.Bus.EventStoreBasedLastEventProcessedStore.EventStoreConnection*
  commentId: Overload:Cqrs.EventStore.Bus.EventStoreBasedLastEventProcessedStore.EventStoreConnection
  isExternal: false
  name: EventStoreConnection
  nameWithType: EventStoreBasedLastEventProcessedStore.EventStoreConnection
  fullName: Cqrs.EventStore.Bus.EventStoreBasedLastEventProcessedStore.EventStoreConnection
- uid: EventStore.ClientAPI
  commentId: N:EventStore.ClientAPI
  isExternal: false
  name: EventStore.ClientAPI
  nameWithType: EventStore.ClientAPI
  fullName: EventStore.ClientAPI
- uid: Cqrs.EventStore.Bus.EventStoreBasedLastEventProcessedStore
  commentId: T:Cqrs.EventStore.Bus.EventStoreBasedLastEventProcessedStore
  isExternal: false
  name: EventStoreBasedLastEventProcessedStore
  nameWithType: EventStoreBasedLastEventProcessedStore
  fullName: Cqrs.EventStore.Bus.EventStoreBasedLastEventProcessedStore
- uid: Cqrs.EventStore.Bus.EventStoreBasedLastEventProcessedStore.#ctor*
  commentId: Overload:Cqrs.EventStore.Bus.EventStoreBasedLastEventProcessedStore.#ctor
  isExternal: false
  name: EventStoreBasedLastEventProcessedStore
  nameWithType: EventStoreBasedLastEventProcessedStore.EventStoreBasedLastEventProcessedStore
  fullName: Cqrs.EventStore.Bus.EventStoreBasedLastEventProcessedStore.EventStoreBasedLastEventProcessedStore
- uid: Cqrs.EventStore.Bus.EventStoreBasedLastEventProcessedStore.EventLocation*
  commentId: Overload:Cqrs.EventStore.Bus.EventStoreBasedLastEventProcessedStore.EventLocation
  isExternal: false
  name: EventLocation
  nameWithType: EventStoreBasedLastEventProcessedStore.EventLocation
  fullName: Cqrs.EventStore.Bus.EventStoreBasedLastEventProcessedStore.EventLocation
- uid: Cqrs.Bus.IStoreLastEventProcessed.EventLocation
  commentId: P:Cqrs.Bus.IStoreLastEventProcessed.EventLocation
  parent: Cqrs.Bus.IStoreLastEventProcessed
  isExternal: false
  name: EventLocation
  nameWithType: IStoreLastEventProcessed.EventLocation
  fullName: Cqrs.Bus.IStoreLastEventProcessed.EventLocation
