### YamlMime:ManagedReference
items:
- uid: Cqrs.WebApi.Events.Handlers.GlobalEventToHubProxy`1
  commentId: T:Cqrs.WebApi.Events.Handlers.GlobalEventToHubProxy`1
  id: GlobalEventToHubProxy`1
  parent: Cqrs.WebApi.Events.Handlers
  children:
  - Cqrs.WebApi.Events.Handlers.GlobalEventToHubProxy`1.#ctor(cdmdotnet.Logging.ILogger,Cqrs.WebApi.SignalR.Hubs.INotificationHub,Cqrs.Authentication.IAuthenticationTokenHelper{`0})
  - Cqrs.WebApi.Events.Handlers.GlobalEventToHubProxy`1.Handle(Cqrs.Events.IEvent{`0})
  langs:
  - csharp
  - vb
  name: GlobalEventToHubProxy<TAuthenticationToken>
  nameWithType: GlobalEventToHubProxy<TAuthenticationToken>
  fullName: Cqrs.WebApi.Events.Handlers.GlobalEventToHubProxy<TAuthenticationToken>
  type: Class
  source:
    remote:
      path: Framework/Cqrs.WebApi/Events/Handlers/GlobalEventToHubProxy.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: GlobalEventToHubProxy
    path: Framework/Cqrs.WebApi/Events/Handlers/GlobalEventToHubProxy.cs
    startLine: 15
  assemblies:
  - Cqrs.WebApi
  namespace: Cqrs.WebApi.Events.Handlers
  syntax:
    content: 'public class GlobalEventToHubProxy<TAuthenticationToken> : EventToHubProxy<TAuthenticationToken>, IEventHandler<TAuthenticationToken, IEvent<TAuthenticationToken>>, IMessageHandler<IEvent<TAuthenticationToken>>, IEventHandler, IHandler'
    typeParameters:
    - id: TAuthenticationToken
    content.vb: >-
      Public Class GlobalEventToHubProxy(Of TAuthenticationToken)
          Inherits EventToHubProxy(Of TAuthenticationToken)
          Implements IEventHandler(Of TAuthenticationToken, IEvent(Of TAuthenticationToken)), IMessageHandler(Of IEvent(Of TAuthenticationToken)), IEventHandler, IHandler
  inheritance:
  - System.Object
  - Cqrs.WebApi.Events.Handlers.EventToHubProxy{{TAuthenticationToken}}
  implements:
  - Cqrs.Events.IEventHandler{{TAuthenticationToken},Cqrs.Events.IEvent{{TAuthenticationToken}}}
  - Cqrs.Messages.IMessageHandler{Cqrs.Events.IEvent{{TAuthenticationToken}}}
  - Cqrs.Events.IEventHandler
  - Cqrs.Messages.IHandler
  inheritedMembers:
  - Cqrs.WebApi.Events.Handlers.EventToHubProxy{{TAuthenticationToken}}.Logger
  - Cqrs.WebApi.Events.Handlers.EventToHubProxy{{TAuthenticationToken}}.NotificationHub
  - Cqrs.WebApi.Events.Handlers.EventToHubProxy{{TAuthenticationToken}}.AuthenticationTokenHelper
  - Cqrs.WebApi.Events.Handlers.EventToHubProxy{{TAuthenticationToken}}.HandleGenericEvent(Cqrs.Events.IEvent{{TAuthenticationToken}})
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: GlobalEventToHubProxy(Of TAuthenticationToken)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Cqrs.WebApi.Events.Handlers.GlobalEventToHubProxy(Of TAuthenticationToken)
  name.vb: GlobalEventToHubProxy(Of TAuthenticationToken)
- uid: Cqrs.WebApi.Events.Handlers.GlobalEventToHubProxy`1.#ctor(cdmdotnet.Logging.ILogger,Cqrs.WebApi.SignalR.Hubs.INotificationHub,Cqrs.Authentication.IAuthenticationTokenHelper{`0})
  commentId: M:Cqrs.WebApi.Events.Handlers.GlobalEventToHubProxy`1.#ctor(cdmdotnet.Logging.ILogger,Cqrs.WebApi.SignalR.Hubs.INotificationHub,Cqrs.Authentication.IAuthenticationTokenHelper{`0})
  id: '#ctor(cdmdotnet.Logging.ILogger,Cqrs.WebApi.SignalR.Hubs.INotificationHub,Cqrs.Authentication.IAuthenticationTokenHelper{`0})'
  parent: Cqrs.WebApi.Events.Handlers.GlobalEventToHubProxy`1
  langs:
  - csharp
  - vb
  name: GlobalEventToHubProxy(ILogger, INotificationHub, IAuthenticationTokenHelper<TAuthenticationToken>)
  nameWithType: GlobalEventToHubProxy<TAuthenticationToken>.GlobalEventToHubProxy(ILogger, INotificationHub, IAuthenticationTokenHelper<TAuthenticationToken>)
  fullName: Cqrs.WebApi.Events.Handlers.GlobalEventToHubProxy<TAuthenticationToken>.GlobalEventToHubProxy(cdmdotnet.Logging.ILogger, Cqrs.WebApi.SignalR.Hubs.INotificationHub, Cqrs.Authentication.IAuthenticationTokenHelper<TAuthenticationToken>)
  type: Constructor
  source:
    remote:
      path: Framework/Cqrs.WebApi/Events/Handlers/GlobalEventToHubProxy.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: .ctor
    path: Framework/Cqrs.WebApi/Events/Handlers/GlobalEventToHubProxy.cs
    startLine: 19
  assemblies:
  - Cqrs.WebApi
  namespace: Cqrs.WebApi.Events.Handlers
  syntax:
    content: public GlobalEventToHubProxy(ILogger logger, INotificationHub notificationHub, IAuthenticationTokenHelper<TAuthenticationToken> authenticationTokenHelper)
    parameters:
    - id: logger
      type: cdmdotnet.Logging.ILogger
    - id: notificationHub
      type: Cqrs.WebApi.SignalR.Hubs.INotificationHub
    - id: authenticationTokenHelper
      type: Cqrs.Authentication.IAuthenticationTokenHelper{{TAuthenticationToken}}
    content.vb: Public Sub New(logger As ILogger, notificationHub As INotificationHub, authenticationTokenHelper As IAuthenticationTokenHelper(Of TAuthenticationToken))
  overload: Cqrs.WebApi.Events.Handlers.GlobalEventToHubProxy`1.#ctor*
  nameWithType.vb: GlobalEventToHubProxy(Of TAuthenticationToken).GlobalEventToHubProxy(ILogger, INotificationHub, IAuthenticationTokenHelper(Of TAuthenticationToken))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Cqrs.WebApi.Events.Handlers.GlobalEventToHubProxy(Of TAuthenticationToken).GlobalEventToHubProxy(cdmdotnet.Logging.ILogger, Cqrs.WebApi.SignalR.Hubs.INotificationHub, Cqrs.Authentication.IAuthenticationTokenHelper(Of TAuthenticationToken))
  name.vb: GlobalEventToHubProxy(ILogger, INotificationHub, IAuthenticationTokenHelper(Of TAuthenticationToken))
- uid: Cqrs.WebApi.Events.Handlers.GlobalEventToHubProxy`1.Handle(Cqrs.Events.IEvent{`0})
  commentId: M:Cqrs.WebApi.Events.Handlers.GlobalEventToHubProxy`1.Handle(Cqrs.Events.IEvent{`0})
  id: Handle(Cqrs.Events.IEvent{`0})
  parent: Cqrs.WebApi.Events.Handlers.GlobalEventToHubProxy`1
  langs:
  - csharp
  - vb
  name: Handle(IEvent<TAuthenticationToken>)
  nameWithType: GlobalEventToHubProxy<TAuthenticationToken>.Handle(IEvent<TAuthenticationToken>)
  fullName: Cqrs.WebApi.Events.Handlers.GlobalEventToHubProxy<TAuthenticationToken>.Handle(Cqrs.Events.IEvent<TAuthenticationToken>)
  type: Method
  source:
    remote:
      path: Framework/Cqrs.WebApi/Events/Handlers/GlobalEventToHubProxy.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Handle
    path: Framework/Cqrs.WebApi/Events/Handlers/GlobalEventToHubProxy.cs
    startLine: 26
  assemblies:
  - Cqrs.WebApi
  namespace: Cqrs.WebApi.Events.Handlers
  syntax:
    content: public void Handle(IEvent<TAuthenticationToken> event)
    parameters:
    - id: event
      type: Cqrs.Events.IEvent{{TAuthenticationToken}}
    content.vb: Public Sub Handle(event As IEvent(Of TAuthenticationToken))
  overload: Cqrs.WebApi.Events.Handlers.GlobalEventToHubProxy`1.Handle*
  implements:
  - Cqrs.Messages.IMessageHandler{Cqrs.Events.IEvent{{TAuthenticationToken}}}.Handle(Cqrs.Events.IEvent{{TAuthenticationToken}})
  nameWithType.vb: GlobalEventToHubProxy(Of TAuthenticationToken).Handle(IEvent(Of TAuthenticationToken))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Cqrs.WebApi.Events.Handlers.GlobalEventToHubProxy(Of TAuthenticationToken).Handle(Cqrs.Events.IEvent(Of TAuthenticationToken))
  name.vb: Handle(IEvent(Of TAuthenticationToken))
references:
- uid: Cqrs.WebApi.Events.Handlers
  commentId: N:Cqrs.WebApi.Events.Handlers
  isExternal: false
  name: Cqrs.WebApi.Events.Handlers
  nameWithType: Cqrs.WebApi.Events.Handlers
  fullName: Cqrs.WebApi.Events.Handlers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Cqrs.WebApi.Events.Handlers.EventToHubProxy{{TAuthenticationToken}}
  commentId: T:Cqrs.WebApi.Events.Handlers.EventToHubProxy{`0}
  parent: Cqrs.WebApi.Events.Handlers
  definition: Cqrs.WebApi.Events.Handlers.EventToHubProxy`1
  name: EventToHubProxy<TAuthenticationToken>
  nameWithType: EventToHubProxy<TAuthenticationToken>
  fullName: Cqrs.WebApi.Events.Handlers.EventToHubProxy<TAuthenticationToken>
  nameWithType.vb: EventToHubProxy(Of TAuthenticationToken)
  fullName.vb: Cqrs.WebApi.Events.Handlers.EventToHubProxy(Of TAuthenticationToken)
  name.vb: EventToHubProxy(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.WebApi.Events.Handlers.EventToHubProxy`1
    name: EventToHubProxy
    nameWithType: EventToHubProxy
    fullName: Cqrs.WebApi.Events.Handlers.EventToHubProxy
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.WebApi.Events.Handlers.EventToHubProxy`1
    name: EventToHubProxy
    nameWithType: EventToHubProxy
    fullName: Cqrs.WebApi.Events.Handlers.EventToHubProxy
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Events.IEventHandler{{TAuthenticationToken},Cqrs.Events.IEvent{{TAuthenticationToken}}}
  commentId: T:Cqrs.Events.IEventHandler{`0,Cqrs.Events.IEvent{`0}}
  parent: Cqrs.Events
  definition: Cqrs.Events.IEventHandler`2
  name: IEventHandler<TAuthenticationToken, IEvent<TAuthenticationToken>>
  nameWithType: IEventHandler<TAuthenticationToken, IEvent<TAuthenticationToken>>
  fullName: Cqrs.Events.IEventHandler<TAuthenticationToken, Cqrs.Events.IEvent<TAuthenticationToken>>
  nameWithType.vb: IEventHandler(Of TAuthenticationToken, IEvent(Of TAuthenticationToken))
  fullName.vb: Cqrs.Events.IEventHandler(Of TAuthenticationToken, Cqrs.Events.IEvent(Of TAuthenticationToken))
  name.vb: IEventHandler(Of TAuthenticationToken, IEvent(Of TAuthenticationToken))
  spec.csharp:
  - uid: Cqrs.Events.IEventHandler`2
    name: IEventHandler
    nameWithType: IEventHandler
    fullName: Cqrs.Events.IEventHandler
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Events.IEventHandler`2
    name: IEventHandler
    nameWithType: IEventHandler
    fullName: Cqrs.Events.IEventHandler
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Messages.IMessageHandler{Cqrs.Events.IEvent{{TAuthenticationToken}}}
  commentId: T:Cqrs.Messages.IMessageHandler{Cqrs.Events.IEvent{`0}}
  parent: Cqrs.Messages
  definition: Cqrs.Messages.IMessageHandler`1
  name: IMessageHandler<IEvent<TAuthenticationToken>>
  nameWithType: IMessageHandler<IEvent<TAuthenticationToken>>
  fullName: Cqrs.Messages.IMessageHandler<Cqrs.Events.IEvent<TAuthenticationToken>>
  nameWithType.vb: IMessageHandler(Of IEvent(Of TAuthenticationToken))
  fullName.vb: Cqrs.Messages.IMessageHandler(Of Cqrs.Events.IEvent(Of TAuthenticationToken))
  name.vb: IMessageHandler(Of IEvent(Of TAuthenticationToken))
  spec.csharp:
  - uid: Cqrs.Messages.IMessageHandler`1
    name: IMessageHandler
    nameWithType: IMessageHandler
    fullName: Cqrs.Messages.IMessageHandler
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Messages.IMessageHandler`1
    name: IMessageHandler
    nameWithType: IMessageHandler
    fullName: Cqrs.Messages.IMessageHandler
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Events.IEventHandler
  commentId: T:Cqrs.Events.IEventHandler
  parent: Cqrs.Events
  isExternal: false
  name: IEventHandler
  nameWithType: IEventHandler
  fullName: Cqrs.Events.IEventHandler
- uid: Cqrs.Messages.IHandler
  commentId: T:Cqrs.Messages.IHandler
  parent: Cqrs.Messages
  isExternal: false
  name: IHandler
  nameWithType: IHandler
  fullName: Cqrs.Messages.IHandler
- uid: Cqrs.WebApi.Events.Handlers.EventToHubProxy{{TAuthenticationToken}}.Logger
  commentId: P:Cqrs.WebApi.Events.Handlers.EventToHubProxy{`0}.Logger
  parent: Cqrs.WebApi.Events.Handlers.EventToHubProxy{{TAuthenticationToken}}
  definition: Cqrs.WebApi.Events.Handlers.EventToHubProxy`1.Logger
  name: Logger
  nameWithType: EventToHubProxy<TAuthenticationToken>.Logger
  fullName: Cqrs.WebApi.Events.Handlers.EventToHubProxy<TAuthenticationToken>.Logger
  nameWithType.vb: EventToHubProxy(Of TAuthenticationToken).Logger
  fullName.vb: Cqrs.WebApi.Events.Handlers.EventToHubProxy(Of TAuthenticationToken).Logger
- uid: Cqrs.WebApi.Events.Handlers.EventToHubProxy{{TAuthenticationToken}}.NotificationHub
  commentId: P:Cqrs.WebApi.Events.Handlers.EventToHubProxy{`0}.NotificationHub
  parent: Cqrs.WebApi.Events.Handlers.EventToHubProxy{{TAuthenticationToken}}
  definition: Cqrs.WebApi.Events.Handlers.EventToHubProxy`1.NotificationHub
  name: NotificationHub
  nameWithType: EventToHubProxy<TAuthenticationToken>.NotificationHub
  fullName: Cqrs.WebApi.Events.Handlers.EventToHubProxy<TAuthenticationToken>.NotificationHub
  nameWithType.vb: EventToHubProxy(Of TAuthenticationToken).NotificationHub
  fullName.vb: Cqrs.WebApi.Events.Handlers.EventToHubProxy(Of TAuthenticationToken).NotificationHub
- uid: Cqrs.WebApi.Events.Handlers.EventToHubProxy{{TAuthenticationToken}}.AuthenticationTokenHelper
  commentId: P:Cqrs.WebApi.Events.Handlers.EventToHubProxy{`0}.AuthenticationTokenHelper
  parent: Cqrs.WebApi.Events.Handlers.EventToHubProxy{{TAuthenticationToken}}
  definition: Cqrs.WebApi.Events.Handlers.EventToHubProxy`1.AuthenticationTokenHelper
  name: AuthenticationTokenHelper
  nameWithType: EventToHubProxy<TAuthenticationToken>.AuthenticationTokenHelper
  fullName: Cqrs.WebApi.Events.Handlers.EventToHubProxy<TAuthenticationToken>.AuthenticationTokenHelper
  nameWithType.vb: EventToHubProxy(Of TAuthenticationToken).AuthenticationTokenHelper
  fullName.vb: Cqrs.WebApi.Events.Handlers.EventToHubProxy(Of TAuthenticationToken).AuthenticationTokenHelper
- uid: Cqrs.WebApi.Events.Handlers.EventToHubProxy{{TAuthenticationToken}}.HandleGenericEvent(Cqrs.Events.IEvent{{TAuthenticationToken}})
  commentId: M:Cqrs.WebApi.Events.Handlers.EventToHubProxy{`0}.HandleGenericEvent(Cqrs.Events.IEvent{`0})
  parent: Cqrs.WebApi.Events.Handlers.EventToHubProxy{{TAuthenticationToken}}
  definition: Cqrs.WebApi.Events.Handlers.EventToHubProxy`1.HandleGenericEvent(Cqrs.Events.IEvent{`0})
  name: HandleGenericEvent(IEvent<TAuthenticationToken>)
  nameWithType: EventToHubProxy<TAuthenticationToken>.HandleGenericEvent(IEvent<TAuthenticationToken>)
  fullName: Cqrs.WebApi.Events.Handlers.EventToHubProxy<TAuthenticationToken>.HandleGenericEvent(Cqrs.Events.IEvent<TAuthenticationToken>)
  nameWithType.vb: EventToHubProxy(Of TAuthenticationToken).HandleGenericEvent(IEvent(Of TAuthenticationToken))
  fullName.vb: Cqrs.WebApi.Events.Handlers.EventToHubProxy(Of TAuthenticationToken).HandleGenericEvent(Cqrs.Events.IEvent(Of TAuthenticationToken))
  name.vb: HandleGenericEvent(IEvent(Of TAuthenticationToken))
  spec.csharp:
  - uid: Cqrs.WebApi.Events.Handlers.EventToHubProxy`1.HandleGenericEvent(Cqrs.Events.IEvent{`0})
    name: HandleGenericEvent
    nameWithType: EventToHubProxy<TAuthenticationToken>.HandleGenericEvent
    fullName: Cqrs.WebApi.Events.Handlers.EventToHubProxy<TAuthenticationToken>.HandleGenericEvent
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.WebApi.Events.Handlers.EventToHubProxy`1.HandleGenericEvent(Cqrs.Events.IEvent{`0})
    name: HandleGenericEvent
    nameWithType: EventToHubProxy(Of TAuthenticationToken).HandleGenericEvent
    fullName: Cqrs.WebApi.Events.Handlers.EventToHubProxy(Of TAuthenticationToken).HandleGenericEvent
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Cqrs.WebApi.Events.Handlers.EventToHubProxy`1
  commentId: T:Cqrs.WebApi.Events.Handlers.EventToHubProxy`1
  isExternal: false
  name: EventToHubProxy<TAuthenticationToken>
  nameWithType: EventToHubProxy<TAuthenticationToken>
  fullName: Cqrs.WebApi.Events.Handlers.EventToHubProxy<TAuthenticationToken>
  nameWithType.vb: EventToHubProxy(Of TAuthenticationToken)
  fullName.vb: Cqrs.WebApi.Events.Handlers.EventToHubProxy(Of TAuthenticationToken)
  name.vb: EventToHubProxy(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.WebApi.Events.Handlers.EventToHubProxy`1
    name: EventToHubProxy
    nameWithType: EventToHubProxy
    fullName: Cqrs.WebApi.Events.Handlers.EventToHubProxy
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.WebApi.Events.Handlers.EventToHubProxy`1
    name: EventToHubProxy
    nameWithType: EventToHubProxy
    fullName: Cqrs.WebApi.Events.Handlers.EventToHubProxy
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Events.IEventHandler`2
  commentId: T:Cqrs.Events.IEventHandler`2
  isExternal: false
  name: IEventHandler<TAuthenticationToken, TEvent>
  nameWithType: IEventHandler<TAuthenticationToken, TEvent>
  fullName: Cqrs.Events.IEventHandler<TAuthenticationToken, TEvent>
  nameWithType.vb: IEventHandler(Of TAuthenticationToken, TEvent)
  fullName.vb: Cqrs.Events.IEventHandler(Of TAuthenticationToken, TEvent)
  name.vb: IEventHandler(Of TAuthenticationToken, TEvent)
  spec.csharp:
  - uid: Cqrs.Events.IEventHandler`2
    name: IEventHandler
    nameWithType: IEventHandler
    fullName: Cqrs.Events.IEventHandler
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEvent
    nameWithType: TEvent
    fullName: TEvent
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Events.IEventHandler`2
    name: IEventHandler
    nameWithType: IEventHandler
    fullName: Cqrs.Events.IEventHandler
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEvent
    nameWithType: TEvent
    fullName: TEvent
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Events
  commentId: N:Cqrs.Events
  isExternal: false
  name: Cqrs.Events
  nameWithType: Cqrs.Events
  fullName: Cqrs.Events
- uid: Cqrs.Messages.IMessageHandler`1
  commentId: T:Cqrs.Messages.IMessageHandler`1
  isExternal: false
  name: IMessageHandler<TMessage>
  nameWithType: IMessageHandler<TMessage>
  fullName: Cqrs.Messages.IMessageHandler<TMessage>
  nameWithType.vb: IMessageHandler(Of TMessage)
  fullName.vb: Cqrs.Messages.IMessageHandler(Of TMessage)
  name.vb: IMessageHandler(Of TMessage)
  spec.csharp:
  - uid: Cqrs.Messages.IMessageHandler`1
    name: IMessageHandler
    nameWithType: IMessageHandler
    fullName: Cqrs.Messages.IMessageHandler
  - name: <
    nameWithType: <
    fullName: <
  - name: TMessage
    nameWithType: TMessage
    fullName: TMessage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Messages.IMessageHandler`1
    name: IMessageHandler
    nameWithType: IMessageHandler
    fullName: Cqrs.Messages.IMessageHandler
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TMessage
    nameWithType: TMessage
    fullName: TMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Messages
  commentId: N:Cqrs.Messages
  isExternal: false
  name: Cqrs.Messages
  nameWithType: Cqrs.Messages
  fullName: Cqrs.Messages
- uid: Cqrs.WebApi.Events.Handlers.EventToHubProxy`1.Logger
  commentId: P:Cqrs.WebApi.Events.Handlers.EventToHubProxy`1.Logger
  isExternal: false
  name: Logger
  nameWithType: EventToHubProxy<TAuthenticationToken>.Logger
  fullName: Cqrs.WebApi.Events.Handlers.EventToHubProxy<TAuthenticationToken>.Logger
  nameWithType.vb: EventToHubProxy(Of TAuthenticationToken).Logger
  fullName.vb: Cqrs.WebApi.Events.Handlers.EventToHubProxy(Of TAuthenticationToken).Logger
- uid: Cqrs.WebApi.Events.Handlers.EventToHubProxy`1.NotificationHub
  commentId: P:Cqrs.WebApi.Events.Handlers.EventToHubProxy`1.NotificationHub
  isExternal: false
  name: NotificationHub
  nameWithType: EventToHubProxy<TAuthenticationToken>.NotificationHub
  fullName: Cqrs.WebApi.Events.Handlers.EventToHubProxy<TAuthenticationToken>.NotificationHub
  nameWithType.vb: EventToHubProxy(Of TAuthenticationToken).NotificationHub
  fullName.vb: Cqrs.WebApi.Events.Handlers.EventToHubProxy(Of TAuthenticationToken).NotificationHub
- uid: Cqrs.WebApi.Events.Handlers.EventToHubProxy`1.AuthenticationTokenHelper
  commentId: P:Cqrs.WebApi.Events.Handlers.EventToHubProxy`1.AuthenticationTokenHelper
  isExternal: false
  name: AuthenticationTokenHelper
  nameWithType: EventToHubProxy<TAuthenticationToken>.AuthenticationTokenHelper
  fullName: Cqrs.WebApi.Events.Handlers.EventToHubProxy<TAuthenticationToken>.AuthenticationTokenHelper
  nameWithType.vb: EventToHubProxy(Of TAuthenticationToken).AuthenticationTokenHelper
  fullName.vb: Cqrs.WebApi.Events.Handlers.EventToHubProxy(Of TAuthenticationToken).AuthenticationTokenHelper
- uid: Cqrs.WebApi.Events.Handlers.EventToHubProxy`1.HandleGenericEvent(Cqrs.Events.IEvent{`0})
  commentId: M:Cqrs.WebApi.Events.Handlers.EventToHubProxy`1.HandleGenericEvent(Cqrs.Events.IEvent{`0})
  isExternal: false
  name: HandleGenericEvent(IEvent<TAuthenticationToken>)
  nameWithType: EventToHubProxy<TAuthenticationToken>.HandleGenericEvent(IEvent<TAuthenticationToken>)
  fullName: Cqrs.WebApi.Events.Handlers.EventToHubProxy<TAuthenticationToken>.HandleGenericEvent(Cqrs.Events.IEvent<TAuthenticationToken>)
  nameWithType.vb: EventToHubProxy(Of TAuthenticationToken).HandleGenericEvent(IEvent(Of TAuthenticationToken))
  fullName.vb: Cqrs.WebApi.Events.Handlers.EventToHubProxy(Of TAuthenticationToken).HandleGenericEvent(Cqrs.Events.IEvent(Of TAuthenticationToken))
  name.vb: HandleGenericEvent(IEvent(Of TAuthenticationToken))
  spec.csharp:
  - uid: Cqrs.WebApi.Events.Handlers.EventToHubProxy`1.HandleGenericEvent(Cqrs.Events.IEvent{`0})
    name: HandleGenericEvent
    nameWithType: EventToHubProxy<TAuthenticationToken>.HandleGenericEvent
    fullName: Cqrs.WebApi.Events.Handlers.EventToHubProxy<TAuthenticationToken>.HandleGenericEvent
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.WebApi.Events.Handlers.EventToHubProxy`1.HandleGenericEvent(Cqrs.Events.IEvent{`0})
    name: HandleGenericEvent
    nameWithType: EventToHubProxy(Of TAuthenticationToken).HandleGenericEvent
    fullName: Cqrs.WebApi.Events.Handlers.EventToHubProxy(Of TAuthenticationToken).HandleGenericEvent
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.WebApi.Events.Handlers.GlobalEventToHubProxy`1.#ctor*
  commentId: Overload:Cqrs.WebApi.Events.Handlers.GlobalEventToHubProxy`1.#ctor
  isExternal: false
  name: GlobalEventToHubProxy
  nameWithType: GlobalEventToHubProxy<TAuthenticationToken>.GlobalEventToHubProxy
  fullName: Cqrs.WebApi.Events.Handlers.GlobalEventToHubProxy<TAuthenticationToken>.GlobalEventToHubProxy
  nameWithType.vb: GlobalEventToHubProxy(Of TAuthenticationToken).GlobalEventToHubProxy
  fullName.vb: Cqrs.WebApi.Events.Handlers.GlobalEventToHubProxy(Of TAuthenticationToken).GlobalEventToHubProxy
- uid: cdmdotnet.Logging.ILogger
  commentId: T:cdmdotnet.Logging.ILogger
  parent: cdmdotnet.Logging
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: cdmdotnet.Logging.ILogger
- uid: Cqrs.WebApi.SignalR.Hubs.INotificationHub
  commentId: T:Cqrs.WebApi.SignalR.Hubs.INotificationHub
  parent: Cqrs.WebApi.SignalR.Hubs
  isExternal: false
  name: INotificationHub
  nameWithType: INotificationHub
  fullName: Cqrs.WebApi.SignalR.Hubs.INotificationHub
- uid: Cqrs.Authentication.IAuthenticationTokenHelper{{TAuthenticationToken}}
  commentId: T:Cqrs.Authentication.IAuthenticationTokenHelper{`0}
  parent: Cqrs.Authentication
  definition: Cqrs.Authentication.IAuthenticationTokenHelper`1
  name: IAuthenticationTokenHelper<TAuthenticationToken>
  nameWithType: IAuthenticationTokenHelper<TAuthenticationToken>
  fullName: Cqrs.Authentication.IAuthenticationTokenHelper<TAuthenticationToken>
  nameWithType.vb: IAuthenticationTokenHelper(Of TAuthenticationToken)
  fullName.vb: Cqrs.Authentication.IAuthenticationTokenHelper(Of TAuthenticationToken)
  name.vb: IAuthenticationTokenHelper(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Authentication.IAuthenticationTokenHelper`1
    name: IAuthenticationTokenHelper
    nameWithType: IAuthenticationTokenHelper
    fullName: Cqrs.Authentication.IAuthenticationTokenHelper
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Authentication.IAuthenticationTokenHelper`1
    name: IAuthenticationTokenHelper
    nameWithType: IAuthenticationTokenHelper
    fullName: Cqrs.Authentication.IAuthenticationTokenHelper
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: cdmdotnet.Logging
  commentId: N:cdmdotnet.Logging
  isExternal: false
  name: cdmdotnet.Logging
  nameWithType: cdmdotnet.Logging
  fullName: cdmdotnet.Logging
- uid: Cqrs.WebApi.SignalR.Hubs
  commentId: N:Cqrs.WebApi.SignalR.Hubs
  isExternal: false
  name: Cqrs.WebApi.SignalR.Hubs
  nameWithType: Cqrs.WebApi.SignalR.Hubs
  fullName: Cqrs.WebApi.SignalR.Hubs
- uid: Cqrs.Authentication.IAuthenticationTokenHelper`1
  commentId: T:Cqrs.Authentication.IAuthenticationTokenHelper`1
  isExternal: false
  name: IAuthenticationTokenHelper<TAuthenticationToken>
  nameWithType: IAuthenticationTokenHelper<TAuthenticationToken>
  fullName: Cqrs.Authentication.IAuthenticationTokenHelper<TAuthenticationToken>
  nameWithType.vb: IAuthenticationTokenHelper(Of TAuthenticationToken)
  fullName.vb: Cqrs.Authentication.IAuthenticationTokenHelper(Of TAuthenticationToken)
  name.vb: IAuthenticationTokenHelper(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Authentication.IAuthenticationTokenHelper`1
    name: IAuthenticationTokenHelper
    nameWithType: IAuthenticationTokenHelper
    fullName: Cqrs.Authentication.IAuthenticationTokenHelper
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Authentication.IAuthenticationTokenHelper`1
    name: IAuthenticationTokenHelper
    nameWithType: IAuthenticationTokenHelper
    fullName: Cqrs.Authentication.IAuthenticationTokenHelper
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Authentication
  commentId: N:Cqrs.Authentication
  isExternal: false
  name: Cqrs.Authentication
  nameWithType: Cqrs.Authentication
  fullName: Cqrs.Authentication
- uid: Cqrs.WebApi.Events.Handlers.GlobalEventToHubProxy`1.Handle*
  commentId: Overload:Cqrs.WebApi.Events.Handlers.GlobalEventToHubProxy`1.Handle
  isExternal: false
  name: Handle
  nameWithType: GlobalEventToHubProxy<TAuthenticationToken>.Handle
  fullName: Cqrs.WebApi.Events.Handlers.GlobalEventToHubProxy<TAuthenticationToken>.Handle
  nameWithType.vb: GlobalEventToHubProxy(Of TAuthenticationToken).Handle
  fullName.vb: Cqrs.WebApi.Events.Handlers.GlobalEventToHubProxy(Of TAuthenticationToken).Handle
- uid: Cqrs.Messages.IMessageHandler{Cqrs.Events.IEvent{{TAuthenticationToken}}}.Handle(Cqrs.Events.IEvent{{TAuthenticationToken}})
  commentId: M:Cqrs.Messages.IMessageHandler{Cqrs.Events.IEvent{`0}}.Handle(Cqrs.Events.IEvent{`0})
  parent: Cqrs.Messages.IMessageHandler{Cqrs.Events.IEvent{{TAuthenticationToken}}}
  definition: Cqrs.Messages.IMessageHandler`1.Handle(`0)
  name: Handle(IEvent<TAuthenticationToken>)
  nameWithType: IMessageHandler<IEvent<TAuthenticationToken>>.Handle(IEvent<TAuthenticationToken>)
  fullName: Cqrs.Messages.IMessageHandler<Cqrs.Events.IEvent<TAuthenticationToken>>.Handle(Cqrs.Events.IEvent<TAuthenticationToken>)
  nameWithType.vb: IMessageHandler(Of IEvent(Of TAuthenticationToken)).Handle(IEvent(Of TAuthenticationToken))
  fullName.vb: Cqrs.Messages.IMessageHandler(Of Cqrs.Events.IEvent(Of TAuthenticationToken)).Handle(Cqrs.Events.IEvent(Of TAuthenticationToken))
  name.vb: Handle(IEvent(Of TAuthenticationToken))
  spec.csharp:
  - uid: Cqrs.Messages.IMessageHandler`1.Handle(`0)
    name: Handle
    nameWithType: IMessageHandler<IEvent<TAuthenticationToken>>.Handle
    fullName: Cqrs.Messages.IMessageHandler<Cqrs.Events.IEvent<TAuthenticationToken>>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Messages.IMessageHandler`1.Handle(`0)
    name: Handle
    nameWithType: IMessageHandler(Of IEvent(Of TAuthenticationToken)).Handle
    fullName: Cqrs.Messages.IMessageHandler(Of Cqrs.Events.IEvent(Of TAuthenticationToken)).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Events.IEvent{{TAuthenticationToken}}
  commentId: T:Cqrs.Events.IEvent{`0}
  parent: Cqrs.Events
  definition: Cqrs.Events.IEvent`1
  name: IEvent<TAuthenticationToken>
  nameWithType: IEvent<TAuthenticationToken>
  fullName: Cqrs.Events.IEvent<TAuthenticationToken>
  nameWithType.vb: IEvent(Of TAuthenticationToken)
  fullName.vb: Cqrs.Events.IEvent(Of TAuthenticationToken)
  name.vb: IEvent(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Messages.IMessageHandler`1.Handle(`0)
  commentId: M:Cqrs.Messages.IMessageHandler`1.Handle(`0)
  isExternal: false
  name: Handle(TMessage)
  nameWithType: IMessageHandler<TMessage>.Handle(TMessage)
  fullName: Cqrs.Messages.IMessageHandler<TMessage>.Handle(TMessage)
  nameWithType.vb: IMessageHandler(Of TMessage).Handle(TMessage)
  fullName.vb: Cqrs.Messages.IMessageHandler(Of TMessage).Handle(TMessage)
  spec.csharp:
  - uid: Cqrs.Messages.IMessageHandler`1.Handle(`0)
    name: Handle
    nameWithType: IMessageHandler<TMessage>.Handle
    fullName: Cqrs.Messages.IMessageHandler<TMessage>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - name: TMessage
    nameWithType: TMessage
    fullName: TMessage
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Messages.IMessageHandler`1.Handle(`0)
    name: Handle
    nameWithType: IMessageHandler(Of TMessage).Handle
    fullName: Cqrs.Messages.IMessageHandler(Of TMessage).Handle
  - name: (
    nameWithType: (
    fullName: (
  - name: TMessage
    nameWithType: TMessage
    fullName: TMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Events.IEvent`1
  commentId: T:Cqrs.Events.IEvent`1
  isExternal: false
  name: IEvent<TAuthenticationToken>
  nameWithType: IEvent<TAuthenticationToken>
  fullName: Cqrs.Events.IEvent<TAuthenticationToken>
  nameWithType.vb: IEvent(Of TAuthenticationToken)
  fullName.vb: Cqrs.Events.IEvent(Of TAuthenticationToken)
  name.vb: IEvent(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
