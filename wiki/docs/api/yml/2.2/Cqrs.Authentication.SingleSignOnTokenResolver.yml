### YamlMime:ManagedReference
items:
- uid: Cqrs.Authentication.SingleSignOnTokenResolver
  commentId: T:Cqrs.Authentication.SingleSignOnTokenResolver
  id: SingleSignOnTokenResolver
  parent: Cqrs.Authentication
  children:
  - Cqrs.Authentication.SingleSignOnTokenResolver.ResolveName(System.String,System.String,System.Type,System.Runtime.Serialization.DataContractResolver)
  - Cqrs.Authentication.SingleSignOnTokenResolver.TryResolveType(System.Type,System.Type,System.Runtime.Serialization.DataContractResolver,System.Xml.XmlDictionaryString@,System.Xml.XmlDictionaryString@)
  langs:
  - csharp
  - vb
  name: SingleSignOnTokenResolver
  nameWithType: SingleSignOnTokenResolver
  fullName: Cqrs.Authentication.SingleSignOnTokenResolver
  type: Class
  source:
    remote:
      path: Framework/Cqrs/Authentication/SingleSignOnTokenResolver.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: SingleSignOnTokenResolver
    path: Framework/Cqrs/Authentication/SingleSignOnTokenResolver.cs
    startLine: 19
  assemblies:
  - Cqrs
  namespace: Cqrs.Authentication
  summary: "\nResolves parameter types when serialising with WCF of <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref>\n<xref href=\"Cqrs.Authentication.SingleSignOnToken\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"Cqrs.Authentication.SingleSignOnTokenWithUserRsn\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"Cqrs.Authentication.SingleSignOnTokenWithCompanyRsn\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"Cqrs.Authentication.SingleSignOnTokenWithUserRsnAndCompanyRsn\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: 'public class SingleSignOnTokenResolver : ISingleSignOnTokenResolver, IServiceParameterResolver'
    content.vb: >-
      Public Class SingleSignOnTokenResolver
          Implements ISingleSignOnTokenResolver, IServiceParameterResolver
  inheritance:
  - System.Object
  implements:
  - Cqrs.Services.ISingleSignOnTokenResolver
  - Cqrs.Services.IServiceParameterResolver
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Cqrs.Authentication.SingleSignOnTokenResolver.TryResolveType(System.Type,System.Type,System.Runtime.Serialization.DataContractResolver,System.Xml.XmlDictionaryString@,System.Xml.XmlDictionaryString@)
  commentId: M:Cqrs.Authentication.SingleSignOnTokenResolver.TryResolveType(System.Type,System.Type,System.Runtime.Serialization.DataContractResolver,System.Xml.XmlDictionaryString@,System.Xml.XmlDictionaryString@)
  id: TryResolveType(System.Type,System.Type,System.Runtime.Serialization.DataContractResolver,System.Xml.XmlDictionaryString@,System.Xml.XmlDictionaryString@)
  parent: Cqrs.Authentication.SingleSignOnTokenResolver
  langs:
  - csharp
  - vb
  name: TryResolveType(Type, Type, DataContractResolver, out XmlDictionaryString, out XmlDictionaryString)
  nameWithType: SingleSignOnTokenResolver.TryResolveType(Type, Type, DataContractResolver, out XmlDictionaryString, out XmlDictionaryString)
  fullName: Cqrs.Authentication.SingleSignOnTokenResolver.TryResolveType(System.Type, System.Type, System.Runtime.Serialization.DataContractResolver, out System.Xml.XmlDictionaryString, out System.Xml.XmlDictionaryString)
  type: Method
  source:
    remote:
      path: Framework/Cqrs/Authentication/SingleSignOnTokenResolver.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: TryResolveType
    path: Framework/Cqrs/Authentication/SingleSignOnTokenResolver.cs
    startLine: 27
  assemblies:
  - Cqrs
  namespace: Cqrs.Authentication
  summary: "\nIndicates if the provided <span class=\"paramref\">dataContractType</span> is of type <xref href=\"Cqrs.Authentication.SingleSignOnToken\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"Cqrs.Authentication.SingleSignOnTokenWithUserRsn\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"Cqrs.Authentication.SingleSignOnTokenWithCompanyRsn\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"Cqrs.Authentication.SingleSignOnTokenWithUserRsnAndCompanyRsn\" data-throw-if-not-resolved=\"false\"></xref>\nOR if it is other resolvable.\n"
  example: []
  syntax:
    content: public virtual bool TryResolveType(Type dataContractType, Type declaredType, DataContractResolver knownTypeResolver, out XmlDictionaryString typeName, out XmlDictionaryString typeNamespace)
    parameters:
    - id: dataContractType
      type: System.Type
    - id: declaredType
      type: System.Type
    - id: knownTypeResolver
      type: System.Runtime.Serialization.DataContractResolver
    - id: typeName
      type: System.Xml.XmlDictionaryString
    - id: typeNamespace
      type: System.Xml.XmlDictionaryString
    return:
      type: System.Boolean
    content.vb: Public Overridable Function TryResolveType(dataContractType As Type, declaredType As Type, knownTypeResolver As DataContractResolver, ByRef typeName As XmlDictionaryString, ByRef typeNamespace As XmlDictionaryString) As Boolean
  overload: Cqrs.Authentication.SingleSignOnTokenResolver.TryResolveType*
  implements:
  - Cqrs.Services.IServiceParameterResolver.TryResolveType(System.Type,System.Type,System.Runtime.Serialization.DataContractResolver,System.Xml.XmlDictionaryString@,System.Xml.XmlDictionaryString@)
  nameWithType.vb: SingleSignOnTokenResolver.TryResolveType(Type, Type, DataContractResolver, ByRef XmlDictionaryString, ByRef XmlDictionaryString)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Cqrs.Authentication.SingleSignOnTokenResolver.TryResolveType(System.Type, System.Type, System.Runtime.Serialization.DataContractResolver, ByRef System.Xml.XmlDictionaryString, ByRef System.Xml.XmlDictionaryString)
  name.vb: TryResolveType(Type, Type, DataContractResolver, ByRef XmlDictionaryString, ByRef XmlDictionaryString)
- uid: Cqrs.Authentication.SingleSignOnTokenResolver.ResolveName(System.String,System.String,System.Type,System.Runtime.Serialization.DataContractResolver)
  commentId: M:Cqrs.Authentication.SingleSignOnTokenResolver.ResolveName(System.String,System.String,System.Type,System.Runtime.Serialization.DataContractResolver)
  id: ResolveName(System.String,System.String,System.Type,System.Runtime.Serialization.DataContractResolver)
  parent: Cqrs.Authentication.SingleSignOnTokenResolver
  langs:
  - csharp
  - vb
  name: ResolveName(String, String, Type, DataContractResolver)
  nameWithType: SingleSignOnTokenResolver.ResolveName(String, String, Type, DataContractResolver)
  fullName: Cqrs.Authentication.SingleSignOnTokenResolver.ResolveName(System.String, System.String, System.Type, System.Runtime.Serialization.DataContractResolver)
  type: Method
  source:
    remote:
      path: Framework/Cqrs/Authentication/SingleSignOnTokenResolver.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: ResolveName
    path: Framework/Cqrs/Authentication/SingleSignOnTokenResolver.cs
    startLine: 70
  assemblies:
  - Cqrs
  namespace: Cqrs.Authentication
  summary: "\nReturns the <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> if the <span class=\"paramref\">typeName</span> is resolvable or if it is \nof type <xref href=\"Cqrs.Authentication.SingleSignOnToken\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"Cqrs.Authentication.SingleSignOnTokenWithUserRsn\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"Cqrs.Authentication.SingleSignOnTokenWithCompanyRsn\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"Cqrs.Authentication.SingleSignOnTokenWithUserRsnAndCompanyRsn\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public virtual Type ResolveName(string typeName, string typeNamespace, Type declaredType, DataContractResolver knownTypeResolver)
    parameters:
    - id: typeName
      type: System.String
    - id: typeNamespace
      type: System.String
    - id: declaredType
      type: System.Type
    - id: knownTypeResolver
      type: System.Runtime.Serialization.DataContractResolver
    return:
      type: System.Type
    content.vb: Public Overridable Function ResolveName(typeName As String, typeNamespace As String, declaredType As Type, knownTypeResolver As DataContractResolver) As Type
  overload: Cqrs.Authentication.SingleSignOnTokenResolver.ResolveName*
  implements:
  - Cqrs.Services.IServiceParameterResolver.ResolveName(System.String,System.String,System.Type,System.Runtime.Serialization.DataContractResolver)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Cqrs.Authentication.SingleSignOnToken
  commentId: T:Cqrs.Authentication.SingleSignOnToken
  parent: Cqrs.Authentication
  isExternal: false
  name: SingleSignOnToken
  nameWithType: SingleSignOnToken
  fullName: Cqrs.Authentication.SingleSignOnToken
- uid: Cqrs.Authentication.SingleSignOnTokenWithUserRsn
  commentId: T:Cqrs.Authentication.SingleSignOnTokenWithUserRsn
  parent: Cqrs.Authentication
  isExternal: false
  name: SingleSignOnTokenWithUserRsn
  nameWithType: SingleSignOnTokenWithUserRsn
  fullName: Cqrs.Authentication.SingleSignOnTokenWithUserRsn
- uid: Cqrs.Authentication.SingleSignOnTokenWithCompanyRsn
  commentId: T:Cqrs.Authentication.SingleSignOnTokenWithCompanyRsn
  parent: Cqrs.Authentication
  isExternal: false
  name: SingleSignOnTokenWithCompanyRsn
  nameWithType: SingleSignOnTokenWithCompanyRsn
  fullName: Cqrs.Authentication.SingleSignOnTokenWithCompanyRsn
- uid: Cqrs.Authentication.SingleSignOnTokenWithUserRsnAndCompanyRsn
  commentId: T:Cqrs.Authentication.SingleSignOnTokenWithUserRsnAndCompanyRsn
  parent: Cqrs.Authentication
  isExternal: false
  name: SingleSignOnTokenWithUserRsnAndCompanyRsn
  nameWithType: SingleSignOnTokenWithUserRsnAndCompanyRsn
  fullName: Cqrs.Authentication.SingleSignOnTokenWithUserRsnAndCompanyRsn
- uid: Cqrs.Authentication
  commentId: N:Cqrs.Authentication
  isExternal: false
  name: Cqrs.Authentication
  nameWithType: Cqrs.Authentication
  fullName: Cqrs.Authentication
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Cqrs.Services.ISingleSignOnTokenResolver
  commentId: T:Cqrs.Services.ISingleSignOnTokenResolver
  parent: Cqrs.Services
  isExternal: false
  name: ISingleSignOnTokenResolver
  nameWithType: ISingleSignOnTokenResolver
  fullName: Cqrs.Services.ISingleSignOnTokenResolver
- uid: Cqrs.Services.IServiceParameterResolver
  commentId: T:Cqrs.Services.IServiceParameterResolver
  parent: Cqrs.Services
  isExternal: false
  name: IServiceParameterResolver
  nameWithType: IServiceParameterResolver
  fullName: Cqrs.Services.IServiceParameterResolver
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Cqrs.Services
  commentId: N:Cqrs.Services
  isExternal: false
  name: Cqrs.Services
  nameWithType: Cqrs.Services
  fullName: Cqrs.Services
- uid: Cqrs.Authentication.SingleSignOnTokenResolver.TryResolveType*
  commentId: Overload:Cqrs.Authentication.SingleSignOnTokenResolver.TryResolveType
  isExternal: false
  name: TryResolveType
  nameWithType: SingleSignOnTokenResolver.TryResolveType
  fullName: Cqrs.Authentication.SingleSignOnTokenResolver.TryResolveType
- uid: Cqrs.Services.IServiceParameterResolver.TryResolveType(System.Type,System.Type,System.Runtime.Serialization.DataContractResolver,System.Xml.XmlDictionaryString@,System.Xml.XmlDictionaryString@)
  commentId: M:Cqrs.Services.IServiceParameterResolver.TryResolveType(System.Type,System.Type,System.Runtime.Serialization.DataContractResolver,System.Xml.XmlDictionaryString@,System.Xml.XmlDictionaryString@)
  parent: Cqrs.Services.IServiceParameterResolver
  isExternal: true
  name: TryResolveType(Type, Type, DataContractResolver, XmlDictionaryString, XmlDictionaryString)
  nameWithType: IServiceParameterResolver.TryResolveType(Type, Type, DataContractResolver, XmlDictionaryString, XmlDictionaryString)
  fullName: Cqrs.Services.IServiceParameterResolver.TryResolveType(System.Type, System.Type, System.Runtime.Serialization.DataContractResolver, System.Xml.XmlDictionaryString, System.Xml.XmlDictionaryString)
  spec.csharp:
  - uid: Cqrs.Services.IServiceParameterResolver.TryResolveType(System.Type,System.Type,System.Runtime.Serialization.DataContractResolver,System.Xml.XmlDictionaryString@,System.Xml.XmlDictionaryString@)
    name: TryResolveType
    nameWithType: IServiceParameterResolver.TryResolveType
    fullName: Cqrs.Services.IServiceParameterResolver.TryResolveType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.DataContractResolver
    name: DataContractResolver
    nameWithType: DataContractResolver
    fullName: System.Runtime.Serialization.DataContractResolver
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Xml.XmlDictionaryString
    name: XmlDictionaryString
    nameWithType: XmlDictionaryString
    fullName: System.Xml.XmlDictionaryString
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Xml.XmlDictionaryString
    name: XmlDictionaryString
    nameWithType: XmlDictionaryString
    fullName: System.Xml.XmlDictionaryString
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Services.IServiceParameterResolver.TryResolveType(System.Type,System.Type,System.Runtime.Serialization.DataContractResolver,System.Xml.XmlDictionaryString@,System.Xml.XmlDictionaryString@)
    name: TryResolveType
    nameWithType: IServiceParameterResolver.TryResolveType
    fullName: Cqrs.Services.IServiceParameterResolver.TryResolveType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.DataContractResolver
    name: DataContractResolver
    nameWithType: DataContractResolver
    fullName: System.Runtime.Serialization.DataContractResolver
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Xml.XmlDictionaryString
    name: XmlDictionaryString
    nameWithType: XmlDictionaryString
    fullName: System.Xml.XmlDictionaryString
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Xml.XmlDictionaryString
    name: XmlDictionaryString
    nameWithType: XmlDictionaryString
    fullName: System.Xml.XmlDictionaryString
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Runtime.Serialization.DataContractResolver
  commentId: T:System.Runtime.Serialization.DataContractResolver
  parent: System.Runtime.Serialization
  isExternal: true
  name: DataContractResolver
  nameWithType: DataContractResolver
  fullName: System.Runtime.Serialization.DataContractResolver
- uid: System.Xml.XmlDictionaryString
  commentId: T:System.Xml.XmlDictionaryString
  parent: System.Xml
  isExternal: true
  name: XmlDictionaryString
  nameWithType: XmlDictionaryString
  fullName: System.Xml.XmlDictionaryString
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Runtime.Serialization
  commentId: N:System.Runtime.Serialization
  isExternal: false
  name: System.Runtime.Serialization
  nameWithType: System.Runtime.Serialization
  fullName: System.Runtime.Serialization
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: false
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
- uid: Cqrs.Authentication.SingleSignOnTokenResolver.ResolveName*
  commentId: Overload:Cqrs.Authentication.SingleSignOnTokenResolver.ResolveName
  isExternal: false
  name: ResolveName
  nameWithType: SingleSignOnTokenResolver.ResolveName
  fullName: Cqrs.Authentication.SingleSignOnTokenResolver.ResolveName
- uid: Cqrs.Services.IServiceParameterResolver.ResolveName(System.String,System.String,System.Type,System.Runtime.Serialization.DataContractResolver)
  commentId: M:Cqrs.Services.IServiceParameterResolver.ResolveName(System.String,System.String,System.Type,System.Runtime.Serialization.DataContractResolver)
  parent: Cqrs.Services.IServiceParameterResolver
  isExternal: true
  name: ResolveName(String, String, Type, DataContractResolver)
  nameWithType: IServiceParameterResolver.ResolveName(String, String, Type, DataContractResolver)
  fullName: Cqrs.Services.IServiceParameterResolver.ResolveName(System.String, System.String, System.Type, System.Runtime.Serialization.DataContractResolver)
  spec.csharp:
  - uid: Cqrs.Services.IServiceParameterResolver.ResolveName(System.String,System.String,System.Type,System.Runtime.Serialization.DataContractResolver)
    name: ResolveName
    nameWithType: IServiceParameterResolver.ResolveName
    fullName: Cqrs.Services.IServiceParameterResolver.ResolveName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.DataContractResolver
    name: DataContractResolver
    nameWithType: DataContractResolver
    fullName: System.Runtime.Serialization.DataContractResolver
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Services.IServiceParameterResolver.ResolveName(System.String,System.String,System.Type,System.Runtime.Serialization.DataContractResolver)
    name: ResolveName
    nameWithType: IServiceParameterResolver.ResolveName
    fullName: Cqrs.Services.IServiceParameterResolver.ResolveName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.DataContractResolver
    name: DataContractResolver
    nameWithType: DataContractResolver
    fullName: System.Runtime.Serialization.DataContractResolver
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
