### YamlMime:ManagedReference
items:
- uid: Cqrs.Authentication.IAuthenticationTokenHelper`1
  commentId: T:Cqrs.Authentication.IAuthenticationTokenHelper`1
  id: IAuthenticationTokenHelper`1
  parent: Cqrs.Authentication
  children:
  - Cqrs.Authentication.IAuthenticationTokenHelper`1.GetAuthenticationToken
  - Cqrs.Authentication.IAuthenticationTokenHelper`1.SetAuthenticationToken(`0)
  langs:
  - csharp
  - vb
  name: IAuthenticationTokenHelper<TAuthenticationToken>
  nameWithType: IAuthenticationTokenHelper<TAuthenticationToken>
  fullName: Cqrs.Authentication.IAuthenticationTokenHelper<TAuthenticationToken>
  type: Interface
  source:
    remote:
      path: Framework/Cqrs/Authentication/IAuthenticationTokenHelper.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: IAuthenticationTokenHelper
    path: Framework/Cqrs/Authentication/IAuthenticationTokenHelper.cs
    startLine: 17
  assemblies:
  - Cqrs
  namespace: Cqrs.Authentication
  summary: "\nA helper for setting and retrieving authentication tokens of type <code data-dev-comment-type=\"typeparamref\">TAuthenticationToken</code>.\n"
  example: []
  syntax:
    content: >-
      [ServiceContract(Namespace = "https://getcqrs.net/SingleSignOn/TokenHelper")]

      public interface IAuthenticationTokenHelper<TAuthenticationToken>
    typeParameters:
    - id: TAuthenticationToken
      description: The <xref href="System.Type" data-throw-if-not-resolved="false"></xref> of authentication token.
    content.vb: >-
      <ServiceContract(Namespace:="https://getcqrs.net/SingleSignOn/TokenHelper")>

      Public Interface IAuthenticationTokenHelper(Of TAuthenticationToken)
  attributes:
  - type: System.ServiceModel.ServiceContractAttribute
    ctor: System.ServiceModel.ServiceContractAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Namespace
      type: System.String
      value: https://getcqrs.net/SingleSignOn/TokenHelper
  nameWithType.vb: IAuthenticationTokenHelper(Of TAuthenticationToken)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: Cqrs.Authentication.IAuthenticationTokenHelper(Of TAuthenticationToken)
  name.vb: IAuthenticationTokenHelper(Of TAuthenticationToken)
- uid: Cqrs.Authentication.IAuthenticationTokenHelper`1.GetAuthenticationToken
  commentId: M:Cqrs.Authentication.IAuthenticationTokenHelper`1.GetAuthenticationToken
  id: GetAuthenticationToken
  parent: Cqrs.Authentication.IAuthenticationTokenHelper`1
  langs:
  - csharp
  - vb
  name: GetAuthenticationToken()
  nameWithType: IAuthenticationTokenHelper<TAuthenticationToken>.GetAuthenticationToken()
  fullName: Cqrs.Authentication.IAuthenticationTokenHelper<TAuthenticationToken>.GetAuthenticationToken()
  type: Method
  source:
    remote:
      path: Framework/Cqrs/Authentication/IAuthenticationTokenHelper.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: GetAuthenticationToken
    path: Framework/Cqrs/Authentication/IAuthenticationTokenHelper.cs
    startLine: 23
  assemblies:
  - Cqrs
  namespace: Cqrs.Authentication
  summary: "\nGet the current <code data-dev-comment-type=\"typeparamref\">TAuthenticationToken</code> for the current context/request.\n"
  example: []
  syntax:
    content: >-
      [OperationContract]

      TAuthenticationToken GetAuthenticationToken()
    return:
      type: '{TAuthenticationToken}'
    content.vb: >-
      <OperationContract>

      Function GetAuthenticationToken As TAuthenticationToken
  overload: Cqrs.Authentication.IAuthenticationTokenHelper`1.GetAuthenticationToken*
  attributes:
  - type: System.ServiceModel.OperationContractAttribute
    ctor: System.ServiceModel.OperationContractAttribute.#ctor
    arguments: []
  nameWithType.vb: IAuthenticationTokenHelper(Of TAuthenticationToken).GetAuthenticationToken()
  fullName.vb: Cqrs.Authentication.IAuthenticationTokenHelper(Of TAuthenticationToken).GetAuthenticationToken()
- uid: Cqrs.Authentication.IAuthenticationTokenHelper`1.SetAuthenticationToken(`0)
  commentId: M:Cqrs.Authentication.IAuthenticationTokenHelper`1.SetAuthenticationToken(`0)
  id: SetAuthenticationToken(`0)
  parent: Cqrs.Authentication.IAuthenticationTokenHelper`1
  langs:
  - csharp
  - vb
  name: SetAuthenticationToken(TAuthenticationToken)
  nameWithType: IAuthenticationTokenHelper<TAuthenticationToken>.SetAuthenticationToken(TAuthenticationToken)
  fullName: Cqrs.Authentication.IAuthenticationTokenHelper<TAuthenticationToken>.SetAuthenticationToken(TAuthenticationToken)
  type: Method
  source:
    remote:
      path: Framework/Cqrs/Authentication/IAuthenticationTokenHelper.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: SetAuthenticationToken
    path: Framework/Cqrs/Authentication/IAuthenticationTokenHelper.cs
    startLine: 29
  assemblies:
  - Cqrs
  namespace: Cqrs.Authentication
  summary: "\nSet the provided <code data-dev-comment-type=\"paramref\">token</code> for the current context/request.\n"
  example: []
  syntax:
    content: >-
      [OperationContract]

      TAuthenticationToken SetAuthenticationToken(TAuthenticationToken token)
    parameters:
    - id: token
      type: '{TAuthenticationToken}'
    return:
      type: '{TAuthenticationToken}'
    content.vb: >-
      <OperationContract>

      Function SetAuthenticationToken(token As TAuthenticationToken) As TAuthenticationToken
  overload: Cqrs.Authentication.IAuthenticationTokenHelper`1.SetAuthenticationToken*
  attributes:
  - type: System.ServiceModel.OperationContractAttribute
    ctor: System.ServiceModel.OperationContractAttribute.#ctor
    arguments: []
  nameWithType.vb: IAuthenticationTokenHelper(Of TAuthenticationToken).SetAuthenticationToken(TAuthenticationToken)
  fullName.vb: Cqrs.Authentication.IAuthenticationTokenHelper(Of TAuthenticationToken).SetAuthenticationToken(TAuthenticationToken)
references:
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Cqrs.Authentication
  commentId: N:Cqrs.Authentication
  isExternal: false
  name: Cqrs.Authentication
  nameWithType: Cqrs.Authentication
  fullName: Cqrs.Authentication
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Cqrs.Authentication.IAuthenticationTokenHelper`1.GetAuthenticationToken*
  commentId: Overload:Cqrs.Authentication.IAuthenticationTokenHelper`1.GetAuthenticationToken
  isExternal: false
  name: GetAuthenticationToken
  nameWithType: IAuthenticationTokenHelper<TAuthenticationToken>.GetAuthenticationToken
  fullName: Cqrs.Authentication.IAuthenticationTokenHelper<TAuthenticationToken>.GetAuthenticationToken
  nameWithType.vb: IAuthenticationTokenHelper(Of TAuthenticationToken).GetAuthenticationToken
  fullName.vb: Cqrs.Authentication.IAuthenticationTokenHelper(Of TAuthenticationToken).GetAuthenticationToken
- uid: '{TAuthenticationToken}'
  commentId: '!:TAuthenticationToken'
  definition: TAuthenticationToken
  name: TAuthenticationToken
  nameWithType: TAuthenticationToken
  fullName: TAuthenticationToken
- uid: TAuthenticationToken
  isExternal: false
  name: TAuthenticationToken
  nameWithType: TAuthenticationToken
  fullName: TAuthenticationToken
- uid: Cqrs.Authentication.IAuthenticationTokenHelper`1.SetAuthenticationToken*
  commentId: Overload:Cqrs.Authentication.IAuthenticationTokenHelper`1.SetAuthenticationToken
  isExternal: false
  name: SetAuthenticationToken
  nameWithType: IAuthenticationTokenHelper<TAuthenticationToken>.SetAuthenticationToken
  fullName: Cqrs.Authentication.IAuthenticationTokenHelper<TAuthenticationToken>.SetAuthenticationToken
  nameWithType.vb: IAuthenticationTokenHelper(Of TAuthenticationToken).SetAuthenticationToken
  fullName.vb: Cqrs.Authentication.IAuthenticationTokenHelper(Of TAuthenticationToken).SetAuthenticationToken
