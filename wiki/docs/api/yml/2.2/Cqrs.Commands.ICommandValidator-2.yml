### YamlMime:ManagedReference
items:
- uid: Cqrs.Commands.ICommandValidator`2
  commentId: T:Cqrs.Commands.ICommandValidator`2
  id: ICommandValidator`2
  parent: Cqrs.Commands
  children:
  - Cqrs.Commands.ICommandValidator`2.IsCommandValid(`1)
  langs:
  - csharp
  - vb
  name: ICommandValidator<TAuthenticationToken, TCommand>
  nameWithType: ICommandValidator<TAuthenticationToken, TCommand>
  fullName: Cqrs.Commands.ICommandValidator<TAuthenticationToken, TCommand>
  type: Interface
  source:
    remote:
      path: Framework/Cqrs/Commands/ICommandValidator.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: ICommandValidator
    path: Framework/Cqrs/Commands/ICommandValidator.cs
    startLine: 13
  assemblies:
  - Cqrs
  namespace: Cqrs.Commands
  summary: "\nValidates an <xref href=\"Cqrs.Commands.ICommand%601\" data-throw-if-not-resolved=\"false\"></xref> on its own merits.\n"
  example: []
  syntax:
    content: >-
      public interface ICommandValidator<TAuthenticationToken, in TCommand>
          where TCommand : ICommand<TAuthenticationToken>
    typeParameters:
    - id: TAuthenticationToken
    - id: TCommand
    content.vb: Public Interface ICommandValidator(Of TAuthenticationToken, In TCommand As ICommand(Of TAuthenticationToken))
  nameWithType.vb: ICommandValidator(Of TAuthenticationToken, TCommand)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: Cqrs.Commands.ICommandValidator(Of TAuthenticationToken, TCommand)
  name.vb: ICommandValidator(Of TAuthenticationToken, TCommand)
- uid: Cqrs.Commands.ICommandValidator`2.IsCommandValid(`1)
  commentId: M:Cqrs.Commands.ICommandValidator`2.IsCommandValid(`1)
  id: IsCommandValid(`1)
  parent: Cqrs.Commands.ICommandValidator`2
  langs:
  - csharp
  - vb
  name: IsCommandValid(TCommand)
  nameWithType: ICommandValidator<TAuthenticationToken, TCommand>.IsCommandValid(TCommand)
  fullName: Cqrs.Commands.ICommandValidator<TAuthenticationToken, TCommand>.IsCommandValid(TCommand)
  type: Method
  source:
    remote:
      path: Framework/Cqrs/Commands/ICommandValidator.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: IsCommandValid
    path: Framework/Cqrs/Commands/ICommandValidator.cs
    startLine: 19
  assemblies:
  - Cqrs
  namespace: Cqrs.Commands
  summary: "\nValidates the provided <param name=\"command\" /> on its own merits.\n"
  example: []
  syntax:
    content: bool IsCommandValid(TCommand command)
    parameters:
    - id: command
      type: '{TCommand}'
    return:
      type: System.Boolean
    content.vb: Function IsCommandValid(command As TCommand) As Boolean
  overload: Cqrs.Commands.ICommandValidator`2.IsCommandValid*
  nameWithType.vb: ICommandValidator(Of TAuthenticationToken, TCommand).IsCommandValid(TCommand)
  fullName.vb: Cqrs.Commands.ICommandValidator(Of TAuthenticationToken, TCommand).IsCommandValid(TCommand)
references:
- uid: Cqrs.Commands.ICommand`1
  commentId: T:Cqrs.Commands.ICommand`1
  isExternal: false
  name: ICommand<TAuthenticationToken>
  nameWithType: ICommand<TAuthenticationToken>
  fullName: Cqrs.Commands.ICommand<TAuthenticationToken>
  nameWithType.vb: ICommand(Of TAuthenticationToken)
  fullName.vb: Cqrs.Commands.ICommand(Of TAuthenticationToken)
  name.vb: ICommand(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Commands.ICommand`1
    name: ICommand
    nameWithType: ICommand
    fullName: Cqrs.Commands.ICommand
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Commands.ICommand`1
    name: ICommand
    nameWithType: ICommand
    fullName: Cqrs.Commands.ICommand
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Commands
  commentId: N:Cqrs.Commands
  isExternal: false
  name: Cqrs.Commands
  nameWithType: Cqrs.Commands
  fullName: Cqrs.Commands
- uid: Cqrs.Commands.ICommandValidator`2.IsCommandValid*
  commentId: Overload:Cqrs.Commands.ICommandValidator`2.IsCommandValid
  isExternal: false
  name: IsCommandValid
  nameWithType: ICommandValidator<TAuthenticationToken, TCommand>.IsCommandValid
  fullName: Cqrs.Commands.ICommandValidator<TAuthenticationToken, TCommand>.IsCommandValid
  nameWithType.vb: ICommandValidator(Of TAuthenticationToken, TCommand).IsCommandValid
  fullName.vb: Cqrs.Commands.ICommandValidator(Of TAuthenticationToken, TCommand).IsCommandValid
- uid: '{TCommand}'
  commentId: '!:TCommand'
  definition: TCommand
  name: TCommand
  nameWithType: TCommand
  fullName: TCommand
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TCommand
  isExternal: false
  name: TCommand
  nameWithType: TCommand
  fullName: TCommand
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
