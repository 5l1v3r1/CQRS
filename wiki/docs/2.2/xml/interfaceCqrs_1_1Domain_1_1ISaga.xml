<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="interfaceCqrs_1_1Domain_1_1ISaga" kind="interface" language="C#" prot="public">
    <compoundname>Cqrs::Domain::ISaga</compoundname>
    <derivedcompoundref refid="classCqrs_1_1Akka_1_1Domain_1_1AkkaSaga" prot="public" virt="non-virtual">Cqrs.Akka.Domain.AkkaSaga&lt; TAuthenticationToken &gt;</derivedcompoundref>
    <derivedcompoundref refid="classCqrs_1_1Akka_1_1Domain_1_1AkkaSagaProxy" prot="public" virt="non-virtual">Cqrs.Akka.Domain.AkkaSagaProxy&lt; TAuthenticationToken, TSaga &gt;</derivedcompoundref>
    <derivedcompoundref refid="classCqrs_1_1Domain_1_1Saga" prot="public" virt="non-virtual">Cqrs.Domain.Saga&lt; TAuthenticationToken &gt;</derivedcompoundref>
    <templateparamlist>
      <param>
        <type>TAuthenticationToken</type>
      </param>
    </templateparamlist>
      <sectiondef kind="property">
      <memberdef kind="property" id="interfaceCqrs_1_1Domain_1_1ISaga_aa470a39d3bcdc506dbd5bf49d127bc3c_1aa470a39d3bcdc506dbd5bf49d127bc3c" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>Guid</type>
        <definition>Guid Cqrs.Domain.ISaga&lt; TAuthenticationToken &gt;.Id</definition>
        <argsstring></argsstring>
        <name>Id</name>
        <briefdescription>
<para>The identifier of the ISaga&lt;TAuthenticationToken&gt;. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/a99f043f4d1af837/Framework/Cqrs/Domain/ISaga.cs" line="39" column="1" bodyfile="/opt/buildAgent/work/a99f043f4d1af837/Framework/Cqrs/Domain/ISaga.cs" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="interfaceCqrs_1_1Domain_1_1ISaga_a83a02ff45543d670356dde4149cdc614_1a83a02ff45543d670356dde4149cdc614" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>int</type>
        <definition>int Cqrs.Domain.ISaga&lt; TAuthenticationToken &gt;.Version</definition>
        <argsstring></argsstring>
        <name>Version</name>
        <briefdescription>
<para>The current version of this ISaga&lt;TAuthenticationToken&gt;. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/a99f043f4d1af837/Framework/Cqrs/Domain/ISaga.cs" line="45" column="1" bodyfile="/opt/buildAgent/work/a99f043f4d1af837/Framework/Cqrs/Domain/ISaga.cs" bodystart="45" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="interfaceCqrs_1_1Domain_1_1ISaga_abb77811b4f7d19adb61f9d33da18e7e0_1abb77811b4f7d19adb61f9d33da18e7e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>IEnumerable&lt; <ref refid="interfaceCqrs_1_1Events_1_1ISagaEvent" kindref="compound">ISagaEvent</ref>&lt; TAuthenticationToken &gt; &gt;</type>
        <definition>IEnumerable&lt;ISagaEvent&lt;TAuthenticationToken&gt; &gt; Cqrs.Domain.ISaga&lt; TAuthenticationToken &gt;.GetUncommittedChanges</definition>
        <argsstring>()</argsstring>
        <name>GetUncommittedChanges</name>
        <reimplementedby refid="classCqrs_1_1Akka_1_1Domain_1_1AkkaSagaProxy_a8cad3415bc5474a01bfdb2db3a852ea5_1a8cad3415bc5474a01bfdb2db3a852ea5">GetUncommittedChanges</reimplementedby>
        <reimplementedby refid="classCqrs_1_1Domain_1_1Saga_a759b30b518c7fa5037ec4041054f349c_1a759b30b518c7fa5037ec4041054f349c">GetUncommittedChanges</reimplementedby>
        <reimplementedby refid="classCqrs_1_1Akka_1_1Domain_1_1AkkaSaga_a1fceccba498fa9f2d3db328a921da23d_1a1fceccba498fa9f2d3db328a921da23d">GetUncommittedChanges</reimplementedby>
        <briefdescription>
<para>Get all applied changes that haven&apos;t yet been committed. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/a99f043f4d1af837/Framework/Cqrs/Domain/ISaga.cs" line="50" column="1"/>
      </memberdef>
      <memberdef kind="function" id="interfaceCqrs_1_1Domain_1_1ISaga_a85c75f80bc5be4bad7f1d9f1231bfba7_1a85c75f80bc5be4bad7f1d9f1231bfba7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Cqrs.Domain.ISaga&lt; TAuthenticationToken &gt;.MarkChangesAsCommitted</definition>
        <argsstring>()</argsstring>
        <name>MarkChangesAsCommitted</name>
        <reimplementedby refid="classCqrs_1_1Akka_1_1Domain_1_1AkkaSagaProxy_a5a5c012bc0f7f957b8bd2298956ca9ae_1a5a5c012bc0f7f957b8bd2298956ca9ae">MarkChangesAsCommitted</reimplementedby>
        <reimplementedby refid="classCqrs_1_1Domain_1_1Saga_a9caac842ea6e88d6e502b63ca1820fe4_1a9caac842ea6e88d6e502b63ca1820fe4">MarkChangesAsCommitted</reimplementedby>
        <reimplementedby refid="classCqrs_1_1Akka_1_1Domain_1_1AkkaSaga_a83269fac4653cca097461e924feaea7f_1a83269fac4653cca097461e924feaea7f">MarkChangesAsCommitted</reimplementedby>
        <briefdescription>
<para>Mark all applied changes as committed, increment <ref refid="interfaceCqrs_1_1Domain_1_1ISaga_a83a02ff45543d670356dde4149cdc614_1a83a02ff45543d670356dde4149cdc614" kindref="member">Version</ref> and flush the internal collection of changes. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/a99f043f4d1af837/Framework/Cqrs/Domain/ISaga.cs" line="55" column="1"/>
      </memberdef>
      <memberdef kind="function" id="interfaceCqrs_1_1Domain_1_1ISaga_a2714804684bc65cf4dec79b4697b9b21_1a2714804684bc65cf4dec79b4697b9b21" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Cqrs.Domain.ISaga&lt; TAuthenticationToken &gt;.LoadFromHistory</definition>
        <argsstring>(IEnumerable&lt; ISagaEvent&lt; TAuthenticationToken &gt;&gt; history)</argsstring>
        <name>LoadFromHistory</name>
        <reimplementedby refid="classCqrs_1_1Akka_1_1Domain_1_1AkkaSagaProxy_a21b69799b046c1fcdf5b2443699dee0c_1a21b69799b046c1fcdf5b2443699dee0c">LoadFromHistory</reimplementedby>
        <reimplementedby refid="classCqrs_1_1Domain_1_1Saga_a6029fc09445e2093f7fb40e304a04ff8_1a6029fc09445e2093f7fb40e304a04ff8">LoadFromHistory</reimplementedby>
        <reimplementedby refid="classCqrs_1_1Akka_1_1Domain_1_1AkkaSaga_a40b859bc15c2f7c87a21b07f9bc9548c_1a40b859bc15c2f7c87a21b07f9bc9548c">LoadFromHistory</reimplementedby>
        <param>
          <type>IEnumerable&lt; <ref refid="interfaceCqrs_1_1Events_1_1ISagaEvent" kindref="compound">ISagaEvent</ref>&lt; TAuthenticationToken &gt;&gt;</type>
          <declname>history</declname>
        </param>
        <briefdescription>
<para>Apply all the <ref refid="" kindref="compound">events</ref> in <emphasis>history</emphasis>  using event replay to this instance. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/a99f043f4d1af837/Framework/Cqrs/Domain/ISaga.cs" line="61" column="1"/>
      </memberdef>
      <memberdef kind="function" id="interfaceCqrs_1_1Domain_1_1ISaga_abba76d72857107a14328c8b555f3883f_1abba76d72857107a14328c8b555f3883f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>IEnumerable&lt; <ref refid="interfaceCqrs_1_1Commands_1_1ICommand" kindref="compound">ICommand</ref>&lt; TAuthenticationToken &gt; &gt;</type>
        <definition>IEnumerable&lt;ICommand&lt;TAuthenticationToken&gt; &gt; Cqrs.Domain.ISaga&lt; TAuthenticationToken &gt;.GetUnpublishedCommands</definition>
        <argsstring>()</argsstring>
        <name>GetUnpublishedCommands</name>
        <reimplementedby refid="classCqrs_1_1Akka_1_1Domain_1_1AkkaSagaProxy_a959a64faad2d1a8f912c08362adab668_1a959a64faad2d1a8f912c08362adab668">GetUnpublishedCommands</reimplementedby>
        <reimplementedby refid="classCqrs_1_1Domain_1_1Saga_ac21a95f722235e90ea721542bed24148_1ac21a95f722235e90ea721542bed24148">GetUnpublishedCommands</reimplementedby>
        <reimplementedby refid="classCqrs_1_1Akka_1_1Domain_1_1AkkaSaga_a0776a9a8f387c01313aa12d06643249a_1a0776a9a8f387c01313aa12d06643249a">GetUnpublishedCommands</reimplementedby>
        <briefdescription>
<para>Get all pending commands that haven&apos;t yet been published yet. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/a99f043f4d1af837/Framework/Cqrs/Domain/ISaga.cs" line="66" column="1"/>
      </memberdef>
      <memberdef kind="function" id="interfaceCqrs_1_1Domain_1_1ISaga_a4ce7c6cb939b5d6a5afb7538da3d1680_1a4ce7c6cb939b5d6a5afb7538da3d1680" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Cqrs.Domain.ISaga&lt; TAuthenticationToken &gt;.MarkCommandsAsPublished</definition>
        <argsstring>()</argsstring>
        <name>MarkCommandsAsPublished</name>
        <reimplementedby refid="classCqrs_1_1Akka_1_1Domain_1_1AkkaSagaProxy_aec2b133ce13d4bcda56de80f9637330a_1aec2b133ce13d4bcda56de80f9637330a">MarkCommandsAsPublished</reimplementedby>
        <reimplementedby refid="classCqrs_1_1Akka_1_1Domain_1_1AkkaSaga_a8ba652a3fbc2025b3367ef73185f8a6f_1a8ba652a3fbc2025b3367ef73185f8a6f">MarkCommandsAsPublished</reimplementedby>
        <reimplementedby refid="classCqrs_1_1Domain_1_1Saga_ac0488c612d08f1bcd204e87968f3ab8a_1ac0488c612d08f1bcd204e87968f3ab8a">MarkCommandsAsPublished</reimplementedby>
        <briefdescription>
<para>Mark all published commands as published and flush the internal collection of commands. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/a99f043f4d1af837/Framework/Cqrs/Domain/ISaga.cs" line="71" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>An independent component that reacts to domain IEvent&lt;TAuthenticationToken&gt; in a cross-IAggregateRoot&lt;TAuthenticationToken&gt;, eventually consistent manner. Time can also be a trigger. A Saga&lt;TAuthenticationToken&gt; can sometimes be purely reactive, and sometimes represent workflows. </para>    </briefdescription>
    <detaileddescription>
<para>From an implementation perspective, a Saga&lt;TAuthenticationToken&gt; is a state machine that is driven forward by incoming IEvent&lt;TAuthenticationToken&gt; (which may come from many AggregateRoot&lt;TAuthenticationToken&gt; or other Saga&lt;TAuthenticationToken&gt;). Some states will have side effects, such as sending ICommand&lt;TAuthenticationToken&gt;, talking to external web services, or sending emails. </para><para>Isn&apos;t a Saga&lt;TAuthenticationToken&gt; just leaked domain logic? No. A Saga&lt;TAuthenticationToken&gt; can doing things that no individual AggregateRoot&lt;TAuthenticationToken&gt; can sensibly do. Thus, it&apos;s not a logic leak since the logic didn&apos;t belong in an AggregateRoot&lt;TAuthenticationToken&gt; anyway. Furthermore, we&apos;re not breaking encapsulation in any way, since Saga&lt;TAuthenticationToken&gt; operate with ICommand&lt;TAuthenticationToken&gt; and IEvent&lt;TAuthenticationToken&gt;, which are part of the public API.</para><para>How can I make my Saga&lt;TAuthenticationToken&gt; react to an IEvent&lt;TAuthenticationToken&gt; that did not happen? The Saga&lt;TAuthenticationToken&gt;, besides reacting to domain IEvent&lt;TAuthenticationToken&gt;, can be &quot;woken up&quot; by recurrent internal alarms. Implementing such alarms is easy. See cron in Unix, or triggered WebJobs in <ref refid="namespaceCqrs_1_1Azure" kindref="compound">Azure</ref> for examples.</para><para>How does the Saga&lt;TAuthenticationToken&gt; interact with the write side? By sending an ICommand&lt;TAuthenticationToken&gt; to it. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="1280">
        <label>Cqrs.Domain.ISaga&lt; TAuthenticationToken &gt;</label>
        <link refid="interfaceCqrs_1_1Domain_1_1ISaga"/>
      </node>
      <node id="1281">
        <label>Cqrs::Akka::Domain::AkkaSaga&lt; TAuthenticationToken &gt;</label>
        <link refid="classCqrs_1_1Akka_1_1Domain_1_1AkkaSaga"/>
        <childnode refid="1280" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1282">
        <label>Cqrs::Akka::Domain::AkkaSagaProxy&lt; TAuthenticationToken &gt;</label>
        <link refid="classCqrs_1_1Akka_1_1Domain_1_1AkkaSagaProxy"/>
        <childnode refid="1280" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1283">
        <label>Cqrs::Domain::Saga&lt; TAuthenticationToken &gt;</label>
        <link refid="classCqrs_1_1Domain_1_1Saga"/>
        <childnode refid="1280" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="/opt/buildAgent/work/a99f043f4d1af837/Framework/Cqrs/Domain/ISaga.cs" line="34" column="1" bodyfile="/opt/buildAgent/work/a99f043f4d1af837/Framework/Cqrs/Domain/ISaga.cs" bodystart="33" bodyend="72"/>
    <listofallmembers>
      <member refid="interfaceCqrs_1_1Domain_1_1ISaga_abb77811b4f7d19adb61f9d33da18e7e0_1abb77811b4f7d19adb61f9d33da18e7e0" prot="public" virt="non-virtual"><scope>Cqrs::Domain::ISaga</scope><name>GetUncommittedChanges</name></member>
      <member refid="interfaceCqrs_1_1Domain_1_1ISaga_abba76d72857107a14328c8b555f3883f_1abba76d72857107a14328c8b555f3883f" prot="public" virt="non-virtual"><scope>Cqrs::Domain::ISaga</scope><name>GetUnpublishedCommands</name></member>
      <member refid="interfaceCqrs_1_1Domain_1_1ISaga_aa470a39d3bcdc506dbd5bf49d127bc3c_1aa470a39d3bcdc506dbd5bf49d127bc3c" prot="public" virt="non-virtual"><scope>Cqrs::Domain::ISaga</scope><name>Id</name></member>
      <member refid="interfaceCqrs_1_1Domain_1_1ISaga_a2714804684bc65cf4dec79b4697b9b21_1a2714804684bc65cf4dec79b4697b9b21" prot="public" virt="non-virtual"><scope>Cqrs::Domain::ISaga</scope><name>LoadFromHistory</name></member>
      <member refid="interfaceCqrs_1_1Domain_1_1ISaga_a85c75f80bc5be4bad7f1d9f1231bfba7_1a85c75f80bc5be4bad7f1d9f1231bfba7" prot="public" virt="non-virtual"><scope>Cqrs::Domain::ISaga</scope><name>MarkChangesAsCommitted</name></member>
      <member refid="interfaceCqrs_1_1Domain_1_1ISaga_a4ce7c6cb939b5d6a5afb7538da3d1680_1a4ce7c6cb939b5d6a5afb7538da3d1680" prot="public" virt="non-virtual"><scope>Cqrs::Domain::ISaga</scope><name>MarkCommandsAsPublished</name></member>
      <member refid="interfaceCqrs_1_1Domain_1_1ISaga_a83a02ff45543d670356dde4149cdc614_1a83a02ff45543d670356dde4149cdc614" prot="public" virt="non-virtual"><scope>Cqrs::Domain::ISaga</scope><name>Version</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
