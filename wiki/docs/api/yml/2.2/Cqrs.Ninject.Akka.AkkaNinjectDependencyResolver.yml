### YamlMime:ManagedReference
items:
- uid: Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver
  commentId: T:Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver
  id: AkkaNinjectDependencyResolver
  parent: Cqrs.Ninject.Akka
  children:
  - Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.#ctor(Ninject.IKernel,Akka.Actor.ActorSystem)
  - Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.AggregateFactory
  - Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.AkkaActors
  - Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.AkkaResolve(System.Type,System.Object,System.Boolean)
  - Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.AkkaSystem
  - Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.BindDependencyResolver
  - Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.Cqrs#Akka#Domain#IAkkaSagaResolver#ResolveActor``2(System.Guid)
  - Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.RawAkkaNinjectDependencyResolver
  - Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.Resolve(System.Type)
  - Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.Resolve(System.Type,System.Object)
  - Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.ResolveActor``1
  - Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.ResolveActor``2(System.Guid)
  - Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.ResolveSagaActor``2(System.Guid)
  - Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.RootResolve(System.Type)
  - Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.Start(Ninject.IKernel,System.Boolean)
  - Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.Stop
  langs:
  - csharp
  - vb
  name: AkkaNinjectDependencyResolver
  nameWithType: AkkaNinjectDependencyResolver
  fullName: Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver
  type: Class
  source:
    remote:
      path: Framework/Ninject/Cqrs.Ninject.Akka/AkkaNinjectDependencyResolver.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: AkkaNinjectDependencyResolver
    path: Framework/Ninject/Cqrs.Ninject.Akka/AkkaNinjectDependencyResolver.cs
    startLine: 18
  assemblies:
  - Cqrs.Ninject.Akka
  namespace: Cqrs.Ninject.Akka
  summary: "\nProvides an ability to resolve instances of objects and Akka.NET objects using Ninject\n"
  example: []
  syntax:
    content: 'public class AkkaNinjectDependencyResolver : NinjectDependencyResolver, IDependencyResolver, IAkkaAggregateResolver, IAkkaSagaResolver, IHandlerResolver'
    content.vb: >-
      Public Class AkkaNinjectDependencyResolver
          Inherits NinjectDependencyResolver
          Implements IDependencyResolver, IAkkaAggregateResolver, IAkkaSagaResolver, IHandlerResolver
  inheritance:
  - System.Object
  - Cqrs.Configuration.DependencyResolver
  - Cqrs.Ninject.Configuration.NinjectDependencyResolver
  implements:
  - Cqrs.Configuration.IDependencyResolver
  - Cqrs.Akka.Domain.IAkkaAggregateResolver
  - Cqrs.Akka.Domain.IAkkaSagaResolver
  - Cqrs.Akka.Configuration.IHandlerResolver
  inheritedMembers:
  - Cqrs.Ninject.Configuration.NinjectDependencyResolver.Kernel
  - Cqrs.Ninject.Configuration.NinjectDependencyResolver.ModulesToLoad
  - Cqrs.Ninject.Configuration.NinjectDependencyResolver.DependencyResolverCreator
  - Cqrs.Ninject.Configuration.NinjectDependencyResolver.Start(IKernel,System.Boolean)
  - Cqrs.Ninject.Configuration.NinjectDependencyResolver.PrepareKernel(IKernel)
  - Cqrs.Ninject.Configuration.NinjectDependencyResolver.Resolve``1
  - Cqrs.Ninject.Configuration.NinjectDependencyResolver.Resolve(Type)
  - Cqrs.Configuration.DependencyResolver.Current
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.RawAkkaNinjectDependencyResolver
  commentId: P:Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.RawAkkaNinjectDependencyResolver
  id: RawAkkaNinjectDependencyResolver
  parent: Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver
  langs:
  - csharp
  - vb
  name: RawAkkaNinjectDependencyResolver
  nameWithType: AkkaNinjectDependencyResolver.RawAkkaNinjectDependencyResolver
  fullName: Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.RawAkkaNinjectDependencyResolver
  type: Property
  source:
    remote:
      path: Framework/Ninject/Cqrs.Ninject.Akka/AkkaNinjectDependencyResolver.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: RawAkkaNinjectDependencyResolver
    path: Framework/Ninject/Cqrs.Ninject.Akka/AkkaNinjectDependencyResolver.cs
    startLine: 27
  assemblies:
  - Cqrs.Ninject.Akka
  namespace: Cqrs.Ninject.Akka
  summary: "\nThe inner resolver used by Akka.NET\n"
  example: []
  syntax:
    content: protected NinjectDependencyResolver RawAkkaNinjectDependencyResolver { get; set; }
    parameters: []
    return:
      type: Akka.DI.Ninject.NinjectDependencyResolver
    content.vb: Protected Property RawAkkaNinjectDependencyResolver As NinjectDependencyResolver
  overload: Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.RawAkkaNinjectDependencyResolver*
  modifiers.csharp:
  - protected
  - get
  - set
  modifiers.vb:
  - Protected
- uid: Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.AkkaSystem
  commentId: P:Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.AkkaSystem
  id: AkkaSystem
  parent: Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver
  langs:
  - csharp
  - vb
  name: AkkaSystem
  nameWithType: AkkaNinjectDependencyResolver.AkkaSystem
  fullName: Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.AkkaSystem
  type: Property
  source:
    remote:
      path: Framework/Ninject/Cqrs.Ninject.Akka/AkkaNinjectDependencyResolver.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: AkkaSystem
    path: Framework/Ninject/Cqrs.Ninject.Akka/AkkaNinjectDependencyResolver.cs
    startLine: 32
  assemblies:
  - Cqrs.Ninject.Akka
  namespace: Cqrs.Ninject.Akka
  summary: "\nThe <xref href=\"Akka.Actor.ActorSystem\" data-throw-if-not-resolved=\"false\"></xref> as part of Akka.NET.\n"
  example: []
  syntax:
    content: protected ActorSystem AkkaSystem { get; }
    parameters: []
    return:
      type: Akka.Actor.ActorSystem
    content.vb: Protected ReadOnly Property AkkaSystem As ActorSystem
  overload: Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.AkkaSystem*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.AkkaActors
  commentId: P:Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.AkkaActors
  id: AkkaActors
  parent: Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver
  langs:
  - csharp
  - vb
  name: AkkaActors
  nameWithType: AkkaNinjectDependencyResolver.AkkaActors
  fullName: Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.AkkaActors
  type: Property
  source:
    remote:
      path: Framework/Ninject/Cqrs.Ninject.Akka/AkkaNinjectDependencyResolver.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: AkkaActors
    path: Framework/Ninject/Cqrs.Ninject.Akka/AkkaNinjectDependencyResolver.cs
    startLine: 37
  assemblies:
  - Cqrs.Ninject.Akka
  namespace: Cqrs.Ninject.Akka
  summary: "\nA generic type, quick reference, lookup for fast resolving of Akka.NET objects since the patterns calls for them to be treated like statics\n"
  example: []
  syntax:
    content: protected IDictionary<Type, IActorRef> AkkaActors { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.Type,Akka.Actor.IActorRef}
    content.vb: Protected ReadOnly Property AkkaActors As IDictionary(Of Type, IActorRef)
  overload: Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.AkkaActors*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.AggregateFactory
  commentId: P:Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.AggregateFactory
  id: AggregateFactory
  parent: Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver
  langs:
  - csharp
  - vb
  name: AggregateFactory
  nameWithType: AkkaNinjectDependencyResolver.AggregateFactory
  fullName: Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.AggregateFactory
  type: Property
  source:
    remote:
      path: Framework/Ninject/Cqrs.Ninject.Akka/AkkaNinjectDependencyResolver.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: AggregateFactory
    path: Framework/Ninject/Cqrs.Ninject.Akka/AkkaNinjectDependencyResolver.cs
    startLine: 42
  assemblies:
  - Cqrs.Ninject.Akka
  namespace: Cqrs.Ninject.Akka
  summary: "\nThe <xref href=\"Cqrs.Domain.Factories.IAggregateFactory\" data-throw-if-not-resolved=\"false\"></xref> that will be used to create new instances of Akka.NET objects.\n"
  example: []
  syntax:
    content: protected IAggregateFactory AggregateFactory { get; }
    parameters: []
    return:
      type: Cqrs.Domain.Factories.IAggregateFactory
    content.vb: Protected ReadOnly Property AggregateFactory As IAggregateFactory
  overload: Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.AggregateFactory*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.#ctor(Ninject.IKernel,Akka.Actor.ActorSystem)
  commentId: M:Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.#ctor(Ninject.IKernel,Akka.Actor.ActorSystem)
  id: '#ctor(Ninject.IKernel,Akka.Actor.ActorSystem)'
  parent: Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver
  langs:
  - csharp
  - vb
  name: AkkaNinjectDependencyResolver(IKernel, ActorSystem)
  nameWithType: AkkaNinjectDependencyResolver.AkkaNinjectDependencyResolver(IKernel, ActorSystem)
  fullName: Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.AkkaNinjectDependencyResolver(Ninject.IKernel, Akka.Actor.ActorSystem)
  type: Constructor
  source:
    remote:
      path: Framework/Ninject/Cqrs.Ninject.Akka/AkkaNinjectDependencyResolver.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: .ctor
    path: Framework/Ninject/Cqrs.Ninject.Akka/AkkaNinjectDependencyResolver.cs
    startLine: 47
  assemblies:
  - Cqrs.Ninject.Akka
  namespace: Cqrs.Ninject.Akka
  summary: "\nInstantiates a new instance of <xref href=\"Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public AkkaNinjectDependencyResolver(IKernel kernel, ActorSystem system)
    parameters:
    - id: kernel
      type: Ninject.IKernel
    - id: system
      type: Akka.Actor.ActorSystem
    content.vb: Public Sub New(kernel As IKernel, system As ActorSystem)
  overload: Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.BindDependencyResolver
  commentId: M:Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.BindDependencyResolver
  id: BindDependencyResolver
  parent: Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver
  langs:
  - csharp
  - vb
  name: BindDependencyResolver()
  nameWithType: AkkaNinjectDependencyResolver.BindDependencyResolver()
  fullName: Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.BindDependencyResolver()
  type: Method
  source:
    remote:
      path: Framework/Ninject/Cqrs.Ninject.Akka/AkkaNinjectDependencyResolver.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: BindDependencyResolver
    path: Framework/Ninject/Cqrs.Ninject.Akka/AkkaNinjectDependencyResolver.cs
    startLine: 61
  assemblies:
  - Cqrs.Ninject.Akka
  namespace: Cqrs.Ninject.Akka
  summary: "\nChecks if an instance of <xref href=\"Cqrs.Configuration.IDependencyResolver\" data-throw-if-not-resolved=\"false\"></xref> is already registered, if one is registered, it in unregistered and this instance is registered as the <xref href=\"Cqrs.Configuration.IDependencyResolver\" data-throw-if-not-resolved=\"false\"></xref>.\nIt then checks if an instance of <xref href=\"Cqrs.Akka.Domain.IAkkaAggregateResolver\" data-throw-if-not-resolved=\"false\"></xref> is already registered, if one is registered, it in unregistered and this instance is registered as the <xref href=\"Cqrs.Akka.Domain.IAkkaAggregateResolver\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: protected override void BindDependencyResolver()
    content.vb: Protected Overrides Sub BindDependencyResolver
  overridden: Cqrs.Ninject.Configuration.NinjectDependencyResolver.BindDependencyResolver
  overload: Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.BindDependencyResolver*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.Start(Ninject.IKernel,System.Boolean)
  commentId: M:Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.Start(Ninject.IKernel,System.Boolean)
  id: Start(Ninject.IKernel,System.Boolean)
  parent: Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver
  langs:
  - csharp
  - vb
  name: Start(IKernel, Boolean)
  nameWithType: AkkaNinjectDependencyResolver.Start(IKernel, Boolean)
  fullName: Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.Start(Ninject.IKernel, System.Boolean)
  type: Method
  source:
    remote:
      path: Framework/Ninject/Cqrs.Ninject.Akka/AkkaNinjectDependencyResolver.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Start
    path: Framework/Ninject/Cqrs.Ninject.Akka/AkkaNinjectDependencyResolver.cs
    startLine: 85
  assemblies:
  - Cqrs.Ninject.Akka
  namespace: Cqrs.Ninject.Akka
  summary: "\nStarts the <xref href=\"Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver\" data-throw-if-not-resolved=\"false\"></xref>\n"
  remarks: "\nThis exists so the static constructor can be triggered.\n"
  example: []
  syntax:
    content: public static void Start(IKernel kernel = null, bool prepareProvidedKernel = false)
    parameters:
    - id: kernel
      type: Ninject.IKernel
    - id: prepareProvidedKernel
      type: System.Boolean
    content.vb: Public Shared Sub Start(kernel As IKernel = Nothing, prepareProvidedKernel As Boolean = False)
  overload: Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.Start*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.Stop
  commentId: M:Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.Stop
  id: Stop
  parent: Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver
  langs:
  - csharp
  - vb
  name: Stop()
  nameWithType: AkkaNinjectDependencyResolver.Stop()
  fullName: Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.Stop()
  type: Method
  source:
    remote:
      path: Framework/Ninject/Cqrs.Ninject.Akka/AkkaNinjectDependencyResolver.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Stop
    path: Framework/Ninject/Cqrs.Ninject.Akka/AkkaNinjectDependencyResolver.cs
    startLine: 107
  assemblies:
  - Cqrs.Ninject.Akka
  namespace: Cqrs.Ninject.Akka
  summary: "\nCalls <xref href=\"Akka.Actor.ActorSystem.Shutdown\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public static void Stop()
    content.vb: Public Shared Sub Stop
  overload: Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.Stop*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.Resolve(System.Type)
  commentId: M:Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.Resolve(System.Type)
  id: Resolve(System.Type)
  parent: Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver
  langs:
  - csharp
  - vb
  name: Resolve(Type)
  nameWithType: AkkaNinjectDependencyResolver.Resolve(Type)
  fullName: Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.Resolve(System.Type)
  type: Method
  source:
    remote:
      path: Framework/Ninject/Cqrs.Ninject.Akka/AkkaNinjectDependencyResolver.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Resolve
    path: Framework/Ninject/Cqrs.Ninject.Akka/AkkaNinjectDependencyResolver.cs
    startLine: 119
  assemblies:
  - Cqrs.Ninject.Akka
  namespace: Cqrs.Ninject.Akka
  summary: "\nResolves instances of <span class=\"paramref\">serviceType</span> using <xref href=\"Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.Resolve(System.Type%2cSystem.Object)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public override object Resolve(Type serviceType)
    parameters:
    - id: serviceType
      type: System.Type
    return:
      type: System.Object
    content.vb: Public Overrides Function Resolve(serviceType As Type) As Object
  overridden: Cqrs.Configuration.DependencyResolver.Resolve(System.Type)
  overload: Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.Resolve*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.ResolveActor``2(System.Guid)
  commentId: M:Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.ResolveActor``2(System.Guid)
  id: ResolveActor``2(System.Guid)
  parent: Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver
  langs:
  - csharp
  - vb
  name: ResolveActor<TAggregate, TAuthenticationToken>(Guid)
  nameWithType: AkkaNinjectDependencyResolver.ResolveActor<TAggregate, TAuthenticationToken>(Guid)
  fullName: Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.ResolveActor<TAggregate, TAuthenticationToken>(System.Guid)
  type: Method
  source:
    remote:
      path: Framework/Ninject/Cqrs.Ninject.Akka/AkkaNinjectDependencyResolver.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: ResolveActor
    path: Framework/Ninject/Cqrs.Ninject.Akka/AkkaNinjectDependencyResolver.cs
    startLine: 131
  assemblies:
  - Cqrs.Ninject.Akka
  namespace: Cqrs.Ninject.Akka
  summary: "\nResolves instances of <span class=\"typeparamref\">TAggregate</span> using <xref href=\"Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.AkkaResolve(System.Type%2cSystem.Object%2cSystem.Boolean)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: 'public virtual IActorRef ResolveActor<TAggregate, TAuthenticationToken>(Guid rsn)where TAggregate : IAggregateRoot<TAuthenticationToken>'
    parameters:
    - id: rsn
      type: System.Guid
    typeParameters:
    - id: TAggregate
    - id: TAuthenticationToken
    return:
      type: Akka.Actor.IActorRef
    content.vb: Public Overridable Function ResolveActor(Of TAggregate As IAggregateRoot(Of TAuthenticationToken), TAuthenticationToken)(rsn As Guid) As IActorRef
  overload: Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.ResolveActor*
  implements:
  - Cqrs.Akka.Domain.IAkkaAggregateResolver.ResolveActor``2(System.Guid)
  nameWithType.vb: AkkaNinjectDependencyResolver.ResolveActor(Of TAggregate, TAuthenticationToken)(Guid)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.ResolveActor(Of TAggregate, TAuthenticationToken)(System.Guid)
  name.vb: ResolveActor(Of TAggregate, TAuthenticationToken)(Guid)
- uid: Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.ResolveActor``1
  commentId: M:Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.ResolveActor``1
  id: ResolveActor``1
  parent: Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver
  langs:
  - csharp
  - vb
  name: ResolveActor<T>()
  nameWithType: AkkaNinjectDependencyResolver.ResolveActor<T>()
  fullName: Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.ResolveActor<T>()
  type: Method
  source:
    remote:
      path: Framework/Ninject/Cqrs.Ninject.Akka/AkkaNinjectDependencyResolver.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: ResolveActor
    path: Framework/Ninject/Cqrs.Ninject.Akka/AkkaNinjectDependencyResolver.cs
    startLine: 140
  assemblies:
  - Cqrs.Ninject.Akka
  namespace: Cqrs.Ninject.Akka
  summary: "\nResolves instances of <span class=\"typeparamref\">T</span> using <xref href=\"Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.AkkaResolve(System.Type%2cSystem.Object%2cSystem.Boolean)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public IActorRef ResolveActor<T>()
    typeParameters:
    - id: T
    return:
      type: Akka.Actor.IActorRef
    content.vb: Public Function ResolveActor(Of T) As IActorRef
  overload: Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.ResolveActor*
  implements:
  - Cqrs.Akka.Domain.IAkkaAggregateResolver.ResolveActor``1
  - Cqrs.Akka.Domain.IAkkaSagaResolver.ResolveActor``1
  nameWithType.vb: AkkaNinjectDependencyResolver.ResolveActor(Of T)()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.ResolveActor(Of T)()
  name.vb: ResolveActor(Of T)()
- uid: Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.Cqrs#Akka#Domain#IAkkaSagaResolver#ResolveActor``2(System.Guid)
  commentId: M:Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.Cqrs#Akka#Domain#IAkkaSagaResolver#ResolveActor``2(System.Guid)
  id: Cqrs#Akka#Domain#IAkkaSagaResolver#ResolveActor``2(System.Guid)
  isEii: true
  parent: Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver
  langs:
  - csharp
  - vb
  name: IAkkaSagaResolver.ResolveActor<TSaga, TAuthenticationToken>(Guid)
  nameWithType: AkkaNinjectDependencyResolver.IAkkaSagaResolver.ResolveActor<TSaga, TAuthenticationToken>(Guid)
  fullName: Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.Cqrs.Akka.Domain.IAkkaSagaResolver.ResolveActor<TSaga, TAuthenticationToken>(System.Guid)
  type: Method
  source:
    remote:
      path: Framework/Ninject/Cqrs.Ninject.Akka/AkkaNinjectDependencyResolver.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Cqrs.Akka.Domain.IAkkaSagaResolver.ResolveActor
    path: Framework/Ninject/Cqrs.Ninject.Akka/AkkaNinjectDependencyResolver.cs
    startLine: 152
  assemblies:
  - Cqrs.Ninject.Akka
  namespace: Cqrs.Ninject.Akka
  summary: "\nResolves instances of <span class=\"typeparamref\">TSaga</span> using <xref href=\"Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.ResolveSagaActor%60%602(System.Guid)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: 'IActorRef IAkkaSagaResolver.ResolveActor<TSaga, TAuthenticationToken>(Guid rsn)where TSaga : ISaga<TAuthenticationToken>'
    parameters:
    - id: rsn
      type: System.Guid
    typeParameters:
    - id: TSaga
    - id: TAuthenticationToken
    return:
      type: Akka.Actor.IActorRef
    content.vb: Function Cqrs.Akka.Domain.IAkkaSagaResolver.ResolveActor(Of TSaga As ISaga(Of TAuthenticationToken), TAuthenticationToken)(rsn As Guid) As IActorRef Implements IAkkaSagaResolver.ResolveActor
  overload: Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.Cqrs#Akka#Domain#IAkkaSagaResolver#ResolveActor*
  implements:
  - Cqrs.Akka.Domain.IAkkaSagaResolver.ResolveActor``2(System.Guid)
  nameWithType.vb: AkkaNinjectDependencyResolver.Cqrs.Akka.Domain.IAkkaSagaResolver.ResolveActor(Of TSaga, TAuthenticationToken)(Guid)
  fullName.vb: Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.Cqrs.Akka.Domain.IAkkaSagaResolver.ResolveActor(Of TSaga, TAuthenticationToken)(System.Guid)
  name.vb: Cqrs.Akka.Domain.IAkkaSagaResolver.ResolveActor(Of TSaga, TAuthenticationToken)(Guid)
- uid: Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.ResolveSagaActor``2(System.Guid)
  commentId: M:Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.ResolveSagaActor``2(System.Guid)
  id: ResolveSagaActor``2(System.Guid)
  parent: Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver
  langs:
  - csharp
  - vb
  name: ResolveSagaActor<TSaga, TAuthenticationToken>(Guid)
  nameWithType: AkkaNinjectDependencyResolver.ResolveSagaActor<TSaga, TAuthenticationToken>(Guid)
  fullName: Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.ResolveSagaActor<TSaga, TAuthenticationToken>(System.Guid)
  type: Method
  source:
    remote:
      path: Framework/Ninject/Cqrs.Ninject.Akka/AkkaNinjectDependencyResolver.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: ResolveSagaActor
    path: Framework/Ninject/Cqrs.Ninject.Akka/AkkaNinjectDependencyResolver.cs
    startLine: 160
  assemblies:
  - Cqrs.Ninject.Akka
  namespace: Cqrs.Ninject.Akka
  summary: "\nResolves instances of <span class=\"typeparamref\">TSaga</span> using <xref href=\"Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.AkkaResolve(System.Type%2cSystem.Object%2cSystem.Boolean)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: 'public virtual IActorRef ResolveSagaActor<TSaga, TAuthenticationToken>(Guid rsn)where TSaga : ISaga<TAuthenticationToken>'
    parameters:
    - id: rsn
      type: System.Guid
    typeParameters:
    - id: TSaga
    - id: TAuthenticationToken
    return:
      type: Akka.Actor.IActorRef
    content.vb: Public Overridable Function ResolveSagaActor(Of TSaga As ISaga(Of TAuthenticationToken), TAuthenticationToken)(rsn As Guid) As IActorRef
  overload: Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.ResolveSagaActor*
  nameWithType.vb: AkkaNinjectDependencyResolver.ResolveSagaActor(Of TSaga, TAuthenticationToken)(Guid)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.ResolveSagaActor(Of TSaga, TAuthenticationToken)(System.Guid)
  name.vb: ResolveSagaActor(Of TSaga, TAuthenticationToken)(Guid)
- uid: Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.RootResolve(System.Type)
  commentId: M:Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.RootResolve(System.Type)
  id: RootResolve(System.Type)
  parent: Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver
  langs:
  - csharp
  - vb
  name: RootResolve(Type)
  nameWithType: AkkaNinjectDependencyResolver.RootResolve(Type)
  fullName: Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.RootResolve(System.Type)
  type: Method
  source:
    remote:
      path: Framework/Ninject/Cqrs.Ninject.Akka/AkkaNinjectDependencyResolver.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: RootResolve
    path: Framework/Ninject/Cqrs.Ninject.Akka/AkkaNinjectDependencyResolver.cs
    startLine: 171
  assemblies:
  - Cqrs.Ninject.Akka
  namespace: Cqrs.Ninject.Akka
  summary: "\nResolves instances of <span class=\"paramref\">serviceType</span> using <xref href=\"Cqrs.Configuration.IDependencyResolver.Resolve%60%601\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: protected virtual object RootResolve(Type serviceType)
    parameters:
    - id: serviceType
      type: System.Type
    return:
      type: System.Object
    content.vb: Protected Overridable Function RootResolve(serviceType As Type) As Object
  overload: Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.RootResolve*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.Resolve(System.Type,System.Object)
  commentId: M:Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.Resolve(System.Type,System.Object)
  id: Resolve(System.Type,System.Object)
  parent: Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver
  langs:
  - csharp
  - vb
  name: Resolve(Type, Object)
  nameWithType: AkkaNinjectDependencyResolver.Resolve(Type, Object)
  fullName: Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.Resolve(System.Type, System.Object)
  type: Method
  source:
    remote:
      path: Framework/Ninject/Cqrs.Ninject.Akka/AkkaNinjectDependencyResolver.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Resolve
    path: Framework/Ninject/Cqrs.Ninject.Akka/AkkaNinjectDependencyResolver.cs
    startLine: 179
  assemblies:
  - Cqrs.Ninject.Akka
  namespace: Cqrs.Ninject.Akka
  summary: "\nResolves instances of <span class=\"paramref\">serviceType</span> using <xref href=\"Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.AkkaResolve(System.Type%2cSystem.Object%2cSystem.Boolean)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public virtual object Resolve(Type serviceType, object rsn)
    parameters:
    - id: serviceType
      type: System.Type
    - id: rsn
      type: System.Object
    return:
      type: System.Object
    content.vb: Public Overridable Function Resolve(serviceType As Type, rsn As Object) As Object
  overload: Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.Resolve*
  implements:
  - Cqrs.Akka.Configuration.IHandlerResolver.Resolve(System.Type,System.Object)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.AkkaResolve(System.Type,System.Object,System.Boolean)
  commentId: M:Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.AkkaResolve(System.Type,System.Object,System.Boolean)
  id: AkkaResolve(System.Type,System.Object,System.Boolean)
  parent: Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver
  langs:
  - csharp
  - vb
  name: AkkaResolve(Type, Object, Boolean)
  nameWithType: AkkaNinjectDependencyResolver.AkkaResolve(Type, Object, Boolean)
  fullName: Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.AkkaResolve(System.Type, System.Object, System.Boolean)
  type: Method
  source:
    remote:
      path: Framework/Ninject/Cqrs.Ninject.Akka/AkkaNinjectDependencyResolver.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: AkkaResolve
    path: Framework/Ninject/Cqrs.Ninject.Akka/AkkaNinjectDependencyResolver.cs
    startLine: 187
  assemblies:
  - Cqrs.Ninject.Akka
  namespace: Cqrs.Ninject.Akka
  summary: "\nResolves instances of <span class=\"paramref\">serviceType</span> looking up <xref href=\"Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.AkkaActors\" data-throw-if-not-resolved=\"false\"></xref>, then <xref href=\"Cqrs.Configuration.IDependencyResolver.Resolve%60%601\" data-throw-if-not-resolved=\"false\"></xref> and finally <xref href=\"Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.AggregateFactory\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public virtual object AkkaResolve(Type serviceType, object rsn, bool isAForcedActorSearch = false)
    parameters:
    - id: serviceType
      type: System.Type
    - id: rsn
      type: System.Object
    - id: isAForcedActorSearch
      type: System.Boolean
    return:
      type: System.Object
    content.vb: Public Overridable Function AkkaResolve(serviceType As Type, rsn As Object, isAForcedActorSearch As Boolean = False) As Object
  overload: Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.AkkaResolve*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Cqrs.Ninject.Akka
  commentId: N:Cqrs.Ninject.Akka
  isExternal: false
  name: Cqrs.Ninject.Akka
  nameWithType: Cqrs.Ninject.Akka
  fullName: Cqrs.Ninject.Akka
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Cqrs.Configuration.DependencyResolver
  commentId: T:Cqrs.Configuration.DependencyResolver
  parent: Cqrs.Configuration
  isExternal: false
  name: DependencyResolver
  nameWithType: DependencyResolver
  fullName: Cqrs.Configuration.DependencyResolver
- uid: Cqrs.Ninject.Configuration.NinjectDependencyResolver
  commentId: T:Cqrs.Ninject.Configuration.NinjectDependencyResolver
  parent: Cqrs.Ninject.Configuration
  isExternal: false
  name: NinjectDependencyResolver
  nameWithType: NinjectDependencyResolver
  fullName: Cqrs.Ninject.Configuration.NinjectDependencyResolver
- uid: Cqrs.Configuration.IDependencyResolver
  commentId: T:Cqrs.Configuration.IDependencyResolver
  parent: Cqrs.Configuration
  isExternal: false
  name: IDependencyResolver
  nameWithType: IDependencyResolver
  fullName: Cqrs.Configuration.IDependencyResolver
- uid: Cqrs.Akka.Domain.IAkkaAggregateResolver
  commentId: T:Cqrs.Akka.Domain.IAkkaAggregateResolver
  parent: Cqrs.Akka.Domain
  isExternal: false
  name: IAkkaAggregateResolver
  nameWithType: IAkkaAggregateResolver
  fullName: Cqrs.Akka.Domain.IAkkaAggregateResolver
- uid: Cqrs.Akka.Domain.IAkkaSagaResolver
  commentId: T:Cqrs.Akka.Domain.IAkkaSagaResolver
  parent: Cqrs.Akka.Domain
  isExternal: false
  name: IAkkaSagaResolver
  nameWithType: IAkkaSagaResolver
  fullName: Cqrs.Akka.Domain.IAkkaSagaResolver
- uid: Cqrs.Akka.Configuration.IHandlerResolver
  commentId: T:Cqrs.Akka.Configuration.IHandlerResolver
  parent: Cqrs.Akka.Configuration
  isExternal: false
  name: IHandlerResolver
  nameWithType: IHandlerResolver
  fullName: Cqrs.Akka.Configuration.IHandlerResolver
- uid: Cqrs.Ninject.Configuration.NinjectDependencyResolver.Kernel
  commentId: P:Cqrs.Ninject.Configuration.NinjectDependencyResolver.Kernel
  parent: Cqrs.Ninject.Configuration.NinjectDependencyResolver
  isExternal: false
  name: Kernel
  nameWithType: NinjectDependencyResolver.Kernel
  fullName: Cqrs.Ninject.Configuration.NinjectDependencyResolver.Kernel
- uid: Cqrs.Ninject.Configuration.NinjectDependencyResolver.ModulesToLoad
  commentId: F:Cqrs.Ninject.Configuration.NinjectDependencyResolver.ModulesToLoad
  parent: Cqrs.Ninject.Configuration.NinjectDependencyResolver
  isExternal: false
  name: ModulesToLoad
  nameWithType: NinjectDependencyResolver.ModulesToLoad
  fullName: Cqrs.Ninject.Configuration.NinjectDependencyResolver.ModulesToLoad
- uid: Cqrs.Ninject.Configuration.NinjectDependencyResolver.DependencyResolverCreator
  commentId: P:Cqrs.Ninject.Configuration.NinjectDependencyResolver.DependencyResolverCreator
  parent: Cqrs.Ninject.Configuration.NinjectDependencyResolver
  isExternal: false
  name: DependencyResolverCreator
  nameWithType: NinjectDependencyResolver.DependencyResolverCreator
  fullName: Cqrs.Ninject.Configuration.NinjectDependencyResolver.DependencyResolverCreator
- uid: Cqrs.Ninject.Configuration.NinjectDependencyResolver.Start(IKernel,System.Boolean)
  commentId: M:Cqrs.Ninject.Configuration.NinjectDependencyResolver.Start(IKernel,System.Boolean)
  parent: Cqrs.Ninject.Configuration.NinjectDependencyResolver
  isExternal: true
  name: Start(IKernel, Boolean)
  nameWithType: NinjectDependencyResolver.Start(IKernel, Boolean)
  fullName: Cqrs.Ninject.Configuration.NinjectDependencyResolver.Start(IKernel, System.Boolean)
  spec.csharp:
  - uid: Cqrs.Ninject.Configuration.NinjectDependencyResolver.Start(IKernel,System.Boolean)
    name: Start
    nameWithType: NinjectDependencyResolver.Start
    fullName: Cqrs.Ninject.Configuration.NinjectDependencyResolver.Start
  - name: (
    nameWithType: (
    fullName: (
  - uid: IKernel
    name: IKernel
    nameWithType: IKernel
    fullName: IKernel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Ninject.Configuration.NinjectDependencyResolver.Start(IKernel,System.Boolean)
    name: Start
    nameWithType: NinjectDependencyResolver.Start
    fullName: Cqrs.Ninject.Configuration.NinjectDependencyResolver.Start
  - name: (
    nameWithType: (
    fullName: (
  - uid: IKernel
    name: IKernel
    nameWithType: IKernel
    fullName: IKernel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Ninject.Configuration.NinjectDependencyResolver.PrepareKernel(IKernel)
  commentId: M:Cqrs.Ninject.Configuration.NinjectDependencyResolver.PrepareKernel(IKernel)
  parent: Cqrs.Ninject.Configuration.NinjectDependencyResolver
  isExternal: true
  name: PrepareKernel(IKernel)
  nameWithType: NinjectDependencyResolver.PrepareKernel(IKernel)
  fullName: Cqrs.Ninject.Configuration.NinjectDependencyResolver.PrepareKernel(IKernel)
  spec.csharp:
  - uid: Cqrs.Ninject.Configuration.NinjectDependencyResolver.PrepareKernel(IKernel)
    name: PrepareKernel
    nameWithType: NinjectDependencyResolver.PrepareKernel
    fullName: Cqrs.Ninject.Configuration.NinjectDependencyResolver.PrepareKernel
  - name: (
    nameWithType: (
    fullName: (
  - uid: IKernel
    name: IKernel
    nameWithType: IKernel
    fullName: IKernel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Ninject.Configuration.NinjectDependencyResolver.PrepareKernel(IKernel)
    name: PrepareKernel
    nameWithType: NinjectDependencyResolver.PrepareKernel
    fullName: Cqrs.Ninject.Configuration.NinjectDependencyResolver.PrepareKernel
  - name: (
    nameWithType: (
    fullName: (
  - uid: IKernel
    name: IKernel
    nameWithType: IKernel
    fullName: IKernel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Ninject.Configuration.NinjectDependencyResolver.Resolve``1
  commentId: M:Cqrs.Ninject.Configuration.NinjectDependencyResolver.Resolve``1
  parent: Cqrs.Ninject.Configuration.NinjectDependencyResolver
  isExternal: false
  name: Resolve<T>()
  nameWithType: NinjectDependencyResolver.Resolve<T>()
  fullName: Cqrs.Ninject.Configuration.NinjectDependencyResolver.Resolve<T>()
  nameWithType.vb: NinjectDependencyResolver.Resolve(Of T)()
  fullName.vb: Cqrs.Ninject.Configuration.NinjectDependencyResolver.Resolve(Of T)()
  name.vb: Resolve(Of T)()
  spec.csharp:
  - uid: Cqrs.Ninject.Configuration.NinjectDependencyResolver.Resolve``1
    name: Resolve<T>
    nameWithType: NinjectDependencyResolver.Resolve<T>
    fullName: Cqrs.Ninject.Configuration.NinjectDependencyResolver.Resolve<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Ninject.Configuration.NinjectDependencyResolver.Resolve``1
    name: Resolve(Of T)
    nameWithType: NinjectDependencyResolver.Resolve(Of T)
    fullName: Cqrs.Ninject.Configuration.NinjectDependencyResolver.Resolve(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Ninject.Configuration.NinjectDependencyResolver.Resolve(Type)
  commentId: M:Cqrs.Ninject.Configuration.NinjectDependencyResolver.Resolve(Type)
  parent: Cqrs.Ninject.Configuration.NinjectDependencyResolver
  isExternal: true
  name: Resolve(Type)
  nameWithType: NinjectDependencyResolver.Resolve(Type)
  fullName: Cqrs.Ninject.Configuration.NinjectDependencyResolver.Resolve(Type)
  spec.csharp:
  - uid: Cqrs.Ninject.Configuration.NinjectDependencyResolver.Resolve(Type)
    name: Resolve
    nameWithType: NinjectDependencyResolver.Resolve
    fullName: Cqrs.Ninject.Configuration.NinjectDependencyResolver.Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: Type
    name: Type
    nameWithType: Type
    fullName: Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Ninject.Configuration.NinjectDependencyResolver.Resolve(Type)
    name: Resolve
    nameWithType: NinjectDependencyResolver.Resolve
    fullName: Cqrs.Ninject.Configuration.NinjectDependencyResolver.Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: Type
    name: Type
    nameWithType: Type
    fullName: Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Configuration.DependencyResolver.Current
  commentId: P:Cqrs.Configuration.DependencyResolver.Current
  parent: Cqrs.Configuration.DependencyResolver
  isExternal: false
  name: Current
  nameWithType: DependencyResolver.Current
  fullName: Cqrs.Configuration.DependencyResolver.Current
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Cqrs.Configuration
  commentId: N:Cqrs.Configuration
  isExternal: false
  name: Cqrs.Configuration
  nameWithType: Cqrs.Configuration
  fullName: Cqrs.Configuration
- uid: Cqrs.Ninject.Configuration
  commentId: N:Cqrs.Ninject.Configuration
  isExternal: false
  name: Cqrs.Ninject.Configuration
  nameWithType: Cqrs.Ninject.Configuration
  fullName: Cqrs.Ninject.Configuration
- uid: Cqrs.Akka.Domain
  commentId: N:Cqrs.Akka.Domain
  isExternal: false
  name: Cqrs.Akka.Domain
  nameWithType: Cqrs.Akka.Domain
  fullName: Cqrs.Akka.Domain
- uid: Cqrs.Akka.Configuration
  commentId: N:Cqrs.Akka.Configuration
  isExternal: false
  name: Cqrs.Akka.Configuration
  nameWithType: Cqrs.Akka.Configuration
  fullName: Cqrs.Akka.Configuration
- uid: Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.RawAkkaNinjectDependencyResolver*
  commentId: Overload:Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.RawAkkaNinjectDependencyResolver
  isExternal: false
  name: RawAkkaNinjectDependencyResolver
  nameWithType: AkkaNinjectDependencyResolver.RawAkkaNinjectDependencyResolver
  fullName: Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.RawAkkaNinjectDependencyResolver
- uid: Akka.DI.Ninject.NinjectDependencyResolver
  commentId: T:Akka.DI.Ninject.NinjectDependencyResolver
  parent: Akka.DI.Ninject
  isExternal: true
  name: NinjectDependencyResolver
  nameWithType: NinjectDependencyResolver
  fullName: Akka.DI.Ninject.NinjectDependencyResolver
- uid: Akka.DI.Ninject
  commentId: N:Akka.DI.Ninject
  isExternal: false
  name: Akka.DI.Ninject
  nameWithType: Akka.DI.Ninject
  fullName: Akka.DI.Ninject
- uid: Akka.Actor.ActorSystem
  commentId: T:Akka.Actor.ActorSystem
  parent: Akka.Actor
  isExternal: true
  name: ActorSystem
  nameWithType: ActorSystem
  fullName: Akka.Actor.ActorSystem
- uid: Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.AkkaSystem*
  commentId: Overload:Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.AkkaSystem
  isExternal: false
  name: AkkaSystem
  nameWithType: AkkaNinjectDependencyResolver.AkkaSystem
  fullName: Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.AkkaSystem
- uid: Akka.Actor
  commentId: N:Akka.Actor
  isExternal: false
  name: Akka.Actor
  nameWithType: Akka.Actor
  fullName: Akka.Actor
- uid: Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.AkkaActors*
  commentId: Overload:Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.AkkaActors
  isExternal: false
  name: AkkaActors
  nameWithType: AkkaNinjectDependencyResolver.AkkaActors
  fullName: Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.AkkaActors
- uid: System.Collections.Generic.IDictionary{System.Type,Akka.Actor.IActorRef}
  commentId: T:System.Collections.Generic.IDictionary{System.Type,Akka.Actor.IActorRef}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<Type, IActorRef>
  nameWithType: IDictionary<Type, IActorRef>
  fullName: System.Collections.Generic.IDictionary<System.Type, Akka.Actor.IActorRef>
  nameWithType.vb: IDictionary(Of Type, IActorRef)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.Type, Akka.Actor.IActorRef)
  name.vb: IDictionary(Of Type, IActorRef)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Akka.Actor.IActorRef
    name: IActorRef
    nameWithType: IActorRef
    fullName: Akka.Actor.IActorRef
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Akka.Actor.IActorRef
    name: IActorRef
    nameWithType: IActorRef
    fullName: Akka.Actor.IActorRef
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Cqrs.Domain.Factories.IAggregateFactory
  commentId: T:Cqrs.Domain.Factories.IAggregateFactory
  parent: Cqrs.Domain.Factories
  isExternal: false
  name: IAggregateFactory
  nameWithType: IAggregateFactory
  fullName: Cqrs.Domain.Factories.IAggregateFactory
- uid: Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.AggregateFactory*
  commentId: Overload:Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.AggregateFactory
  isExternal: false
  name: AggregateFactory
  nameWithType: AkkaNinjectDependencyResolver.AggregateFactory
  fullName: Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.AggregateFactory
- uid: Cqrs.Domain.Factories
  commentId: N:Cqrs.Domain.Factories
  isExternal: false
  name: Cqrs.Domain.Factories
  nameWithType: Cqrs.Domain.Factories
  fullName: Cqrs.Domain.Factories
- uid: Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver
  commentId: T:Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver
  isExternal: false
  name: AkkaNinjectDependencyResolver
  nameWithType: AkkaNinjectDependencyResolver
  fullName: Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver
- uid: Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.#ctor*
  commentId: Overload:Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.#ctor
  isExternal: false
  name: AkkaNinjectDependencyResolver
  nameWithType: AkkaNinjectDependencyResolver.AkkaNinjectDependencyResolver
  fullName: Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.AkkaNinjectDependencyResolver
- uid: Ninject.IKernel
  commentId: T:Ninject.IKernel
  parent: Ninject
  isExternal: true
  name: IKernel
  nameWithType: IKernel
  fullName: Ninject.IKernel
- uid: Ninject
  commentId: N:Ninject
  isExternal: false
  name: Ninject
  nameWithType: Ninject
  fullName: Ninject
- uid: Cqrs.Ninject.Configuration.NinjectDependencyResolver.BindDependencyResolver
  commentId: M:Cqrs.Ninject.Configuration.NinjectDependencyResolver.BindDependencyResolver
  parent: Cqrs.Ninject.Configuration.NinjectDependencyResolver
  isExternal: false
  name: BindDependencyResolver()
  nameWithType: NinjectDependencyResolver.BindDependencyResolver()
  fullName: Cqrs.Ninject.Configuration.NinjectDependencyResolver.BindDependencyResolver()
  spec.csharp:
  - uid: Cqrs.Ninject.Configuration.NinjectDependencyResolver.BindDependencyResolver
    name: BindDependencyResolver
    nameWithType: NinjectDependencyResolver.BindDependencyResolver
    fullName: Cqrs.Ninject.Configuration.NinjectDependencyResolver.BindDependencyResolver
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Ninject.Configuration.NinjectDependencyResolver.BindDependencyResolver
    name: BindDependencyResolver
    nameWithType: NinjectDependencyResolver.BindDependencyResolver
    fullName: Cqrs.Ninject.Configuration.NinjectDependencyResolver.BindDependencyResolver
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.BindDependencyResolver*
  commentId: Overload:Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.BindDependencyResolver
  isExternal: false
  name: BindDependencyResolver
  nameWithType: AkkaNinjectDependencyResolver.BindDependencyResolver
  fullName: Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.BindDependencyResolver
- uid: Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.Start*
  commentId: Overload:Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.Start
  isExternal: false
  name: Start
  nameWithType: AkkaNinjectDependencyResolver.Start
  fullName: Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.Start
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Akka.Actor.ActorSystem.Shutdown
  commentId: M:Akka.Actor.ActorSystem.Shutdown
- uid: Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.Stop*
  commentId: Overload:Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.Stop
  isExternal: false
  name: Stop
  nameWithType: AkkaNinjectDependencyResolver.Stop
  fullName: Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.Stop
- uid: Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.Resolve(System.Type,System.Object)
  commentId: M:Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.Resolve(System.Type,System.Object)
- uid: Cqrs.Configuration.DependencyResolver.Resolve(System.Type)
  commentId: M:Cqrs.Configuration.DependencyResolver.Resolve(System.Type)
  parent: Cqrs.Configuration.DependencyResolver
  isExternal: true
  name: Resolve(Type)
  nameWithType: DependencyResolver.Resolve(Type)
  fullName: Cqrs.Configuration.DependencyResolver.Resolve(System.Type)
  spec.csharp:
  - uid: Cqrs.Configuration.DependencyResolver.Resolve(System.Type)
    name: Resolve
    nameWithType: DependencyResolver.Resolve
    fullName: Cqrs.Configuration.DependencyResolver.Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Configuration.DependencyResolver.Resolve(System.Type)
    name: Resolve
    nameWithType: DependencyResolver.Resolve
    fullName: Cqrs.Configuration.DependencyResolver.Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.Resolve*
  commentId: Overload:Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.Resolve
  isExternal: false
  name: Resolve
  nameWithType: AkkaNinjectDependencyResolver.Resolve
  fullName: Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.Resolve
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.AkkaResolve(System.Type,System.Object,System.Boolean)
  commentId: M:Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.AkkaResolve(System.Type,System.Object,System.Boolean)
- uid: Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.ResolveActor*
  commentId: Overload:Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.ResolveActor
  isExternal: false
  name: ResolveActor
  nameWithType: AkkaNinjectDependencyResolver.ResolveActor
  fullName: Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.ResolveActor
- uid: Cqrs.Akka.Domain.IAkkaAggregateResolver.ResolveActor``2(System.Guid)
  commentId: M:Cqrs.Akka.Domain.IAkkaAggregateResolver.ResolveActor``2(System.Guid)
  parent: Cqrs.Akka.Domain.IAkkaAggregateResolver
  isExternal: true
  name: ResolveActor<TAggregate, TAuthenticationToken>(Guid)
  nameWithType: IAkkaAggregateResolver.ResolveActor<TAggregate, TAuthenticationToken>(Guid)
  fullName: Cqrs.Akka.Domain.IAkkaAggregateResolver.ResolveActor<TAggregate, TAuthenticationToken>(System.Guid)
  nameWithType.vb: IAkkaAggregateResolver.ResolveActor(Of TAggregate, TAuthenticationToken)(Guid)
  fullName.vb: Cqrs.Akka.Domain.IAkkaAggregateResolver.ResolveActor(Of TAggregate, TAuthenticationToken)(System.Guid)
  name.vb: ResolveActor(Of TAggregate, TAuthenticationToken)(Guid)
  spec.csharp:
  - uid: Cqrs.Akka.Domain.IAkkaAggregateResolver.ResolveActor``2(System.Guid)
    name: ResolveActor<TAggregate, TAuthenticationToken>
    nameWithType: IAkkaAggregateResolver.ResolveActor<TAggregate, TAuthenticationToken>
    fullName: Cqrs.Akka.Domain.IAkkaAggregateResolver.ResolveActor<TAggregate, TAuthenticationToken>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Akka.Domain.IAkkaAggregateResolver.ResolveActor``2(System.Guid)
    name: ResolveActor(Of TAggregate, TAuthenticationToken)
    nameWithType: IAkkaAggregateResolver.ResolveActor(Of TAggregate, TAuthenticationToken)
    fullName: Cqrs.Akka.Domain.IAkkaAggregateResolver.ResolveActor(Of TAggregate, TAuthenticationToken)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: Akka.Actor.IActorRef
  commentId: T:Akka.Actor.IActorRef
  parent: Akka.Actor
  isExternal: true
  name: IActorRef
  nameWithType: IActorRef
  fullName: Akka.Actor.IActorRef
- uid: Cqrs.Akka.Domain.IAkkaAggregateResolver.ResolveActor``1
  commentId: M:Cqrs.Akka.Domain.IAkkaAggregateResolver.ResolveActor``1
  parent: Cqrs.Akka.Domain.IAkkaAggregateResolver
  isExternal: false
  name: ResolveActor<T>()
  nameWithType: IAkkaAggregateResolver.ResolveActor<T>()
  fullName: Cqrs.Akka.Domain.IAkkaAggregateResolver.ResolveActor<T>()
  nameWithType.vb: IAkkaAggregateResolver.ResolveActor(Of T)()
  fullName.vb: Cqrs.Akka.Domain.IAkkaAggregateResolver.ResolveActor(Of T)()
  name.vb: ResolveActor(Of T)()
  spec.csharp:
  - uid: Cqrs.Akka.Domain.IAkkaAggregateResolver.ResolveActor``1
    name: ResolveActor<T>
    nameWithType: IAkkaAggregateResolver.ResolveActor<T>
    fullName: Cqrs.Akka.Domain.IAkkaAggregateResolver.ResolveActor<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Akka.Domain.IAkkaAggregateResolver.ResolveActor``1
    name: ResolveActor(Of T)
    nameWithType: IAkkaAggregateResolver.ResolveActor(Of T)
    fullName: Cqrs.Akka.Domain.IAkkaAggregateResolver.ResolveActor(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Akka.Domain.IAkkaSagaResolver.ResolveActor``1
  commentId: M:Cqrs.Akka.Domain.IAkkaSagaResolver.ResolveActor``1
  parent: Cqrs.Akka.Domain.IAkkaSagaResolver
  isExternal: false
  name: ResolveActor<T>()
  nameWithType: IAkkaSagaResolver.ResolveActor<T>()
  fullName: Cqrs.Akka.Domain.IAkkaSagaResolver.ResolveActor<T>()
  nameWithType.vb: IAkkaSagaResolver.ResolveActor(Of T)()
  fullName.vb: Cqrs.Akka.Domain.IAkkaSagaResolver.ResolveActor(Of T)()
  name.vb: ResolveActor(Of T)()
  spec.csharp:
  - uid: Cqrs.Akka.Domain.IAkkaSagaResolver.ResolveActor``1
    name: ResolveActor<T>
    nameWithType: IAkkaSagaResolver.ResolveActor<T>
    fullName: Cqrs.Akka.Domain.IAkkaSagaResolver.ResolveActor<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Akka.Domain.IAkkaSagaResolver.ResolveActor``1
    name: ResolveActor(Of T)
    nameWithType: IAkkaSagaResolver.ResolveActor(Of T)
    fullName: Cqrs.Akka.Domain.IAkkaSagaResolver.ResolveActor(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.ResolveSagaActor``2(System.Guid)
  commentId: M:Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.ResolveSagaActor``2(System.Guid)
- uid: Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.Cqrs#Akka#Domain#IAkkaSagaResolver#ResolveActor*
  commentId: Overload:Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.Cqrs#Akka#Domain#IAkkaSagaResolver#ResolveActor
  isExternal: false
  name: IAkkaSagaResolver.ResolveActor
  nameWithType: AkkaNinjectDependencyResolver.IAkkaSagaResolver.ResolveActor
  fullName: Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.Cqrs.Akka.Domain.IAkkaSagaResolver.ResolveActor
  nameWithType.vb: AkkaNinjectDependencyResolver.Cqrs.Akka.Domain.IAkkaSagaResolver.ResolveActor
  name.vb: Cqrs.Akka.Domain.IAkkaSagaResolver.ResolveActor
- uid: Cqrs.Akka.Domain.IAkkaSagaResolver.ResolveActor``2(System.Guid)
  commentId: M:Cqrs.Akka.Domain.IAkkaSagaResolver.ResolveActor``2(System.Guid)
  parent: Cqrs.Akka.Domain.IAkkaSagaResolver
  isExternal: true
  name: ResolveActor<TSaga, TAuthenticationToken>(Guid)
  nameWithType: IAkkaSagaResolver.ResolveActor<TSaga, TAuthenticationToken>(Guid)
  fullName: Cqrs.Akka.Domain.IAkkaSagaResolver.ResolveActor<TSaga, TAuthenticationToken>(System.Guid)
  nameWithType.vb: IAkkaSagaResolver.ResolveActor(Of TSaga, TAuthenticationToken)(Guid)
  fullName.vb: Cqrs.Akka.Domain.IAkkaSagaResolver.ResolveActor(Of TSaga, TAuthenticationToken)(System.Guid)
  name.vb: ResolveActor(Of TSaga, TAuthenticationToken)(Guid)
  spec.csharp:
  - uid: Cqrs.Akka.Domain.IAkkaSagaResolver.ResolveActor``2(System.Guid)
    name: ResolveActor<TSaga, TAuthenticationToken>
    nameWithType: IAkkaSagaResolver.ResolveActor<TSaga, TAuthenticationToken>
    fullName: Cqrs.Akka.Domain.IAkkaSagaResolver.ResolveActor<TSaga, TAuthenticationToken>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Akka.Domain.IAkkaSagaResolver.ResolveActor``2(System.Guid)
    name: ResolveActor(Of TSaga, TAuthenticationToken)
    nameWithType: IAkkaSagaResolver.ResolveActor(Of TSaga, TAuthenticationToken)
    fullName: Cqrs.Akka.Domain.IAkkaSagaResolver.ResolveActor(Of TSaga, TAuthenticationToken)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.ResolveSagaActor*
  commentId: Overload:Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.ResolveSagaActor
  isExternal: false
  name: ResolveSagaActor
  nameWithType: AkkaNinjectDependencyResolver.ResolveSagaActor
  fullName: Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.ResolveSagaActor
- uid: Cqrs.Configuration.IDependencyResolver.Resolve``1
  commentId: M:Cqrs.Configuration.IDependencyResolver.Resolve``1
  parent: Cqrs.Configuration.IDependencyResolver
  isExternal: false
  name: Resolve<T>()
  nameWithType: IDependencyResolver.Resolve<T>()
  fullName: Cqrs.Configuration.IDependencyResolver.Resolve<T>()
  nameWithType.vb: IDependencyResolver.Resolve(Of T)()
  fullName.vb: Cqrs.Configuration.IDependencyResolver.Resolve(Of T)()
  name.vb: Resolve(Of T)()
  spec.csharp:
  - uid: Cqrs.Configuration.IDependencyResolver.Resolve``1
    name: Resolve<T>
    nameWithType: IDependencyResolver.Resolve<T>
    fullName: Cqrs.Configuration.IDependencyResolver.Resolve<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Configuration.IDependencyResolver.Resolve``1
    name: Resolve(Of T)
    nameWithType: IDependencyResolver.Resolve(Of T)
    fullName: Cqrs.Configuration.IDependencyResolver.Resolve(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.RootResolve*
  commentId: Overload:Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.RootResolve
  isExternal: false
  name: RootResolve
  nameWithType: AkkaNinjectDependencyResolver.RootResolve
  fullName: Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.RootResolve
- uid: Cqrs.Akka.Configuration.IHandlerResolver.Resolve(System.Type,System.Object)
  commentId: M:Cqrs.Akka.Configuration.IHandlerResolver.Resolve(System.Type,System.Object)
  parent: Cqrs.Akka.Configuration.IHandlerResolver
  isExternal: true
  name: Resolve(Type, Object)
  nameWithType: IHandlerResolver.Resolve(Type, Object)
  fullName: Cqrs.Akka.Configuration.IHandlerResolver.Resolve(System.Type, System.Object)
  spec.csharp:
  - uid: Cqrs.Akka.Configuration.IHandlerResolver.Resolve(System.Type,System.Object)
    name: Resolve
    nameWithType: IHandlerResolver.Resolve
    fullName: Cqrs.Akka.Configuration.IHandlerResolver.Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Akka.Configuration.IHandlerResolver.Resolve(System.Type,System.Object)
    name: Resolve
    nameWithType: IHandlerResolver.Resolve
    fullName: Cqrs.Akka.Configuration.IHandlerResolver.Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.AkkaActors
  commentId: P:Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.AkkaActors
- uid: Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.AggregateFactory
  commentId: P:Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.AggregateFactory
- uid: Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.AkkaResolve*
  commentId: Overload:Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.AkkaResolve
  isExternal: false
  name: AkkaResolve
  nameWithType: AkkaNinjectDependencyResolver.AkkaResolve
  fullName: Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver.AkkaResolve
