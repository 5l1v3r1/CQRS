<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classCqrs_1_1Repositories_1_1Queries_1_1QueryBuilder" kind="class" language="C#" prot="public" abstract="yes">
    <compoundname>Cqrs::Repositories::Queries::QueryBuilder</compoundname>
    <basecompoundref refid="interfaceCqrs_1_1Repositories_1_1Queries_1_1IQueryBuilder" prot="public" virt="non-virtual">Cqrs::Repositories::Queries::IQueryBuilder&lt; TQueryStrategy, TData &gt;</basecompoundref>
    <derivedcompoundref refid="classCqrs_1_1Azure_1_1BlobStorage_1_1Repositories_1_1Queries_1_1BlobStorageQueryBuilder" prot="public" virt="non-virtual">Cqrs.Azure.BlobStorage.Repositories.Queries.BlobStorageQueryBuilder&lt; TQueryStrategy, TData &gt;</derivedcompoundref>
    <templateparamlist>
      <param>
        <type>TQueryStrategy</type>
      </param>
      <param>
        <type>TData</type>
      </param>
    </templateparamlist>
      <sectiondef kind="property">
      <memberdef kind="property" id="classCqrs_1_1Repositories_1_1Queries_1_1QueryBuilder_a8a64851b3bf82ed5d2e708cd39d71890_1a8a64851b3bf82ed5d2e708cd39d71890" prot="protected" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="yes" protectedsettable="no">
        <type><ref refid="interfaceCqrs_1_1DataStores_1_1IDataStore" kindref="compound">IDataStore</ref>&lt; TData &gt;</type>
        <definition>IDataStore&lt;TData&gt; Cqrs.Repositories.Queries.QueryBuilder&lt; TQueryStrategy, TData &gt;.DataStore</definition>
        <argsstring></argsstring>
        <name>DataStore</name>
        <briefdescription>
<para>Gets or set the IDataStore&lt;TData&gt; to use. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/565751ca98ebc594/Framework/Cqrs/Repositories/Queries/QueryBuilder.cs" line="29" column="1" bodyfile="/opt/buildAgent/work/565751ca98ebc594/Framework/Cqrs/Repositories/Queries/QueryBuilder.cs" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="classCqrs_1_1Repositories_1_1Queries_1_1QueryBuilder_aef22b10001de3e15a2817f8446a5b5f4_1aef22b10001de3e15a2817f8446a5b5f4" prot="protected" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="yes" protectedsettable="no">
        <type><ref refid="interfaceCqrs_1_1Configuration_1_1IDependencyResolver" kindref="compound">IDependencyResolver</ref></type>
        <definition>IDependencyResolver Cqrs.Repositories.Queries.QueryBuilder&lt; TQueryStrategy, TData &gt;.DependencyResolver</definition>
        <argsstring></argsstring>
        <name>DependencyResolver</name>
        <briefdescription>
<para>Gets or set the IDependencyResolver. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/565751ca98ebc594/Framework/Cqrs/Repositories/Queries/QueryBuilder.cs" line="34" column="1" bodyfile="/opt/buildAgent/work/565751ca98ebc594/Framework/Cqrs/Repositories/Queries/QueryBuilder.cs" bodystart="34" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classCqrs_1_1Repositories_1_1Queries_1_1QueryBuilder_a8a7b6495f78adedc7b7a82d2c83f17d5_1a8a7b6495f78adedc7b7a82d2c83f17d5" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Cqrs.Repositories.Queries.QueryBuilder&lt; TQueryStrategy, TData &gt;.QueryBuilder</definition>
        <argsstring>(IDataStore&lt; TData &gt; dataStore, IDependencyResolver dependencyResolver)</argsstring>
        <name>QueryBuilder</name>
        <param>
          <type><ref refid="interfaceCqrs_1_1DataStores_1_1IDataStore" kindref="compound">IDataStore</ref>&lt; TData &gt;</type>
          <declname>dataStore</declname>
        </param>
        <param>
          <type><ref refid="interfaceCqrs_1_1Configuration_1_1IDependencyResolver" kindref="compound">IDependencyResolver</ref></type>
          <declname>dependencyResolver</declname>
        </param>
        <briefdescription>
<para>Instantiates a new instance of <ref refid="classCqrs_1_1Repositories_1_1Queries_1_1QueryBuilder_a8a7b6495f78adedc7b7a82d2c83f17d5_1a8a7b6495f78adedc7b7a82d2c83f17d5" kindref="member">QueryBuilder&lt;TQueryStrategy,TData&gt;</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/565751ca98ebc594/Framework/Cqrs/Repositories/Queries/QueryBuilder.cs" line="39" column="1" bodyfile="/opt/buildAgent/work/565751ca98ebc594/Framework/Cqrs/Repositories/Queries/QueryBuilder.cs" bodystart="39" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Repositories_1_1Queries_1_1QueryBuilder_a7dc8f0da3bb4ef54b8cbdda6c50ee0a1_1a7dc8f0da3bb4ef54b8cbdda6c50ee0a1" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>IQueryable&lt; TData &gt;</type>
        <definition>virtual IQueryable&lt;TData&gt; Cqrs.Repositories.Queries.QueryBuilder&lt; TQueryStrategy, TData &gt;.GetEmptyQueryPredicate</definition>
        <argsstring>()</argsstring>
        <name>GetEmptyQueryPredicate</name>
        <reimplementedby refid="classCqrs_1_1Azure_1_1BlobStorage_1_1Repositories_1_1Queries_1_1BlobStorageQueryBuilder_a5987844de032c5473714dafcee7f4ae1_1a5987844de032c5473714dafcee7f4ae1">GetEmptyQueryPredicate</reimplementedby>
        <briefdescription>
<para>Returns the <ref refid="classCqrs_1_1Repositories_1_1Queries_1_1QueryBuilder_a8a64851b3bf82ed5d2e708cd39d71890_1a8a64851b3bf82ed5d2e708cd39d71890" kindref="member">DataStore</ref> itself. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/565751ca98ebc594/Framework/Cqrs/Repositories/Queries/QueryBuilder.cs" line="76" column="1" bodyfile="/opt/buildAgent/work/565751ca98ebc594/Framework/Cqrs/Repositories/Queries/QueryBuilder.cs" bodystart="76" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Repositories_1_1Queries_1_1QueryBuilder_a553ad69e77d37f28b40e6c9d8e98b716_1a553ad69e77d37f28b40e6c9d8e98b716" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>IQueryable&lt; TData &gt;</type>
        <definition>virtual IQueryable&lt;TData&gt; Cqrs.Repositories.Queries.QueryBuilder&lt; TQueryStrategy, TData &gt;.GeneratePredicate</definition>
        <argsstring>(IQueryPredicate queryPredicate, IQueryable&lt; TData &gt; leftHandQueryable=null)</argsstring>
        <name>GeneratePredicate</name>
        <param>
          <type><ref refid="interfaceCqrs_1_1Repositories_1_1Queries_1_1IQueryPredicate" kindref="compound">IQueryPredicate</ref></type>
          <declname>queryPredicate</declname>
        </param>
        <param>
          <type>IQueryable&lt; TData &gt;</type>
          <declname>leftHandQueryable</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
<para>Builds an IQueryable from the <emphasis>queryPredicate</emphasis>  and an optional <emphasis>leftHandQueryable</emphasis> . This recursively calls itself and may call <ref refid="classCqrs_1_1Repositories_1_1Queries_1_1QueryBuilder_a9a6596d3dd0e4489bfa2d5d93ac93ec8_1a9a6596d3dd0e4489bfa2d5d93ac93ec8" kindref="member">GeneratePredicateIsNotDeleted</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/565751ca98ebc594/Framework/Cqrs/Repositories/Queries/QueryBuilder.cs" line="85" column="1" bodyfile="/opt/buildAgent/work/565751ca98ebc594/Framework/Cqrs/Repositories/Queries/QueryBuilder.cs" bodystart="85" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Repositories_1_1Queries_1_1QueryBuilder_a9a6596d3dd0e4489bfa2d5d93ac93ec8_1a9a6596d3dd0e4489bfa2d5d93ac93ec8" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>IQueryable&lt; TData &gt;</type>
        <definition>virtual IQueryable&lt;TData&gt; Cqrs.Repositories.Queries.QueryBuilder&lt; TQueryStrategy, TData &gt;.GeneratePredicateIsNotDeleted</definition>
        <argsstring>(QueryPredicate queryPredicate, IQueryable&lt; TData &gt; leftHandQueryable=null)</argsstring>
        <name>GeneratePredicateIsNotDeleted</name>
        <param>
          <type><ref refid="classCqrs_1_1Repositories_1_1Queries_1_1QueryPredicate" kindref="compound">QueryPredicate</ref></type>
          <declname>queryPredicate</declname>
        </param>
        <param>
          <type>IQueryable&lt; TData &gt;</type>
          <declname>leftHandQueryable</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
<para>Builds the relevant IQueryable for <ref refid="classCqrs_1_1Repositories_1_1Queries_1_1QueryStrategy_aa872cafb9c17c9ea9d933be2ba209a6b_1aa872cafb9c17c9ea9d933be2ba209a6b" kindref="member">QueryStrategy.IsNotDeleted</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/565751ca98ebc594/Framework/Cqrs/Repositories/Queries/QueryBuilder.cs" line="111" column="1" bodyfile="/opt/buildAgent/work/565751ca98ebc594/Framework/Cqrs/Repositories/Queries/QueryBuilder.cs" bodystart="111" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Repositories_1_1Queries_1_1QueryBuilder_a7768a63fd46f991f87a00b51484c2f34_1a7768a63fd46f991f87a00b51484c2f34" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>IQueryable&lt; TData &gt;</type>
        <definition>virtual IQueryable&lt;TData&gt; Cqrs.Repositories.Queries.QueryBuilder&lt; TQueryStrategy, TData &gt;.GeneratePredicateWithPermissionScopeAny&lt; TAuthenticationToken &gt;</definition>
        <argsstring>(QueryPredicate queryPredicate, IQueryable&lt; TData &gt; leftHandQueryable)</argsstring>
        <name>GeneratePredicateWithPermissionScopeAny&lt; TAuthenticationToken &gt;</name>
        <param>
          <type><ref refid="classCqrs_1_1Repositories_1_1Queries_1_1QueryPredicate" kindref="compound">QueryPredicate</ref></type>
          <declname>queryPredicate</declname>
        </param>
        <param>
          <type>IQueryable&lt; TData &gt;</type>
          <declname>leftHandQueryable</declname>
        </param>
        <briefdescription>
<para>Builds the relevant IQueryable for <ref refid="classCqrs_1_1Repositories_1_1Queries_1_1QueryStrategy_a7fda4380a88972201258bf695ccaf287_1a7fda4380a88972201258bf695ccaf287" kindref="member">QueryStrategy.WithPermissionScopeAny&lt;TAuthenticationToken&gt;</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/565751ca98ebc594/Framework/Cqrs/Repositories/Queries/QueryBuilder.cs" line="130" column="1" bodyfile="/opt/buildAgent/work/565751ca98ebc594/Framework/Cqrs/Repositories/Queries/QueryBuilder.cs" bodystart="130" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Repositories_1_1Queries_1_1QueryBuilder_aee213115d002518b78463c7bc5fb5c52_1aee213115d002518b78463c7bc5fb5c52" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>IQueryable&lt; TData &gt;</type>
        <definition>virtual IQueryable&lt;TData&gt; Cqrs.Repositories.Queries.QueryBuilder&lt; TQueryStrategy, TData &gt;.OnGeneratePredicateWithPermissionScopeAny&lt; TAuthenticationToken &gt;</definition>
        <argsstring>(QueryPredicate queryPredicate, IQueryable&lt; TData &gt; leftHandQueryable)</argsstring>
        <name>OnGeneratePredicateWithPermissionScopeAny&lt; TAuthenticationToken &gt;</name>
        <param>
          <type><ref refid="classCqrs_1_1Repositories_1_1Queries_1_1QueryPredicate" kindref="compound">QueryPredicate</ref></type>
          <declname>queryPredicate</declname>
        </param>
        <param>
          <type>IQueryable&lt; TData &gt;</type>
          <declname>leftHandQueryable</declname>
        </param>
        <briefdescription>
<para>Returns <emphasis>leftHandQueryable</emphasis>  or calls <ref refid="classCqrs_1_1Repositories_1_1Queries_1_1QueryBuilder_a7dc8f0da3bb4ef54b8cbdda6c50ee0a1_1a7dc8f0da3bb4ef54b8cbdda6c50ee0a1" kindref="member">GetEmptyQueryPredicate</ref> if <emphasis>leftHandQueryable</emphasis>  is null. Override to build the relevant permission scope IQueryable. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/565751ca98ebc594/Framework/Cqrs/Repositories/Queries/QueryBuilder.cs" line="147" column="1" bodyfile="/opt/buildAgent/work/565751ca98ebc594/Framework/Cqrs/Repositories/Queries/QueryBuilder.cs" bodystart="147" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Repositories_1_1Queries_1_1QueryBuilder_a027cb88563991a842002c219d7589426_1a027cb88563991a842002c219d7589426" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>IQueryable&lt; TData &gt;</type>
        <definition>virtual IQueryable&lt;TData&gt; Cqrs.Repositories.Queries.QueryBuilder&lt; TQueryStrategy, TData &gt;.GeneratePredicateWithPermissionScopeUser&lt; TAuthenticationToken &gt;</definition>
        <argsstring>(QueryPredicate queryPredicate, IQueryable&lt; TData &gt; leftHandQueryable)</argsstring>
        <name>GeneratePredicateWithPermissionScopeUser&lt; TAuthenticationToken &gt;</name>
        <param>
          <type><ref refid="classCqrs_1_1Repositories_1_1Queries_1_1QueryPredicate" kindref="compound">QueryPredicate</ref></type>
          <declname>queryPredicate</declname>
        </param>
        <param>
          <type>IQueryable&lt; TData &gt;</type>
          <declname>leftHandQueryable</declname>
        </param>
        <briefdescription>
<para>Builds the relevant IQueryable for <ref refid="classCqrs_1_1Repositories_1_1Queries_1_1QueryStrategy_ad8b52782f5410a399949417b10820780_1ad8b52782f5410a399949417b10820780" kindref="member">QueryStrategy.WithPermissionScopeUser&lt;TAuthenticationToken&gt;</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/565751ca98ebc594/Framework/Cqrs/Repositories/Queries/QueryBuilder.cs" line="155" column="1" bodyfile="/opt/buildAgent/work/565751ca98ebc594/Framework/Cqrs/Repositories/Queries/QueryBuilder.cs" bodystart="155" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Repositories_1_1Queries_1_1QueryBuilder_a314592206fd5d2a25866227cc547dd6b_1a314592206fd5d2a25866227cc547dd6b" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>IQueryable&lt; TData &gt;</type>
        <definition>virtual IQueryable&lt;TData&gt; Cqrs.Repositories.Queries.QueryBuilder&lt; TQueryStrategy, TData &gt;.OnGeneratePredicateWithPermissionScopeUser&lt; TAuthenticationToken &gt;</definition>
        <argsstring>(QueryPredicate queryPredicate, IQueryable&lt; TData &gt; leftHandQueryable)</argsstring>
        <name>OnGeneratePredicateWithPermissionScopeUser&lt; TAuthenticationToken &gt;</name>
        <param>
          <type><ref refid="classCqrs_1_1Repositories_1_1Queries_1_1QueryPredicate" kindref="compound">QueryPredicate</ref></type>
          <declname>queryPredicate</declname>
        </param>
        <param>
          <type>IQueryable&lt; TData &gt;</type>
          <declname>leftHandQueryable</declname>
        </param>
        <briefdescription>
<para>Returns <emphasis>leftHandQueryable</emphasis>  or calls <ref refid="classCqrs_1_1Repositories_1_1Queries_1_1QueryBuilder_a7dc8f0da3bb4ef54b8cbdda6c50ee0a1_1a7dc8f0da3bb4ef54b8cbdda6c50ee0a1" kindref="member">GetEmptyQueryPredicate</ref> if <emphasis>leftHandQueryable</emphasis>  is null. Override to build the relevant permission scope IQueryable. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/565751ca98ebc594/Framework/Cqrs/Repositories/Queries/QueryBuilder.cs" line="172" column="1" bodyfile="/opt/buildAgent/work/565751ca98ebc594/Framework/Cqrs/Repositories/Queries/QueryBuilder.cs" bodystart="172" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Repositories_1_1Queries_1_1QueryBuilder_aa1341909b87629158efa619af12cec5f_1aa1341909b87629158efa619af12cec5f" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>IQueryable&lt; TData &gt;</type>
        <definition>virtual IQueryable&lt;TData&gt; Cqrs.Repositories.Queries.QueryBuilder&lt; TQueryStrategy, TData &gt;.GeneratePredicateWithPermissionScopeCompany&lt; TAuthenticationToken &gt;</definition>
        <argsstring>(QueryPredicate queryPredicate, IQueryable&lt; TData &gt; leftHandQueryable)</argsstring>
        <name>GeneratePredicateWithPermissionScopeCompany&lt; TAuthenticationToken &gt;</name>
        <param>
          <type><ref refid="classCqrs_1_1Repositories_1_1Queries_1_1QueryPredicate" kindref="compound">QueryPredicate</ref></type>
          <declname>queryPredicate</declname>
        </param>
        <param>
          <type>IQueryable&lt; TData &gt;</type>
          <declname>leftHandQueryable</declname>
        </param>
        <briefdescription>
<para>Builds the relevant IQueryable for <ref refid="classCqrs_1_1Repositories_1_1Queries_1_1QueryStrategy_a822a0901976ceadb3f096326860e3006_1a822a0901976ceadb3f096326860e3006" kindref="member">QueryStrategy.WithPermissionScopeCompany&lt;TAuthenticationToken&gt;</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/565751ca98ebc594/Framework/Cqrs/Repositories/Queries/QueryBuilder.cs" line="180" column="1" bodyfile="/opt/buildAgent/work/565751ca98ebc594/Framework/Cqrs/Repositories/Queries/QueryBuilder.cs" bodystart="180" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Repositories_1_1Queries_1_1QueryBuilder_a1f036fd121ef5181f846e6da72dddbad_1a1f036fd121ef5181f846e6da72dddbad" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>IQueryable&lt; TData &gt;</type>
        <definition>virtual IQueryable&lt;TData&gt; Cqrs.Repositories.Queries.QueryBuilder&lt; TQueryStrategy, TData &gt;.OnGeneratePredicateWithPermissionScopeCompany&lt; TAuthenticationToken &gt;</definition>
        <argsstring>(QueryPredicate queryPredicate, IQueryable&lt; TData &gt; leftHandQueryable)</argsstring>
        <name>OnGeneratePredicateWithPermissionScopeCompany&lt; TAuthenticationToken &gt;</name>
        <param>
          <type><ref refid="classCqrs_1_1Repositories_1_1Queries_1_1QueryPredicate" kindref="compound">QueryPredicate</ref></type>
          <declname>queryPredicate</declname>
        </param>
        <param>
          <type>IQueryable&lt; TData &gt;</type>
          <declname>leftHandQueryable</declname>
        </param>
        <briefdescription>
<para>Returns <emphasis>leftHandQueryable</emphasis>  or calls <ref refid="classCqrs_1_1Repositories_1_1Queries_1_1QueryBuilder_a7dc8f0da3bb4ef54b8cbdda6c50ee0a1_1a7dc8f0da3bb4ef54b8cbdda6c50ee0a1" kindref="member">GetEmptyQueryPredicate</ref> if <emphasis>leftHandQueryable</emphasis>  is null. Override to build the relevant permission scope IQueryable. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/565751ca98ebc594/Framework/Cqrs/Repositories/Queries/QueryBuilder.cs" line="197" column="1" bodyfile="/opt/buildAgent/work/565751ca98ebc594/Framework/Cqrs/Repositories/Queries/QueryBuilder.cs" bodystart="197" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Repositories_1_1Queries_1_1QueryBuilder_a49c0626c4137be11afbb1e398294e474_1a49c0626c4137be11afbb1e398294e474" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>IQueryable&lt; TData &gt;</type>
        <definition>virtual IQueryable&lt;TData&gt; Cqrs.Repositories.Queries.QueryBuilder&lt; TQueryStrategy, TData &gt;.GeneratePredicateWithPermissionScopeCompanyAndUser&lt; TAuthenticationToken &gt;</definition>
        <argsstring>(QueryPredicate queryPredicate, IQueryable&lt; TData &gt; leftHandQueryable)</argsstring>
        <name>GeneratePredicateWithPermissionScopeCompanyAndUser&lt; TAuthenticationToken &gt;</name>
        <param>
          <type><ref refid="classCqrs_1_1Repositories_1_1Queries_1_1QueryPredicate" kindref="compound">QueryPredicate</ref></type>
          <declname>queryPredicate</declname>
        </param>
        <param>
          <type>IQueryable&lt; TData &gt;</type>
          <declname>leftHandQueryable</declname>
        </param>
        <briefdescription>
<para>Builds the relevant IQueryable for <ref refid="classCqrs_1_1Repositories_1_1Queries_1_1QueryStrategy_ac21d8e8a04e218e1a7c283ad181e0e9f_1ac21d8e8a04e218e1a7c283ad181e0e9f" kindref="member">QueryStrategy.WithPermissionScopeCompanyAndUser&lt;TAuthenticationToken&gt;</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/565751ca98ebc594/Framework/Cqrs/Repositories/Queries/QueryBuilder.cs" line="205" column="1" bodyfile="/opt/buildAgent/work/565751ca98ebc594/Framework/Cqrs/Repositories/Queries/QueryBuilder.cs" bodystart="205" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Repositories_1_1Queries_1_1QueryBuilder_aded996242ae739440270f227ad777635_1aded996242ae739440270f227ad777635" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>IQueryable&lt; TData &gt;</type>
        <definition>virtual IQueryable&lt;TData&gt; Cqrs.Repositories.Queries.QueryBuilder&lt; TQueryStrategy, TData &gt;.OnGeneratePredicateWithPermissionScopeCompanyAndUser&lt; TAuthenticationToken &gt;</definition>
        <argsstring>(QueryPredicate queryPredicate, IQueryable&lt; TData &gt; leftHandQueryable)</argsstring>
        <name>OnGeneratePredicateWithPermissionScopeCompanyAndUser&lt; TAuthenticationToken &gt;</name>
        <param>
          <type><ref refid="classCqrs_1_1Repositories_1_1Queries_1_1QueryPredicate" kindref="compound">QueryPredicate</ref></type>
          <declname>queryPredicate</declname>
        </param>
        <param>
          <type>IQueryable&lt; TData &gt;</type>
          <declname>leftHandQueryable</declname>
        </param>
        <briefdescription>
<para>Returns <emphasis>leftHandQueryable</emphasis>  or calls <ref refid="classCqrs_1_1Repositories_1_1Queries_1_1QueryBuilder_a7dc8f0da3bb4ef54b8cbdda6c50ee0a1_1a7dc8f0da3bb4ef54b8cbdda6c50ee0a1" kindref="member">GetEmptyQueryPredicate</ref> if <emphasis>leftHandQueryable</emphasis>  is null. Override to build the relevant permission scope IQueryable. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/565751ca98ebc594/Framework/Cqrs/Repositories/Queries/QueryBuilder.cs" line="222" column="1" bodyfile="/opt/buildAgent/work/565751ca98ebc594/Framework/Cqrs/Repositories/Queries/QueryBuilder.cs" bodystart="222" bodyend="225"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Repositories_1_1Queries_1_1QueryBuilder_aa38989a8b4808c7c73e7cf038b535ea7_1aa38989a8b4808c7c73e7cf038b535ea7" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>abstract IQueryable&lt; TData &gt;</type>
        <definition>abstract IQueryable&lt;TData&gt; Cqrs.Repositories.Queries.QueryBuilder&lt; TQueryStrategy, TData &gt;.GeneratePredicate</definition>
        <argsstring>(QueryPredicate queryPredicate, IQueryable&lt; TData &gt; leftHandQueryable=null)</argsstring>
        <name>GeneratePredicate</name>
        <reimplementedby refid="classCqrs_1_1Azure_1_1BlobStorage_1_1Test_1_1Integration_1_1TestQueryBuilder_a33024ff6952fe0dbc51409e23c217ece_1a33024ff6952fe0dbc51409e23c217ece">GeneratePredicate</reimplementedby>
        <param>
          <type><ref refid="classCqrs_1_1Repositories_1_1Queries_1_1QueryPredicate" kindref="compound">QueryPredicate</ref></type>
          <declname>queryPredicate</declname>
        </param>
        <param>
          <type>IQueryable&lt; TData &gt;</type>
          <declname>leftHandQueryable</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
<para>Override to build an IQueryable from the <emphasis>queryPredicate</emphasis>  and an optional <emphasis>leftHandQueryable</emphasis> . </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/565751ca98ebc594/Framework/Cqrs/Repositories/Queries/QueryBuilder.cs" line="230" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Repositories_1_1Queries_1_1QueryBuilder_a09b5db1f6e86d02c04f132080e88aa38_1a09b5db1f6e86d02c04f132080e88aa38" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>string</type>
        <definition>virtual string Cqrs.Repositories.Queries.QueryBuilder&lt; TQueryStrategy, TData &gt;.GetFunctionNameOfType&lt; TParameter1 &gt;</definition>
        <argsstring>(Func&lt; TParameter1, IQueryPredicate &gt; expression)</argsstring>
        <name>GetFunctionNameOfType&lt; TParameter1 &gt;</name>
        <param>
          <type>Func&lt; TParameter1, <ref refid="interfaceCqrs_1_1Repositories_1_1Queries_1_1IQueryPredicate" kindref="compound">IQueryPredicate</ref> &gt;</type>
          <declname>expression</declname>
        </param>
        <briefdescription>
<para>Gets the Name of the method in <emphasis>expression</emphasis>  </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/565751ca98ebc594/Framework/Cqrs/Repositories/Queries/QueryBuilder.cs" line="235" column="1" bodyfile="/opt/buildAgent/work/565751ca98ebc594/Framework/Cqrs/Repositories/Queries/QueryBuilder.cs" bodystart="235" bodyend="238"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Repositories_1_1Queries_1_1QueryBuilder_a2fce57b724f5443ea75e2f17ae07d401_1a2fce57b724f5443ea75e2f17ae07d401" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>string</type>
        <definition>virtual string Cqrs.Repositories.Queries.QueryBuilder&lt; TQueryStrategy, TData &gt;.GetFunctionName&lt; T &gt;</definition>
        <argsstring>(Func&lt; T &gt; expression)</argsstring>
        <name>GetFunctionName&lt; T &gt;</name>
        <param>
          <type>Func&lt; T &gt;</type>
          <declname>expression</declname>
        </param>
        <briefdescription>
<para>Gets the Name of the method in <emphasis>expression</emphasis>  </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/565751ca98ebc594/Framework/Cqrs/Repositories/Queries/QueryBuilder.cs" line="243" column="1" bodyfile="/opt/buildAgent/work/565751ca98ebc594/Framework/Cqrs/Repositories/Queries/QueryBuilder.cs" bodystart="243" bodyend="246"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Repositories_1_1Queries_1_1QueryBuilder_ace3bdd5bf69a3d56f2e1ec19e75bf2cf_1ace3bdd5bf69a3d56f2e1ec19e75bf2cf" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>string</type>
        <definition>virtual string Cqrs.Repositories.Queries.QueryBuilder&lt; TQueryStrategy, TData &gt;.GetFunctionName&lt; TParameter1 &gt;</definition>
        <argsstring>(Func&lt; TParameter1, TQueryStrategy &gt; expression)</argsstring>
        <name>GetFunctionName&lt; TParameter1 &gt;</name>
        <param>
          <type>Func&lt; TParameter1, TQueryStrategy &gt;</type>
          <declname>expression</declname>
        </param>
        <briefdescription>
<para>Gets the Name of the method in <emphasis>expression</emphasis>  </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/565751ca98ebc594/Framework/Cqrs/Repositories/Queries/QueryBuilder.cs" line="251" column="1" bodyfile="/opt/buildAgent/work/565751ca98ebc594/Framework/Cqrs/Repositories/Queries/QueryBuilder.cs" bodystart="251" bodyend="254"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Repositories_1_1Queries_1_1QueryBuilder_a45c4e9123301de6f5b3cdd41c79e86ab_1a45c4e9123301de6f5b3cdd41c79e86ab" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>string</type>
        <definition>virtual string Cqrs.Repositories.Queries.QueryBuilder&lt; TQueryStrategy, TData &gt;.GetFunctionName&lt; TParameter1, TParameter2 &gt;</definition>
        <argsstring>(Func&lt; TParameter1, TParameter2, TQueryStrategy &gt; expression)</argsstring>
        <name>GetFunctionName&lt; TParameter1, TParameter2 &gt;</name>
        <param>
          <type>Func&lt; TParameter1, TParameter2, TQueryStrategy &gt;</type>
          <declname>expression</declname>
        </param>
        <briefdescription>
<para>Gets the Name of the method in <emphasis>expression</emphasis>  </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/565751ca98ebc594/Framework/Cqrs/Repositories/Queries/QueryBuilder.cs" line="259" column="1" bodyfile="/opt/buildAgent/work/565751ca98ebc594/Framework/Cqrs/Repositories/Queries/QueryBuilder.cs" bodystart="259" bodyend="262"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Repositories_1_1Queries_1_1QueryBuilder_a8fbbbe8bd1f48413c862668799987dec_1a8fbbbe8bd1f48413c862668799987dec" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>string</type>
        <definition>virtual string Cqrs.Repositories.Queries.QueryBuilder&lt; TQueryStrategy, TData &gt;.GetFunctionName&lt; TParameter1, TParameter2, TParameter3 &gt;</definition>
        <argsstring>(Func&lt; TParameter1, TParameter2, TParameter3, TQueryStrategy &gt; expression)</argsstring>
        <name>GetFunctionName&lt; TParameter1, TParameter2, TParameter3 &gt;</name>
        <param>
          <type>Func&lt; TParameter1, TParameter2, TParameter3, TQueryStrategy &gt;</type>
          <declname>expression</declname>
        </param>
        <briefdescription>
<para>Gets the Name of the method in <emphasis>expression</emphasis>  </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/565751ca98ebc594/Framework/Cqrs/Repositories/Queries/QueryBuilder.cs" line="267" column="1" bodyfile="/opt/buildAgent/work/565751ca98ebc594/Framework/Cqrs/Repositories/Queries/QueryBuilder.cs" bodystart="267" bodyend="270"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Repositories_1_1Queries_1_1QueryBuilder_aebcd9642f5cab863707bcfc2b4ad8b54_1aebcd9642f5cab863707bcfc2b4ad8b54" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>string</type>
        <definition>virtual string Cqrs.Repositories.Queries.QueryBuilder&lt; TQueryStrategy, TData &gt;.GetFunctionName&lt; TParameter1, TParameter2, TParameter3, TParameter4 &gt;</definition>
        <argsstring>(Func&lt; TParameter1, TParameter2, TParameter3, TParameter4, TQueryStrategy &gt; expression)</argsstring>
        <name>GetFunctionName&lt; TParameter1, TParameter2, TParameter3, TParameter4 &gt;</name>
        <param>
          <type>Func&lt; TParameter1, TParameter2, TParameter3, TParameter4, TQueryStrategy &gt;</type>
          <declname>expression</declname>
        </param>
        <briefdescription>
<para>Gets the Name of the method in <emphasis>expression</emphasis>  </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/565751ca98ebc594/Framework/Cqrs/Repositories/Queries/QueryBuilder.cs" line="275" column="1" bodyfile="/opt/buildAgent/work/565751ca98ebc594/Framework/Cqrs/Repositories/Queries/QueryBuilder.cs" bodystart="275" bodyend="278"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Repositories_1_1Queries_1_1QueryBuilder_a0228422245afb7fe388114236bb1aefa_1a0228422245afb7fe388114236bb1aefa" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>string</type>
        <definition>virtual string Cqrs.Repositories.Queries.QueryBuilder&lt; TQueryStrategy, TData &gt;.GetFunctionName&lt; TParameter1, TParameter2, TParameter3, TParameter4, TParameter5 &gt;</definition>
        <argsstring>(Func&lt; TParameter1, TParameter2, TParameter3, TParameter4, TParameter5, TQueryStrategy &gt; expression)</argsstring>
        <name>GetFunctionName&lt; TParameter1, TParameter2, TParameter3, TParameter4, TParameter5 &gt;</name>
        <param>
          <type>Func&lt; TParameter1, TParameter2, TParameter3, TParameter4, TParameter5, TQueryStrategy &gt;</type>
          <declname>expression</declname>
        </param>
        <briefdescription>
<para>Gets the Name of the method in <emphasis>expression</emphasis>  </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/565751ca98ebc594/Framework/Cqrs/Repositories/Queries/QueryBuilder.cs" line="283" column="1" bodyfile="/opt/buildAgent/work/565751ca98ebc594/Framework/Cqrs/Repositories/Queries/QueryBuilder.cs" bodystart="283" bodyend="286"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Repositories_1_1Queries_1_1QueryBuilder_a57b32d33321cbacfc7e58fec6ba3887c_1a57b32d33321cbacfc7e58fec6ba3887c" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>TQueryStrategy</type>
        <definition>virtual TQueryStrategy Cqrs.Repositories.Queries.QueryBuilder&lt; TQueryStrategy, TData &gt;.GetNullQueryStrategy</definition>
        <argsstring>()</argsstring>
        <name>GetNullQueryStrategy</name>
        <briefdescription>
<para>Uses Activator.CreateInstance&lt;T&gt; to create a new instance of <emphasis>TQueryStrategy</emphasis> . </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/565751ca98ebc594/Framework/Cqrs/Repositories/Queries/QueryBuilder.cs" line="291" column="1" bodyfile="/opt/buildAgent/work/565751ca98ebc594/Framework/Cqrs/Repositories/Queries/QueryBuilder.cs" bodystart="291" bodyend="301"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Repositories_1_1Queries_1_1QueryBuilder_aea4b78b2633babfaea0862f2a365c7d3_1aea4b78b2633babfaea0862f2a365c7d3" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Cqrs.Repositories.Queries.QueryBuilder&lt; TQueryStrategy, TData &gt;.ApplySorting</definition>
        <argsstring>(TQueryStrategy queryStrategy, ref IQueryable&lt; TData &gt; queryable)</argsstring>
        <name>ApplySorting</name>
        <param>
          <type>TQueryStrategy</type>
          <declname>queryStrategy</declname>
        </param>
        <param>
          <type>ref IQueryable&lt; TData &gt;</type>
          <declname>queryable</declname>
        </param>
        <briefdescription>
<para>Override to build or apply any sorting required to <emphasis>queryable</emphasis>  </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>queryStrategy</parametername>
</parameternamelist>
<parameterdescription>
<para>The <emphasis>TQueryStrategy</emphasis>  with sorting information.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>queryable</parametername>
</parameternamelist>
<parameterdescription>
<para>The IQueryable to apply sorting to.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/565751ca98ebc594/Framework/Cqrs/Repositories/Queries/QueryBuilder.cs" line="308" column="1" bodyfile="/opt/buildAgent/work/565751ca98ebc594/Framework/Cqrs/Repositories/Queries/QueryBuilder.cs" bodystart="308" bodyend="310"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classCqrs_1_1Repositories_1_1Queries_1_1QueryBuilder_a6b103726f538e81ca0489a51b1aa3c88_1a6b103726f538e81ca0489a51b1aa3c88" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>IQueryable&lt; TData &gt;</type>
        <definition>virtual IQueryable&lt;TData&gt; Cqrs.Repositories.Queries.QueryBuilder&lt; TQueryStrategy, TData &gt;.CreateQueryable</definition>
        <argsstring>(ISingleResultQuery&lt; TQueryStrategy, TData &gt; singleResultQuery)</argsstring>
        <name>CreateQueryable</name>
        <reimplements refid="interfaceCqrs_1_1Repositories_1_1Queries_1_1IQueryBuilder_a83cb87d485491c6d38fe8fa6fd649373_1a83cb87d485491c6d38fe8fa6fd649373">CreateQueryable</reimplements>
        <param>
          <type><ref refid="interfaceCqrs_1_1Repositories_1_1Queries_1_1ISingleResultQuery" kindref="compound">ISingleResultQuery</ref>&lt; TQueryStrategy, TData &gt;</type>
          <declname>singleResultQuery</declname>
        </param>
        <briefdescription>
<para>Create an IQueryable of <emphasis>TData</emphasis>  that expects a single <emphasis>TData</emphasis>  item. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>singleResultQuery</parametername>
</parameternamelist>
<parameterdescription>
<para>The query.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/565751ca98ebc594/Framework/Cqrs/Repositories/Queries/QueryBuilder.cs" line="52" column="1" bodyfile="/opt/buildAgent/work/565751ca98ebc594/Framework/Cqrs/Repositories/Queries/QueryBuilder.cs" bodystart="52" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Repositories_1_1Queries_1_1QueryBuilder_af8860edf3677cb80ae481f17ff2db9b5_1af8860edf3677cb80ae481f17ff2db9b5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>IQueryable&lt; TData &gt;</type>
        <definition>virtual IQueryable&lt;TData&gt; Cqrs.Repositories.Queries.QueryBuilder&lt; TQueryStrategy, TData &gt;.CreateQueryable</definition>
        <argsstring>(ICollectionResultQuery&lt; TQueryStrategy, TData &gt; collectionResultQuery)</argsstring>
        <name>CreateQueryable</name>
        <reimplements refid="interfaceCqrs_1_1Repositories_1_1Queries_1_1IQueryBuilder_ab903955b6fb1843a3e168b33252161a5_1ab903955b6fb1843a3e168b33252161a5">CreateQueryable</reimplements>
        <param>
          <type><ref refid="interfaceCqrs_1_1Repositories_1_1Queries_1_1ICollectionResultQuery" kindref="compound">ICollectionResultQuery</ref>&lt; TQueryStrategy, TData &gt;</type>
          <declname>collectionResultQuery</declname>
        </param>
        <briefdescription>
<para>Create an IQueryable of <emphasis>TData</emphasis>  that expects a collection of <emphasis>TData</emphasis>  items. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>collectionResultQuery</parametername>
</parameternamelist>
<parameterdescription>
<para>The query.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/565751ca98ebc594/Framework/Cqrs/Repositories/Queries/QueryBuilder.cs" line="64" column="1" bodyfile="/opt/buildAgent/work/565751ca98ebc594/Framework/Cqrs/Repositories/Queries/QueryBuilder.cs" bodystart="64" bodyend="69"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Builds an IQueryable from a <emphasis>TQueryStrategy</emphasis> . </para>    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>TQueryStrategy</parametername>
</parameternamelist>
<parameterdescription>
<para>The Type of the <ref refid="interfaceCqrs_1_1Repositories_1_1Queries_1_1IQueryStrategy" kindref="compound">IQueryStrategy</ref>.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>TData</parametername>
</parameternamelist>
<parameterdescription>
<para>The Type of data to query.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="2490">
        <label>IQueryBuilder&lt; TQueryStrategy, TData &gt;</label>
        <link refid="interfaceCqrs_1_1Repositories_1_1Queries_1_1IQueryBuilder"/>
      </node>
      <node id="2489">
        <label>Cqrs.Repositories.Queries.QueryBuilder&lt; TQueryStrategy, TData &gt;</label>
        <link refid="classCqrs_1_1Repositories_1_1Queries_1_1QueryBuilder"/>
        <childnode refid="2490" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2491">
        <label>Cqrs::Azure::BlobStorage::Repositories::Queries::BlobStorageQueryBuilder&lt; TQueryStrategy, TData &gt;</label>
        <link refid="classCqrs_1_1Azure_1_1BlobStorage_1_1Repositories_1_1Queries_1_1BlobStorageQueryBuilder"/>
        <childnode refid="2489" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2493">
        <label>IQueryBuilder&lt; TQueryStrategy, TData &gt;</label>
        <link refid="interfaceCqrs_1_1Repositories_1_1Queries_1_1IQueryBuilder"/>
      </node>
      <node id="2492">
        <label>Cqrs.Repositories.Queries.QueryBuilder&lt; TQueryStrategy, TData &gt;</label>
        <link refid="classCqrs_1_1Repositories_1_1Queries_1_1QueryBuilder"/>
        <childnode refid="2493" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/opt/buildAgent/work/565751ca98ebc594/Framework/Cqrs/Repositories/Queries/QueryBuilder.cs" line="25" column="1" bodyfile="/opt/buildAgent/work/565751ca98ebc594/Framework/Cqrs/Repositories/Queries/QueryBuilder.cs" bodystart="22" bodyend="311"/>
    <listofallmembers>
      <member refid="classCqrs_1_1Repositories_1_1Queries_1_1QueryBuilder_aea4b78b2633babfaea0862f2a365c7d3_1aea4b78b2633babfaea0862f2a365c7d3" prot="protected" virt="virtual"><scope>Cqrs::Repositories::Queries::QueryBuilder</scope><name>ApplySorting</name></member>
      <member refid="classCqrs_1_1Repositories_1_1Queries_1_1QueryBuilder_a6b103726f538e81ca0489a51b1aa3c88_1a6b103726f538e81ca0489a51b1aa3c88" prot="public" virt="virtual"><scope>Cqrs::Repositories::Queries::QueryBuilder</scope><name>CreateQueryable</name></member>
      <member refid="classCqrs_1_1Repositories_1_1Queries_1_1QueryBuilder_af8860edf3677cb80ae481f17ff2db9b5_1af8860edf3677cb80ae481f17ff2db9b5" prot="public" virt="virtual"><scope>Cqrs::Repositories::Queries::QueryBuilder</scope><name>CreateQueryable</name></member>
      <member refid="classCqrs_1_1Repositories_1_1Queries_1_1QueryBuilder_a8a64851b3bf82ed5d2e708cd39d71890_1a8a64851b3bf82ed5d2e708cd39d71890" prot="protected" virt="non-virtual"><scope>Cqrs::Repositories::Queries::QueryBuilder</scope><name>DataStore</name></member>
      <member refid="classCqrs_1_1Repositories_1_1Queries_1_1QueryBuilder_aef22b10001de3e15a2817f8446a5b5f4_1aef22b10001de3e15a2817f8446a5b5f4" prot="protected" virt="non-virtual"><scope>Cqrs::Repositories::Queries::QueryBuilder</scope><name>DependencyResolver</name></member>
      <member refid="classCqrs_1_1Repositories_1_1Queries_1_1QueryBuilder_a553ad69e77d37f28b40e6c9d8e98b716_1a553ad69e77d37f28b40e6c9d8e98b716" prot="protected" virt="virtual"><scope>Cqrs::Repositories::Queries::QueryBuilder</scope><name>GeneratePredicate</name></member>
      <member refid="classCqrs_1_1Repositories_1_1Queries_1_1QueryBuilder_aa38989a8b4808c7c73e7cf038b535ea7_1aa38989a8b4808c7c73e7cf038b535ea7" prot="protected" virt="pure-virtual"><scope>Cqrs::Repositories::Queries::QueryBuilder</scope><name>GeneratePredicate</name></member>
      <member refid="classCqrs_1_1Repositories_1_1Queries_1_1QueryBuilder_a9a6596d3dd0e4489bfa2d5d93ac93ec8_1a9a6596d3dd0e4489bfa2d5d93ac93ec8" prot="protected" virt="virtual"><scope>Cqrs::Repositories::Queries::QueryBuilder</scope><name>GeneratePredicateIsNotDeleted</name></member>
      <member refid="classCqrs_1_1Repositories_1_1Queries_1_1QueryBuilder_a7768a63fd46f991f87a00b51484c2f34_1a7768a63fd46f991f87a00b51484c2f34" prot="protected" virt="virtual"><scope>Cqrs::Repositories::Queries::QueryBuilder</scope><name>GeneratePredicateWithPermissionScopeAny&lt; TAuthenticationToken &gt;</name></member>
      <member refid="classCqrs_1_1Repositories_1_1Queries_1_1QueryBuilder_aa1341909b87629158efa619af12cec5f_1aa1341909b87629158efa619af12cec5f" prot="protected" virt="virtual"><scope>Cqrs::Repositories::Queries::QueryBuilder</scope><name>GeneratePredicateWithPermissionScopeCompany&lt; TAuthenticationToken &gt;</name></member>
      <member refid="classCqrs_1_1Repositories_1_1Queries_1_1QueryBuilder_a49c0626c4137be11afbb1e398294e474_1a49c0626c4137be11afbb1e398294e474" prot="protected" virt="virtual"><scope>Cqrs::Repositories::Queries::QueryBuilder</scope><name>GeneratePredicateWithPermissionScopeCompanyAndUser&lt; TAuthenticationToken &gt;</name></member>
      <member refid="classCqrs_1_1Repositories_1_1Queries_1_1QueryBuilder_a027cb88563991a842002c219d7589426_1a027cb88563991a842002c219d7589426" prot="protected" virt="virtual"><scope>Cqrs::Repositories::Queries::QueryBuilder</scope><name>GeneratePredicateWithPermissionScopeUser&lt; TAuthenticationToken &gt;</name></member>
      <member refid="classCqrs_1_1Repositories_1_1Queries_1_1QueryBuilder_a7dc8f0da3bb4ef54b8cbdda6c50ee0a1_1a7dc8f0da3bb4ef54b8cbdda6c50ee0a1" prot="protected" virt="virtual"><scope>Cqrs::Repositories::Queries::QueryBuilder</scope><name>GetEmptyQueryPredicate</name></member>
      <member refid="classCqrs_1_1Repositories_1_1Queries_1_1QueryBuilder_a2fce57b724f5443ea75e2f17ae07d401_1a2fce57b724f5443ea75e2f17ae07d401" prot="protected" virt="virtual"><scope>Cqrs::Repositories::Queries::QueryBuilder</scope><name>GetFunctionName&lt; T &gt;</name></member>
      <member refid="classCqrs_1_1Repositories_1_1Queries_1_1QueryBuilder_ace3bdd5bf69a3d56f2e1ec19e75bf2cf_1ace3bdd5bf69a3d56f2e1ec19e75bf2cf" prot="protected" virt="virtual"><scope>Cqrs::Repositories::Queries::QueryBuilder</scope><name>GetFunctionName&lt; TParameter1 &gt;</name></member>
      <member refid="classCqrs_1_1Repositories_1_1Queries_1_1QueryBuilder_a45c4e9123301de6f5b3cdd41c79e86ab_1a45c4e9123301de6f5b3cdd41c79e86ab" prot="protected" virt="virtual"><scope>Cqrs::Repositories::Queries::QueryBuilder</scope><name>GetFunctionName&lt; TParameter1, TParameter2 &gt;</name></member>
      <member refid="classCqrs_1_1Repositories_1_1Queries_1_1QueryBuilder_a8fbbbe8bd1f48413c862668799987dec_1a8fbbbe8bd1f48413c862668799987dec" prot="protected" virt="virtual"><scope>Cqrs::Repositories::Queries::QueryBuilder</scope><name>GetFunctionName&lt; TParameter1, TParameter2, TParameter3 &gt;</name></member>
      <member refid="classCqrs_1_1Repositories_1_1Queries_1_1QueryBuilder_aebcd9642f5cab863707bcfc2b4ad8b54_1aebcd9642f5cab863707bcfc2b4ad8b54" prot="protected" virt="virtual"><scope>Cqrs::Repositories::Queries::QueryBuilder</scope><name>GetFunctionName&lt; TParameter1, TParameter2, TParameter3, TParameter4 &gt;</name></member>
      <member refid="classCqrs_1_1Repositories_1_1Queries_1_1QueryBuilder_a0228422245afb7fe388114236bb1aefa_1a0228422245afb7fe388114236bb1aefa" prot="protected" virt="virtual"><scope>Cqrs::Repositories::Queries::QueryBuilder</scope><name>GetFunctionName&lt; TParameter1, TParameter2, TParameter3, TParameter4, TParameter5 &gt;</name></member>
      <member refid="classCqrs_1_1Repositories_1_1Queries_1_1QueryBuilder_a09b5db1f6e86d02c04f132080e88aa38_1a09b5db1f6e86d02c04f132080e88aa38" prot="protected" virt="virtual"><scope>Cqrs::Repositories::Queries::QueryBuilder</scope><name>GetFunctionNameOfType&lt; TParameter1 &gt;</name></member>
      <member refid="classCqrs_1_1Repositories_1_1Queries_1_1QueryBuilder_a57b32d33321cbacfc7e58fec6ba3887c_1a57b32d33321cbacfc7e58fec6ba3887c" prot="protected" virt="virtual"><scope>Cqrs::Repositories::Queries::QueryBuilder</scope><name>GetNullQueryStrategy</name></member>
      <member refid="classCqrs_1_1Repositories_1_1Queries_1_1QueryBuilder_aee213115d002518b78463c7bc5fb5c52_1aee213115d002518b78463c7bc5fb5c52" prot="protected" virt="virtual"><scope>Cqrs::Repositories::Queries::QueryBuilder</scope><name>OnGeneratePredicateWithPermissionScopeAny&lt; TAuthenticationToken &gt;</name></member>
      <member refid="classCqrs_1_1Repositories_1_1Queries_1_1QueryBuilder_a1f036fd121ef5181f846e6da72dddbad_1a1f036fd121ef5181f846e6da72dddbad" prot="protected" virt="virtual"><scope>Cqrs::Repositories::Queries::QueryBuilder</scope><name>OnGeneratePredicateWithPermissionScopeCompany&lt; TAuthenticationToken &gt;</name></member>
      <member refid="classCqrs_1_1Repositories_1_1Queries_1_1QueryBuilder_aded996242ae739440270f227ad777635_1aded996242ae739440270f227ad777635" prot="protected" virt="virtual"><scope>Cqrs::Repositories::Queries::QueryBuilder</scope><name>OnGeneratePredicateWithPermissionScopeCompanyAndUser&lt; TAuthenticationToken &gt;</name></member>
      <member refid="classCqrs_1_1Repositories_1_1Queries_1_1QueryBuilder_a314592206fd5d2a25866227cc547dd6b_1a314592206fd5d2a25866227cc547dd6b" prot="protected" virt="virtual"><scope>Cqrs::Repositories::Queries::QueryBuilder</scope><name>OnGeneratePredicateWithPermissionScopeUser&lt; TAuthenticationToken &gt;</name></member>
      <member refid="classCqrs_1_1Repositories_1_1Queries_1_1QueryBuilder_a8a7b6495f78adedc7b7a82d2c83f17d5_1a8a7b6495f78adedc7b7a82d2c83f17d5" prot="protected" virt="non-virtual"><scope>Cqrs::Repositories::Queries::QueryBuilder</scope><name>QueryBuilder</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
