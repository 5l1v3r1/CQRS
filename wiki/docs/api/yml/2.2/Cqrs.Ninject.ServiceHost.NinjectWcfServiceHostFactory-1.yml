### YamlMime:ManagedReference
items:
- uid: Cqrs.Ninject.ServiceHost.NinjectWcfServiceHostFactory`1
  commentId: T:Cqrs.Ninject.ServiceHost.NinjectWcfServiceHostFactory`1
  id: NinjectWcfServiceHostFactory`1
  parent: Cqrs.Ninject.ServiceHost
  children:
  - Cqrs.Ninject.ServiceHost.NinjectWcfServiceHostFactory`1.CreateServiceHost(System.Type,System.Uri[])
  langs:
  - csharp
  - vb
  name: NinjectWcfServiceHostFactory<TServiceType>
  nameWithType: NinjectWcfServiceHostFactory<TServiceType>
  fullName: Cqrs.Ninject.ServiceHost.NinjectWcfServiceHostFactory<TServiceType>
  type: Class
  source:
    remote:
      path: Framework/Ninject/Cqrs.Ninject.ServiceHost/NinjectWcfServiceHostFactory.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: NinjectWcfServiceHostFactory
    path: Framework/Ninject/Cqrs.Ninject.ServiceHost/NinjectWcfServiceHostFactory.cs
    startLine: 12
  assemblies:
  - Cqrs.Ninject.ServiceHost
  namespace: Cqrs.Ninject.ServiceHost
  summary: "\nA <xref href=\"Ninject.Extensions.Wcf.NinjectServiceHostFactory\" data-throw-if-not-resolved=\"false\"></xref> suitable for use with WCF.\n"
  example: []
  syntax:
    content: 'public class NinjectWcfServiceHostFactory<TServiceType> : NinjectServiceHostFactory'
    typeParameters:
    - id: TServiceType
      description: The <xref href="System.Type" data-throw-if-not-resolved="false"></xref> of the WCF service contract.
    content.vb: >-
      Public Class NinjectWcfServiceHostFactory(Of TServiceType)

          Inherits NinjectServiceHostFactory
  inheritance:
  - System.Object
  - System.ServiceModel.Activation.ServiceHostFactoryBase
  - System.ServiceModel.Activation.ServiceHostFactory
  - Ninject.Extensions.Wcf.BaseNinjectServiceHostFactory
  - Ninject.Extensions.Wcf.NinjectServiceHostFactory
  inheritedMembers:
  - Ninject.Extensions.Wcf.NinjectServiceHostFactory.ServiceHostType
  - Ninject.Extensions.Wcf.BaseNinjectServiceHostFactory.SetKernel(Ninject.IKernel)
  - System.ServiceModel.Activation.ServiceHostFactory.CreateServiceHost(System.String,System.Uri[])
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: NinjectWcfServiceHostFactory(Of TServiceType)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Cqrs.Ninject.ServiceHost.NinjectWcfServiceHostFactory(Of TServiceType)
  name.vb: NinjectWcfServiceHostFactory(Of TServiceType)
- uid: Cqrs.Ninject.ServiceHost.NinjectWcfServiceHostFactory`1.CreateServiceHost(System.Type,System.Uri[])
  commentId: M:Cqrs.Ninject.ServiceHost.NinjectWcfServiceHostFactory`1.CreateServiceHost(System.Type,System.Uri[])
  id: CreateServiceHost(System.Type,System.Uri[])
  parent: Cqrs.Ninject.ServiceHost.NinjectWcfServiceHostFactory`1
  langs:
  - csharp
  - vb
  name: CreateServiceHost(Type, Uri[])
  nameWithType: NinjectWcfServiceHostFactory<TServiceType>.CreateServiceHost(Type, Uri[])
  fullName: Cqrs.Ninject.ServiceHost.NinjectWcfServiceHostFactory<TServiceType>.CreateServiceHost(System.Type, System.Uri[])
  type: Method
  source:
    remote:
      path: Framework/Ninject/Cqrs.Ninject.ServiceHost/NinjectWcfServiceHostFactory.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: CreateServiceHost
    path: Framework/Ninject/Cqrs.Ninject.ServiceHost/NinjectWcfServiceHostFactory.cs
    startLine: 20
  assemblies:
  - Cqrs.Ninject.ServiceHost
  namespace: Cqrs.Ninject.ServiceHost
  summary: "\nCreates a <xref href=\"System.ServiceModel.ServiceHost\" data-throw-if-not-resolved=\"false\"></xref> for a specified type of service with a specific base address.\n"
  example: []
  syntax:
    content: protected override ServiceHost CreateServiceHost(Type serviceType, Uri[] baseAddresses)
    parameters:
    - id: serviceType
      type: System.Type
      description: Specifies the <xref href="System.Type" data-throw-if-not-resolved="false"></xref> of service to host.
    - id: baseAddresses
      type: System.Uri[]
      description: The <xref href="System.Array" data-throw-if-not-resolved="false"></xref> of type <xref href="System.Uri" data-throw-if-not-resolved="false"></xref> that contains the base addresses for the service hosted.
    return:
      type: System.ServiceModel.ServiceHost
      description: A <xref href="System.ServiceModel.ServiceHost" data-throw-if-not-resolved="false"></xref> for the type of service specified with a specific base address.
    content.vb: Protected Overrides Function CreateServiceHost(serviceType As Type, baseAddresses As Uri()) As ServiceHost
  overridden: Ninject.Extensions.Wcf.BaseNinjectServiceHostFactory.CreateServiceHost(System.Type,System.Uri[])
  overload: Cqrs.Ninject.ServiceHost.NinjectWcfServiceHostFactory`1.CreateServiceHost*
  nameWithType.vb: NinjectWcfServiceHostFactory(Of TServiceType).CreateServiceHost(Type, Uri())
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: Cqrs.Ninject.ServiceHost.NinjectWcfServiceHostFactory(Of TServiceType).CreateServiceHost(System.Type, System.Uri())
  name.vb: CreateServiceHost(Type, Uri())
references:
- uid: Ninject.Extensions.Wcf.NinjectServiceHostFactory
  commentId: T:Ninject.Extensions.Wcf.NinjectServiceHostFactory
  parent: Ninject.Extensions.Wcf
  isExternal: true
  name: NinjectServiceHostFactory
  nameWithType: NinjectServiceHostFactory
  fullName: Ninject.Extensions.Wcf.NinjectServiceHostFactory
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Cqrs.Ninject.ServiceHost
  commentId: N:Cqrs.Ninject.ServiceHost
  isExternal: false
  name: Cqrs.Ninject.ServiceHost
  nameWithType: Cqrs.Ninject.ServiceHost
  fullName: Cqrs.Ninject.ServiceHost
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ServiceModel.Activation.ServiceHostFactoryBase
  commentId: T:System.ServiceModel.Activation.ServiceHostFactoryBase
  parent: System.ServiceModel.Activation
  isExternal: true
  name: ServiceHostFactoryBase
  nameWithType: ServiceHostFactoryBase
  fullName: System.ServiceModel.Activation.ServiceHostFactoryBase
- uid: System.ServiceModel.Activation.ServiceHostFactory
  commentId: T:System.ServiceModel.Activation.ServiceHostFactory
  parent: System.ServiceModel.Activation
  isExternal: true
  name: ServiceHostFactory
  nameWithType: ServiceHostFactory
  fullName: System.ServiceModel.Activation.ServiceHostFactory
- uid: Ninject.Extensions.Wcf.BaseNinjectServiceHostFactory
  commentId: T:Ninject.Extensions.Wcf.BaseNinjectServiceHostFactory
  parent: Ninject.Extensions.Wcf
  isExternal: true
  name: BaseNinjectServiceHostFactory
  nameWithType: BaseNinjectServiceHostFactory
  fullName: Ninject.Extensions.Wcf.BaseNinjectServiceHostFactory
- uid: Ninject.Extensions.Wcf.NinjectServiceHostFactory.ServiceHostType
  commentId: P:Ninject.Extensions.Wcf.NinjectServiceHostFactory.ServiceHostType
  parent: Ninject.Extensions.Wcf.NinjectServiceHostFactory
  isExternal: true
  name: ServiceHostType
  nameWithType: NinjectServiceHostFactory.ServiceHostType
  fullName: Ninject.Extensions.Wcf.NinjectServiceHostFactory.ServiceHostType
- uid: Ninject.Extensions.Wcf.BaseNinjectServiceHostFactory.SetKernel(Ninject.IKernel)
  commentId: M:Ninject.Extensions.Wcf.BaseNinjectServiceHostFactory.SetKernel(Ninject.IKernel)
  parent: Ninject.Extensions.Wcf.BaseNinjectServiceHostFactory
  isExternal: true
  name: SetKernel(IKernel)
  nameWithType: BaseNinjectServiceHostFactory.SetKernel(IKernel)
  fullName: Ninject.Extensions.Wcf.BaseNinjectServiceHostFactory.SetKernel(Ninject.IKernel)
  spec.csharp:
  - uid: Ninject.Extensions.Wcf.BaseNinjectServiceHostFactory.SetKernel(Ninject.IKernel)
    name: SetKernel
    nameWithType: BaseNinjectServiceHostFactory.SetKernel
    fullName: Ninject.Extensions.Wcf.BaseNinjectServiceHostFactory.SetKernel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Ninject.IKernel
    name: IKernel
    nameWithType: IKernel
    fullName: Ninject.IKernel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Ninject.Extensions.Wcf.BaseNinjectServiceHostFactory.SetKernel(Ninject.IKernel)
    name: SetKernel
    nameWithType: BaseNinjectServiceHostFactory.SetKernel
    fullName: Ninject.Extensions.Wcf.BaseNinjectServiceHostFactory.SetKernel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Ninject.IKernel
    name: IKernel
    nameWithType: IKernel
    fullName: Ninject.IKernel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.Activation.ServiceHostFactory.CreateServiceHost(System.String,System.Uri[])
  commentId: M:System.ServiceModel.Activation.ServiceHostFactory.CreateServiceHost(System.String,System.Uri[])
  parent: System.ServiceModel.Activation.ServiceHostFactory
  isExternal: true
  name: CreateServiceHost(String, Uri[])
  nameWithType: ServiceHostFactory.CreateServiceHost(String, Uri[])
  fullName: System.ServiceModel.Activation.ServiceHostFactory.CreateServiceHost(System.String, System.Uri[])
  nameWithType.vb: ServiceHostFactory.CreateServiceHost(String, Uri())
  fullName.vb: System.ServiceModel.Activation.ServiceHostFactory.CreateServiceHost(System.String, System.Uri())
  name.vb: CreateServiceHost(String, Uri())
  spec.csharp:
  - uid: System.ServiceModel.Activation.ServiceHostFactory.CreateServiceHost(System.String,System.Uri[])
    name: CreateServiceHost
    nameWithType: ServiceHostFactory.CreateServiceHost
    fullName: System.ServiceModel.Activation.ServiceHostFactory.CreateServiceHost
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Activation.ServiceHostFactory.CreateServiceHost(System.String,System.Uri[])
    name: CreateServiceHost
    nameWithType: ServiceHostFactory.CreateServiceHost
    fullName: System.ServiceModel.Activation.ServiceHostFactory.CreateServiceHost
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Ninject.Extensions.Wcf
  commentId: N:Ninject.Extensions.Wcf
  isExternal: false
  name: Ninject.Extensions.Wcf
  nameWithType: Ninject.Extensions.Wcf
  fullName: Ninject.Extensions.Wcf
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.ServiceModel.Activation
  commentId: N:System.ServiceModel.Activation
  isExternal: false
  name: System.ServiceModel.Activation
  nameWithType: System.ServiceModel.Activation
  fullName: System.ServiceModel.Activation
- uid: System.ServiceModel.ServiceHost
  commentId: T:System.ServiceModel.ServiceHost
  parent: System.ServiceModel
  isExternal: true
  name: ServiceHost
  nameWithType: ServiceHost
  fullName: System.ServiceModel.ServiceHost
- uid: System.Array
  commentId: T:System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Uri
  commentId: T:System.Uri
- uid: Ninject.Extensions.Wcf.BaseNinjectServiceHostFactory.CreateServiceHost(System.Type,System.Uri[])
  commentId: M:Ninject.Extensions.Wcf.BaseNinjectServiceHostFactory.CreateServiceHost(System.Type,System.Uri[])
  parent: Ninject.Extensions.Wcf.BaseNinjectServiceHostFactory
  isExternal: true
  name: CreateServiceHost(Type, Uri[])
  nameWithType: BaseNinjectServiceHostFactory.CreateServiceHost(Type, Uri[])
  fullName: Ninject.Extensions.Wcf.BaseNinjectServiceHostFactory.CreateServiceHost(System.Type, System.Uri[])
  nameWithType.vb: BaseNinjectServiceHostFactory.CreateServiceHost(Type, Uri())
  fullName.vb: Ninject.Extensions.Wcf.BaseNinjectServiceHostFactory.CreateServiceHost(System.Type, System.Uri())
  name.vb: CreateServiceHost(Type, Uri())
  spec.csharp:
  - uid: Ninject.Extensions.Wcf.BaseNinjectServiceHostFactory.CreateServiceHost(System.Type,System.Uri[])
    name: CreateServiceHost
    nameWithType: BaseNinjectServiceHostFactory.CreateServiceHost
    fullName: Ninject.Extensions.Wcf.BaseNinjectServiceHostFactory.CreateServiceHost
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Ninject.Extensions.Wcf.BaseNinjectServiceHostFactory.CreateServiceHost(System.Type,System.Uri[])
    name: CreateServiceHost
    nameWithType: BaseNinjectServiceHostFactory.CreateServiceHost
    fullName: Ninject.Extensions.Wcf.BaseNinjectServiceHostFactory.CreateServiceHost
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Ninject.ServiceHost.NinjectWcfServiceHostFactory`1.CreateServiceHost*
  commentId: Overload:Cqrs.Ninject.ServiceHost.NinjectWcfServiceHostFactory`1.CreateServiceHost
  isExternal: false
  name: CreateServiceHost
  nameWithType: NinjectWcfServiceHostFactory<TServiceType>.CreateServiceHost
  fullName: Cqrs.Ninject.ServiceHost.NinjectWcfServiceHostFactory<TServiceType>.CreateServiceHost
  nameWithType.vb: NinjectWcfServiceHostFactory(Of TServiceType).CreateServiceHost
  fullName.vb: Cqrs.Ninject.ServiceHost.NinjectWcfServiceHostFactory(Of TServiceType).CreateServiceHost
- uid: System.Uri[]
  name: Uri[]
  nameWithType: Uri[]
  fullName: System.Uri[]
  nameWithType.vb: Uri()
  fullName.vb: System.Uri()
  name.vb: Uri()
  spec.csharp:
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.ServiceModel
  commentId: N:System.ServiceModel
  isExternal: false
  name: System.ServiceModel
  nameWithType: System.ServiceModel
  fullName: System.ServiceModel
