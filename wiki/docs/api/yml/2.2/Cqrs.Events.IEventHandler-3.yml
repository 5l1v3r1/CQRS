### YamlMime:ManagedReference
items:
- uid: Cqrs.Events.IEventHandler`3
  commentId: T:Cqrs.Events.IEventHandler`3
  id: IEventHandler`3
  parent: Cqrs.Events
  children: []
  langs:
  - csharp
  - vb
  name: IEventHandler<TAuthenticationToken, TTarget, TEvent>
  nameWithType: IEventHandler<TAuthenticationToken, TTarget, TEvent>
  fullName: Cqrs.Events.IEventHandler<TAuthenticationToken, TTarget, TEvent>
  type: Interface
  source:
    remote:
      path: Framework/Cqrs/Events/IEventHandler.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: IEventHandler
    path: Framework/Cqrs/Events/IEventHandler.cs
    startLine: 19
  assemblies:
  - Cqrs
  namespace: Cqrs.Events
  summary: "\nResponds to or &quot;Handles&quot; a <span class=\"typeparamref\">TEvent</span>.\n"
  example: []
  syntax:
    content: 'public interface IEventHandler<TAuthenticationToken, TTarget, in TEvent> : IEventHandler<TAuthenticationToken, TEvent>, IMessageHandler<TEvent>, IEventHandler, IHandler where TEvent : IEvent<TAuthenticationToken>'
    typeParameters:
    - id: TAuthenticationToken
      description: The <xref href="System.Type" data-throw-if-not-resolved="false"></xref> of the authentication token.
    - id: TTarget
      description: The <xref href="System.Type" data-throw-if-not-resolved="false"></xref> of the object that is targeted that needs concurrency.
    - id: TEvent
      description: The <xref href="System.Type" data-throw-if-not-resolved="false"></xref> of <xref href="Cqrs.Events.IEvent%601" data-throw-if-not-resolved="false"></xref> that can be handled.
    content.vb: >-
      Public Interface IEventHandler(Of TAuthenticationToken, TTarget, In TEvent As IEvent(Of TAuthenticationToken))
          Inherits IEventHandler(Of TAuthenticationToken, TEvent)
  inheritedMembers:
  - Cqrs.Messages.IMessageHandler{{TEvent}}.Handle({TEvent})
  nameWithType.vb: IEventHandler(Of TAuthenticationToken, TTarget, TEvent)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: Cqrs.Events.IEventHandler(Of TAuthenticationToken, TTarget, TEvent)
  name.vb: IEventHandler(Of TAuthenticationToken, TTarget, TEvent)
references:
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Cqrs.Events.IEvent`1
  commentId: T:Cqrs.Events.IEvent`1
  isExternal: false
  name: IEvent<TAuthenticationToken>
  nameWithType: IEvent<TAuthenticationToken>
  fullName: Cqrs.Events.IEvent<TAuthenticationToken>
  nameWithType.vb: IEvent(Of TAuthenticationToken)
  fullName.vb: Cqrs.Events.IEvent(Of TAuthenticationToken)
  name.vb: IEvent(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Events
  commentId: N:Cqrs.Events
  isExternal: false
  name: Cqrs.Events
  nameWithType: Cqrs.Events
  fullName: Cqrs.Events
- uid: Cqrs.Messages.IMessageHandler{{TEvent}}.Handle({TEvent})
  commentId: M:Cqrs.Messages.IMessageHandler{`2}.Handle(`2)
  parent: Cqrs.Messages.IMessageHandler{{TEvent}}
  definition: Cqrs.Messages.IMessageHandler`1.Handle(`0)
  name: Handle(TEvent)
  nameWithType: IMessageHandler<TEvent>.Handle(TEvent)
  fullName: Cqrs.Messages.IMessageHandler<TEvent>.Handle(TEvent)
  nameWithType.vb: IMessageHandler(Of TEvent).Handle(TEvent)
  fullName.vb: Cqrs.Messages.IMessageHandler(Of TEvent).Handle(TEvent)
  spec.csharp:
  - uid: Cqrs.Messages.IMessageHandler`1.Handle(`0)
    name: Handle
    nameWithType: IMessageHandler<TEvent>.Handle
    fullName: Cqrs.Messages.IMessageHandler<TEvent>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - name: TEvent
    nameWithType: TEvent
    fullName: TEvent
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Messages.IMessageHandler`1.Handle(`0)
    name: Handle
    nameWithType: IMessageHandler(Of TEvent).Handle
    fullName: Cqrs.Messages.IMessageHandler(Of TEvent).Handle
  - name: (
    nameWithType: (
    fullName: (
  - name: TEvent
    nameWithType: TEvent
    fullName: TEvent
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Cqrs.Messages.IMessageHandler`1.Handle(`0)
  commentId: M:Cqrs.Messages.IMessageHandler`1.Handle(`0)
  isExternal: false
  name: Handle(TMessage)
  nameWithType: IMessageHandler<TMessage>.Handle(TMessage)
  fullName: Cqrs.Messages.IMessageHandler<TMessage>.Handle(TMessage)
  nameWithType.vb: IMessageHandler(Of TMessage).Handle(TMessage)
  fullName.vb: Cqrs.Messages.IMessageHandler(Of TMessage).Handle(TMessage)
  spec.csharp:
  - uid: Cqrs.Messages.IMessageHandler`1.Handle(`0)
    name: Handle
    nameWithType: IMessageHandler<TMessage>.Handle
    fullName: Cqrs.Messages.IMessageHandler<TMessage>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - name: TMessage
    nameWithType: TMessage
    fullName: TMessage
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Messages.IMessageHandler`1.Handle(`0)
    name: Handle
    nameWithType: IMessageHandler(Of TMessage).Handle
    fullName: Cqrs.Messages.IMessageHandler(Of TMessage).Handle
  - name: (
    nameWithType: (
    fullName: (
  - name: TMessage
    nameWithType: TMessage
    fullName: TMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Messages.IMessageHandler{{TEvent}}
  commentId: T:Cqrs.Messages.IMessageHandler{`2}
  parent: Cqrs.Messages
  definition: Cqrs.Messages.IMessageHandler`1
  name: IMessageHandler<TEvent>
  nameWithType: IMessageHandler<TEvent>
  fullName: Cqrs.Messages.IMessageHandler<TEvent>
  nameWithType.vb: IMessageHandler(Of TEvent)
  fullName.vb: Cqrs.Messages.IMessageHandler(Of TEvent)
  name.vb: IMessageHandler(Of TEvent)
  spec.csharp:
  - uid: Cqrs.Messages.IMessageHandler`1
    name: IMessageHandler
    nameWithType: IMessageHandler
    fullName: Cqrs.Messages.IMessageHandler
  - name: <
    nameWithType: <
    fullName: <
  - name: TEvent
    nameWithType: TEvent
    fullName: TEvent
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Messages.IMessageHandler`1
    name: IMessageHandler
    nameWithType: IMessageHandler
    fullName: Cqrs.Messages.IMessageHandler
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEvent
    nameWithType: TEvent
    fullName: TEvent
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Messages.IMessageHandler`1
  commentId: T:Cqrs.Messages.IMessageHandler`1
  isExternal: false
  name: IMessageHandler<TMessage>
  nameWithType: IMessageHandler<TMessage>
  fullName: Cqrs.Messages.IMessageHandler<TMessage>
  nameWithType.vb: IMessageHandler(Of TMessage)
  fullName.vb: Cqrs.Messages.IMessageHandler(Of TMessage)
  name.vb: IMessageHandler(Of TMessage)
  spec.csharp:
  - uid: Cqrs.Messages.IMessageHandler`1
    name: IMessageHandler
    nameWithType: IMessageHandler
    fullName: Cqrs.Messages.IMessageHandler
  - name: <
    nameWithType: <
    fullName: <
  - name: TMessage
    nameWithType: TMessage
    fullName: TMessage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Messages.IMessageHandler`1
    name: IMessageHandler
    nameWithType: IMessageHandler
    fullName: Cqrs.Messages.IMessageHandler
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TMessage
    nameWithType: TMessage
    fullName: TMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Messages
  commentId: N:Cqrs.Messages
  isExternal: false
  name: Cqrs.Messages
  nameWithType: Cqrs.Messages
  fullName: Cqrs.Messages
