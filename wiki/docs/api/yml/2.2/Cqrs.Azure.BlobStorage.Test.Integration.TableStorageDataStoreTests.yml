### YamlMime:ManagedReference
items:
- uid: Cqrs.Azure.BlobStorage.Test.Integration.TableStorageDataStoreTests
  commentId: T:Cqrs.Azure.BlobStorage.Test.Integration.TableStorageDataStoreTests
  id: TableStorageDataStoreTests
  parent: Cqrs.Azure.BlobStorage.Test.Integration
  children:
  - Cqrs.Azure.BlobStorage.Test.Integration.TableStorageDataStoreTests.Add_ValidProjectionEntityView_ProjectionEntityViewCanBeRetreived
  - Cqrs.Azure.BlobStorage.Test.Integration.TableStorageDataStoreTests.Add_ValidProjectionView_ProjectionViewCanBeRetreived
  - Cqrs.Azure.BlobStorage.Test.Integration.TableStorageDataStoreTests.CreateDataStore``1(cdmdotnet.Logging.ILogger,Cqrs.Configuration.IConfigurationManager)
  - Cqrs.Azure.BlobStorage.Test.Integration.TableStorageDataStoreTests.Update_ValidProjectionEntityView_ProjectionEntityViewCanBeRetreived
  langs:
  - csharp
  - vb
  name: TableStorageDataStoreTests
  nameWithType: TableStorageDataStoreTests
  fullName: Cqrs.Azure.BlobStorage.Test.Integration.TableStorageDataStoreTests
  type: Class
  source:
    remote:
      path: Framework/Azure/Tests/Cqrs.Azure.BlobStorage.Test.Integration/TableStorageDataStoreTests.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: TableStorageDataStoreTests
    path: Framework/Azure/Tests/Cqrs.Azure.BlobStorage.Test.Integration/TableStorageDataStoreTests.cs
    startLine: 26
  assemblies:
  - Cqrs.Azure.BlobStorage.Test.Integration
  namespace: Cqrs.Azure.BlobStorage.Test.Integration
  summary: "\nA series of tests on the <xref href=\"Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStore%601\" data-throw-if-not-resolved=\"false\"></xref> class\n"
  example: []
  syntax:
    content: >-
      [TestFixture]

      public class TableStorageDataStoreTests
    content.vb: >-
      <TestFixture>

      Public Class TableStorageDataStoreTests
  inheritance:
  - System.Object
  derivedClasses:
  - Cqrs.Azure.Storage.Test.Integration.TableStorageDataStoreTests
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: NUnit.Framework.TestFixtureAttribute
    ctor: NUnit.Framework.TestFixtureAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Cqrs.Azure.BlobStorage.Test.Integration.TableStorageDataStoreTests.Add_ValidProjectionView_ProjectionViewCanBeRetreived
  commentId: M:Cqrs.Azure.BlobStorage.Test.Integration.TableStorageDataStoreTests.Add_ValidProjectionView_ProjectionViewCanBeRetreived
  id: Add_ValidProjectionView_ProjectionViewCanBeRetreived
  parent: Cqrs.Azure.BlobStorage.Test.Integration.TableStorageDataStoreTests
  langs:
  - csharp
  - vb
  name: Add_ValidProjectionView_ProjectionViewCanBeRetreived()
  nameWithType: TableStorageDataStoreTests.Add_ValidProjectionView_ProjectionViewCanBeRetreived()
  fullName: Cqrs.Azure.BlobStorage.Test.Integration.TableStorageDataStoreTests.Add_ValidProjectionView_ProjectionViewCanBeRetreived()
  type: Method
  source:
    remote:
      path: Framework/Azure/Tests/Cqrs.Azure.BlobStorage.Test.Integration/TableStorageDataStoreTests.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Add_ValidProjectionView_ProjectionViewCanBeRetreived
    path: Framework/Azure/Tests/Cqrs.Azure.BlobStorage.Test.Integration/TableStorageDataStoreTests.cs
    startLine: 29
  assemblies:
  - Cqrs.Azure.BlobStorage.Test.Integration
  namespace: Cqrs.Azure.BlobStorage.Test.Integration
  syntax:
    content: >-
      [Test]

      public virtual void Add_ValidProjectionView_ProjectionViewCanBeRetreived()
    content.vb: >-
      <Test>

      Public Overridable Sub Add_ValidProjectionView_ProjectionViewCanBeRetreived
  overload: Cqrs.Azure.BlobStorage.Test.Integration.TableStorageDataStoreTests.Add_ValidProjectionView_ProjectionViewCanBeRetreived*
  attributes:
  - type: NUnit.Framework.TestAttribute
    ctor: NUnit.Framework.TestAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Cqrs.Azure.BlobStorage.Test.Integration.TableStorageDataStoreTests.Add_ValidProjectionEntityView_ProjectionEntityViewCanBeRetreived
  commentId: M:Cqrs.Azure.BlobStorage.Test.Integration.TableStorageDataStoreTests.Add_ValidProjectionEntityView_ProjectionEntityViewCanBeRetreived
  id: Add_ValidProjectionEntityView_ProjectionEntityViewCanBeRetreived
  parent: Cqrs.Azure.BlobStorage.Test.Integration.TableStorageDataStoreTests
  langs:
  - csharp
  - vb
  name: Add_ValidProjectionEntityView_ProjectionEntityViewCanBeRetreived()
  nameWithType: TableStorageDataStoreTests.Add_ValidProjectionEntityView_ProjectionEntityViewCanBeRetreived()
  fullName: Cqrs.Azure.BlobStorage.Test.Integration.TableStorageDataStoreTests.Add_ValidProjectionEntityView_ProjectionEntityViewCanBeRetreived()
  type: Method
  source:
    remote:
      path: Framework/Azure/Tests/Cqrs.Azure.BlobStorage.Test.Integration/TableStorageDataStoreTests.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Add_ValidProjectionEntityView_ProjectionEntityViewCanBeRetreived
    path: Framework/Azure/Tests/Cqrs.Azure.BlobStorage.Test.Integration/TableStorageDataStoreTests.cs
    startLine: 61
  assemblies:
  - Cqrs.Azure.BlobStorage.Test.Integration
  namespace: Cqrs.Azure.BlobStorage.Test.Integration
  syntax:
    content: >-
      [Test]

      public virtual void Add_ValidProjectionEntityView_ProjectionEntityViewCanBeRetreived()
    content.vb: >-
      <Test>

      Public Overridable Sub Add_ValidProjectionEntityView_ProjectionEntityViewCanBeRetreived
  overload: Cqrs.Azure.BlobStorage.Test.Integration.TableStorageDataStoreTests.Add_ValidProjectionEntityView_ProjectionEntityViewCanBeRetreived*
  attributes:
  - type: NUnit.Framework.TestAttribute
    ctor: NUnit.Framework.TestAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Cqrs.Azure.BlobStorage.Test.Integration.TableStorageDataStoreTests.Update_ValidProjectionEntityView_ProjectionEntityViewCanBeRetreived
  commentId: M:Cqrs.Azure.BlobStorage.Test.Integration.TableStorageDataStoreTests.Update_ValidProjectionEntityView_ProjectionEntityViewCanBeRetreived
  id: Update_ValidProjectionEntityView_ProjectionEntityViewCanBeRetreived
  parent: Cqrs.Azure.BlobStorage.Test.Integration.TableStorageDataStoreTests
  langs:
  - csharp
  - vb
  name: Update_ValidProjectionEntityView_ProjectionEntityViewCanBeRetreived()
  nameWithType: TableStorageDataStoreTests.Update_ValidProjectionEntityView_ProjectionEntityViewCanBeRetreived()
  fullName: Cqrs.Azure.BlobStorage.Test.Integration.TableStorageDataStoreTests.Update_ValidProjectionEntityView_ProjectionEntityViewCanBeRetreived()
  type: Method
  source:
    remote:
      path: Framework/Azure/Tests/Cqrs.Azure.BlobStorage.Test.Integration/TableStorageDataStoreTests.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Update_ValidProjectionEntityView_ProjectionEntityViewCanBeRetreived
    path: Framework/Azure/Tests/Cqrs.Azure.BlobStorage.Test.Integration/TableStorageDataStoreTests.cs
    startLine: 91
  assemblies:
  - Cqrs.Azure.BlobStorage.Test.Integration
  namespace: Cqrs.Azure.BlobStorage.Test.Integration
  syntax:
    content: >-
      [Test]

      public virtual void Update_ValidProjectionEntityView_ProjectionEntityViewCanBeRetreived()
    content.vb: >-
      <Test>

      Public Overridable Sub Update_ValidProjectionEntityView_ProjectionEntityViewCanBeRetreived
  overload: Cqrs.Azure.BlobStorage.Test.Integration.TableStorageDataStoreTests.Update_ValidProjectionEntityView_ProjectionEntityViewCanBeRetreived*
  attributes:
  - type: NUnit.Framework.TestAttribute
    ctor: NUnit.Framework.TestAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Cqrs.Azure.BlobStorage.Test.Integration.TableStorageDataStoreTests.CreateDataStore``1(cdmdotnet.Logging.ILogger,Cqrs.Configuration.IConfigurationManager)
  commentId: M:Cqrs.Azure.BlobStorage.Test.Integration.TableStorageDataStoreTests.CreateDataStore``1(cdmdotnet.Logging.ILogger,Cqrs.Configuration.IConfigurationManager)
  id: CreateDataStore``1(cdmdotnet.Logging.ILogger,Cqrs.Configuration.IConfigurationManager)
  parent: Cqrs.Azure.BlobStorage.Test.Integration.TableStorageDataStoreTests
  langs:
  - csharp
  - vb
  name: CreateDataStore<TData>(ILogger, IConfigurationManager)
  nameWithType: TableStorageDataStoreTests.CreateDataStore<TData>(ILogger, IConfigurationManager)
  fullName: Cqrs.Azure.BlobStorage.Test.Integration.TableStorageDataStoreTests.CreateDataStore<TData>(cdmdotnet.Logging.ILogger, Cqrs.Configuration.IConfigurationManager)
  type: Method
  source:
    remote:
      path: Framework/Azure/Tests/Cqrs.Azure.BlobStorage.Test.Integration/TableStorageDataStoreTests.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: CreateDataStore
    path: Framework/Azure/Tests/Cqrs.Azure.BlobStorage.Test.Integration/TableStorageDataStoreTests.cs
    startLine: 130
  assemblies:
  - Cqrs.Azure.BlobStorage.Test.Integration
  namespace: Cqrs.Azure.BlobStorage.Test.Integration
  syntax:
    content: 'protected virtual TableStorageDataStore<TData> CreateDataStore<TData>(ILogger logger, IConfigurationManager configurationManager)where TData : Entity'
    parameters:
    - id: logger
      type: cdmdotnet.Logging.ILogger
    - id: configurationManager
      type: Cqrs.Configuration.IConfigurationManager
    typeParameters:
    - id: TData
    return:
      type: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStore{{TData}}
    content.vb: Protected Overridable Function CreateDataStore(Of TData As Entity)(logger As ILogger, configurationManager As IConfigurationManager) As TableStorageDataStore(Of TData)
  overload: Cqrs.Azure.BlobStorage.Test.Integration.TableStorageDataStoreTests.CreateDataStore*
  nameWithType.vb: TableStorageDataStoreTests.CreateDataStore(Of TData)(ILogger, IConfigurationManager)
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Cqrs.Azure.BlobStorage.Test.Integration.TableStorageDataStoreTests.CreateDataStore(Of TData)(cdmdotnet.Logging.ILogger, Cqrs.Configuration.IConfigurationManager)
  name.vb: CreateDataStore(Of TData)(ILogger, IConfigurationManager)
references:
- uid: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStore`1
  commentId: T:Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStore`1
  isExternal: false
  name: TableStorageDataStore<TData>
  nameWithType: TableStorageDataStore<TData>
  fullName: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStore<TData>
  nameWithType.vb: TableStorageDataStore(Of TData)
  fullName.vb: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStore(Of TData)
  name.vb: TableStorageDataStore(Of TData)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStore`1
    name: TableStorageDataStore
    nameWithType: TableStorageDataStore
    fullName: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStore`1
    name: TableStorageDataStore
    nameWithType: TableStorageDataStore
    fullName: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.Test.Integration
  commentId: N:Cqrs.Azure.BlobStorage.Test.Integration
  isExternal: false
  name: Cqrs.Azure.BlobStorage.Test.Integration
  nameWithType: Cqrs.Azure.BlobStorage.Test.Integration
  fullName: Cqrs.Azure.BlobStorage.Test.Integration
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Cqrs.Azure.BlobStorage.Test.Integration.TableStorageDataStoreTests.Add_ValidProjectionView_ProjectionViewCanBeRetreived*
  commentId: Overload:Cqrs.Azure.BlobStorage.Test.Integration.TableStorageDataStoreTests.Add_ValidProjectionView_ProjectionViewCanBeRetreived
  isExternal: false
  name: Add_ValidProjectionView_ProjectionViewCanBeRetreived
  nameWithType: TableStorageDataStoreTests.Add_ValidProjectionView_ProjectionViewCanBeRetreived
  fullName: Cqrs.Azure.BlobStorage.Test.Integration.TableStorageDataStoreTests.Add_ValidProjectionView_ProjectionViewCanBeRetreived
- uid: Cqrs.Azure.BlobStorage.Test.Integration.TableStorageDataStoreTests.Add_ValidProjectionEntityView_ProjectionEntityViewCanBeRetreived*
  commentId: Overload:Cqrs.Azure.BlobStorage.Test.Integration.TableStorageDataStoreTests.Add_ValidProjectionEntityView_ProjectionEntityViewCanBeRetreived
  isExternal: false
  name: Add_ValidProjectionEntityView_ProjectionEntityViewCanBeRetreived
  nameWithType: TableStorageDataStoreTests.Add_ValidProjectionEntityView_ProjectionEntityViewCanBeRetreived
  fullName: Cqrs.Azure.BlobStorage.Test.Integration.TableStorageDataStoreTests.Add_ValidProjectionEntityView_ProjectionEntityViewCanBeRetreived
- uid: Cqrs.Azure.BlobStorage.Test.Integration.TableStorageDataStoreTests.Update_ValidProjectionEntityView_ProjectionEntityViewCanBeRetreived*
  commentId: Overload:Cqrs.Azure.BlobStorage.Test.Integration.TableStorageDataStoreTests.Update_ValidProjectionEntityView_ProjectionEntityViewCanBeRetreived
  isExternal: false
  name: Update_ValidProjectionEntityView_ProjectionEntityViewCanBeRetreived
  nameWithType: TableStorageDataStoreTests.Update_ValidProjectionEntityView_ProjectionEntityViewCanBeRetreived
  fullName: Cqrs.Azure.BlobStorage.Test.Integration.TableStorageDataStoreTests.Update_ValidProjectionEntityView_ProjectionEntityViewCanBeRetreived
- uid: Cqrs.Azure.BlobStorage.Test.Integration.TableStorageDataStoreTests.CreateDataStore*
  commentId: Overload:Cqrs.Azure.BlobStorage.Test.Integration.TableStorageDataStoreTests.CreateDataStore
  isExternal: false
  name: CreateDataStore
  nameWithType: TableStorageDataStoreTests.CreateDataStore
  fullName: Cqrs.Azure.BlobStorage.Test.Integration.TableStorageDataStoreTests.CreateDataStore
- uid: cdmdotnet.Logging.ILogger
  commentId: T:cdmdotnet.Logging.ILogger
  parent: cdmdotnet.Logging
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: cdmdotnet.Logging.ILogger
- uid: Cqrs.Configuration.IConfigurationManager
  commentId: T:Cqrs.Configuration.IConfigurationManager
  parent: Cqrs.Configuration
  isExternal: false
  name: IConfigurationManager
  nameWithType: IConfigurationManager
  fullName: Cqrs.Configuration.IConfigurationManager
- uid: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStore{{TData}}
  commentId: T:Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStore{`0}
  parent: Cqrs.Azure.BlobStorage.DataStores
  definition: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStore`1
  name: TableStorageDataStore<TData>
  nameWithType: TableStorageDataStore<TData>
  fullName: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStore<TData>
  nameWithType.vb: TableStorageDataStore(Of TData)
  fullName.vb: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStore(Of TData)
  name.vb: TableStorageDataStore(Of TData)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStore`1
    name: TableStorageDataStore
    nameWithType: TableStorageDataStore
    fullName: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStore`1
    name: TableStorageDataStore
    nameWithType: TableStorageDataStore
    fullName: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: cdmdotnet.Logging
  commentId: N:cdmdotnet.Logging
  isExternal: false
  name: cdmdotnet.Logging
  nameWithType: cdmdotnet.Logging
  fullName: cdmdotnet.Logging
- uid: Cqrs.Configuration
  commentId: N:Cqrs.Configuration
  isExternal: false
  name: Cqrs.Configuration
  nameWithType: Cqrs.Configuration
  fullName: Cqrs.Configuration
- uid: Cqrs.Azure.BlobStorage.DataStores
  commentId: N:Cqrs.Azure.BlobStorage.DataStores
  isExternal: false
  name: Cqrs.Azure.BlobStorage.DataStores
  nameWithType: Cqrs.Azure.BlobStorage.DataStores
  fullName: Cqrs.Azure.BlobStorage.DataStores
