### YamlMime:ManagedReference
items:
- uid: Cqrs.Configuration.IDependencyResolver
  commentId: T:Cqrs.Configuration.IDependencyResolver
  id: IDependencyResolver
  parent: Cqrs.Configuration
  children:
  - Cqrs.Configuration.IDependencyResolver.Resolve(System.Type)
  - Cqrs.Configuration.IDependencyResolver.Resolve``1
  langs:
  - csharp
  - vb
  name: IDependencyResolver
  nameWithType: IDependencyResolver
  fullName: Cqrs.Configuration.IDependencyResolver
  type: Interface
  source:
    remote:
      path: Framework/Cqrs/Configuration/IDependencyResolver.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: IDependencyResolver
    path: Framework/Cqrs/Configuration/IDependencyResolver.cs
    startLine: 15
  assemblies:
  - Cqrs
  namespace: Cqrs.Configuration
  summary: "\nProvides an ability to resolve instances of objects.\n"
  example: []
  syntax:
    content: public interface IDependencyResolver
    content.vb: Public Interface IDependencyResolver
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Cqrs.Configuration.IDependencyResolver.Resolve``1
  commentId: M:Cqrs.Configuration.IDependencyResolver.Resolve``1
  id: Resolve``1
  parent: Cqrs.Configuration.IDependencyResolver
  langs:
  - csharp
  - vb
  name: Resolve<T>()
  nameWithType: IDependencyResolver.Resolve<T>()
  fullName: Cqrs.Configuration.IDependencyResolver.Resolve<T>()
  type: Method
  source:
    remote:
      path: Framework/Cqrs/Configuration/IDependencyResolver.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Resolve
    path: Framework/Cqrs/Configuration/IDependencyResolver.cs
    startLine: 23
  assemblies:
  - Cqrs
  namespace: Cqrs.Configuration
  summary: "\nResolves a single instance for the specified <code data-dev-comment-type=\"typeparamref\">T</code>.\nDifferent implementations may return the first or last instance found or may return an exception.\n"
  example: []
  syntax:
    content: T Resolve<T>()
    typeParameters:
    - id: T
      description: The <xref href="System.Type" data-throw-if-not-resolved="false"></xref> of object you want to resolve.
    return:
      type: '{T}'
      description: An instance of type <code data-dev-comment-type="typeparamref">T</code>.
    content.vb: Function Resolve(Of T) As T
  overload: Cqrs.Configuration.IDependencyResolver.Resolve*
  nameWithType.vb: IDependencyResolver.Resolve(Of T)()
  fullName.vb: Cqrs.Configuration.IDependencyResolver.Resolve(Of T)()
  name.vb: Resolve(Of T)()
- uid: Cqrs.Configuration.IDependencyResolver.Resolve(System.Type)
  commentId: M:Cqrs.Configuration.IDependencyResolver.Resolve(System.Type)
  id: Resolve(System.Type)
  parent: Cqrs.Configuration.IDependencyResolver
  langs:
  - csharp
  - vb
  name: Resolve(Type)
  nameWithType: IDependencyResolver.Resolve(Type)
  fullName: Cqrs.Configuration.IDependencyResolver.Resolve(System.Type)
  type: Method
  source:
    remote:
      path: Framework/Cqrs/Configuration/IDependencyResolver.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Resolve
    path: Framework/Cqrs/Configuration/IDependencyResolver.cs
    startLine: 31
  assemblies:
  - Cqrs
  namespace: Cqrs.Configuration
  summary: "\nResolves a single instance for the specified <code data-dev-comment-type=\"paramref\">type</code>.\nDifferent implementations may return the first or last instance found or may return an exception.\n"
  example: []
  syntax:
    content: object Resolve(Type type)
    parameters:
    - id: type
      type: System.Type
      description: The <xref href="System.Type" data-throw-if-not-resolved="false"></xref> of object you want to resolve.
    return:
      type: System.Object
      description: An instance of type <code data-dev-comment-type="paramref">type</code>.
    content.vb: Function Resolve(type As Type) As Object
  overload: Cqrs.Configuration.IDependencyResolver.Resolve*
references:
- uid: Cqrs.Configuration
  commentId: N:Cqrs.Configuration
  isExternal: false
  name: Cqrs.Configuration
  nameWithType: Cqrs.Configuration
  fullName: Cqrs.Configuration
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Cqrs.Configuration.IDependencyResolver.Resolve*
  commentId: Overload:Cqrs.Configuration.IDependencyResolver.Resolve
  isExternal: false
  name: Resolve
  nameWithType: IDependencyResolver.Resolve
  fullName: Cqrs.Configuration.IDependencyResolver.Resolve
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: T
  isExternal: false
  name: T
  nameWithType: T
  fullName: T
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
