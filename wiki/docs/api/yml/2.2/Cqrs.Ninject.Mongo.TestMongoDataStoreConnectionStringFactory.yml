### YamlMime:ManagedReference
items:
- uid: Cqrs.Ninject.Mongo.TestMongoDataStoreConnectionStringFactory
  commentId: T:Cqrs.Ninject.Mongo.TestMongoDataStoreConnectionStringFactory
  id: TestMongoDataStoreConnectionStringFactory
  parent: Cqrs.Ninject.Mongo
  children:
  - Cqrs.Ninject.Mongo.TestMongoDataStoreConnectionStringFactory.DatabaseName
  - Cqrs.Ninject.Mongo.TestMongoDataStoreConnectionStringFactory.GetMongoConnectionString
  - Cqrs.Ninject.Mongo.TestMongoDataStoreConnectionStringFactory.GetMongoDatabaseName
  langs:
  - csharp
  - vb
  name: TestMongoDataStoreConnectionStringFactory
  nameWithType: TestMongoDataStoreConnectionStringFactory
  fullName: Cqrs.Ninject.Mongo.TestMongoDataStoreConnectionStringFactory
  type: Class
  source:
    remote:
      path: Framework/Ninject/Cqrs.Ninject.Mongo/TestMongoDataStoreConnectionStringFactory.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: TestMongoDataStoreConnectionStringFactory
    path: Framework/Ninject/Cqrs.Ninject.Mongo/TestMongoDataStoreConnectionStringFactory.cs
    startLine: 19
  assemblies:
  - Cqrs.Ninject.Mongo
  namespace: Cqrs.Ninject.Mongo
  summary: "\nA <xref href=\"Cqrs.Mongo.Factories.IMongoDataStoreConnectionStringFactory\" data-throw-if-not-resolved=\"false\"></xref>\nthat enables you to set a database name with <xref href=\"Cqrs.Ninject.Mongo.TestMongoDataStoreConnectionStringFactory.DatabaseName\" data-throw-if-not-resolved=\"false\"></xref>. This means you can randomly generate your own database name per test.\n"
  example: []
  syntax:
    content: 'public class TestMongoDataStoreConnectionStringFactory : object, IMongoDataStoreConnectionStringFactory'
    content.vb: >-
      Public Class TestMongoDataStoreConnectionStringFactory
          Inherits Object
          Implements IMongoDataStoreConnectionStringFactory
  inheritance:
  - System.Object
  implements:
  - Cqrs.Mongo.Factories.IMongoDataStoreConnectionStringFactory
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Cqrs.Ninject.Mongo.TestMongoDataStoreConnectionStringFactory.DatabaseName
  commentId: P:Cqrs.Ninject.Mongo.TestMongoDataStoreConnectionStringFactory.DatabaseName
  id: DatabaseName
  parent: Cqrs.Ninject.Mongo.TestMongoDataStoreConnectionStringFactory
  langs:
  - csharp
  - vb
  name: DatabaseName
  nameWithType: TestMongoDataStoreConnectionStringFactory.DatabaseName
  fullName: Cqrs.Ninject.Mongo.TestMongoDataStoreConnectionStringFactory.DatabaseName
  type: Property
  source:
    remote:
      path: Framework/Ninject/Cqrs.Ninject.Mongo/TestMongoDataStoreConnectionStringFactory.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: DatabaseName
    path: Framework/Ninject/Cqrs.Ninject.Mongo/TestMongoDataStoreConnectionStringFactory.cs
    startLine: 35
  assemblies:
  - Cqrs.Ninject.Mongo
  namespace: Cqrs.Ninject.Mongo
  summary: "\nThe name of the database currently being used.\n"
  example: []
  syntax:
    content: public static string DatabaseName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Shared Property DatabaseName As String
  overload: Cqrs.Ninject.Mongo.TestMongoDataStoreConnectionStringFactory.DatabaseName*
  modifiers.csharp:
  - public
  - static
  - get
  - set
  modifiers.vb:
  - Public
  - Shared
- uid: Cqrs.Ninject.Mongo.TestMongoDataStoreConnectionStringFactory.GetMongoConnectionString
  commentId: M:Cqrs.Ninject.Mongo.TestMongoDataStoreConnectionStringFactory.GetMongoConnectionString
  id: GetMongoConnectionString
  parent: Cqrs.Ninject.Mongo.TestMongoDataStoreConnectionStringFactory
  langs:
  - csharp
  - vb
  name: GetMongoConnectionString()
  nameWithType: TestMongoDataStoreConnectionStringFactory.GetMongoConnectionString()
  fullName: Cqrs.Ninject.Mongo.TestMongoDataStoreConnectionStringFactory.GetMongoConnectionString()
  type: Method
  source:
    remote:
      path: Framework/Ninject/Cqrs.Ninject.Mongo/TestMongoDataStoreConnectionStringFactory.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: GetMongoConnectionString
    path: Framework/Ninject/Cqrs.Ninject.Mongo/TestMongoDataStoreConnectionStringFactory.cs
    startLine: 49
  assemblies:
  - Cqrs.Ninject.Mongo
  namespace: Cqrs.Ninject.Mongo
  summary: "\nGets the current connection string.\n"
  example: []
  syntax:
    content: public string GetMongoConnectionString()
    return:
      type: System.String
    content.vb: Public Function GetMongoConnectionString As String
  overload: Cqrs.Ninject.Mongo.TestMongoDataStoreConnectionStringFactory.GetMongoConnectionString*
  implements:
  - Cqrs.Mongo.Factories.IMongoDataStoreConnectionStringFactory.GetMongoConnectionString
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Cqrs.Ninject.Mongo.TestMongoDataStoreConnectionStringFactory.GetMongoDatabaseName
  commentId: M:Cqrs.Ninject.Mongo.TestMongoDataStoreConnectionStringFactory.GetMongoDatabaseName
  id: GetMongoDatabaseName
  parent: Cqrs.Ninject.Mongo.TestMongoDataStoreConnectionStringFactory
  langs:
  - csharp
  - vb
  name: GetMongoDatabaseName()
  nameWithType: TestMongoDataStoreConnectionStringFactory.GetMongoDatabaseName()
  fullName: Cqrs.Ninject.Mongo.TestMongoDataStoreConnectionStringFactory.GetMongoDatabaseName()
  type: Method
  source:
    remote:
      path: Framework/Ninject/Cqrs.Ninject.Mongo/TestMongoDataStoreConnectionStringFactory.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: GetMongoDatabaseName
    path: Framework/Ninject/Cqrs.Ninject.Mongo/TestMongoDataStoreConnectionStringFactory.cs
    startLine: 57
  assemblies:
  - Cqrs.Ninject.Mongo
  namespace: Cqrs.Ninject.Mongo
  summary: "\nGets the value of <xref href=\"Cqrs.Ninject.Mongo.TestMongoDataStoreConnectionStringFactory.DatabaseName\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public string GetMongoDatabaseName()
    return:
      type: System.String
    content.vb: Public Function GetMongoDatabaseName As String
  overload: Cqrs.Ninject.Mongo.TestMongoDataStoreConnectionStringFactory.GetMongoDatabaseName*
  implements:
  - Cqrs.Mongo.Factories.IMongoDataStoreConnectionStringFactory.GetMongoDatabaseName
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Cqrs.Mongo.Factories.IMongoDataStoreConnectionStringFactory
  commentId: T:Cqrs.Mongo.Factories.IMongoDataStoreConnectionStringFactory
  parent: Cqrs.Mongo.Factories
  isExternal: false
  name: IMongoDataStoreConnectionStringFactory
  nameWithType: IMongoDataStoreConnectionStringFactory
  fullName: Cqrs.Mongo.Factories.IMongoDataStoreConnectionStringFactory
- uid: Cqrs.Ninject.Mongo.TestMongoDataStoreConnectionStringFactory.DatabaseName
  commentId: P:Cqrs.Ninject.Mongo.TestMongoDataStoreConnectionStringFactory.DatabaseName
- uid: Cqrs.Ninject.Mongo
  commentId: N:Cqrs.Ninject.Mongo
  isExternal: false
  name: Cqrs.Ninject.Mongo
  nameWithType: Cqrs.Ninject.Mongo
  fullName: Cqrs.Ninject.Mongo
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Cqrs.Mongo.Factories
  commentId: N:Cqrs.Mongo.Factories
  isExternal: false
  name: Cqrs.Mongo.Factories
  nameWithType: Cqrs.Mongo.Factories
  fullName: Cqrs.Mongo.Factories
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Cqrs.Ninject.Mongo.TestMongoDataStoreConnectionStringFactory.DatabaseName*
  commentId: Overload:Cqrs.Ninject.Mongo.TestMongoDataStoreConnectionStringFactory.DatabaseName
  isExternal: false
  name: DatabaseName
  nameWithType: TestMongoDataStoreConnectionStringFactory.DatabaseName
  fullName: Cqrs.Ninject.Mongo.TestMongoDataStoreConnectionStringFactory.DatabaseName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Cqrs.Ninject.Mongo.TestMongoDataStoreConnectionStringFactory.GetMongoConnectionString*
  commentId: Overload:Cqrs.Ninject.Mongo.TestMongoDataStoreConnectionStringFactory.GetMongoConnectionString
  isExternal: false
  name: GetMongoConnectionString
  nameWithType: TestMongoDataStoreConnectionStringFactory.GetMongoConnectionString
  fullName: Cqrs.Ninject.Mongo.TestMongoDataStoreConnectionStringFactory.GetMongoConnectionString
- uid: Cqrs.Mongo.Factories.IMongoDataStoreConnectionStringFactory.GetMongoConnectionString
  commentId: M:Cqrs.Mongo.Factories.IMongoDataStoreConnectionStringFactory.GetMongoConnectionString
  parent: Cqrs.Mongo.Factories.IMongoDataStoreConnectionStringFactory
  isExternal: false
  name: GetMongoConnectionString()
  nameWithType: IMongoDataStoreConnectionStringFactory.GetMongoConnectionString()
  fullName: Cqrs.Mongo.Factories.IMongoDataStoreConnectionStringFactory.GetMongoConnectionString()
  spec.csharp:
  - uid: Cqrs.Mongo.Factories.IMongoDataStoreConnectionStringFactory.GetMongoConnectionString
    name: GetMongoConnectionString
    nameWithType: IMongoDataStoreConnectionStringFactory.GetMongoConnectionString
    fullName: Cqrs.Mongo.Factories.IMongoDataStoreConnectionStringFactory.GetMongoConnectionString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Mongo.Factories.IMongoDataStoreConnectionStringFactory.GetMongoConnectionString
    name: GetMongoConnectionString
    nameWithType: IMongoDataStoreConnectionStringFactory.GetMongoConnectionString
    fullName: Cqrs.Mongo.Factories.IMongoDataStoreConnectionStringFactory.GetMongoConnectionString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Ninject.Mongo.TestMongoDataStoreConnectionStringFactory.GetMongoDatabaseName*
  commentId: Overload:Cqrs.Ninject.Mongo.TestMongoDataStoreConnectionStringFactory.GetMongoDatabaseName
  isExternal: false
  name: GetMongoDatabaseName
  nameWithType: TestMongoDataStoreConnectionStringFactory.GetMongoDatabaseName
  fullName: Cqrs.Ninject.Mongo.TestMongoDataStoreConnectionStringFactory.GetMongoDatabaseName
- uid: Cqrs.Mongo.Factories.IMongoDataStoreConnectionStringFactory.GetMongoDatabaseName
  commentId: M:Cqrs.Mongo.Factories.IMongoDataStoreConnectionStringFactory.GetMongoDatabaseName
  parent: Cqrs.Mongo.Factories.IMongoDataStoreConnectionStringFactory
  isExternal: false
  name: GetMongoDatabaseName()
  nameWithType: IMongoDataStoreConnectionStringFactory.GetMongoDatabaseName()
  fullName: Cqrs.Mongo.Factories.IMongoDataStoreConnectionStringFactory.GetMongoDatabaseName()
  spec.csharp:
  - uid: Cqrs.Mongo.Factories.IMongoDataStoreConnectionStringFactory.GetMongoDatabaseName
    name: GetMongoDatabaseName
    nameWithType: IMongoDataStoreConnectionStringFactory.GetMongoDatabaseName
    fullName: Cqrs.Mongo.Factories.IMongoDataStoreConnectionStringFactory.GetMongoDatabaseName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Mongo.Factories.IMongoDataStoreConnectionStringFactory.GetMongoDatabaseName
    name: GetMongoDatabaseName
    nameWithType: IMongoDataStoreConnectionStringFactory.GetMongoDatabaseName
    fullName: Cqrs.Mongo.Factories.IMongoDataStoreConnectionStringFactory.GetMongoDatabaseName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
