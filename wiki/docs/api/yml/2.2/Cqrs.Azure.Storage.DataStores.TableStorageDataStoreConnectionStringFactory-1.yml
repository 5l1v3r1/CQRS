### YamlMime:ManagedReference
items:
- uid: Cqrs.Azure.Storage.DataStores.TableStorageDataStoreConnectionStringFactory`1
  commentId: T:Cqrs.Azure.Storage.DataStores.TableStorageDataStoreConnectionStringFactory`1
  id: TableStorageDataStoreConnectionStringFactory`1
  parent: Cqrs.Azure.Storage.DataStores
  children:
  - Cqrs.Azure.Storage.DataStores.TableStorageDataStoreConnectionStringFactory`1.#ctor(Cqrs.Configuration.IConfigurationManager,cdmdotnet.Logging.ILogger)
  - Cqrs.Azure.Storage.DataStores.TableStorageDataStoreConnectionStringFactory`1.GetContainerName
  - Cqrs.Azure.Storage.DataStores.TableStorageDataStoreConnectionStringFactory`1.GetTableName``1
  langs:
  - csharp
  - vb
  name: TableStorageDataStoreConnectionStringFactory<TData>
  nameWithType: TableStorageDataStoreConnectionStringFactory<TData>
  fullName: Cqrs.Azure.Storage.DataStores.TableStorageDataStoreConnectionStringFactory<TData>
  type: Class
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.Storage/DataStores/TableStorageDataStoreConnectionStringFactory.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: TableStorageDataStoreConnectionStringFactory
    path: Framework/Azure/Cqrs.Azure.Storage/DataStores/TableStorageDataStoreConnectionStringFactory.cs
    startLine: 21
  assemblies:
  - Cqrs.Azure.Storage
  namespace: Cqrs.Azure.Storage.DataStores
  summary: "\nA factory for getting connection strings and container names for <xref href=\"Cqrs.DataStores.IDataStore%601\" data-throw-if-not-resolved=\"false\"></xref> access.\nThis factory supports reading and writing from separate storage accounts. Specifically you can have as many different storage accounts as you want to configure when writing.\nThis allows for manual mirroring of data while reading from the fastest/closest location possible.\n"
  example: []
  syntax:
    content: 'public class TableStorageDataStoreConnectionStringFactory<TData> : TableStorageDataStoreConnectionStringFactory, ITableStorageDataStoreConnectionStringFactory, ITableStorageStoreConnectionStringFactory, IStorageStoreConnectionStringFactory'
    typeParameters:
    - id: TData
    content.vb: >-
      Public Class TableStorageDataStoreConnectionStringFactory(Of TData)
          Inherits TableStorageDataStoreConnectionStringFactory
          Implements ITableStorageDataStoreConnectionStringFactory, ITableStorageStoreConnectionStringFactory, IStorageStoreConnectionStringFactory
  inheritance:
  - System.Object
  - Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory
  implements:
  - Cqrs.Azure.BlobStorage.DataStores.ITableStorageDataStoreConnectionStringFactory
  - Cqrs.Azure.BlobStorage.ITableStorageStoreConnectionStringFactory
  - Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory
  inheritedMembers:
  - Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.TableStorageReadableDataStoreConnectionStringKey
  - Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.TableStorageWritableDataStoreConnectionStringKey
  - Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.TableStorageDataStoreConnectionStringKey
  - Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.TableStorageBaseContainerNameKey
  - Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.ConfigurationManager
  - Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.Logger
  - Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.GetWritableConnectionStrings
  - Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.GetReadableConnectionString
  - Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.GetBaseContainerName
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: TableStorageDataStoreConnectionStringFactory(Of TData)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Cqrs.Azure.Storage.DataStores.TableStorageDataStoreConnectionStringFactory(Of TData)
  name.vb: TableStorageDataStoreConnectionStringFactory(Of TData)
- uid: Cqrs.Azure.Storage.DataStores.TableStorageDataStoreConnectionStringFactory`1.#ctor(Cqrs.Configuration.IConfigurationManager,cdmdotnet.Logging.ILogger)
  commentId: M:Cqrs.Azure.Storage.DataStores.TableStorageDataStoreConnectionStringFactory`1.#ctor(Cqrs.Configuration.IConfigurationManager,cdmdotnet.Logging.ILogger)
  id: '#ctor(Cqrs.Configuration.IConfigurationManager,cdmdotnet.Logging.ILogger)'
  parent: Cqrs.Azure.Storage.DataStores.TableStorageDataStoreConnectionStringFactory`1
  langs:
  - csharp
  - vb
  name: TableStorageDataStoreConnectionStringFactory(IConfigurationManager, ILogger)
  nameWithType: TableStorageDataStoreConnectionStringFactory<TData>.TableStorageDataStoreConnectionStringFactory(IConfigurationManager, ILogger)
  fullName: Cqrs.Azure.Storage.DataStores.TableStorageDataStoreConnectionStringFactory<TData>.TableStorageDataStoreConnectionStringFactory(Cqrs.Configuration.IConfigurationManager, cdmdotnet.Logging.ILogger)
  type: Constructor
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.Storage/DataStores/TableStorageDataStoreConnectionStringFactory.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: .ctor
    path: Framework/Azure/Cqrs.Azure.Storage/DataStores/TableStorageDataStoreConnectionStringFactory.cs
    startLine: 26
  assemblies:
  - Cqrs.Azure.Storage
  namespace: Cqrs.Azure.Storage.DataStores
  summary: "\nInstantiates a new instance of <xref href=\"Cqrs.Azure.Storage.DataStores.TableStorageDataStoreConnectionStringFactory%601\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public TableStorageDataStoreConnectionStringFactory(IConfigurationManager configurationManager, ILogger logger)
    parameters:
    - id: configurationManager
      type: Cqrs.Configuration.IConfigurationManager
    - id: logger
      type: cdmdotnet.Logging.ILogger
    content.vb: Public Sub New(configurationManager As IConfigurationManager, logger As ILogger)
  overload: Cqrs.Azure.Storage.DataStores.TableStorageDataStoreConnectionStringFactory`1.#ctor*
  nameWithType.vb: TableStorageDataStoreConnectionStringFactory(Of TData).TableStorageDataStoreConnectionStringFactory(IConfigurationManager, ILogger)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Cqrs.Azure.Storage.DataStores.TableStorageDataStoreConnectionStringFactory(Of TData).TableStorageDataStoreConnectionStringFactory(Cqrs.Configuration.IConfigurationManager, cdmdotnet.Logging.ILogger)
- uid: Cqrs.Azure.Storage.DataStores.TableStorageDataStoreConnectionStringFactory`1.GetContainerName
  commentId: M:Cqrs.Azure.Storage.DataStores.TableStorageDataStoreConnectionStringFactory`1.GetContainerName
  id: GetContainerName
  parent: Cqrs.Azure.Storage.DataStores.TableStorageDataStoreConnectionStringFactory`1
  langs:
  - csharp
  - vb
  name: GetContainerName()
  nameWithType: TableStorageDataStoreConnectionStringFactory<TData>.GetContainerName()
  fullName: Cqrs.Azure.Storage.DataStores.TableStorageDataStoreConnectionStringFactory<TData>.GetContainerName()
  type: Method
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.Storage/DataStores/TableStorageDataStoreConnectionStringFactory.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: GetContainerName
    path: Framework/Azure/Cqrs.Azure.Storage/DataStores/TableStorageDataStoreConnectionStringFactory.cs
    startLine: 37
  assemblies:
  - Cqrs.Azure.Storage
  namespace: Cqrs.Azure.Storage.DataStores
  summary: "\nReturns <xref href=\"Cqrs.Azure.Storage.DataStores.TableStorageDataStoreConnectionStringFactory%601.GetTableName%60%601\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public override string GetContainerName()
    return:
      type: System.String
      description: <xref href="Cqrs.Azure.Storage.DataStores.TableStorageDataStoreConnectionStringFactory%601.GetTableName%60%601" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Overrides Function GetContainerName As String
  overridden: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.GetContainerName
  overload: Cqrs.Azure.Storage.DataStores.TableStorageDataStoreConnectionStringFactory`1.GetContainerName*
  nameWithType.vb: TableStorageDataStoreConnectionStringFactory(Of TData).GetContainerName()
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Cqrs.Azure.Storage.DataStores.TableStorageDataStoreConnectionStringFactory(Of TData).GetContainerName()
- uid: Cqrs.Azure.Storage.DataStores.TableStorageDataStoreConnectionStringFactory`1.GetTableName``1
  commentId: M:Cqrs.Azure.Storage.DataStores.TableStorageDataStoreConnectionStringFactory`1.GetTableName``1
  id: GetTableName``1
  parent: Cqrs.Azure.Storage.DataStores.TableStorageDataStoreConnectionStringFactory`1
  langs:
  - csharp
  - vb
  name: GetTableName<TData1>()
  nameWithType: TableStorageDataStoreConnectionStringFactory<TData>.GetTableName<TData1>()
  fullName: Cqrs.Azure.Storage.DataStores.TableStorageDataStoreConnectionStringFactory<TData>.GetTableName<TData1>()
  type: Method
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.Storage/DataStores/TableStorageDataStoreConnectionStringFactory.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: GetTableName
    path: Framework/Azure/Cqrs.Azure.Storage/DataStores/TableStorageDataStoreConnectionStringFactory.cs
    startLine: 48
  assemblies:
  - Cqrs.Azure.Storage
  namespace: Cqrs.Azure.Storage.DataStores
  summary: "\nGenerates the name of the table for <span class=\"typeparamref\">TData1</span> that matches naming rules for Azure Storage.\nThe value differs from <xref href=\"Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.GetTableName%60%601\" data-throw-if-not-resolved=\"false\"></xref> in that it appends &quot;V2&quot; to the end of the table name.\n"
  remarks: https://blogs.msdn.microsoft.com/jmstall/2014/06/12/azure-storage-naming-rules/
  example: []
  syntax:
    content: public override string GetTableName<TData1>()
    typeParameters:
    - id: TData1
      description: The <xref href="System.Type" data-throw-if-not-resolved="false"></xref> of data to read or write.
    return:
      type: System.String
    content.vb: Public Overrides Function GetTableName(Of TData1) As String
  overridden: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.GetTableName``1
  overload: Cqrs.Azure.Storage.DataStores.TableStorageDataStoreConnectionStringFactory`1.GetTableName*
  nameWithType.vb: TableStorageDataStoreConnectionStringFactory(Of TData).GetTableName(Of TData1)()
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Cqrs.Azure.Storage.DataStores.TableStorageDataStoreConnectionStringFactory(Of TData).GetTableName(Of TData1)()
  name.vb: GetTableName(Of TData1)()
references:
- uid: Cqrs.DataStores.IDataStore`1
  commentId: T:Cqrs.DataStores.IDataStore`1
  isExternal: false
  name: IDataStore<TData>
  nameWithType: IDataStore<TData>
  fullName: Cqrs.DataStores.IDataStore<TData>
  nameWithType.vb: IDataStore(Of TData)
  fullName.vb: Cqrs.DataStores.IDataStore(Of TData)
  name.vb: IDataStore(Of TData)
  spec.csharp:
  - uid: Cqrs.DataStores.IDataStore`1
    name: IDataStore
    nameWithType: IDataStore
    fullName: Cqrs.DataStores.IDataStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.DataStores.IDataStore`1
    name: IDataStore
    nameWithType: IDataStore
    fullName: Cqrs.DataStores.IDataStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.Storage.DataStores
  commentId: N:Cqrs.Azure.Storage.DataStores
  isExternal: false
  name: Cqrs.Azure.Storage.DataStores
  nameWithType: Cqrs.Azure.Storage.DataStores
  fullName: Cqrs.Azure.Storage.DataStores
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory
  commentId: T:Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory
  parent: Cqrs.Azure.BlobStorage.DataStores
  isExternal: false
  name: TableStorageDataStoreConnectionStringFactory
  nameWithType: TableStorageDataStoreConnectionStringFactory
  fullName: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory
- uid: Cqrs.Azure.BlobStorage.DataStores.ITableStorageDataStoreConnectionStringFactory
  commentId: T:Cqrs.Azure.BlobStorage.DataStores.ITableStorageDataStoreConnectionStringFactory
  parent: Cqrs.Azure.BlobStorage.DataStores
  isExternal: false
  name: ITableStorageDataStoreConnectionStringFactory
  nameWithType: ITableStorageDataStoreConnectionStringFactory
  fullName: Cqrs.Azure.BlobStorage.DataStores.ITableStorageDataStoreConnectionStringFactory
- uid: Cqrs.Azure.BlobStorage.ITableStorageStoreConnectionStringFactory
  commentId: T:Cqrs.Azure.BlobStorage.ITableStorageStoreConnectionStringFactory
  parent: Cqrs.Azure.BlobStorage
  isExternal: false
  name: ITableStorageStoreConnectionStringFactory
  nameWithType: ITableStorageStoreConnectionStringFactory
  fullName: Cqrs.Azure.BlobStorage.ITableStorageStoreConnectionStringFactory
- uid: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory
  commentId: T:Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory
  parent: Cqrs.Azure.BlobStorage
  isExternal: false
  name: IStorageStoreConnectionStringFactory
  nameWithType: IStorageStoreConnectionStringFactory
  fullName: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory
- uid: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.TableStorageReadableDataStoreConnectionStringKey
  commentId: F:Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.TableStorageReadableDataStoreConnectionStringKey
  parent: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory
  isExternal: false
  name: TableStorageReadableDataStoreConnectionStringKey
  nameWithType: TableStorageDataStoreConnectionStringFactory.TableStorageReadableDataStoreConnectionStringKey
  fullName: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.TableStorageReadableDataStoreConnectionStringKey
- uid: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.TableStorageWritableDataStoreConnectionStringKey
  commentId: F:Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.TableStorageWritableDataStoreConnectionStringKey
  parent: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory
  isExternal: false
  name: TableStorageWritableDataStoreConnectionStringKey
  nameWithType: TableStorageDataStoreConnectionStringFactory.TableStorageWritableDataStoreConnectionStringKey
  fullName: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.TableStorageWritableDataStoreConnectionStringKey
- uid: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.TableStorageDataStoreConnectionStringKey
  commentId: F:Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.TableStorageDataStoreConnectionStringKey
  parent: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory
  isExternal: false
  name: TableStorageDataStoreConnectionStringKey
  nameWithType: TableStorageDataStoreConnectionStringFactory.TableStorageDataStoreConnectionStringKey
  fullName: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.TableStorageDataStoreConnectionStringKey
- uid: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.TableStorageBaseContainerNameKey
  commentId: F:Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.TableStorageBaseContainerNameKey
  parent: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory
  isExternal: false
  name: TableStorageBaseContainerNameKey
  nameWithType: TableStorageDataStoreConnectionStringFactory.TableStorageBaseContainerNameKey
  fullName: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.TableStorageBaseContainerNameKey
- uid: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.ConfigurationManager
  commentId: P:Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.ConfigurationManager
  parent: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory
  isExternal: false
  name: ConfigurationManager
  nameWithType: TableStorageDataStoreConnectionStringFactory.ConfigurationManager
  fullName: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.ConfigurationManager
- uid: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.Logger
  commentId: P:Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.Logger
  parent: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory
  isExternal: false
  name: Logger
  nameWithType: TableStorageDataStoreConnectionStringFactory.Logger
  fullName: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.Logger
- uid: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.GetWritableConnectionStrings
  commentId: M:Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.GetWritableConnectionStrings
  parent: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory
  isExternal: false
  name: GetWritableConnectionStrings()
  nameWithType: TableStorageDataStoreConnectionStringFactory.GetWritableConnectionStrings()
  fullName: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.GetWritableConnectionStrings()
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.GetWritableConnectionStrings
    name: GetWritableConnectionStrings
    nameWithType: TableStorageDataStoreConnectionStringFactory.GetWritableConnectionStrings
    fullName: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.GetWritableConnectionStrings
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.GetWritableConnectionStrings
    name: GetWritableConnectionStrings
    nameWithType: TableStorageDataStoreConnectionStringFactory.GetWritableConnectionStrings
    fullName: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.GetWritableConnectionStrings
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.GetReadableConnectionString
  commentId: M:Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.GetReadableConnectionString
  parent: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory
  isExternal: false
  name: GetReadableConnectionString()
  nameWithType: TableStorageDataStoreConnectionStringFactory.GetReadableConnectionString()
  fullName: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.GetReadableConnectionString()
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.GetReadableConnectionString
    name: GetReadableConnectionString
    nameWithType: TableStorageDataStoreConnectionStringFactory.GetReadableConnectionString
    fullName: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.GetReadableConnectionString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.GetReadableConnectionString
    name: GetReadableConnectionString
    nameWithType: TableStorageDataStoreConnectionStringFactory.GetReadableConnectionString
    fullName: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.GetReadableConnectionString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.GetBaseContainerName
  commentId: M:Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.GetBaseContainerName
  parent: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory
  isExternal: false
  name: GetBaseContainerName()
  nameWithType: TableStorageDataStoreConnectionStringFactory.GetBaseContainerName()
  fullName: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.GetBaseContainerName()
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.GetBaseContainerName
    name: GetBaseContainerName
    nameWithType: TableStorageDataStoreConnectionStringFactory.GetBaseContainerName
    fullName: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.GetBaseContainerName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.GetBaseContainerName
    name: GetBaseContainerName
    nameWithType: TableStorageDataStoreConnectionStringFactory.GetBaseContainerName
    fullName: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.GetBaseContainerName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Cqrs.Azure.BlobStorage.DataStores
  commentId: N:Cqrs.Azure.BlobStorage.DataStores
  isExternal: false
  name: Cqrs.Azure.BlobStorage.DataStores
  nameWithType: Cqrs.Azure.BlobStorage.DataStores
  fullName: Cqrs.Azure.BlobStorage.DataStores
- uid: Cqrs.Azure.BlobStorage
  commentId: N:Cqrs.Azure.BlobStorage
  isExternal: false
  name: Cqrs.Azure.BlobStorage
  nameWithType: Cqrs.Azure.BlobStorage
  fullName: Cqrs.Azure.BlobStorage
- uid: Cqrs.Azure.Storage.DataStores.TableStorageDataStoreConnectionStringFactory`1
  commentId: T:Cqrs.Azure.Storage.DataStores.TableStorageDataStoreConnectionStringFactory`1
  isExternal: false
  name: TableStorageDataStoreConnectionStringFactory<TData>
  nameWithType: TableStorageDataStoreConnectionStringFactory<TData>
  fullName: Cqrs.Azure.Storage.DataStores.TableStorageDataStoreConnectionStringFactory<TData>
  nameWithType.vb: TableStorageDataStoreConnectionStringFactory(Of TData)
  fullName.vb: Cqrs.Azure.Storage.DataStores.TableStorageDataStoreConnectionStringFactory(Of TData)
  name.vb: TableStorageDataStoreConnectionStringFactory(Of TData)
  spec.csharp:
  - uid: Cqrs.Azure.Storage.DataStores.TableStorageDataStoreConnectionStringFactory`1
    name: TableStorageDataStoreConnectionStringFactory
    nameWithType: TableStorageDataStoreConnectionStringFactory
    fullName: Cqrs.Azure.Storage.DataStores.TableStorageDataStoreConnectionStringFactory
  - name: <
    nameWithType: <
    fullName: <
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Azure.Storage.DataStores.TableStorageDataStoreConnectionStringFactory`1
    name: TableStorageDataStoreConnectionStringFactory
    nameWithType: TableStorageDataStoreConnectionStringFactory
    fullName: Cqrs.Azure.Storage.DataStores.TableStorageDataStoreConnectionStringFactory
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.Storage.DataStores.TableStorageDataStoreConnectionStringFactory`1.#ctor*
  commentId: Overload:Cqrs.Azure.Storage.DataStores.TableStorageDataStoreConnectionStringFactory`1.#ctor
  isExternal: false
  name: TableStorageDataStoreConnectionStringFactory
  nameWithType: TableStorageDataStoreConnectionStringFactory<TData>.TableStorageDataStoreConnectionStringFactory
  fullName: Cqrs.Azure.Storage.DataStores.TableStorageDataStoreConnectionStringFactory<TData>.TableStorageDataStoreConnectionStringFactory
  nameWithType.vb: TableStorageDataStoreConnectionStringFactory(Of TData).TableStorageDataStoreConnectionStringFactory
  fullName.vb: Cqrs.Azure.Storage.DataStores.TableStorageDataStoreConnectionStringFactory(Of TData).TableStorageDataStoreConnectionStringFactory
- uid: Cqrs.Configuration.IConfigurationManager
  commentId: T:Cqrs.Configuration.IConfigurationManager
  parent: Cqrs.Configuration
  isExternal: false
  name: IConfigurationManager
  nameWithType: IConfigurationManager
  fullName: Cqrs.Configuration.IConfigurationManager
- uid: cdmdotnet.Logging.ILogger
  commentId: T:cdmdotnet.Logging.ILogger
  parent: cdmdotnet.Logging
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: cdmdotnet.Logging.ILogger
- uid: Cqrs.Configuration
  commentId: N:Cqrs.Configuration
  isExternal: false
  name: Cqrs.Configuration
  nameWithType: Cqrs.Configuration
  fullName: Cqrs.Configuration
- uid: cdmdotnet.Logging
  commentId: N:cdmdotnet.Logging
  isExternal: false
  name: cdmdotnet.Logging
  nameWithType: cdmdotnet.Logging
  fullName: cdmdotnet.Logging
- uid: Cqrs.Azure.Storage.DataStores.TableStorageDataStoreConnectionStringFactory`1.GetTableName``1
  commentId: M:Cqrs.Azure.Storage.DataStores.TableStorageDataStoreConnectionStringFactory`1.GetTableName``1
- uid: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.GetContainerName
  commentId: M:Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.GetContainerName
  parent: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory
  isExternal: false
  name: GetContainerName()
  nameWithType: TableStorageDataStoreConnectionStringFactory.GetContainerName()
  fullName: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.GetContainerName()
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.GetContainerName
    name: GetContainerName
    nameWithType: TableStorageDataStoreConnectionStringFactory.GetContainerName
    fullName: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.GetContainerName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.GetContainerName
    name: GetContainerName
    nameWithType: TableStorageDataStoreConnectionStringFactory.GetContainerName
    fullName: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.GetContainerName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.Storage.DataStores.TableStorageDataStoreConnectionStringFactory`1.GetContainerName*
  commentId: Overload:Cqrs.Azure.Storage.DataStores.TableStorageDataStoreConnectionStringFactory`1.GetContainerName
  isExternal: false
  name: GetContainerName
  nameWithType: TableStorageDataStoreConnectionStringFactory<TData>.GetContainerName
  fullName: Cqrs.Azure.Storage.DataStores.TableStorageDataStoreConnectionStringFactory<TData>.GetContainerName
  nameWithType.vb: TableStorageDataStoreConnectionStringFactory(Of TData).GetContainerName
  fullName.vb: Cqrs.Azure.Storage.DataStores.TableStorageDataStoreConnectionStringFactory(Of TData).GetContainerName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.GetTableName``1
  commentId: M:Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.GetTableName``1
  parent: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory
  isExternal: false
  name: GetTableName<TData>()
  nameWithType: TableStorageDataStoreConnectionStringFactory.GetTableName<TData>()
  fullName: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.GetTableName<TData>()
  nameWithType.vb: TableStorageDataStoreConnectionStringFactory.GetTableName(Of TData)()
  fullName.vb: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.GetTableName(Of TData)()
  name.vb: GetTableName(Of TData)()
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.GetTableName``1
    name: GetTableName<TData>
    nameWithType: TableStorageDataStoreConnectionStringFactory.GetTableName<TData>
    fullName: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.GetTableName<TData>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.GetTableName``1
    name: GetTableName(Of TData)
    nameWithType: TableStorageDataStoreConnectionStringFactory.GetTableName(Of TData)
    fullName: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory.GetTableName(Of TData)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Cqrs.Azure.Storage.DataStores.TableStorageDataStoreConnectionStringFactory`1.GetTableName*
  commentId: Overload:Cqrs.Azure.Storage.DataStores.TableStorageDataStoreConnectionStringFactory`1.GetTableName
  isExternal: false
  name: GetTableName
  nameWithType: TableStorageDataStoreConnectionStringFactory<TData>.GetTableName
  fullName: Cqrs.Azure.Storage.DataStores.TableStorageDataStoreConnectionStringFactory<TData>.GetTableName
  nameWithType.vb: TableStorageDataStoreConnectionStringFactory(Of TData).GetTableName
  fullName.vb: Cqrs.Azure.Storage.DataStores.TableStorageDataStoreConnectionStringFactory(Of TData).GetTableName
