### YamlMime:ManagedReference
items:
- uid: Cqrs.WebApi.SignalR.Hubs.INotificationHub
  commentId: T:Cqrs.WebApi.SignalR.Hubs.INotificationHub
  id: INotificationHub
  parent: Cqrs.WebApi.SignalR.Hubs
  children:
  - Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendAllUsersEvent``1(Cqrs.Events.IEvent{``0})
  - Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendExceptThisUserEvent``1(Cqrs.Events.IEvent{``0},System.String)
  - Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendUserEvent``1(Cqrs.Events.IEvent{``0},System.String)
  - Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendUsersEvent``1(Cqrs.Events.IEvent{``0},System.Guid[])
  langs:
  - csharp
  - vb
  name: INotificationHub
  nameWithType: INotificationHub
  fullName: Cqrs.WebApi.SignalR.Hubs.INotificationHub
  type: Interface
  source:
    remote:
      path: Framework/Cqrs.WebApi/SignalR/Hubs/INotificationHub.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: INotificationHub
    path: Framework/Cqrs.WebApi/SignalR/Hubs/INotificationHub.cs
    startLine: 16
  assemblies:
  - Cqrs.WebApi
  namespace: Cqrs.WebApi.SignalR.Hubs
  summary: "\nSends <xref href=\"Cqrs.Events.IEvent%601\" data-throw-if-not-resolved=\"false\"></xref> to different groups of users.\n"
  example: []
  syntax:
    content: public interface INotificationHub
    content.vb: Public Interface INotificationHub
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendUsersEvent``1(Cqrs.Events.IEvent{``0},System.Guid[])
  commentId: M:Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendUsersEvent``1(Cqrs.Events.IEvent{``0},System.Guid[])
  id: SendUsersEvent``1(Cqrs.Events.IEvent{``0},System.Guid[])
  parent: Cqrs.WebApi.SignalR.Hubs.INotificationHub
  langs:
  - csharp
  - vb
  name: SendUsersEvent<TAuthenticationToken>(IEvent<TAuthenticationToken>, Guid[])
  nameWithType: INotificationHub.SendUsersEvent<TAuthenticationToken>(IEvent<TAuthenticationToken>, Guid[])
  fullName: Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendUsersEvent<TAuthenticationToken>(Cqrs.Events.IEvent<TAuthenticationToken>, System.Guid[])
  type: Method
  source:
    remote:
      path: Framework/Cqrs.WebApi/SignalR/Hubs/INotificationHub.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: SendUsersEvent
    path: Framework/Cqrs.WebApi/SignalR/Hubs/INotificationHub.cs
    startLine: 21
  assemblies:
  - Cqrs.WebApi
  namespace: Cqrs.WebApi.SignalR.Hubs
  summary: "\nSend out an event to specific user RSNs\n"
  example: []
  syntax:
    content: void SendUsersEvent<TAuthenticationToken>(IEvent<TAuthenticationToken> eventData, params Guid[] userRsnCollection)
    parameters:
    - id: eventData
      type: Cqrs.Events.IEvent{{TAuthenticationToken}}
    - id: userRsnCollection
      type: System.Guid[]
    typeParameters:
    - id: TAuthenticationToken
    content.vb: Sub SendUsersEvent(Of TAuthenticationToken)(eventData As IEvent(Of TAuthenticationToken), ParamArray userRsnCollection As Guid())
  overload: Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendUsersEvent*
  nameWithType.vb: INotificationHub.SendUsersEvent(Of TAuthenticationToken)(IEvent(Of TAuthenticationToken), Guid())
  fullName.vb: Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendUsersEvent(Of TAuthenticationToken)(Cqrs.Events.IEvent(Of TAuthenticationToken), System.Guid())
  name.vb: SendUsersEvent(Of TAuthenticationToken)(IEvent(Of TAuthenticationToken), Guid())
- uid: Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendUserEvent``1(Cqrs.Events.IEvent{``0},System.String)
  commentId: M:Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendUserEvent``1(Cqrs.Events.IEvent{``0},System.String)
  id: SendUserEvent``1(Cqrs.Events.IEvent{``0},System.String)
  parent: Cqrs.WebApi.SignalR.Hubs.INotificationHub
  langs:
  - csharp
  - vb
  name: SendUserEvent<TAuthenticationToken>(IEvent<TAuthenticationToken>, String)
  nameWithType: INotificationHub.SendUserEvent<TAuthenticationToken>(IEvent<TAuthenticationToken>, String)
  fullName: Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendUserEvent<TAuthenticationToken>(Cqrs.Events.IEvent<TAuthenticationToken>, System.String)
  type: Method
  source:
    remote:
      path: Framework/Cqrs.WebApi/SignalR/Hubs/INotificationHub.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: SendUserEvent
    path: Framework/Cqrs.WebApi/SignalR/Hubs/INotificationHub.cs
    startLine: 26
  assemblies:
  - Cqrs.WebApi
  namespace: Cqrs.WebApi.SignalR.Hubs
  summary: "\nSend out an event to specific user token\n"
  example: []
  syntax:
    content: void SendUserEvent<TAuthenticationToken>(IEvent<TAuthenticationToken> eventData, string userToken)
    parameters:
    - id: eventData
      type: Cqrs.Events.IEvent{{TAuthenticationToken}}
    - id: userToken
      type: System.String
    typeParameters:
    - id: TAuthenticationToken
    content.vb: Sub SendUserEvent(Of TAuthenticationToken)(eventData As IEvent(Of TAuthenticationToken), userToken As String)
  overload: Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendUserEvent*
  nameWithType.vb: INotificationHub.SendUserEvent(Of TAuthenticationToken)(IEvent(Of TAuthenticationToken), String)
  fullName.vb: Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendUserEvent(Of TAuthenticationToken)(Cqrs.Events.IEvent(Of TAuthenticationToken), System.String)
  name.vb: SendUserEvent(Of TAuthenticationToken)(IEvent(Of TAuthenticationToken), String)
- uid: Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendAllUsersEvent``1(Cqrs.Events.IEvent{``0})
  commentId: M:Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendAllUsersEvent``1(Cqrs.Events.IEvent{``0})
  id: SendAllUsersEvent``1(Cqrs.Events.IEvent{``0})
  parent: Cqrs.WebApi.SignalR.Hubs.INotificationHub
  langs:
  - csharp
  - vb
  name: SendAllUsersEvent<TAuthenticationToken>(IEvent<TAuthenticationToken>)
  nameWithType: INotificationHub.SendAllUsersEvent<TAuthenticationToken>(IEvent<TAuthenticationToken>)
  fullName: Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendAllUsersEvent<TAuthenticationToken>(Cqrs.Events.IEvent<TAuthenticationToken>)
  type: Method
  source:
    remote:
      path: Framework/Cqrs.WebApi/SignalR/Hubs/INotificationHub.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: SendAllUsersEvent
    path: Framework/Cqrs.WebApi/SignalR/Hubs/INotificationHub.cs
    startLine: 31
  assemblies:
  - Cqrs.WebApi
  namespace: Cqrs.WebApi.SignalR.Hubs
  summary: "\nSend out an event to all users\n"
  example: []
  syntax:
    content: void SendAllUsersEvent<TAuthenticationToken>(IEvent<TAuthenticationToken> eventData)
    parameters:
    - id: eventData
      type: Cqrs.Events.IEvent{{TAuthenticationToken}}
    typeParameters:
    - id: TAuthenticationToken
    content.vb: Sub SendAllUsersEvent(Of TAuthenticationToken)(eventData As IEvent(Of TAuthenticationToken))
  overload: Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendAllUsersEvent*
  nameWithType.vb: INotificationHub.SendAllUsersEvent(Of TAuthenticationToken)(IEvent(Of TAuthenticationToken))
  fullName.vb: Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendAllUsersEvent(Of TAuthenticationToken)(Cqrs.Events.IEvent(Of TAuthenticationToken))
  name.vb: SendAllUsersEvent(Of TAuthenticationToken)(IEvent(Of TAuthenticationToken))
- uid: Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendExceptThisUserEvent``1(Cqrs.Events.IEvent{``0},System.String)
  commentId: M:Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendExceptThisUserEvent``1(Cqrs.Events.IEvent{``0},System.String)
  id: SendExceptThisUserEvent``1(Cqrs.Events.IEvent{``0},System.String)
  parent: Cqrs.WebApi.SignalR.Hubs.INotificationHub
  langs:
  - csharp
  - vb
  name: SendExceptThisUserEvent<TAuthenticationToken>(IEvent<TAuthenticationToken>, String)
  nameWithType: INotificationHub.SendExceptThisUserEvent<TAuthenticationToken>(IEvent<TAuthenticationToken>, String)
  fullName: Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendExceptThisUserEvent<TAuthenticationToken>(Cqrs.Events.IEvent<TAuthenticationToken>, System.String)
  type: Method
  source:
    remote:
      path: Framework/Cqrs.WebApi/SignalR/Hubs/INotificationHub.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: SendExceptThisUserEvent
    path: Framework/Cqrs.WebApi/SignalR/Hubs/INotificationHub.cs
    startLine: 36
  assemblies:
  - Cqrs.WebApi
  namespace: Cqrs.WebApi.SignalR.Hubs
  summary: "\nSend out an event to all users except the specific user token\n"
  example: []
  syntax:
    content: void SendExceptThisUserEvent<TAuthenticationToken>(IEvent<TAuthenticationToken> eventData, string userToken)
    parameters:
    - id: eventData
      type: Cqrs.Events.IEvent{{TAuthenticationToken}}
    - id: userToken
      type: System.String
    typeParameters:
    - id: TAuthenticationToken
    content.vb: Sub SendExceptThisUserEvent(Of TAuthenticationToken)(eventData As IEvent(Of TAuthenticationToken), userToken As String)
  overload: Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendExceptThisUserEvent*
  nameWithType.vb: INotificationHub.SendExceptThisUserEvent(Of TAuthenticationToken)(IEvent(Of TAuthenticationToken), String)
  fullName.vb: Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendExceptThisUserEvent(Of TAuthenticationToken)(Cqrs.Events.IEvent(Of TAuthenticationToken), System.String)
  name.vb: SendExceptThisUserEvent(Of TAuthenticationToken)(IEvent(Of TAuthenticationToken), String)
references:
- uid: Cqrs.Events.IEvent`1
  commentId: T:Cqrs.Events.IEvent`1
  isExternal: false
  name: IEvent<TAuthenticationToken>
  nameWithType: IEvent<TAuthenticationToken>
  fullName: Cqrs.Events.IEvent<TAuthenticationToken>
  nameWithType.vb: IEvent(Of TAuthenticationToken)
  fullName.vb: Cqrs.Events.IEvent(Of TAuthenticationToken)
  name.vb: IEvent(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.WebApi.SignalR.Hubs
  commentId: N:Cqrs.WebApi.SignalR.Hubs
  isExternal: false
  name: Cqrs.WebApi.SignalR.Hubs
  nameWithType: Cqrs.WebApi.SignalR.Hubs
  fullName: Cqrs.WebApi.SignalR.Hubs
- uid: Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendUsersEvent*
  commentId: Overload:Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendUsersEvent
  isExternal: false
  name: SendUsersEvent
  nameWithType: INotificationHub.SendUsersEvent
  fullName: Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendUsersEvent
- uid: Cqrs.Events.IEvent{{TAuthenticationToken}}
  commentId: T:Cqrs.Events.IEvent{`0}
  parent: Cqrs.Events
  definition: Cqrs.Events.IEvent`1
  name: IEvent<TAuthenticationToken>
  nameWithType: IEvent<TAuthenticationToken>
  fullName: Cqrs.Events.IEvent<TAuthenticationToken>
  nameWithType.vb: IEvent(Of TAuthenticationToken)
  fullName.vb: Cqrs.Events.IEvent(Of TAuthenticationToken)
  name.vb: IEvent(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Guid[]
  name: Guid[]
  nameWithType: Guid[]
  fullName: System.Guid[]
  nameWithType.vb: Guid()
  fullName.vb: System.Guid()
  name.vb: Guid()
  spec.csharp:
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Cqrs.Events
  commentId: N:Cqrs.Events
  isExternal: false
  name: Cqrs.Events
  nameWithType: Cqrs.Events
  fullName: Cqrs.Events
- uid: Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendUserEvent*
  commentId: Overload:Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendUserEvent
  isExternal: false
  name: SendUserEvent
  nameWithType: INotificationHub.SendUserEvent
  fullName: Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendUserEvent
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendAllUsersEvent*
  commentId: Overload:Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendAllUsersEvent
  isExternal: false
  name: SendAllUsersEvent
  nameWithType: INotificationHub.SendAllUsersEvent
  fullName: Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendAllUsersEvent
- uid: Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendExceptThisUserEvent*
  commentId: Overload:Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendExceptThisUserEvent
  isExternal: false
  name: SendExceptThisUserEvent
  nameWithType: INotificationHub.SendExceptThisUserEvent
  fullName: Cqrs.WebApi.SignalR.Hubs.INotificationHub.SendExceptThisUserEvent
