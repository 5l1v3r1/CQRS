### YamlMime:ManagedReference
items:
- uid: Cqrs.Repositories.Queries.IQueryStrategy
  commentId: T:Cqrs.Repositories.Queries.IQueryStrategy
  id: IQueryStrategy
  parent: Cqrs.Repositories.Queries
  children:
  - Cqrs.Repositories.Queries.IQueryStrategy.QueryPredicate
  langs:
  - csharp
  - vb
  name: IQueryStrategy
  nameWithType: IQueryStrategy
  fullName: Cqrs.Repositories.Queries.IQueryStrategy
  type: Interface
  source:
    remote:
      path: Framework/Cqrs/Repositories/Queries/IQueryStrategy.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: IQueryStrategy
    path: Framework/Cqrs/Repositories/Queries/IQueryStrategy.cs
    startLine: 13
  assemblies:
  - Cqrs
  namespace: Cqrs.Repositories.Queries
  summary: "\nA specification for a query to execute.\n"
  example: []
  syntax:
    content: public interface IQueryStrategy
    content.vb: Public Interface IQueryStrategy
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Cqrs.Repositories.Queries.IQueryStrategy.QueryPredicate
  commentId: P:Cqrs.Repositories.Queries.IQueryStrategy.QueryPredicate
  id: QueryPredicate
  parent: Cqrs.Repositories.Queries.IQueryStrategy
  langs:
  - csharp
  - vb
  name: QueryPredicate
  nameWithType: IQueryStrategy.QueryPredicate
  fullName: Cqrs.Repositories.Queries.IQueryStrategy.QueryPredicate
  type: Property
  source:
    remote:
      path: Framework/Cqrs/Repositories/Queries/IQueryStrategy.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: QueryPredicate
    path: Framework/Cqrs/Repositories/Queries/IQueryStrategy.cs
    startLine: 18
  assemblies:
  - Cqrs
  namespace: Cqrs.Repositories.Queries
  summary: "\nThe predicate that will be evaluated.\n"
  example: []
  syntax:
    content: IQueryPredicate QueryPredicate { get; }
    parameters: []
    return:
      type: Cqrs.Repositories.Queries.IQueryPredicate
    content.vb: ReadOnly Property QueryPredicate As IQueryPredicate
  overload: Cqrs.Repositories.Queries.IQueryStrategy.QueryPredicate*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: Cqrs.Repositories.Queries
  commentId: N:Cqrs.Repositories.Queries
  isExternal: false
  name: Cqrs.Repositories.Queries
  nameWithType: Cqrs.Repositories.Queries
  fullName: Cqrs.Repositories.Queries
- uid: Cqrs.Repositories.Queries.IQueryStrategy.QueryPredicate*
  commentId: Overload:Cqrs.Repositories.Queries.IQueryStrategy.QueryPredicate
  isExternal: false
  name: QueryPredicate
  nameWithType: IQueryStrategy.QueryPredicate
  fullName: Cqrs.Repositories.Queries.IQueryStrategy.QueryPredicate
- uid: Cqrs.Repositories.Queries.IQueryPredicate
  commentId: T:Cqrs.Repositories.Queries.IQueryPredicate
  parent: Cqrs.Repositories.Queries
  isExternal: false
  name: IQueryPredicate
  nameWithType: IQueryPredicate
  fullName: Cqrs.Repositories.Queries.IQueryPredicate
