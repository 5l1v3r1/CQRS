@{
	ViewBag.Title = "Sample Command and Event via SignalR";
}

<div class="jumbotron">
	<h1>Say Hello</h1>
	<p class="lead">Click the button below to say hello.</p>
	<p id="SayHelloWorld"><a href="javascript: window.api.SampleApi.SayHelloWorld().done(function (data){ console.log(data); });" class="btn btn-primary btn-lg">Say Hello &raquo;</a></p>
	<div id="HelloWorldSaid">
		<p style="color: crimson">Congratulations. You've just written and executed your first CQRS command and event!!!<p>
		<p>You've learnt:</p>
		<ul>
			<li>How to configure CQRS.NET.</li>
			<li>How to create a WebAPI controller to create commands and respond to browser initiated events like clicking a button.</li>
			<li>How to configure and communicate with your WebAPI controllers by using the generated Java-script client <pre>window.api[ControllerName][ControllerMethod]</pre></li>
			<li>How to create a command.</li>
			<li>How to create an event.</li>
			<li>How to create a command handler that responds to a command and raises an event.</li>
			<li>How to decorate an event so that it is sent back to the user via SignalR.</li>
			<li>How to respond to events sent via SignalR like displaying a congratulations message.</li>
		</ul>
	</div>
</div>

<script>
$(function () {
	$("#SayHelloWorld").hide();

	// Create a function that the hub can call to notify you when it is setup.
	window.cqrsNotificationHub.client.registered = function () {
		console.info("Now registered to receive notifications.");
		$("#SayHelloWorld").show();
	};

	$("#HelloWorldSaid").hide();

	// Create a function that the hub can call to broadcast messages.
	window.cqrsNotificationHub.client.notifyEvent = function (event) {
		console.info(event);
		switch (event.Type) {
			case "HelloWorldExample.Controllers.Events.HelloSaidEvent":
				$("#HelloWorldSaid").show();
				break;
		}
	};
});
</script>