### YamlMime:ManagedReference
items:
- uid: Cqrs.Ninject.Configuration.EventStoreModule`1
  commentId: T:Cqrs.Ninject.Configuration.EventStoreModule`1
  id: EventStoreModule`1
  parent: Cqrs.Ninject.Configuration
  children:
  - Cqrs.Ninject.Configuration.EventStoreModule`1.Load
  - Cqrs.Ninject.Configuration.EventStoreModule`1.RegisterCqrsRequirements
  - Cqrs.Ninject.Configuration.EventStoreModule`1.RegisterFactories
  - Cqrs.Ninject.Configuration.EventStoreModule`1.RegisterServices
  langs:
  - csharp
  - vb
  name: EventStoreModule<TAuthenticationToken>
  nameWithType: EventStoreModule<TAuthenticationToken>
  fullName: Cqrs.Ninject.Configuration.EventStoreModule<TAuthenticationToken>
  type: Class
  source:
    remote:
      path: Framework/Ninject/Cqrs.Ninject.EventStore/Configuration/EventStoreModule.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: EventStoreModule
    path: Framework/Ninject/Cqrs.Ninject.EventStore/Configuration/EventStoreModule.cs
    startLine: 11
  assemblies:
  - Cqrs.Ninject.EventStore
  namespace: Cqrs.Ninject.Configuration
  summary: "\nA <see cref=\"!:INinjectModule\"></see> that wires up <xref href=\"Cqrs.EventStore.EventStore%601\" data-throw-if-not-resolved=\"false\"></xref> as the <xref href=\"Cqrs.Events.IEventStore%601\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: 'public class EventStoreModule<TAuthenticationToken> : NinjectModule'
    typeParameters:
    - id: TAuthenticationToken
      description: The <see cref="!:Type"></see> of the authentication token.
    content.vb: >-
      Public Class EventStoreModule(Of TAuthenticationToken)
          Inherits NinjectModule
  inheritance:
  - System.Object
  nameWithType.vb: EventStoreModule(Of TAuthenticationToken)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Cqrs.Ninject.Configuration.EventStoreModule(Of TAuthenticationToken)
  name.vb: EventStoreModule(Of TAuthenticationToken)
- uid: Cqrs.Ninject.Configuration.EventStoreModule`1.Load
  commentId: M:Cqrs.Ninject.Configuration.EventStoreModule`1.Load
  id: Load
  parent: Cqrs.Ninject.Configuration.EventStoreModule`1
  langs:
  - csharp
  - vb
  name: Load()
  nameWithType: EventStoreModule<TAuthenticationToken>.Load()
  fullName: Cqrs.Ninject.Configuration.EventStoreModule<TAuthenticationToken>.Load()
  type: Method
  source:
    remote:
      path: Framework/Ninject/Cqrs.Ninject.EventStore/Configuration/EventStoreModule.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Load
    path: Framework/Ninject/Cqrs.Ninject.EventStore/Configuration/EventStoreModule.cs
    startLine: 18
  assemblies:
  - Cqrs.Ninject.EventStore
  namespace: Cqrs.Ninject.Configuration
  summary: "\nLoads the module into the kernel.\n"
  example: []
  syntax:
    content: public override void Load()
    content.vb: Public Overrides Sub Load
  overload: Cqrs.Ninject.Configuration.EventStoreModule`1.Load*
  nameWithType.vb: EventStoreModule(Of TAuthenticationToken).Load()
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Cqrs.Ninject.Configuration.EventStoreModule(Of TAuthenticationToken).Load()
- uid: Cqrs.Ninject.Configuration.EventStoreModule`1.RegisterFactories
  commentId: M:Cqrs.Ninject.Configuration.EventStoreModule`1.RegisterFactories
  id: RegisterFactories
  parent: Cqrs.Ninject.Configuration.EventStoreModule`1
  langs:
  - csharp
  - vb
  name: RegisterFactories()
  nameWithType: EventStoreModule<TAuthenticationToken>.RegisterFactories()
  fullName: Cqrs.Ninject.Configuration.EventStoreModule<TAuthenticationToken>.RegisterFactories()
  type: Method
  source:
    remote:
      path: Framework/Ninject/Cqrs.Ninject.EventStore/Configuration/EventStoreModule.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: RegisterFactories
    path: Framework/Ninject/Cqrs.Ninject.EventStore/Configuration/EventStoreModule.cs
    startLine: 30
  assemblies:
  - Cqrs.Ninject.EventStore
  namespace: Cqrs.Ninject.Configuration
  summary: "\nRegister the all factories\n"
  example: []
  syntax:
    content: public virtual void RegisterFactories()
    content.vb: Public Overridable Sub RegisterFactories
  overload: Cqrs.Ninject.Configuration.EventStoreModule`1.RegisterFactories*
  nameWithType.vb: EventStoreModule(Of TAuthenticationToken).RegisterFactories()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Cqrs.Ninject.Configuration.EventStoreModule(Of TAuthenticationToken).RegisterFactories()
- uid: Cqrs.Ninject.Configuration.EventStoreModule`1.RegisterServices
  commentId: M:Cqrs.Ninject.Configuration.EventStoreModule`1.RegisterServices
  id: RegisterServices
  parent: Cqrs.Ninject.Configuration.EventStoreModule`1
  langs:
  - csharp
  - vb
  name: RegisterServices()
  nameWithType: EventStoreModule<TAuthenticationToken>.RegisterServices()
  fullName: Cqrs.Ninject.Configuration.EventStoreModule<TAuthenticationToken>.RegisterServices()
  type: Method
  source:
    remote:
      path: Framework/Ninject/Cqrs.Ninject.EventStore/Configuration/EventStoreModule.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: RegisterServices
    path: Framework/Ninject/Cqrs.Ninject.EventStore/Configuration/EventStoreModule.cs
    startLine: 43
  assemblies:
  - Cqrs.Ninject.EventStore
  namespace: Cqrs.Ninject.Configuration
  summary: "\nRegister the all services\n"
  example: []
  syntax:
    content: public virtual void RegisterServices()
    content.vb: Public Overridable Sub RegisterServices
  overload: Cqrs.Ninject.Configuration.EventStoreModule`1.RegisterServices*
  nameWithType.vb: EventStoreModule(Of TAuthenticationToken).RegisterServices()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Cqrs.Ninject.Configuration.EventStoreModule(Of TAuthenticationToken).RegisterServices()
- uid: Cqrs.Ninject.Configuration.EventStoreModule`1.RegisterCqrsRequirements
  commentId: M:Cqrs.Ninject.Configuration.EventStoreModule`1.RegisterCqrsRequirements
  id: RegisterCqrsRequirements
  parent: Cqrs.Ninject.Configuration.EventStoreModule`1
  langs:
  - csharp
  - vb
  name: RegisterCqrsRequirements()
  nameWithType: EventStoreModule<TAuthenticationToken>.RegisterCqrsRequirements()
  fullName: Cqrs.Ninject.Configuration.EventStoreModule<TAuthenticationToken>.RegisterCqrsRequirements()
  type: Method
  source:
    remote:
      path: Framework/Ninject/Cqrs.Ninject.EventStore/Configuration/EventStoreModule.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: RegisterCqrsRequirements
    path: Framework/Ninject/Cqrs.Ninject.EventStore/Configuration/EventStoreModule.cs
    startLine: 50
  assemblies:
  - Cqrs.Ninject.EventStore
  namespace: Cqrs.Ninject.Configuration
  summary: "\nRegister the <xref href=\"Cqrs.EventStore.IEventStoreConnectionHelper\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"Cqrs.Events.IEventStore%601\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public virtual void RegisterCqrsRequirements()
    content.vb: Public Overridable Sub RegisterCqrsRequirements
  overload: Cqrs.Ninject.Configuration.EventStoreModule`1.RegisterCqrsRequirements*
  nameWithType.vb: EventStoreModule(Of TAuthenticationToken).RegisterCqrsRequirements()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Cqrs.Ninject.Configuration.EventStoreModule(Of TAuthenticationToken).RegisterCqrsRequirements()
references:
- uid: Cqrs.EventStore.EventStore`1
  commentId: T:Cqrs.EventStore.EventStore`1
  isExternal: false
  name: EventStore<TAuthenticationToken>
  nameWithType: EventStore<TAuthenticationToken>
  fullName: Cqrs.EventStore.EventStore<TAuthenticationToken>
  nameWithType.vb: EventStore(Of TAuthenticationToken)
  fullName.vb: Cqrs.EventStore.EventStore(Of TAuthenticationToken)
  name.vb: EventStore(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.EventStore.EventStore`1
    name: EventStore
    nameWithType: EventStore
    fullName: Cqrs.EventStore.EventStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.EventStore.EventStore`1
    name: EventStore
    nameWithType: EventStore
    fullName: Cqrs.EventStore.EventStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Events.IEventStore`1
  commentId: T:Cqrs.Events.IEventStore`1
  isExternal: false
  name: IEventStore<TAuthenticationToken>
  nameWithType: IEventStore<TAuthenticationToken>
  fullName: Cqrs.Events.IEventStore<TAuthenticationToken>
  nameWithType.vb: IEventStore(Of TAuthenticationToken)
  fullName.vb: Cqrs.Events.IEventStore(Of TAuthenticationToken)
  name.vb: IEventStore(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Events.IEventStore`1
    name: IEventStore
    nameWithType: IEventStore
    fullName: Cqrs.Events.IEventStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Events.IEventStore`1
    name: IEventStore
    nameWithType: IEventStore
    fullName: Cqrs.Events.IEventStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Ninject.Configuration
  commentId: N:Cqrs.Ninject.Configuration
  isExternal: false
  name: Cqrs.Ninject.Configuration
  nameWithType: Cqrs.Ninject.Configuration
  fullName: Cqrs.Ninject.Configuration
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Cqrs.Ninject.Configuration.EventStoreModule`1.Load*
  commentId: Overload:Cqrs.Ninject.Configuration.EventStoreModule`1.Load
  isExternal: false
  name: Load
  nameWithType: EventStoreModule<TAuthenticationToken>.Load
  fullName: Cqrs.Ninject.Configuration.EventStoreModule<TAuthenticationToken>.Load
  nameWithType.vb: EventStoreModule(Of TAuthenticationToken).Load
  fullName.vb: Cqrs.Ninject.Configuration.EventStoreModule(Of TAuthenticationToken).Load
- uid: Cqrs.Ninject.Configuration.EventStoreModule`1.RegisterFactories*
  commentId: Overload:Cqrs.Ninject.Configuration.EventStoreModule`1.RegisterFactories
  isExternal: false
  name: RegisterFactories
  nameWithType: EventStoreModule<TAuthenticationToken>.RegisterFactories
  fullName: Cqrs.Ninject.Configuration.EventStoreModule<TAuthenticationToken>.RegisterFactories
  nameWithType.vb: EventStoreModule(Of TAuthenticationToken).RegisterFactories
  fullName.vb: Cqrs.Ninject.Configuration.EventStoreModule(Of TAuthenticationToken).RegisterFactories
- uid: Cqrs.Ninject.Configuration.EventStoreModule`1.RegisterServices*
  commentId: Overload:Cqrs.Ninject.Configuration.EventStoreModule`1.RegisterServices
  isExternal: false
  name: RegisterServices
  nameWithType: EventStoreModule<TAuthenticationToken>.RegisterServices
  fullName: Cqrs.Ninject.Configuration.EventStoreModule<TAuthenticationToken>.RegisterServices
  nameWithType.vb: EventStoreModule(Of TAuthenticationToken).RegisterServices
  fullName.vb: Cqrs.Ninject.Configuration.EventStoreModule(Of TAuthenticationToken).RegisterServices
- uid: Cqrs.EventStore.IEventStoreConnectionHelper
  commentId: T:Cqrs.EventStore.IEventStoreConnectionHelper
  parent: Cqrs.EventStore
  isExternal: false
  name: IEventStoreConnectionHelper
  nameWithType: IEventStoreConnectionHelper
  fullName: Cqrs.EventStore.IEventStoreConnectionHelper
- uid: Cqrs.Ninject.Configuration.EventStoreModule`1.RegisterCqrsRequirements*
  commentId: Overload:Cqrs.Ninject.Configuration.EventStoreModule`1.RegisterCqrsRequirements
  isExternal: false
  name: RegisterCqrsRequirements
  nameWithType: EventStoreModule<TAuthenticationToken>.RegisterCqrsRequirements
  fullName: Cqrs.Ninject.Configuration.EventStoreModule<TAuthenticationToken>.RegisterCqrsRequirements
  nameWithType.vb: EventStoreModule(Of TAuthenticationToken).RegisterCqrsRequirements
  fullName.vb: Cqrs.Ninject.Configuration.EventStoreModule(Of TAuthenticationToken).RegisterCqrsRequirements
- uid: Cqrs.EventStore
  commentId: N:Cqrs.EventStore
  isExternal: false
  name: Cqrs.EventStore
  nameWithType: Cqrs.EventStore
  fullName: Cqrs.EventStore
