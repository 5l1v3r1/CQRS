<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classCqrs_1_1Repositories_1_1Queries_1_1QueryStrategy" kind="class" language="C#" prot="public">
    <compoundname>Cqrs::Repositories::Queries::QueryStrategy</compoundname>
    <basecompoundref refid="interfaceCqrs_1_1Repositories_1_1Queries_1_1IQueryStrategy" prot="public" virt="non-virtual">Cqrs.Repositories.Queries.IQueryStrategy</basecompoundref>
      <sectiondef kind="property">
      <memberdef kind="property" id="classCqrs_1_1Repositories_1_1Queries_1_1QueryStrategy_a45d9ad6895a7e8c404ea64abab5242ec_1a45d9ad6895a7e8c404ea64abab5242ec" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="yes">
        <type><ref refid="interfaceCqrs_1_1Repositories_1_1Queries_1_1IQueryPredicate" kindref="compound">IQueryPredicate</ref></type>
        <definition>IQueryPredicate Cqrs.Repositories.Queries.QueryStrategy.QueryPredicate</definition>
        <argsstring></argsstring>
        <name>QueryPredicate</name>
        <briefdescription>
<para>The predicate that will be evaluated. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/63770fe1379f7878/Framework/Cqrs/Repositories/Queries/QueryStrategy.cs" line="25" column="1" bodyfile="/opt/buildAgent/work/63770fe1379f7878/Framework/Cqrs/Repositories/Queries/QueryStrategy.cs" bodystart="25" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classCqrs_1_1Repositories_1_1Queries_1_1QueryStrategy_ab1841119fbbb58337d55b014a8b260b4_1ab1841119fbbb58337d55b014a8b260b4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="interfaceCqrs_1_1Repositories_1_1Queries_1_1IQueryPredicate" kindref="compound">IQueryPredicate</ref></type>
        <definition>virtual IQueryPredicate Cqrs.Repositories.Queries.QueryStrategy.IsNotLogicallyDeleted</definition>
        <argsstring>()</argsstring>
        <name>IsNotLogicallyDeleted</name>
        <briefdescription>
<para>Filter to all items not logically deleted. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/63770fe1379f7878/Framework/Cqrs/Repositories/Queries/QueryStrategy.cs" line="32" column="1" bodyfile="/opt/buildAgent/work/63770fe1379f7878/Framework/Cqrs/Repositories/Queries/QueryStrategy.cs" bodystart="32" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Repositories_1_1Queries_1_1QueryStrategy_a7fda4380a88972201258bf695ccaf287_1a7fda4380a88972201258bf695ccaf287" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="interfaceCqrs_1_1Repositories_1_1Queries_1_1IQueryPredicate" kindref="compound">IQueryPredicate</ref></type>
        <definition>virtual IQueryPredicate Cqrs.Repositories.Queries.QueryStrategy.WithPermissionScopeAny&lt; TAuthenticationToken &gt;</definition>
        <argsstring>(TAuthenticationToken authenticationToken)</argsstring>
        <name>WithPermissionScopeAny&lt; TAuthenticationToken &gt;</name>
        <param>
          <type>TAuthenticationToken</type>
          <declname>authenticationToken</declname>
        </param>
        <briefdescription>
<para>Filter to all items with any permission scope. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/63770fe1379f7878/Framework/Cqrs/Repositories/Queries/QueryStrategy.cs" line="40" column="1" bodyfile="/opt/buildAgent/work/63770fe1379f7878/Framework/Cqrs/Repositories/Queries/QueryStrategy.cs" bodystart="40" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Repositories_1_1Queries_1_1QueryStrategy_ad8b52782f5410a399949417b10820780_1ad8b52782f5410a399949417b10820780" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="interfaceCqrs_1_1Repositories_1_1Queries_1_1IQueryPredicate" kindref="compound">IQueryPredicate</ref></type>
        <definition>virtual IQueryPredicate Cqrs.Repositories.Queries.QueryStrategy.WithPermissionScopeUser&lt; TAuthenticationToken &gt;</definition>
        <argsstring>(TAuthenticationToken authenticationToken)</argsstring>
        <name>WithPermissionScopeUser&lt; TAuthenticationToken &gt;</name>
        <param>
          <type>TAuthenticationToken</type>
          <declname>authenticationToken</declname>
        </param>
        <briefdescription>
<para>Filter to any items the authenticated user can view. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/63770fe1379f7878/Framework/Cqrs/Repositories/Queries/QueryStrategy.cs" line="48" column="1" bodyfile="/opt/buildAgent/work/63770fe1379f7878/Framework/Cqrs/Repositories/Queries/QueryStrategy.cs" bodystart="48" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Repositories_1_1Queries_1_1QueryStrategy_a822a0901976ceadb3f096326860e3006_1a822a0901976ceadb3f096326860e3006" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="interfaceCqrs_1_1Repositories_1_1Queries_1_1IQueryPredicate" kindref="compound">IQueryPredicate</ref></type>
        <definition>virtual IQueryPredicate Cqrs.Repositories.Queries.QueryStrategy.WithPermissionScopeCompany&lt; TAuthenticationToken &gt;</definition>
        <argsstring>(TAuthenticationToken authenticationToken)</argsstring>
        <name>WithPermissionScopeCompany&lt; TAuthenticationToken &gt;</name>
        <param>
          <type>TAuthenticationToken</type>
          <declname>authenticationToken</declname>
        </param>
        <briefdescription>
<para>Filter to any items the company the authenticated user can view. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/63770fe1379f7878/Framework/Cqrs/Repositories/Queries/QueryStrategy.cs" line="56" column="1" bodyfile="/opt/buildAgent/work/63770fe1379f7878/Framework/Cqrs/Repositories/Queries/QueryStrategy.cs" bodystart="56" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Repositories_1_1Queries_1_1QueryStrategy_ac21d8e8a04e218e1a7c283ad181e0e9f_1ac21d8e8a04e218e1a7c283ad181e0e9f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="interfaceCqrs_1_1Repositories_1_1Queries_1_1IQueryPredicate" kindref="compound">IQueryPredicate</ref></type>
        <definition>virtual IQueryPredicate Cqrs.Repositories.Queries.QueryStrategy.WithPermissionScopeCompanyAndUser&lt; TAuthenticationToken &gt;</definition>
        <argsstring>(TAuthenticationToken authenticationToken)</argsstring>
        <name>WithPermissionScopeCompanyAndUser&lt; TAuthenticationToken &gt;</name>
        <param>
          <type>TAuthenticationToken</type>
          <declname>authenticationToken</declname>
        </param>
        <briefdescription>
<para>Filter to any items the company the authenticated user can view and then filter the results to any items the authenticated user can see. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/63770fe1379f7878/Framework/Cqrs/Repositories/Queries/QueryStrategy.cs" line="64" column="1" bodyfile="/opt/buildAgent/work/63770fe1379f7878/Framework/Cqrs/Repositories/Queries/QueryStrategy.cs" bodystart="64" bodyend="67"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classCqrs_1_1Repositories_1_1Queries_1_1QueryStrategy_ad8d28df2576ea9669e4b02fd368ffab5_1ad8d28df2576ea9669e4b02fd368ffab5" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="interfaceCqrs_1_1Repositories_1_1Queries_1_1IQueryPredicate" kindref="compound">IQueryPredicate</ref></type>
        <definition>virtual IQueryPredicate Cqrs.Repositories.Queries.QueryStrategy.BuildQueryPredicate&lt; TData &gt;</definition>
        <argsstring>(Func&lt; TData &gt; func)</argsstring>
        <name>BuildQueryPredicate&lt; TData &gt;</name>
        <param>
          <type>Func&lt; TData &gt;</type>
          <declname>func</declname>
        </param>
        <briefdescription>
<para>Builds a <ref refid="interfaceCqrs_1_1Repositories_1_1Queries_1_1IQueryPredicate" kindref="compound">IQueryPredicate</ref> from the provided <emphasis>func</emphasis> . </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/63770fe1379f7878/Framework/Cqrs/Repositories/Queries/QueryStrategy.cs" line="72" column="1" bodyfile="/opt/buildAgent/work/63770fe1379f7878/Framework/Cqrs/Repositories/Queries/QueryStrategy.cs" bodystart="72" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Repositories_1_1Queries_1_1QueryStrategy_a00435830d1204507b1bf515263607be0_1a00435830d1204507b1bf515263607be0" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="interfaceCqrs_1_1Repositories_1_1Queries_1_1IQueryPredicate" kindref="compound">IQueryPredicate</ref></type>
        <definition>virtual IQueryPredicate Cqrs.Repositories.Queries.QueryStrategy.BuildQueryPredicate&lt; TParameter1, TData &gt;</definition>
        <argsstring>(Func&lt; TParameter1, TData &gt; func, TParameter1 parameter1)</argsstring>
        <name>BuildQueryPredicate&lt; TParameter1, TData &gt;</name>
        <param>
          <type>Func&lt; TParameter1, TData &gt;</type>
          <declname>func</declname>
        </param>
        <param>
          <type>TParameter1</type>
          <declname>parameter1</declname>
        </param>
        <briefdescription>
<para>Builds a <ref refid="interfaceCqrs_1_1Repositories_1_1Queries_1_1IQueryPredicate" kindref="compound">IQueryPredicate</ref> from the provided <emphasis>func</emphasis>  storing the provided <emphasis>parameter1</emphasis> . </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/63770fe1379f7878/Framework/Cqrs/Repositories/Queries/QueryStrategy.cs" line="87" column="1" bodyfile="/opt/buildAgent/work/63770fe1379f7878/Framework/Cqrs/Repositories/Queries/QueryStrategy.cs" bodystart="87" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Repositories_1_1Queries_1_1QueryStrategy_af8d1066419789fe942ebc167cd76ddfb_1af8d1066419789fe942ebc167cd76ddfb" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="interfaceCqrs_1_1Repositories_1_1Queries_1_1IQueryPredicate" kindref="compound">IQueryPredicate</ref></type>
        <definition>virtual IQueryPredicate Cqrs.Repositories.Queries.QueryStrategy.BuildQueryPredicate&lt; TParameter1, TParameter2, TData &gt;</definition>
        <argsstring>(Func&lt; TParameter1, TParameter2, TData &gt; func, TParameter1 parameter1, TParameter2 parameter2)</argsstring>
        <name>BuildQueryPredicate&lt; TParameter1, TParameter2, TData &gt;</name>
        <param>
          <type>Func&lt; TParameter1, TParameter2, TData &gt;</type>
          <declname>func</declname>
        </param>
        <param>
          <type>TParameter1</type>
          <declname>parameter1</declname>
        </param>
        <param>
          <type>TParameter2</type>
          <declname>parameter2</declname>
        </param>
        <briefdescription>
<para>Builds a <ref refid="interfaceCqrs_1_1Repositories_1_1Queries_1_1IQueryPredicate" kindref="compound">IQueryPredicate</ref> from the provided <emphasis>func</emphasis>  storing the provided <emphasis>parameter1</emphasis>  and <emphasis>parameter2</emphasis> . </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/63770fe1379f7878/Framework/Cqrs/Repositories/Queries/QueryStrategy.cs" line="107" column="1" bodyfile="/opt/buildAgent/work/63770fe1379f7878/Framework/Cqrs/Repositories/Queries/QueryStrategy.cs" bodystart="107" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Repositories_1_1Queries_1_1QueryStrategy_a860b209d9e99d7de5302ef4e19d318f0_1a860b209d9e99d7de5302ef4e19d318f0" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="interfaceCqrs_1_1Repositories_1_1Queries_1_1IQueryPredicate" kindref="compound">IQueryPredicate</ref></type>
        <definition>virtual IQueryPredicate Cqrs.Repositories.Queries.QueryStrategy.And</definition>
        <argsstring>(IQueryPredicate queryPredicate)</argsstring>
        <name>And</name>
        <param>
          <type><ref refid="interfaceCqrs_1_1Repositories_1_1Queries_1_1IQueryPredicate" kindref="compound">IQueryPredicate</ref></type>
          <declname>queryPredicate</declname>
        </param>
        <briefdescription>
<para>Builds an <ref refid="interfaceCqrs_1_1Repositories_1_1Queries_1_1IAndQueryPredicate" kindref="compound">IAndQueryPredicate</ref> between <ref refid="classCqrs_1_1Repositories_1_1Queries_1_1QueryPredicate" kindref="compound">QueryPredicate</ref> and the provided <emphasis>queryPredicate</emphasis>  </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/63770fe1379f7878/Framework/Cqrs/Repositories/Queries/QueryStrategy.cs" line="141" column="1" bodyfile="/opt/buildAgent/work/63770fe1379f7878/Framework/Cqrs/Repositories/Queries/QueryStrategy.cs" bodystart="141" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Repositories_1_1Queries_1_1QueryStrategy_a96f4657370c8cd0d20465d2855ea2fd7_1a96f4657370c8cd0d20465d2855ea2fd7" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="interfaceCqrs_1_1Repositories_1_1Queries_1_1IQueryPredicate" kindref="compound">IQueryPredicate</ref></type>
        <definition>virtual IQueryPredicate Cqrs.Repositories.Queries.QueryStrategy.Or</definition>
        <argsstring>(IQueryPredicate queryPredicate)</argsstring>
        <name>Or</name>
        <param>
          <type><ref refid="interfaceCqrs_1_1Repositories_1_1Queries_1_1IQueryPredicate" kindref="compound">IQueryPredicate</ref></type>
          <declname>queryPredicate</declname>
        </param>
        <briefdescription>
<para>Builds an <ref refid="interfaceCqrs_1_1Repositories_1_1Queries_1_1IOrQueryPredicate" kindref="compound">IOrQueryPredicate</ref> between <ref refid="classCqrs_1_1Repositories_1_1Queries_1_1QueryPredicate" kindref="compound">QueryPredicate</ref> and the provided <emphasis>queryPredicate</emphasis>  </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/63770fe1379f7878/Framework/Cqrs/Repositories/Queries/QueryStrategy.cs" line="157" column="1" bodyfile="/opt/buildAgent/work/63770fe1379f7878/Framework/Cqrs/Repositories/Queries/QueryStrategy.cs" bodystart="157" bodyend="164"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A specification for a query to execute. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2324">
        <label>Cqrs.Repositories.Queries.QueryStrategy</label>
        <link refid="classCqrs_1_1Repositories_1_1Queries_1_1QueryStrategy"/>
        <childnode refid="2325" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2325">
        <label>IQueryStrategy</label>
        <link refid="interfaceCqrs_1_1Repositories_1_1Queries_1_1IQueryStrategy"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2326">
        <label>Cqrs.Repositories.Queries.QueryStrategy</label>
        <link refid="classCqrs_1_1Repositories_1_1Queries_1_1QueryStrategy"/>
        <childnode refid="2327" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2327">
        <label>IQueryStrategy</label>
        <link refid="interfaceCqrs_1_1Repositories_1_1Queries_1_1IQueryStrategy"/>
      </node>
    </collaborationgraph>
    <location file="/opt/buildAgent/work/63770fe1379f7878/Framework/Cqrs/Repositories/Queries/QueryStrategy.cs" line="19" column="1" bodyfile="/opt/buildAgent/work/63770fe1379f7878/Framework/Cqrs/Repositories/Queries/QueryStrategy.cs" bodystart="18" bodyend="165"/>
    <listofallmembers>
      <member refid="classCqrs_1_1Repositories_1_1Queries_1_1QueryStrategy_a860b209d9e99d7de5302ef4e19d318f0_1a860b209d9e99d7de5302ef4e19d318f0" prot="protected" virt="virtual"><scope>Cqrs::Repositories::Queries::QueryStrategy</scope><name>And</name></member>
      <member refid="classCqrs_1_1Repositories_1_1Queries_1_1QueryStrategy_ad8d28df2576ea9669e4b02fd368ffab5_1ad8d28df2576ea9669e4b02fd368ffab5" prot="protected" virt="virtual"><scope>Cqrs::Repositories::Queries::QueryStrategy</scope><name>BuildQueryPredicate&lt; TData &gt;</name></member>
      <member refid="classCqrs_1_1Repositories_1_1Queries_1_1QueryStrategy_a00435830d1204507b1bf515263607be0_1a00435830d1204507b1bf515263607be0" prot="protected" virt="virtual"><scope>Cqrs::Repositories::Queries::QueryStrategy</scope><name>BuildQueryPredicate&lt; TParameter1, TData &gt;</name></member>
      <member refid="classCqrs_1_1Repositories_1_1Queries_1_1QueryStrategy_af8d1066419789fe942ebc167cd76ddfb_1af8d1066419789fe942ebc167cd76ddfb" prot="protected" virt="virtual"><scope>Cqrs::Repositories::Queries::QueryStrategy</scope><name>BuildQueryPredicate&lt; TParameter1, TParameter2, TData &gt;</name></member>
      <member refid="classCqrs_1_1Repositories_1_1Queries_1_1QueryStrategy_ab1841119fbbb58337d55b014a8b260b4_1ab1841119fbbb58337d55b014a8b260b4" prot="public" virt="virtual"><scope>Cqrs::Repositories::Queries::QueryStrategy</scope><name>IsNotLogicallyDeleted</name></member>
      <member refid="classCqrs_1_1Repositories_1_1Queries_1_1QueryStrategy_a96f4657370c8cd0d20465d2855ea2fd7_1a96f4657370c8cd0d20465d2855ea2fd7" prot="protected" virt="virtual"><scope>Cqrs::Repositories::Queries::QueryStrategy</scope><name>Or</name></member>
      <member refid="classCqrs_1_1Repositories_1_1Queries_1_1QueryStrategy_a45d9ad6895a7e8c404ea64abab5242ec_1a45d9ad6895a7e8c404ea64abab5242ec" prot="public" virt="non-virtual"><scope>Cqrs::Repositories::Queries::QueryStrategy</scope><name>QueryPredicate</name></member>
      <member refid="classCqrs_1_1Repositories_1_1Queries_1_1QueryStrategy_a7fda4380a88972201258bf695ccaf287_1a7fda4380a88972201258bf695ccaf287" prot="public" virt="virtual"><scope>Cqrs::Repositories::Queries::QueryStrategy</scope><name>WithPermissionScopeAny&lt; TAuthenticationToken &gt;</name></member>
      <member refid="classCqrs_1_1Repositories_1_1Queries_1_1QueryStrategy_a822a0901976ceadb3f096326860e3006_1a822a0901976ceadb3f096326860e3006" prot="public" virt="virtual"><scope>Cqrs::Repositories::Queries::QueryStrategy</scope><name>WithPermissionScopeCompany&lt; TAuthenticationToken &gt;</name></member>
      <member refid="classCqrs_1_1Repositories_1_1Queries_1_1QueryStrategy_ac21d8e8a04e218e1a7c283ad181e0e9f_1ac21d8e8a04e218e1a7c283ad181e0e9f" prot="public" virt="virtual"><scope>Cqrs::Repositories::Queries::QueryStrategy</scope><name>WithPermissionScopeCompanyAndUser&lt; TAuthenticationToken &gt;</name></member>
      <member refid="classCqrs_1_1Repositories_1_1Queries_1_1QueryStrategy_ad8b52782f5410a399949417b10820780_1ad8b52782f5410a399949417b10820780" prot="public" virt="virtual"><scope>Cqrs::Repositories::Queries::QueryStrategy</scope><name>WithPermissionScopeUser&lt; TAuthenticationToken &gt;</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
