### YamlMime:ManagedReference
items:
- uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1
  commentId: T:Cqrs.Azure.BlobStorage.BlobStorageStore`1
  id: BlobStorageStore`1
  parent: Cqrs.Azure.BlobStorage
  children:
  - Cqrs.Azure.BlobStorage.BlobStorageStore`1.#ctor(cdmdotnet.Logging.ILogger)
  - Cqrs.Azure.BlobStorage.BlobStorageStore`1.Add(`0)
  - Cqrs.Azure.BlobStorage.BlobStorageStore`1.AsyncSaveData``1(`0,System.Func{`0,Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob,``0},System.Func{`0,System.String})
  - Cqrs.Azure.BlobStorage.BlobStorageStore`1.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String,System.Boolean)
  - Cqrs.Azure.BlobStorage.BlobStorageStore`1.Destroy(`0)
  - Cqrs.Azure.BlobStorage.BlobStorageStore`1.ElementType
  - Cqrs.Azure.BlobStorage.BlobStorageStore`1.Expression
  - Cqrs.Azure.BlobStorage.BlobStorageStore`1.GetBlobReference(Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer,System.String)
  - Cqrs.Azure.BlobStorage.BlobStorageStore`1.GetByFolder(System.String)
  - Cqrs.Azure.BlobStorage.BlobStorageStore`1.GetByName(System.String)
  - Cqrs.Azure.BlobStorage.BlobStorageStore`1.GetEnumerator
  - Cqrs.Azure.BlobStorage.BlobStorageStore`1.OpenStreamsForReading(System.Func{Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob,System.Boolean},System.String,System.String)
  - Cqrs.Azure.BlobStorage.BlobStorageStore`1.Provider
  - Cqrs.Azure.BlobStorage.BlobStorageStore`1.RemoveAll
  - Cqrs.Azure.BlobStorage.BlobStorageStore`1.Update(`0)
  langs:
  - csharp
  - vb
  name: BlobStorageStore<TData>
  nameWithType: BlobStorageStore<TData>
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>
  type: Class
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.BlobStorage/BlobStorageStore.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: BlobStorageStore
    path: Framework/Azure/Cqrs.Azure.BlobStorage/BlobStorageStore.cs
    startLine: 20
  assemblies:
  - Cqrs.Azure.BlobStorage
  namespace: Cqrs.Azure.BlobStorage
  syntax:
    content: 'public class BlobStorageStore<TData> : StorageStore<TData, CloudBlobContainer>, IEnumerable<TData>, IEnumerable'
    typeParameters:
    - id: TData
    content.vb: >-
      Public Class BlobStorageStore(Of TData)
          Inherits StorageStore(Of TData, CloudBlobContainer)
          Implements IEnumerable(Of TData), IEnumerable
  inheritance:
  - System.Object
  - Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}
  derivedClasses:
  - Cqrs.Azure.BlobStorage.DataStores.BlobStorageDataStore`1
  - Cqrs.Azure.BlobStorage.Events.BlobStorageEventStore`1.RawBlobStorageEventStore
  implements:
  - System.Collections.Generic.IEnumerable{{TData}}
  - System.Collections.IEnumerable
  inheritedMembers:
  - Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.WritableCollection
  - Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.ReadableStorageAccount
  - Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Logger
  - Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.GetContainerName
  - Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.IsContainerPublic
  - Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.DefaultSettings
  - Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Initialise(Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory)
  - Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.GetEnumerator
  - Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.System#Collections#IEnumerable#GetEnumerator
  - Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Expression
  - Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.ElementType
  - Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Provider
  - Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Dispose
  - Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Add({TData})
  - Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Add(System.Collections.Generic.IEnumerable{{TData}})
  - Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Destroy({TData})
  - Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.RemoveAll
  - Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Update({TData})
  - Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String,System.Boolean)
  - Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.GetSafeSourceName(System.String)
  - Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.GetSafeSourceName(System.String,System.Boolean)
  - Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.AzureStorageRetryPolicy
  - Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Deserialise(System.IO.Stream)
  - Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Deserialise(System.String)
  - Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Serialise({TData})
  - Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.GetSerialisationSettings
  - Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.GetSerialiser
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: BlobStorageStore(Of TData)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData)
  name.vb: BlobStorageStore(Of TData)
- uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.#ctor(cdmdotnet.Logging.ILogger)
  commentId: M:Cqrs.Azure.BlobStorage.BlobStorageStore`1.#ctor(cdmdotnet.Logging.ILogger)
  id: '#ctor(cdmdotnet.Logging.ILogger)'
  parent: Cqrs.Azure.BlobStorage.BlobStorageStore`1
  langs:
  - csharp
  - vb
  name: BlobStorageStore(ILogger)
  nameWithType: BlobStorageStore<TData>.BlobStorageStore(ILogger)
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>.BlobStorageStore(cdmdotnet.Logging.ILogger)
  type: Constructor
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.BlobStorage/BlobStorageStore.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: .ctor
    path: Framework/Azure/Cqrs.Azure.BlobStorage/BlobStorageStore.cs
    startLine: 28
  assemblies:
  - Cqrs.Azure.BlobStorage
  namespace: Cqrs.Azure.BlobStorage
  summary: "\nInitializes a new instance of the <xref href=\"Cqrs.Azure.BlobStorage.BlobStorageStore%601\" data-throw-if-not-resolved=\"false\"></xref> class using the specified container.\n"
  example: []
  syntax:
    content: public BlobStorageStore(ILogger logger)
    parameters:
    - id: logger
      type: cdmdotnet.Logging.ILogger
    content.vb: Public Sub New(logger As ILogger)
  overload: Cqrs.Azure.BlobStorage.BlobStorageStore`1.#ctor*
  nameWithType.vb: BlobStorageStore(Of TData).BlobStorageStore(ILogger)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData).BlobStorageStore(cdmdotnet.Logging.ILogger)
- uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.GetEnumerator
  commentId: M:Cqrs.Azure.BlobStorage.BlobStorageStore`1.GetEnumerator
  id: GetEnumerator
  parent: Cqrs.Azure.BlobStorage.BlobStorageStore`1
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: BlobStorageStore<TData>.GetEnumerator()
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>.GetEnumerator()
  type: Method
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.BlobStorage/BlobStorageStore.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: GetEnumerator
    path: Framework/Azure/Cqrs.Azure.BlobStorage/BlobStorageStore.cs
    startLine: 41
  assemblies:
  - Cqrs.Azure.BlobStorage
  namespace: Cqrs.Azure.BlobStorage
  summary: "\nReturns an enumerator that iterates through the collection.\n"
  example: []
  syntax:
    content: public override IEnumerator<TData> GetEnumerator()
    return:
      type: System.Collections.Generic.IEnumerator{{TData}}
      description: "\nA <xref href=\"System.Collections.Generic.IEnumerator%601\" data-throw-if-not-resolved=\"false\"></xref> that can be used to iterate through the collection.\n"
    content.vb: Public Overrides Function GetEnumerator As IEnumerator(Of TData)
  overridden: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.GetEnumerator
  overload: Cqrs.Azure.BlobStorage.BlobStorageStore`1.GetEnumerator*
  nameWithType.vb: BlobStorageStore(Of TData).GetEnumerator()
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData).GetEnumerator()
- uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.Expression
  commentId: P:Cqrs.Azure.BlobStorage.BlobStorageStore`1.Expression
  id: Expression
  parent: Cqrs.Azure.BlobStorage.BlobStorageStore`1
  langs:
  - csharp
  - vb
  name: Expression
  nameWithType: BlobStorageStore<TData>.Expression
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>.Expression
  type: Property
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.BlobStorage/BlobStorageStore.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Expression
    path: Framework/Azure/Cqrs.Azure.BlobStorage/BlobStorageStore.cs
    startLine: 58
  assemblies:
  - Cqrs.Azure.BlobStorage
  namespace: Cqrs.Azure.BlobStorage
  summary: "\nGets the expression tree that is associated with the instance of <xref href=\"System.Linq.IQueryable\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public override Expression Expression { get; }
    parameters: []
    return:
      type: System.Linq.Expressions.Expression
      description: "\nThe <xref href=\"System.Linq.Expressions.Expression\" data-throw-if-not-resolved=\"false\"></xref> that is associated with this instance of <xref href=\"System.Linq.IQueryable\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    content.vb: Public Overrides ReadOnly Property Expression As Expression
  overridden: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Expression
  overload: Cqrs.Azure.BlobStorage.BlobStorageStore`1.Expression*
  nameWithType.vb: BlobStorageStore(Of TData).Expression
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
  fullName.vb: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData).Expression
- uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.ElementType
  commentId: P:Cqrs.Azure.BlobStorage.BlobStorageStore`1.ElementType
  id: ElementType
  parent: Cqrs.Azure.BlobStorage.BlobStorageStore`1
  langs:
  - csharp
  - vb
  name: ElementType
  nameWithType: BlobStorageStore<TData>.ElementType
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>.ElementType
  type: Property
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.BlobStorage/BlobStorageStore.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: ElementType
    path: Framework/Azure/Cqrs.Azure.BlobStorage/BlobStorageStore.cs
    startLine: 75
  assemblies:
  - Cqrs.Azure.BlobStorage
  namespace: Cqrs.Azure.BlobStorage
  summary: "\nGets the type of the element(s) that are returned when the expression tree associated with this instance of <xref href=\"System.Linq.IQueryable\" data-throw-if-not-resolved=\"false\"></xref> is executed.\n"
  example: []
  syntax:
    content: public override Type ElementType { get; }
    parameters: []
    return:
      type: System.Type
      description: "\nA <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> that represents the type of the element(s) that are returned when the expression tree associated with this object is executed.\n"
    content.vb: Public Overrides ReadOnly Property ElementType As Type
  overridden: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.ElementType
  overload: Cqrs.Azure.BlobStorage.BlobStorageStore`1.ElementType*
  nameWithType.vb: BlobStorageStore(Of TData).ElementType
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
  fullName.vb: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData).ElementType
- uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.Provider
  commentId: P:Cqrs.Azure.BlobStorage.BlobStorageStore`1.Provider
  id: Provider
  parent: Cqrs.Azure.BlobStorage.BlobStorageStore`1
  langs:
  - csharp
  - vb
  name: Provider
  nameWithType: BlobStorageStore<TData>.Provider
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>.Provider
  type: Property
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.BlobStorage/BlobStorageStore.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Provider
    path: Framework/Azure/Cqrs.Azure.BlobStorage/BlobStorageStore.cs
    startLine: 92
  assemblies:
  - Cqrs.Azure.BlobStorage
  namespace: Cqrs.Azure.BlobStorage
  summary: "\nGets the query provider that is associated with this data source.\n"
  example: []
  syntax:
    content: public override IQueryProvider Provider { get; }
    parameters: []
    return:
      type: System.Linq.IQueryProvider
      description: "\nThe <xref href=\"System.Linq.IQueryProvider\" data-throw-if-not-resolved=\"false\"></xref> that is associated with this data source.\n"
    content.vb: Public Overrides ReadOnly Property Provider As IQueryProvider
  overridden: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Provider
  overload: Cqrs.Azure.BlobStorage.BlobStorageStore`1.Provider*
  nameWithType.vb: BlobStorageStore(Of TData).Provider
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
  fullName.vb: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData).Provider
- uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.AsyncSaveData``1(`0,System.Func{`0,Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob,``0},System.Func{`0,System.String})
  commentId: M:Cqrs.Azure.BlobStorage.BlobStorageStore`1.AsyncSaveData``1(`0,System.Func{`0,Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob,``0},System.Func{`0,System.String})
  id: AsyncSaveData``1(`0,System.Func{`0,Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob,``0},System.Func{`0,System.String})
  parent: Cqrs.Azure.BlobStorage.BlobStorageStore`1
  langs:
  - csharp
  - vb
  name: AsyncSaveData<TResult>(TData, Func<TData, CloudBlockBlob, TResult>, Func<TData, String>)
  nameWithType: BlobStorageStore<TData>.AsyncSaveData<TResult>(TData, Func<TData, CloudBlockBlob, TResult>, Func<TData, String>)
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>.AsyncSaveData<TResult>(TData, System.Func<TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob, TResult>, System.Func<TData, System.String>)
  type: Method
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.BlobStorage/BlobStorageStore.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: AsyncSaveData
    path: Framework/Azure/Cqrs.Azure.BlobStorage/BlobStorageStore.cs
    startLine: 103
  assemblies:
  - Cqrs.Azure.BlobStorage
  namespace: Cqrs.Azure.BlobStorage
  syntax:
    content: protected virtual void AsyncSaveData<TResult>(TData data, Func<TData, CloudBlockBlob, TResult> function, Func<TData, string> customFilenameFunction = null)
    parameters:
    - id: data
      type: '{TData}'
    - id: function
      type: System.Func{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob,{TResult}}
    - id: customFilenameFunction
      type: System.Func{{TData},System.String}
    typeParameters:
    - id: TResult
    content.vb: Protected Overridable Sub AsyncSaveData(Of TResult)(data As TData, function As Func(Of TData, CloudBlockBlob, TResult), customFilenameFunction As Func(Of TData, String) = Nothing)
  overload: Cqrs.Azure.BlobStorage.BlobStorageStore`1.AsyncSaveData*
  nameWithType.vb: BlobStorageStore(Of TData).AsyncSaveData(Of TResult)(TData, Func(Of TData, CloudBlockBlob, TResult), Func(Of TData, String))
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData).AsyncSaveData(Of TResult)(TData, System.Func(Of TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob, TResult), System.Func(Of TData, System.String))
  name.vb: AsyncSaveData(Of TResult)(TData, Func(Of TData, CloudBlockBlob, TResult), Func(Of TData, String))
- uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.Add(`0)
  commentId: M:Cqrs.Azure.BlobStorage.BlobStorageStore`1.Add(`0)
  id: Add(`0)
  parent: Cqrs.Azure.BlobStorage.BlobStorageStore`1
  langs:
  - csharp
  - vb
  name: Add(TData)
  nameWithType: BlobStorageStore<TData>.Add(TData)
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>.Add(TData)
  type: Method
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.BlobStorage/BlobStorageStore.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Add
    path: Framework/Azure/Cqrs.Azure.BlobStorage/BlobStorageStore.cs
    startLine: 139
  assemblies:
  - Cqrs.Azure.BlobStorage
  namespace: Cqrs.Azure.BlobStorage
  syntax:
    content: public override void Add(TData data)
    parameters:
    - id: data
      type: '{TData}'
    content.vb: Public Overrides Sub Add(data As TData)
  overridden: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Add({TData})
  overload: Cqrs.Azure.BlobStorage.BlobStorageStore`1.Add*
  nameWithType.vb: BlobStorageStore(Of TData).Add(TData)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData).Add(TData)
- uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.Destroy(`0)
  commentId: M:Cqrs.Azure.BlobStorage.BlobStorageStore`1.Destroy(`0)
  id: Destroy(`0)
  parent: Cqrs.Azure.BlobStorage.BlobStorageStore`1
  langs:
  - csharp
  - vb
  name: Destroy(TData)
  nameWithType: BlobStorageStore<TData>.Destroy(TData)
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>.Destroy(TData)
  type: Method
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.BlobStorage/BlobStorageStore.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Destroy
    path: Framework/Azure/Cqrs.Azure.BlobStorage/BlobStorageStore.cs
    startLine: 162
  assemblies:
  - Cqrs.Azure.BlobStorage
  namespace: Cqrs.Azure.BlobStorage
  syntax:
    content: public override void Destroy(TData data)
    parameters:
    - id: data
      type: '{TData}'
    content.vb: Public Overrides Sub Destroy(data As TData)
  overridden: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Destroy({TData})
  overload: Cqrs.Azure.BlobStorage.BlobStorageStore`1.Destroy*
  nameWithType.vb: BlobStorageStore(Of TData).Destroy(TData)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData).Destroy(TData)
- uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.RemoveAll
  commentId: M:Cqrs.Azure.BlobStorage.BlobStorageStore`1.RemoveAll
  id: RemoveAll
  parent: Cqrs.Azure.BlobStorage.BlobStorageStore`1
  langs:
  - csharp
  - vb
  name: RemoveAll()
  nameWithType: BlobStorageStore<TData>.RemoveAll()
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>.RemoveAll()
  type: Method
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.BlobStorage/BlobStorageStore.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: RemoveAll
    path: Framework/Azure/Cqrs.Azure.BlobStorage/BlobStorageStore.cs
    startLine: 182
  assemblies:
  - Cqrs.Azure.BlobStorage
  namespace: Cqrs.Azure.BlobStorage
  syntax:
    content: public override void RemoveAll()
    content.vb: Public Overrides Sub RemoveAll
  overridden: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.RemoveAll
  overload: Cqrs.Azure.BlobStorage.BlobStorageStore`1.RemoveAll*
  nameWithType.vb: BlobStorageStore(Of TData).RemoveAll()
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData).RemoveAll()
- uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.Update(`0)
  commentId: M:Cqrs.Azure.BlobStorage.BlobStorageStore`1.Update(`0)
  id: Update(`0)
  parent: Cqrs.Azure.BlobStorage.BlobStorageStore`1
  langs:
  - csharp
  - vb
  name: Update(TData)
  nameWithType: BlobStorageStore<TData>.Update(TData)
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>.Update(TData)
  type: Method
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.BlobStorage/BlobStorageStore.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Update
    path: Framework/Azure/Cqrs.Azure.BlobStorage/BlobStorageStore.cs
    startLine: 188
  assemblies:
  - Cqrs.Azure.BlobStorage
  namespace: Cqrs.Azure.BlobStorage
  syntax:
    content: public override void Update(TData data)
    parameters:
    - id: data
      type: '{TData}'
    content.vb: Public Overrides Sub Update(data As TData)
  overridden: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Update({TData})
  overload: Cqrs.Azure.BlobStorage.BlobStorageStore`1.Update*
  nameWithType.vb: BlobStorageStore(Of TData).Update(TData)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData).Update(TData)
- uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String,System.Boolean)
  commentId: M:Cqrs.Azure.BlobStorage.BlobStorageStore`1.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String,System.Boolean)
  id: CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String,System.Boolean)
  parent: Cqrs.Azure.BlobStorage.BlobStorageStore`1
  langs:
  - csharp
  - vb
  name: CreateSource(CloudStorageAccount, String, Boolean)
  nameWithType: BlobStorageStore<TData>.CreateSource(CloudStorageAccount, String, Boolean)
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount, System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.BlobStorage/BlobStorageStore.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: CreateSource
    path: Framework/Azure/Cqrs.Azure.BlobStorage/BlobStorageStore.cs
    startLine: 201
  assemblies:
  - Cqrs.Azure.BlobStorage
  namespace: Cqrs.Azure.BlobStorage
  summary: "\nCreates a <xref href=\"Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer\" data-throw-if-not-resolved=\"false\"></xref> with the specified name <span class=\"paramref\">containerName</span> if it doesn&apos;t already exist.\n"
  example: []
  syntax:
    content: protected override CloudBlobContainer CreateSource(CloudStorageAccount storageAccount, string containerName, bool isPublic = true)
    parameters:
    - id: storageAccount
      type: Microsoft.WindowsAzure.Storage.CloudStorageAccount
      description: The storage account to create the <xref href="Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer" data-throw-if-not-resolved="false"></xref> is
    - id: containerName
      type: System.String
      description: The name of the <xref href="Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer" data-throw-if-not-resolved="false"></xref>.
    - id: isPublic
      type: System.Boolean
      description: Whether or not this <xref href="Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer" data-throw-if-not-resolved="false"></xref> is publicly accessible.
    return:
      type: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
    content.vb: Protected Overrides Function CreateSource(storageAccount As CloudStorageAccount, containerName As String, isPublic As Boolean = True) As CloudBlobContainer
  overridden: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String,System.Boolean)
  overload: Cqrs.Azure.BlobStorage.BlobStorageStore`1.CreateSource*
  nameWithType.vb: BlobStorageStore(Of TData).CreateSource(CloudStorageAccount, String, Boolean)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData).CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount, System.String, System.Boolean)
- uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.OpenStreamsForReading(System.Func{Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob,System.Boolean},System.String,System.String)
  commentId: M:Cqrs.Azure.BlobStorage.BlobStorageStore`1.OpenStreamsForReading(System.Func{Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob,System.Boolean},System.String,System.String)
  id: OpenStreamsForReading(System.Func{Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob,System.Boolean},System.String,System.String)
  parent: Cqrs.Azure.BlobStorage.BlobStorageStore`1
  langs:
  - csharp
  - vb
  name: OpenStreamsForReading(Func<CloudBlockBlob, Boolean>, String, String)
  nameWithType: BlobStorageStore<TData>.OpenStreamsForReading(Func<CloudBlockBlob, Boolean>, String, String)
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>.OpenStreamsForReading(System.Func<Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob, System.Boolean>, System.String, System.String)
  type: Method
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.BlobStorage/BlobStorageStore.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: OpenStreamsForReading
    path: Framework/Azure/Cqrs.Azure.BlobStorage/BlobStorageStore.cs
    startLine: 227
  assemblies:
  - Cqrs.Azure.BlobStorage
  namespace: Cqrs.Azure.BlobStorage
  summary: "\nOpens stream for reading from a block blob.\n"
  example: []
  syntax:
    content: protected virtual IEnumerable<Stream> OpenStreamsForReading(Func<CloudBlockBlob, bool> predicate = null, string blobPrefix = null, string folderName = null)
    parameters:
    - id: predicate
      type: System.Func{Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob,System.Boolean}
    - id: blobPrefix
      type: System.String
    - id: folderName
      type: System.String
    return:
      type: System.Collections.Generic.IEnumerable{System.IO.Stream}
    content.vb: Protected Overridable Function OpenStreamsForReading(predicate As Func(Of CloudBlockBlob, Boolean) = Nothing, blobPrefix As String = Nothing, folderName As String = Nothing) As IEnumerable(Of Stream)
  overload: Cqrs.Azure.BlobStorage.BlobStorageStore`1.OpenStreamsForReading*
  nameWithType.vb: BlobStorageStore(Of TData).OpenStreamsForReading(Func(Of CloudBlockBlob, Boolean), String, String)
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData).OpenStreamsForReading(System.Func(Of Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob, System.Boolean), System.String, System.String)
  name.vb: OpenStreamsForReading(Func(Of CloudBlockBlob, Boolean), String, String)
- uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.GetBlobReference(Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer,System.String)
  commentId: M:Cqrs.Azure.BlobStorage.BlobStorageStore`1.GetBlobReference(Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer,System.String)
  id: GetBlobReference(Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer,System.String)
  parent: Cqrs.Azure.BlobStorage.BlobStorageStore`1
  langs:
  - csharp
  - vb
  name: GetBlobReference(CloudBlobContainer, String)
  nameWithType: BlobStorageStore<TData>.GetBlobReference(CloudBlobContainer, String)
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>.GetBlobReference(Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer, System.String)
  type: Method
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.BlobStorage/BlobStorageStore.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: GetBlobReference
    path: Framework/Azure/Cqrs.Azure.BlobStorage/BlobStorageStore.cs
    startLine: 253
  assemblies:
  - Cqrs.Azure.BlobStorage
  namespace: Cqrs.Azure.BlobStorage
  summary: "\nGets a reference to a block blob in the container.\n"
  example: []
  syntax:
    content: protected virtual CloudBlockBlob GetBlobReference(CloudBlobContainer container, string blobName)
    parameters:
    - id: container
      type: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
      description: The container to get the reference from
    - id: blobName
      type: System.String
      description: The name of the blob.
    return:
      type: Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob
      description: A reference to a block blob.
    content.vb: Protected Overridable Function GetBlobReference(container As CloudBlobContainer, blobName As String) As CloudBlockBlob
  overload: Cqrs.Azure.BlobStorage.BlobStorageStore`1.GetBlobReference*
  nameWithType.vb: BlobStorageStore(Of TData).GetBlobReference(CloudBlobContainer, String)
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData).GetBlobReference(Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer, System.String)
- uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.GetByName(System.String)
  commentId: M:Cqrs.Azure.BlobStorage.BlobStorageStore`1.GetByName(System.String)
  id: GetByName(System.String)
  parent: Cqrs.Azure.BlobStorage.BlobStorageStore`1
  langs:
  - csharp
  - vb
  name: GetByName(String)
  nameWithType: BlobStorageStore<TData>.GetByName(String)
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>.GetByName(System.String)
  type: Method
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.BlobStorage/BlobStorageStore.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: GetByName
    path: Framework/Azure/Cqrs.Azure.BlobStorage/BlobStorageStore.cs
    startLine: 258
  assemblies:
  - Cqrs.Azure.BlobStorage
  namespace: Cqrs.Azure.BlobStorage
  syntax:
    content: public virtual TData GetByName(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: '{TData}'
    content.vb: Public Overridable Function GetByName(name As String) As TData
  overload: Cqrs.Azure.BlobStorage.BlobStorageStore`1.GetByName*
  nameWithType.vb: BlobStorageStore(Of TData).GetByName(String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData).GetByName(System.String)
- uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.GetByFolder(System.String)
  commentId: M:Cqrs.Azure.BlobStorage.BlobStorageStore`1.GetByFolder(System.String)
  id: GetByFolder(System.String)
  parent: Cqrs.Azure.BlobStorage.BlobStorageStore`1
  langs:
  - csharp
  - vb
  name: GetByFolder(String)
  nameWithType: BlobStorageStore<TData>.GetByFolder(String)
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>.GetByFolder(System.String)
  type: Method
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.BlobStorage/BlobStorageStore.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: GetByFolder
    path: Framework/Azure/Cqrs.Azure.BlobStorage/BlobStorageStore.cs
    startLine: 270
  assemblies:
  - Cqrs.Azure.BlobStorage
  namespace: Cqrs.Azure.BlobStorage
  syntax:
    content: public virtual IEnumerable<TData> GetByFolder(string folderName)
    parameters:
    - id: folderName
      type: System.String
    return:
      type: System.Collections.Generic.IEnumerable{{TData}}
    content.vb: Public Overridable Function GetByFolder(folderName As String) As IEnumerable(Of TData)
  overload: Cqrs.Azure.BlobStorage.BlobStorageStore`1.GetByFolder*
  nameWithType.vb: BlobStorageStore(Of TData).GetByFolder(String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData).GetByFolder(System.String)
references:
- uid: Cqrs.Azure.BlobStorage
  commentId: N:Cqrs.Azure.BlobStorage
  isExternal: false
  name: Cqrs.Azure.BlobStorage
  nameWithType: Cqrs.Azure.BlobStorage
  fullName: Cqrs.Azure.BlobStorage
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}
  commentId: T:Cqrs.Azure.BlobStorage.StorageStore{`0,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}
  parent: Cqrs.Azure.BlobStorage
  definition: Cqrs.Azure.BlobStorage.StorageStore`2
  name: StorageStore<TData, CloudBlobContainer>
  nameWithType: StorageStore<TData, CloudBlobContainer>
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>
  nameWithType.vb: StorageStore(Of TData, CloudBlobContainer)
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer)
  name.vb: StorageStore(Of TData, CloudBlobContainer)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2
    name: StorageStore
    nameWithType: StorageStore
    fullName: Cqrs.Azure.BlobStorage.StorageStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
    name: CloudBlobContainer
    nameWithType: CloudBlobContainer
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2
    name: StorageStore
    nameWithType: StorageStore
    fullName: Cqrs.Azure.BlobStorage.StorageStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
    name: CloudBlobContainer
    nameWithType: CloudBlobContainer
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{{TData}}
  commentId: T:System.Collections.Generic.IEnumerable{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<TData>
  nameWithType: IEnumerable<TData>
  fullName: System.Collections.Generic.IEnumerable<TData>
  nameWithType.vb: IEnumerable(Of TData)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TData)
  name.vb: IEnumerable(Of TData)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.WritableCollection
  commentId: P:Cqrs.Azure.BlobStorage.StorageStore{`0,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.WritableCollection
  parent: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.WritableCollection
  name: WritableCollection
  nameWithType: StorageStore<TData, CloudBlobContainer>.WritableCollection
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.WritableCollection
  nameWithType.vb: StorageStore(Of TData, CloudBlobContainer).WritableCollection
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).WritableCollection
- uid: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.ReadableStorageAccount
  commentId: P:Cqrs.Azure.BlobStorage.StorageStore{`0,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.ReadableStorageAccount
  parent: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.ReadableStorageAccount
  name: ReadableStorageAccount
  nameWithType: StorageStore<TData, CloudBlobContainer>.ReadableStorageAccount
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.ReadableStorageAccount
  nameWithType.vb: StorageStore(Of TData, CloudBlobContainer).ReadableStorageAccount
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).ReadableStorageAccount
- uid: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Logger
  commentId: P:Cqrs.Azure.BlobStorage.StorageStore{`0,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Logger
  parent: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.Logger
  name: Logger
  nameWithType: StorageStore<TData, CloudBlobContainer>.Logger
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.Logger
  nameWithType.vb: StorageStore(Of TData, CloudBlobContainer).Logger
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).Logger
- uid: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.GetContainerName
  commentId: P:Cqrs.Azure.BlobStorage.StorageStore{`0,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.GetContainerName
  parent: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.GetContainerName
  name: GetContainerName
  nameWithType: StorageStore<TData, CloudBlobContainer>.GetContainerName
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.GetContainerName
  nameWithType.vb: StorageStore(Of TData, CloudBlobContainer).GetContainerName
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).GetContainerName
- uid: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.IsContainerPublic
  commentId: P:Cqrs.Azure.BlobStorage.StorageStore{`0,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.IsContainerPublic
  parent: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.IsContainerPublic
  name: IsContainerPublic
  nameWithType: StorageStore<TData, CloudBlobContainer>.IsContainerPublic
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.IsContainerPublic
  nameWithType.vb: StorageStore(Of TData, CloudBlobContainer).IsContainerPublic
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).IsContainerPublic
- uid: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.DefaultSettings
  commentId: P:Cqrs.Azure.BlobStorage.StorageStore{`0,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.DefaultSettings
  parent: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.DefaultSettings
  name: DefaultSettings
  nameWithType: StorageStore<TData, CloudBlobContainer>.DefaultSettings
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.DefaultSettings
  nameWithType.vb: StorageStore(Of TData, CloudBlobContainer).DefaultSettings
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).DefaultSettings
- uid: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Initialise(Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory)
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore{`0,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Initialise(Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory)
  parent: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.Initialise(Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory)
  name: Initialise(IStorageStoreConnectionStringFactory)
  nameWithType: StorageStore<TData, CloudBlobContainer>.Initialise(IStorageStoreConnectionStringFactory)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.Initialise(Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory)
  nameWithType.vb: StorageStore(Of TData, CloudBlobContainer).Initialise(IStorageStoreConnectionStringFactory)
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).Initialise(Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Initialise(Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory)
    name: Initialise
    nameWithType: StorageStore<TData, CloudBlobContainer>.Initialise
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.Initialise
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory
    name: IStorageStoreConnectionStringFactory
    nameWithType: IStorageStoreConnectionStringFactory
    fullName: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Initialise(Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory)
    name: Initialise
    nameWithType: StorageStore(Of TData, CloudBlobContainer).Initialise
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).Initialise
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory
    name: IStorageStoreConnectionStringFactory
    nameWithType: IStorageStoreConnectionStringFactory
    fullName: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.GetEnumerator
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore{`0,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.GetEnumerator
  parent: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.GetEnumerator
  name: GetEnumerator()
  nameWithType: StorageStore<TData, CloudBlobContainer>.GetEnumerator()
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.GetEnumerator()
  nameWithType.vb: StorageStore(Of TData, CloudBlobContainer).GetEnumerator()
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).GetEnumerator()
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetEnumerator
    name: GetEnumerator
    nameWithType: StorageStore<TData, CloudBlobContainer>.GetEnumerator
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetEnumerator
    name: GetEnumerator
    nameWithType: StorageStore(Of TData, CloudBlobContainer).GetEnumerator
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.System#Collections#IEnumerable#GetEnumerator
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore{`0,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.System#Collections#IEnumerable#GetEnumerator
  parent: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator()
  nameWithType: StorageStore<TData, CloudBlobContainer>.IEnumerable.GetEnumerator()
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.System.Collections.IEnumerable.GetEnumerator()
  nameWithType.vb: StorageStore(Of TData, CloudBlobContainer).System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.System#Collections#IEnumerable#GetEnumerator
    name: IEnumerable.GetEnumerator
    nameWithType: StorageStore<TData, CloudBlobContainer>.IEnumerable.GetEnumerator
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.System.Collections.IEnumerable.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.System#Collections#IEnumerable#GetEnumerator
    name: System.Collections.IEnumerable.GetEnumerator
    nameWithType: StorageStore(Of TData, CloudBlobContainer).System.Collections.IEnumerable.GetEnumerator
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).System.Collections.IEnumerable.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Expression
  commentId: P:Cqrs.Azure.BlobStorage.StorageStore{`0,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Expression
  parent: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.Expression
  name: Expression
  nameWithType: StorageStore<TData, CloudBlobContainer>.Expression
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.Expression
  nameWithType.vb: StorageStore(Of TData, CloudBlobContainer).Expression
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).Expression
- uid: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.ElementType
  commentId: P:Cqrs.Azure.BlobStorage.StorageStore{`0,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.ElementType
  parent: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.ElementType
  name: ElementType
  nameWithType: StorageStore<TData, CloudBlobContainer>.ElementType
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.ElementType
  nameWithType.vb: StorageStore(Of TData, CloudBlobContainer).ElementType
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).ElementType
- uid: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Provider
  commentId: P:Cqrs.Azure.BlobStorage.StorageStore{`0,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Provider
  parent: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.Provider
  name: Provider
  nameWithType: StorageStore<TData, CloudBlobContainer>.Provider
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.Provider
  nameWithType.vb: StorageStore(Of TData, CloudBlobContainer).Provider
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).Provider
- uid: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Dispose
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore{`0,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Dispose
  parent: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.Dispose
  name: Dispose()
  nameWithType: StorageStore<TData, CloudBlobContainer>.Dispose()
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.Dispose()
  nameWithType.vb: StorageStore(Of TData, CloudBlobContainer).Dispose()
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).Dispose()
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Dispose
    name: Dispose
    nameWithType: StorageStore<TData, CloudBlobContainer>.Dispose
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Dispose
    name: Dispose
    nameWithType: StorageStore(Of TData, CloudBlobContainer).Dispose
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Add({TData})
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore{`0,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Add(`0)
  parent: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.Add(`0)
  name: Add(TData)
  nameWithType: StorageStore<TData, CloudBlobContainer>.Add(TData)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.Add(TData)
  nameWithType.vb: StorageStore(Of TData, CloudBlobContainer).Add(TData)
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).Add(TData)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Add(`0)
    name: Add
    nameWithType: StorageStore<TData, CloudBlobContainer>.Add
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.Add
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Add(`0)
    name: Add
    nameWithType: StorageStore(Of TData, CloudBlobContainer).Add
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).Add
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Add(System.Collections.Generic.IEnumerable{{TData}})
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore{`0,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Add(System.Collections.Generic.IEnumerable{`0})
  parent: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.Add(System.Collections.Generic.IEnumerable{`0})
  name: Add(IEnumerable<TData>)
  nameWithType: StorageStore<TData, CloudBlobContainer>.Add(IEnumerable<TData>)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.Add(System.Collections.Generic.IEnumerable<TData>)
  nameWithType.vb: StorageStore(Of TData, CloudBlobContainer).Add(IEnumerable(Of TData))
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).Add(System.Collections.Generic.IEnumerable(Of TData))
  name.vb: Add(IEnumerable(Of TData))
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Add(System.Collections.Generic.IEnumerable{`0})
    name: Add
    nameWithType: StorageStore<TData, CloudBlobContainer>.Add
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Add(System.Collections.Generic.IEnumerable{`0})
    name: Add
    nameWithType: StorageStore(Of TData, CloudBlobContainer).Add
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Destroy({TData})
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore{`0,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Destroy(`0)
  parent: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.Destroy(`0)
  name: Destroy(TData)
  nameWithType: StorageStore<TData, CloudBlobContainer>.Destroy(TData)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.Destroy(TData)
  nameWithType.vb: StorageStore(Of TData, CloudBlobContainer).Destroy(TData)
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).Destroy(TData)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Destroy(`0)
    name: Destroy
    nameWithType: StorageStore<TData, CloudBlobContainer>.Destroy
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.Destroy
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Destroy(`0)
    name: Destroy
    nameWithType: StorageStore(Of TData, CloudBlobContainer).Destroy
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).Destroy
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.RemoveAll
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore{`0,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.RemoveAll
  parent: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.RemoveAll
  name: RemoveAll()
  nameWithType: StorageStore<TData, CloudBlobContainer>.RemoveAll()
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.RemoveAll()
  nameWithType.vb: StorageStore(Of TData, CloudBlobContainer).RemoveAll()
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).RemoveAll()
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.RemoveAll
    name: RemoveAll
    nameWithType: StorageStore<TData, CloudBlobContainer>.RemoveAll
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.RemoveAll
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.RemoveAll
    name: RemoveAll
    nameWithType: StorageStore(Of TData, CloudBlobContainer).RemoveAll
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).RemoveAll
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Update({TData})
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore{`0,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Update(`0)
  parent: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.Update(`0)
  name: Update(TData)
  nameWithType: StorageStore<TData, CloudBlobContainer>.Update(TData)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.Update(TData)
  nameWithType.vb: StorageStore(Of TData, CloudBlobContainer).Update(TData)
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).Update(TData)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Update(`0)
    name: Update
    nameWithType: StorageStore<TData, CloudBlobContainer>.Update
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.Update
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Update(`0)
    name: Update
    nameWithType: StorageStore(Of TData, CloudBlobContainer).Update
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).Update
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String,System.Boolean)
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore{`0,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String,System.Boolean)
  parent: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String,System.Boolean)
  name: CreateSource(CloudStorageAccount, String, Boolean)
  nameWithType: StorageStore<TData, CloudBlobContainer>.CreateSource(CloudStorageAccount, String, Boolean)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount, System.String, System.Boolean)
  nameWithType.vb: StorageStore(Of TData, CloudBlobContainer).CreateSource(CloudStorageAccount, String, Boolean)
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount, System.String, System.Boolean)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String,System.Boolean)
    name: CreateSource
    nameWithType: StorageStore<TData, CloudBlobContainer>.CreateSource
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.CreateSource
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.CloudStorageAccount
    name: CloudStorageAccount
    nameWithType: CloudStorageAccount
    fullName: Microsoft.WindowsAzure.Storage.CloudStorageAccount
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String,System.Boolean)
    name: CreateSource
    nameWithType: StorageStore(Of TData, CloudBlobContainer).CreateSource
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).CreateSource
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.CloudStorageAccount
    name: CloudStorageAccount
    nameWithType: CloudStorageAccount
    fullName: Microsoft.WindowsAzure.Storage.CloudStorageAccount
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.GetSafeSourceName(System.String)
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore{`0,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.GetSafeSourceName(System.String)
  parent: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.GetSafeSourceName(System.String)
  name: GetSafeSourceName(String)
  nameWithType: StorageStore<TData, CloudBlobContainer>.GetSafeSourceName(String)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.GetSafeSourceName(System.String)
  nameWithType.vb: StorageStore(Of TData, CloudBlobContainer).GetSafeSourceName(String)
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).GetSafeSourceName(System.String)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetSafeSourceName(System.String)
    name: GetSafeSourceName
    nameWithType: StorageStore<TData, CloudBlobContainer>.GetSafeSourceName
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.GetSafeSourceName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetSafeSourceName(System.String)
    name: GetSafeSourceName
    nameWithType: StorageStore(Of TData, CloudBlobContainer).GetSafeSourceName
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).GetSafeSourceName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.GetSafeSourceName(System.String,System.Boolean)
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore{`0,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.GetSafeSourceName(System.String,System.Boolean)
  parent: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.GetSafeSourceName(System.String,System.Boolean)
  name: GetSafeSourceName(String, Boolean)
  nameWithType: StorageStore<TData, CloudBlobContainer>.GetSafeSourceName(String, Boolean)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.GetSafeSourceName(System.String, System.Boolean)
  nameWithType.vb: StorageStore(Of TData, CloudBlobContainer).GetSafeSourceName(String, Boolean)
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).GetSafeSourceName(System.String, System.Boolean)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetSafeSourceName(System.String,System.Boolean)
    name: GetSafeSourceName
    nameWithType: StorageStore<TData, CloudBlobContainer>.GetSafeSourceName
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.GetSafeSourceName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetSafeSourceName(System.String,System.Boolean)
    name: GetSafeSourceName
    nameWithType: StorageStore(Of TData, CloudBlobContainer).GetSafeSourceName
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).GetSafeSourceName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.AzureStorageRetryPolicy
  commentId: P:Cqrs.Azure.BlobStorage.StorageStore{`0,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.AzureStorageRetryPolicy
  parent: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.AzureStorageRetryPolicy
  name: AzureStorageRetryPolicy
  nameWithType: StorageStore<TData, CloudBlobContainer>.AzureStorageRetryPolicy
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.AzureStorageRetryPolicy
  nameWithType.vb: StorageStore(Of TData, CloudBlobContainer).AzureStorageRetryPolicy
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).AzureStorageRetryPolicy
- uid: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Deserialise(System.IO.Stream)
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore{`0,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Deserialise(System.IO.Stream)
  parent: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.Deserialise(System.IO.Stream)
  name: Deserialise(Stream)
  nameWithType: StorageStore<TData, CloudBlobContainer>.Deserialise(Stream)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.Deserialise(System.IO.Stream)
  nameWithType.vb: StorageStore(Of TData, CloudBlobContainer).Deserialise(Stream)
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).Deserialise(System.IO.Stream)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Deserialise(System.IO.Stream)
    name: Deserialise
    nameWithType: StorageStore<TData, CloudBlobContainer>.Deserialise
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.Deserialise
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Deserialise(System.IO.Stream)
    name: Deserialise
    nameWithType: StorageStore(Of TData, CloudBlobContainer).Deserialise
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).Deserialise
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Deserialise(System.String)
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore{`0,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Deserialise(System.String)
  parent: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.Deserialise(System.String)
  name: Deserialise(String)
  nameWithType: StorageStore<TData, CloudBlobContainer>.Deserialise(String)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.Deserialise(System.String)
  nameWithType.vb: StorageStore(Of TData, CloudBlobContainer).Deserialise(String)
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).Deserialise(System.String)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Deserialise(System.String)
    name: Deserialise
    nameWithType: StorageStore<TData, CloudBlobContainer>.Deserialise
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.Deserialise
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Deserialise(System.String)
    name: Deserialise
    nameWithType: StorageStore(Of TData, CloudBlobContainer).Deserialise
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).Deserialise
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Serialise({TData})
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore{`0,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Serialise(`0)
  parent: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.Serialise(`0)
  name: Serialise(TData)
  nameWithType: StorageStore<TData, CloudBlobContainer>.Serialise(TData)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.Serialise(TData)
  nameWithType.vb: StorageStore(Of TData, CloudBlobContainer).Serialise(TData)
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).Serialise(TData)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Serialise(`0)
    name: Serialise
    nameWithType: StorageStore<TData, CloudBlobContainer>.Serialise
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.Serialise
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Serialise(`0)
    name: Serialise
    nameWithType: StorageStore(Of TData, CloudBlobContainer).Serialise
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).Serialise
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.GetSerialisationSettings
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore{`0,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.GetSerialisationSettings
  parent: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.GetSerialisationSettings
  name: GetSerialisationSettings()
  nameWithType: StorageStore<TData, CloudBlobContainer>.GetSerialisationSettings()
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.GetSerialisationSettings()
  nameWithType.vb: StorageStore(Of TData, CloudBlobContainer).GetSerialisationSettings()
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).GetSerialisationSettings()
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetSerialisationSettings
    name: GetSerialisationSettings
    nameWithType: StorageStore<TData, CloudBlobContainer>.GetSerialisationSettings
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.GetSerialisationSettings
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetSerialisationSettings
    name: GetSerialisationSettings
    nameWithType: StorageStore(Of TData, CloudBlobContainer).GetSerialisationSettings
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).GetSerialisationSettings
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.GetSerialiser
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore{`0,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.GetSerialiser
  parent: Cqrs.Azure.BlobStorage.StorageStore{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.GetSerialiser
  name: GetSerialiser()
  nameWithType: StorageStore<TData, CloudBlobContainer>.GetSerialiser()
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.GetSerialiser()
  nameWithType.vb: StorageStore(Of TData, CloudBlobContainer).GetSerialiser()
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).GetSerialiser()
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetSerialiser
    name: GetSerialiser
    nameWithType: StorageStore<TData, CloudBlobContainer>.GetSerialiser
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.GetSerialiser
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetSerialiser
    name: GetSerialiser
    nameWithType: StorageStore(Of TData, CloudBlobContainer).GetSerialiser
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).GetSerialiser
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Cqrs.Azure.BlobStorage.StorageStore`2
  commentId: T:Cqrs.Azure.BlobStorage.StorageStore`2
  isExternal: false
  name: StorageStore<TData, TSource>
  nameWithType: StorageStore<TData, TSource>
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>
  nameWithType.vb: StorageStore(Of TData, TSource)
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource)
  name.vb: StorageStore(Of TData, TSource)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2
    name: StorageStore
    nameWithType: StorageStore
    fullName: Cqrs.Azure.BlobStorage.StorageStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2
    name: StorageStore
    nameWithType: StorageStore
    fullName: Cqrs.Azure.BlobStorage.StorageStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: false
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.WritableCollection
  commentId: P:Cqrs.Azure.BlobStorage.StorageStore`2.WritableCollection
  isExternal: false
  name: WritableCollection
  nameWithType: StorageStore<TData, TSource>.WritableCollection
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.WritableCollection
  nameWithType.vb: StorageStore(Of TData, TSource).WritableCollection
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).WritableCollection
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.ReadableStorageAccount
  commentId: P:Cqrs.Azure.BlobStorage.StorageStore`2.ReadableStorageAccount
  isExternal: false
  name: ReadableStorageAccount
  nameWithType: StorageStore<TData, TSource>.ReadableStorageAccount
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.ReadableStorageAccount
  nameWithType.vb: StorageStore(Of TData, TSource).ReadableStorageAccount
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).ReadableStorageAccount
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.Logger
  commentId: P:Cqrs.Azure.BlobStorage.StorageStore`2.Logger
  isExternal: false
  name: Logger
  nameWithType: StorageStore<TData, TSource>.Logger
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.Logger
  nameWithType.vb: StorageStore(Of TData, TSource).Logger
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).Logger
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetContainerName
  commentId: P:Cqrs.Azure.BlobStorage.StorageStore`2.GetContainerName
  isExternal: false
  name: GetContainerName
  nameWithType: StorageStore<TData, TSource>.GetContainerName
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.GetContainerName
  nameWithType.vb: StorageStore(Of TData, TSource).GetContainerName
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).GetContainerName
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.IsContainerPublic
  commentId: P:Cqrs.Azure.BlobStorage.StorageStore`2.IsContainerPublic
  isExternal: false
  name: IsContainerPublic
  nameWithType: StorageStore<TData, TSource>.IsContainerPublic
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.IsContainerPublic
  nameWithType.vb: StorageStore(Of TData, TSource).IsContainerPublic
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).IsContainerPublic
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.DefaultSettings
  commentId: P:Cqrs.Azure.BlobStorage.StorageStore`2.DefaultSettings
  isExternal: false
  name: DefaultSettings
  nameWithType: StorageStore<TData, TSource>.DefaultSettings
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.DefaultSettings
  nameWithType.vb: StorageStore(Of TData, TSource).DefaultSettings
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).DefaultSettings
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.Initialise(Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory)
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore`2.Initialise(Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory)
  isExternal: false
  name: Initialise(IStorageStoreConnectionStringFactory)
  nameWithType: StorageStore<TData, TSource>.Initialise(IStorageStoreConnectionStringFactory)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.Initialise(Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory)
  nameWithType.vb: StorageStore(Of TData, TSource).Initialise(IStorageStoreConnectionStringFactory)
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).Initialise(Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Initialise(Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory)
    name: Initialise
    nameWithType: StorageStore<TData, TSource>.Initialise
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.Initialise
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory
    name: IStorageStoreConnectionStringFactory
    nameWithType: IStorageStoreConnectionStringFactory
    fullName: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Initialise(Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory)
    name: Initialise
    nameWithType: StorageStore(Of TData, TSource).Initialise
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).Initialise
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory
    name: IStorageStoreConnectionStringFactory
    nameWithType: IStorageStoreConnectionStringFactory
    fullName: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetEnumerator
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore`2.GetEnumerator
  isExternal: false
  name: GetEnumerator()
  nameWithType: StorageStore<TData, TSource>.GetEnumerator()
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.GetEnumerator()
  nameWithType.vb: StorageStore(Of TData, TSource).GetEnumerator()
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).GetEnumerator()
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetEnumerator
    name: GetEnumerator
    nameWithType: StorageStore<TData, TSource>.GetEnumerator
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetEnumerator
    name: GetEnumerator
    nameWithType: StorageStore(Of TData, TSource).GetEnumerator
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.System#Collections#IEnumerable#GetEnumerator
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore`2.System#Collections#IEnumerable#GetEnumerator
  isExternal: false
  name: IEnumerable.GetEnumerator()
  nameWithType: StorageStore<TData, TSource>.IEnumerable.GetEnumerator()
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.System.Collections.IEnumerable.GetEnumerator()
  nameWithType.vb: StorageStore(Of TData, TSource).System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.System#Collections#IEnumerable#GetEnumerator
    name: IEnumerable.GetEnumerator
    nameWithType: StorageStore<TData, TSource>.IEnumerable.GetEnumerator
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.System.Collections.IEnumerable.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.System#Collections#IEnumerable#GetEnumerator
    name: System.Collections.IEnumerable.GetEnumerator
    nameWithType: StorageStore(Of TData, TSource).System.Collections.IEnumerable.GetEnumerator
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).System.Collections.IEnumerable.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.Expression
  commentId: P:Cqrs.Azure.BlobStorage.StorageStore`2.Expression
  isExternal: false
  name: Expression
  nameWithType: StorageStore<TData, TSource>.Expression
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.Expression
  nameWithType.vb: StorageStore(Of TData, TSource).Expression
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).Expression
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.ElementType
  commentId: P:Cqrs.Azure.BlobStorage.StorageStore`2.ElementType
  isExternal: false
  name: ElementType
  nameWithType: StorageStore<TData, TSource>.ElementType
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.ElementType
  nameWithType.vb: StorageStore(Of TData, TSource).ElementType
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).ElementType
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.Provider
  commentId: P:Cqrs.Azure.BlobStorage.StorageStore`2.Provider
  isExternal: false
  name: Provider
  nameWithType: StorageStore<TData, TSource>.Provider
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.Provider
  nameWithType.vb: StorageStore(Of TData, TSource).Provider
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).Provider
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.Dispose
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore`2.Dispose
  isExternal: false
  name: Dispose()
  nameWithType: StorageStore<TData, TSource>.Dispose()
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.Dispose()
  nameWithType.vb: StorageStore(Of TData, TSource).Dispose()
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).Dispose()
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Dispose
    name: Dispose
    nameWithType: StorageStore<TData, TSource>.Dispose
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Dispose
    name: Dispose
    nameWithType: StorageStore(Of TData, TSource).Dispose
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.Add(`0)
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore`2.Add(`0)
  isExternal: false
  name: Add(TData)
  nameWithType: StorageStore<TData, TSource>.Add(TData)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.Add(TData)
  nameWithType.vb: StorageStore(Of TData, TSource).Add(TData)
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).Add(TData)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Add(`0)
    name: Add
    nameWithType: StorageStore<TData, TSource>.Add
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.Add
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Add(`0)
    name: Add
    nameWithType: StorageStore(Of TData, TSource).Add
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).Add
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.Add(System.Collections.Generic.IEnumerable{`0})
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore`2.Add(System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  name: Add(IEnumerable<TData>)
  nameWithType: StorageStore<TData, TSource>.Add(IEnumerable<TData>)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.Add(System.Collections.Generic.IEnumerable<TData>)
  nameWithType.vb: StorageStore(Of TData, TSource).Add(IEnumerable(Of TData))
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).Add(System.Collections.Generic.IEnumerable(Of TData))
  name.vb: Add(IEnumerable(Of TData))
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Add(System.Collections.Generic.IEnumerable{`0})
    name: Add
    nameWithType: StorageStore<TData, TSource>.Add
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Add(System.Collections.Generic.IEnumerable{`0})
    name: Add
    nameWithType: StorageStore(Of TData, TSource).Add
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.Destroy(`0)
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore`2.Destroy(`0)
  isExternal: false
  name: Destroy(TData)
  nameWithType: StorageStore<TData, TSource>.Destroy(TData)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.Destroy(TData)
  nameWithType.vb: StorageStore(Of TData, TSource).Destroy(TData)
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).Destroy(TData)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Destroy(`0)
    name: Destroy
    nameWithType: StorageStore<TData, TSource>.Destroy
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.Destroy
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Destroy(`0)
    name: Destroy
    nameWithType: StorageStore(Of TData, TSource).Destroy
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).Destroy
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.RemoveAll
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore`2.RemoveAll
  isExternal: false
  name: RemoveAll()
  nameWithType: StorageStore<TData, TSource>.RemoveAll()
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.RemoveAll()
  nameWithType.vb: StorageStore(Of TData, TSource).RemoveAll()
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).RemoveAll()
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.RemoveAll
    name: RemoveAll
    nameWithType: StorageStore<TData, TSource>.RemoveAll
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.RemoveAll
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.RemoveAll
    name: RemoveAll
    nameWithType: StorageStore(Of TData, TSource).RemoveAll
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).RemoveAll
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.Update(`0)
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore`2.Update(`0)
  isExternal: false
  name: Update(TData)
  nameWithType: StorageStore<TData, TSource>.Update(TData)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.Update(TData)
  nameWithType.vb: StorageStore(Of TData, TSource).Update(TData)
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).Update(TData)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Update(`0)
    name: Update
    nameWithType: StorageStore<TData, TSource>.Update
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.Update
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Update(`0)
    name: Update
    nameWithType: StorageStore(Of TData, TSource).Update
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).Update
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String,System.Boolean)
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore`2.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String,System.Boolean)
  isExternal: true
  name: CreateSource(CloudStorageAccount, String, Boolean)
  nameWithType: StorageStore<TData, TSource>.CreateSource(CloudStorageAccount, String, Boolean)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount, System.String, System.Boolean)
  nameWithType.vb: StorageStore(Of TData, TSource).CreateSource(CloudStorageAccount, String, Boolean)
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount, System.String, System.Boolean)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String,System.Boolean)
    name: CreateSource
    nameWithType: StorageStore<TData, TSource>.CreateSource
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.CreateSource
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.CloudStorageAccount
    name: CloudStorageAccount
    nameWithType: CloudStorageAccount
    fullName: Microsoft.WindowsAzure.Storage.CloudStorageAccount
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String,System.Boolean)
    name: CreateSource
    nameWithType: StorageStore(Of TData, TSource).CreateSource
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).CreateSource
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.CloudStorageAccount
    name: CloudStorageAccount
    nameWithType: CloudStorageAccount
    fullName: Microsoft.WindowsAzure.Storage.CloudStorageAccount
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetSafeSourceName(System.String)
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore`2.GetSafeSourceName(System.String)
  isExternal: true
  name: GetSafeSourceName(String)
  nameWithType: StorageStore<TData, TSource>.GetSafeSourceName(String)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.GetSafeSourceName(System.String)
  nameWithType.vb: StorageStore(Of TData, TSource).GetSafeSourceName(String)
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).GetSafeSourceName(System.String)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetSafeSourceName(System.String)
    name: GetSafeSourceName
    nameWithType: StorageStore<TData, TSource>.GetSafeSourceName
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.GetSafeSourceName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetSafeSourceName(System.String)
    name: GetSafeSourceName
    nameWithType: StorageStore(Of TData, TSource).GetSafeSourceName
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).GetSafeSourceName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetSafeSourceName(System.String,System.Boolean)
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore`2.GetSafeSourceName(System.String,System.Boolean)
  isExternal: true
  name: GetSafeSourceName(String, Boolean)
  nameWithType: StorageStore<TData, TSource>.GetSafeSourceName(String, Boolean)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.GetSafeSourceName(System.String, System.Boolean)
  nameWithType.vb: StorageStore(Of TData, TSource).GetSafeSourceName(String, Boolean)
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).GetSafeSourceName(System.String, System.Boolean)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetSafeSourceName(System.String,System.Boolean)
    name: GetSafeSourceName
    nameWithType: StorageStore<TData, TSource>.GetSafeSourceName
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.GetSafeSourceName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetSafeSourceName(System.String,System.Boolean)
    name: GetSafeSourceName
    nameWithType: StorageStore(Of TData, TSource).GetSafeSourceName
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).GetSafeSourceName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.AzureStorageRetryPolicy
  commentId: P:Cqrs.Azure.BlobStorage.StorageStore`2.AzureStorageRetryPolicy
  isExternal: false
  name: AzureStorageRetryPolicy
  nameWithType: StorageStore<TData, TSource>.AzureStorageRetryPolicy
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.AzureStorageRetryPolicy
  nameWithType.vb: StorageStore(Of TData, TSource).AzureStorageRetryPolicy
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).AzureStorageRetryPolicy
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.Deserialise(System.IO.Stream)
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore`2.Deserialise(System.IO.Stream)
  isExternal: true
  name: Deserialise(Stream)
  nameWithType: StorageStore<TData, TSource>.Deserialise(Stream)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.Deserialise(System.IO.Stream)
  nameWithType.vb: StorageStore(Of TData, TSource).Deserialise(Stream)
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).Deserialise(System.IO.Stream)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Deserialise(System.IO.Stream)
    name: Deserialise
    nameWithType: StorageStore<TData, TSource>.Deserialise
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.Deserialise
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Deserialise(System.IO.Stream)
    name: Deserialise
    nameWithType: StorageStore(Of TData, TSource).Deserialise
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).Deserialise
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.Deserialise(System.String)
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore`2.Deserialise(System.String)
  isExternal: true
  name: Deserialise(String)
  nameWithType: StorageStore<TData, TSource>.Deserialise(String)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.Deserialise(System.String)
  nameWithType.vb: StorageStore(Of TData, TSource).Deserialise(String)
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).Deserialise(System.String)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Deserialise(System.String)
    name: Deserialise
    nameWithType: StorageStore<TData, TSource>.Deserialise
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.Deserialise
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Deserialise(System.String)
    name: Deserialise
    nameWithType: StorageStore(Of TData, TSource).Deserialise
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).Deserialise
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.Serialise(`0)
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore`2.Serialise(`0)
  isExternal: false
  name: Serialise(TData)
  nameWithType: StorageStore<TData, TSource>.Serialise(TData)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.Serialise(TData)
  nameWithType.vb: StorageStore(Of TData, TSource).Serialise(TData)
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).Serialise(TData)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Serialise(`0)
    name: Serialise
    nameWithType: StorageStore<TData, TSource>.Serialise
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.Serialise
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Serialise(`0)
    name: Serialise
    nameWithType: StorageStore(Of TData, TSource).Serialise
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).Serialise
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetSerialisationSettings
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore`2.GetSerialisationSettings
  isExternal: false
  name: GetSerialisationSettings()
  nameWithType: StorageStore<TData, TSource>.GetSerialisationSettings()
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.GetSerialisationSettings()
  nameWithType.vb: StorageStore(Of TData, TSource).GetSerialisationSettings()
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).GetSerialisationSettings()
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetSerialisationSettings
    name: GetSerialisationSettings
    nameWithType: StorageStore<TData, TSource>.GetSerialisationSettings
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.GetSerialisationSettings
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetSerialisationSettings
    name: GetSerialisationSettings
    nameWithType: StorageStore(Of TData, TSource).GetSerialisationSettings
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).GetSerialisationSettings
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetSerialiser
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore`2.GetSerialiser
  isExternal: false
  name: GetSerialiser()
  nameWithType: StorageStore<TData, TSource>.GetSerialiser()
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.GetSerialiser()
  nameWithType.vb: StorageStore(Of TData, TSource).GetSerialiser()
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).GetSerialiser()
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetSerialiser
    name: GetSerialiser
    nameWithType: StorageStore<TData, TSource>.GetSerialiser
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.GetSerialiser
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetSerialiser
    name: GetSerialiser
    nameWithType: StorageStore(Of TData, TSource).GetSerialiser
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).GetSerialiser
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1
  commentId: T:Cqrs.Azure.BlobStorage.BlobStorageStore`1
  isExternal: false
  name: BlobStorageStore<TData>
  nameWithType: BlobStorageStore<TData>
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>
  nameWithType.vb: BlobStorageStore(Of TData)
  fullName.vb: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData)
  name.vb: BlobStorageStore(Of TData)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1
    name: BlobStorageStore
    nameWithType: BlobStorageStore
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1
    name: BlobStorageStore
    nameWithType: BlobStorageStore
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.#ctor*
  commentId: Overload:Cqrs.Azure.BlobStorage.BlobStorageStore`1.#ctor
  isExternal: false
  name: BlobStorageStore
  nameWithType: BlobStorageStore<TData>.BlobStorageStore
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>.BlobStorageStore
  nameWithType.vb: BlobStorageStore(Of TData).BlobStorageStore
  fullName.vb: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData).BlobStorageStore
- uid: cdmdotnet.Logging.ILogger
  commentId: T:cdmdotnet.Logging.ILogger
  parent: cdmdotnet.Logging
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: cdmdotnet.Logging.ILogger
- uid: cdmdotnet.Logging
  commentId: N:cdmdotnet.Logging
  isExternal: false
  name: cdmdotnet.Logging
  nameWithType: cdmdotnet.Logging
  fullName: cdmdotnet.Logging
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.GetEnumerator*
  commentId: Overload:Cqrs.Azure.BlobStorage.BlobStorageStore`1.GetEnumerator
  isExternal: false
  name: GetEnumerator
  nameWithType: BlobStorageStore<TData>.GetEnumerator
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>.GetEnumerator
  nameWithType.vb: BlobStorageStore(Of TData).GetEnumerator
  fullName.vb: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData).GetEnumerator
- uid: System.Collections.Generic.IEnumerator{{TData}}
  commentId: T:System.Collections.Generic.IEnumerator{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<TData>
  nameWithType: IEnumerator<TData>
  fullName: System.Collections.Generic.IEnumerator<TData>
  nameWithType.vb: IEnumerator(Of TData)
  fullName.vb: System.Collections.Generic.IEnumerator(Of TData)
  name.vb: IEnumerator(Of TData)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.IQueryable
  commentId: T:System.Linq.IQueryable
  parent: System.Linq
  isExternal: true
  name: IQueryable
  nameWithType: IQueryable
  fullName: System.Linq.IQueryable
- uid: System.Linq.Expressions.Expression
  commentId: T:System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: true
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.Expression*
  commentId: Overload:Cqrs.Azure.BlobStorage.BlobStorageStore`1.Expression
  isExternal: false
  name: Expression
  nameWithType: BlobStorageStore<TData>.Expression
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>.Expression
  nameWithType.vb: BlobStorageStore(Of TData).Expression
  fullName.vb: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData).Expression
- uid: System.Linq
  commentId: N:System.Linq
  isExternal: false
  name: System.Linq
  nameWithType: System.Linq
  fullName: System.Linq
- uid: System.Linq.Expressions
  commentId: N:System.Linq.Expressions
  isExternal: false
  name: System.Linq.Expressions
  nameWithType: System.Linq.Expressions
  fullName: System.Linq.Expressions
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.ElementType*
  commentId: Overload:Cqrs.Azure.BlobStorage.BlobStorageStore`1.ElementType
  isExternal: false
  name: ElementType
  nameWithType: BlobStorageStore<TData>.ElementType
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>.ElementType
  nameWithType.vb: BlobStorageStore(Of TData).ElementType
  fullName.vb: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData).ElementType
- uid: System.Linq.IQueryProvider
  commentId: T:System.Linq.IQueryProvider
  parent: System.Linq
  isExternal: true
  name: IQueryProvider
  nameWithType: IQueryProvider
  fullName: System.Linq.IQueryProvider
- uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.Provider*
  commentId: Overload:Cqrs.Azure.BlobStorage.BlobStorageStore`1.Provider
  isExternal: false
  name: Provider
  nameWithType: BlobStorageStore<TData>.Provider
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>.Provider
  nameWithType.vb: BlobStorageStore(Of TData).Provider
  fullName.vb: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData).Provider
- uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.AsyncSaveData*
  commentId: Overload:Cqrs.Azure.BlobStorage.BlobStorageStore`1.AsyncSaveData
  isExternal: false
  name: AsyncSaveData
  nameWithType: BlobStorageStore<TData>.AsyncSaveData
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>.AsyncSaveData
  nameWithType.vb: BlobStorageStore(Of TData).AsyncSaveData
  fullName.vb: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData).AsyncSaveData
- uid: '{TData}'
  commentId: '!:TData'
  definition: TData
  name: TData
  nameWithType: TData
  fullName: TData
- uid: System.Func{{TData},Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob,{TResult}}
  commentId: T:System.Func{`0,Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob,``0}
  parent: System
  definition: System.Func`3
  name: Func<TData, CloudBlockBlob, TResult>
  nameWithType: Func<TData, CloudBlockBlob, TResult>
  fullName: System.Func<TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob, TResult>
  nameWithType.vb: Func(Of TData, CloudBlockBlob, TResult)
  fullName.vb: System.Func(Of TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob, TResult)
  name.vb: Func(Of TData, CloudBlockBlob, TResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob
    name: CloudBlockBlob
    nameWithType: CloudBlockBlob
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob
    name: CloudBlockBlob
    nameWithType: CloudBlockBlob
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func{{TData},System.String}
  commentId: T:System.Func{`0,System.String}
  parent: System
  definition: System.Func`2
  name: Func<TData, String>
  nameWithType: Func<TData, String>
  fullName: System.Func<TData, System.String>
  nameWithType.vb: Func(Of TData, String)
  fullName.vb: System.Func(Of TData, System.String)
  name.vb: Func(Of TData, String)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TData
  isExternal: false
  name: TData
  nameWithType: TData
  fullName: TData
- uid: System.Func`3
  commentId: T:System.Func`3
  isExternal: true
  name: Func<T1, T2, TResult>
  nameWithType: Func<T1, T2, TResult>
  fullName: System.Func<T1, T2, TResult>
  nameWithType.vb: Func(Of T1, T2, TResult)
  fullName.vb: System.Func(Of T1, T2, TResult)
  name.vb: Func(Of T1, T2, TResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.Add*
  commentId: Overload:Cqrs.Azure.BlobStorage.BlobStorageStore`1.Add
  isExternal: false
  name: Add
  nameWithType: BlobStorageStore<TData>.Add
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>.Add
  nameWithType.vb: BlobStorageStore(Of TData).Add
  fullName.vb: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData).Add
- uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.Destroy*
  commentId: Overload:Cqrs.Azure.BlobStorage.BlobStorageStore`1.Destroy
  isExternal: false
  name: Destroy
  nameWithType: BlobStorageStore<TData>.Destroy
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>.Destroy
  nameWithType.vb: BlobStorageStore(Of TData).Destroy
  fullName.vb: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData).Destroy
- uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.RemoveAll*
  commentId: Overload:Cqrs.Azure.BlobStorage.BlobStorageStore`1.RemoveAll
  isExternal: false
  name: RemoveAll
  nameWithType: BlobStorageStore<TData>.RemoveAll
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>.RemoveAll
  nameWithType.vb: BlobStorageStore(Of TData).RemoveAll
  fullName.vb: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData).RemoveAll
- uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.Update*
  commentId: Overload:Cqrs.Azure.BlobStorage.BlobStorageStore`1.Update
  isExternal: false
  name: Update
  nameWithType: BlobStorageStore<TData>.Update
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>.Update
  nameWithType.vb: BlobStorageStore(Of TData).Update
  fullName.vb: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData).Update
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  commentId: T:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: true
  name: CloudBlobContainer
  nameWithType: CloudBlobContainer
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
- uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.CreateSource*
  commentId: Overload:Cqrs.Azure.BlobStorage.BlobStorageStore`1.CreateSource
  isExternal: false
  name: CreateSource
  nameWithType: BlobStorageStore<TData>.CreateSource
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>.CreateSource
  nameWithType.vb: BlobStorageStore(Of TData).CreateSource
  fullName.vb: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData).CreateSource
- uid: Microsoft.WindowsAzure.Storage.CloudStorageAccount
  commentId: T:Microsoft.WindowsAzure.Storage.CloudStorageAccount
  parent: Microsoft.WindowsAzure.Storage
  isExternal: true
  name: CloudStorageAccount
  nameWithType: CloudStorageAccount
  fullName: Microsoft.WindowsAzure.Storage.CloudStorageAccount
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.WindowsAzure.Storage.Blob
  commentId: N:Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.Blob
  nameWithType: Microsoft.WindowsAzure.Storage.Blob
  fullName: Microsoft.WindowsAzure.Storage.Blob
- uid: Microsoft.WindowsAzure.Storage
  commentId: N:Microsoft.WindowsAzure.Storage
  isExternal: false
  name: Microsoft.WindowsAzure.Storage
  nameWithType: Microsoft.WindowsAzure.Storage
  fullName: Microsoft.WindowsAzure.Storage
- uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.OpenStreamsForReading*
  commentId: Overload:Cqrs.Azure.BlobStorage.BlobStorageStore`1.OpenStreamsForReading
  isExternal: false
  name: OpenStreamsForReading
  nameWithType: BlobStorageStore<TData>.OpenStreamsForReading
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>.OpenStreamsForReading
  nameWithType.vb: BlobStorageStore(Of TData).OpenStreamsForReading
  fullName.vb: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData).OpenStreamsForReading
- uid: System.Func{Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob,System.Boolean}
  commentId: T:System.Func{Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob,System.Boolean}
  parent: System
  definition: System.Func`2
  name: Func<CloudBlockBlob, Boolean>
  nameWithType: Func<CloudBlockBlob, Boolean>
  fullName: System.Func<Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob, System.Boolean>
  nameWithType.vb: Func(Of CloudBlockBlob, Boolean)
  fullName.vb: System.Func(Of Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob, System.Boolean)
  name.vb: Func(Of CloudBlockBlob, Boolean)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob
    name: CloudBlockBlob
    nameWithType: CloudBlockBlob
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob
    name: CloudBlockBlob
    nameWithType: CloudBlockBlob
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.IO.Stream}
  commentId: T:System.Collections.Generic.IEnumerable{System.IO.Stream}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Stream>
  nameWithType: IEnumerable<Stream>
  fullName: System.Collections.Generic.IEnumerable<System.IO.Stream>
  nameWithType.vb: IEnumerable(Of Stream)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.IO.Stream)
  name.vb: IEnumerable(Of Stream)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.GetBlobReference*
  commentId: Overload:Cqrs.Azure.BlobStorage.BlobStorageStore`1.GetBlobReference
  isExternal: false
  name: GetBlobReference
  nameWithType: BlobStorageStore<TData>.GetBlobReference
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>.GetBlobReference
  nameWithType.vb: BlobStorageStore(Of TData).GetBlobReference
  fullName.vb: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData).GetBlobReference
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob
  commentId: T:Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: true
  name: CloudBlockBlob
  nameWithType: CloudBlockBlob
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob
- uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.GetByName*
  commentId: Overload:Cqrs.Azure.BlobStorage.BlobStorageStore`1.GetByName
  isExternal: false
  name: GetByName
  nameWithType: BlobStorageStore<TData>.GetByName
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>.GetByName
  nameWithType.vb: BlobStorageStore(Of TData).GetByName
  fullName.vb: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData).GetByName
- uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.GetByFolder*
  commentId: Overload:Cqrs.Azure.BlobStorage.BlobStorageStore`1.GetByFolder
  isExternal: false
  name: GetByFolder
  nameWithType: BlobStorageStore<TData>.GetByFolder
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>.GetByFolder
  nameWithType.vb: BlobStorageStore(Of TData).GetByFolder
  fullName.vb: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData).GetByFolder
