### YamlMime:ManagedReference
items:
- uid: Cqrs.Tests.Substitutes.TestSagaUnitOfWork
  commentId: T:Cqrs.Tests.Substitutes.TestSagaUnitOfWork
  id: TestSagaUnitOfWork
  parent: Cqrs.Tests.Substitutes
  children:
  - Cqrs.Tests.Substitutes.TestSagaUnitOfWork.Add``1(``0)
  - Cqrs.Tests.Substitutes.TestSagaUnitOfWork.Commit
  - Cqrs.Tests.Substitutes.TestSagaUnitOfWork.Cqrs#Domain#ISagaUnitOfWork{Cqrs#Authentication#ISingleSignOnToken}#Add``1(``0)
  - Cqrs.Tests.Substitutes.TestSagaUnitOfWork.Cqrs#Domain#ISagaUnitOfWork{Cqrs#Authentication#ISingleSignOnToken}#Get``1(System.Guid,System.Nullable{System.Int32})
  - Cqrs.Tests.Substitutes.TestSagaUnitOfWork.Get``1(System.Guid,System.Nullable{System.Int32})
  - Cqrs.Tests.Substitutes.TestSagaUnitOfWork.TestGuidSagasWithAddCountGetCountAndCommitCount
  - Cqrs.Tests.Substitutes.TestSagaUnitOfWork.TestSagasWithAddCountGetCountAndCommitCount
  langs:
  - csharp
  - vb
  name: TestSagaUnitOfWork
  nameWithType: TestSagaUnitOfWork
  fullName: Cqrs.Tests.Substitutes.TestSagaUnitOfWork
  type: Class
  source:
    remote:
      path: Framework/Cqrs.Tests/Substitutes/TestSagaUnitOfWork.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: TestSagaUnitOfWork
    path: Framework/Cqrs.Tests/Substitutes/TestSagaUnitOfWork.cs
    startLine: 8
  assemblies:
  - Cqrs.Tests
  namespace: Cqrs.Tests.Substitutes
  syntax:
    content: 'public class TestSagaUnitOfWork : ISagaUnitOfWork<ISingleSignOnToken>, ISagaUnitOfWork<Guid>'
    content.vb: >-
      Public Class TestSagaUnitOfWork

          Implements ISagaUnitOfWork(Of ISingleSignOnToken), ISagaUnitOfWork(Of Guid)
  inheritance:
  - System.Object
  implements:
  - Cqrs.Domain.ISagaUnitOfWork{Cqrs.Authentication.ISingleSignOnToken}
  - Cqrs.Domain.ISagaUnitOfWork{System.Guid}
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Cqrs.Tests.Substitutes.TestSagaUnitOfWork.TestGuidSagasWithAddCountGetCountAndCommitCount
  commentId: P:Cqrs.Tests.Substitutes.TestSagaUnitOfWork.TestGuidSagasWithAddCountGetCountAndCommitCount
  id: TestGuidSagasWithAddCountGetCountAndCommitCount
  parent: Cqrs.Tests.Substitutes.TestSagaUnitOfWork
  langs:
  - csharp
  - vb
  name: TestGuidSagasWithAddCountGetCountAndCommitCount
  nameWithType: TestSagaUnitOfWork.TestGuidSagasWithAddCountGetCountAndCommitCount
  fullName: Cqrs.Tests.Substitutes.TestSagaUnitOfWork.TestGuidSagasWithAddCountGetCountAndCommitCount
  type: Property
  source:
    remote:
      path: Framework/Cqrs.Tests/Substitutes/TestSagaUnitOfWork.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: TestGuidSagasWithAddCountGetCountAndCommitCount
    path: Framework/Cqrs.Tests/Substitutes/TestSagaUnitOfWork.cs
    startLine: 12
  assemblies:
  - Cqrs.Tests
  namespace: Cqrs.Tests.Substitutes
  syntax:
    content: public static IDictionary<Guid, Tuple<ISaga<Guid>, int, int, int>> TestGuidSagasWithAddCountGetCountAndCommitCount { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.Guid,System.Tuple{Cqrs.Domain.ISaga{System.Guid},System.Int32,System.Int32,System.Int32}}
    content.vb: Public Shared Property TestGuidSagasWithAddCountGetCountAndCommitCount As IDictionary(Of Guid, Tuple(Of ISaga(Of Guid), Integer, Integer, Integer))
  overload: Cqrs.Tests.Substitutes.TestSagaUnitOfWork.TestGuidSagasWithAddCountGetCountAndCommitCount*
  modifiers.csharp:
  - public
  - static
  - get
  - set
  modifiers.vb:
  - Public
  - Shared
- uid: Cqrs.Tests.Substitutes.TestSagaUnitOfWork.TestSagasWithAddCountGetCountAndCommitCount
  commentId: P:Cqrs.Tests.Substitutes.TestSagaUnitOfWork.TestSagasWithAddCountGetCountAndCommitCount
  id: TestSagasWithAddCountGetCountAndCommitCount
  parent: Cqrs.Tests.Substitutes.TestSagaUnitOfWork
  langs:
  - csharp
  - vb
  name: TestSagasWithAddCountGetCountAndCommitCount
  nameWithType: TestSagaUnitOfWork.TestSagasWithAddCountGetCountAndCommitCount
  fullName: Cqrs.Tests.Substitutes.TestSagaUnitOfWork.TestSagasWithAddCountGetCountAndCommitCount
  type: Property
  source:
    remote:
      path: Framework/Cqrs.Tests/Substitutes/TestSagaUnitOfWork.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: TestSagasWithAddCountGetCountAndCommitCount
    path: Framework/Cqrs.Tests/Substitutes/TestSagaUnitOfWork.cs
    startLine: 14
  assemblies:
  - Cqrs.Tests
  namespace: Cqrs.Tests.Substitutes
  syntax:
    content: public static IDictionary<Guid, Tuple<ISaga<ISingleSignOnToken>, int, int, int>> TestSagasWithAddCountGetCountAndCommitCount { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.Guid,System.Tuple{Cqrs.Domain.ISaga{Cqrs.Authentication.ISingleSignOnToken},System.Int32,System.Int32,System.Int32}}
    content.vb: Public Shared Property TestSagasWithAddCountGetCountAndCommitCount As IDictionary(Of Guid, Tuple(Of ISaga(Of ISingleSignOnToken), Integer, Integer, Integer))
  overload: Cqrs.Tests.Substitutes.TestSagaUnitOfWork.TestSagasWithAddCountGetCountAndCommitCount*
  modifiers.csharp:
  - public
  - static
  - get
  - set
  modifiers.vb:
  - Public
  - Shared
- uid: Cqrs.Tests.Substitutes.TestSagaUnitOfWork.Add``1(``0)
  commentId: M:Cqrs.Tests.Substitutes.TestSagaUnitOfWork.Add``1(``0)
  id: Add``1(``0)
  parent: Cqrs.Tests.Substitutes.TestSagaUnitOfWork
  langs:
  - csharp
  - vb
  name: Add<TSaga>(TSaga)
  nameWithType: TestSagaUnitOfWork.Add<TSaga>(TSaga)
  fullName: Cqrs.Tests.Substitutes.TestSagaUnitOfWork.Add<TSaga>(TSaga)
  type: Method
  source:
    remote:
      path: Framework/Cqrs.Tests/Substitutes/TestSagaUnitOfWork.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Add
    path: Framework/Cqrs.Tests/Substitutes/TestSagaUnitOfWork.cs
    startLine: 27
  assemblies:
  - Cqrs.Tests
  namespace: Cqrs.Tests.Substitutes
  summary: "\nAdd an item into the <xref href=\"Cqrs.Domain.ISagaUnitOfWork%601\" data-throw-if-not-resolved=\"false\"></xref> ready to be committed.\n"
  example: []
  syntax:
    content: 'public void Add<TSaga>(TSaga saga)where TSaga : ISaga<Guid>'
    parameters:
    - id: saga
      type: '{TSaga}'
    typeParameters:
    - id: TSaga
    content.vb: Public Sub Add(Of TSaga As ISaga(Of Guid))(saga As TSaga)
  overload: Cqrs.Tests.Substitutes.TestSagaUnitOfWork.Add*
  implements:
  - Cqrs.Domain.ISagaUnitOfWork{System.Guid}.Add``1({TSaga})
  nameWithType.vb: TestSagaUnitOfWork.Add(Of TSaga)(TSaga)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Cqrs.Tests.Substitutes.TestSagaUnitOfWork.Add(Of TSaga)(TSaga)
  name.vb: Add(Of TSaga)(TSaga)
- uid: Cqrs.Tests.Substitutes.TestSagaUnitOfWork.Get``1(System.Guid,System.Nullable{System.Int32})
  commentId: M:Cqrs.Tests.Substitutes.TestSagaUnitOfWork.Get``1(System.Guid,System.Nullable{System.Int32})
  id: Get``1(System.Guid,System.Nullable{System.Int32})
  parent: Cqrs.Tests.Substitutes.TestSagaUnitOfWork
  langs:
  - csharp
  - vb
  name: Get<TSaga>(Guid, Nullable<Int32>)
  nameWithType: TestSagaUnitOfWork.Get<TSaga>(Guid, Nullable<Int32>)
  fullName: Cqrs.Tests.Substitutes.TestSagaUnitOfWork.Get<TSaga>(System.Guid, System.Nullable<System.Int32>)
  type: Method
  source:
    remote:
      path: Framework/Cqrs.Tests/Substitutes/TestSagaUnitOfWork.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Get
    path: Framework/Cqrs.Tests/Substitutes/TestSagaUnitOfWork.cs
    startLine: 41
  assemblies:
  - Cqrs.Tests
  namespace: Cqrs.Tests.Substitutes
  summary: "\nGet an item from the <xref href=\"Cqrs.Domain.ISagaUnitOfWork%601\" data-throw-if-not-resolved=\"false\"></xref> if it has already been loaded.\n"
  example: []
  syntax:
    content: 'public TSaga Get<TSaga>(Guid id, int ? expectedVersion = null)where TSaga : ISaga<Guid>'
    parameters:
    - id: id
      type: System.Guid
    - id: expectedVersion
      type: System.Nullable{System.Int32}
    typeParameters:
    - id: TSaga
    return:
      type: '{TSaga}'
    content.vb: Public Function Get(Of TSaga As ISaga(Of Guid))(id As Guid, expectedVersion As Integer? = Nothing) As TSaga
  overload: Cqrs.Tests.Substitutes.TestSagaUnitOfWork.Get*
  implements:
  - Cqrs.Domain.ISagaUnitOfWork{System.Guid}.Get``1(System.Guid,System.Nullable{System.Int32})
  nameWithType.vb: TestSagaUnitOfWork.Get(Of TSaga)(Guid, Nullable(Of Int32))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Cqrs.Tests.Substitutes.TestSagaUnitOfWork.Get(Of TSaga)(System.Guid, System.Nullable(Of System.Int32))
  name.vb: Get(Of TSaga)(Guid, Nullable(Of Int32))
- uid: Cqrs.Tests.Substitutes.TestSagaUnitOfWork.Commit
  commentId: M:Cqrs.Tests.Substitutes.TestSagaUnitOfWork.Commit
  id: Commit
  parent: Cqrs.Tests.Substitutes.TestSagaUnitOfWork
  langs:
  - csharp
  - vb
  name: Commit()
  nameWithType: TestSagaUnitOfWork.Commit()
  fullName: Cqrs.Tests.Substitutes.TestSagaUnitOfWork.Commit()
  type: Method
  source:
    remote:
      path: Framework/Cqrs.Tests/Substitutes/TestSagaUnitOfWork.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Commit
    path: Framework/Cqrs.Tests/Substitutes/TestSagaUnitOfWork.cs
    startLine: 54
  assemblies:
  - Cqrs.Tests
  namespace: Cqrs.Tests.Substitutes
  summary: "\nCommit any changed <xref href=\"Cqrs.Domain.Saga%601\" data-throw-if-not-resolved=\"false\"></xref> added to this <xref href=\"Cqrs.Domain.ISagaUnitOfWork%601\" data-throw-if-not-resolved=\"false\"></xref> via <xref href=\"Cqrs.Domain.ISagaUnitOfWork%601.Add%60%601(%60%600)\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public void Commit()
    content.vb: Public Sub Commit
  overload: Cqrs.Tests.Substitutes.TestSagaUnitOfWork.Commit*
  implements:
  - Cqrs.Domain.ISagaUnitOfWork{Cqrs.Authentication.ISingleSignOnToken}.Commit
  - Cqrs.Domain.ISagaUnitOfWork{System.Guid}.Commit
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Cqrs.Tests.Substitutes.TestSagaUnitOfWork.Cqrs#Domain#ISagaUnitOfWork{Cqrs#Authentication#ISingleSignOnToken}#Add``1(``0)
  commentId: M:Cqrs.Tests.Substitutes.TestSagaUnitOfWork.Cqrs#Domain#ISagaUnitOfWork{Cqrs#Authentication#ISingleSignOnToken}#Add``1(``0)
  id: Cqrs#Domain#ISagaUnitOfWork{Cqrs#Authentication#ISingleSignOnToken}#Add``1(``0)
  isEii: true
  parent: Cqrs.Tests.Substitutes.TestSagaUnitOfWork
  langs:
  - csharp
  - vb
  name: ISagaUnitOfWork<ISingleSignOnToken>.Add<TSaga>(TSaga)
  nameWithType: TestSagaUnitOfWork.ISagaUnitOfWork<ISingleSignOnToken>.Add<TSaga>(TSaga)
  fullName: Cqrs.Tests.Substitutes.TestSagaUnitOfWork.Cqrs.Domain.ISagaUnitOfWork<Cqrs.Authentication.ISingleSignOnToken>.Add<TSaga>(TSaga)
  type: Method
  source:
    remote:
      path: Framework/Cqrs.Tests/Substitutes/TestSagaUnitOfWork.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Cqrs.Domain.ISagaUnitOfWork<Cqrs.Authentication.ISingleSignOnToken>.Add
    path: Framework/Cqrs.Tests/Substitutes/TestSagaUnitOfWork.cs
    startLine: 77
  assemblies:
  - Cqrs.Tests
  namespace: Cqrs.Tests.Substitutes
  summary: "\nAdd an item into the <xref href=\"Cqrs.Domain.ISagaUnitOfWork%601\" data-throw-if-not-resolved=\"false\"></xref> ready to be committed.\n"
  example: []
  syntax:
    content: 'void ISagaUnitOfWork<ISingleSignOnToken>.Add<TSaga>(TSaga saga)where TSaga : ISaga<ISingleSignOnToken>'
    parameters:
    - id: saga
      type: '{TSaga}'
    typeParameters:
    - id: TSaga
    content.vb: Sub Cqrs.Domain.ISagaUnitOfWork<Cqrs.Authentication.ISingleSignOnToken>.Add(Of TSaga As ISaga(Of ISingleSignOnToken))(saga As TSaga) Implements ISagaUnitOfWork(Of ISingleSignOnToken).Add
  overload: Cqrs.Tests.Substitutes.TestSagaUnitOfWork.Cqrs#Domain#ISagaUnitOfWork{Cqrs#Authentication#ISingleSignOnToken}#Add*
  implements:
  - Cqrs.Domain.ISagaUnitOfWork{Cqrs.Authentication.ISingleSignOnToken}.Add``1({TSaga})
  nameWithType.vb: TestSagaUnitOfWork.Cqrs.Domain.ISagaUnitOfWork<Cqrs.Authentication.ISingleSignOnToken>.Add(Of TSaga)(TSaga)
  fullName.vb: Cqrs.Tests.Substitutes.TestSagaUnitOfWork.Cqrs.Domain.ISagaUnitOfWork<Cqrs.Authentication.ISingleSignOnToken>.Add(Of TSaga)(TSaga)
  name.vb: Cqrs.Domain.ISagaUnitOfWork<Cqrs.Authentication.ISingleSignOnToken>.Add(Of TSaga)(TSaga)
- uid: Cqrs.Tests.Substitutes.TestSagaUnitOfWork.Cqrs#Domain#ISagaUnitOfWork{Cqrs#Authentication#ISingleSignOnToken}#Get``1(System.Guid,System.Nullable{System.Int32})
  commentId: M:Cqrs.Tests.Substitutes.TestSagaUnitOfWork.Cqrs#Domain#ISagaUnitOfWork{Cqrs#Authentication#ISingleSignOnToken}#Get``1(System.Guid,System.Nullable{System.Int32})
  id: Cqrs#Domain#ISagaUnitOfWork{Cqrs#Authentication#ISingleSignOnToken}#Get``1(System.Guid,System.Nullable{System.Int32})
  isEii: true
  parent: Cqrs.Tests.Substitutes.TestSagaUnitOfWork
  langs:
  - csharp
  - vb
  name: ISagaUnitOfWork<ISingleSignOnToken>.Get<TSaga>(Guid, Nullable<Int32>)
  nameWithType: TestSagaUnitOfWork.ISagaUnitOfWork<ISingleSignOnToken>.Get<TSaga>(Guid, Nullable<Int32>)
  fullName: Cqrs.Tests.Substitutes.TestSagaUnitOfWork.Cqrs.Domain.ISagaUnitOfWork<Cqrs.Authentication.ISingleSignOnToken>.Get<TSaga>(System.Guid, System.Nullable<System.Int32>)
  type: Method
  source:
    remote:
      path: Framework/Cqrs.Tests/Substitutes/TestSagaUnitOfWork.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Cqrs.Domain.ISagaUnitOfWork<Cqrs.Authentication.ISingleSignOnToken>.Get
    path: Framework/Cqrs.Tests/Substitutes/TestSagaUnitOfWork.cs
    startLine: 90
  assemblies:
  - Cqrs.Tests
  namespace: Cqrs.Tests.Substitutes
  summary: "\nGet an item from the <xref href=\"Cqrs.Domain.ISagaUnitOfWork%601\" data-throw-if-not-resolved=\"false\"></xref> if it has already been loaded.\n"
  example: []
  syntax:
    content: 'TSaga ISagaUnitOfWork<ISingleSignOnToken>.Get<TSaga>(Guid id, int ? expectedVersion)where TSaga : ISaga<ISingleSignOnToken>'
    parameters:
    - id: id
      type: System.Guid
    - id: expectedVersion
      type: System.Nullable{System.Int32}
    typeParameters:
    - id: TSaga
    return:
      type: '{TSaga}'
    content.vb: Function Cqrs.Domain.ISagaUnitOfWork<Cqrs.Authentication.ISingleSignOnToken>.Get(Of TSaga As ISaga(Of ISingleSignOnToken))(id As Guid, expectedVersion As Integer?) As TSaga Implements ISagaUnitOfWork(Of ISingleSignOnToken).Get
  overload: Cqrs.Tests.Substitutes.TestSagaUnitOfWork.Cqrs#Domain#ISagaUnitOfWork{Cqrs#Authentication#ISingleSignOnToken}#Get*
  implements:
  - Cqrs.Domain.ISagaUnitOfWork{Cqrs.Authentication.ISingleSignOnToken}.Get``1(System.Guid,System.Nullable{System.Int32})
  nameWithType.vb: TestSagaUnitOfWork.Cqrs.Domain.ISagaUnitOfWork<Cqrs.Authentication.ISingleSignOnToken>.Get(Of TSaga)(Guid, Nullable(Of Int32))
  fullName.vb: Cqrs.Tests.Substitutes.TestSagaUnitOfWork.Cqrs.Domain.ISagaUnitOfWork<Cqrs.Authentication.ISingleSignOnToken>.Get(Of TSaga)(System.Guid, System.Nullable(Of System.Int32))
  name.vb: Cqrs.Domain.ISagaUnitOfWork<Cqrs.Authentication.ISingleSignOnToken>.Get(Of TSaga)(Guid, Nullable(Of Int32))
references:
- uid: Cqrs.Tests.Substitutes
  commentId: N:Cqrs.Tests.Substitutes
  isExternal: false
  name: Cqrs.Tests.Substitutes
  nameWithType: Cqrs.Tests.Substitutes
  fullName: Cqrs.Tests.Substitutes
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Cqrs.Domain.ISagaUnitOfWork{Cqrs.Authentication.ISingleSignOnToken}
  commentId: T:Cqrs.Domain.ISagaUnitOfWork{Cqrs.Authentication.ISingleSignOnToken}
  parent: Cqrs.Domain
  definition: Cqrs.Domain.ISagaUnitOfWork`1
  name: ISagaUnitOfWork<ISingleSignOnToken>
  nameWithType: ISagaUnitOfWork<ISingleSignOnToken>
  fullName: Cqrs.Domain.ISagaUnitOfWork<Cqrs.Authentication.ISingleSignOnToken>
  nameWithType.vb: ISagaUnitOfWork(Of ISingleSignOnToken)
  fullName.vb: Cqrs.Domain.ISagaUnitOfWork(Of Cqrs.Authentication.ISingleSignOnToken)
  name.vb: ISagaUnitOfWork(Of ISingleSignOnToken)
  spec.csharp:
  - uid: Cqrs.Domain.ISagaUnitOfWork`1
    name: ISagaUnitOfWork
    nameWithType: ISagaUnitOfWork
    fullName: Cqrs.Domain.ISagaUnitOfWork
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cqrs.Authentication.ISingleSignOnToken
    name: ISingleSignOnToken
    nameWithType: ISingleSignOnToken
    fullName: Cqrs.Authentication.ISingleSignOnToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Domain.ISagaUnitOfWork`1
    name: ISagaUnitOfWork
    nameWithType: ISagaUnitOfWork
    fullName: Cqrs.Domain.ISagaUnitOfWork
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Cqrs.Authentication.ISingleSignOnToken
    name: ISingleSignOnToken
    nameWithType: ISingleSignOnToken
    fullName: Cqrs.Authentication.ISingleSignOnToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Domain.ISagaUnitOfWork{System.Guid}
  commentId: T:Cqrs.Domain.ISagaUnitOfWork{System.Guid}
  parent: Cqrs.Domain
  definition: Cqrs.Domain.ISagaUnitOfWork`1
  name: ISagaUnitOfWork<Guid>
  nameWithType: ISagaUnitOfWork<Guid>
  fullName: Cqrs.Domain.ISagaUnitOfWork<System.Guid>
  nameWithType.vb: ISagaUnitOfWork(Of Guid)
  fullName.vb: Cqrs.Domain.ISagaUnitOfWork(Of System.Guid)
  name.vb: ISagaUnitOfWork(Of Guid)
  spec.csharp:
  - uid: Cqrs.Domain.ISagaUnitOfWork`1
    name: ISagaUnitOfWork
    nameWithType: ISagaUnitOfWork
    fullName: Cqrs.Domain.ISagaUnitOfWork
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Domain.ISagaUnitOfWork`1
    name: ISagaUnitOfWork
    nameWithType: ISagaUnitOfWork
    fullName: Cqrs.Domain.ISagaUnitOfWork
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Cqrs.Domain.ISagaUnitOfWork`1
  commentId: T:Cqrs.Domain.ISagaUnitOfWork`1
  isExternal: false
  name: ISagaUnitOfWork<TAuthenticationToken>
  nameWithType: ISagaUnitOfWork<TAuthenticationToken>
  fullName: Cqrs.Domain.ISagaUnitOfWork<TAuthenticationToken>
  nameWithType.vb: ISagaUnitOfWork(Of TAuthenticationToken)
  fullName.vb: Cqrs.Domain.ISagaUnitOfWork(Of TAuthenticationToken)
  name.vb: ISagaUnitOfWork(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Domain.ISagaUnitOfWork`1
    name: ISagaUnitOfWork
    nameWithType: ISagaUnitOfWork
    fullName: Cqrs.Domain.ISagaUnitOfWork
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Domain.ISagaUnitOfWork`1
    name: ISagaUnitOfWork
    nameWithType: ISagaUnitOfWork
    fullName: Cqrs.Domain.ISagaUnitOfWork
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Domain
  commentId: N:Cqrs.Domain
  isExternal: false
  name: Cqrs.Domain
  nameWithType: Cqrs.Domain
  fullName: Cqrs.Domain
- uid: Cqrs.Tests.Substitutes.TestSagaUnitOfWork.TestGuidSagasWithAddCountGetCountAndCommitCount*
  commentId: Overload:Cqrs.Tests.Substitutes.TestSagaUnitOfWork.TestGuidSagasWithAddCountGetCountAndCommitCount
  isExternal: false
  name: TestGuidSagasWithAddCountGetCountAndCommitCount
  nameWithType: TestSagaUnitOfWork.TestGuidSagasWithAddCountGetCountAndCommitCount
  fullName: Cqrs.Tests.Substitutes.TestSagaUnitOfWork.TestGuidSagasWithAddCountGetCountAndCommitCount
- uid: System.Collections.Generic.IDictionary{System.Guid,System.Tuple{Cqrs.Domain.ISaga{System.Guid},System.Int32,System.Int32,System.Int32}}
  commentId: T:System.Collections.Generic.IDictionary{System.Guid,System.Tuple{Cqrs.Domain.ISaga{System.Guid},System.Int32,System.Int32,System.Int32}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<Guid, Tuple<ISaga<Guid>, Int32, Int32, Int32>>
  nameWithType: IDictionary<Guid, Tuple<ISaga<Guid>, Int32, Int32, Int32>>
  fullName: System.Collections.Generic.IDictionary<System.Guid, System.Tuple<Cqrs.Domain.ISaga<System.Guid>, System.Int32, System.Int32, System.Int32>>
  nameWithType.vb: IDictionary(Of Guid, Tuple(Of ISaga(Of Guid), Int32, Int32, Int32))
  fullName.vb: System.Collections.Generic.IDictionary(Of System.Guid, System.Tuple(Of Cqrs.Domain.ISaga(Of System.Guid), System.Int32, System.Int32, System.Int32))
  name.vb: IDictionary(Of Guid, Tuple(Of ISaga(Of Guid), Int32, Int32, Int32))
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Tuple`4
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cqrs.Domain.ISaga`1
    name: ISaga
    nameWithType: ISaga
    fullName: Cqrs.Domain.ISaga
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Tuple`4
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Cqrs.Domain.ISaga`1
    name: ISaga
    nameWithType: ISaga
    fullName: Cqrs.Domain.ISaga
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Cqrs.Tests.Substitutes.TestSagaUnitOfWork.TestSagasWithAddCountGetCountAndCommitCount*
  commentId: Overload:Cqrs.Tests.Substitutes.TestSagaUnitOfWork.TestSagasWithAddCountGetCountAndCommitCount
  isExternal: false
  name: TestSagasWithAddCountGetCountAndCommitCount
  nameWithType: TestSagaUnitOfWork.TestSagasWithAddCountGetCountAndCommitCount
  fullName: Cqrs.Tests.Substitutes.TestSagaUnitOfWork.TestSagasWithAddCountGetCountAndCommitCount
- uid: System.Collections.Generic.IDictionary{System.Guid,System.Tuple{Cqrs.Domain.ISaga{Cqrs.Authentication.ISingleSignOnToken},System.Int32,System.Int32,System.Int32}}
  commentId: T:System.Collections.Generic.IDictionary{System.Guid,System.Tuple{Cqrs.Domain.ISaga{Cqrs.Authentication.ISingleSignOnToken},System.Int32,System.Int32,System.Int32}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<Guid, Tuple<ISaga<ISingleSignOnToken>, Int32, Int32, Int32>>
  nameWithType: IDictionary<Guid, Tuple<ISaga<ISingleSignOnToken>, Int32, Int32, Int32>>
  fullName: System.Collections.Generic.IDictionary<System.Guid, System.Tuple<Cqrs.Domain.ISaga<Cqrs.Authentication.ISingleSignOnToken>, System.Int32, System.Int32, System.Int32>>
  nameWithType.vb: IDictionary(Of Guid, Tuple(Of ISaga(Of ISingleSignOnToken), Int32, Int32, Int32))
  fullName.vb: System.Collections.Generic.IDictionary(Of System.Guid, System.Tuple(Of Cqrs.Domain.ISaga(Of Cqrs.Authentication.ISingleSignOnToken), System.Int32, System.Int32, System.Int32))
  name.vb: IDictionary(Of Guid, Tuple(Of ISaga(Of ISingleSignOnToken), Int32, Int32, Int32))
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Tuple`4
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cqrs.Domain.ISaga`1
    name: ISaga
    nameWithType: ISaga
    fullName: Cqrs.Domain.ISaga
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cqrs.Authentication.ISingleSignOnToken
    name: ISingleSignOnToken
    nameWithType: ISingleSignOnToken
    fullName: Cqrs.Authentication.ISingleSignOnToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Tuple`4
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Cqrs.Domain.ISaga`1
    name: ISaga
    nameWithType: ISaga
    fullName: Cqrs.Domain.ISaga
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Cqrs.Authentication.ISingleSignOnToken
    name: ISingleSignOnToken
    nameWithType: ISingleSignOnToken
    fullName: Cqrs.Authentication.ISingleSignOnToken
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Tests.Substitutes.TestSagaUnitOfWork.Add*
  commentId: Overload:Cqrs.Tests.Substitutes.TestSagaUnitOfWork.Add
  isExternal: false
  name: Add
  nameWithType: TestSagaUnitOfWork.Add
  fullName: Cqrs.Tests.Substitutes.TestSagaUnitOfWork.Add
- uid: Cqrs.Domain.ISagaUnitOfWork{System.Guid}.Add``1({TSaga})
  commentId: M:Cqrs.Domain.ISagaUnitOfWork{System.Guid}.Add``1(``0)
  parent: Cqrs.Domain.ISagaUnitOfWork{System.Guid}
  definition: Cqrs.Domain.ISagaUnitOfWork`1.Add``1(``0)
  name: Add<TSaga>(TSaga)
  nameWithType: ISagaUnitOfWork<Guid>.Add<TSaga>(TSaga)
  fullName: Cqrs.Domain.ISagaUnitOfWork<System.Guid>.Add<TSaga>(TSaga)
  nameWithType.vb: ISagaUnitOfWork(Of Guid).Add(Of TSaga)(TSaga)
  fullName.vb: Cqrs.Domain.ISagaUnitOfWork(Of System.Guid).Add(Of TSaga)(TSaga)
  name.vb: Add(Of TSaga)(TSaga)
  spec.csharp:
  - uid: Cqrs.Domain.ISagaUnitOfWork`1.Add``1(``0)
    name: Add<TSaga>
    nameWithType: ISagaUnitOfWork<Guid>.Add<TSaga>
    fullName: Cqrs.Domain.ISagaUnitOfWork<System.Guid>.Add<TSaga>
  - name: (
    nameWithType: (
    fullName: (
  - name: TSaga
    nameWithType: TSaga
    fullName: TSaga
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Domain.ISagaUnitOfWork`1.Add``1(``0)
    name: Add(Of TSaga)
    nameWithType: ISagaUnitOfWork(Of Guid).Add(Of TSaga)
    fullName: Cqrs.Domain.ISagaUnitOfWork(Of System.Guid).Add(Of TSaga)
  - name: (
    nameWithType: (
    fullName: (
  - name: TSaga
    nameWithType: TSaga
    fullName: TSaga
  - name: )
    nameWithType: )
    fullName: )
- uid: '{TSaga}'
  commentId: '!:TSaga'
  definition: TSaga
  name: TSaga
  nameWithType: TSaga
  fullName: TSaga
- uid: Cqrs.Domain.ISagaUnitOfWork`1.Add``1(``0)
  commentId: M:Cqrs.Domain.ISagaUnitOfWork`1.Add``1(``0)
  isExternal: false
  name: Add<TSaga>(TSaga)
  nameWithType: ISagaUnitOfWork<TAuthenticationToken>.Add<TSaga>(TSaga)
  fullName: Cqrs.Domain.ISagaUnitOfWork<TAuthenticationToken>.Add<TSaga>(TSaga)
  nameWithType.vb: ISagaUnitOfWork(Of TAuthenticationToken).Add(Of TSaga)(TSaga)
  fullName.vb: Cqrs.Domain.ISagaUnitOfWork(Of TAuthenticationToken).Add(Of TSaga)(TSaga)
  name.vb: Add(Of TSaga)(TSaga)
  spec.csharp:
  - uid: Cqrs.Domain.ISagaUnitOfWork`1.Add``1(``0)
    name: Add<TSaga>
    nameWithType: ISagaUnitOfWork<TAuthenticationToken>.Add<TSaga>
    fullName: Cqrs.Domain.ISagaUnitOfWork<TAuthenticationToken>.Add<TSaga>
  - name: (
    nameWithType: (
    fullName: (
  - name: TSaga
    nameWithType: TSaga
    fullName: TSaga
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Domain.ISagaUnitOfWork`1.Add``1(``0)
    name: Add(Of TSaga)
    nameWithType: ISagaUnitOfWork(Of TAuthenticationToken).Add(Of TSaga)
    fullName: Cqrs.Domain.ISagaUnitOfWork(Of TAuthenticationToken).Add(Of TSaga)
  - name: (
    nameWithType: (
    fullName: (
  - name: TSaga
    nameWithType: TSaga
    fullName: TSaga
  - name: )
    nameWithType: )
    fullName: )
- uid: TSaga
  isExternal: false
  name: TSaga
  nameWithType: TSaga
  fullName: TSaga
- uid: Cqrs.Tests.Substitutes.TestSagaUnitOfWork.Get*
  commentId: Overload:Cqrs.Tests.Substitutes.TestSagaUnitOfWork.Get
  isExternal: false
  name: Get
  nameWithType: TestSagaUnitOfWork.Get
  fullName: Cqrs.Tests.Substitutes.TestSagaUnitOfWork.Get
- uid: Cqrs.Domain.ISagaUnitOfWork{System.Guid}.Get``1(System.Guid,System.Nullable{System.Int32})
  commentId: M:Cqrs.Domain.ISagaUnitOfWork{System.Guid}.Get``1(System.Guid,System.Nullable{System.Int32})
  parent: Cqrs.Domain.ISagaUnitOfWork{System.Guid}
  definition: Cqrs.Domain.ISagaUnitOfWork`1.Get``1(System.Guid,System.Nullable{System.Int32})
  name: Get<TSaga>(Guid, Nullable<Int32>)
  nameWithType: ISagaUnitOfWork<Guid>.Get<TSaga>(Guid, Nullable<Int32>)
  fullName: Cqrs.Domain.ISagaUnitOfWork<System.Guid>.Get<TSaga>(System.Guid, System.Nullable<System.Int32>)
  nameWithType.vb: ISagaUnitOfWork(Of Guid).Get(Of TSaga)(Guid, Nullable(Of Int32))
  fullName.vb: Cqrs.Domain.ISagaUnitOfWork(Of System.Guid).Get(Of TSaga)(System.Guid, System.Nullable(Of System.Int32))
  name.vb: Get(Of TSaga)(Guid, Nullable(Of Int32))
  spec.csharp:
  - uid: Cqrs.Domain.ISagaUnitOfWork`1.Get``1(System.Guid,System.Nullable{System.Int32})
    name: Get<TSaga>
    nameWithType: ISagaUnitOfWork<Guid>.Get<TSaga>
    fullName: Cqrs.Domain.ISagaUnitOfWork<System.Guid>.Get<TSaga>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Domain.ISagaUnitOfWork`1.Get``1(System.Guid,System.Nullable{System.Int32})
    name: Get(Of TSaga)
    nameWithType: ISagaUnitOfWork(Of Guid).Get(Of TSaga)
    fullName: Cqrs.Domain.ISagaUnitOfWork(Of System.Guid).Get(Of TSaga)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Domain.ISagaUnitOfWork`1.Get``1(System.Guid,System.Nullable{System.Int32})
  commentId: M:Cqrs.Domain.ISagaUnitOfWork`1.Get``1(System.Guid,System.Nullable{System.Int32})
  isExternal: true
  name: Get<TSaga>(Guid, Nullable<Int32>)
  nameWithType: ISagaUnitOfWork<TAuthenticationToken>.Get<TSaga>(Guid, Nullable<Int32>)
  fullName: Cqrs.Domain.ISagaUnitOfWork<TAuthenticationToken>.Get<TSaga>(System.Guid, System.Nullable<System.Int32>)
  nameWithType.vb: ISagaUnitOfWork(Of TAuthenticationToken).Get(Of TSaga)(Guid, Nullable(Of Int32))
  fullName.vb: Cqrs.Domain.ISagaUnitOfWork(Of TAuthenticationToken).Get(Of TSaga)(System.Guid, System.Nullable(Of System.Int32))
  name.vb: Get(Of TSaga)(Guid, Nullable(Of Int32))
  spec.csharp:
  - uid: Cqrs.Domain.ISagaUnitOfWork`1.Get``1(System.Guid,System.Nullable{System.Int32})
    name: Get<TSaga>
    nameWithType: ISagaUnitOfWork<TAuthenticationToken>.Get<TSaga>
    fullName: Cqrs.Domain.ISagaUnitOfWork<TAuthenticationToken>.Get<TSaga>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Domain.ISagaUnitOfWork`1.Get``1(System.Guid,System.Nullable{System.Int32})
    name: Get(Of TSaga)
    nameWithType: ISagaUnitOfWork(Of TAuthenticationToken).Get(Of TSaga)
    fullName: Cqrs.Domain.ISagaUnitOfWork(Of TAuthenticationToken).Get(Of TSaga)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Domain.Saga`1
  commentId: T:Cqrs.Domain.Saga`1
  isExternal: false
  name: Saga<TAuthenticationToken>
  nameWithType: Saga<TAuthenticationToken>
  fullName: Cqrs.Domain.Saga<TAuthenticationToken>
  nameWithType.vb: Saga(Of TAuthenticationToken)
  fullName.vb: Cqrs.Domain.Saga(Of TAuthenticationToken)
  name.vb: Saga(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Domain.Saga`1
    name: Saga
    nameWithType: Saga
    fullName: Cqrs.Domain.Saga
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Domain.Saga`1
    name: Saga
    nameWithType: Saga
    fullName: Cqrs.Domain.Saga
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Tests.Substitutes.TestSagaUnitOfWork.Commit*
  commentId: Overload:Cqrs.Tests.Substitutes.TestSagaUnitOfWork.Commit
  isExternal: false
  name: Commit
  nameWithType: TestSagaUnitOfWork.Commit
  fullName: Cqrs.Tests.Substitutes.TestSagaUnitOfWork.Commit
- uid: Cqrs.Domain.ISagaUnitOfWork{Cqrs.Authentication.ISingleSignOnToken}.Commit
  commentId: M:Cqrs.Domain.ISagaUnitOfWork{Cqrs.Authentication.ISingleSignOnToken}.Commit
  parent: Cqrs.Domain.ISagaUnitOfWork{Cqrs.Authentication.ISingleSignOnToken}
  definition: Cqrs.Domain.ISagaUnitOfWork`1.Commit
  name: Commit()
  nameWithType: ISagaUnitOfWork<ISingleSignOnToken>.Commit()
  fullName: Cqrs.Domain.ISagaUnitOfWork<Cqrs.Authentication.ISingleSignOnToken>.Commit()
  nameWithType.vb: ISagaUnitOfWork(Of ISingleSignOnToken).Commit()
  fullName.vb: Cqrs.Domain.ISagaUnitOfWork(Of Cqrs.Authentication.ISingleSignOnToken).Commit()
  spec.csharp:
  - uid: Cqrs.Domain.ISagaUnitOfWork`1.Commit
    name: Commit
    nameWithType: ISagaUnitOfWork<ISingleSignOnToken>.Commit
    fullName: Cqrs.Domain.ISagaUnitOfWork<Cqrs.Authentication.ISingleSignOnToken>.Commit
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Domain.ISagaUnitOfWork`1.Commit
    name: Commit
    nameWithType: ISagaUnitOfWork(Of ISingleSignOnToken).Commit
    fullName: Cqrs.Domain.ISagaUnitOfWork(Of Cqrs.Authentication.ISingleSignOnToken).Commit
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Domain.ISagaUnitOfWork{System.Guid}.Commit
  commentId: M:Cqrs.Domain.ISagaUnitOfWork{System.Guid}.Commit
  parent: Cqrs.Domain.ISagaUnitOfWork{System.Guid}
  definition: Cqrs.Domain.ISagaUnitOfWork`1.Commit
  name: Commit()
  nameWithType: ISagaUnitOfWork<Guid>.Commit()
  fullName: Cqrs.Domain.ISagaUnitOfWork<System.Guid>.Commit()
  nameWithType.vb: ISagaUnitOfWork(Of Guid).Commit()
  fullName.vb: Cqrs.Domain.ISagaUnitOfWork(Of System.Guid).Commit()
  spec.csharp:
  - uid: Cqrs.Domain.ISagaUnitOfWork`1.Commit
    name: Commit
    nameWithType: ISagaUnitOfWork<Guid>.Commit
    fullName: Cqrs.Domain.ISagaUnitOfWork<System.Guid>.Commit
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Domain.ISagaUnitOfWork`1.Commit
    name: Commit
    nameWithType: ISagaUnitOfWork(Of Guid).Commit
    fullName: Cqrs.Domain.ISagaUnitOfWork(Of System.Guid).Commit
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Domain.ISagaUnitOfWork`1.Commit
  commentId: M:Cqrs.Domain.ISagaUnitOfWork`1.Commit
  isExternal: false
  name: Commit()
  nameWithType: ISagaUnitOfWork<TAuthenticationToken>.Commit()
  fullName: Cqrs.Domain.ISagaUnitOfWork<TAuthenticationToken>.Commit()
  nameWithType.vb: ISagaUnitOfWork(Of TAuthenticationToken).Commit()
  fullName.vb: Cqrs.Domain.ISagaUnitOfWork(Of TAuthenticationToken).Commit()
  spec.csharp:
  - uid: Cqrs.Domain.ISagaUnitOfWork`1.Commit
    name: Commit
    nameWithType: ISagaUnitOfWork<TAuthenticationToken>.Commit
    fullName: Cqrs.Domain.ISagaUnitOfWork<TAuthenticationToken>.Commit
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Domain.ISagaUnitOfWork`1.Commit
    name: Commit
    nameWithType: ISagaUnitOfWork(Of TAuthenticationToken).Commit
    fullName: Cqrs.Domain.ISagaUnitOfWork(Of TAuthenticationToken).Commit
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Tests.Substitutes.TestSagaUnitOfWork.Cqrs#Domain#ISagaUnitOfWork{Cqrs#Authentication#ISingleSignOnToken}#Add*
  commentId: Overload:Cqrs.Tests.Substitutes.TestSagaUnitOfWork.Cqrs#Domain#ISagaUnitOfWork{Cqrs#Authentication#ISingleSignOnToken}#Add
  isExternal: false
  name: ISagaUnitOfWork<ISingleSignOnToken>.Add
  nameWithType: TestSagaUnitOfWork.ISagaUnitOfWork<ISingleSignOnToken>.Add
  fullName: Cqrs.Tests.Substitutes.TestSagaUnitOfWork.Cqrs.Domain.ISagaUnitOfWork<Cqrs.Authentication.ISingleSignOnToken>.Add
  nameWithType.vb: TestSagaUnitOfWork.Cqrs.Domain.ISagaUnitOfWork<Cqrs.Authentication.ISingleSignOnToken>.Add
  name.vb: Cqrs.Domain.ISagaUnitOfWork<Cqrs.Authentication.ISingleSignOnToken>.Add
- uid: Cqrs.Domain.ISagaUnitOfWork{Cqrs.Authentication.ISingleSignOnToken}.Add``1({TSaga})
  commentId: M:Cqrs.Domain.ISagaUnitOfWork{Cqrs.Authentication.ISingleSignOnToken}.Add``1(``0)
  parent: Cqrs.Domain.ISagaUnitOfWork{Cqrs.Authentication.ISingleSignOnToken}
  definition: Cqrs.Domain.ISagaUnitOfWork`1.Add``1(``0)
  name: Add<TSaga>(TSaga)
  nameWithType: ISagaUnitOfWork<ISingleSignOnToken>.Add<TSaga>(TSaga)
  fullName: Cqrs.Domain.ISagaUnitOfWork<Cqrs.Authentication.ISingleSignOnToken>.Add<TSaga>(TSaga)
  nameWithType.vb: ISagaUnitOfWork(Of ISingleSignOnToken).Add(Of TSaga)(TSaga)
  fullName.vb: Cqrs.Domain.ISagaUnitOfWork(Of Cqrs.Authentication.ISingleSignOnToken).Add(Of TSaga)(TSaga)
  name.vb: Add(Of TSaga)(TSaga)
  spec.csharp:
  - uid: Cqrs.Domain.ISagaUnitOfWork`1.Add``1(``0)
    name: Add<TSaga>
    nameWithType: ISagaUnitOfWork<ISingleSignOnToken>.Add<TSaga>
    fullName: Cqrs.Domain.ISagaUnitOfWork<Cqrs.Authentication.ISingleSignOnToken>.Add<TSaga>
  - name: (
    nameWithType: (
    fullName: (
  - name: TSaga
    nameWithType: TSaga
    fullName: TSaga
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Domain.ISagaUnitOfWork`1.Add``1(``0)
    name: Add(Of TSaga)
    nameWithType: ISagaUnitOfWork(Of ISingleSignOnToken).Add(Of TSaga)
    fullName: Cqrs.Domain.ISagaUnitOfWork(Of Cqrs.Authentication.ISingleSignOnToken).Add(Of TSaga)
  - name: (
    nameWithType: (
    fullName: (
  - name: TSaga
    nameWithType: TSaga
    fullName: TSaga
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Tests.Substitutes.TestSagaUnitOfWork.Cqrs#Domain#ISagaUnitOfWork{Cqrs#Authentication#ISingleSignOnToken}#Get*
  commentId: Overload:Cqrs.Tests.Substitutes.TestSagaUnitOfWork.Cqrs#Domain#ISagaUnitOfWork{Cqrs#Authentication#ISingleSignOnToken}#Get
  isExternal: false
  name: ISagaUnitOfWork<ISingleSignOnToken>.Get
  nameWithType: TestSagaUnitOfWork.ISagaUnitOfWork<ISingleSignOnToken>.Get
  fullName: Cqrs.Tests.Substitutes.TestSagaUnitOfWork.Cqrs.Domain.ISagaUnitOfWork<Cqrs.Authentication.ISingleSignOnToken>.Get
  nameWithType.vb: TestSagaUnitOfWork.Cqrs.Domain.ISagaUnitOfWork<Cqrs.Authentication.ISingleSignOnToken>.Get
  name.vb: Cqrs.Domain.ISagaUnitOfWork<Cqrs.Authentication.ISingleSignOnToken>.Get
- uid: Cqrs.Domain.ISagaUnitOfWork{Cqrs.Authentication.ISingleSignOnToken}.Get``1(System.Guid,System.Nullable{System.Int32})
  commentId: M:Cqrs.Domain.ISagaUnitOfWork{Cqrs.Authentication.ISingleSignOnToken}.Get``1(System.Guid,System.Nullable{System.Int32})
  parent: Cqrs.Domain.ISagaUnitOfWork{Cqrs.Authentication.ISingleSignOnToken}
  definition: Cqrs.Domain.ISagaUnitOfWork`1.Get``1(System.Guid,System.Nullable{System.Int32})
  name: Get<TSaga>(Guid, Nullable<Int32>)
  nameWithType: ISagaUnitOfWork<ISingleSignOnToken>.Get<TSaga>(Guid, Nullable<Int32>)
  fullName: Cqrs.Domain.ISagaUnitOfWork<Cqrs.Authentication.ISingleSignOnToken>.Get<TSaga>(System.Guid, System.Nullable<System.Int32>)
  nameWithType.vb: ISagaUnitOfWork(Of ISingleSignOnToken).Get(Of TSaga)(Guid, Nullable(Of Int32))
  fullName.vb: Cqrs.Domain.ISagaUnitOfWork(Of Cqrs.Authentication.ISingleSignOnToken).Get(Of TSaga)(System.Guid, System.Nullable(Of System.Int32))
  name.vb: Get(Of TSaga)(Guid, Nullable(Of Int32))
  spec.csharp:
  - uid: Cqrs.Domain.ISagaUnitOfWork`1.Get``1(System.Guid,System.Nullable{System.Int32})
    name: Get<TSaga>
    nameWithType: ISagaUnitOfWork<ISingleSignOnToken>.Get<TSaga>
    fullName: Cqrs.Domain.ISagaUnitOfWork<Cqrs.Authentication.ISingleSignOnToken>.Get<TSaga>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Domain.ISagaUnitOfWork`1.Get``1(System.Guid,System.Nullable{System.Int32})
    name: Get(Of TSaga)
    nameWithType: ISagaUnitOfWork(Of ISingleSignOnToken).Get(Of TSaga)
    fullName: Cqrs.Domain.ISagaUnitOfWork(Of Cqrs.Authentication.ISingleSignOnToken).Get(Of TSaga)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
