### YamlMime:TableOfContent
- uid: Cqrs.Akka.Commands
  name: Cqrs.Akka.Commands
  items:
  - uid: Cqrs.Akka.Commands.AkkaCommandBus`1
    name: AkkaCommandBus<TAuthenticationToken>
    name.vb: AkkaCommandBus(Of TAuthenticationToken)
  - uid: Cqrs.Akka.Commands.AkkaCommandBusProxy`1
    name: AkkaCommandBusProxy<TAuthenticationToken>
    name.vb: AkkaCommandBusProxy(Of TAuthenticationToken)
  - uid: Cqrs.Akka.Commands.AkkaCommandBusProxy`1.BusActor
    name: AkkaCommandBusProxy<TAuthenticationToken>.BusActor
    name.vb: AkkaCommandBusProxy(Of TAuthenticationToken).BusActor
  - uid: Cqrs.Akka.Commands.ConcurrentAkkaCommandPublisher`2
    name: ConcurrentAkkaCommandPublisher<TAuthenticationToken, TTarget>
    name.vb: ConcurrentAkkaCommandPublisher(Of TAuthenticationToken, TTarget)
  - uid: Cqrs.Akka.Commands.IAkkaCommandPublisher`1
    name: IAkkaCommandPublisher<TAuthenticationToken>
    name.vb: IAkkaCommandPublisher(Of TAuthenticationToken)
  - uid: Cqrs.Akka.Commands.IAkkaCommandPublisherProxy`1
    name: IAkkaCommandPublisherProxy<TAuthenticationToken>
    name.vb: IAkkaCommandPublisherProxy(Of TAuthenticationToken)
  - uid: Cqrs.Akka.Commands.IConcurrentAkkaCommandPublisher`2
    name: IConcurrentAkkaCommandPublisher<TAuthenticationToken, TTarget>
    name.vb: IConcurrentAkkaCommandPublisher(Of TAuthenticationToken, TTarget)
  - uid: Cqrs.Akka.Commands.IConcurrentAkkaCommandPublisher`1
    name: IConcurrentAkkaCommandPublisher<TAuthenticationToken>
    name.vb: IConcurrentAkkaCommandPublisher(Of TAuthenticationToken)
- uid: Cqrs.Akka.Configuration
  name: Cqrs.Akka.Configuration
  items:
  - uid: Cqrs.Akka.Configuration.AkkaBusRegistrar`1
    name: AkkaBusRegistrar<TAuthenticationToken>
    name.vb: AkkaBusRegistrar(Of TAuthenticationToken)
  - uid: Cqrs.Akka.Configuration.IHandlerResolver
    name: IHandlerResolver
- uid: Cqrs.Akka.Domain
  name: Cqrs.Akka.Domain
  items:
  - uid: Cqrs.Akka.Domain.AkkaAggregateRepository`1
    name: AkkaAggregateRepository<TAuthenticationToken>
    name.vb: AkkaAggregateRepository(Of TAuthenticationToken)
  - uid: Cqrs.Akka.Domain.AkkaAggregateRoot`1
    name: AkkaAggregateRoot<TAuthenticationToken>
    name.vb: AkkaAggregateRoot(Of TAuthenticationToken)
  - uid: Cqrs.Akka.Domain.AkkaAggregateRootProxy`2
    name: AkkaAggregateRootProxy<TAuthenticationToken, TAggregateRoot>
    name.vb: AkkaAggregateRootProxy(Of TAuthenticationToken, TAggregateRoot)
  - uid: Cqrs.Akka.Domain.AkkaSaga`1
    name: AkkaSaga<TAuthenticationToken>
    name.vb: AkkaSaga(Of TAuthenticationToken)
  - uid: Cqrs.Akka.Domain.AkkaSagaProxy`2
    name: AkkaSagaProxy<TAuthenticationToken, TSaga>
    name.vb: AkkaSagaProxy(Of TAuthenticationToken, TSaga)
  - uid: Cqrs.Akka.Domain.AkkaSagaRepository`1
    name: AkkaSagaRepository<TAuthenticationToken>
    name.vb: AkkaSagaRepository(Of TAuthenticationToken)
  - uid: Cqrs.Akka.Domain.IAkkaAggregateRepository`1
    name: IAkkaAggregateRepository<TAuthenticationToken>
    name.vb: IAkkaAggregateRepository(Of TAuthenticationToken)
  - uid: Cqrs.Akka.Domain.IAkkaAggregateResolver
    name: IAkkaAggregateResolver
  - uid: Cqrs.Akka.Domain.IAkkaAggregateRootProxy`1
    name: IAkkaAggregateRootProxy<TAggregate>
    name.vb: IAkkaAggregateRootProxy(Of TAggregate)
  - uid: Cqrs.Akka.Domain.IAkkaSagaProxy`1
    name: IAkkaSagaProxy<TSaga>
    name.vb: IAkkaSagaProxy(Of TSaga)
  - uid: Cqrs.Akka.Domain.IAkkaSagaRepository`1
    name: IAkkaSagaRepository<TAuthenticationToken>
    name.vb: IAkkaSagaRepository(Of TAuthenticationToken)
  - uid: Cqrs.Akka.Domain.IAkkaSagaResolver
    name: IAkkaSagaResolver
- uid: Cqrs.Akka.Domain.Commands
  name: Cqrs.Akka.Domain.Commands
  items:
  - uid: Cqrs.Akka.Domain.Commands.GetAkkaAggregateRootId
    name: GetAkkaAggregateRootId
  - uid: Cqrs.Akka.Domain.Commands.GetAkkaAggregateRootVersion
    name: GetAkkaAggregateRootVersion
  - uid: Cqrs.Akka.Domain.Commands.GetAkkaSagaId
    name: GetAkkaSagaId
  - uid: Cqrs.Akka.Domain.Commands.GetAkkaSagaVersion
    name: GetAkkaSagaVersion
- uid: Cqrs.Akka.Events
  name: Cqrs.Akka.Events
  items:
  - uid: Cqrs.Akka.Events.AkkaEventBus`1
    name: AkkaEventBus<TAuthenticationToken>
    name.vb: AkkaEventBus(Of TAuthenticationToken)
  - uid: Cqrs.Akka.Events.AkkaEventBusProxy`1
    name: AkkaEventBusProxy<TAuthenticationToken>
    name.vb: AkkaEventBusProxy(Of TAuthenticationToken)
  - uid: Cqrs.Akka.Events.AkkaEventBusProxy`1.BusActor
    name: AkkaEventBusProxy<TAuthenticationToken>.BusActor
    name.vb: AkkaEventBusProxy(Of TAuthenticationToken).BusActor
  - uid: Cqrs.Akka.Events.AkkaEventHandler`1
    name: AkkaEventHandler<TAuthenticationToken>
    name.vb: AkkaEventHandler(Of TAuthenticationToken)
  - uid: Cqrs.Akka.Events.IAkkaEventPublisher`1
    name: IAkkaEventPublisher<TAuthenticationToken>
    name.vb: IAkkaEventPublisher(Of TAuthenticationToken)
  - uid: Cqrs.Akka.Events.IAkkaEventPublisherProxy`1
    name: IAkkaEventPublisherProxy<TAuthenticationToken>
    name.vb: IAkkaEventPublisherProxy(Of TAuthenticationToken)
- uid: Cqrs.Akka.Tests.Unit
  name: Cqrs.Akka.Tests.Unit
  items:
  - uid: Cqrs.Akka.Tests.Unit.AkkaUnitTests
    name: AkkaUnitTests
- uid: Cqrs.Akka.Tests.Unit.Aggregates
  name: Cqrs.Akka.Tests.Unit.Aggregates
  items:
  - uid: Cqrs.Akka.Tests.Unit.Aggregates.HelloWorld
    name: HelloWorld
- uid: Cqrs.Akka.Tests.Unit.Commands
  name: Cqrs.Akka.Tests.Unit.Commands
  items:
  - uid: Cqrs.Akka.Tests.Unit.Commands.EndConversationCommand
    name: EndConversationCommand
  - uid: Cqrs.Akka.Tests.Unit.Commands.ReplyToHelloWorldCommand
    name: ReplyToHelloWorldCommand
  - uid: Cqrs.Akka.Tests.Unit.Commands.SayHelloWorldCommand
    name: SayHelloWorldCommand
  - uid: Cqrs.Akka.Tests.Unit.Commands.UpdateCompletedConversationReportCommand
    name: UpdateCompletedConversationReportCommand
- uid: Cqrs.Akka.Tests.Unit.Commands.Handlers
  name: Cqrs.Akka.Tests.Unit.Commands.Handlers
  items:
  - uid: Cqrs.Akka.Tests.Unit.Commands.Handlers.EndConversationCommandHandler
    name: EndConversationCommandHandler
  - uid: Cqrs.Akka.Tests.Unit.Commands.Handlers.ReplyToHelloWorldCommandHandler
    name: ReplyToHelloWorldCommandHandler
  - uid: Cqrs.Akka.Tests.Unit.Commands.Handlers.SayHelloWorldCommandHandler
    name: SayHelloWorldCommandHandler
  - uid: Cqrs.Akka.Tests.Unit.Commands.Handlers.UpdateCompletedConversationReportCommandHandler
    name: UpdateCompletedConversationReportCommandHandler
- uid: Cqrs.Akka.Tests.Unit.Events
  name: Cqrs.Akka.Tests.Unit.Events
  items:
  - uid: Cqrs.Akka.Tests.Unit.Events.ConversationEnded
    name: ConversationEnded
  - uid: Cqrs.Akka.Tests.Unit.Events.HelloWorldRepliedTo
    name: HelloWorldRepliedTo
  - uid: Cqrs.Akka.Tests.Unit.Events.HelloWorldSaid
    name: HelloWorldSaid
- uid: Cqrs.Akka.Tests.Unit.Events.Handlers
  name: Cqrs.Akka.Tests.Unit.Events.Handlers
  items:
  - uid: Cqrs.Akka.Tests.Unit.Events.Handlers.ConversationEndedEventHandler
    name: ConversationEndedEventHandler
  - uid: Cqrs.Akka.Tests.Unit.Events.Handlers.HelloWorldRepliedToEventHandler
    name: HelloWorldRepliedToEventHandler
  - uid: Cqrs.Akka.Tests.Unit.Events.Handlers.HelloWorldRepliedToEventHandlerActor
    name: HelloWorldRepliedToEventHandlerActor
  - uid: Cqrs.Akka.Tests.Unit.Events.Handlers.HelloWorldRepliedToSendEndConversationCommandEventHandler
    name: HelloWorldRepliedToSendEndConversationCommandEventHandler
  - uid: Cqrs.Akka.Tests.Unit.Events.Handlers.HelloWorldRepliedToSendEndConversationCommandEventHandler.Actor
    name: HelloWorldRepliedToSendEndConversationCommandEventHandler.Actor
  - uid: Cqrs.Akka.Tests.Unit.Events.Handlers.HelloWorldSaidEventHandler
    name: HelloWorldSaidEventHandler
- uid: Cqrs.Akka.Tests.Unit.Sagas
  name: Cqrs.Akka.Tests.Unit.Sagas
  items:
  - uid: Cqrs.Akka.Tests.Unit.Sagas.ConversationReportProcessManager
    name: ConversationReportProcessManager
  - uid: Cqrs.Akka.Tests.Unit.Sagas.ConversationReportProcessManagerEventHandlers
    name: ConversationReportProcessManagerEventHandlers
- uid: Cqrs.Authentication
  name: Cqrs.Authentication
  items:
  - uid: Cqrs.Authentication.AuthenticationTokenHelper
    name: AuthenticationTokenHelper
  - uid: Cqrs.Authentication.AuthenticationTokenHelper`1
    name: AuthenticationTokenHelper<TAuthenticationToken>
    name.vb: AuthenticationTokenHelper(Of TAuthenticationToken)
  - uid: Cqrs.Authentication.BasicTokenResolver
    name: BasicTokenResolver
  - uid: Cqrs.Authentication.DefaultAuthenticationTokenHelper
    name: DefaultAuthenticationTokenHelper
  - uid: Cqrs.Authentication.DefaultSingleSignOnTokenFactory
    name: DefaultSingleSignOnTokenFactory
  - uid: Cqrs.Authentication.IAuthenticationTokenHelper`1
    name: IAuthenticationTokenHelper<TAuthenticationToken>
    name.vb: IAuthenticationTokenHelper(Of TAuthenticationToken)
  - uid: Cqrs.Authentication.IDefaultSingleSignOnTokenFactory
    name: IDefaultSingleSignOnTokenFactory
  - uid: Cqrs.Authentication.ISingleSignOnToken
    name: ISingleSignOnToken
  - uid: Cqrs.Authentication.ISingleSignOnTokenFactory`1
    name: ISingleSignOnTokenFactory<TSingleSignOnToken>
    name.vb: ISingleSignOnTokenFactory(Of TSingleSignOnToken)
  - uid: Cqrs.Authentication.ISingleSignOnTokenWithCompanyRsn
    name: ISingleSignOnTokenWithCompanyRsn
  - uid: Cqrs.Authentication.ISingleSignOnTokenWithUserRsn
    name: ISingleSignOnTokenWithUserRsn
  - uid: Cqrs.Authentication.ISingleSignOnTokenWithUserRsnAndCompanyRsn
    name: ISingleSignOnTokenWithUserRsnAndCompanyRsn
  - uid: Cqrs.Authentication.SingleSignOnToken
    name: SingleSignOnToken
  - uid: Cqrs.Authentication.SingleSignOnTokenFactory`1
    name: SingleSignOnTokenFactory<TSingleSignOnToken>
    name.vb: SingleSignOnTokenFactory(Of TSingleSignOnToken)
  - uid: Cqrs.Authentication.SingleSignOnTokenResolver
    name: SingleSignOnTokenResolver
  - uid: Cqrs.Authentication.SingleSignOnTokenWithCompanyRsn
    name: SingleSignOnTokenWithCompanyRsn
  - uid: Cqrs.Authentication.SingleSignOnTokenWithUserRsn
    name: SingleSignOnTokenWithUserRsn
  - uid: Cqrs.Authentication.SingleSignOnTokenWithUserRsnAndCompanyRsn
    name: SingleSignOnTokenWithUserRsnAndCompanyRsn
- uid: Cqrs.Azure.BlobStorage
  name: Cqrs.Azure.BlobStorage
  items:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1
    name: BlobStorageStore<TData>
    name.vb: BlobStorageStore(Of TData)
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions
    name: BlobStorageStoreExtensions
  - uid: Cqrs.Azure.BlobStorage.EntityTableEntity`1
    name: EntityTableEntity<TEntity>
    name.vb: EntityTableEntity(Of TEntity)
  - uid: Cqrs.Azure.BlobStorage.EventDataTableEntity`1
    name: EventDataTableEntity<TEventData>
    name.vb: EventDataTableEntity(Of TEventData)
  - uid: Cqrs.Azure.BlobStorage.IBlobStorageStoreConnectionStringFactory
    name: IBlobStorageStoreConnectionStringFactory
  - uid: Cqrs.Azure.BlobStorage.IEntityTableEntity`1
    name: IEntityTableEntity<TEntity>
    name.vb: IEntityTableEntity(Of TEntity)
  - uid: Cqrs.Azure.BlobStorage.IEventDataTableEntity`1
    name: IEventDataTableEntity<TEventData>
    name.vb: IEventDataTableEntity(Of TEventData)
  - uid: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory
    name: IStorageStoreConnectionStringFactory
  - uid: Cqrs.Azure.BlobStorage.ITableStorageStoreConnectionStringFactory
    name: ITableStorageStoreConnectionStringFactory
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2
    name: StorageStore<TData, TSource>
    name.vb: StorageStore(Of TData, TSource)
  - uid: Cqrs.Azure.BlobStorage.TableEntity`1
    name: TableEntity<TData>
    name.vb: TableEntity(Of TData)
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2
    name: TableStorageStore<TData, TCollectionItemData>
    name.vb: TableStorageStore(Of TData, TCollectionItemData)
  - uid: Cqrs.Azure.BlobStorage.TableStorageStoreExtensions
    name: TableStorageStoreExtensions
- uid: Cqrs.Azure.BlobStorage.DataStores
  name: Cqrs.Azure.BlobStorage.DataStores
  items:
  - uid: Cqrs.Azure.BlobStorage.DataStores.BlobStorageDataStore`1
    name: BlobStorageDataStore<TData>
    name.vb: BlobStorageDataStore(Of TData)
  - uid: Cqrs.Azure.BlobStorage.DataStores.BlobStorageDataStoreConnectionStringFactory
    name: BlobStorageDataStoreConnectionStringFactory
  - uid: Cqrs.Azure.BlobStorage.DataStores.IBlobStorageDataStoreConnectionStringFactory
    name: IBlobStorageDataStoreConnectionStringFactory
  - uid: Cqrs.Azure.BlobStorage.DataStores.ITableStorageDataStoreConnectionStringFactory
    name: ITableStorageDataStoreConnectionStringFactory
  - uid: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStore`1
    name: TableStorageDataStore<TData>
    name.vb: TableStorageDataStore(Of TData)
  - uid: Cqrs.Azure.BlobStorage.DataStores.TableStorageDataStoreConnectionStringFactory
    name: TableStorageDataStoreConnectionStringFactory
- uid: Cqrs.Azure.BlobStorage.Events
  name: Cqrs.Azure.BlobStorage.Events
  items:
  - uid: Cqrs.Azure.BlobStorage.Events.BlobStorageEventStore`1
    name: BlobStorageEventStore<TAuthenticationToken>
    name.vb: BlobStorageEventStore(Of TAuthenticationToken)
  - uid: Cqrs.Azure.BlobStorage.Events.BlobStorageEventStore`1.RawBlobStorageEventStore
    name: BlobStorageEventStore<TAuthenticationToken>.RawBlobStorageEventStore
    name.vb: BlobStorageEventStore(Of TAuthenticationToken).RawBlobStorageEventStore
  - uid: Cqrs.Azure.BlobStorage.Events.BlobStorageEventStoreConnectionStringFactory
    name: BlobStorageEventStoreConnectionStringFactory
  - uid: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore`1
    name: TableStorageEventStore<TAuthenticationToken>
    name.vb: TableStorageEventStore(Of TAuthenticationToken)
  - uid: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore`1.RawTableStorageEventStore
    name: TableStorageEventStore<TAuthenticationToken>.RawTableStorageEventStore
    name.vb: TableStorageEventStore(Of TAuthenticationToken).RawTableStorageEventStore
  - uid: Cqrs.Azure.BlobStorage.Events.TableStorageEventStoreConnectionStringFactory
    name: TableStorageEventStoreConnectionStringFactory
- uid: Cqrs.Azure.BlobStorage.Factories
  name: Cqrs.Azure.BlobStorage.Factories
  items:
  - uid: Cqrs.Azure.BlobStorage.Factories.BlobStorageDataStoreFactory
    name: BlobStorageDataStoreFactory
- uid: Cqrs.Azure.BlobStorage.Repositories
  name: Cqrs.Azure.BlobStorage.Repositories
  items:
  - uid: Cqrs.Azure.BlobStorage.Repositories.BlobStorageRepository`3
    name: BlobStorageRepository<TQueryStrategy, TQueryBuilder, TData>
    name.vb: BlobStorageRepository(Of TQueryStrategy, TQueryBuilder, TData)
  - uid: Cqrs.Azure.BlobStorage.Repositories.TableStorageRepository`3
    name: TableStorageRepository<TQueryStrategy, TQueryBuilder, TData>
    name.vb: TableStorageRepository(Of TQueryStrategy, TQueryBuilder, TData)
- uid: Cqrs.Azure.BlobStorage.Repositories.Queries
  name: Cqrs.Azure.BlobStorage.Repositories.Queries
  items:
  - uid: Cqrs.Azure.BlobStorage.Repositories.Queries.BlobStorageQueryBuilder`2
    name: BlobStorageQueryBuilder<TQueryStrategy, TData>
    name.vb: BlobStorageQueryBuilder(Of TQueryStrategy, TData)
- uid: Cqrs.Azure.BlobStorage.Test.Integration
  name: Cqrs.Azure.BlobStorage.Test.Integration
  items:
  - uid: Cqrs.Azure.BlobStorage.Test.Integration.BlobStorageDataStoreTests
    name: BlobStorageDataStoreTests
  - uid: Cqrs.Azure.BlobStorage.Test.Integration.BlobStorageEventStoreTests
    name: BlobStorageEventStoreTests
  - uid: Cqrs.Azure.BlobStorage.Test.Integration.TableStorageDataStoreTests
    name: TableStorageDataStoreTests
  - uid: Cqrs.Azure.BlobStorage.Test.Integration.TableStorageEventStoreTests
    name: TableStorageEventStoreTests
  - uid: Cqrs.Azure.BlobStorage.Test.Integration.TestEntity
    name: TestEntity
  - uid: Cqrs.Azure.BlobStorage.Test.Integration.TestQueryBuilder`1
    name: TestQueryBuilder<TData>
    name.vb: TestQueryBuilder(Of TData)
  - uid: Cqrs.Azure.BlobStorage.Test.Integration.TestQueryStrategy
    name: TestQueryStrategy
- uid: Cqrs.Azure.ConfigurationManager
  name: Cqrs.Azure.ConfigurationManager
  items:
  - uid: Cqrs.Azure.ConfigurationManager.CloudConfigurationManager
    name: CloudConfigurationManager
  - uid: Cqrs.Azure.ConfigurationManager.TelemetryCoreHost`1
    name: TelemetryCoreHost<TAuthenticationToken>
    name.vb: TelemetryCoreHost(Of TAuthenticationToken)
- uid: Cqrs.Azure.DocumentDb
  name: Cqrs.Azure.DocumentDb
  items:
  - uid: Cqrs.Azure.DocumentDb.AzureDocumentDbHelper
    name: AzureDocumentDbHelper
  - uid: Cqrs.Azure.DocumentDb.DocumentDbException
    name: DocumentDbException
  - uid: Cqrs.Azure.DocumentDb.GlobalAzureDocumentDbConnectionCache
    name: GlobalAzureDocumentDbConnectionCache
  - uid: Cqrs.Azure.DocumentDb.IAzureDocumentDbConnectionCache
    name: IAzureDocumentDbConnectionCache
  - uid: Cqrs.Azure.DocumentDb.IAzureDocumentDbHelper
    name: IAzureDocumentDbHelper
  - uid: Cqrs.Azure.DocumentDb.ThreadedAzureDocumentDbConnectionCache
    name: ThreadedAzureDocumentDbConnectionCache
- uid: Cqrs.Azure.DocumentDb.DataStores
  name: Cqrs.Azure.DocumentDb.DataStores
  items:
  - uid: Cqrs.Azure.DocumentDb.DataStores.AzureDocumentDbDataStore`1
    name: AzureDocumentDbDataStore<TData>
    name.vb: AzureDocumentDbDataStore(Of TData)
- uid: Cqrs.Azure.DocumentDb.Entities
  name: Cqrs.Azure.DocumentDb.Entities
  items:
  - uid: Cqrs.Azure.DocumentDb.Entities.AzureDocumentDbEntity
    name: AzureDocumentDbEntity
- uid: Cqrs.Azure.DocumentDb.Events
  name: Cqrs.Azure.DocumentDb.Events
  items:
  - uid: Cqrs.Azure.DocumentDb.Events.AzureDocumentDbEventBuilder`1
    name: AzureDocumentDbEventBuilder<TAuthenticationToken>
    name.vb: AzureDocumentDbEventBuilder(Of TAuthenticationToken)
  - uid: Cqrs.Azure.DocumentDb.Events.AzureDocumentDbEventDeserialiser`1
    name: AzureDocumentDbEventDeserialiser<TAuthenticationToken>
    name.vb: AzureDocumentDbEventDeserialiser(Of TAuthenticationToken)
  - uid: Cqrs.Azure.DocumentDb.Events.AzureDocumentDbEventStore`1
    name: AzureDocumentDbEventStore<TAuthenticationToken>
    name.vb: AzureDocumentDbEventStore(Of TAuthenticationToken)
  - uid: Cqrs.Azure.DocumentDb.Events.AzureDocumentDbEventStoreConnectionStringFactory
    name: AzureDocumentDbEventStoreConnectionStringFactory
  - uid: Cqrs.Azure.DocumentDb.Events.IAzureDocumentDbEventStoreConnectionStringFactory
    name: IAzureDocumentDbEventStoreConnectionStringFactory
- uid: Cqrs.Azure.DocumentDb.Factories
  name: Cqrs.Azure.DocumentDb.Factories
  items:
  - uid: Cqrs.Azure.DocumentDb.Factories.AzureDocumentDbDataStoreConnectionStringFactory
    name: AzureDocumentDbDataStoreConnectionStringFactory
  - uid: Cqrs.Azure.DocumentDb.Factories.AzureDocumentDbDataStoreFactory
    name: AzureDocumentDbDataStoreFactory
  - uid: Cqrs.Azure.DocumentDb.Factories.IAzureDocumentDbDataStoreConnectionStringFactory
    name: IAzureDocumentDbDataStoreConnectionStringFactory
- uid: Cqrs.Azure.DocumentDb.Repositories
  name: Cqrs.Azure.DocumentDb.Repositories
  items:
  - uid: Cqrs.Azure.DocumentDb.Repositories.AzureRepository`3
    name: AzureRepository<TQueryStrategy, TQueryBuilder, TData>
    name.vb: AzureRepository(Of TQueryStrategy, TQueryBuilder, TData)
- uid: Cqrs.Azure.DocumentDb.Repositories.Authentication
  name: Cqrs.Azure.DocumentDb.Repositories.Authentication
  items:
  - uid: Cqrs.Azure.DocumentDb.Repositories.Authentication.AzureSingleSignOnToken
    name: AzureSingleSignOnToken
- uid: Cqrs.Azure.EventHub.CommandBus.Configuration
  name: Cqrs.Azure.EventHub.CommandBus.Configuration
  items:
  - uid: Cqrs.Azure.EventHub.CommandBus.Configuration.AzureCommandBusPublisherModule`1
    name: AzureCommandBusPublisherModule<TAuthenticationToken>
    name.vb: AzureCommandBusPublisherModule(Of TAuthenticationToken)
  - uid: Cqrs.Azure.EventHub.CommandBus.Configuration.AzureCommandBusReceiverModule`1
    name: AzureCommandBusReceiverModule<TAuthenticationToken>
    name.vb: AzureCommandBusReceiverModule(Of TAuthenticationToken)
  - uid: Cqrs.Azure.EventHub.CommandBus.Configuration.AzureCommandBusSenderModule`1
    name: AzureCommandBusSenderModule<TAuthenticationToken>
    name.vb: AzureCommandBusSenderModule(Of TAuthenticationToken)
  - uid: Cqrs.Azure.EventHub.CommandBus.Configuration.AzureCommandHubPublisherModule`1
    name: AzureCommandHubPublisherModule<TAuthenticationToken>
    name.vb: AzureCommandHubPublisherModule(Of TAuthenticationToken)
  - uid: Cqrs.Azure.EventHub.CommandBus.Configuration.AzureCommandHubReceiverModule`1
    name: AzureCommandHubReceiverModule<TAuthenticationToken>
    name.vb: AzureCommandHubReceiverModule(Of TAuthenticationToken)
  - uid: Cqrs.Azure.EventHub.CommandBus.Configuration.AzureQueuedCommandBusReceiverModule`1
    name: AzureQueuedCommandBusReceiverModule<TAuthenticationToken>
    name.vb: AzureQueuedCommandBusReceiverModule(Of TAuthenticationToken)
  - uid: Cqrs.Azure.EventHub.CommandBus.Configuration.AzureQueuedCommandHubReceiverModule`1
    name: AzureQueuedCommandHubReceiverModule<TAuthenticationToken>
    name.vb: AzureQueuedCommandHubReceiverModule(Of TAuthenticationToken)
- uid: Cqrs.Azure.EventHub.EventBus.Configuration
  name: Cqrs.Azure.EventHub.EventBus.Configuration
  items:
  - uid: Cqrs.Azure.EventHub.EventBus.Configuration.AzureEventBusPublisherModule`1
    name: AzureEventBusPublisherModule<TAuthenticationToken>
    name.vb: AzureEventBusPublisherModule(Of TAuthenticationToken)
  - uid: Cqrs.Azure.EventHub.EventBus.Configuration.AzureEventBusReceiverModule`1
    name: AzureEventBusReceiverModule<TAuthenticationToken>
    name.vb: AzureEventBusReceiverModule(Of TAuthenticationToken)
  - uid: Cqrs.Azure.EventHub.EventBus.Configuration.AzureEventHubPublisherModule`1
    name: AzureEventHubPublisherModule<TAuthenticationToken>
    name.vb: AzureEventHubPublisherModule(Of TAuthenticationToken)
  - uid: Cqrs.Azure.EventHub.EventBus.Configuration.AzureEventHubReceiverModule`1
    name: AzureEventHubReceiverModule<TAuthenticationToken>
    name.vb: AzureEventHubReceiverModule(Of TAuthenticationToken)
  - uid: Cqrs.Azure.EventHub.EventBus.Configuration.AzureEventPublisherModule`1
    name: AzureEventPublisherModule<TAuthenticationToken>
    name.vb: AzureEventPublisherModule(Of TAuthenticationToken)
  - uid: Cqrs.Azure.EventHub.EventBus.Configuration.AzureQueuedEventBusReceiverModule`1
    name: AzureQueuedEventBusReceiverModule<TAuthenticationToken>
    name.vb: AzureQueuedEventBusReceiverModule(Of TAuthenticationToken)
  - uid: Cqrs.Azure.EventHub.EventBus.Configuration.AzureQueuedEventHubReceiverModule`1
    name: AzureQueuedEventHubReceiverModule<TAuthenticationToken>
    name.vb: AzureQueuedEventHubReceiverModule(Of TAuthenticationToken)
- uid: Cqrs.Azure.ServiceBus
  name: Cqrs.Azure.ServiceBus
  items:
  - uid: Cqrs.Azure.ServiceBus.AzureBus`1
    name: AzureBus<TAuthenticationToken>
    name.vb: AzureBus(Of TAuthenticationToken)
  - uid: Cqrs.Azure.ServiceBus.AzureBusHelper`1
    name: AzureBusHelper<TAuthenticationToken>
    name.vb: AzureBusHelper(Of TAuthenticationToken)
  - uid: Cqrs.Azure.ServiceBus.AzureCommandBus`1
    name: AzureCommandBus<TAuthenticationToken>
    name.vb: AzureCommandBus(Of TAuthenticationToken)
  - uid: Cqrs.Azure.ServiceBus.AzureCommandBusPublisher`1
    name: AzureCommandBusPublisher<TAuthenticationToken>
    name.vb: AzureCommandBusPublisher(Of TAuthenticationToken)
  - uid: Cqrs.Azure.ServiceBus.AzureCommandBusReceiver`1
    name: AzureCommandBusReceiver<TAuthenticationToken>
    name.vb: AzureCommandBusReceiver(Of TAuthenticationToken)
  - uid: Cqrs.Azure.ServiceBus.AzureEventBus`1
    name: AzureEventBus<TAuthenticationToken>
    name.vb: AzureEventBus(Of TAuthenticationToken)
  - uid: Cqrs.Azure.ServiceBus.AzureEventBusPublisher`1
    name: AzureEventBusPublisher<TAuthenticationToken>
    name.vb: AzureEventBusPublisher(Of TAuthenticationToken)
  - uid: Cqrs.Azure.ServiceBus.AzureEventBusReceiver`1
    name: AzureEventBusReceiver<TAuthenticationToken>
    name.vb: AzureEventBusReceiver(Of TAuthenticationToken)
  - uid: Cqrs.Azure.ServiceBus.AzureEventHub`1
    name: AzureEventHub<TAuthenticationToken>
    name.vb: AzureEventHub(Of TAuthenticationToken)
  - uid: Cqrs.Azure.ServiceBus.AzureEventHubBus`1
    name: AzureEventHubBus<TAuthenticationToken>
    name.vb: AzureEventHubBus(Of TAuthenticationToken)
  - uid: Cqrs.Azure.ServiceBus.AzureQueuedCommandBusReceiver`1
    name: AzureQueuedCommandBusReceiver<TAuthenticationToken>
    name.vb: AzureQueuedCommandBusReceiver(Of TAuthenticationToken)
  - uid: Cqrs.Azure.ServiceBus.AzureQueuedEventBusReceiver`1
    name: AzureQueuedEventBusReceiver<TAuthenticationToken>
    name.vb: AzureQueuedEventBusReceiver(Of TAuthenticationToken)
  - uid: Cqrs.Azure.ServiceBus.AzureServiceBus`1
    name: AzureServiceBus<TAuthenticationToken>
    name.vb: AzureServiceBus(Of TAuthenticationToken)
  - uid: Cqrs.Azure.ServiceBus.IAzureBusHelper`1
    name: IAzureBusHelper<TAuthenticationToken>
    name.vb: IAzureBusHelper(Of TAuthenticationToken)
  - uid: Cqrs.Azure.ServiceBus.IMessageSerialiser`1
    name: IMessageSerialiser<TAuthenticationToken>
    name.vb: IMessageSerialiser(Of TAuthenticationToken)
  - uid: Cqrs.Azure.ServiceBus.MessageSerialiser`1
    name: MessageSerialiser<TAuthenticationToken>
    name.vb: MessageSerialiser(Of TAuthenticationToken)
- uid: Cqrs.Azure.ServiceBus.Tests.Integration
  name: Cqrs.Azure.ServiceBus.Tests.Integration
  items:
  - uid: Cqrs.Azure.ServiceBus.Tests.Integration.GuidAuthenticationTokenHelper
    name: GuidAuthenticationTokenHelper
  - uid: Cqrs.Azure.ServiceBus.Tests.Integration.RoundTripTests
    name: RoundTripTests
  - uid: Cqrs.Azure.ServiceBus.Tests.Integration.TestCommandSuccessHandler
    name: TestCommandSuccessHandler
  - uid: Cqrs.Azure.ServiceBus.Tests.Integration.TestEventSuccessHandler
    name: TestEventSuccessHandler
- uid: Cqrs.Azure.ServiceBus.Tests.Unit
  name: Cqrs.Azure.ServiceBus.Tests.Unit
  items:
  - uid: Cqrs.Azure.ServiceBus.Tests.Unit.MessageSerialiserTests
    name: MessageSerialiserTests
  - uid: Cqrs.Azure.ServiceBus.Tests.Unit.TestCommand
    name: TestCommand
  - uid: Cqrs.Azure.ServiceBus.Tests.Unit.TestEvent
    name: TestEvent
- uid: Cqrs.Azure.Storage.DataStores
  name: Cqrs.Azure.Storage.DataStores
  items:
  - uid: Cqrs.Azure.Storage.DataStores.TableStorageDataStore`1
    name: TableStorageDataStore<TData>
    name.vb: TableStorageDataStore(Of TData)
  - uid: Cqrs.Azure.Storage.DataStores.TableStorageDataStoreConnectionStringFactory`1
    name: TableStorageDataStoreConnectionStringFactory<TData>
    name.vb: TableStorageDataStoreConnectionStringFactory(Of TData)
- uid: Cqrs.Azure.Storage.Events
  name: Cqrs.Azure.Storage.Events
  items:
  - uid: Cqrs.Azure.Storage.Events.TableStorageEventStore`1
    name: TableStorageEventStore<TAuthenticationToken>
    name.vb: TableStorageEventStore(Of TAuthenticationToken)
  - uid: Cqrs.Azure.Storage.Events.TableStorageEventStore`1.RawTableStorageEventStore
    name: TableStorageEventStore<TAuthenticationToken>.RawTableStorageEventStore
    name.vb: TableStorageEventStore(Of TAuthenticationToken).RawTableStorageEventStore
- uid: Cqrs.Azure.Storage.Test.Integration
  name: Cqrs.Azure.Storage.Test.Integration
  items:
  - uid: Cqrs.Azure.Storage.Test.Integration.TableStorageDataStoreTests
    name: TableStorageDataStoreTests
  - uid: Cqrs.Azure.Storage.Test.Integration.TableStorageEventStoreTests
    name: TableStorageEventStoreTests
- uid: Cqrs.Azure.WebJobs
  name: Cqrs.Azure.WebJobs
  items:
  - uid: Cqrs.Azure.WebJobs.CqrsJobHost`1
    name: CqrsJobHost<TAuthenticationToken>
    name.vb: CqrsJobHost(Of TAuthenticationToken)
- uid: Cqrs.Bus
  name: Cqrs.Bus
  items:
  - uid: Cqrs.Bus.BusHelper
    name: BusHelper
  - uid: Cqrs.Bus.FileBasedLastEventProcessedStore
    name: FileBasedLastEventProcessedStore
  - uid: Cqrs.Bus.IBusHelper
    name: IBusHelper
  - uid: Cqrs.Bus.ICommandHandlerRegistrar
    name: ICommandHandlerRegistrar
  - uid: Cqrs.Bus.IEventHandlerRegistrar
    name: IEventHandlerRegistrar
  - uid: Cqrs.Bus.IHandlerRegistrar
    name: IHandlerRegistrar
  - uid: Cqrs.Bus.InProcessBus`1
    name: InProcessBus<TAuthenticationToken>
    name.vb: InProcessBus(Of TAuthenticationToken)
  - uid: Cqrs.Bus.IStoreLastEventProcessed
    name: IStoreLastEventProcessed
  - uid: Cqrs.Bus.QueuedCommandBusReceiver`1
    name: QueuedCommandBusReceiver<TAuthenticationToken>
    name.vb: QueuedCommandBusReceiver(Of TAuthenticationToken)
  - uid: Cqrs.Bus.Route
    name: Route
  - uid: Cqrs.Bus.RouteHandlerDelegate
    name: RouteHandlerDelegate
  - uid: Cqrs.Bus.RouteManager
    name: RouteManager
- uid: Cqrs.Cache
  name: Cqrs.Cache
  items:
  - uid: Cqrs.Cache.CacheRepository`1
    name: CacheRepository<TAuthenticationToken>
    name.vb: CacheRepository(Of TAuthenticationToken)
- uid: Cqrs.Commands
  name: Cqrs.Commands
  items:
  - uid: Cqrs.Commands.DtoCommand`2
    name: DtoCommand<TAuthenticationToken, TDto>
    name.vb: DtoCommand(Of TAuthenticationToken, TDto)
  - uid: Cqrs.Commands.DtoCommandHandler`2
    name: DtoCommandHandler<TAuthenticationToken, TDto>
    name.vb: DtoCommandHandler(Of TAuthenticationToken, TDto)
  - uid: Cqrs.Commands.ICommand`1
    name: ICommand<TAuthenticationToken>
    name.vb: ICommand(Of TAuthenticationToken)
  - uid: Cqrs.Commands.ICommandHandle
    name: ICommandHandle
  - uid: Cqrs.Commands.ICommandHandler`2
    name: ICommandHandler<TAuthenticationToken, TCommand>
    name.vb: ICommandHandler(Of TAuthenticationToken, TCommand)
  - uid: Cqrs.Commands.ICommandPublisher`1
    name: ICommandPublisher<TAuthenticationToken>
    name.vb: ICommandPublisher(Of TAuthenticationToken)
  - uid: Cqrs.Commands.ICommandReceiver
    name: ICommandReceiver
  - uid: Cqrs.Commands.ICommandReceiver`1
    name: ICommandReceiver<TAuthenticationToken>
    name.vb: ICommandReceiver(Of TAuthenticationToken)
  - uid: Cqrs.Commands.ICommandSender`1
    name: ICommandSender<TAuthenticationToken>
    name.vb: ICommandSender(Of TAuthenticationToken)
  - uid: Cqrs.Commands.ICommandValidator`2
    name: ICommandValidator<TAuthenticationToken, TCommand>
    name.vb: ICommandValidator(Of TAuthenticationToken, TCommand)
  - uid: Cqrs.Commands.IPublishAndWaitCommandPublisher`1
    name: IPublishAndWaitCommandPublisher<TAuthenticationToken>
    name.vb: IPublishAndWaitCommandPublisher(Of TAuthenticationToken)
  - uid: Cqrs.Commands.ISendAndWaitCommandSender`1
    name: ISendAndWaitCommandSender<TAuthenticationToken>
    name.vb: ISendAndWaitCommandSender(Of TAuthenticationToken)
- uid: Cqrs.Configuration
  name: Cqrs.Configuration
  items:
  - uid: Cqrs.Configuration.BusRegistrar
    name: BusRegistrar
  - uid: Cqrs.Configuration.ConfigurationExtensions
    name: ConfigurationExtensions
  - uid: Cqrs.Configuration.ConfigurationManager
    name: ConfigurationManager
  - uid: Cqrs.Configuration.DependencyResolver
    name: DependencyResolver
  - uid: Cqrs.Configuration.HandlerDelegate
    name: HandlerDelegate
  - uid: Cqrs.Configuration.HandlerDelegate`1
    name: HandlerDelegate<T>
    name.vb: HandlerDelegate(Of T)
  - uid: Cqrs.Configuration.IConfigurationManager
    name: IConfigurationManager
  - uid: Cqrs.Configuration.IDependencyResolver
    name: IDependencyResolver
  - uid: Cqrs.Configuration.ITelemetryHelperExtensions
    name: ITelemetryHelperExtensions
- uid: Cqrs.DataStores
  name: Cqrs.DataStores
  items:
  - uid: Cqrs.DataStores.IDataStore`1
    name: IDataStore<TData>
    name.vb: IDataStore(Of TData)
  - uid: Cqrs.DataStores.InProcessDataStore`1
    name: InProcessDataStore<TData>
    name.vb: InProcessDataStore(Of TData)
  - uid: Cqrs.DataStores.SqlDataStore`1
    name: SqlDataStore<TData>
    name.vb: SqlDataStore(Of TData)
  - uid: Cqrs.DataStores.SqlDataStoreExtension
    name: SqlDataStoreExtension
- uid: Cqrs.Domain
  name: Cqrs.Domain
  items:
  - uid: Cqrs.Domain.AggregateRepository`1
    name: AggregateRepository<TAuthenticationToken>
    name.vb: AggregateRepository(Of TAuthenticationToken)
  - uid: Cqrs.Domain.AggregateRoot`1
    name: AggregateRoot<TAuthenticationToken>
    name.vb: AggregateRoot(Of TAuthenticationToken)
  - uid: Cqrs.Domain.DtoAggregateRoot`2
    name: DtoAggregateRoot<TAuthenticationToken, TDto>
    name.vb: DtoAggregateRoot(Of TAuthenticationToken, TDto)
  - uid: Cqrs.Domain.IAggregateRepository`1
    name: IAggregateRepository<TAuthenticationToken>
    name.vb: IAggregateRepository(Of TAuthenticationToken)
  - uid: Cqrs.Domain.IAggregateRoot`1
    name: IAggregateRoot<TAuthenticationToken>
    name.vb: IAggregateRoot(Of TAuthenticationToken)
  - uid: Cqrs.Domain.IDto
    name: IDto
  - uid: Cqrs.Domain.ISaga`1
    name: ISaga<TAuthenticationToken>
    name.vb: ISaga(Of TAuthenticationToken)
  - uid: Cqrs.Domain.ISagaRepository`1
    name: ISagaRepository<TAuthenticationToken>
    name.vb: ISagaRepository(Of TAuthenticationToken)
  - uid: Cqrs.Domain.ISagaUnitOfWork`1
    name: ISagaUnitOfWork<TAuthenticationToken>
    name.vb: ISagaUnitOfWork(Of TAuthenticationToken)
  - uid: Cqrs.Domain.IUnitOfWork`1
    name: IUnitOfWork<TAuthenticationToken>
    name.vb: IUnitOfWork(Of TAuthenticationToken)
  - uid: Cqrs.Domain.Saga`1
    name: Saga<TAuthenticationToken>
    name.vb: Saga(Of TAuthenticationToken)
  - uid: Cqrs.Domain.SagaEventHandler`2
    name: SagaEventHandler<TAuthenticationToken, TSaga>
    name.vb: SagaEventHandler(Of TAuthenticationToken, TSaga)
  - uid: Cqrs.Domain.SagaRepository`1
    name: SagaRepository<TAuthenticationToken>
    name.vb: SagaRepository(Of TAuthenticationToken)
  - uid: Cqrs.Domain.SagaUnitOfWork`1
    name: SagaUnitOfWork<TAuthenticationToken>
    name.vb: SagaUnitOfWork(Of TAuthenticationToken)
  - uid: Cqrs.Domain.UnitOfWork`1
    name: UnitOfWork<TAuthenticationToken>
    name.vb: UnitOfWork(Of TAuthenticationToken)
- uid: Cqrs.Domain.Exceptions
  name: Cqrs.Domain.Exceptions
  items:
  - uid: Cqrs.Domain.Exceptions.AggregateNotFoundException`2
    name: AggregateNotFoundException<TAggregateRoot, TAuthenticationToken>
    name.vb: AggregateNotFoundException(Of TAggregateRoot, TAuthenticationToken)
  - uid: Cqrs.Domain.Exceptions.AggregateOrEventMissingIdException
    name: AggregateOrEventMissingIdException
  - uid: Cqrs.Domain.Exceptions.ConcurrencyException
    name: ConcurrencyException
  - uid: Cqrs.Domain.Exceptions.DuplicateCreateCommandException
    name: DuplicateCreateCommandException
  - uid: Cqrs.Domain.Exceptions.DuplicateEventException`2
    name: DuplicateEventException<TAggregateRoot, TAuthenticationToken>
    name.vb: DuplicateEventException(Of TAggregateRoot, TAuthenticationToken)
  - uid: Cqrs.Domain.Exceptions.DuplicateSagaEventException`2
    name: DuplicateSagaEventException<TSaga, TAuthenticationToken>
    name.vb: DuplicateSagaEventException(Of TSaga, TAuthenticationToken)
  - uid: Cqrs.Domain.Exceptions.EntityNotFoundException`1
    name: EntityNotFoundException<TEntity>
    name.vb: EntityNotFoundException(Of TEntity)
  - uid: Cqrs.Domain.Exceptions.EventsOutOfOrderException
    name: EventsOutOfOrderException
  - uid: Cqrs.Domain.Exceptions.MissingParameterLessConstructorException
    name: MissingParameterLessConstructorException
  - uid: Cqrs.Domain.Exceptions.SagaNotFoundException`2
    name: SagaNotFoundException<TSaga, TAuthenticationToken>
    name.vb: SagaNotFoundException(Of TSaga, TAuthenticationToken)
- uid: Cqrs.Domain.Factories
  name: Cqrs.Domain.Factories
  items:
  - uid: Cqrs.Domain.Factories.AggregateFactory
    name: AggregateFactory
  - uid: Cqrs.Domain.Factories.IAggregateFactory
    name: IAggregateFactory
- uid: Cqrs.Entities
  name: Cqrs.Entities
  items:
  - uid: Cqrs.Entities.DateRange
    name: DateRange
  - uid: Cqrs.Entities.DecimalRange
    name: DecimalRange
  - uid: Cqrs.Entities.Entity
    name: Entity
  - uid: Cqrs.Entities.IEntity
    name: IEntity
  - uid: Cqrs.Entities.IntegerRange
    name: IntegerRange
  - uid: Cqrs.Entities.Range`1
    name: Range<TPrimitive>
    name.vb: Range(Of TPrimitive)
- uid: Cqrs.Events
  name: Cqrs.Events
  items:
  - uid: Cqrs.Events.DefaultEventBuilder`1
    name: DefaultEventBuilder<TAuthenticationToken>
    name.vb: DefaultEventBuilder(Of TAuthenticationToken)
  - uid: Cqrs.Events.DefaultJsonSerializerSettings
    name: DefaultJsonSerializerSettings
  - uid: Cqrs.Events.DtoAggregateEvent`2
    name: DtoAggregateEvent<TAuthenticationToken, TDto>
    name.vb: DtoAggregateEvent(Of TAuthenticationToken, TDto)
  - uid: Cqrs.Events.DtoAggregateEventType
    name: DtoAggregateEventType
  - uid: Cqrs.Events.DuplicateCreateCommandEvent`1
    name: DuplicateCreateCommandEvent<TAuthenticationToken>
    name.vb: DuplicateCreateCommandEvent(Of TAuthenticationToken)
  - uid: Cqrs.Events.EventBuilder`1
    name: EventBuilder<TAuthenticationToken>
    name.vb: EventBuilder(Of TAuthenticationToken)
  - uid: Cqrs.Events.EventData
    name: EventData
  - uid: Cqrs.Events.EventDataResolver`1
    name: EventDataResolver<TAuthenticationToken>
    name.vb: EventDataResolver(Of TAuthenticationToken)
  - uid: Cqrs.Events.EventDeserialiser`1
    name: EventDeserialiser<TAuthenticationToken>
    name.vb: EventDeserialiser(Of TAuthenticationToken)
  - uid: Cqrs.Events.EventStore`1
    name: EventStore<TAuthenticationToken>
    name.vb: EventStore(Of TAuthenticationToken)
  - uid: Cqrs.Events.EventStoreRetentionLevelAttribute
    name: EventStoreRetentionLevelAttribute
  - uid: Cqrs.Events.IEvent`1
    name: IEvent<TAuthenticationToken>
    name.vb: IEvent(Of TAuthenticationToken)
  - uid: Cqrs.Events.IEventBuilder`1
    name: IEventBuilder<TAuthenticationToken>
    name.vb: IEventBuilder(Of TAuthenticationToken)
  - uid: Cqrs.Events.IEventDeserialiser`1
    name: IEventDeserialiser<TAuthenticationToken>
    name.vb: IEventDeserialiser(Of TAuthenticationToken)
  - uid: Cqrs.Events.IEventHandler
    name: IEventHandler
  - uid: Cqrs.Events.IEventHandler`2
    name: IEventHandler<TAuthenticationToken, TEvent>
    name.vb: IEventHandler(Of TAuthenticationToken, TEvent)
  - uid: Cqrs.Events.IEventHandler`3
    name: IEventHandler<TAuthenticationToken, TTarget, TEvent>
    name.vb: IEventHandler(Of TAuthenticationToken, TTarget, TEvent)
  - uid: Cqrs.Events.IEventPublisher`1
    name: IEventPublisher<TAuthenticationToken>
    name.vb: IEventPublisher(Of TAuthenticationToken)
  - uid: Cqrs.Events.IEventReceiver
    name: IEventReceiver
  - uid: Cqrs.Events.IEventReceiver`1
    name: IEventReceiver<TAuthenticationToken>
    name.vb: IEventReceiver(Of TAuthenticationToken)
  - uid: Cqrs.Events.IEventStore`1
    name: IEventStore<TAuthenticationToken>
    name.vb: IEventStore(Of TAuthenticationToken)
  - uid: Cqrs.Events.InProcessEventStore`1
    name: InProcessEventStore<TAuthenticationToken>
    name.vb: InProcessEventStore(Of TAuthenticationToken)
  - uid: Cqrs.Events.ISagaEvent`1
    name: ISagaEvent<TAuthenticationToken>
    name.vb: ISagaEvent(Of TAuthenticationToken)
  - uid: Cqrs.Events.MemoryCacheEventStore`1
    name: MemoryCacheEventStore<TAuthenticationToken>
    name.vb: MemoryCacheEventStore(Of TAuthenticationToken)
  - uid: Cqrs.Events.NotifyCallerEventAttribute
    name: NotifyCallerEventAttribute
  - uid: Cqrs.Events.NotifyEveryoneEventAttribute
    name: NotifyEveryoneEventAttribute
  - uid: Cqrs.Events.NotifyEveryoneExceptCallerEventAttribute
    name: NotifyEveryoneExceptCallerEventAttribute
  - uid: Cqrs.Events.PrivateEventAttribute
    name: PrivateEventAttribute
  - uid: Cqrs.Events.PublicEventAttribute
    name: PublicEventAttribute
  - uid: Cqrs.Events.ReplicatedSqlEventStore`1
    name: ReplicatedSqlEventStore<TAuthenticationToken>
    name.vb: ReplicatedSqlEventStore(Of TAuthenticationToken)
  - uid: Cqrs.Events.SagaEvent`1
    name: SagaEvent<TAuthenticationToken>
    name.vb: SagaEvent(Of TAuthenticationToken)
  - uid: Cqrs.Events.SqlEventStore`1
    name: SqlEventStore<TAuthenticationToken>
    name.vb: SqlEventStore(Of TAuthenticationToken)
- uid: Cqrs.EventStore
  name: Cqrs.EventStore
  items:
  - uid: Cqrs.EventStore.EventFactory`1
    name: EventFactory<TAuthenticationToken>
    name.vb: EventFactory(Of TAuthenticationToken)
  - uid: Cqrs.EventStore.EventStore`1
    name: EventStore<TAuthenticationToken>
    name.vb: EventStore(Of TAuthenticationToken)
  - uid: Cqrs.EventStore.EventStoreConnectionHelper`1
    name: EventStoreConnectionHelper<TAuthenticationToken>
    name.vb: EventStoreConnectionHelper(Of TAuthenticationToken)
  - uid: Cqrs.EventStore.IEventBuilder`1
    name: IEventBuilder<TAuthenticationToken>
    name.vb: IEventBuilder(Of TAuthenticationToken)
  - uid: Cqrs.EventStore.IEventDeserialiser`1
    name: IEventDeserialiser<TAuthenticationToken>
    name.vb: IEventDeserialiser(Of TAuthenticationToken)
  - uid: Cqrs.EventStore.IEventStoreConnectionHelper
    name: IEventStoreConnectionHelper
  - uid: Cqrs.EventStore.ProjectionReader`1
    name: ProjectionReader<TAuthenticationToken>
    name.vb: ProjectionReader(Of TAuthenticationToken)
  - uid: Cqrs.EventStore.SimpleEvent`1
    name: SimpleEvent<TAuthenticationToken>
    name.vb: SimpleEvent(Of TAuthenticationToken)
- uid: Cqrs.EventStore.Bus
  name: Cqrs.EventStore.Bus
  items:
  - uid: Cqrs.EventStore.Bus.EventConverter
    name: EventConverter
  - uid: Cqrs.EventStore.Bus.EventStoreBasedLastEventProcessedStore
    name: EventStoreBasedLastEventProcessedStore
  - uid: Cqrs.EventStore.Bus.EventStoreEventPublisher`1
    name: EventStoreEventPublisher<TAuthenticationToken>
    name.vb: EventStoreEventPublisher(Of TAuthenticationToken)
  - uid: Cqrs.EventStore.Bus.EventStoreUtilities
    name: EventStoreUtilities
  - uid: Cqrs.EventStore.Bus.InvalidLastEventProcessedException
    name: InvalidLastEventProcessedException
- uid: Cqrs.Exceptions
  name: Cqrs.Exceptions
  items:
  - uid: Cqrs.Exceptions.InvalidConfigurationException
    name: InvalidConfigurationException
  - uid: Cqrs.Exceptions.MissingApplicationSettingException
    name: MissingApplicationSettingException
  - uid: Cqrs.Exceptions.MissingApplicationSettingForConnectionStringException
    name: MissingApplicationSettingForConnectionStringException
  - uid: Cqrs.Exceptions.MissingConnectionStringException
    name: MissingConnectionStringException
  - uid: Cqrs.Exceptions.MultipleCommandHandlersRegisteredException
    name: MultipleCommandHandlersRegisteredException
  - uid: Cqrs.Exceptions.MultipleHandlersRegisteredException
    name: MultipleHandlersRegisteredException
  - uid: Cqrs.Exceptions.NoCommandHandlerRegisteredException
    name: NoCommandHandlerRegisteredException
  - uid: Cqrs.Exceptions.NoEventHandlerRegisteredException
    name: NoEventHandlerRegisteredException
  - uid: Cqrs.Exceptions.NoHandlerRegisteredException
    name: NoHandlerRegisteredException
  - uid: Cqrs.Exceptions.NoHandlersRegisteredException
    name: NoHandlersRegisteredException
- uid: Cqrs.Hosts
  name: Cqrs.Hosts
  items:
  - uid: Cqrs.Hosts.CoreHost`1
    name: CoreHost<TAuthenticationToken>
    name.vb: CoreHost(Of TAuthenticationToken)
  - uid: Cqrs.Hosts.CqrsHttpApplication
    name: CqrsHttpApplication
  - uid: Cqrs.Hosts.CqrsHttpApplication`1
    name: CqrsHttpApplication<TAuthenticationToken>
    name.vb: CqrsHttpApplication(Of TAuthenticationToken)
  - uid: Cqrs.Hosts.StartUp
    name: StartUp
- uid: Cqrs.Infrastructure
  name: Cqrs.Infrastructure
  items:
  - uid: Cqrs.Infrastructure.DelegateAdjuster
    name: DelegateAdjuster
  - uid: Cqrs.Infrastructure.SpinWait
    name: SpinWait
- uid: Cqrs.Messages
  name: Cqrs.Messages
  items:
  - uid: Cqrs.Messages.FrameworkType
    name: FrameworkType
  - uid: Cqrs.Messages.IHandler
    name: IHandler
  - uid: Cqrs.Messages.IMessage
    name: IMessage
  - uid: Cqrs.Messages.IMessageHandler`1
    name: IMessageHandler<TMessage>
    name.vb: IMessageHandler(Of TMessage)
  - uid: Cqrs.Messages.IMessageWithAuthenticationToken`1
    name: IMessageWithAuthenticationToken<TAuthenticationToken>
    name.vb: IMessageWithAuthenticationToken(Of TAuthenticationToken)
  - uid: Cqrs.Messages.ITelemeteredMessage
    name: ITelemeteredMessage
- uid: Cqrs.Mongo.DataStores
  name: Cqrs.Mongo.DataStores
  items:
  - uid: Cqrs.Mongo.DataStores.MongoDataStore`1
    name: MongoDataStore<TData>
    name.vb: MongoDataStore(Of TData)
- uid: Cqrs.Mongo.DataStores.Indexes
  name: Cqrs.Mongo.DataStores.Indexes
  items:
  - uid: Cqrs.Mongo.DataStores.Indexes.ByIsLogicallyDeletedAndRsnMongoIndex`1
    name: ByIsLogicallyDeletedAndRsnMongoIndex<TEntity>
    name.vb: ByIsLogicallyDeletedAndRsnMongoIndex(Of TEntity)
  - uid: Cqrs.Mongo.DataStores.Indexes.ByRsnMongoIndex`1
    name: ByRsnMongoIndex<TEntity>
    name.vb: ByRsnMongoIndex(Of TEntity)
  - uid: Cqrs.Mongo.DataStores.Indexes.MongoIndex`1
    name: MongoIndex<TEntity>
    name.vb: MongoIndex(Of TEntity)
- uid: Cqrs.Mongo.Entities
  name: Cqrs.Mongo.Entities
  items:
  - uid: Cqrs.Mongo.Entities.MongoEntity
    name: MongoEntity
- uid: Cqrs.Mongo.Factories
  name: Cqrs.Mongo.Factories
  items:
  - uid: Cqrs.Mongo.Factories.IMongoDataStoreConnectionStringFactory
    name: IMongoDataStoreConnectionStringFactory
  - uid: Cqrs.Mongo.Factories.IndexKeysBuilderExtension
    name: IndexKeysBuilderExtension
  - uid: Cqrs.Mongo.Factories.MongoDataStoreConnectionStringFactory
    name: MongoDataStoreConnectionStringFactory
  - uid: Cqrs.Mongo.Factories.MongoDataStoreFactory
    name: MongoDataStoreFactory
- uid: Cqrs.Mongo.Repositories.Authentication
  name: Cqrs.Mongo.Repositories.Authentication
  items:
  - uid: Cqrs.Mongo.Repositories.Authentication.SingleSignOnToken
    name: SingleSignOnToken
- uid: Cqrs.Mongo.Serialisers
  name: Cqrs.Mongo.Serialisers
  items:
  - uid: Cqrs.Mongo.Serialisers.TypeSerialiser
    name: TypeSerialiser
- uid: Cqrs.MongoDB.DataStores
  name: Cqrs.MongoDB.DataStores
  items:
  - uid: Cqrs.MongoDB.DataStores.MongoDbDataStore`1
    name: MongoDbDataStore<TData>
    name.vb: MongoDbDataStore(Of TData)
- uid: Cqrs.MongoDB.DataStores.Indexes
  name: Cqrs.MongoDB.DataStores.Indexes
  items:
  - uid: Cqrs.MongoDB.DataStores.Indexes.ByIsLogicallyDeletedAndRsnMongoDbIndex`1
    name: ByIsLogicallyDeletedAndRsnMongoDbIndex<TEntity>
    name.vb: ByIsLogicallyDeletedAndRsnMongoDbIndex(Of TEntity)
  - uid: Cqrs.MongoDB.DataStores.Indexes.ByRsnMongoDbIndex`1
    name: ByRsnMongoDbIndex<TEntity>
    name.vb: ByRsnMongoDbIndex(Of TEntity)
  - uid: Cqrs.MongoDB.DataStores.Indexes.MongoDbIndex`1
    name: MongoDbIndex<TEntity>
    name.vb: MongoDbIndex(Of TEntity)
- uid: Cqrs.MongoDB.Entities
  name: Cqrs.MongoDB.Entities
  items:
  - uid: Cqrs.MongoDB.Entities.MongoEntity
    name: MongoEntity
- uid: Cqrs.MongoDB.Events
  name: Cqrs.MongoDB.Events
  items:
  - uid: Cqrs.MongoDB.Events.IMongoDbEventStoreConnectionStringFactory
    name: IMongoDbEventStoreConnectionStringFactory
  - uid: Cqrs.MongoDB.Events.MongoDbEventData
    name: MongoDbEventData
  - uid: Cqrs.MongoDB.Events.MongoDbEventStore`1
    name: MongoDbEventStore<TAuthenticationToken>
    name.vb: MongoDbEventStore(Of TAuthenticationToken)
  - uid: Cqrs.MongoDB.Events.MongoDbEventStoreConnectionStringFactory
    name: MongoDbEventStoreConnectionStringFactory
- uid: Cqrs.MongoDB.Events.Indexes
  name: Cqrs.MongoDB.Events.Indexes
  items:
  - uid: Cqrs.MongoDB.Events.Indexes.ByAggregateIdAndVersionMongoDbIndex
    name: ByAggregateIdAndVersionMongoDbIndex
  - uid: Cqrs.MongoDB.Events.Indexes.ByCorrelationIdMongoDbIndex
    name: ByCorrelationIdMongoDbIndex
  - uid: Cqrs.MongoDB.Events.Indexes.ByTimestampAndEventTypeMongoDbIndex
    name: ByTimestampAndEventTypeMongoDbIndex
  - uid: Cqrs.MongoDB.Events.Indexes.ByTimestampMongoDbIndex
    name: ByTimestampMongoDbIndex
- uid: Cqrs.MongoDB.Factories
  name: Cqrs.MongoDB.Factories
  items:
  - uid: Cqrs.MongoDB.Factories.IMongoDbDataStoreConnectionStringFactory
    name: IMongoDbDataStoreConnectionStringFactory
  - uid: Cqrs.MongoDB.Factories.MongoDbDataStoreConnectionStringFactory
    name: MongoDbDataStoreConnectionStringFactory
  - uid: Cqrs.MongoDB.Factories.MongoDbDataStoreFactory
    name: MongoDbDataStoreFactory
- uid: Cqrs.MongoDB.Repositories.Authentication
  name: Cqrs.MongoDB.Repositories.Authentication
  items:
  - uid: Cqrs.MongoDB.Repositories.Authentication.SingleSignOnToken
    name: SingleSignOnToken
- uid: Cqrs.MongoDB.Serialisers
  name: Cqrs.MongoDB.Serialisers
  items:
  - uid: Cqrs.MongoDB.Serialisers.BasicStructSerialiser`1
    name: BasicStructSerialiser<TStruct>
    name.vb: BasicStructSerialiser(Of TStruct)
  - uid: Cqrs.MongoDB.Serialisers.MongoDbEventBuilder`1
    name: MongoDbEventBuilder<TAuthenticationToken>
    name.vb: MongoDbEventBuilder(Of TAuthenticationToken)
  - uid: Cqrs.MongoDB.Serialisers.MongoDbEventDeserialiser`1
    name: MongoDbEventDeserialiser<TAuthenticationToken>
    name.vb: MongoDbEventDeserialiser(Of TAuthenticationToken)
  - uid: Cqrs.MongoDB.Serialisers.TypeSerialiser
    name: TypeSerialiser
- uid: Cqrs.MongoDB.Tests.Integration
  name: Cqrs.MongoDB.Tests.Integration
  items:
  - uid: Cqrs.MongoDB.Tests.Integration.MongoDbDataStoreTests
    name: MongoDbDataStoreTests
  - uid: Cqrs.MongoDB.Tests.Integration.MongoDbEventStoreTests
    name: MongoDbEventStoreTests
  - uid: Cqrs.MongoDB.Tests.Integration.TestMongoDataStoreConnectionStringFactory
    name: TestMongoDataStoreConnectionStringFactory
  - uid: Cqrs.MongoDB.Tests.Integration.TestMongoDbDataStoreFactory
    name: TestMongoDbDataStoreFactory
  - uid: Cqrs.MongoDB.Tests.Integration.TestMongoEventStoreConnectionStringFactory
    name: TestMongoEventStoreConnectionStringFactory
- uid: Cqrs.Ninject.Akka
  name: Cqrs.Ninject.Akka
  items:
  - uid: Cqrs.Ninject.Akka.AkkaNinjectDependencyResolver
    name: AkkaNinjectDependencyResolver
- uid: Cqrs.Ninject.Akka.Configuration
  name: Cqrs.Ninject.Akka.Configuration
  items:
  - uid: Cqrs.Ninject.Akka.Configuration.AkkaModule`1
    name: AkkaModule<TAuthenticationToken>
    name.vb: AkkaModule(Of TAuthenticationToken)
- uid: Cqrs.Ninject.Azure.BlobStorage.Configuration
  name: Cqrs.Ninject.Azure.BlobStorage.Configuration
  items:
  - uid: Cqrs.Ninject.Azure.BlobStorage.Configuration.BlobStorageDataStoreModule
    name: BlobStorageDataStoreModule
  - uid: Cqrs.Ninject.Azure.BlobStorage.Configuration.BlobStoragEventStoreModule`1
    name: BlobStoragEventStoreModule<TAuthenticationToken>
    name.vb: BlobStoragEventStoreModule(Of TAuthenticationToken)
  - uid: Cqrs.Ninject.Azure.BlobStorage.Configuration.TableStorageDataStoreModule
    name: TableStorageDataStoreModule
  - uid: Cqrs.Ninject.Azure.BlobStorage.Configuration.TableStoragEventStoreModule`1
    name: TableStoragEventStoreModule<TAuthenticationToken>
    name.vb: TableStoragEventStoreModule(Of TAuthenticationToken)
- uid: Cqrs.Ninject.Azure.DocumentDb.Configuration
  name: Cqrs.Ninject.Azure.DocumentDb.Configuration
  items:
  - uid: Cqrs.Ninject.Azure.DocumentDb.Configuration.AzureDocumentDbEventStoreModule`1
    name: AzureDocumentDbEventStoreModule<TAuthenticationToken>
    name.vb: AzureDocumentDbEventStoreModule(Of TAuthenticationToken)
  - uid: Cqrs.Ninject.Azure.DocumentDb.Configuration.AzureDocumentDbModule
    name: AzureDocumentDbModule
  - uid: Cqrs.Ninject.Azure.DocumentDb.Configuration.TestAzureDocumentDbEventStoreModule`1
    name: TestAzureDocumentDbEventStoreModule<TAuthenticationToken>
    name.vb: TestAzureDocumentDbEventStoreModule(Of TAuthenticationToken)
  - uid: Cqrs.Ninject.Azure.DocumentDb.Configuration.TestAzureDocumentDbModule
    name: TestAzureDocumentDbModule
- uid: Cqrs.Ninject.Azure.DocumentDb.Events
  name: Cqrs.Ninject.Azure.DocumentDb.Events
  items:
  - uid: Cqrs.Ninject.Azure.DocumentDb.Events.TestAzureDocumentDbEventStoreConnectionStringFactory
    name: TestAzureDocumentDbEventStoreConnectionStringFactory
- uid: Cqrs.Ninject.Azure.DocumentDb.Factories
  name: Cqrs.Ninject.Azure.DocumentDb.Factories
  items:
  - uid: Cqrs.Ninject.Azure.DocumentDb.Factories.TestAzureDocumentDbDataStoreConnectionStringFactory
    name: TestAzureDocumentDbDataStoreConnectionStringFactory
- uid: Cqrs.Ninject.Azure.ServiceBus.CommandBus.Configuration
  name: Cqrs.Ninject.Azure.ServiceBus.CommandBus.Configuration
  items:
  - uid: Cqrs.Ninject.Azure.ServiceBus.CommandBus.Configuration.AzureCommandBusPublisherModule`1
    name: AzureCommandBusPublisherModule<TAuthenticationToken>
    name.vb: AzureCommandBusPublisherModule(Of TAuthenticationToken)
  - uid: Cqrs.Ninject.Azure.ServiceBus.CommandBus.Configuration.AzureCommandBusReceiverModule`1
    name: AzureCommandBusReceiverModule<TAuthenticationToken>
    name.vb: AzureCommandBusReceiverModule(Of TAuthenticationToken)
  - uid: Cqrs.Ninject.Azure.ServiceBus.CommandBus.Configuration.AzureCommandBusSenderModule`1
    name: AzureCommandBusSenderModule<TAuthenticationToken>
    name.vb: AzureCommandBusSenderModule(Of TAuthenticationToken)
  - uid: Cqrs.Ninject.Azure.ServiceBus.CommandBus.Configuration.AzureQueuedCommandBusReceiverModule`1
    name: AzureQueuedCommandBusReceiverModule<TAuthenticationToken>
    name.vb: AzureQueuedCommandBusReceiverModule(Of TAuthenticationToken)
- uid: Cqrs.Ninject.Azure.ServiceBus.EventBus.Configuration
  name: Cqrs.Ninject.Azure.ServiceBus.EventBus.Configuration
  items:
  - uid: Cqrs.Ninject.Azure.ServiceBus.EventBus.Configuration.AzureEventBusPublisherModule`1
    name: AzureEventBusPublisherModule<TAuthenticationToken>
    name.vb: AzureEventBusPublisherModule(Of TAuthenticationToken)
  - uid: Cqrs.Ninject.Azure.ServiceBus.EventBus.Configuration.AzureEventBusReceiverModule`1
    name: AzureEventBusReceiverModule<TAuthenticationToken>
    name.vb: AzureEventBusReceiverModule(Of TAuthenticationToken)
  - uid: Cqrs.Ninject.Azure.ServiceBus.EventBus.Configuration.AzureEventPublisherModule`1
    name: AzureEventPublisherModule<TAuthenticationToken>
    name.vb: AzureEventPublisherModule(Of TAuthenticationToken)
  - uid: Cqrs.Ninject.Azure.ServiceBus.EventBus.Configuration.AzureQueuedEventBusReceiverModule`1
    name: AzureQueuedEventBusReceiverModule<TAuthenticationToken>
    name.vb: AzureQueuedEventBusReceiverModule(Of TAuthenticationToken)
- uid: Cqrs.Ninject.Azure.Wcf
  name: Cqrs.Ninject.Azure.Wcf
  items:
  - uid: Cqrs.Ninject.Azure.Wcf.CqrsWebHost`3
    name: CqrsWebHost<TAuthenticationToken, TAuthenticationTokenHelper, TWebHostModule>
    name.vb: CqrsWebHost(Of TAuthenticationToken, TAuthenticationTokenHelper, TWebHostModule)
  - uid: Cqrs.Ninject.Azure.Wcf.CqrsWebHost`2
    name: CqrsWebHost<TAuthenticationToken, TAuthenticationTokenHelper>
    name.vb: CqrsWebHost(Of TAuthenticationToken, TAuthenticationTokenHelper)
- uid: Cqrs.Ninject.Azure.Wcf.Configuration
  name: Cqrs.Ninject.Azure.Wcf.Configuration
  items:
  - uid: Cqrs.Ninject.Azure.Wcf.Configuration.SimplifiedNinjectWcf
    name: SimplifiedNinjectWcf
  - uid: Cqrs.Ninject.Azure.Wcf.Configuration.WebHostModule
    name: WebHostModule
- uid: Cqrs.Ninject.Azure.WebJobs
  name: Cqrs.Ninject.Azure.WebJobs
  items:
  - uid: Cqrs.Ninject.Azure.WebJobs.CqrsNinjectJobHost`2
    name: CqrsNinjectJobHost<TAuthenticationToken, TAuthenticationTokenHelper>
    name.vb: CqrsNinjectJobHost(Of TAuthenticationToken, TAuthenticationTokenHelper)
- uid: Cqrs.Ninject.Azure.WebJobs.Configuration
  name: Cqrs.Ninject.Azure.WebJobs.Configuration
  items:
  - uid: Cqrs.Ninject.Azure.WebJobs.Configuration.WebJobHostModule
    name: WebJobHostModule
- uid: Cqrs.Ninject.Configuration
  name: Cqrs.Ninject.Configuration
  items:
  - uid: Cqrs.Ninject.Configuration.CqrsModule`2
    name: CqrsModule<TAuthenticationToken, TAuthenticationTokenHelper>
    name.vb: CqrsModule(Of TAuthenticationToken, TAuthenticationTokenHelper)
  - uid: Cqrs.Ninject.Configuration.EventStoreModule`1
    name: EventStoreModule<TAuthenticationToken>
    name.vb: EventStoreModule(Of TAuthenticationToken)
  - uid: Cqrs.Ninject.Configuration.InProcessCommandBusModule`1
    name: InProcessCommandBusModule<TAuthenticationToken>
    name.vb: InProcessCommandBusModule(Of TAuthenticationToken)
  - uid: Cqrs.Ninject.Configuration.InProcessEventBusModule`1
    name: InProcessEventBusModule<TAuthenticationToken>
    name.vb: InProcessEventBusModule(Of TAuthenticationToken)
  - uid: Cqrs.Ninject.Configuration.InProcessEventStoreModule`1
    name: InProcessEventStoreModule<TAuthenticationToken>
    name.vb: InProcessEventStoreModule(Of TAuthenticationToken)
  - uid: Cqrs.Ninject.Configuration.MemoryCacheEventStoreModule`1
    name: MemoryCacheEventStoreModule<TAuthenticationToken>
    name.vb: MemoryCacheEventStoreModule(Of TAuthenticationToken)
  - uid: Cqrs.Ninject.Configuration.NinjectDependencyResolver
    name: NinjectDependencyResolver
  - uid: Cqrs.Ninject.Configuration.ResolvableModule
    name: ResolvableModule
  - uid: Cqrs.Ninject.Configuration.SimplifiedNinjectStartUp`1
    name: SimplifiedNinjectStartUp<THostModule>
    name.vb: SimplifiedNinjectStartUp(Of THostModule)
  - uid: Cqrs.Ninject.Configuration.SimplifiedSqlModule`1
    name: SimplifiedSqlModule<TAuthenticationToken>
    name.vb: SimplifiedSqlModule(Of TAuthenticationToken)
- uid: Cqrs.Ninject.InProcess.CommandBus.Configuration
  name: Cqrs.Ninject.InProcess.CommandBus.Configuration
  items:
  - uid: Cqrs.Ninject.InProcess.CommandBus.Configuration.InProcessCommandBusModule`1
    name: InProcessCommandBusModule<TAuthenticationToken>
    name.vb: InProcessCommandBusModule(Of TAuthenticationToken)
- uid: Cqrs.Ninject.InProcess.EventBus.Configuration
  name: Cqrs.Ninject.InProcess.EventBus.Configuration
  items:
  - uid: Cqrs.Ninject.InProcess.EventBus.Configuration.InProcessEventBusModule`1
    name: InProcessEventBusModule<TAuthenticationToken>
    name.vb: InProcessEventBusModule(Of TAuthenticationToken)
- uid: Cqrs.Ninject.InProcess.EventStore
  name: Cqrs.Ninject.InProcess.EventStore
  items:
  - uid: Cqrs.Ninject.InProcess.EventStore.InProcessEventStore`1
    name: InProcessEventStore<TAuthenticationToken>
    name.vb: InProcessEventStore(Of TAuthenticationToken)
- uid: Cqrs.Ninject.InProcess.EventStore.Configuration
  name: Cqrs.Ninject.InProcess.EventStore.Configuration
  items:
  - uid: Cqrs.Ninject.InProcess.EventStore.Configuration.InProcessEventStoreModule`1
    name: InProcessEventStoreModule<TAuthenticationToken>
    name.vb: InProcessEventStoreModule(Of TAuthenticationToken)
- uid: Cqrs.Ninject.Mongo
  name: Cqrs.Ninject.Mongo
  items:
  - uid: Cqrs.Ninject.Mongo.TestMongoDataStoreConnectionStringFactory
    name: TestMongoDataStoreConnectionStringFactory
- uid: Cqrs.Ninject.Mongo.Configuration
  name: Cqrs.Ninject.Mongo.Configuration
  items:
  - uid: Cqrs.Ninject.Mongo.Configuration.MongoModule
    name: MongoModule
  - uid: Cqrs.Ninject.Mongo.Configuration.TestMongoModule
    name: TestMongoModule
- uid: Cqrs.Ninject.MongoDB
  name: Cqrs.Ninject.MongoDB
  items:
  - uid: Cqrs.Ninject.MongoDB.TestMongoDbDataStoreConnectionStringFactory
    name: TestMongoDbDataStoreConnectionStringFactory
- uid: Cqrs.Ninject.MongoDB.Configuration
  name: Cqrs.Ninject.MongoDB.Configuration
  items:
  - uid: Cqrs.Ninject.MongoDB.Configuration.MongoDbDataStoreModule
    name: MongoDbDataStoreModule
  - uid: Cqrs.Ninject.MongoDB.Configuration.MongoDbEventStoreModule`1
    name: MongoDbEventStoreModule<TAuthenticationToken>
    name.vb: MongoDbEventStoreModule(Of TAuthenticationToken)
  - uid: Cqrs.Ninject.MongoDB.Configuration.TestMongoDbDataStoreModule`1
    name: TestMongoDbDataStoreModule<TAuthenticationToken>
    name.vb: TestMongoDbDataStoreModule(Of TAuthenticationToken)
- uid: Cqrs.Ninject.ServiceHost
  name: Cqrs.Ninject.ServiceHost
  items:
  - uid: Cqrs.Ninject.ServiceHost.NinjectWcfServiceHostFactory`1
    name: NinjectWcfServiceHostFactory<TServiceType>
    name.vb: NinjectWcfServiceHostFactory(Of TServiceType)
- uid: Cqrs.Ninject.WebApi.Configuration
  name: Cqrs.Ninject.WebApi.Configuration
  items:
  - uid: Cqrs.Ninject.WebApi.Configuration.SimplifiedNinjectWebApi
    name: SimplifiedNinjectWebApi
  - uid: Cqrs.Ninject.WebApi.Configuration.WebApiModule
    name: WebApiModule
- uid: Cqrs.Repositories
  name: Cqrs.Repositories
  items:
  - uid: Cqrs.Repositories.InMemoryDatabase
    name: InMemoryDatabase
  - uid: Cqrs.Repositories.IRepository`2
    name: IRepository<TQueryStrategy, TData>
    name.vb: IRepository(Of TQueryStrategy, TData)
  - uid: Cqrs.Repositories.Repository`3
    name: Repository<TQueryStrategy, TQueryBuilder, TData>
    name.vb: Repository(Of TQueryStrategy, TQueryBuilder, TData)
- uid: Cqrs.Repositories.Queries
  name: Cqrs.Repositories.Queries
  items:
  - uid: Cqrs.Repositories.Queries.AndQueryPredicate
    name: AndQueryPredicate
  - uid: Cqrs.Repositories.Queries.CollectionResultQuery`2
    name: CollectionResultQuery<TQueryStrategy, TData>
    name.vb: CollectionResultQuery(Of TQueryStrategy, TData)
  - uid: Cqrs.Repositories.Queries.IAndQueryPredicate
    name: IAndQueryPredicate
  - uid: Cqrs.Repositories.Queries.ICollectionResultQuery`2
    name: ICollectionResultQuery<TQueryStrategy, TData>
    name.vb: ICollectionResultQuery(Of TQueryStrategy, TData)
  - uid: Cqrs.Repositories.Queries.IOrQueryPredicate
    name: IOrQueryPredicate
  - uid: Cqrs.Repositories.Queries.IQueryBuilder`2
    name: IQueryBuilder<TQueryStrategy, TData>
    name.vb: IQueryBuilder(Of TQueryStrategy, TData)
  - uid: Cqrs.Repositories.Queries.IQueryFactory
    name: IQueryFactory
  - uid: Cqrs.Repositories.Queries.IQueryPredicate
    name: IQueryPredicate
  - uid: Cqrs.Repositories.Queries.IQueryPredicateData
    name: IQueryPredicateData
  - uid: Cqrs.Repositories.Queries.IQueryStrategy
    name: IQueryStrategy
  - uid: Cqrs.Repositories.Queries.IQueryWithResults`1
    name: IQueryWithResults<TResult>
    name.vb: IQueryWithResults(Of TResult)
  - uid: Cqrs.Repositories.Queries.IQueryWithStrategy`1
    name: IQueryWithStrategy<TQueryStrategy>
    name.vb: IQueryWithStrategy(Of TQueryStrategy)
  - uid: Cqrs.Repositories.Queries.ISingleResultQuery`2
    name: ISingleResultQuery<TQueryStrategy, TData>
    name.vb: ISingleResultQuery(Of TQueryStrategy, TData)
  - uid: Cqrs.Repositories.Queries.OrQueryPredicate
    name: OrQueryPredicate
  - uid: Cqrs.Repositories.Queries.QueryBuilder`2
    name: QueryBuilder<TQueryStrategy, TData>
    name.vb: QueryBuilder(Of TQueryStrategy, TData)
  - uid: Cqrs.Repositories.Queries.QueryFactory
    name: QueryFactory
  - uid: Cqrs.Repositories.Queries.QueryParameter
    name: QueryParameter
  - uid: Cqrs.Repositories.Queries.QueryPredicate
    name: QueryPredicate
  - uid: Cqrs.Repositories.Queries.QueryPredicateExtensions
    name: QueryPredicateExtensions
  - uid: Cqrs.Repositories.Queries.QueryStrategy
    name: QueryStrategy
  - uid: Cqrs.Repositories.Queries.ResultQuery`2
    name: ResultQuery<TQueryStrategy, TData>
    name.vb: ResultQuery(Of TQueryStrategy, TData)
  - uid: Cqrs.Repositories.Queries.SingleResultQuery`2
    name: SingleResultQuery<TQueryStrategy, TData>
    name.vb: SingleResultQuery(Of TQueryStrategy, TData)
  - uid: Cqrs.Repositories.Queries.SortParameter`1
    name: SortParameter<TSortBy>
    name.vb: SortParameter(Of TSortBy)
  - uid: Cqrs.Repositories.Queries.SortParameter`1.SortParameterDirectionType
    name: SortParameter<TSortBy>.SortParameterDirectionType
    name.vb: SortParameter(Of TSortBy).SortParameterDirectionType
- uid: Cqrs.Services
  name: Cqrs.Services
  items:
  - uid: Cqrs.Services.BasicServiceParameterResolver`2
    name: BasicServiceParameterResolver<TServiceParameter, TAuthenticationToken>
    name.vb: BasicServiceParameterResolver(Of TServiceParameter, TAuthenticationToken)
  - uid: Cqrs.Services.EventService`1
    name: EventService<TAuthenticationToken>
    name.vb: EventService(Of TAuthenticationToken)
  - uid: Cqrs.Services.IEventDataResolver
    name: IEventDataResolver
  - uid: Cqrs.Services.IEventService`1
    name: IEventService<TAuthenticationToken>
    name.vb: IEventService(Of TAuthenticationToken)
  - uid: Cqrs.Services.IServiceParameterResolver
    name: IServiceParameterResolver
  - uid: Cqrs.Services.IServiceRequest`1
    name: IServiceRequest<TAuthenticationToken>
    name.vb: IServiceRequest(Of TAuthenticationToken)
  - uid: Cqrs.Services.IServiceRequestWithData`2
    name: IServiceRequestWithData<TAuthenticationToken, TData>
    name.vb: IServiceRequestWithData(Of TAuthenticationToken, TData)
  - uid: Cqrs.Services.IServiceResponse
    name: IServiceResponse
  - uid: Cqrs.Services.IServiceResponseWithResultData`1
    name: IServiceResponseWithResultData<TResultData>
    name.vb: IServiceResponseWithResultData(Of TResultData)
  - uid: Cqrs.Services.ISingleSignOnTokenResolver
    name: ISingleSignOnTokenResolver
  - uid: Cqrs.Services.IUnitOfWorkService
    name: IUnitOfWorkService
  - uid: Cqrs.Services.IVersionedServiceResponse
    name: IVersionedServiceResponse
  - uid: Cqrs.Services.ServiceChannelFactory`1
    name: ServiceChannelFactory<TService>
    name.vb: ServiceChannelFactory(Of TService)
  - uid: Cqrs.Services.ServiceParameterResolver`2
    name: ServiceParameterResolver<TServiceParameter, TSingleSignOnTokenResolver>
    name.vb: ServiceParameterResolver(Of TServiceParameter, TSingleSignOnTokenResolver)
  - uid: Cqrs.Services.ServiceRequest`1
    name: ServiceRequest<TAuthenticationToken>
    name.vb: ServiceRequest(Of TAuthenticationToken)
  - uid: Cqrs.Services.ServiceRequestWithData`2
    name: ServiceRequestWithData<TAuthenticationToken, TData>
    name.vb: ServiceRequestWithData(Of TAuthenticationToken, TData)
  - uid: Cqrs.Services.ServiceResponse
    name: ServiceResponse
  - uid: Cqrs.Services.ServiceResponseStateType
    name: ServiceResponseStateType
  - uid: Cqrs.Services.ServiceResponseWithResultData`1
    name: ServiceResponseWithResultData<TResultData>
    name.vb: ServiceResponseWithResultData(Of TResultData)
  - uid: Cqrs.Services.UnitOfWorkService`1
    name: UnitOfWorkService<TAuthenticationToken>
    name.vb: UnitOfWorkService(Of TAuthenticationToken)
  - uid: Cqrs.Services.WcfDataContractResolverConfiguration
    name: WcfDataContractResolverConfiguration
  - uid: Cqrs.Services.WcfDataContractResolverConfiguration.RegistrationHandling
    name: WcfDataContractResolverConfiguration.RegistrationHandling
- uid: Cqrs.Snapshots
  name: Cqrs.Snapshots
  items:
  - uid: Cqrs.Snapshots.DefaultSnapshotStrategy`1
    name: DefaultSnapshotStrategy<TAuthenticationToken>
    name.vb: DefaultSnapshotStrategy(Of TAuthenticationToken)
  - uid: Cqrs.Snapshots.ISnapshotStore
    name: ISnapshotStore
  - uid: Cqrs.Snapshots.ISnapshotStrategy`1
    name: ISnapshotStrategy<TAuthenticationToken>
    name.vb: ISnapshotStrategy(Of TAuthenticationToken)
  - uid: Cqrs.Snapshots.Snapshot
    name: Snapshot
  - uid: Cqrs.Snapshots.SnapshotAggregateRoot`2
    name: SnapshotAggregateRoot<TAuthenticationToken, TSnapshot>
    name.vb: SnapshotAggregateRoot(Of TAuthenticationToken, TSnapshot)
  - uid: Cqrs.Snapshots.SnapshotRepository`1
    name: SnapshotRepository<TAuthenticationToken>
    name.vb: SnapshotRepository(Of TAuthenticationToken)
- uid: Cqrs.Sql.DataStores
  name: Cqrs.Sql.DataStores
  items:
  - uid: Cqrs.Sql.DataStores.Converters
    name: Converters
  - uid: Cqrs.Sql.DataStores.ExpressionTreeConverter`2
    name: ExpressionTreeConverter<TA, TB>
    name.vb: ExpressionTreeConverter(Of TA, TB)
  - uid: Cqrs.Sql.DataStores.IExpressionTreeConverter
    name: IExpressionTreeConverter
  - uid: Cqrs.Sql.DataStores.SimpleExpressionReplacer
    name: SimpleExpressionReplacer
  - uid: Cqrs.Sql.DataStores.SqlDataStore`2
    name: SqlDataStore<TEntity, TDbEntity>
    name.vb: SqlDataStore(Of TEntity, TDbEntity)
  - uid: Cqrs.Sql.DataStores.SqlDataStoreExtensions
    name: SqlDataStoreExtensions
- uid: Cqrs.Tests.Bus
  name: Cqrs.Tests.Bus
  items:
  - uid: Cqrs.Tests.Bus.When_publishing_events
    name: When_publishing_events
  - uid: Cqrs.Tests.Bus.When_registering_handlers
    name: When_registering_handlers
  - uid: Cqrs.Tests.Bus.When_sending_command
    name: When_sending_command
- uid: Cqrs.Tests.Cache
  name: Cqrs.Tests.Cache
  items:
  - uid: Cqrs.Tests.Cache.When_getting_aggregate
    name: When_getting_aggregate
  - uid: Cqrs.Tests.Cache.When_getting_earlier_than_expected_events_from_event_store
    name: When_getting_earlier_than_expected_events_from_event_store
  - uid: Cqrs.Tests.Cache.When_saving_aggregate
    name: When_saving_aggregate
  - uid: Cqrs.Tests.Cache.When_saving_fails
    name: When_saving_fails
  - uid: Cqrs.Tests.Cache.When_saving_same_aggregate_in_parallel
    name: When_saving_same_aggregate_in_parallel
  - uid: Cqrs.Tests.Cache.When_saving_two_aggregates_in_parallel
    name: When_saving_two_aggregates_in_parallel
- uid: Cqrs.Tests.DataStores
  name: Cqrs.Tests.DataStores
  items:
  - uid: Cqrs.Tests.DataStores.CRUD_operations
    name: CRUD_operations
- uid: Cqrs.Tests.Domain
  name: Cqrs.Tests.Domain
  items:
  - uid: Cqrs.Tests.Domain.When_adding_aggregates_to_repository
    name: When_adding_aggregates_to_repository
  - uid: Cqrs.Tests.Domain.When_getting_aggregate_without_contructor
    name: When_getting_aggregate_without_contructor
  - uid: Cqrs.Tests.Domain.When_getting_an_aggregate
    name: When_getting_an_aggregate
  - uid: Cqrs.Tests.Domain.When_replaying_events
    name: When_replaying_events
  - uid: Cqrs.Tests.Domain.When_saving
    name: When_saving
  - uid: Cqrs.Tests.Domain.When_saving_events_without_id
    name: When_saving_events_without_id
  - uid: Cqrs.Tests.Domain.When_saving_stale_data
    name: When_saving_stale_data
- uid: Cqrs.Tests.Domain.Saga
  name: Cqrs.Tests.Domain.Saga
  items:
  - uid: Cqrs.Tests.Domain.Saga.When_getting_a_saga
    name: When_getting_a_saga
- uid: Cqrs.Tests.Extensions.TestHelpers
  name: Cqrs.Tests.Extensions.TestHelpers
  items:
  - uid: Cqrs.Tests.Extensions.TestHelpers.Specification`3
    name: Specification<TAggregate, THandler, TCommand>
    name.vb: Specification(Of TAggregate, THandler, TCommand)
  - uid: Cqrs.Tests.Extensions.TestHelpers.ThenAttribute
    name: ThenAttribute
- uid: Cqrs.Tests.Snapshots
  name: Cqrs.Tests.Snapshots
  items:
  - uid: Cqrs.Tests.Snapshots.When_getting_a_snapshot_aggregate_with_no_snapshot
    name: When_getting_a_snapshot_aggregate_with_no_snapshot
  - uid: Cqrs.Tests.Snapshots.When_getting_an_aggregate_with_snapshot
    name: When_getting_an_aggregate_with_snapshot
  - uid: Cqrs.Tests.Snapshots.When_getting_snapshotable_aggreate
    name: When_getting_snapshotable_aggreate
  - uid: Cqrs.Tests.Snapshots.When_saving_a_snapshotable_aggregate
    name: When_saving_a_snapshotable_aggregate
  - uid: Cqrs.Tests.Snapshots.When_saving_a_snapshotable_aggregate_for_each_change
    name: When_saving_a_snapshotable_aggregate_for_each_change
- uid: Cqrs.Tests.Substitutes
  name: Cqrs.Tests.Substitutes
  items:
  - uid: Cqrs.Tests.Substitutes.OrderEntity
    name: OrderEntity
  - uid: Cqrs.Tests.Substitutes.TestAggregate
    name: TestAggregate
  - uid: Cqrs.Tests.Substitutes.TestAggregateCreated
    name: TestAggregateCreated
  - uid: Cqrs.Tests.Substitutes.TestAggregateDidSomething
    name: TestAggregateDidSomething
  - uid: Cqrs.Tests.Substitutes.TestAggregateDidSomethingElse
    name: TestAggregateDidSomethingElse
  - uid: Cqrs.Tests.Substitutes.TestAggregateDidSomethingElse2
    name: TestAggregateDidSomethingElse2
  - uid: Cqrs.Tests.Substitutes.TestAggregateDidSomethingHandler
    name: TestAggregateDidSomethingHandler
  - uid: Cqrs.Tests.Substitutes.TestAggregateDoSomething
    name: TestAggregateDoSomething
  - uid: Cqrs.Tests.Substitutes.TestAggregateDoSomething2
    name: TestAggregateDoSomething2
  - uid: Cqrs.Tests.Substitutes.TestAggregateDoSomething3
    name: TestAggregateDoSomething3
  - uid: Cqrs.Tests.Substitutes.TestAggregateDoSomethingElseHandler
    name: TestAggregateDoSomethingElseHandler
  - uid: Cqrs.Tests.Substitutes.TestAggregateDoSomethingHandler
    name: TestAggregateDoSomethingHandler
  - uid: Cqrs.Tests.Substitutes.TestAggregateNoParameterLessConstructor
    name: TestAggregateNoParameterLessConstructor
  - uid: Cqrs.Tests.Substitutes.TestAggregateRepository
    name: TestAggregateRepository
  - uid: Cqrs.Tests.Substitutes.TestCommandPublisher
    name: TestCommandPublisher
  - uid: Cqrs.Tests.Substitutes.TestDependencyResolver
    name: TestDependencyResolver
  - uid: Cqrs.Tests.Substitutes.TestEventPublisher
    name: TestEventPublisher
  - uid: Cqrs.Tests.Substitutes.TestEventStore
    name: TestEventStore
  - uid: Cqrs.Tests.Substitutes.TestEventStoreWithBugs
    name: TestEventStoreWithBugs
  - uid: Cqrs.Tests.Substitutes.TestHandleRegistrar
    name: TestHandleRegistrar
  - uid: Cqrs.Tests.Substitutes.TestHandlerListItem
    name: TestHandlerListItem
  - uid: Cqrs.Tests.Substitutes.TestInMemoryEventStore
    name: TestInMemoryEventStore
  - uid: Cqrs.Tests.Substitutes.TestInMemorySnapshotStore
    name: TestInMemorySnapshotStore
  - uid: Cqrs.Tests.Substitutes.TestSaga
    name: TestSaga
  - uid: Cqrs.Tests.Substitutes.TestSagaEventHandlers
    name: TestSagaEventHandlers
  - uid: Cqrs.Tests.Substitutes.TestSagaUnitOfWork
    name: TestSagaUnitOfWork
  - uid: Cqrs.Tests.Substitutes.TestSnapshotAggregate
    name: TestSnapshotAggregate
  - uid: Cqrs.Tests.Substitutes.TestSnapshotAggregateSnapshot
    name: TestSnapshotAggregateSnapshot
  - uid: Cqrs.Tests.Substitutes.TestSnapshotEventStore
    name: TestSnapshotEventStore
  - uid: Cqrs.Tests.Substitutes.TestSnapshotStore
    name: TestSnapshotStore
- uid: Cqrs.Web.Mvc
  name: Cqrs.Web.Mvc
  items:
  - uid: Cqrs.Web.Mvc.NullableGuidBinder
    name: NullableGuidBinder
- uid: Cqrs.WebApi
  name: Cqrs.WebApi
  items:
  - uid: Cqrs.WebApi.CqrsApiController
    name: CqrsApiController
  - uid: Cqrs.WebApi.CqrsApiController`1
    name: CqrsApiController<TAuthenticationToken>
    name.vb: CqrsApiController(Of TAuthenticationToken)
  - uid: Cqrs.WebApi.CqrsEventApiController`1
    name: CqrsEventApiController<TSingleSignOnToken>
    name.vb: CqrsEventApiController(Of TSingleSignOnToken)
  - uid: Cqrs.WebApi.CqrsHttpApplicationWithSignalR`2
    name: CqrsHttpApplicationWithSignalR<TAuthenticationToken, TEventToHubProxy>
    name.vb: CqrsHttpApplicationWithSignalR(Of TAuthenticationToken, TEventToHubProxy)
  - uid: Cqrs.WebApi.CqrsHttpApplicationWithSignalR`1
    name: CqrsHttpApplicationWithSignalR<TAuthenticationToken>
    name.vb: CqrsHttpApplicationWithSignalR(Of TAuthenticationToken)
  - uid: Cqrs.WebApi.HelpPageConfig`1
    name: HelpPageConfig<TAuthenticationToken>
    name.vb: HelpPageConfig(Of TAuthenticationToken)
  - uid: Cqrs.WebApi.HelpPageConfig`1.UserCreatedEvent
    name: HelpPageConfig<TAuthenticationToken>.UserCreatedEvent
    name.vb: HelpPageConfig(Of TAuthenticationToken).UserCreatedEvent
  - uid: Cqrs.WebApi.HttpResponseMessage`1
    name: HttpResponseMessage<TData>
    name.vb: HttpResponseMessage(Of TData)
- uid: Cqrs.WebApi.Configuration
  name: Cqrs.WebApi.Configuration
  items:
  - uid: Cqrs.WebApi.Configuration.WebApiConfig
    name: WebApiConfig
- uid: Cqrs.WebApi.Controllers
  name: Cqrs.WebApi.Controllers
  items:
  - uid: Cqrs.WebApi.Controllers.ClientController
    name: ClientController
  - uid: Cqrs.WebApi.Controllers.ClientController.ApiMethodModel
    name: ClientController.ApiMethodModel
  - uid: Cqrs.WebApi.Controllers.ClientController.ApiParameterModel
    name: ClientController.ApiParameterModel
- uid: Cqrs.WebApi.Events.Handlers
  name: Cqrs.WebApi.Events.Handlers
  items:
  - uid: Cqrs.WebApi.Events.Handlers.EventToHubProxy`1
    name: EventToHubProxy<TAuthenticationToken>
    name.vb: EventToHubProxy(Of TAuthenticationToken)
  - uid: Cqrs.WebApi.Events.Handlers.GlobalEventToHubProxy`1
    name: GlobalEventToHubProxy<TAuthenticationToken>
    name.vb: GlobalEventToHubProxy(Of TAuthenticationToken)
  - uid: Cqrs.WebApi.Events.Handlers.SingleSignOnTokenEventToHubProxy`1
    name: SingleSignOnTokenEventToHubProxy<TSingleSignOnToken>
    name.vb: SingleSignOnTokenEventToHubProxy(Of TSingleSignOnToken)
- uid: Cqrs.WebApi.Formatters.FormMultipart
  name: Cqrs.WebApi.Formatters.FormMultipart
  items:
  - uid: Cqrs.WebApi.Formatters.FormMultipart.FormMultipartEncodedMediaTypeFormatter
    name: FormMultipartEncodedMediaTypeFormatter
- uid: Cqrs.WebApi.Formatters.FormMultipart.Converters
  name: Cqrs.WebApi.Formatters.FormMultipart.Converters
  items:
  - uid: Cqrs.WebApi.Formatters.FormMultipart.Converters.FormDataToObjectConverter
    name: FormDataToObjectConverter
  - uid: Cqrs.WebApi.Formatters.FormMultipart.Converters.HttpContentToFormDataConverter
    name: HttpContentToFormDataConverter
  - uid: Cqrs.WebApi.Formatters.FormMultipart.Converters.ObjectToMultipartDataByteArrayConverter
    name: ObjectToMultipartDataByteArrayConverter
- uid: Cqrs.WebApi.Formatters.FormMultipart.Infrastructure
  name: Cqrs.WebApi.Formatters.FormMultipart.Infrastructure
  items:
  - uid: Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.FormData
    name: FormData
  - uid: Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.FormData.ValueFile
    name: FormData.ValueFile
  - uid: Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.FormData.ValueString
    name: FormData.ValueString
  - uid: Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.HttpFile
    name: HttpFile
  - uid: Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.MultipartFormatterSettings
    name: MultipartFormatterSettings
- uid: Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger
  name: Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger
  items:
  - uid: Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger.FormDataConverterLogger
    name: FormDataConverterLogger
  - uid: Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger.FormDataConverterLogger.LogErrorInfo
    name: FormDataConverterLogger.LogErrorInfo
  - uid: Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger.FormDataConverterLogger.LogItem
    name: FormDataConverterLogger.LogItem
  - uid: Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger.IFormDataConverterLogger
    name: IFormDataConverterLogger
- uid: Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.TypeConverters
  name: Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.TypeConverters
  items:
  - uid: Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.TypeConverters.BooleanConverterEx
    name: BooleanConverterEx
  - uid: Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.TypeConverters.FromStringConverterAdapter
    name: FromStringConverterAdapter
- uid: Cqrs.WebApi.SignalR.Hubs
  name: Cqrs.WebApi.SignalR.Hubs
  items:
  - uid: Cqrs.WebApi.SignalR.Hubs.INotificationHub
    name: INotificationHub
  - uid: Cqrs.WebApi.SignalR.Hubs.ISingleSignOnTokenNotificationHub
    name: ISingleSignOnTokenNotificationHub
  - uid: Cqrs.WebApi.SignalR.Hubs.NotificationHub
    name: NotificationHub
  - uid: Cqrs.WebApi.SignalR.Hubs.SignalRStartUp
    name: SignalRStartUp
- uid: Microsoft.WindowsAzure.Storage.Table
  name: Microsoft.WindowsAzure.Storage.Table
  items:
  - uid: Microsoft.WindowsAzure.Storage.Table.EntityPropertyConverter
    name: EntityPropertyConverter
- uid: System.Linq
  name: System.Linq
  items:
  - uid: System.Linq.AzureDocumentDbDataStoreExtensions
    name: AzureDocumentDbDataStoreExtensions
- uid: System.Web.Helpers
  name: System.Web.Helpers
  items:
  - uid: System.Web.Helpers.DynamicJsonArray
    name: DynamicJsonArray
  - uid: System.Web.Helpers.DynamicJsonObject
    name: DynamicJsonObject
  - uid: System.Web.Helpers.Json
    name: Json
