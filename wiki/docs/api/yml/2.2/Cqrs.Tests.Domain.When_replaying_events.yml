### YamlMime:ManagedReference
items:
- uid: Cqrs.Tests.Domain.When_replaying_events
  commentId: T:Cqrs.Tests.Domain.When_replaying_events
  id: When_replaying_events
  parent: Cqrs.Tests.Domain
  children:
  - Cqrs.Tests.Domain.When_replaying_events.Setup
  - Cqrs.Tests.Domain.When_replaying_events.Should_call_apply_if_exist
  - Cqrs.Tests.Domain.When_replaying_events.Should_not_fail_apply_if_dont_exist
  langs:
  - csharp
  - vb
  name: When_replaying_events
  nameWithType: When_replaying_events
  fullName: Cqrs.Tests.Domain.When_replaying_events
  type: Class
  source:
    remote:
      path: Framework/Cqrs.Tests/Domain/Aggregates/When_replaying_events.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: When_replaying_events
    path: Framework/Cqrs.Tests/Domain/Aggregates/When_replaying_events.cs
    startLine: 6
  assemblies:
  - Cqrs.Tests
  namespace: Cqrs.Tests.Domain
  syntax:
    content: >-
      [TestFixture]

      public class When_replaying_events
    content.vb: >-
      <TestFixture>

      Public Class When_replaying_events
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: NUnit.Framework.TestFixtureAttribute
    ctor: NUnit.Framework.TestFixtureAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Cqrs.Tests.Domain.When_replaying_events.Setup
  commentId: M:Cqrs.Tests.Domain.When_replaying_events.Setup
  id: Setup
  parent: Cqrs.Tests.Domain.When_replaying_events
  langs:
  - csharp
  - vb
  name: Setup()
  nameWithType: When_replaying_events.Setup()
  fullName: Cqrs.Tests.Domain.When_replaying_events.Setup()
  type: Method
  source:
    remote:
      path: Framework/Cqrs.Tests/Domain/Aggregates/When_replaying_events.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Setup
    path: Framework/Cqrs.Tests/Domain/Aggregates/When_replaying_events.cs
    startLine: 11
  assemblies:
  - Cqrs.Tests
  namespace: Cqrs.Tests.Domain
  syntax:
    content: >-
      [SetUp]

      public void Setup()
    content.vb: >-
      <SetUp>

      Public Sub Setup
  overload: Cqrs.Tests.Domain.When_replaying_events.Setup*
  attributes:
  - type: NUnit.Framework.SetUpAttribute
    ctor: NUnit.Framework.SetUpAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Cqrs.Tests.Domain.When_replaying_events.Should_call_apply_if_exist
  commentId: M:Cqrs.Tests.Domain.When_replaying_events.Should_call_apply_if_exist
  id: Should_call_apply_if_exist
  parent: Cqrs.Tests.Domain.When_replaying_events
  langs:
  - csharp
  - vb
  name: Should_call_apply_if_exist()
  nameWithType: When_replaying_events.Should_call_apply_if_exist()
  fullName: Cqrs.Tests.Domain.When_replaying_events.Should_call_apply_if_exist()
  type: Method
  source:
    remote:
      path: Framework/Cqrs.Tests/Domain/Aggregates/When_replaying_events.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Should_call_apply_if_exist
    path: Framework/Cqrs.Tests/Domain/Aggregates/When_replaying_events.cs
    startLine: 17
  assemblies:
  - Cqrs.Tests
  namespace: Cqrs.Tests.Domain
  syntax:
    content: >-
      [Test]

      public void Should_call_apply_if_exist()
    content.vb: >-
      <Test>

      Public Sub Should_call_apply_if_exist
  overload: Cqrs.Tests.Domain.When_replaying_events.Should_call_apply_if_exist*
  attributes:
  - type: NUnit.Framework.TestAttribute
    ctor: NUnit.Framework.TestAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Cqrs.Tests.Domain.When_replaying_events.Should_not_fail_apply_if_dont_exist
  commentId: M:Cqrs.Tests.Domain.When_replaying_events.Should_not_fail_apply_if_dont_exist
  id: Should_not_fail_apply_if_dont_exist
  parent: Cqrs.Tests.Domain.When_replaying_events
  langs:
  - csharp
  - vb
  name: Should_not_fail_apply_if_dont_exist()
  nameWithType: When_replaying_events.Should_not_fail_apply_if_dont_exist()
  fullName: Cqrs.Tests.Domain.When_replaying_events.Should_not_fail_apply_if_dont_exist()
  type: Method
  source:
    remote:
      path: Framework/Cqrs.Tests/Domain/Aggregates/When_replaying_events.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Should_not_fail_apply_if_dont_exist
    path: Framework/Cqrs.Tests/Domain/Aggregates/When_replaying_events.cs
    startLine: 24
  assemblies:
  - Cqrs.Tests
  namespace: Cqrs.Tests.Domain
  syntax:
    content: >-
      [Test]

      public void Should_not_fail_apply_if_dont_exist()
    content.vb: >-
      <Test>

      Public Sub Should_not_fail_apply_if_dont_exist
  overload: Cqrs.Tests.Domain.When_replaying_events.Should_not_fail_apply_if_dont_exist*
  attributes:
  - type: NUnit.Framework.TestAttribute
    ctor: NUnit.Framework.TestAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Cqrs.Tests.Domain
  commentId: N:Cqrs.Tests.Domain
  isExternal: false
  name: Cqrs.Tests.Domain
  nameWithType: Cqrs.Tests.Domain
  fullName: Cqrs.Tests.Domain
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Cqrs.Tests.Domain.When_replaying_events.Setup*
  commentId: Overload:Cqrs.Tests.Domain.When_replaying_events.Setup
  isExternal: false
  name: Setup
  nameWithType: When_replaying_events.Setup
  fullName: Cqrs.Tests.Domain.When_replaying_events.Setup
- uid: Cqrs.Tests.Domain.When_replaying_events.Should_call_apply_if_exist*
  commentId: Overload:Cqrs.Tests.Domain.When_replaying_events.Should_call_apply_if_exist
  isExternal: false
  name: Should_call_apply_if_exist
  nameWithType: When_replaying_events.Should_call_apply_if_exist
  fullName: Cqrs.Tests.Domain.When_replaying_events.Should_call_apply_if_exist
- uid: Cqrs.Tests.Domain.When_replaying_events.Should_not_fail_apply_if_dont_exist*
  commentId: Overload:Cqrs.Tests.Domain.When_replaying_events.Should_not_fail_apply_if_dont_exist
  isExternal: false
  name: Should_not_fail_apply_if_dont_exist
  nameWithType: When_replaying_events.Should_not_fail_apply_if_dont_exist
  fullName: Cqrs.Tests.Domain.When_replaying_events.Should_not_fail_apply_if_dont_exist
