### YamlMime:ManagedReference
items:
- uid: System.Linq.AzureDocumentDbDataStoreExtensions
  commentId: T:System.Linq.AzureDocumentDbDataStoreExtensions
  id: AzureDocumentDbDataStoreExtensions
  parent: System.Linq
  children:
  - System.Linq.AzureDocumentDbDataStoreExtensions.First``1(Cqrs.Azure.DocumentDb.DataStores.AzureDocumentDbDataStore{``0})
  - System.Linq.AzureDocumentDbDataStoreExtensions.First``1(Cqrs.Azure.DocumentDb.DataStores.AzureDocumentDbDataStore{``0},Func{``0,System.Boolean})
  - System.Linq.AzureDocumentDbDataStoreExtensions.FirstOrDefault``1(Cqrs.Azure.DocumentDb.DataStores.AzureDocumentDbDataStore{``0})
  - System.Linq.AzureDocumentDbDataStoreExtensions.FirstOrDefault``1(Cqrs.Azure.DocumentDb.DataStores.AzureDocumentDbDataStore{``0},Func{``0,System.Boolean})
  - System.Linq.AzureDocumentDbDataStoreExtensions.Single``1(Cqrs.Azure.DocumentDb.DataStores.AzureDocumentDbDataStore{``0})
  - System.Linq.AzureDocumentDbDataStoreExtensions.Single``1(Cqrs.Azure.DocumentDb.DataStores.AzureDocumentDbDataStore{``0},Func{``0,System.Boolean})
  - System.Linq.AzureDocumentDbDataStoreExtensions.SingleOrDefault``1(Cqrs.Azure.DocumentDb.DataStores.AzureDocumentDbDataStore{``0})
  - System.Linq.AzureDocumentDbDataStoreExtensions.SingleOrDefault``1(Cqrs.Azure.DocumentDb.DataStores.AzureDocumentDbDataStore{``0},Func{``0,System.Boolean})
  langs:
  - csharp
  - vb
  name: AzureDocumentDbDataStoreExtensions
  nameWithType: AzureDocumentDbDataStoreExtensions
  fullName: System.Linq.AzureDocumentDbDataStoreExtensions
  type: Class
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.DocumentDb/DataStores/AzureDocumentDbDataStoreExtensions.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: AzureDocumentDbDataStoreExtensions
    path: Framework/Azure/Cqrs.Azure.DocumentDb/DataStores/AzureDocumentDbDataStoreExtensions.cs
    startLine: 17
  assemblies:
  - Cqrs.Azure.DocumentDb
  namespace: System.Linq
  summary: "\nProvides a set of static (Shared in Visual Basic) methods for querying objects that inherit <xref href=\"Cqrs.Azure.DocumentDb.DataStores.AzureDocumentDbDataStore%601\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: 'public static class AzureDocumentDbDataStoreExtensions : object'
    content.vb: >-
      Public Module AzureDocumentDbDataStoreExtensions

          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: System.Linq.AzureDocumentDbDataStoreExtensions.Single``1(Cqrs.Azure.DocumentDb.DataStores.AzureDocumentDbDataStore{``0})
  commentId: M:System.Linq.AzureDocumentDbDataStoreExtensions.Single``1(Cqrs.Azure.DocumentDb.DataStores.AzureDocumentDbDataStore{``0})
  id: Single``1(Cqrs.Azure.DocumentDb.DataStores.AzureDocumentDbDataStore{``0})
  isExtensionMethod: true
  parent: System.Linq.AzureDocumentDbDataStoreExtensions
  langs:
  - csharp
  - vb
  name: Single<TData>(AzureDocumentDbDataStore<TData>)
  nameWithType: AzureDocumentDbDataStoreExtensions.Single<TData>(AzureDocumentDbDataStore<TData>)
  fullName: System.Linq.AzureDocumentDbDataStoreExtensions.Single<TData>(Cqrs.Azure.DocumentDb.DataStores.AzureDocumentDbDataStore<TData>)
  type: Method
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.DocumentDb/DataStores/AzureDocumentDbDataStoreExtensions.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Single
    path: Framework/Azure/Cqrs.Azure.DocumentDb/DataStores/AzureDocumentDbDataStoreExtensions.cs
    startLine: 26
  assemblies:
  - Cqrs.Azure.DocumentDb
  namespace: System.Linq
  summary: "\nReturns the only element of the sequence, and throws an exception if there is not exactly one element in the sequence.\n"
  example: []
  syntax:
    content: 'public static TData Single<TData>(this AzureDocumentDbDataStore<TData> source)where TData : AzureDocumentDbEntity'
    parameters:
    - id: source
      type: Cqrs.Azure.DocumentDb.DataStores.AzureDocumentDbDataStore{{TData}}
      description: The sequence to type as <see cref="!:IEnumerable&lt;T>"></see>.
    typeParameters:
    - id: TData
      description: The type of the elements of source.
    return:
      type: '{TData}'
      description: The single element of the sequence.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Single(Of TData As AzureDocumentDbEntity)(source As AzureDocumentDbDataStore(Of TData)) As TData
  overload: System.Linq.AzureDocumentDbDataStoreExtensions.Single*
  nameWithType.vb: AzureDocumentDbDataStoreExtensions.Single(Of TData)(AzureDocumentDbDataStore(Of TData))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Linq.AzureDocumentDbDataStoreExtensions.Single(Of TData)(Cqrs.Azure.DocumentDb.DataStores.AzureDocumentDbDataStore(Of TData))
  name.vb: Single(Of TData)(AzureDocumentDbDataStore(Of TData))
- uid: System.Linq.AzureDocumentDbDataStoreExtensions.Single``1(Cqrs.Azure.DocumentDb.DataStores.AzureDocumentDbDataStore{``0},Func{``0,System.Boolean})
  commentId: M:System.Linq.AzureDocumentDbDataStoreExtensions.Single``1(Cqrs.Azure.DocumentDb.DataStores.AzureDocumentDbDataStore{``0},Func{``0,System.Boolean})
  id: Single``1(Cqrs.Azure.DocumentDb.DataStores.AzureDocumentDbDataStore{``0},Func{``0,System.Boolean})
  isExtensionMethod: true
  parent: System.Linq.AzureDocumentDbDataStoreExtensions
  langs:
  - csharp
  - vb
  name: Single<TData>(AzureDocumentDbDataStore<TData>, Func<TData, Boolean>)
  nameWithType: AzureDocumentDbDataStoreExtensions.Single<TData>(AzureDocumentDbDataStore<TData>, Func<TData, Boolean>)
  fullName: System.Linq.AzureDocumentDbDataStoreExtensions.Single<TData>(Cqrs.Azure.DocumentDb.DataStores.AzureDocumentDbDataStore<TData>, Func<TData, System.Boolean>)
  type: Method
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.DocumentDb/DataStores/AzureDocumentDbDataStoreExtensions.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Single
    path: Framework/Azure/Cqrs.Azure.DocumentDb/DataStores/AzureDocumentDbDataStoreExtensions.cs
    startLine: 41
  assemblies:
  - Cqrs.Azure.DocumentDb
  namespace: System.Linq
  summary: "\nReturns the only element of a sequence that satisfies a specified condition, and throws an exception if more than one such element exists.\n"
  example: []
  syntax:
    content: 'public static TData Single<TData>(this AzureDocumentDbDataStore<TData> source, Func<TData, bool> predicate)where TData : AzureDocumentDbEntity'
    parameters:
    - id: source
      type: Cqrs.Azure.DocumentDb.DataStores.AzureDocumentDbDataStore{{TData}}
      description: The sequence to type as <see cref="!:IEnumerable&lt;T>"></see>.
    - id: predicate
      type: Func{{TData},System.Boolean}
      description: A function to test an element for a condition.
    typeParameters:
    - id: TData
      description: The type of the elements of source.
    return:
      type: '{TData}'
      description: The single element of the sequence.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Single(Of TData As AzureDocumentDbEntity)(source As AzureDocumentDbDataStore(Of TData), predicate As Func(Of TData, Boolean)) As TData
  overload: System.Linq.AzureDocumentDbDataStoreExtensions.Single*
  nameWithType.vb: AzureDocumentDbDataStoreExtensions.Single(Of TData)(AzureDocumentDbDataStore(Of TData), Func(Of TData, Boolean))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Linq.AzureDocumentDbDataStoreExtensions.Single(Of TData)(Cqrs.Azure.DocumentDb.DataStores.AzureDocumentDbDataStore(Of TData), Func(Of TData, System.Boolean))
  name.vb: Single(Of TData)(AzureDocumentDbDataStore(Of TData), Func(Of TData, Boolean))
- uid: System.Linq.AzureDocumentDbDataStoreExtensions.SingleOrDefault``1(Cqrs.Azure.DocumentDb.DataStores.AzureDocumentDbDataStore{``0})
  commentId: M:System.Linq.AzureDocumentDbDataStoreExtensions.SingleOrDefault``1(Cqrs.Azure.DocumentDb.DataStores.AzureDocumentDbDataStore{``0})
  id: SingleOrDefault``1(Cqrs.Azure.DocumentDb.DataStores.AzureDocumentDbDataStore{``0})
  isExtensionMethod: true
  parent: System.Linq.AzureDocumentDbDataStoreExtensions
  langs:
  - csharp
  - vb
  name: SingleOrDefault<TData>(AzureDocumentDbDataStore<TData>)
  nameWithType: AzureDocumentDbDataStoreExtensions.SingleOrDefault<TData>(AzureDocumentDbDataStore<TData>)
  fullName: System.Linq.AzureDocumentDbDataStoreExtensions.SingleOrDefault<TData>(Cqrs.Azure.DocumentDb.DataStores.AzureDocumentDbDataStore<TData>)
  type: Method
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.DocumentDb/DataStores/AzureDocumentDbDataStoreExtensions.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: SingleOrDefault
    path: Framework/Azure/Cqrs.Azure.DocumentDb/DataStores/AzureDocumentDbDataStoreExtensions.cs
    startLine: 54
  assemblies:
  - Cqrs.Azure.DocumentDb
  namespace: System.Linq
  summary: "\nReturns the only element of the sequence, or a default value if the sequence is empty; this method throws an exception if there is more than one element in the sequence.\n"
  example: []
  syntax:
    content: 'public static TData SingleOrDefault<TData>(this AzureDocumentDbDataStore<TData> source)where TData : AzureDocumentDbEntity'
    parameters:
    - id: source
      type: Cqrs.Azure.DocumentDb.DataStores.AzureDocumentDbDataStore{{TData}}
      description: The sequence to type as <see cref="!:IEnumerable&lt;T>"></see>.
    typeParameters:
    - id: TData
      description: The type of the elements of source.
    return:
      type: '{TData}'
      description: The single element of the sequence.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SingleOrDefault(Of TData As AzureDocumentDbEntity)(source As AzureDocumentDbDataStore(Of TData)) As TData
  overload: System.Linq.AzureDocumentDbDataStoreExtensions.SingleOrDefault*
  nameWithType.vb: AzureDocumentDbDataStoreExtensions.SingleOrDefault(Of TData)(AzureDocumentDbDataStore(Of TData))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Linq.AzureDocumentDbDataStoreExtensions.SingleOrDefault(Of TData)(Cqrs.Azure.DocumentDb.DataStores.AzureDocumentDbDataStore(Of TData))
  name.vb: SingleOrDefault(Of TData)(AzureDocumentDbDataStore(Of TData))
- uid: System.Linq.AzureDocumentDbDataStoreExtensions.SingleOrDefault``1(Cqrs.Azure.DocumentDb.DataStores.AzureDocumentDbDataStore{``0},Func{``0,System.Boolean})
  commentId: M:System.Linq.AzureDocumentDbDataStoreExtensions.SingleOrDefault``1(Cqrs.Azure.DocumentDb.DataStores.AzureDocumentDbDataStore{``0},Func{``0,System.Boolean})
  id: SingleOrDefault``1(Cqrs.Azure.DocumentDb.DataStores.AzureDocumentDbDataStore{``0},Func{``0,System.Boolean})
  isExtensionMethod: true
  parent: System.Linq.AzureDocumentDbDataStoreExtensions
  langs:
  - csharp
  - vb
  name: SingleOrDefault<TData>(AzureDocumentDbDataStore<TData>, Func<TData, Boolean>)
  nameWithType: AzureDocumentDbDataStoreExtensions.SingleOrDefault<TData>(AzureDocumentDbDataStore<TData>, Func<TData, Boolean>)
  fullName: System.Linq.AzureDocumentDbDataStoreExtensions.SingleOrDefault<TData>(Cqrs.Azure.DocumentDb.DataStores.AzureDocumentDbDataStore<TData>, Func<TData, System.Boolean>)
  type: Method
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.DocumentDb/DataStores/AzureDocumentDbDataStoreExtensions.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: SingleOrDefault
    path: Framework/Azure/Cqrs.Azure.DocumentDb/DataStores/AzureDocumentDbDataStoreExtensions.cs
    startLine: 68
  assemblies:
  - Cqrs.Azure.DocumentDb
  namespace: System.Linq
  summary: "\nReturns the only element of the sequence that satisfies a specified condition or a default value if no such element exists; this method throws an exception if more than one element satisfies the condition.\n"
  example: []
  syntax:
    content: 'public static TData SingleOrDefault<TData>(this AzureDocumentDbDataStore<TData> source, Func<TData, bool> predicate)where TData : AzureDocumentDbEntity'
    parameters:
    - id: source
      type: Cqrs.Azure.DocumentDb.DataStores.AzureDocumentDbDataStore{{TData}}
      description: The sequence to type as <see cref="!:IEnumerable&lt;T>"></see>.
    - id: predicate
      type: Func{{TData},System.Boolean}
      description: A function to test an element for a condition.
    typeParameters:
    - id: TData
      description: The type of the elements of source.
    return:
      type: '{TData}'
      description: The single element of the sequence.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SingleOrDefault(Of TData As AzureDocumentDbEntity)(source As AzureDocumentDbDataStore(Of TData), predicate As Func(Of TData, Boolean)) As TData
  overload: System.Linq.AzureDocumentDbDataStoreExtensions.SingleOrDefault*
  nameWithType.vb: AzureDocumentDbDataStoreExtensions.SingleOrDefault(Of TData)(AzureDocumentDbDataStore(Of TData), Func(Of TData, Boolean))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Linq.AzureDocumentDbDataStoreExtensions.SingleOrDefault(Of TData)(Cqrs.Azure.DocumentDb.DataStores.AzureDocumentDbDataStore(Of TData), Func(Of TData, System.Boolean))
  name.vb: SingleOrDefault(Of TData)(AzureDocumentDbDataStore(Of TData), Func(Of TData, Boolean))
- uid: System.Linq.AzureDocumentDbDataStoreExtensions.First``1(Cqrs.Azure.DocumentDb.DataStores.AzureDocumentDbDataStore{``0})
  commentId: M:System.Linq.AzureDocumentDbDataStoreExtensions.First``1(Cqrs.Azure.DocumentDb.DataStores.AzureDocumentDbDataStore{``0})
  id: First``1(Cqrs.Azure.DocumentDb.DataStores.AzureDocumentDbDataStore{``0})
  isExtensionMethod: true
  parent: System.Linq.AzureDocumentDbDataStoreExtensions
  langs:
  - csharp
  - vb
  name: First<TData>(AzureDocumentDbDataStore<TData>)
  nameWithType: AzureDocumentDbDataStoreExtensions.First<TData>(AzureDocumentDbDataStore<TData>)
  fullName: System.Linq.AzureDocumentDbDataStoreExtensions.First<TData>(Cqrs.Azure.DocumentDb.DataStores.AzureDocumentDbDataStore<TData>)
  type: Method
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.DocumentDb/DataStores/AzureDocumentDbDataStoreExtensions.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: First
    path: Framework/Azure/Cqrs.Azure.DocumentDb/DataStores/AzureDocumentDbDataStoreExtensions.cs
    startLine: 82
  assemblies:
  - Cqrs.Azure.DocumentDb
  namespace: System.Linq
  summary: "\nReturns the first element of the sequence.\n"
  example: []
  syntax:
    content: 'public static TData First<TData>(this AzureDocumentDbDataStore<TData> source)where TData : AzureDocumentDbEntity'
    parameters:
    - id: source
      type: Cqrs.Azure.DocumentDb.DataStores.AzureDocumentDbDataStore{{TData}}
      description: The sequence to type as <see cref="!:IEnumerable&lt;T>"></see>.
    typeParameters:
    - id: TData
      description: The type of the elements of source.
    return:
      type: '{TData}'
      description: The first element of the sequence.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function First(Of TData As AzureDocumentDbEntity)(source As AzureDocumentDbDataStore(Of TData)) As TData
  overload: System.Linq.AzureDocumentDbDataStoreExtensions.First*
  nameWithType.vb: AzureDocumentDbDataStoreExtensions.First(Of TData)(AzureDocumentDbDataStore(Of TData))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Linq.AzureDocumentDbDataStoreExtensions.First(Of TData)(Cqrs.Azure.DocumentDb.DataStores.AzureDocumentDbDataStore(Of TData))
  name.vb: First(Of TData)(AzureDocumentDbDataStore(Of TData))
- uid: System.Linq.AzureDocumentDbDataStoreExtensions.First``1(Cqrs.Azure.DocumentDb.DataStores.AzureDocumentDbDataStore{``0},Func{``0,System.Boolean})
  commentId: M:System.Linq.AzureDocumentDbDataStoreExtensions.First``1(Cqrs.Azure.DocumentDb.DataStores.AzureDocumentDbDataStore{``0},Func{``0,System.Boolean})
  id: First``1(Cqrs.Azure.DocumentDb.DataStores.AzureDocumentDbDataStore{``0},Func{``0,System.Boolean})
  isExtensionMethod: true
  parent: System.Linq.AzureDocumentDbDataStoreExtensions
  langs:
  - csharp
  - vb
  name: First<TData>(AzureDocumentDbDataStore<TData>, Func<TData, Boolean>)
  nameWithType: AzureDocumentDbDataStoreExtensions.First<TData>(AzureDocumentDbDataStore<TData>, Func<TData, Boolean>)
  fullName: System.Linq.AzureDocumentDbDataStoreExtensions.First<TData>(Cqrs.Azure.DocumentDb.DataStores.AzureDocumentDbDataStore<TData>, Func<TData, System.Boolean>)
  type: Method
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.DocumentDb/DataStores/AzureDocumentDbDataStoreExtensions.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: First
    path: Framework/Azure/Cqrs.Azure.DocumentDb/DataStores/AzureDocumentDbDataStoreExtensions.cs
    startLine: 97
  assemblies:
  - Cqrs.Azure.DocumentDb
  namespace: System.Linq
  summary: "\nReturns the only element of a sequence that satisfies a specified condition, and throws an exception if more than one such element exists.\n"
  example: []
  syntax:
    content: 'public static TData First<TData>(this AzureDocumentDbDataStore<TData> source, Func<TData, bool> predicate)where TData : AzureDocumentDbEntity'
    parameters:
    - id: source
      type: Cqrs.Azure.DocumentDb.DataStores.AzureDocumentDbDataStore{{TData}}
      description: The sequence to type as <see cref="!:IEnumerable&lt;T>"></see>.
    - id: predicate
      type: Func{{TData},System.Boolean}
      description: A function to test an element for a condition.
    typeParameters:
    - id: TData
      description: The type of the elements of source.
    return:
      type: '{TData}'
      description: The first element of the sequence.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function First(Of TData As AzureDocumentDbEntity)(source As AzureDocumentDbDataStore(Of TData), predicate As Func(Of TData, Boolean)) As TData
  overload: System.Linq.AzureDocumentDbDataStoreExtensions.First*
  nameWithType.vb: AzureDocumentDbDataStoreExtensions.First(Of TData)(AzureDocumentDbDataStore(Of TData), Func(Of TData, Boolean))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Linq.AzureDocumentDbDataStoreExtensions.First(Of TData)(Cqrs.Azure.DocumentDb.DataStores.AzureDocumentDbDataStore(Of TData), Func(Of TData, System.Boolean))
  name.vb: First(Of TData)(AzureDocumentDbDataStore(Of TData), Func(Of TData, Boolean))
- uid: System.Linq.AzureDocumentDbDataStoreExtensions.FirstOrDefault``1(Cqrs.Azure.DocumentDb.DataStores.AzureDocumentDbDataStore{``0})
  commentId: M:System.Linq.AzureDocumentDbDataStoreExtensions.FirstOrDefault``1(Cqrs.Azure.DocumentDb.DataStores.AzureDocumentDbDataStore{``0})
  id: FirstOrDefault``1(Cqrs.Azure.DocumentDb.DataStores.AzureDocumentDbDataStore{``0})
  isExtensionMethod: true
  parent: System.Linq.AzureDocumentDbDataStoreExtensions
  langs:
  - csharp
  - vb
  name: FirstOrDefault<TData>(AzureDocumentDbDataStore<TData>)
  nameWithType: AzureDocumentDbDataStoreExtensions.FirstOrDefault<TData>(AzureDocumentDbDataStore<TData>)
  fullName: System.Linq.AzureDocumentDbDataStoreExtensions.FirstOrDefault<TData>(Cqrs.Azure.DocumentDb.DataStores.AzureDocumentDbDataStore<TData>)
  type: Method
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.DocumentDb/DataStores/AzureDocumentDbDataStoreExtensions.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: FirstOrDefault
    path: Framework/Azure/Cqrs.Azure.DocumentDb/DataStores/AzureDocumentDbDataStoreExtensions.cs
    startLine: 110
  assemblies:
  - Cqrs.Azure.DocumentDb
  namespace: System.Linq
  summary: "\nReturns the first element of the sequence that satisfies a condition or a default value if no such element is found.\n"
  example: []
  syntax:
    content: 'public static TData FirstOrDefault<TData>(this AzureDocumentDbDataStore<TData> source)where TData : AzureDocumentDbEntity'
    parameters:
    - id: source
      type: Cqrs.Azure.DocumentDb.DataStores.AzureDocumentDbDataStore{{TData}}
      description: The sequence to type as <see cref="!:IEnumerable&lt;T>"></see>.
    typeParameters:
    - id: TData
      description: The type of the elements of source.
    return:
      type: '{TData}'
      description: The first element of the sequence.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function FirstOrDefault(Of TData As AzureDocumentDbEntity)(source As AzureDocumentDbDataStore(Of TData)) As TData
  overload: System.Linq.AzureDocumentDbDataStoreExtensions.FirstOrDefault*
  nameWithType.vb: AzureDocumentDbDataStoreExtensions.FirstOrDefault(Of TData)(AzureDocumentDbDataStore(Of TData))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Linq.AzureDocumentDbDataStoreExtensions.FirstOrDefault(Of TData)(Cqrs.Azure.DocumentDb.DataStores.AzureDocumentDbDataStore(Of TData))
  name.vb: FirstOrDefault(Of TData)(AzureDocumentDbDataStore(Of TData))
- uid: System.Linq.AzureDocumentDbDataStoreExtensions.FirstOrDefault``1(Cqrs.Azure.DocumentDb.DataStores.AzureDocumentDbDataStore{``0},Func{``0,System.Boolean})
  commentId: M:System.Linq.AzureDocumentDbDataStoreExtensions.FirstOrDefault``1(Cqrs.Azure.DocumentDb.DataStores.AzureDocumentDbDataStore{``0},Func{``0,System.Boolean})
  id: FirstOrDefault``1(Cqrs.Azure.DocumentDb.DataStores.AzureDocumentDbDataStore{``0},Func{``0,System.Boolean})
  isExtensionMethod: true
  parent: System.Linq.AzureDocumentDbDataStoreExtensions
  langs:
  - csharp
  - vb
  name: FirstOrDefault<TData>(AzureDocumentDbDataStore<TData>, Func<TData, Boolean>)
  nameWithType: AzureDocumentDbDataStoreExtensions.FirstOrDefault<TData>(AzureDocumentDbDataStore<TData>, Func<TData, Boolean>)
  fullName: System.Linq.AzureDocumentDbDataStoreExtensions.FirstOrDefault<TData>(Cqrs.Azure.DocumentDb.DataStores.AzureDocumentDbDataStore<TData>, Func<TData, System.Boolean>)
  type: Method
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.DocumentDb/DataStores/AzureDocumentDbDataStoreExtensions.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: FirstOrDefault
    path: Framework/Azure/Cqrs.Azure.DocumentDb/DataStores/AzureDocumentDbDataStoreExtensions.cs
    startLine: 124
  assemblies:
  - Cqrs.Azure.DocumentDb
  namespace: System.Linq
  summary: "\nReturns the first element of a sequence, or a default value if the sequence contains no elements.\n"
  example: []
  syntax:
    content: 'public static TData FirstOrDefault<TData>(this AzureDocumentDbDataStore<TData> source, Func<TData, bool> predicate)where TData : AzureDocumentDbEntity'
    parameters:
    - id: source
      type: Cqrs.Azure.DocumentDb.DataStores.AzureDocumentDbDataStore{{TData}}
      description: The sequence to type as <see cref="!:IEnumerable&lt;T>"></see>.
    - id: predicate
      type: Func{{TData},System.Boolean}
      description: A function to test an element for a condition.
    typeParameters:
    - id: TData
      description: The type of the elements of source.
    return:
      type: '{TData}'
      description: The first element of the sequence.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function FirstOrDefault(Of TData As AzureDocumentDbEntity)(source As AzureDocumentDbDataStore(Of TData), predicate As Func(Of TData, Boolean)) As TData
  overload: System.Linq.AzureDocumentDbDataStoreExtensions.FirstOrDefault*
  nameWithType.vb: AzureDocumentDbDataStoreExtensions.FirstOrDefault(Of TData)(AzureDocumentDbDataStore(Of TData), Func(Of TData, Boolean))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Linq.AzureDocumentDbDataStoreExtensions.FirstOrDefault(Of TData)(Cqrs.Azure.DocumentDb.DataStores.AzureDocumentDbDataStore(Of TData), Func(Of TData, System.Boolean))
  name.vb: FirstOrDefault(Of TData)(AzureDocumentDbDataStore(Of TData), Func(Of TData, Boolean))
references:
- uid: Cqrs.Azure.DocumentDb.DataStores.AzureDocumentDbDataStore`1
  commentId: T:Cqrs.Azure.DocumentDb.DataStores.AzureDocumentDbDataStore`1
  isExternal: false
  name: AzureDocumentDbDataStore<TData>
  nameWithType: AzureDocumentDbDataStore<TData>
  fullName: Cqrs.Azure.DocumentDb.DataStores.AzureDocumentDbDataStore<TData>
  nameWithType.vb: AzureDocumentDbDataStore(Of TData)
  fullName.vb: Cqrs.Azure.DocumentDb.DataStores.AzureDocumentDbDataStore(Of TData)
  name.vb: AzureDocumentDbDataStore(Of TData)
  spec.csharp:
  - uid: Cqrs.Azure.DocumentDb.DataStores.AzureDocumentDbDataStore`1
    name: AzureDocumentDbDataStore
    nameWithType: AzureDocumentDbDataStore
    fullName: Cqrs.Azure.DocumentDb.DataStores.AzureDocumentDbDataStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Azure.DocumentDb.DataStores.AzureDocumentDbDataStore`1
    name: AzureDocumentDbDataStore
    nameWithType: AzureDocumentDbDataStore
    fullName: Cqrs.Azure.DocumentDb.DataStores.AzureDocumentDbDataStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq
  commentId: N:System.Linq
  isExternal: false
  name: System.Linq
  nameWithType: System.Linq
  fullName: System.Linq
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Linq.AzureDocumentDbDataStoreExtensions.Single*
  commentId: Overload:System.Linq.AzureDocumentDbDataStoreExtensions.Single
  isExternal: false
  name: Single
  nameWithType: AzureDocumentDbDataStoreExtensions.Single
  fullName: System.Linq.AzureDocumentDbDataStoreExtensions.Single
- uid: Cqrs.Azure.DocumentDb.DataStores.AzureDocumentDbDataStore{{TData}}
  commentId: T:Cqrs.Azure.DocumentDb.DataStores.AzureDocumentDbDataStore{``0}
  parent: Cqrs.Azure.DocumentDb.DataStores
  definition: Cqrs.Azure.DocumentDb.DataStores.AzureDocumentDbDataStore`1
  name: AzureDocumentDbDataStore<TData>
  nameWithType: AzureDocumentDbDataStore<TData>
  fullName: Cqrs.Azure.DocumentDb.DataStores.AzureDocumentDbDataStore<TData>
  nameWithType.vb: AzureDocumentDbDataStore(Of TData)
  fullName.vb: Cqrs.Azure.DocumentDb.DataStores.AzureDocumentDbDataStore(Of TData)
  name.vb: AzureDocumentDbDataStore(Of TData)
  spec.csharp:
  - uid: Cqrs.Azure.DocumentDb.DataStores.AzureDocumentDbDataStore`1
    name: AzureDocumentDbDataStore
    nameWithType: AzureDocumentDbDataStore
    fullName: Cqrs.Azure.DocumentDb.DataStores.AzureDocumentDbDataStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Azure.DocumentDb.DataStores.AzureDocumentDbDataStore`1
    name: AzureDocumentDbDataStore
    nameWithType: AzureDocumentDbDataStore
    fullName: Cqrs.Azure.DocumentDb.DataStores.AzureDocumentDbDataStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: '{TData}'
  commentId: '!:TData'
  definition: TData
  name: TData
  nameWithType: TData
  fullName: TData
- uid: Cqrs.Azure.DocumentDb.DataStores
  commentId: N:Cqrs.Azure.DocumentDb.DataStores
  isExternal: false
  name: Cqrs.Azure.DocumentDb.DataStores
  nameWithType: Cqrs.Azure.DocumentDb.DataStores
  fullName: Cqrs.Azure.DocumentDb.DataStores
- uid: TData
  isExternal: false
  name: TData
  nameWithType: TData
  fullName: TData
- uid: Func{{TData},System.Boolean}
  commentId: '!:Func{``0,System.Boolean}'
  definition: Func`2
  name: Func<TData, Boolean>
  nameWithType: Func<TData, Boolean>
  fullName: Func<TData, System.Boolean>
  nameWithType.vb: Func(Of TData, Boolean)
  fullName.vb: Func(Of TData, System.Boolean)
  name.vb: Func(Of TData, Boolean)
  spec.csharp:
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Func`2
  isExternal: true
  name: Func<, >
  nameWithType: Func<, >
  fullName: Func<, >
  nameWithType.vb: Func(Of , )
  fullName.vb: Func(Of , )
  name.vb: Func(Of , )
  spec.csharp:
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.AzureDocumentDbDataStoreExtensions.SingleOrDefault*
  commentId: Overload:System.Linq.AzureDocumentDbDataStoreExtensions.SingleOrDefault
  isExternal: false
  name: SingleOrDefault
  nameWithType: AzureDocumentDbDataStoreExtensions.SingleOrDefault
  fullName: System.Linq.AzureDocumentDbDataStoreExtensions.SingleOrDefault
- uid: System.Linq.AzureDocumentDbDataStoreExtensions.First*
  commentId: Overload:System.Linq.AzureDocumentDbDataStoreExtensions.First
  isExternal: false
  name: First
  nameWithType: AzureDocumentDbDataStoreExtensions.First
  fullName: System.Linq.AzureDocumentDbDataStoreExtensions.First
- uid: System.Linq.AzureDocumentDbDataStoreExtensions.FirstOrDefault*
  commentId: Overload:System.Linq.AzureDocumentDbDataStoreExtensions.FirstOrDefault
  isExternal: false
  name: FirstOrDefault
  nameWithType: AzureDocumentDbDataStoreExtensions.FirstOrDefault
  fullName: System.Linq.AzureDocumentDbDataStoreExtensions.FirstOrDefault
