### YamlMime:ManagedReference
items:
- uid: Cqrs.MongoDB.Serialisers.BasicStructSerialiser`1
  commentId: T:Cqrs.MongoDB.Serialisers.BasicStructSerialiser`1
  id: BasicStructSerialiser`1
  parent: Cqrs.MongoDB.Serialisers
  children:
  - Cqrs.MongoDB.Serialisers.BasicStructSerialiser`1.Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)
  - Cqrs.MongoDB.Serialisers.BasicStructSerialiser`1.Serialize(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,`0)
  langs:
  - csharp
  - vb
  name: BasicStructSerialiser<TStruct>
  nameWithType: BasicStructSerialiser<TStruct>
  fullName: Cqrs.MongoDB.Serialisers.BasicStructSerialiser<TStruct>
  type: Class
  source:
    remote:
      path: Framework/Cqrs.MongoDB/Serialisers/BasicStructSerialiser.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: BasicStructSerialiser
    path: Framework/Cqrs.MongoDB/Serialisers/BasicStructSerialiser.cs
    startLine: 23
  assemblies:
  - Cqrs.MongoDB
  namespace: Cqrs.MongoDB.Serialisers
  summary: "\nA <xref href=\"MongoDB.Bson.Serialization.Serializers.StructSerializerBase%601\" data-throw-if-not-resolved=\"false\"></xref> with reasonable level support for structs.\n"
  example: []
  syntax:
    content: 'public class BasicStructSerialiser<TStruct> : StructSerializerBase<TStruct>, IBsonSerializer<TStruct>, IBsonSerializer where TStruct : struct'
    typeParameters:
    - id: TStruct
      description: The <xref href="System.Type" data-throw-if-not-resolved="false"></xref> of struct.
    content.vb: >-
      Public Class BasicStructSerialiser(Of TStruct As Structure)
          Inherits StructSerializerBase(Of TStruct)
          Implements IBsonSerializer(Of TStruct), IBsonSerializer
  inheritance:
  - System.Object
  - MongoDB.Bson.Serialization.Serializers.SerializerBase{{TStruct}}
  - MongoDB.Bson.Serialization.Serializers.StructSerializerBase{{TStruct}}
  implements:
  - MongoDB.Bson.Serialization.IBsonSerializer{{TStruct}}
  - MongoDB.Bson.Serialization.IBsonSerializer
  inheritedMembers:
  - MongoDB.Bson.Serialization.Serializers.SerializerBase{{TStruct}}.CreateCannotBeDeserializedException
  - MongoDB.Bson.Serialization.Serializers.SerializerBase{{TStruct}}.CreateCannotBeSerializedException
  - MongoDB.Bson.Serialization.Serializers.SerializerBase{{TStruct}}.CreateCannotDeserializeFromBsonTypeException(MongoDB.Bson.BsonType)
  - MongoDB.Bson.Serialization.Serializers.SerializerBase{{TStruct}}.EnsureBsonTypeEquals(MongoDB.Bson.IO.IBsonReader,MongoDB.Bson.BsonType)
  - MongoDB.Bson.Serialization.Serializers.SerializerBase{{TStruct}}.MongoDB#Bson#Serialization#IBsonSerializer#Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)
  - MongoDB.Bson.Serialization.Serializers.SerializerBase{{TStruct}}.MongoDB#Bson#Serialization#IBsonSerializer#Serialize(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,System.Object)
  - MongoDB.Bson.Serialization.Serializers.SerializerBase{{TStruct}}.ValueType
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: BasicStructSerialiser(Of TStruct)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Cqrs.MongoDB.Serialisers.BasicStructSerialiser(Of TStruct)
  name.vb: BasicStructSerialiser(Of TStruct)
- uid: Cqrs.MongoDB.Serialisers.BasicStructSerialiser`1.Serialize(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,`0)
  commentId: M:Cqrs.MongoDB.Serialisers.BasicStructSerialiser`1.Serialize(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,`0)
  id: Serialize(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,`0)
  parent: Cqrs.MongoDB.Serialisers.BasicStructSerialiser`1
  langs:
  - csharp
  - vb
  name: Serialize(BsonSerializationContext, BsonSerializationArgs, TStruct)
  nameWithType: BasicStructSerialiser<TStruct>.Serialize(BsonSerializationContext, BsonSerializationArgs, TStruct)
  fullName: Cqrs.MongoDB.Serialisers.BasicStructSerialiser<TStruct>.Serialize(MongoDB.Bson.Serialization.BsonSerializationContext, MongoDB.Bson.Serialization.BsonSerializationArgs, TStruct)
  type: Method
  source:
    remote:
      path: Framework/Cqrs.MongoDB/Serialisers/BasicStructSerialiser.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Serialize
    path: Framework/Cqrs.MongoDB/Serialisers/BasicStructSerialiser.cs
    startLine: 32
  assemblies:
  - Cqrs.MongoDB
  namespace: Cqrs.MongoDB.Serialisers
  summary: "\nSerializes the provide <code data-dev-comment-type=\"paramref\">value</code> as a set of key/value pairs.\n"
  example: []
  syntax:
    content: public override void Serialize(BsonSerializationContext context, BsonSerializationArgs args, TStruct value)
    parameters:
    - id: context
      type: MongoDB.Bson.Serialization.BsonSerializationContext
      description: The serialisation context.
    - id: args
      type: MongoDB.Bson.Serialization.BsonSerializationArgs
      description: The serialisation arguments.
    - id: value
      type: '{TStruct}'
      description: The value.
    content.vb: Public Overrides Sub Serialize(context As BsonSerializationContext, args As BsonSerializationArgs, value As TStruct)
  overridden: MongoDB.Bson.Serialization.Serializers.SerializerBase{{TStruct}}.Serialize(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,{TStruct})
  overload: Cqrs.MongoDB.Serialisers.BasicStructSerialiser`1.Serialize*
  nameWithType.vb: BasicStructSerialiser(Of TStruct).Serialize(BsonSerializationContext, BsonSerializationArgs, TStruct)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Cqrs.MongoDB.Serialisers.BasicStructSerialiser(Of TStruct).Serialize(MongoDB.Bson.Serialization.BsonSerializationContext, MongoDB.Bson.Serialization.BsonSerializationArgs, TStruct)
- uid: Cqrs.MongoDB.Serialisers.BasicStructSerialiser`1.Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)
  commentId: M:Cqrs.MongoDB.Serialisers.BasicStructSerialiser`1.Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)
  id: Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)
  parent: Cqrs.MongoDB.Serialisers.BasicStructSerialiser`1
  langs:
  - csharp
  - vb
  name: Deserialize(BsonDeserializationContext, BsonDeserializationArgs)
  nameWithType: BasicStructSerialiser<TStruct>.Deserialize(BsonDeserializationContext, BsonDeserializationArgs)
  fullName: Cqrs.MongoDB.Serialisers.BasicStructSerialiser<TStruct>.Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext, MongoDB.Bson.Serialization.BsonDeserializationArgs)
  type: Method
  source:
    remote:
      path: Framework/Cqrs.MongoDB/Serialisers/BasicStructSerialiser.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Deserialize
    path: Framework/Cqrs.MongoDB/Serialisers/BasicStructSerialiser.cs
    startLine: 66
  assemblies:
  - Cqrs.MongoDB
  namespace: Cqrs.MongoDB.Serialisers
  summary: "\nDeserialises a value from key/value pairs.\n"
  example: []
  syntax:
    content: public override TStruct Deserialize(BsonDeserializationContext context, BsonDeserializationArgs args)
    parameters:
    - id: context
      type: MongoDB.Bson.Serialization.BsonDeserializationContext
      description: The deserialisation context.
    - id: args
      type: MongoDB.Bson.Serialization.BsonDeserializationArgs
      description: The deserialisation arguments.
    return:
      type: '{TStruct}'
      description: "\nA deserialised value.\n"
    content.vb: Public Overrides Function Deserialize(context As BsonDeserializationContext, args As BsonDeserializationArgs) As TStruct
  overridden: MongoDB.Bson.Serialization.Serializers.SerializerBase{{TStruct}}.Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)
  overload: Cqrs.MongoDB.Serialisers.BasicStructSerialiser`1.Deserialize*
  nameWithType.vb: BasicStructSerialiser(Of TStruct).Deserialize(BsonDeserializationContext, BsonDeserializationArgs)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Cqrs.MongoDB.Serialisers.BasicStructSerialiser(Of TStruct).Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext, MongoDB.Bson.Serialization.BsonDeserializationArgs)
references:
- uid: MongoDB.Bson.Serialization.Serializers.StructSerializerBase`1
  commentId: T:MongoDB.Bson.Serialization.Serializers.StructSerializerBase`1
  isExternal: true
  name: StructSerializerBase<TValue>
  nameWithType: StructSerializerBase<TValue>
  fullName: MongoDB.Bson.Serialization.Serializers.StructSerializerBase<TValue>
  nameWithType.vb: StructSerializerBase(Of TValue)
  fullName.vb: MongoDB.Bson.Serialization.Serializers.StructSerializerBase(Of TValue)
  name.vb: StructSerializerBase(Of TValue)
  spec.csharp:
  - uid: MongoDB.Bson.Serialization.Serializers.StructSerializerBase`1
    name: StructSerializerBase
    nameWithType: StructSerializerBase
    fullName: MongoDB.Bson.Serialization.Serializers.StructSerializerBase
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: MongoDB.Bson.Serialization.Serializers.StructSerializerBase`1
    name: StructSerializerBase
    nameWithType: StructSerializerBase
    fullName: MongoDB.Bson.Serialization.Serializers.StructSerializerBase
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Cqrs.MongoDB.Serialisers
  commentId: N:Cqrs.MongoDB.Serialisers
  isExternal: false
  name: Cqrs.MongoDB.Serialisers
  nameWithType: Cqrs.MongoDB.Serialisers
  fullName: Cqrs.MongoDB.Serialisers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: MongoDB.Bson.Serialization.Serializers.SerializerBase{{TStruct}}
  commentId: T:MongoDB.Bson.Serialization.Serializers.SerializerBase{`0}
  parent: MongoDB.Bson.Serialization.Serializers
  definition: MongoDB.Bson.Serialization.Serializers.SerializerBase`1
  name: SerializerBase<TStruct>
  nameWithType: SerializerBase<TStruct>
  fullName: MongoDB.Bson.Serialization.Serializers.SerializerBase<TStruct>
  nameWithType.vb: SerializerBase(Of TStruct)
  fullName.vb: MongoDB.Bson.Serialization.Serializers.SerializerBase(Of TStruct)
  name.vb: SerializerBase(Of TStruct)
  spec.csharp:
  - uid: MongoDB.Bson.Serialization.Serializers.SerializerBase`1
    name: SerializerBase
    nameWithType: SerializerBase
    fullName: MongoDB.Bson.Serialization.Serializers.SerializerBase
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TStruct
    nameWithType: TStruct
    fullName: TStruct
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: MongoDB.Bson.Serialization.Serializers.SerializerBase`1
    name: SerializerBase
    nameWithType: SerializerBase
    fullName: MongoDB.Bson.Serialization.Serializers.SerializerBase
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TStruct
    nameWithType: TStruct
    fullName: TStruct
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Bson.Serialization.Serializers.StructSerializerBase{{TStruct}}
  commentId: T:MongoDB.Bson.Serialization.Serializers.StructSerializerBase{`0}
  parent: MongoDB.Bson.Serialization.Serializers
  definition: MongoDB.Bson.Serialization.Serializers.StructSerializerBase`1
  name: StructSerializerBase<TStruct>
  nameWithType: StructSerializerBase<TStruct>
  fullName: MongoDB.Bson.Serialization.Serializers.StructSerializerBase<TStruct>
  nameWithType.vb: StructSerializerBase(Of TStruct)
  fullName.vb: MongoDB.Bson.Serialization.Serializers.StructSerializerBase(Of TStruct)
  name.vb: StructSerializerBase(Of TStruct)
  spec.csharp:
  - uid: MongoDB.Bson.Serialization.Serializers.StructSerializerBase`1
    name: StructSerializerBase
    nameWithType: StructSerializerBase
    fullName: MongoDB.Bson.Serialization.Serializers.StructSerializerBase
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TStruct
    nameWithType: TStruct
    fullName: TStruct
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: MongoDB.Bson.Serialization.Serializers.StructSerializerBase`1
    name: StructSerializerBase
    nameWithType: StructSerializerBase
    fullName: MongoDB.Bson.Serialization.Serializers.StructSerializerBase
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TStruct
    nameWithType: TStruct
    fullName: TStruct
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Bson.Serialization.IBsonSerializer{{TStruct}}
  commentId: T:MongoDB.Bson.Serialization.IBsonSerializer{`0}
  parent: MongoDB.Bson.Serialization
  definition: MongoDB.Bson.Serialization.IBsonSerializer`1
  name: IBsonSerializer<TStruct>
  nameWithType: IBsonSerializer<TStruct>
  fullName: MongoDB.Bson.Serialization.IBsonSerializer<TStruct>
  nameWithType.vb: IBsonSerializer(Of TStruct)
  fullName.vb: MongoDB.Bson.Serialization.IBsonSerializer(Of TStruct)
  name.vb: IBsonSerializer(Of TStruct)
  spec.csharp:
  - uid: MongoDB.Bson.Serialization.IBsonSerializer`1
    name: IBsonSerializer
    nameWithType: IBsonSerializer
    fullName: MongoDB.Bson.Serialization.IBsonSerializer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TStruct
    nameWithType: TStruct
    fullName: TStruct
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: MongoDB.Bson.Serialization.IBsonSerializer`1
    name: IBsonSerializer
    nameWithType: IBsonSerializer
    fullName: MongoDB.Bson.Serialization.IBsonSerializer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TStruct
    nameWithType: TStruct
    fullName: TStruct
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Bson.Serialization.IBsonSerializer
  commentId: T:MongoDB.Bson.Serialization.IBsonSerializer
  parent: MongoDB.Bson.Serialization
  isExternal: true
  name: IBsonSerializer
  nameWithType: IBsonSerializer
  fullName: MongoDB.Bson.Serialization.IBsonSerializer
- uid: MongoDB.Bson.Serialization.Serializers.SerializerBase{{TStruct}}.CreateCannotBeDeserializedException
  commentId: M:MongoDB.Bson.Serialization.Serializers.SerializerBase{`0}.CreateCannotBeDeserializedException
  parent: MongoDB.Bson.Serialization.Serializers.SerializerBase{{TStruct}}
  definition: MongoDB.Bson.Serialization.Serializers.SerializerBase`1.CreateCannotBeDeserializedException
  name: CreateCannotBeDeserializedException()
  nameWithType: SerializerBase<TStruct>.CreateCannotBeDeserializedException()
  fullName: MongoDB.Bson.Serialization.Serializers.SerializerBase<TStruct>.CreateCannotBeDeserializedException()
  nameWithType.vb: SerializerBase(Of TStruct).CreateCannotBeDeserializedException()
  fullName.vb: MongoDB.Bson.Serialization.Serializers.SerializerBase(Of TStruct).CreateCannotBeDeserializedException()
  spec.csharp:
  - uid: MongoDB.Bson.Serialization.Serializers.SerializerBase`1.CreateCannotBeDeserializedException
    name: CreateCannotBeDeserializedException
    nameWithType: SerializerBase<TStruct>.CreateCannotBeDeserializedException
    fullName: MongoDB.Bson.Serialization.Serializers.SerializerBase<TStruct>.CreateCannotBeDeserializedException
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Bson.Serialization.Serializers.SerializerBase`1.CreateCannotBeDeserializedException
    name: CreateCannotBeDeserializedException
    nameWithType: SerializerBase(Of TStruct).CreateCannotBeDeserializedException
    fullName: MongoDB.Bson.Serialization.Serializers.SerializerBase(Of TStruct).CreateCannotBeDeserializedException
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Bson.Serialization.Serializers.SerializerBase{{TStruct}}.CreateCannotBeSerializedException
  commentId: M:MongoDB.Bson.Serialization.Serializers.SerializerBase{`0}.CreateCannotBeSerializedException
  parent: MongoDB.Bson.Serialization.Serializers.SerializerBase{{TStruct}}
  definition: MongoDB.Bson.Serialization.Serializers.SerializerBase`1.CreateCannotBeSerializedException
  name: CreateCannotBeSerializedException()
  nameWithType: SerializerBase<TStruct>.CreateCannotBeSerializedException()
  fullName: MongoDB.Bson.Serialization.Serializers.SerializerBase<TStruct>.CreateCannotBeSerializedException()
  nameWithType.vb: SerializerBase(Of TStruct).CreateCannotBeSerializedException()
  fullName.vb: MongoDB.Bson.Serialization.Serializers.SerializerBase(Of TStruct).CreateCannotBeSerializedException()
  spec.csharp:
  - uid: MongoDB.Bson.Serialization.Serializers.SerializerBase`1.CreateCannotBeSerializedException
    name: CreateCannotBeSerializedException
    nameWithType: SerializerBase<TStruct>.CreateCannotBeSerializedException
    fullName: MongoDB.Bson.Serialization.Serializers.SerializerBase<TStruct>.CreateCannotBeSerializedException
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Bson.Serialization.Serializers.SerializerBase`1.CreateCannotBeSerializedException
    name: CreateCannotBeSerializedException
    nameWithType: SerializerBase(Of TStruct).CreateCannotBeSerializedException
    fullName: MongoDB.Bson.Serialization.Serializers.SerializerBase(Of TStruct).CreateCannotBeSerializedException
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Bson.Serialization.Serializers.SerializerBase{{TStruct}}.CreateCannotDeserializeFromBsonTypeException(MongoDB.Bson.BsonType)
  commentId: M:MongoDB.Bson.Serialization.Serializers.SerializerBase{`0}.CreateCannotDeserializeFromBsonTypeException(MongoDB.Bson.BsonType)
  parent: MongoDB.Bson.Serialization.Serializers.SerializerBase{{TStruct}}
  definition: MongoDB.Bson.Serialization.Serializers.SerializerBase`1.CreateCannotDeserializeFromBsonTypeException(MongoDB.Bson.BsonType)
  name: CreateCannotDeserializeFromBsonTypeException(BsonType)
  nameWithType: SerializerBase<TStruct>.CreateCannotDeserializeFromBsonTypeException(BsonType)
  fullName: MongoDB.Bson.Serialization.Serializers.SerializerBase<TStruct>.CreateCannotDeserializeFromBsonTypeException(MongoDB.Bson.BsonType)
  nameWithType.vb: SerializerBase(Of TStruct).CreateCannotDeserializeFromBsonTypeException(BsonType)
  fullName.vb: MongoDB.Bson.Serialization.Serializers.SerializerBase(Of TStruct).CreateCannotDeserializeFromBsonTypeException(MongoDB.Bson.BsonType)
  spec.csharp:
  - uid: MongoDB.Bson.Serialization.Serializers.SerializerBase`1.CreateCannotDeserializeFromBsonTypeException(MongoDB.Bson.BsonType)
    name: CreateCannotDeserializeFromBsonTypeException
    nameWithType: SerializerBase<TStruct>.CreateCannotDeserializeFromBsonTypeException
    fullName: MongoDB.Bson.Serialization.Serializers.SerializerBase<TStruct>.CreateCannotDeserializeFromBsonTypeException
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: MongoDB.Bson.BsonType
    name: BsonType
    nameWithType: BsonType
    fullName: MongoDB.Bson.BsonType
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Bson.Serialization.Serializers.SerializerBase`1.CreateCannotDeserializeFromBsonTypeException(MongoDB.Bson.BsonType)
    name: CreateCannotDeserializeFromBsonTypeException
    nameWithType: SerializerBase(Of TStruct).CreateCannotDeserializeFromBsonTypeException
    fullName: MongoDB.Bson.Serialization.Serializers.SerializerBase(Of TStruct).CreateCannotDeserializeFromBsonTypeException
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: MongoDB.Bson.BsonType
    name: BsonType
    nameWithType: BsonType
    fullName: MongoDB.Bson.BsonType
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Bson.Serialization.Serializers.SerializerBase{{TStruct}}.EnsureBsonTypeEquals(MongoDB.Bson.IO.IBsonReader,MongoDB.Bson.BsonType)
  commentId: M:MongoDB.Bson.Serialization.Serializers.SerializerBase{`0}.EnsureBsonTypeEquals(MongoDB.Bson.IO.IBsonReader,MongoDB.Bson.BsonType)
  parent: MongoDB.Bson.Serialization.Serializers.SerializerBase{{TStruct}}
  definition: MongoDB.Bson.Serialization.Serializers.SerializerBase`1.EnsureBsonTypeEquals(MongoDB.Bson.IO.IBsonReader,MongoDB.Bson.BsonType)
  name: EnsureBsonTypeEquals(IBsonReader, BsonType)
  nameWithType: SerializerBase<TStruct>.EnsureBsonTypeEquals(IBsonReader, BsonType)
  fullName: MongoDB.Bson.Serialization.Serializers.SerializerBase<TStruct>.EnsureBsonTypeEquals(MongoDB.Bson.IO.IBsonReader, MongoDB.Bson.BsonType)
  nameWithType.vb: SerializerBase(Of TStruct).EnsureBsonTypeEquals(IBsonReader, BsonType)
  fullName.vb: MongoDB.Bson.Serialization.Serializers.SerializerBase(Of TStruct).EnsureBsonTypeEquals(MongoDB.Bson.IO.IBsonReader, MongoDB.Bson.BsonType)
  spec.csharp:
  - uid: MongoDB.Bson.Serialization.Serializers.SerializerBase`1.EnsureBsonTypeEquals(MongoDB.Bson.IO.IBsonReader,MongoDB.Bson.BsonType)
    name: EnsureBsonTypeEquals
    nameWithType: SerializerBase<TStruct>.EnsureBsonTypeEquals
    fullName: MongoDB.Bson.Serialization.Serializers.SerializerBase<TStruct>.EnsureBsonTypeEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: MongoDB.Bson.IO.IBsonReader
    name: IBsonReader
    nameWithType: IBsonReader
    fullName: MongoDB.Bson.IO.IBsonReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MongoDB.Bson.BsonType
    name: BsonType
    nameWithType: BsonType
    fullName: MongoDB.Bson.BsonType
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Bson.Serialization.Serializers.SerializerBase`1.EnsureBsonTypeEquals(MongoDB.Bson.IO.IBsonReader,MongoDB.Bson.BsonType)
    name: EnsureBsonTypeEquals
    nameWithType: SerializerBase(Of TStruct).EnsureBsonTypeEquals
    fullName: MongoDB.Bson.Serialization.Serializers.SerializerBase(Of TStruct).EnsureBsonTypeEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: MongoDB.Bson.IO.IBsonReader
    name: IBsonReader
    nameWithType: IBsonReader
    fullName: MongoDB.Bson.IO.IBsonReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MongoDB.Bson.BsonType
    name: BsonType
    nameWithType: BsonType
    fullName: MongoDB.Bson.BsonType
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Bson.Serialization.Serializers.SerializerBase{{TStruct}}.MongoDB#Bson#Serialization#IBsonSerializer#Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)
  commentId: M:MongoDB.Bson.Serialization.Serializers.SerializerBase{`0}.MongoDB#Bson#Serialization#IBsonSerializer#Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)
  parent: MongoDB.Bson.Serialization.Serializers.SerializerBase{{TStruct}}
  definition: MongoDB.Bson.Serialization.Serializers.SerializerBase`1.MongoDB#Bson#Serialization#IBsonSerializer#Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)
  name: IBsonSerializer.Deserialize(BsonDeserializationContext, BsonDeserializationArgs)
  nameWithType: SerializerBase<TStruct>.IBsonSerializer.Deserialize(BsonDeserializationContext, BsonDeserializationArgs)
  fullName: MongoDB.Bson.Serialization.Serializers.SerializerBase<TStruct>.MongoDB.Bson.Serialization.IBsonSerializer.Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext, MongoDB.Bson.Serialization.BsonDeserializationArgs)
  nameWithType.vb: SerializerBase(Of TStruct).MongoDB.Bson.Serialization.IBsonSerializer.Deserialize(BsonDeserializationContext, BsonDeserializationArgs)
  fullName.vb: MongoDB.Bson.Serialization.Serializers.SerializerBase(Of TStruct).MongoDB.Bson.Serialization.IBsonSerializer.Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext, MongoDB.Bson.Serialization.BsonDeserializationArgs)
  name.vb: MongoDB.Bson.Serialization.IBsonSerializer.Deserialize(BsonDeserializationContext, BsonDeserializationArgs)
  spec.csharp:
  - uid: MongoDB.Bson.Serialization.Serializers.SerializerBase`1.MongoDB#Bson#Serialization#IBsonSerializer#Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)
    name: IBsonSerializer.Deserialize
    nameWithType: SerializerBase<TStruct>.IBsonSerializer.Deserialize
    fullName: MongoDB.Bson.Serialization.Serializers.SerializerBase<TStruct>.MongoDB.Bson.Serialization.IBsonSerializer.Deserialize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: MongoDB.Bson.Serialization.BsonDeserializationContext
    name: BsonDeserializationContext
    nameWithType: BsonDeserializationContext
    fullName: MongoDB.Bson.Serialization.BsonDeserializationContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MongoDB.Bson.Serialization.BsonDeserializationArgs
    name: BsonDeserializationArgs
    nameWithType: BsonDeserializationArgs
    fullName: MongoDB.Bson.Serialization.BsonDeserializationArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Bson.Serialization.Serializers.SerializerBase`1.MongoDB#Bson#Serialization#IBsonSerializer#Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)
    name: MongoDB.Bson.Serialization.IBsonSerializer.Deserialize
    nameWithType: SerializerBase(Of TStruct).MongoDB.Bson.Serialization.IBsonSerializer.Deserialize
    fullName: MongoDB.Bson.Serialization.Serializers.SerializerBase(Of TStruct).MongoDB.Bson.Serialization.IBsonSerializer.Deserialize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: MongoDB.Bson.Serialization.BsonDeserializationContext
    name: BsonDeserializationContext
    nameWithType: BsonDeserializationContext
    fullName: MongoDB.Bson.Serialization.BsonDeserializationContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MongoDB.Bson.Serialization.BsonDeserializationArgs
    name: BsonDeserializationArgs
    nameWithType: BsonDeserializationArgs
    fullName: MongoDB.Bson.Serialization.BsonDeserializationArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Bson.Serialization.Serializers.SerializerBase{{TStruct}}.MongoDB#Bson#Serialization#IBsonSerializer#Serialize(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,System.Object)
  commentId: M:MongoDB.Bson.Serialization.Serializers.SerializerBase{`0}.MongoDB#Bson#Serialization#IBsonSerializer#Serialize(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,System.Object)
  parent: MongoDB.Bson.Serialization.Serializers.SerializerBase{{TStruct}}
  definition: MongoDB.Bson.Serialization.Serializers.SerializerBase`1.MongoDB#Bson#Serialization#IBsonSerializer#Serialize(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,System.Object)
  name: IBsonSerializer.Serialize(BsonSerializationContext, BsonSerializationArgs, Object)
  nameWithType: SerializerBase<TStruct>.IBsonSerializer.Serialize(BsonSerializationContext, BsonSerializationArgs, Object)
  fullName: MongoDB.Bson.Serialization.Serializers.SerializerBase<TStruct>.MongoDB.Bson.Serialization.IBsonSerializer.Serialize(MongoDB.Bson.Serialization.BsonSerializationContext, MongoDB.Bson.Serialization.BsonSerializationArgs, System.Object)
  nameWithType.vb: SerializerBase(Of TStruct).MongoDB.Bson.Serialization.IBsonSerializer.Serialize(BsonSerializationContext, BsonSerializationArgs, Object)
  fullName.vb: MongoDB.Bson.Serialization.Serializers.SerializerBase(Of TStruct).MongoDB.Bson.Serialization.IBsonSerializer.Serialize(MongoDB.Bson.Serialization.BsonSerializationContext, MongoDB.Bson.Serialization.BsonSerializationArgs, System.Object)
  name.vb: MongoDB.Bson.Serialization.IBsonSerializer.Serialize(BsonSerializationContext, BsonSerializationArgs, Object)
  spec.csharp:
  - uid: MongoDB.Bson.Serialization.Serializers.SerializerBase`1.MongoDB#Bson#Serialization#IBsonSerializer#Serialize(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,System.Object)
    name: IBsonSerializer.Serialize
    nameWithType: SerializerBase<TStruct>.IBsonSerializer.Serialize
    fullName: MongoDB.Bson.Serialization.Serializers.SerializerBase<TStruct>.MongoDB.Bson.Serialization.IBsonSerializer.Serialize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: MongoDB.Bson.Serialization.BsonSerializationContext
    name: BsonSerializationContext
    nameWithType: BsonSerializationContext
    fullName: MongoDB.Bson.Serialization.BsonSerializationContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MongoDB.Bson.Serialization.BsonSerializationArgs
    name: BsonSerializationArgs
    nameWithType: BsonSerializationArgs
    fullName: MongoDB.Bson.Serialization.BsonSerializationArgs
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Bson.Serialization.Serializers.SerializerBase`1.MongoDB#Bson#Serialization#IBsonSerializer#Serialize(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,System.Object)
    name: MongoDB.Bson.Serialization.IBsonSerializer.Serialize
    nameWithType: SerializerBase(Of TStruct).MongoDB.Bson.Serialization.IBsonSerializer.Serialize
    fullName: MongoDB.Bson.Serialization.Serializers.SerializerBase(Of TStruct).MongoDB.Bson.Serialization.IBsonSerializer.Serialize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: MongoDB.Bson.Serialization.BsonSerializationContext
    name: BsonSerializationContext
    nameWithType: BsonSerializationContext
    fullName: MongoDB.Bson.Serialization.BsonSerializationContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MongoDB.Bson.Serialization.BsonSerializationArgs
    name: BsonSerializationArgs
    nameWithType: BsonSerializationArgs
    fullName: MongoDB.Bson.Serialization.BsonSerializationArgs
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Bson.Serialization.Serializers.SerializerBase{{TStruct}}.ValueType
  commentId: P:MongoDB.Bson.Serialization.Serializers.SerializerBase{`0}.ValueType
  parent: MongoDB.Bson.Serialization.Serializers.SerializerBase{{TStruct}}
  definition: MongoDB.Bson.Serialization.Serializers.SerializerBase`1.ValueType
  name: ValueType
  nameWithType: SerializerBase<TStruct>.ValueType
  fullName: MongoDB.Bson.Serialization.Serializers.SerializerBase<TStruct>.ValueType
  nameWithType.vb: SerializerBase(Of TStruct).ValueType
  fullName.vb: MongoDB.Bson.Serialization.Serializers.SerializerBase(Of TStruct).ValueType
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: MongoDB.Bson.Serialization.Serializers.SerializerBase`1
  commentId: T:MongoDB.Bson.Serialization.Serializers.SerializerBase`1
  isExternal: true
  name: SerializerBase<TValue>
  nameWithType: SerializerBase<TValue>
  fullName: MongoDB.Bson.Serialization.Serializers.SerializerBase<TValue>
  nameWithType.vb: SerializerBase(Of TValue)
  fullName.vb: MongoDB.Bson.Serialization.Serializers.SerializerBase(Of TValue)
  name.vb: SerializerBase(Of TValue)
  spec.csharp:
  - uid: MongoDB.Bson.Serialization.Serializers.SerializerBase`1
    name: SerializerBase
    nameWithType: SerializerBase
    fullName: MongoDB.Bson.Serialization.Serializers.SerializerBase
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: MongoDB.Bson.Serialization.Serializers.SerializerBase`1
    name: SerializerBase
    nameWithType: SerializerBase
    fullName: MongoDB.Bson.Serialization.Serializers.SerializerBase
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Bson.Serialization.Serializers
  commentId: N:MongoDB.Bson.Serialization.Serializers
  isExternal: false
  name: MongoDB.Bson.Serialization.Serializers
  nameWithType: MongoDB.Bson.Serialization.Serializers
  fullName: MongoDB.Bson.Serialization.Serializers
- uid: MongoDB.Bson.Serialization.IBsonSerializer`1
  commentId: T:MongoDB.Bson.Serialization.IBsonSerializer`1
  isExternal: true
  name: IBsonSerializer<TValue>
  nameWithType: IBsonSerializer<TValue>
  fullName: MongoDB.Bson.Serialization.IBsonSerializer<TValue>
  nameWithType.vb: IBsonSerializer(Of TValue)
  fullName.vb: MongoDB.Bson.Serialization.IBsonSerializer(Of TValue)
  name.vb: IBsonSerializer(Of TValue)
  spec.csharp:
  - uid: MongoDB.Bson.Serialization.IBsonSerializer`1
    name: IBsonSerializer
    nameWithType: IBsonSerializer
    fullName: MongoDB.Bson.Serialization.IBsonSerializer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: MongoDB.Bson.Serialization.IBsonSerializer`1
    name: IBsonSerializer
    nameWithType: IBsonSerializer
    fullName: MongoDB.Bson.Serialization.IBsonSerializer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Bson.Serialization
  commentId: N:MongoDB.Bson.Serialization
  isExternal: false
  name: MongoDB.Bson.Serialization
  nameWithType: MongoDB.Bson.Serialization
  fullName: MongoDB.Bson.Serialization
- uid: MongoDB.Bson.Serialization.Serializers.SerializerBase`1.CreateCannotBeDeserializedException
  commentId: M:MongoDB.Bson.Serialization.Serializers.SerializerBase`1.CreateCannotBeDeserializedException
  isExternal: true
  name: CreateCannotBeDeserializedException()
  nameWithType: SerializerBase<TValue>.CreateCannotBeDeserializedException()
  fullName: MongoDB.Bson.Serialization.Serializers.SerializerBase<TValue>.CreateCannotBeDeserializedException()
  nameWithType.vb: SerializerBase(Of TValue).CreateCannotBeDeserializedException()
  fullName.vb: MongoDB.Bson.Serialization.Serializers.SerializerBase(Of TValue).CreateCannotBeDeserializedException()
  spec.csharp:
  - uid: MongoDB.Bson.Serialization.Serializers.SerializerBase`1.CreateCannotBeDeserializedException
    name: CreateCannotBeDeserializedException
    nameWithType: SerializerBase<TValue>.CreateCannotBeDeserializedException
    fullName: MongoDB.Bson.Serialization.Serializers.SerializerBase<TValue>.CreateCannotBeDeserializedException
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Bson.Serialization.Serializers.SerializerBase`1.CreateCannotBeDeserializedException
    name: CreateCannotBeDeserializedException
    nameWithType: SerializerBase(Of TValue).CreateCannotBeDeserializedException
    fullName: MongoDB.Bson.Serialization.Serializers.SerializerBase(Of TValue).CreateCannotBeDeserializedException
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Bson.Serialization.Serializers.SerializerBase`1.CreateCannotBeSerializedException
  commentId: M:MongoDB.Bson.Serialization.Serializers.SerializerBase`1.CreateCannotBeSerializedException
  isExternal: true
  name: CreateCannotBeSerializedException()
  nameWithType: SerializerBase<TValue>.CreateCannotBeSerializedException()
  fullName: MongoDB.Bson.Serialization.Serializers.SerializerBase<TValue>.CreateCannotBeSerializedException()
  nameWithType.vb: SerializerBase(Of TValue).CreateCannotBeSerializedException()
  fullName.vb: MongoDB.Bson.Serialization.Serializers.SerializerBase(Of TValue).CreateCannotBeSerializedException()
  spec.csharp:
  - uid: MongoDB.Bson.Serialization.Serializers.SerializerBase`1.CreateCannotBeSerializedException
    name: CreateCannotBeSerializedException
    nameWithType: SerializerBase<TValue>.CreateCannotBeSerializedException
    fullName: MongoDB.Bson.Serialization.Serializers.SerializerBase<TValue>.CreateCannotBeSerializedException
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Bson.Serialization.Serializers.SerializerBase`1.CreateCannotBeSerializedException
    name: CreateCannotBeSerializedException
    nameWithType: SerializerBase(Of TValue).CreateCannotBeSerializedException
    fullName: MongoDB.Bson.Serialization.Serializers.SerializerBase(Of TValue).CreateCannotBeSerializedException
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Bson.Serialization.Serializers.SerializerBase`1.CreateCannotDeserializeFromBsonTypeException(MongoDB.Bson.BsonType)
  commentId: M:MongoDB.Bson.Serialization.Serializers.SerializerBase`1.CreateCannotDeserializeFromBsonTypeException(MongoDB.Bson.BsonType)
  isExternal: true
  name: CreateCannotDeserializeFromBsonTypeException(BsonType)
  nameWithType: SerializerBase<TValue>.CreateCannotDeserializeFromBsonTypeException(BsonType)
  fullName: MongoDB.Bson.Serialization.Serializers.SerializerBase<TValue>.CreateCannotDeserializeFromBsonTypeException(MongoDB.Bson.BsonType)
  nameWithType.vb: SerializerBase(Of TValue).CreateCannotDeserializeFromBsonTypeException(BsonType)
  fullName.vb: MongoDB.Bson.Serialization.Serializers.SerializerBase(Of TValue).CreateCannotDeserializeFromBsonTypeException(MongoDB.Bson.BsonType)
  spec.csharp:
  - uid: MongoDB.Bson.Serialization.Serializers.SerializerBase`1.CreateCannotDeserializeFromBsonTypeException(MongoDB.Bson.BsonType)
    name: CreateCannotDeserializeFromBsonTypeException
    nameWithType: SerializerBase<TValue>.CreateCannotDeserializeFromBsonTypeException
    fullName: MongoDB.Bson.Serialization.Serializers.SerializerBase<TValue>.CreateCannotDeserializeFromBsonTypeException
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: MongoDB.Bson.BsonType
    name: BsonType
    nameWithType: BsonType
    fullName: MongoDB.Bson.BsonType
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Bson.Serialization.Serializers.SerializerBase`1.CreateCannotDeserializeFromBsonTypeException(MongoDB.Bson.BsonType)
    name: CreateCannotDeserializeFromBsonTypeException
    nameWithType: SerializerBase(Of TValue).CreateCannotDeserializeFromBsonTypeException
    fullName: MongoDB.Bson.Serialization.Serializers.SerializerBase(Of TValue).CreateCannotDeserializeFromBsonTypeException
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: MongoDB.Bson.BsonType
    name: BsonType
    nameWithType: BsonType
    fullName: MongoDB.Bson.BsonType
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Bson.Serialization.Serializers.SerializerBase`1.EnsureBsonTypeEquals(MongoDB.Bson.IO.IBsonReader,MongoDB.Bson.BsonType)
  commentId: M:MongoDB.Bson.Serialization.Serializers.SerializerBase`1.EnsureBsonTypeEquals(MongoDB.Bson.IO.IBsonReader,MongoDB.Bson.BsonType)
  isExternal: true
  name: EnsureBsonTypeEquals(IBsonReader, BsonType)
  nameWithType: SerializerBase<TValue>.EnsureBsonTypeEquals(IBsonReader, BsonType)
  fullName: MongoDB.Bson.Serialization.Serializers.SerializerBase<TValue>.EnsureBsonTypeEquals(MongoDB.Bson.IO.IBsonReader, MongoDB.Bson.BsonType)
  nameWithType.vb: SerializerBase(Of TValue).EnsureBsonTypeEquals(IBsonReader, BsonType)
  fullName.vb: MongoDB.Bson.Serialization.Serializers.SerializerBase(Of TValue).EnsureBsonTypeEquals(MongoDB.Bson.IO.IBsonReader, MongoDB.Bson.BsonType)
  spec.csharp:
  - uid: MongoDB.Bson.Serialization.Serializers.SerializerBase`1.EnsureBsonTypeEquals(MongoDB.Bson.IO.IBsonReader,MongoDB.Bson.BsonType)
    name: EnsureBsonTypeEquals
    nameWithType: SerializerBase<TValue>.EnsureBsonTypeEquals
    fullName: MongoDB.Bson.Serialization.Serializers.SerializerBase<TValue>.EnsureBsonTypeEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: MongoDB.Bson.IO.IBsonReader
    name: IBsonReader
    nameWithType: IBsonReader
    fullName: MongoDB.Bson.IO.IBsonReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MongoDB.Bson.BsonType
    name: BsonType
    nameWithType: BsonType
    fullName: MongoDB.Bson.BsonType
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Bson.Serialization.Serializers.SerializerBase`1.EnsureBsonTypeEquals(MongoDB.Bson.IO.IBsonReader,MongoDB.Bson.BsonType)
    name: EnsureBsonTypeEquals
    nameWithType: SerializerBase(Of TValue).EnsureBsonTypeEquals
    fullName: MongoDB.Bson.Serialization.Serializers.SerializerBase(Of TValue).EnsureBsonTypeEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: MongoDB.Bson.IO.IBsonReader
    name: IBsonReader
    nameWithType: IBsonReader
    fullName: MongoDB.Bson.IO.IBsonReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MongoDB.Bson.BsonType
    name: BsonType
    nameWithType: BsonType
    fullName: MongoDB.Bson.BsonType
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Bson.Serialization.Serializers.SerializerBase`1.MongoDB#Bson#Serialization#IBsonSerializer#Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)
  commentId: M:MongoDB.Bson.Serialization.Serializers.SerializerBase`1.MongoDB#Bson#Serialization#IBsonSerializer#Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)
  isExternal: true
  name: IBsonSerializer.Deserialize(BsonDeserializationContext, BsonDeserializationArgs)
  nameWithType: SerializerBase<TValue>.IBsonSerializer.Deserialize(BsonDeserializationContext, BsonDeserializationArgs)
  fullName: MongoDB.Bson.Serialization.Serializers.SerializerBase<TValue>.MongoDB.Bson.Serialization.IBsonSerializer.Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext, MongoDB.Bson.Serialization.BsonDeserializationArgs)
  nameWithType.vb: SerializerBase(Of TValue).MongoDB.Bson.Serialization.IBsonSerializer.Deserialize(BsonDeserializationContext, BsonDeserializationArgs)
  fullName.vb: MongoDB.Bson.Serialization.Serializers.SerializerBase(Of TValue).MongoDB.Bson.Serialization.IBsonSerializer.Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext, MongoDB.Bson.Serialization.BsonDeserializationArgs)
  name.vb: MongoDB.Bson.Serialization.IBsonSerializer.Deserialize(BsonDeserializationContext, BsonDeserializationArgs)
  spec.csharp:
  - uid: MongoDB.Bson.Serialization.Serializers.SerializerBase`1.MongoDB#Bson#Serialization#IBsonSerializer#Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)
    name: IBsonSerializer.Deserialize
    nameWithType: SerializerBase<TValue>.IBsonSerializer.Deserialize
    fullName: MongoDB.Bson.Serialization.Serializers.SerializerBase<TValue>.MongoDB.Bson.Serialization.IBsonSerializer.Deserialize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: MongoDB.Bson.Serialization.BsonDeserializationContext
    name: BsonDeserializationContext
    nameWithType: BsonDeserializationContext
    fullName: MongoDB.Bson.Serialization.BsonDeserializationContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MongoDB.Bson.Serialization.BsonDeserializationArgs
    name: BsonDeserializationArgs
    nameWithType: BsonDeserializationArgs
    fullName: MongoDB.Bson.Serialization.BsonDeserializationArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Bson.Serialization.Serializers.SerializerBase`1.MongoDB#Bson#Serialization#IBsonSerializer#Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)
    name: MongoDB.Bson.Serialization.IBsonSerializer.Deserialize
    nameWithType: SerializerBase(Of TValue).MongoDB.Bson.Serialization.IBsonSerializer.Deserialize
    fullName: MongoDB.Bson.Serialization.Serializers.SerializerBase(Of TValue).MongoDB.Bson.Serialization.IBsonSerializer.Deserialize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: MongoDB.Bson.Serialization.BsonDeserializationContext
    name: BsonDeserializationContext
    nameWithType: BsonDeserializationContext
    fullName: MongoDB.Bson.Serialization.BsonDeserializationContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MongoDB.Bson.Serialization.BsonDeserializationArgs
    name: BsonDeserializationArgs
    nameWithType: BsonDeserializationArgs
    fullName: MongoDB.Bson.Serialization.BsonDeserializationArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Bson.Serialization.Serializers.SerializerBase`1.MongoDB#Bson#Serialization#IBsonSerializer#Serialize(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,System.Object)
  commentId: M:MongoDB.Bson.Serialization.Serializers.SerializerBase`1.MongoDB#Bson#Serialization#IBsonSerializer#Serialize(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,System.Object)
  isExternal: true
  name: IBsonSerializer.Serialize(BsonSerializationContext, BsonSerializationArgs, Object)
  nameWithType: SerializerBase<TValue>.IBsonSerializer.Serialize(BsonSerializationContext, BsonSerializationArgs, Object)
  fullName: MongoDB.Bson.Serialization.Serializers.SerializerBase<TValue>.MongoDB.Bson.Serialization.IBsonSerializer.Serialize(MongoDB.Bson.Serialization.BsonSerializationContext, MongoDB.Bson.Serialization.BsonSerializationArgs, System.Object)
  nameWithType.vb: SerializerBase(Of TValue).MongoDB.Bson.Serialization.IBsonSerializer.Serialize(BsonSerializationContext, BsonSerializationArgs, Object)
  fullName.vb: MongoDB.Bson.Serialization.Serializers.SerializerBase(Of TValue).MongoDB.Bson.Serialization.IBsonSerializer.Serialize(MongoDB.Bson.Serialization.BsonSerializationContext, MongoDB.Bson.Serialization.BsonSerializationArgs, System.Object)
  name.vb: MongoDB.Bson.Serialization.IBsonSerializer.Serialize(BsonSerializationContext, BsonSerializationArgs, Object)
  spec.csharp:
  - uid: MongoDB.Bson.Serialization.Serializers.SerializerBase`1.MongoDB#Bson#Serialization#IBsonSerializer#Serialize(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,System.Object)
    name: IBsonSerializer.Serialize
    nameWithType: SerializerBase<TValue>.IBsonSerializer.Serialize
    fullName: MongoDB.Bson.Serialization.Serializers.SerializerBase<TValue>.MongoDB.Bson.Serialization.IBsonSerializer.Serialize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: MongoDB.Bson.Serialization.BsonSerializationContext
    name: BsonSerializationContext
    nameWithType: BsonSerializationContext
    fullName: MongoDB.Bson.Serialization.BsonSerializationContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MongoDB.Bson.Serialization.BsonSerializationArgs
    name: BsonSerializationArgs
    nameWithType: BsonSerializationArgs
    fullName: MongoDB.Bson.Serialization.BsonSerializationArgs
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Bson.Serialization.Serializers.SerializerBase`1.MongoDB#Bson#Serialization#IBsonSerializer#Serialize(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,System.Object)
    name: MongoDB.Bson.Serialization.IBsonSerializer.Serialize
    nameWithType: SerializerBase(Of TValue).MongoDB.Bson.Serialization.IBsonSerializer.Serialize
    fullName: MongoDB.Bson.Serialization.Serializers.SerializerBase(Of TValue).MongoDB.Bson.Serialization.IBsonSerializer.Serialize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: MongoDB.Bson.Serialization.BsonSerializationContext
    name: BsonSerializationContext
    nameWithType: BsonSerializationContext
    fullName: MongoDB.Bson.Serialization.BsonSerializationContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MongoDB.Bson.Serialization.BsonSerializationArgs
    name: BsonSerializationArgs
    nameWithType: BsonSerializationArgs
    fullName: MongoDB.Bson.Serialization.BsonSerializationArgs
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Bson.Serialization.Serializers.SerializerBase`1.ValueType
  commentId: P:MongoDB.Bson.Serialization.Serializers.SerializerBase`1.ValueType
  isExternal: true
  name: ValueType
  nameWithType: SerializerBase<TValue>.ValueType
  fullName: MongoDB.Bson.Serialization.Serializers.SerializerBase<TValue>.ValueType
  nameWithType.vb: SerializerBase(Of TValue).ValueType
  fullName.vb: MongoDB.Bson.Serialization.Serializers.SerializerBase(Of TValue).ValueType
- uid: MongoDB.Bson.Serialization.Serializers.SerializerBase{{TStruct}}.Serialize(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,{TStruct})
  commentId: M:MongoDB.Bson.Serialization.Serializers.SerializerBase{`0}.Serialize(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,`0)
  parent: MongoDB.Bson.Serialization.Serializers.SerializerBase{{TStruct}}
  definition: MongoDB.Bson.Serialization.Serializers.SerializerBase`1.Serialize(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,`0)
  name: Serialize(BsonSerializationContext, BsonSerializationArgs, TStruct)
  nameWithType: SerializerBase<TStruct>.Serialize(BsonSerializationContext, BsonSerializationArgs, TStruct)
  fullName: MongoDB.Bson.Serialization.Serializers.SerializerBase<TStruct>.Serialize(MongoDB.Bson.Serialization.BsonSerializationContext, MongoDB.Bson.Serialization.BsonSerializationArgs, TStruct)
  nameWithType.vb: SerializerBase(Of TStruct).Serialize(BsonSerializationContext, BsonSerializationArgs, TStruct)
  fullName.vb: MongoDB.Bson.Serialization.Serializers.SerializerBase(Of TStruct).Serialize(MongoDB.Bson.Serialization.BsonSerializationContext, MongoDB.Bson.Serialization.BsonSerializationArgs, TStruct)
  spec.csharp:
  - uid: MongoDB.Bson.Serialization.Serializers.SerializerBase`1.Serialize(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,`0)
    name: Serialize
    nameWithType: SerializerBase<TStruct>.Serialize
    fullName: MongoDB.Bson.Serialization.Serializers.SerializerBase<TStruct>.Serialize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: MongoDB.Bson.Serialization.BsonSerializationContext
    name: BsonSerializationContext
    nameWithType: BsonSerializationContext
    fullName: MongoDB.Bson.Serialization.BsonSerializationContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MongoDB.Bson.Serialization.BsonSerializationArgs
    name: BsonSerializationArgs
    nameWithType: BsonSerializationArgs
    fullName: MongoDB.Bson.Serialization.BsonSerializationArgs
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TStruct
    nameWithType: TStruct
    fullName: TStruct
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Bson.Serialization.Serializers.SerializerBase`1.Serialize(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,`0)
    name: Serialize
    nameWithType: SerializerBase(Of TStruct).Serialize
    fullName: MongoDB.Bson.Serialization.Serializers.SerializerBase(Of TStruct).Serialize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: MongoDB.Bson.Serialization.BsonSerializationContext
    name: BsonSerializationContext
    nameWithType: BsonSerializationContext
    fullName: MongoDB.Bson.Serialization.BsonSerializationContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MongoDB.Bson.Serialization.BsonSerializationArgs
    name: BsonSerializationArgs
    nameWithType: BsonSerializationArgs
    fullName: MongoDB.Bson.Serialization.BsonSerializationArgs
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TStruct
    nameWithType: TStruct
    fullName: TStruct
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.MongoDB.Serialisers.BasicStructSerialiser`1.Serialize*
  commentId: Overload:Cqrs.MongoDB.Serialisers.BasicStructSerialiser`1.Serialize
  isExternal: false
  name: Serialize
  nameWithType: BasicStructSerialiser<TStruct>.Serialize
  fullName: Cqrs.MongoDB.Serialisers.BasicStructSerialiser<TStruct>.Serialize
  nameWithType.vb: BasicStructSerialiser(Of TStruct).Serialize
  fullName.vb: Cqrs.MongoDB.Serialisers.BasicStructSerialiser(Of TStruct).Serialize
- uid: MongoDB.Bson.Serialization.BsonSerializationContext
  commentId: T:MongoDB.Bson.Serialization.BsonSerializationContext
  parent: MongoDB.Bson.Serialization
  isExternal: true
  name: BsonSerializationContext
  nameWithType: BsonSerializationContext
  fullName: MongoDB.Bson.Serialization.BsonSerializationContext
- uid: MongoDB.Bson.Serialization.BsonSerializationArgs
  commentId: T:MongoDB.Bson.Serialization.BsonSerializationArgs
  parent: MongoDB.Bson.Serialization
  isExternal: true
  name: BsonSerializationArgs
  nameWithType: BsonSerializationArgs
  fullName: MongoDB.Bson.Serialization.BsonSerializationArgs
- uid: '{TStruct}'
  commentId: '!:TStruct'
  definition: TStruct
  name: TStruct
  nameWithType: TStruct
  fullName: TStruct
- uid: MongoDB.Bson.Serialization.Serializers.SerializerBase`1.Serialize(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,`0)
  commentId: M:MongoDB.Bson.Serialization.Serializers.SerializerBase`1.Serialize(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,`0)
  isExternal: true
  name: Serialize(BsonSerializationContext, BsonSerializationArgs, TValue)
  nameWithType: SerializerBase<TValue>.Serialize(BsonSerializationContext, BsonSerializationArgs, TValue)
  fullName: MongoDB.Bson.Serialization.Serializers.SerializerBase<TValue>.Serialize(MongoDB.Bson.Serialization.BsonSerializationContext, MongoDB.Bson.Serialization.BsonSerializationArgs, TValue)
  nameWithType.vb: SerializerBase(Of TValue).Serialize(BsonSerializationContext, BsonSerializationArgs, TValue)
  fullName.vb: MongoDB.Bson.Serialization.Serializers.SerializerBase(Of TValue).Serialize(MongoDB.Bson.Serialization.BsonSerializationContext, MongoDB.Bson.Serialization.BsonSerializationArgs, TValue)
  spec.csharp:
  - uid: MongoDB.Bson.Serialization.Serializers.SerializerBase`1.Serialize(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,`0)
    name: Serialize
    nameWithType: SerializerBase<TValue>.Serialize
    fullName: MongoDB.Bson.Serialization.Serializers.SerializerBase<TValue>.Serialize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: MongoDB.Bson.Serialization.BsonSerializationContext
    name: BsonSerializationContext
    nameWithType: BsonSerializationContext
    fullName: MongoDB.Bson.Serialization.BsonSerializationContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MongoDB.Bson.Serialization.BsonSerializationArgs
    name: BsonSerializationArgs
    nameWithType: BsonSerializationArgs
    fullName: MongoDB.Bson.Serialization.BsonSerializationArgs
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Bson.Serialization.Serializers.SerializerBase`1.Serialize(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,`0)
    name: Serialize
    nameWithType: SerializerBase(Of TValue).Serialize
    fullName: MongoDB.Bson.Serialization.Serializers.SerializerBase(Of TValue).Serialize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: MongoDB.Bson.Serialization.BsonSerializationContext
    name: BsonSerializationContext
    nameWithType: BsonSerializationContext
    fullName: MongoDB.Bson.Serialization.BsonSerializationContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MongoDB.Bson.Serialization.BsonSerializationArgs
    name: BsonSerializationArgs
    nameWithType: BsonSerializationArgs
    fullName: MongoDB.Bson.Serialization.BsonSerializationArgs
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: TStruct
  isExternal: false
  name: TStruct
  nameWithType: TStruct
  fullName: TStruct
- uid: MongoDB.Bson.Serialization.Serializers.SerializerBase{{TStruct}}.Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)
  commentId: M:MongoDB.Bson.Serialization.Serializers.SerializerBase{`0}.Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)
  parent: MongoDB.Bson.Serialization.Serializers.SerializerBase{{TStruct}}
  definition: MongoDB.Bson.Serialization.Serializers.SerializerBase`1.Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)
  name: Deserialize(BsonDeserializationContext, BsonDeserializationArgs)
  nameWithType: SerializerBase<TStruct>.Deserialize(BsonDeserializationContext, BsonDeserializationArgs)
  fullName: MongoDB.Bson.Serialization.Serializers.SerializerBase<TStruct>.Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext, MongoDB.Bson.Serialization.BsonDeserializationArgs)
  nameWithType.vb: SerializerBase(Of TStruct).Deserialize(BsonDeserializationContext, BsonDeserializationArgs)
  fullName.vb: MongoDB.Bson.Serialization.Serializers.SerializerBase(Of TStruct).Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext, MongoDB.Bson.Serialization.BsonDeserializationArgs)
  spec.csharp:
  - uid: MongoDB.Bson.Serialization.Serializers.SerializerBase`1.Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)
    name: Deserialize
    nameWithType: SerializerBase<TStruct>.Deserialize
    fullName: MongoDB.Bson.Serialization.Serializers.SerializerBase<TStruct>.Deserialize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: MongoDB.Bson.Serialization.BsonDeserializationContext
    name: BsonDeserializationContext
    nameWithType: BsonDeserializationContext
    fullName: MongoDB.Bson.Serialization.BsonDeserializationContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MongoDB.Bson.Serialization.BsonDeserializationArgs
    name: BsonDeserializationArgs
    nameWithType: BsonDeserializationArgs
    fullName: MongoDB.Bson.Serialization.BsonDeserializationArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Bson.Serialization.Serializers.SerializerBase`1.Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)
    name: Deserialize
    nameWithType: SerializerBase(Of TStruct).Deserialize
    fullName: MongoDB.Bson.Serialization.Serializers.SerializerBase(Of TStruct).Deserialize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: MongoDB.Bson.Serialization.BsonDeserializationContext
    name: BsonDeserializationContext
    nameWithType: BsonDeserializationContext
    fullName: MongoDB.Bson.Serialization.BsonDeserializationContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MongoDB.Bson.Serialization.BsonDeserializationArgs
    name: BsonDeserializationArgs
    nameWithType: BsonDeserializationArgs
    fullName: MongoDB.Bson.Serialization.BsonDeserializationArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.MongoDB.Serialisers.BasicStructSerialiser`1.Deserialize*
  commentId: Overload:Cqrs.MongoDB.Serialisers.BasicStructSerialiser`1.Deserialize
  isExternal: false
  name: Deserialize
  nameWithType: BasicStructSerialiser<TStruct>.Deserialize
  fullName: Cqrs.MongoDB.Serialisers.BasicStructSerialiser<TStruct>.Deserialize
  nameWithType.vb: BasicStructSerialiser(Of TStruct).Deserialize
  fullName.vb: Cqrs.MongoDB.Serialisers.BasicStructSerialiser(Of TStruct).Deserialize
- uid: MongoDB.Bson.Serialization.BsonDeserializationContext
  commentId: T:MongoDB.Bson.Serialization.BsonDeserializationContext
  parent: MongoDB.Bson.Serialization
  isExternal: true
  name: BsonDeserializationContext
  nameWithType: BsonDeserializationContext
  fullName: MongoDB.Bson.Serialization.BsonDeserializationContext
- uid: MongoDB.Bson.Serialization.BsonDeserializationArgs
  commentId: T:MongoDB.Bson.Serialization.BsonDeserializationArgs
  parent: MongoDB.Bson.Serialization
  isExternal: true
  name: BsonDeserializationArgs
  nameWithType: BsonDeserializationArgs
  fullName: MongoDB.Bson.Serialization.BsonDeserializationArgs
- uid: MongoDB.Bson.Serialization.Serializers.SerializerBase`1.Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)
  commentId: M:MongoDB.Bson.Serialization.Serializers.SerializerBase`1.Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)
  isExternal: true
  name: Deserialize(BsonDeserializationContext, BsonDeserializationArgs)
  nameWithType: SerializerBase<TValue>.Deserialize(BsonDeserializationContext, BsonDeserializationArgs)
  fullName: MongoDB.Bson.Serialization.Serializers.SerializerBase<TValue>.Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext, MongoDB.Bson.Serialization.BsonDeserializationArgs)
  nameWithType.vb: SerializerBase(Of TValue).Deserialize(BsonDeserializationContext, BsonDeserializationArgs)
  fullName.vb: MongoDB.Bson.Serialization.Serializers.SerializerBase(Of TValue).Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext, MongoDB.Bson.Serialization.BsonDeserializationArgs)
  spec.csharp:
  - uid: MongoDB.Bson.Serialization.Serializers.SerializerBase`1.Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)
    name: Deserialize
    nameWithType: SerializerBase<TValue>.Deserialize
    fullName: MongoDB.Bson.Serialization.Serializers.SerializerBase<TValue>.Deserialize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: MongoDB.Bson.Serialization.BsonDeserializationContext
    name: BsonDeserializationContext
    nameWithType: BsonDeserializationContext
    fullName: MongoDB.Bson.Serialization.BsonDeserializationContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MongoDB.Bson.Serialization.BsonDeserializationArgs
    name: BsonDeserializationArgs
    nameWithType: BsonDeserializationArgs
    fullName: MongoDB.Bson.Serialization.BsonDeserializationArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Bson.Serialization.Serializers.SerializerBase`1.Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)
    name: Deserialize
    nameWithType: SerializerBase(Of TValue).Deserialize
    fullName: MongoDB.Bson.Serialization.Serializers.SerializerBase(Of TValue).Deserialize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: MongoDB.Bson.Serialization.BsonDeserializationContext
    name: BsonDeserializationContext
    nameWithType: BsonDeserializationContext
    fullName: MongoDB.Bson.Serialization.BsonDeserializationContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MongoDB.Bson.Serialization.BsonDeserializationArgs
    name: BsonDeserializationArgs
    nameWithType: BsonDeserializationArgs
    fullName: MongoDB.Bson.Serialization.BsonDeserializationArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
