<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classCqrs_1_1Azure_1_1BlobStorage_1_1Events_1_1BlobStorageEventStore" kind="class" language="C#" prot="public">
    <compoundname>Cqrs::Azure::BlobStorage::Events::BlobStorageEventStore</compoundname>
    <basecompoundref refid="classCqrs_1_1Events_1_1EventStore" prot="public" virt="non-virtual">Cqrs::Events::EventStore&lt; TAuthenticationToken &gt;</basecompoundref>
    <innerclass refid="classCqrs_1_1Azure_1_1BlobStorage_1_1Events_1_1BlobStorageEventStore_1_1RawBlobStorageEventStore" prot="public">Cqrs::Azure::BlobStorage::Events::BlobStorageEventStore::RawBlobStorageEventStore</innerclass>
    <templateparamlist>
      <param>
        <type>TAuthenticationToken</type>
      </param>
    </templateparamlist>
      <sectiondef kind="property">
      <memberdef kind="property" id="classCqrs_1_1Azure_1_1BlobStorage_1_1Events_1_1BlobStorageEventStore_a85b9d71c130e5748886a61d80447116d_1a85b9d71c130e5748886a61d80447116d" prot="protected" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="yes" protectedsettable="no">
        <type><ref refid="classCqrs_1_1Azure_1_1BlobStorage_1_1Events_1_1BlobStorageEventStore_1_1RawBlobStorageEventStore" kindref="compound">RawBlobStorageEventStore</ref></type>
        <definition>RawBlobStorageEventStore Cqrs.Azure.BlobStorage.Events.BlobStorageEventStore&lt; TAuthenticationToken &gt;.BlobStorageStore</definition>
        <argsstring></argsstring>
        <name>BlobStorageStore</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/code/git/CQRS.XsamX/Framework/Azure/Cqrs.Azure.BlobStorage/Events/BlobStorageEventStore.cs" line="21" column="1" bodyfile="/mnt/c/code/git/CQRS.XsamX/Framework/Azure/Cqrs.Azure.BlobStorage/Events/BlobStorageEventStore.cs" bodystart="21" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classCqrs_1_1Azure_1_1BlobStorage_1_1Events_1_1BlobStorageEventStore_a04ce4516e7e1d30339d3f04ba54abe54_1a04ce4516e7e1d30339d3f04ba54abe54" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Cqrs.Azure.BlobStorage.Events.BlobStorageEventStore&lt; TAuthenticationToken &gt;.BlobStorageEventStore</definition>
        <argsstring>(IEventBuilder&lt; TAuthenticationToken &gt; eventBuilder, IEventDeserialiser&lt; TAuthenticationToken &gt; eventDeserialiser, ILogger logger, IBlobStorageStoreConnectionStringFactory blobStorageEventStoreConnectionStringFactory)</argsstring>
        <name>BlobStorageEventStore</name>
        <param>
          <type><ref refid="interfaceCqrs_1_1Events_1_1IEventBuilder" kindref="compound">IEventBuilder</ref>&lt; TAuthenticationToken &gt;</type>
          <declname>eventBuilder</declname>
        </param>
        <param>
          <type><ref refid="interfaceCqrs_1_1Events_1_1IEventDeserialiser" kindref="compound">IEventDeserialiser</ref>&lt; TAuthenticationToken &gt;</type>
          <declname>eventDeserialiser</declname>
        </param>
        <param>
          <type>ILogger</type>
          <declname>logger</declname>
        </param>
        <param>
          <type><ref refid="interfaceCqrs_1_1Azure_1_1BlobStorage_1_1IBlobStorageStoreConnectionStringFactory" kindref="compound">IBlobStorageStoreConnectionStringFactory</ref></type>
          <declname>blobStorageEventStoreConnectionStringFactory</declname>
        </param>
        <briefdescription>
<para>Initializes a new instance of the <ref refid="classCqrs_1_1Azure_1_1BlobStorage_1_1Events_1_1BlobStorageEventStore_a04ce4516e7e1d30339d3f04ba54abe54_1a04ce4516e7e1d30339d3f04ba54abe54" kindref="member">BlobStorageEventStore&lt;TAuthenticationToken&gt;</ref> class using the specified container. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/code/git/CQRS.XsamX/Framework/Azure/Cqrs.Azure.BlobStorage/Events/BlobStorageEventStore.cs" line="26" column="1" bodyfile="/mnt/c/code/git/CQRS.XsamX/Framework/Azure/Cqrs.Azure.BlobStorage/Events/BlobStorageEventStore.cs" bodystart="26" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Azure_1_1BlobStorage_1_1Events_1_1BlobStorageEventStore_ab68b594c54ae5a79e3b8d5db1902752d_1ab68b594c54ae5a79e3b8d5db1902752d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>override IEnumerable&lt; <ref refid="interfaceCqrs_1_1Events_1_1IEvent" kindref="compound">IEvent</ref>&lt; TAuthenticationToken &gt; &gt;</type>
        <definition>override IEnumerable&lt;IEvent&lt;TAuthenticationToken&gt; &gt; Cqrs.Azure.BlobStorage.Events.BlobStorageEventStore&lt; TAuthenticationToken &gt;.Get</definition>
        <argsstring>(Type aggregateRootType, Guid aggregateId, bool useLastEventOnly=false, int fromVersion=-1)</argsstring>
        <name>Get</name>
        <reimplements refid="classCqrs_1_1Events_1_1EventStore_aa1d0d399a35c1e3b0759e27202695d8b_1aa1d0d399a35c1e3b0759e27202695d8b">Get</reimplements>
        <param>
          <type>Type</type>
          <declname>aggregateRootType</declname>
        </param>
        <param>
          <type>Guid</type>
          <declname>aggregateId</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>useLastEventOnly</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>int</type>
          <declname>fromVersion</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
<para>Gets a collection of IEvent&lt;TAuthenticationToken&gt; for the IAggregateRoot&lt;TAuthenticationToken&gt; of type <emphasis>aggregateRootType</emphasis>  with the ID matching the provided <emphasis>aggregateId</emphasis> . </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aggregateRootType</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the IAggregateRoot&lt;TAuthenticationToken&gt; the IEvent&lt;TAuthenticationToken&gt; was raised in.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aggregateId</parametername>
</parameternamelist>
<parameterdescription>
<para>The IAggregateRoot&lt;TAuthenticationToken&gt;.Id of the IAggregateRoot&lt;TAuthenticationToken&gt;.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>useLastEventOnly</parametername>
</parameternamelist>
<parameterdescription>
<para>Loads only the last eventIEvent&lt;TAuthenticationToken&gt;.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fromVersion</parametername>
</parameternamelist>
<parameterdescription>
<para>Load events starting from this version</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/code/git/CQRS.XsamX/Framework/Azure/Cqrs.Azure.BlobStorage/Events/BlobStorageEventStore.cs" line="34" column="1" bodyfile="/mnt/c/code/git/CQRS.XsamX/Framework/Azure/Cqrs.Azure.BlobStorage/Events/BlobStorageEventStore.cs" bodystart="34" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Azure_1_1BlobStorage_1_1Events_1_1BlobStorageEventStore_a660c786205693ee34a11e205c6d136ad_1a660c786205693ee34a11e205c6d136ad" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>override IEnumerable&lt; <ref refid="classCqrs_1_1Events_1_1EventData" kindref="compound">EventData</ref> &gt;</type>
        <definition>override IEnumerable&lt;EventData&gt; Cqrs.Azure.BlobStorage.Events.BlobStorageEventStore&lt; TAuthenticationToken &gt;.Get</definition>
        <argsstring>(Guid correlationId)</argsstring>
        <name>Get</name>
        <reimplements refid="classCqrs_1_1Events_1_1EventStore_a0096646f5dff730b0041b9469719c420_1a0096646f5dff730b0041b9469719c420">Get</reimplements>
        <param>
          <type>Guid</type>
          <declname>correlationId</declname>
        </param>
        <briefdescription>
<para>Get all IEvent&lt;TAuthenticationToken&gt; instances for the given <emphasis>correlationId</emphasis> . </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>correlationId</parametername>
</parameternamelist>
<parameterdescription>
<para>The IMessage.CorrelationId of the IEvent&lt;TAuthenticationToken&gt; instances to retrieve.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/code/git/CQRS.XsamX/Framework/Azure/Cqrs.Azure.BlobStorage/Events/BlobStorageEventStore.cs" line="51" column="1" bodyfile="/mnt/c/code/git/CQRS.XsamX/Framework/Azure/Cqrs.Azure.BlobStorage/Events/BlobStorageEventStore.cs" bodystart="51" bodyend="59"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classCqrs_1_1Azure_1_1BlobStorage_1_1Events_1_1BlobStorageEventStore_aa27a352076b8967498407d24814f7c83_1aa27a352076b8967498407d24814f7c83" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>override void</type>
        <definition>override void Cqrs.Azure.BlobStorage.Events.BlobStorageEventStore&lt; TAuthenticationToken &gt;.PersistEvent</definition>
        <argsstring>(EventData eventData)</argsstring>
        <name>PersistEvent</name>
        <reimplements refid="classCqrs_1_1Events_1_1EventStore_aedb71ca0ddf21220e323bc60ad7508cd_1aedb71ca0ddf21220e323bc60ad7508cd">PersistEvent</reimplements>
        <param>
          <type><ref refid="classCqrs_1_1Events_1_1EventData" kindref="compound">EventData</ref></type>
          <declname>eventData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/code/git/CQRS.XsamX/Framework/Azure/Cqrs.Azure.BlobStorage/Events/BlobStorageEventStore.cs" line="61" column="1" bodyfile="/mnt/c/code/git/CQRS.XsamX/Framework/Azure/Cqrs.Azure.BlobStorage/Events/BlobStorageEventStore.cs" bodystart="61" bodyend="67"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="465">
        <label>IEventStore&lt; TAuthenticationToken &gt;</label>
        <link refid="interfaceCqrs_1_1Events_1_1IEventStore"/>
      </node>
      <node id="463">
        <label>Cqrs.Azure.BlobStorage.Events.BlobStorageEventStore&lt; TAuthenticationToken &gt;</label>
        <link refid="classCqrs_1_1Azure_1_1BlobStorage_1_1Events_1_1BlobStorageEventStore"/>
        <childnode refid="464" relation="public-inheritance">
        </childnode>
      </node>
      <node id="464">
        <label>EventStore&lt; TAuthenticationToken &gt;</label>
        <link refid="classCqrs_1_1Events_1_1EventStore"/>
        <childnode refid="465" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="468">
        <label>IEventStore&lt; TAuthenticationToken &gt;</label>
        <link refid="interfaceCqrs_1_1Events_1_1IEventStore"/>
      </node>
      <node id="466">
        <label>Cqrs.Azure.BlobStorage.Events.BlobStorageEventStore&lt; TAuthenticationToken &gt;</label>
        <link refid="classCqrs_1_1Azure_1_1BlobStorage_1_1Events_1_1BlobStorageEventStore"/>
        <childnode refid="467" relation="public-inheritance">
        </childnode>
      </node>
      <node id="467">
        <label>EventStore&lt; TAuthenticationToken &gt;</label>
        <link refid="classCqrs_1_1Events_1_1EventStore"/>
        <childnode refid="468" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/mnt/c/code/git/CQRS.XsamX/Framework/Azure/Cqrs.Azure.BlobStorage/Events/BlobStorageEventStore.cs" line="20" column="1" bodyfile="/mnt/c/code/git/CQRS.XsamX/Framework/Azure/Cqrs.Azure.BlobStorage/Events/BlobStorageEventStore.cs" bodystart="18" bodyend="113"/>
    <listofallmembers>
      <member refid="classCqrs_1_1Azure_1_1BlobStorage_1_1Events_1_1BlobStorageEventStore_a04ce4516e7e1d30339d3f04ba54abe54_1a04ce4516e7e1d30339d3f04ba54abe54" prot="public" virt="non-virtual"><scope>Cqrs::Azure::BlobStorage::Events::BlobStorageEventStore</scope><name>BlobStorageEventStore</name></member>
      <member refid="classCqrs_1_1Azure_1_1BlobStorage_1_1Events_1_1BlobStorageEventStore_a85b9d71c130e5748886a61d80447116d_1a85b9d71c130e5748886a61d80447116d" prot="protected" virt="non-virtual"><scope>Cqrs::Azure::BlobStorage::Events::BlobStorageEventStore</scope><name>BlobStorageStore</name></member>
      <member refid="classCqrs_1_1Events_1_1EventStore_a1e6d87995d38d6fbb148388ec165a87e_1a1e6d87995d38d6fbb148388ec165a87e" prot="protected" virt="non-virtual"><scope>Cqrs::Azure::BlobStorage::Events::BlobStorageEventStore</scope><name>CqrsEventStoreStreamNamePattern</name></member>
      <member refid="classCqrs_1_1Events_1_1EventStore_a05393aedf2eae4b2eeae3977e7f1c6f9_1a05393aedf2eae4b2eeae3977e7f1c6f9" prot="protected" virt="non-virtual"><scope>Cqrs::Azure::BlobStorage::Events::BlobStorageEventStore</scope><name>EventBuilder</name></member>
      <member refid="classCqrs_1_1Events_1_1EventStore_a24f17302c069058e5814dedfb614d599_1a24f17302c069058e5814dedfb614d599" prot="protected" virt="non-virtual"><scope>Cqrs::Azure::BlobStorage::Events::BlobStorageEventStore</scope><name>EventDeserialiser</name></member>
      <member refid="classCqrs_1_1Events_1_1EventStore_a6346cb2aea4c5b4e740dc6cfb15abab8_1a6346cb2aea4c5b4e740dc6cfb15abab8" prot="protected" virt="non-virtual"><scope>Cqrs::Azure::BlobStorage::Events::BlobStorageEventStore</scope><name>EventStore</name></member>
      <member refid="classCqrs_1_1Events_1_1EventStore_a03df06d4ce9c6d16201c079f2de0a7f3_1a03df06d4ce9c6d16201c079f2de0a7f3" prot="protected" virt="virtual"><scope>Cqrs::Azure::BlobStorage::Events::BlobStorageEventStore</scope><name>GenerateStreamName</name></member>
      <member refid="classCqrs_1_1Events_1_1EventStore_aba61739e47fdd0f7fce656f896cbe908_1aba61739e47fdd0f7fce656f896cbe908" prot="protected" virt="virtual"><scope>Cqrs::Azure::BlobStorage::Events::BlobStorageEventStore</scope><name>GenerateStreamName</name></member>
      <member refid="classCqrs_1_1Azure_1_1BlobStorage_1_1Events_1_1BlobStorageEventStore_ab68b594c54ae5a79e3b8d5db1902752d_1ab68b594c54ae5a79e3b8d5db1902752d" prot="public" virt="virtual"><scope>Cqrs::Azure::BlobStorage::Events::BlobStorageEventStore</scope><name>Get</name></member>
      <member refid="classCqrs_1_1Azure_1_1BlobStorage_1_1Events_1_1BlobStorageEventStore_a660c786205693ee34a11e205c6d136ad_1a660c786205693ee34a11e205c6d136ad" prot="public" virt="virtual"><scope>Cqrs::Azure::BlobStorage::Events::BlobStorageEventStore</scope><name>Get</name></member>
      <member refid="classCqrs_1_1Events_1_1EventStore_aa6ffed5d7dd365600669149da29f9e89_1aa6ffed5d7dd365600669149da29f9e89" prot="public" virt="virtual"><scope>Cqrs::Azure::BlobStorage::Events::BlobStorageEventStore</scope><name>Get&lt; T &gt;</name></member>
      <member refid="classCqrs_1_1Events_1_1EventStore_a99506f7136a658364f8b74ef6a779a3f_1a99506f7136a658364f8b74ef6a779a3f" prot="protected" virt="non-virtual"><scope>Cqrs::Azure::BlobStorage::Events::BlobStorageEventStore</scope><name>Logger</name></member>
      <member refid="classCqrs_1_1Azure_1_1BlobStorage_1_1Events_1_1BlobStorageEventStore_aa27a352076b8967498407d24814f7c83_1aa27a352076b8967498407d24814f7c83" prot="protected" virt="virtual"><scope>Cqrs::Azure::BlobStorage::Events::BlobStorageEventStore</scope><name>PersistEvent</name></member>
      <member refid="classCqrs_1_1Events_1_1EventStore_a3ba5ba04a36382b6d36a6ad8867dc766_1a3ba5ba04a36382b6d36a6ad8867dc766" prot="public" virt="virtual"><scope>Cqrs::Azure::BlobStorage::Events::BlobStorageEventStore</scope><name>Save</name></member>
      <member refid="classCqrs_1_1Events_1_1EventStore_a958854f49c3eb4fcf1922ba7737a8dfe_1a958854f49c3eb4fcf1922ba7737a8dfe" prot="public" virt="virtual"><scope>Cqrs::Azure::BlobStorage::Events::BlobStorageEventStore</scope><name>Save&lt; T &gt;</name></member>
      <member refid="classCqrs_1_1Events_1_1EventStore_a75d6d3ad3a26fb9b511e2a98e72260f9_1a75d6d3ad3a26fb9b511e2a98e72260f9" prot="protected" virt="non-virtual"><scope>Cqrs::Azure::BlobStorage::Events::BlobStorageEventStore</scope><name>TelemetryHelper</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
