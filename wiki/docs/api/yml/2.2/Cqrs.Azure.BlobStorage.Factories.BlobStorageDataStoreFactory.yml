### YamlMime:ManagedReference
items:
- uid: Cqrs.Azure.BlobStorage.Factories.BlobStorageDataStoreFactory
  commentId: T:Cqrs.Azure.BlobStorage.Factories.BlobStorageDataStoreFactory
  id: BlobStorageDataStoreFactory
  parent: Cqrs.Azure.BlobStorage.Factories
  children:
  - Cqrs.Azure.BlobStorage.Factories.BlobStorageDataStoreFactory.#ctor(cdmdotnet.Logging.ILogger,Cqrs.Azure.BlobStorage.DataStores.IBlobStorageDataStoreConnectionStringFactory)
  - Cqrs.Azure.BlobStorage.Factories.BlobStorageDataStoreFactory.BlobStorageDataStoreConnectionStringFactory
  - Cqrs.Azure.BlobStorage.Factories.BlobStorageDataStoreFactory.Logger
  langs:
  - csharp
  - vb
  name: BlobStorageDataStoreFactory
  nameWithType: BlobStorageDataStoreFactory
  fullName: Cqrs.Azure.BlobStorage.Factories.BlobStorageDataStoreFactory
  type: Class
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.BlobStorage/Factories/BlobStorageDataStoreFactory.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: BlobStorageDataStoreFactory
    path: Framework/Azure/Cqrs.Azure.BlobStorage/Factories/BlobStorageDataStoreFactory.cs
    startLine: 17
  assemblies:
  - Cqrs.Azure.BlobStorage
  namespace: Cqrs.Azure.BlobStorage.Factories
  summary: "\nA factory for obtaining <xref href=\"Cqrs.DataStores.IDataStore%601\" data-throw-if-not-resolved=\"false\"></xref> collections from Azure Blob Storage.\n"
  example: []
  syntax:
    content: public abstract class BlobStorageDataStoreFactory
    content.vb: Public MustInherit Class BlobStorageDataStoreFactory
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Cqrs.Azure.BlobStorage.Factories.BlobStorageDataStoreFactory.BlobStorageDataStoreConnectionStringFactory
  commentId: P:Cqrs.Azure.BlobStorage.Factories.BlobStorageDataStoreFactory.BlobStorageDataStoreConnectionStringFactory
  id: BlobStorageDataStoreConnectionStringFactory
  parent: Cqrs.Azure.BlobStorage.Factories.BlobStorageDataStoreFactory
  langs:
  - csharp
  - vb
  name: BlobStorageDataStoreConnectionStringFactory
  nameWithType: BlobStorageDataStoreFactory.BlobStorageDataStoreConnectionStringFactory
  fullName: Cqrs.Azure.BlobStorage.Factories.BlobStorageDataStoreFactory.BlobStorageDataStoreConnectionStringFactory
  type: Property
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.BlobStorage/Factories/BlobStorageDataStoreFactory.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: BlobStorageDataStoreConnectionStringFactory
    path: Framework/Azure/Cqrs.Azure.BlobStorage/Factories/BlobStorageDataStoreFactory.cs
    startLine: 22
  assemblies:
  - Cqrs.Azure.BlobStorage
  namespace: Cqrs.Azure.BlobStorage.Factories
  summary: "\nGets the <xref href=\"Cqrs.Azure.BlobStorage.DataStores.IBlobStorageDataStoreConnectionStringFactory\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: protected IBlobStorageDataStoreConnectionStringFactory BlobStorageDataStoreConnectionStringFactory { get; }
    parameters: []
    return:
      type: Cqrs.Azure.BlobStorage.DataStores.IBlobStorageDataStoreConnectionStringFactory
    content.vb: Protected ReadOnly Property BlobStorageDataStoreConnectionStringFactory As IBlobStorageDataStoreConnectionStringFactory
  overload: Cqrs.Azure.BlobStorage.Factories.BlobStorageDataStoreFactory.BlobStorageDataStoreConnectionStringFactory*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Cqrs.Azure.BlobStorage.Factories.BlobStorageDataStoreFactory.Logger
  commentId: P:Cqrs.Azure.BlobStorage.Factories.BlobStorageDataStoreFactory.Logger
  id: Logger
  parent: Cqrs.Azure.BlobStorage.Factories.BlobStorageDataStoreFactory
  langs:
  - csharp
  - vb
  name: Logger
  nameWithType: BlobStorageDataStoreFactory.Logger
  fullName: Cqrs.Azure.BlobStorage.Factories.BlobStorageDataStoreFactory.Logger
  type: Property
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.BlobStorage/Factories/BlobStorageDataStoreFactory.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Logger
    path: Framework/Azure/Cqrs.Azure.BlobStorage/Factories/BlobStorageDataStoreFactory.cs
    startLine: 27
  assemblies:
  - Cqrs.Azure.BlobStorage
  namespace: Cqrs.Azure.BlobStorage.Factories
  summary: "\nGets the <xref href=\"cdmdotnet.Logging.ILogger\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: protected ILogger Logger { get; }
    parameters: []
    return:
      type: cdmdotnet.Logging.ILogger
    content.vb: Protected ReadOnly Property Logger As ILogger
  overload: Cqrs.Azure.BlobStorage.Factories.BlobStorageDataStoreFactory.Logger*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Cqrs.Azure.BlobStorage.Factories.BlobStorageDataStoreFactory.#ctor(cdmdotnet.Logging.ILogger,Cqrs.Azure.BlobStorage.DataStores.IBlobStorageDataStoreConnectionStringFactory)
  commentId: M:Cqrs.Azure.BlobStorage.Factories.BlobStorageDataStoreFactory.#ctor(cdmdotnet.Logging.ILogger,Cqrs.Azure.BlobStorage.DataStores.IBlobStorageDataStoreConnectionStringFactory)
  id: '#ctor(cdmdotnet.Logging.ILogger,Cqrs.Azure.BlobStorage.DataStores.IBlobStorageDataStoreConnectionStringFactory)'
  parent: Cqrs.Azure.BlobStorage.Factories.BlobStorageDataStoreFactory
  langs:
  - csharp
  - vb
  name: BlobStorageDataStoreFactory(ILogger, IBlobStorageDataStoreConnectionStringFactory)
  nameWithType: BlobStorageDataStoreFactory.BlobStorageDataStoreFactory(ILogger, IBlobStorageDataStoreConnectionStringFactory)
  fullName: Cqrs.Azure.BlobStorage.Factories.BlobStorageDataStoreFactory.BlobStorageDataStoreFactory(cdmdotnet.Logging.ILogger, Cqrs.Azure.BlobStorage.DataStores.IBlobStorageDataStoreConnectionStringFactory)
  type: Constructor
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.BlobStorage/Factories/BlobStorageDataStoreFactory.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: .ctor
    path: Framework/Azure/Cqrs.Azure.BlobStorage/Factories/BlobStorageDataStoreFactory.cs
    startLine: 32
  assemblies:
  - Cqrs.Azure.BlobStorage
  namespace: Cqrs.Azure.BlobStorage.Factories
  summary: "\nInstantiates and Initialises a new instance of the <xref href=\"Cqrs.Azure.BlobStorage.Factories.BlobStorageDataStoreFactory\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: protected BlobStorageDataStoreFactory(ILogger logger, IBlobStorageDataStoreConnectionStringFactory blobStorageDataStoreConnectionStringFactory)
    parameters:
    - id: logger
      type: cdmdotnet.Logging.ILogger
    - id: blobStorageDataStoreConnectionStringFactory
      type: Cqrs.Azure.BlobStorage.DataStores.IBlobStorageDataStoreConnectionStringFactory
    content.vb: Protected Sub New(logger As ILogger, blobStorageDataStoreConnectionStringFactory As IBlobStorageDataStoreConnectionStringFactory)
  overload: Cqrs.Azure.BlobStorage.Factories.BlobStorageDataStoreFactory.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
references:
- uid: Cqrs.DataStores.IDataStore`1
  commentId: T:Cqrs.DataStores.IDataStore`1
  isExternal: false
  name: IDataStore<TData>
  nameWithType: IDataStore<TData>
  fullName: Cqrs.DataStores.IDataStore<TData>
  nameWithType.vb: IDataStore(Of TData)
  fullName.vb: Cqrs.DataStores.IDataStore(Of TData)
  name.vb: IDataStore(Of TData)
  spec.csharp:
  - uid: Cqrs.DataStores.IDataStore`1
    name: IDataStore
    nameWithType: IDataStore
    fullName: Cqrs.DataStores.IDataStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.DataStores.IDataStore`1
    name: IDataStore
    nameWithType: IDataStore
    fullName: Cqrs.DataStores.IDataStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.Factories
  commentId: N:Cqrs.Azure.BlobStorage.Factories
  isExternal: false
  name: Cqrs.Azure.BlobStorage.Factories
  nameWithType: Cqrs.Azure.BlobStorage.Factories
  fullName: Cqrs.Azure.BlobStorage.Factories
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Cqrs.Azure.BlobStorage.DataStores.IBlobStorageDataStoreConnectionStringFactory
  commentId: T:Cqrs.Azure.BlobStorage.DataStores.IBlobStorageDataStoreConnectionStringFactory
  parent: Cqrs.Azure.BlobStorage.DataStores
  isExternal: false
  name: IBlobStorageDataStoreConnectionStringFactory
  nameWithType: IBlobStorageDataStoreConnectionStringFactory
  fullName: Cqrs.Azure.BlobStorage.DataStores.IBlobStorageDataStoreConnectionStringFactory
- uid: Cqrs.Azure.BlobStorage.Factories.BlobStorageDataStoreFactory.BlobStorageDataStoreConnectionStringFactory*
  commentId: Overload:Cqrs.Azure.BlobStorage.Factories.BlobStorageDataStoreFactory.BlobStorageDataStoreConnectionStringFactory
  isExternal: false
  name: BlobStorageDataStoreConnectionStringFactory
  nameWithType: BlobStorageDataStoreFactory.BlobStorageDataStoreConnectionStringFactory
  fullName: Cqrs.Azure.BlobStorage.Factories.BlobStorageDataStoreFactory.BlobStorageDataStoreConnectionStringFactory
- uid: Cqrs.Azure.BlobStorage.DataStores
  commentId: N:Cqrs.Azure.BlobStorage.DataStores
  isExternal: false
  name: Cqrs.Azure.BlobStorage.DataStores
  nameWithType: Cqrs.Azure.BlobStorage.DataStores
  fullName: Cqrs.Azure.BlobStorage.DataStores
- uid: cdmdotnet.Logging.ILogger
  commentId: T:cdmdotnet.Logging.ILogger
  parent: cdmdotnet.Logging
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: cdmdotnet.Logging.ILogger
- uid: Cqrs.Azure.BlobStorage.Factories.BlobStorageDataStoreFactory.Logger*
  commentId: Overload:Cqrs.Azure.BlobStorage.Factories.BlobStorageDataStoreFactory.Logger
  isExternal: false
  name: Logger
  nameWithType: BlobStorageDataStoreFactory.Logger
  fullName: Cqrs.Azure.BlobStorage.Factories.BlobStorageDataStoreFactory.Logger
- uid: cdmdotnet.Logging
  commentId: N:cdmdotnet.Logging
  isExternal: false
  name: cdmdotnet.Logging
  nameWithType: cdmdotnet.Logging
  fullName: cdmdotnet.Logging
- uid: Cqrs.Azure.BlobStorage.Factories.BlobStorageDataStoreFactory
  commentId: T:Cqrs.Azure.BlobStorage.Factories.BlobStorageDataStoreFactory
  isExternal: false
  name: BlobStorageDataStoreFactory
  nameWithType: BlobStorageDataStoreFactory
  fullName: Cqrs.Azure.BlobStorage.Factories.BlobStorageDataStoreFactory
- uid: Cqrs.Azure.BlobStorage.Factories.BlobStorageDataStoreFactory.#ctor*
  commentId: Overload:Cqrs.Azure.BlobStorage.Factories.BlobStorageDataStoreFactory.#ctor
  isExternal: false
  name: BlobStorageDataStoreFactory
  nameWithType: BlobStorageDataStoreFactory.BlobStorageDataStoreFactory
  fullName: Cqrs.Azure.BlobStorage.Factories.BlobStorageDataStoreFactory.BlobStorageDataStoreFactory
