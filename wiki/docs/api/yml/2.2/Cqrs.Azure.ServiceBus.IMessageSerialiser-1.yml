### YamlMime:ManagedReference
items:
- uid: Cqrs.Azure.ServiceBus.IMessageSerialiser`1
  commentId: T:Cqrs.Azure.ServiceBus.IMessageSerialiser`1
  id: IMessageSerialiser`1
  parent: Cqrs.Azure.ServiceBus
  children:
  - Cqrs.Azure.ServiceBus.IMessageSerialiser`1.DeserialiseCommand(System.String)
  - Cqrs.Azure.ServiceBus.IMessageSerialiser`1.DeserialiseEvent(System.String)
  - Cqrs.Azure.ServiceBus.IMessageSerialiser`1.SerialiseCommand``1(``0)
  - Cqrs.Azure.ServiceBus.IMessageSerialiser`1.SerialiseEvent``1(``0)
  langs:
  - csharp
  - vb
  name: IMessageSerialiser<TAuthenticationToken>
  nameWithType: IMessageSerialiser<TAuthenticationToken>
  fullName: Cqrs.Azure.ServiceBus.IMessageSerialiser<TAuthenticationToken>
  type: Interface
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.ServiceBus/IMessageSerialiser.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: IMessageSerialiser
    path: Framework/Azure/Cqrs.Azure.ServiceBus/IMessageSerialiser.cs
    startLine: 18
  assemblies:
  - Cqrs.Azure.ServiceBus
  namespace: Cqrs.Azure.ServiceBus
  summary: "\nSerialises <xref href=\"Cqrs.Events.IEvent%601\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"Cqrs.Commands.ICommand%601\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public interface IMessageSerialiser<TAuthenticationToken>
    typeParameters:
    - id: TAuthenticationToken
      description: The <see cref="!:Type"></see> of the authentication token.
    content.vb: Public Interface IMessageSerialiser(Of TAuthenticationToken)
  nameWithType.vb: IMessageSerialiser(Of TAuthenticationToken)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: Cqrs.Azure.ServiceBus.IMessageSerialiser(Of TAuthenticationToken)
  name.vb: IMessageSerialiser(Of TAuthenticationToken)
- uid: Cqrs.Azure.ServiceBus.IMessageSerialiser`1.SerialiseEvent``1(``0)
  commentId: M:Cqrs.Azure.ServiceBus.IMessageSerialiser`1.SerialiseEvent``1(``0)
  id: SerialiseEvent``1(``0)
  parent: Cqrs.Azure.ServiceBus.IMessageSerialiser`1
  langs:
  - csharp
  - vb
  name: SerialiseEvent<TEvent>(TEvent)
  nameWithType: IMessageSerialiser<TAuthenticationToken>.SerialiseEvent<TEvent>(TEvent)
  fullName: Cqrs.Azure.ServiceBus.IMessageSerialiser<TAuthenticationToken>.SerialiseEvent<TEvent>(TEvent)
  type: Method
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.ServiceBus/IMessageSerialiser.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: SerialiseEvent
    path: Framework/Azure/Cqrs.Azure.ServiceBus/IMessageSerialiser.cs
    startLine: 26
  assemblies:
  - Cqrs.Azure.ServiceBus
  namespace: Cqrs.Azure.ServiceBus
  summary: "\nSerialise the provided <span class=\"paramref\">event</span>.\n"
  example: []
  syntax:
    content: 'string SerialiseEvent<TEvent>(TEvent event)where TEvent : IEvent<TAuthenticationToken>'
    parameters:
    - id: event
      type: '{TEvent}'
      description: The <xref href="Cqrs.Events.IEvent%601" data-throw-if-not-resolved="false"></xref> being serialised.
    typeParameters:
    - id: TEvent
      description: The <see cref="!:Type"></see> of the <xref href="Cqrs.Events.IEvent%601" data-throw-if-not-resolved="false"></xref> being serialised.
    return:
      type: System.String
      description: A <see cref="!:System.String"></see> representation of the provided <span class="paramref">event</span>.
    content.vb: Function SerialiseEvent(Of TEvent As IEvent(Of TAuthenticationToken))(event As TEvent) As String
  overload: Cqrs.Azure.ServiceBus.IMessageSerialiser`1.SerialiseEvent*
  nameWithType.vb: IMessageSerialiser(Of TAuthenticationToken).SerialiseEvent(Of TEvent)(TEvent)
  fullName.vb: Cqrs.Azure.ServiceBus.IMessageSerialiser(Of TAuthenticationToken).SerialiseEvent(Of TEvent)(TEvent)
  name.vb: SerialiseEvent(Of TEvent)(TEvent)
- uid: Cqrs.Azure.ServiceBus.IMessageSerialiser`1.SerialiseCommand``1(``0)
  commentId: M:Cqrs.Azure.ServiceBus.IMessageSerialiser`1.SerialiseCommand``1(``0)
  id: SerialiseCommand``1(``0)
  parent: Cqrs.Azure.ServiceBus.IMessageSerialiser`1
  langs:
  - csharp
  - vb
  name: SerialiseCommand<TCommand>(TCommand)
  nameWithType: IMessageSerialiser<TAuthenticationToken>.SerialiseCommand<TCommand>(TCommand)
  fullName: Cqrs.Azure.ServiceBus.IMessageSerialiser<TAuthenticationToken>.SerialiseCommand<TCommand>(TCommand)
  type: Method
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.ServiceBus/IMessageSerialiser.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: SerialiseCommand
    path: Framework/Azure/Cqrs.Azure.ServiceBus/IMessageSerialiser.cs
    startLine: 35
  assemblies:
  - Cqrs.Azure.ServiceBus
  namespace: Cqrs.Azure.ServiceBus
  summary: "\nSerialise the provided <span class=\"paramref\">command</span>.\n"
  example: []
  syntax:
    content: 'string SerialiseCommand<TCommand>(TCommand command)where TCommand : ICommand<TAuthenticationToken>'
    parameters:
    - id: command
      type: '{TCommand}'
      description: The <xref href="Cqrs.Commands.ICommand%601" data-throw-if-not-resolved="false"></xref> being serialised.
    typeParameters:
    - id: TCommand
      description: The <see cref="!:Type"></see> of the <xref href="Cqrs.Commands.ICommand%601" data-throw-if-not-resolved="false"></xref> being serialised.
    return:
      type: System.String
      description: A <see cref="!:System.String"></see> representation of the provided <span class="paramref">command</span>.
    content.vb: Function SerialiseCommand(Of TCommand As ICommand(Of TAuthenticationToken))(command As TCommand) As String
  overload: Cqrs.Azure.ServiceBus.IMessageSerialiser`1.SerialiseCommand*
  nameWithType.vb: IMessageSerialiser(Of TAuthenticationToken).SerialiseCommand(Of TCommand)(TCommand)
  fullName.vb: Cqrs.Azure.ServiceBus.IMessageSerialiser(Of TAuthenticationToken).SerialiseCommand(Of TCommand)(TCommand)
  name.vb: SerialiseCommand(Of TCommand)(TCommand)
- uid: Cqrs.Azure.ServiceBus.IMessageSerialiser`1.DeserialiseEvent(System.String)
  commentId: M:Cqrs.Azure.ServiceBus.IMessageSerialiser`1.DeserialiseEvent(System.String)
  id: DeserialiseEvent(System.String)
  parent: Cqrs.Azure.ServiceBus.IMessageSerialiser`1
  langs:
  - csharp
  - vb
  name: DeserialiseEvent(String)
  nameWithType: IMessageSerialiser<TAuthenticationToken>.DeserialiseEvent(String)
  fullName: Cqrs.Azure.ServiceBus.IMessageSerialiser<TAuthenticationToken>.DeserialiseEvent(System.String)
  type: Method
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.ServiceBus/IMessageSerialiser.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: DeserialiseEvent
    path: Framework/Azure/Cqrs.Azure.ServiceBus/IMessageSerialiser.cs
    startLine: 42
  assemblies:
  - Cqrs.Azure.ServiceBus
  namespace: Cqrs.Azure.ServiceBus
  summary: "\nDeserialise the provided <span class=\"paramref\">event</span> from its <see cref=\"!:System.String\"></see> representation.\n"
  example: []
  syntax:
    content: IEvent<TAuthenticationToken> DeserialiseEvent(string event)
    parameters:
    - id: event
      type: System.String
      description: A <see cref="!:System.String"></see> representation of an <xref href="Cqrs.Events.IEvent%601" data-throw-if-not-resolved="false"></xref> to deserialise.
    return:
      type: Cqrs.Events.IEvent{{TAuthenticationToken}}
    content.vb: Function DeserialiseEvent(event As String) As IEvent(Of TAuthenticationToken)
  overload: Cqrs.Azure.ServiceBus.IMessageSerialiser`1.DeserialiseEvent*
  nameWithType.vb: IMessageSerialiser(Of TAuthenticationToken).DeserialiseEvent(String)
  fullName.vb: Cqrs.Azure.ServiceBus.IMessageSerialiser(Of TAuthenticationToken).DeserialiseEvent(System.String)
- uid: Cqrs.Azure.ServiceBus.IMessageSerialiser`1.DeserialiseCommand(System.String)
  commentId: M:Cqrs.Azure.ServiceBus.IMessageSerialiser`1.DeserialiseCommand(System.String)
  id: DeserialiseCommand(System.String)
  parent: Cqrs.Azure.ServiceBus.IMessageSerialiser`1
  langs:
  - csharp
  - vb
  name: DeserialiseCommand(String)
  nameWithType: IMessageSerialiser<TAuthenticationToken>.DeserialiseCommand(String)
  fullName: Cqrs.Azure.ServiceBus.IMessageSerialiser<TAuthenticationToken>.DeserialiseCommand(System.String)
  type: Method
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.ServiceBus/IMessageSerialiser.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: DeserialiseCommand
    path: Framework/Azure/Cqrs.Azure.ServiceBus/IMessageSerialiser.cs
    startLine: 48
  assemblies:
  - Cqrs.Azure.ServiceBus
  namespace: Cqrs.Azure.ServiceBus
  summary: "\nDeserialise the provided <span class=\"paramref\">command</span> from its <see cref=\"!:System.String\"></see> representation.\n"
  example: []
  syntax:
    content: ICommand<TAuthenticationToken> DeserialiseCommand(string command)
    parameters:
    - id: command
      type: System.String
      description: A <see cref="!:System.String"></see> representation of an <xref href="Cqrs.Commands.ICommand%601" data-throw-if-not-resolved="false"></xref> to deserialise.
    return:
      type: Cqrs.Commands.ICommand{{TAuthenticationToken}}
    content.vb: Function DeserialiseCommand(command As String) As ICommand(Of TAuthenticationToken)
  overload: Cqrs.Azure.ServiceBus.IMessageSerialiser`1.DeserialiseCommand*
  nameWithType.vb: IMessageSerialiser(Of TAuthenticationToken).DeserialiseCommand(String)
  fullName.vb: Cqrs.Azure.ServiceBus.IMessageSerialiser(Of TAuthenticationToken).DeserialiseCommand(System.String)
references:
- uid: Cqrs.Events.IEvent`1
  commentId: T:Cqrs.Events.IEvent`1
  isExternal: false
  name: IEvent<TAuthenticationToken>
  nameWithType: IEvent<TAuthenticationToken>
  fullName: Cqrs.Events.IEvent<TAuthenticationToken>
  nameWithType.vb: IEvent(Of TAuthenticationToken)
  fullName.vb: Cqrs.Events.IEvent(Of TAuthenticationToken)
  name.vb: IEvent(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Commands.ICommand`1
  commentId: T:Cqrs.Commands.ICommand`1
  isExternal: false
  name: ICommand<TAuthenticationToken>
  nameWithType: ICommand<TAuthenticationToken>
  fullName: Cqrs.Commands.ICommand<TAuthenticationToken>
  nameWithType.vb: ICommand(Of TAuthenticationToken)
  fullName.vb: Cqrs.Commands.ICommand(Of TAuthenticationToken)
  name.vb: ICommand(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Commands.ICommand`1
    name: ICommand
    nameWithType: ICommand
    fullName: Cqrs.Commands.ICommand
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Commands.ICommand`1
    name: ICommand
    nameWithType: ICommand
    fullName: Cqrs.Commands.ICommand
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.ServiceBus
  commentId: N:Cqrs.Azure.ServiceBus
  isExternal: false
  name: Cqrs.Azure.ServiceBus
  nameWithType: Cqrs.Azure.ServiceBus
  fullName: Cqrs.Azure.ServiceBus
- uid: Cqrs.Azure.ServiceBus.IMessageSerialiser`1.SerialiseEvent*
  commentId: Overload:Cqrs.Azure.ServiceBus.IMessageSerialiser`1.SerialiseEvent
  isExternal: false
  name: SerialiseEvent
  nameWithType: IMessageSerialiser<TAuthenticationToken>.SerialiseEvent
  fullName: Cqrs.Azure.ServiceBus.IMessageSerialiser<TAuthenticationToken>.SerialiseEvent
  nameWithType.vb: IMessageSerialiser(Of TAuthenticationToken).SerialiseEvent
  fullName.vb: Cqrs.Azure.ServiceBus.IMessageSerialiser(Of TAuthenticationToken).SerialiseEvent
- uid: '{TEvent}'
  commentId: '!:TEvent'
  definition: TEvent
  name: TEvent
  nameWithType: TEvent
  fullName: TEvent
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: TEvent
  isExternal: false
  name: TEvent
  nameWithType: TEvent
  fullName: TEvent
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Cqrs.Azure.ServiceBus.IMessageSerialiser`1.SerialiseCommand*
  commentId: Overload:Cqrs.Azure.ServiceBus.IMessageSerialiser`1.SerialiseCommand
  isExternal: false
  name: SerialiseCommand
  nameWithType: IMessageSerialiser<TAuthenticationToken>.SerialiseCommand
  fullName: Cqrs.Azure.ServiceBus.IMessageSerialiser<TAuthenticationToken>.SerialiseCommand
  nameWithType.vb: IMessageSerialiser(Of TAuthenticationToken).SerialiseCommand
  fullName.vb: Cqrs.Azure.ServiceBus.IMessageSerialiser(Of TAuthenticationToken).SerialiseCommand
- uid: '{TCommand}'
  commentId: '!:TCommand'
  definition: TCommand
  name: TCommand
  nameWithType: TCommand
  fullName: TCommand
- uid: TCommand
  isExternal: false
  name: TCommand
  nameWithType: TCommand
  fullName: TCommand
- uid: Cqrs.Azure.ServiceBus.IMessageSerialiser`1.DeserialiseEvent*
  commentId: Overload:Cqrs.Azure.ServiceBus.IMessageSerialiser`1.DeserialiseEvent
  isExternal: false
  name: DeserialiseEvent
  nameWithType: IMessageSerialiser<TAuthenticationToken>.DeserialiseEvent
  fullName: Cqrs.Azure.ServiceBus.IMessageSerialiser<TAuthenticationToken>.DeserialiseEvent
  nameWithType.vb: IMessageSerialiser(Of TAuthenticationToken).DeserialiseEvent
  fullName.vb: Cqrs.Azure.ServiceBus.IMessageSerialiser(Of TAuthenticationToken).DeserialiseEvent
- uid: Cqrs.Events.IEvent{{TAuthenticationToken}}
  commentId: T:Cqrs.Events.IEvent{`0}
  parent: Cqrs.Events
  definition: Cqrs.Events.IEvent`1
  name: IEvent<TAuthenticationToken>
  nameWithType: IEvent<TAuthenticationToken>
  fullName: Cqrs.Events.IEvent<TAuthenticationToken>
  nameWithType.vb: IEvent(Of TAuthenticationToken)
  fullName.vb: Cqrs.Events.IEvent(Of TAuthenticationToken)
  name.vb: IEvent(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Events
  commentId: N:Cqrs.Events
  isExternal: false
  name: Cqrs.Events
  nameWithType: Cqrs.Events
  fullName: Cqrs.Events
- uid: Cqrs.Azure.ServiceBus.IMessageSerialiser`1.DeserialiseCommand*
  commentId: Overload:Cqrs.Azure.ServiceBus.IMessageSerialiser`1.DeserialiseCommand
  isExternal: false
  name: DeserialiseCommand
  nameWithType: IMessageSerialiser<TAuthenticationToken>.DeserialiseCommand
  fullName: Cqrs.Azure.ServiceBus.IMessageSerialiser<TAuthenticationToken>.DeserialiseCommand
  nameWithType.vb: IMessageSerialiser(Of TAuthenticationToken).DeserialiseCommand
  fullName.vb: Cqrs.Azure.ServiceBus.IMessageSerialiser(Of TAuthenticationToken).DeserialiseCommand
- uid: Cqrs.Commands.ICommand{{TAuthenticationToken}}
  commentId: T:Cqrs.Commands.ICommand{`0}
  parent: Cqrs.Commands
  definition: Cqrs.Commands.ICommand`1
  name: ICommand<TAuthenticationToken>
  nameWithType: ICommand<TAuthenticationToken>
  fullName: Cqrs.Commands.ICommand<TAuthenticationToken>
  nameWithType.vb: ICommand(Of TAuthenticationToken)
  fullName.vb: Cqrs.Commands.ICommand(Of TAuthenticationToken)
  name.vb: ICommand(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Commands.ICommand`1
    name: ICommand
    nameWithType: ICommand
    fullName: Cqrs.Commands.ICommand
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Commands.ICommand`1
    name: ICommand
    nameWithType: ICommand
    fullName: Cqrs.Commands.ICommand
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Commands
  commentId: N:Cqrs.Commands
  isExternal: false
  name: Cqrs.Commands
  nameWithType: Cqrs.Commands
  fullName: Cqrs.Commands
