### YamlMime:ManagedReference
items:
- uid: Cqrs.Tests.Substitutes.TestSnapshotEventStore
  commentId: T:Cqrs.Tests.Substitutes.TestSnapshotEventStore
  id: TestSnapshotEventStore
  parent: Cqrs.Tests.Substitutes
  children:
  - Cqrs.Tests.Substitutes.TestSnapshotEventStore.Get(System.Type,System.Guid,System.Boolean,System.Int32)
  langs:
  - csharp
  - vb
  name: TestSnapshotEventStore
  nameWithType: TestSnapshotEventStore
  fullName: Cqrs.Tests.Substitutes.TestSnapshotEventStore
  type: Class
  source:
    remote:
      path: Framework/Cqrs.Tests/Substitutes/TestSnapshotEventStore.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: TestSnapshotEventStore
    path: Framework/Cqrs.Tests/Substitutes/TestSnapshotEventStore.cs
    startLine: 8
  assemblies:
  - Cqrs.Tests
  namespace: Cqrs.Tests.Substitutes
  syntax:
    content: 'public class TestSnapshotEventStore : TestEventStore, IEventStore<ISingleSignOnToken>'
    content.vb: >-
      Public Class TestSnapshotEventStore

          Inherits TestEventStore

          Implements IEventStore(Of ISingleSignOnToken)
  inheritance:
  - System.Object
  - Cqrs.Tests.Substitutes.TestEventStore
  implements:
  - Cqrs.Events.IEventStore{Cqrs.Authentication.ISingleSignOnToken}
  inheritedMembers:
  - Cqrs.Tests.Substitutes.TestEventStore.EmptyGuid
  - Cqrs.Tests.Substitutes.TestEventStore.Save(System.Type,Cqrs.Events.IEvent{Cqrs.Authentication.ISingleSignOnToken})
  - Cqrs.Tests.Substitutes.TestEventStore.Get``1(System.Guid,System.Boolean,System.Int32)
  - Cqrs.Tests.Substitutes.TestEventStore.Get(System.Guid)
  - Cqrs.Tests.Substitutes.TestEventStore.Save``1(Cqrs.Events.IEvent{Cqrs.Authentication.ISingleSignOnToken})
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Cqrs.Tests.Substitutes.TestSnapshotEventStore.Get(System.Type,System.Guid,System.Boolean,System.Int32)
  commentId: M:Cqrs.Tests.Substitutes.TestSnapshotEventStore.Get(System.Type,System.Guid,System.Boolean,System.Int32)
  id: Get(System.Type,System.Guid,System.Boolean,System.Int32)
  parent: Cqrs.Tests.Substitutes.TestSnapshotEventStore
  langs:
  - csharp
  - vb
  name: Get(Type, Guid, Boolean, Int32)
  nameWithType: TestSnapshotEventStore.Get(Type, Guid, Boolean, Int32)
  fullName: Cqrs.Tests.Substitutes.TestSnapshotEventStore.Get(System.Type, System.Guid, System.Boolean, System.Int32)
  type: Method
  source:
    remote:
      path: Framework/Cqrs.Tests/Substitutes/TestSnapshotEventStore.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Get
    path: Framework/Cqrs.Tests/Substitutes/TestSnapshotEventStore.cs
    startLine: 10
  assemblies:
  - Cqrs.Tests
  namespace: Cqrs.Tests.Substitutes
  syntax:
    content: public override IEnumerable<IEvent<ISingleSignOnToken>> Get(Type aggregateType, Guid aggregateId, bool useLastEventOnly = false, int fromVersion = -1)
    parameters:
    - id: aggregateType
      type: System.Type
    - id: aggregateId
      type: System.Guid
    - id: useLastEventOnly
      type: System.Boolean
    - id: fromVersion
      type: System.Int32
    return:
      type: System.Collections.Generic.IEnumerable{Cqrs.Events.IEvent{Cqrs.Authentication.ISingleSignOnToken}}
    content.vb: Public Overrides Function Get(aggregateType As Type, aggregateId As Guid, useLastEventOnly As Boolean = False, fromVersion As Integer = -1) As IEnumerable(Of IEvent(Of ISingleSignOnToken))
  overridden: Cqrs.Tests.Substitutes.TestEventStore.Get(System.Type,System.Guid,System.Boolean,System.Int32)
  overload: Cqrs.Tests.Substitutes.TestSnapshotEventStore.Get*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Cqrs.Tests.Substitutes
  commentId: N:Cqrs.Tests.Substitutes
  isExternal: false
  name: Cqrs.Tests.Substitutes
  nameWithType: Cqrs.Tests.Substitutes
  fullName: Cqrs.Tests.Substitutes
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Cqrs.Tests.Substitutes.TestEventStore
  commentId: T:Cqrs.Tests.Substitutes.TestEventStore
  parent: Cqrs.Tests.Substitutes
  isExternal: false
  name: TestEventStore
  nameWithType: TestEventStore
  fullName: Cqrs.Tests.Substitutes.TestEventStore
- uid: Cqrs.Events.IEventStore{Cqrs.Authentication.ISingleSignOnToken}
  commentId: T:Cqrs.Events.IEventStore{Cqrs.Authentication.ISingleSignOnToken}
  parent: Cqrs.Events
  definition: Cqrs.Events.IEventStore`1
  name: IEventStore<ISingleSignOnToken>
  nameWithType: IEventStore<ISingleSignOnToken>
  fullName: Cqrs.Events.IEventStore<Cqrs.Authentication.ISingleSignOnToken>
  nameWithType.vb: IEventStore(Of ISingleSignOnToken)
  fullName.vb: Cqrs.Events.IEventStore(Of Cqrs.Authentication.ISingleSignOnToken)
  name.vb: IEventStore(Of ISingleSignOnToken)
  spec.csharp:
  - uid: Cqrs.Events.IEventStore`1
    name: IEventStore
    nameWithType: IEventStore
    fullName: Cqrs.Events.IEventStore
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cqrs.Authentication.ISingleSignOnToken
    name: ISingleSignOnToken
    nameWithType: ISingleSignOnToken
    fullName: Cqrs.Authentication.ISingleSignOnToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Events.IEventStore`1
    name: IEventStore
    nameWithType: IEventStore
    fullName: Cqrs.Events.IEventStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Cqrs.Authentication.ISingleSignOnToken
    name: ISingleSignOnToken
    nameWithType: ISingleSignOnToken
    fullName: Cqrs.Authentication.ISingleSignOnToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Tests.Substitutes.TestEventStore.EmptyGuid
  commentId: P:Cqrs.Tests.Substitutes.TestEventStore.EmptyGuid
  parent: Cqrs.Tests.Substitutes.TestEventStore
  isExternal: false
  name: EmptyGuid
  nameWithType: TestEventStore.EmptyGuid
  fullName: Cqrs.Tests.Substitutes.TestEventStore.EmptyGuid
- uid: Cqrs.Tests.Substitutes.TestEventStore.Save(System.Type,Cqrs.Events.IEvent{Cqrs.Authentication.ISingleSignOnToken})
  commentId: M:Cqrs.Tests.Substitutes.TestEventStore.Save(System.Type,Cqrs.Events.IEvent{Cqrs.Authentication.ISingleSignOnToken})
  parent: Cqrs.Tests.Substitutes.TestEventStore
  isExternal: true
  name: Save(Type, IEvent<ISingleSignOnToken>)
  nameWithType: TestEventStore.Save(Type, IEvent<ISingleSignOnToken>)
  fullName: Cqrs.Tests.Substitutes.TestEventStore.Save(System.Type, Cqrs.Events.IEvent<Cqrs.Authentication.ISingleSignOnToken>)
  nameWithType.vb: TestEventStore.Save(Type, IEvent(Of ISingleSignOnToken))
  fullName.vb: Cqrs.Tests.Substitutes.TestEventStore.Save(System.Type, Cqrs.Events.IEvent(Of Cqrs.Authentication.ISingleSignOnToken))
  name.vb: Save(Type, IEvent(Of ISingleSignOnToken))
  spec.csharp:
  - uid: Cqrs.Tests.Substitutes.TestEventStore.Save(System.Type,Cqrs.Events.IEvent{Cqrs.Authentication.ISingleSignOnToken})
    name: Save
    nameWithType: TestEventStore.Save
    fullName: Cqrs.Tests.Substitutes.TestEventStore.Save
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cqrs.Authentication.ISingleSignOnToken
    name: ISingleSignOnToken
    nameWithType: ISingleSignOnToken
    fullName: Cqrs.Authentication.ISingleSignOnToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Tests.Substitutes.TestEventStore.Save(System.Type,Cqrs.Events.IEvent{Cqrs.Authentication.ISingleSignOnToken})
    name: Save
    nameWithType: TestEventStore.Save
    fullName: Cqrs.Tests.Substitutes.TestEventStore.Save
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Cqrs.Authentication.ISingleSignOnToken
    name: ISingleSignOnToken
    nameWithType: ISingleSignOnToken
    fullName: Cqrs.Authentication.ISingleSignOnToken
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Tests.Substitutes.TestEventStore.Get``1(System.Guid,System.Boolean,System.Int32)
  commentId: M:Cqrs.Tests.Substitutes.TestEventStore.Get``1(System.Guid,System.Boolean,System.Int32)
  parent: Cqrs.Tests.Substitutes.TestEventStore
  isExternal: true
  name: Get<T>(Guid, Boolean, Int32)
  nameWithType: TestEventStore.Get<T>(Guid, Boolean, Int32)
  fullName: Cqrs.Tests.Substitutes.TestEventStore.Get<T>(System.Guid, System.Boolean, System.Int32)
  nameWithType.vb: TestEventStore.Get(Of T)(Guid, Boolean, Int32)
  fullName.vb: Cqrs.Tests.Substitutes.TestEventStore.Get(Of T)(System.Guid, System.Boolean, System.Int32)
  name.vb: Get(Of T)(Guid, Boolean, Int32)
  spec.csharp:
  - uid: Cqrs.Tests.Substitutes.TestEventStore.Get``1(System.Guid,System.Boolean,System.Int32)
    name: Get<T>
    nameWithType: TestEventStore.Get<T>
    fullName: Cqrs.Tests.Substitutes.TestEventStore.Get<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Tests.Substitutes.TestEventStore.Get``1(System.Guid,System.Boolean,System.Int32)
    name: Get(Of T)
    nameWithType: TestEventStore.Get(Of T)
    fullName: Cqrs.Tests.Substitutes.TestEventStore.Get(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Tests.Substitutes.TestEventStore.Get(System.Guid)
  commentId: M:Cqrs.Tests.Substitutes.TestEventStore.Get(System.Guid)
  parent: Cqrs.Tests.Substitutes.TestEventStore
  isExternal: true
  name: Get(Guid)
  nameWithType: TestEventStore.Get(Guid)
  fullName: Cqrs.Tests.Substitutes.TestEventStore.Get(System.Guid)
  spec.csharp:
  - uid: Cqrs.Tests.Substitutes.TestEventStore.Get(System.Guid)
    name: Get
    nameWithType: TestEventStore.Get
    fullName: Cqrs.Tests.Substitutes.TestEventStore.Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Tests.Substitutes.TestEventStore.Get(System.Guid)
    name: Get
    nameWithType: TestEventStore.Get
    fullName: Cqrs.Tests.Substitutes.TestEventStore.Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Tests.Substitutes.TestEventStore.Save``1(Cqrs.Events.IEvent{Cqrs.Authentication.ISingleSignOnToken})
  commentId: M:Cqrs.Tests.Substitutes.TestEventStore.Save``1(Cqrs.Events.IEvent{Cqrs.Authentication.ISingleSignOnToken})
  parent: Cqrs.Tests.Substitutes.TestEventStore
  isExternal: false
  name: Save<T>(IEvent<ISingleSignOnToken>)
  nameWithType: TestEventStore.Save<T>(IEvent<ISingleSignOnToken>)
  fullName: Cqrs.Tests.Substitutes.TestEventStore.Save<T>(Cqrs.Events.IEvent<Cqrs.Authentication.ISingleSignOnToken>)
  nameWithType.vb: TestEventStore.Save(Of T)(IEvent(Of ISingleSignOnToken))
  fullName.vb: Cqrs.Tests.Substitutes.TestEventStore.Save(Of T)(Cqrs.Events.IEvent(Of Cqrs.Authentication.ISingleSignOnToken))
  name.vb: Save(Of T)(IEvent(Of ISingleSignOnToken))
  spec.csharp:
  - uid: Cqrs.Tests.Substitutes.TestEventStore.Save``1(Cqrs.Events.IEvent{Cqrs.Authentication.ISingleSignOnToken})
    name: Save<T>
    nameWithType: TestEventStore.Save<T>
    fullName: Cqrs.Tests.Substitutes.TestEventStore.Save<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cqrs.Authentication.ISingleSignOnToken
    name: ISingleSignOnToken
    nameWithType: ISingleSignOnToken
    fullName: Cqrs.Authentication.ISingleSignOnToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Tests.Substitutes.TestEventStore.Save``1(Cqrs.Events.IEvent{Cqrs.Authentication.ISingleSignOnToken})
    name: Save(Of T)
    nameWithType: TestEventStore.Save(Of T)
    fullName: Cqrs.Tests.Substitutes.TestEventStore.Save(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Cqrs.Authentication.ISingleSignOnToken
    name: ISingleSignOnToken
    nameWithType: ISingleSignOnToken
    fullName: Cqrs.Authentication.ISingleSignOnToken
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Cqrs.Events.IEventStore`1
  commentId: T:Cqrs.Events.IEventStore`1
  isExternal: false
  name: IEventStore<TAuthenticationToken>
  nameWithType: IEventStore<TAuthenticationToken>
  fullName: Cqrs.Events.IEventStore<TAuthenticationToken>
  nameWithType.vb: IEventStore(Of TAuthenticationToken)
  fullName.vb: Cqrs.Events.IEventStore(Of TAuthenticationToken)
  name.vb: IEventStore(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Events.IEventStore`1
    name: IEventStore
    nameWithType: IEventStore
    fullName: Cqrs.Events.IEventStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Events.IEventStore`1
    name: IEventStore
    nameWithType: IEventStore
    fullName: Cqrs.Events.IEventStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Events
  commentId: N:Cqrs.Events
  isExternal: false
  name: Cqrs.Events
  nameWithType: Cqrs.Events
  fullName: Cqrs.Events
- uid: Cqrs.Tests.Substitutes.TestEventStore.Get(System.Type,System.Guid,System.Boolean,System.Int32)
  commentId: M:Cqrs.Tests.Substitutes.TestEventStore.Get(System.Type,System.Guid,System.Boolean,System.Int32)
  parent: Cqrs.Tests.Substitutes.TestEventStore
  isExternal: true
  name: Get(Type, Guid, Boolean, Int32)
  nameWithType: TestEventStore.Get(Type, Guid, Boolean, Int32)
  fullName: Cqrs.Tests.Substitutes.TestEventStore.Get(System.Type, System.Guid, System.Boolean, System.Int32)
  spec.csharp:
  - uid: Cqrs.Tests.Substitutes.TestEventStore.Get(System.Type,System.Guid,System.Boolean,System.Int32)
    name: Get
    nameWithType: TestEventStore.Get
    fullName: Cqrs.Tests.Substitutes.TestEventStore.Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Tests.Substitutes.TestEventStore.Get(System.Type,System.Guid,System.Boolean,System.Int32)
    name: Get
    nameWithType: TestEventStore.Get
    fullName: Cqrs.Tests.Substitutes.TestEventStore.Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Tests.Substitutes.TestSnapshotEventStore.Get*
  commentId: Overload:Cqrs.Tests.Substitutes.TestSnapshotEventStore.Get
  isExternal: false
  name: Get
  nameWithType: TestSnapshotEventStore.Get
  fullName: Cqrs.Tests.Substitutes.TestSnapshotEventStore.Get
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.IEnumerable{Cqrs.Events.IEvent{Cqrs.Authentication.ISingleSignOnToken}}
  commentId: T:System.Collections.Generic.IEnumerable{Cqrs.Events.IEvent{Cqrs.Authentication.ISingleSignOnToken}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IEvent<ISingleSignOnToken>>
  nameWithType: IEnumerable<IEvent<ISingleSignOnToken>>
  fullName: System.Collections.Generic.IEnumerable<Cqrs.Events.IEvent<Cqrs.Authentication.ISingleSignOnToken>>
  nameWithType.vb: IEnumerable(Of IEvent(Of ISingleSignOnToken))
  fullName.vb: System.Collections.Generic.IEnumerable(Of Cqrs.Events.IEvent(Of Cqrs.Authentication.ISingleSignOnToken))
  name.vb: IEnumerable(Of IEvent(Of ISingleSignOnToken))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cqrs.Authentication.ISingleSignOnToken
    name: ISingleSignOnToken
    nameWithType: ISingleSignOnToken
    fullName: Cqrs.Authentication.ISingleSignOnToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Cqrs.Authentication.ISingleSignOnToken
    name: ISingleSignOnToken
    nameWithType: ISingleSignOnToken
    fullName: Cqrs.Authentication.ISingleSignOnToken
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
