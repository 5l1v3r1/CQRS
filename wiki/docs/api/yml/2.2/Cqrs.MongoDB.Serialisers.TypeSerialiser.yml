### YamlMime:ManagedReference
items:
- uid: Cqrs.MongoDB.Serialisers.TypeSerialiser
  commentId: T:Cqrs.MongoDB.Serialisers.TypeSerialiser
  id: TypeSerialiser
  parent: Cqrs.MongoDB.Serialisers
  children:
  - Cqrs.MongoDB.Serialisers.TypeSerialiser.Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)
  - Cqrs.MongoDB.Serialisers.TypeSerialiser.MongoDB#Bson#Serialization#IBsonSerializer{System#Type}#Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)
  - Cqrs.MongoDB.Serialisers.TypeSerialiser.Serialize(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,System.Object)
  - Cqrs.MongoDB.Serialisers.TypeSerialiser.Serialize(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,System.Type)
  - Cqrs.MongoDB.Serialisers.TypeSerialiser.ValueType
  langs:
  - csharp
  - vb
  name: TypeSerialiser
  nameWithType: TypeSerialiser
  fullName: Cqrs.MongoDB.Serialisers.TypeSerialiser
  type: Class
  source:
    remote:
      path: Framework/Cqrs.MongoDB/Serialisers/TypeSerialiser.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: TypeSerialiser
    path: Framework/Cqrs.MongoDB/Serialisers/TypeSerialiser.cs
    startLine: 14
  assemblies:
  - Cqrs.MongoDB
  namespace: Cqrs.MongoDB.Serialisers
  syntax:
    content: 'public class TypeSerialiser : IBsonSerializer<Type>, IBsonSerializer'
    content.vb: >-
      Public Class TypeSerialiser
          Implements IBsonSerializer(Of Type), IBsonSerializer
  inheritance:
  - System.Object
  implements:
  - MongoDB.Bson.Serialization.IBsonSerializer{System.Type}
  - MongoDB.Bson.Serialization.IBsonSerializer
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Cqrs.MongoDB.Serialisers.TypeSerialiser.Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)
  commentId: M:Cqrs.MongoDB.Serialisers.TypeSerialiser.Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)
  id: Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)
  parent: Cqrs.MongoDB.Serialisers.TypeSerialiser
  langs:
  - csharp
  - vb
  name: Deserialize(BsonDeserializationContext, BsonDeserializationArgs)
  nameWithType: TypeSerialiser.Deserialize(BsonDeserializationContext, BsonDeserializationArgs)
  fullName: Cqrs.MongoDB.Serialisers.TypeSerialiser.Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext, MongoDB.Bson.Serialization.BsonDeserializationArgs)
  type: Method
  source:
    remote:
      path: Framework/Cqrs.MongoDB/Serialisers/TypeSerialiser.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Deserialize
    path: Framework/Cqrs.MongoDB/Serialisers/TypeSerialiser.cs
    startLine: 26
  assemblies:
  - Cqrs.MongoDB
  namespace: Cqrs.MongoDB.Serialisers
  summary: "\nDeserializes a value.\n"
  example: []
  syntax:
    content: public object Deserialize(BsonDeserializationContext context, BsonDeserializationArgs args)
    parameters:
    - id: context
      type: MongoDB.Bson.Serialization.BsonDeserializationContext
      description: The deserialization context.
    - id: args
      type: MongoDB.Bson.Serialization.BsonDeserializationArgs
      description: The deserialization args.
    return:
      type: System.Object
      description: "\nA deserialized value.\n"
    content.vb: Public Function Deserialize(context As BsonDeserializationContext, args As BsonDeserializationArgs) As Object
  overload: Cqrs.MongoDB.Serialisers.TypeSerialiser.Deserialize*
  implements:
  - MongoDB.Bson.Serialization.IBsonSerializer.Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Cqrs.MongoDB.Serialisers.TypeSerialiser.Serialize(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,System.Type)
  commentId: M:Cqrs.MongoDB.Serialisers.TypeSerialiser.Serialize(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,System.Type)
  id: Serialize(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,System.Type)
  parent: Cqrs.MongoDB.Serialisers.TypeSerialiser
  langs:
  - csharp
  - vb
  name: Serialize(BsonSerializationContext, BsonSerializationArgs, Type)
  nameWithType: TypeSerialiser.Serialize(BsonSerializationContext, BsonSerializationArgs, Type)
  fullName: Cqrs.MongoDB.Serialisers.TypeSerialiser.Serialize(MongoDB.Bson.Serialization.BsonSerializationContext, MongoDB.Bson.Serialization.BsonSerializationArgs, System.Type)
  type: Method
  source:
    remote:
      path: Framework/Cqrs.MongoDB/Serialisers/TypeSerialiser.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Serialize
    path: Framework/Cqrs.MongoDB/Serialisers/TypeSerialiser.cs
    startLine: 35
  assemblies:
  - Cqrs.MongoDB
  namespace: Cqrs.MongoDB.Serialisers
  summary: "\nSerializes a value.\n"
  example: []
  syntax:
    content: public void Serialize(BsonSerializationContext context, BsonSerializationArgs args, Type value)
    parameters:
    - id: context
      type: MongoDB.Bson.Serialization.BsonSerializationContext
      description: The serialization context.
    - id: args
      type: MongoDB.Bson.Serialization.BsonSerializationArgs
      description: The serialization args.
    - id: value
      type: System.Type
      description: The value.
    content.vb: Public Sub Serialize(context As BsonSerializationContext, args As BsonSerializationArgs, value As Type)
  overload: Cqrs.MongoDB.Serialisers.TypeSerialiser.Serialize*
  implements:
  - MongoDB.Bson.Serialization.IBsonSerializer{System.Type}.Serialize(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,System.Type)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Cqrs.MongoDB.Serialisers.TypeSerialiser.MongoDB#Bson#Serialization#IBsonSerializer{System#Type}#Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)
  commentId: M:Cqrs.MongoDB.Serialisers.TypeSerialiser.MongoDB#Bson#Serialization#IBsonSerializer{System#Type}#Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)
  id: MongoDB#Bson#Serialization#IBsonSerializer{System#Type}#Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)
  isEii: true
  parent: Cqrs.MongoDB.Serialisers.TypeSerialiser
  langs:
  - csharp
  - vb
  name: IBsonSerializer<Type>.Deserialize(BsonDeserializationContext, BsonDeserializationArgs)
  nameWithType: TypeSerialiser.IBsonSerializer<Type>.Deserialize(BsonDeserializationContext, BsonDeserializationArgs)
  fullName: Cqrs.MongoDB.Serialisers.TypeSerialiser.MongoDB.Bson.Serialization.IBsonSerializer<System.Type>.Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext, MongoDB.Bson.Serialization.BsonDeserializationArgs)
  type: Method
  source:
    remote:
      path: Framework/Cqrs.MongoDB/Serialisers/TypeSerialiser.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: MongoDB.Bson.Serialization.IBsonSerializer<System.Type>.Deserialize
    path: Framework/Cqrs.MongoDB/Serialisers/TypeSerialiser.cs
    startLine: 55
  assemblies:
  - Cqrs.MongoDB
  namespace: Cqrs.MongoDB.Serialisers
  summary: "\nDeserializes a value.\n"
  example: []
  syntax:
    content: Type IBsonSerializer<Type>.Deserialize(BsonDeserializationContext context, BsonDeserializationArgs args)
    parameters:
    - id: context
      type: MongoDB.Bson.Serialization.BsonDeserializationContext
      description: The deserialization context.
    - id: args
      type: MongoDB.Bson.Serialization.BsonDeserializationArgs
      description: The deserialization args.
    return:
      type: System.Type
      description: "\nA deserialized value.\n"
    content.vb: Function MongoDB.Bson.Serialization.IBsonSerializer<System.Type>.Deserialize(context As BsonDeserializationContext, args As BsonDeserializationArgs) As Type Implements IBsonSerializer(Of Type).Deserialize
  overload: Cqrs.MongoDB.Serialisers.TypeSerialiser.MongoDB#Bson#Serialization#IBsonSerializer{System#Type}#Deserialize*
  implements:
  - MongoDB.Bson.Serialization.IBsonSerializer{System.Type}.Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)
  nameWithType.vb: TypeSerialiser.MongoDB.Bson.Serialization.IBsonSerializer<System.Type>.Deserialize(BsonDeserializationContext, BsonDeserializationArgs)
  name.vb: MongoDB.Bson.Serialization.IBsonSerializer<System.Type>.Deserialize(BsonDeserializationContext, BsonDeserializationArgs)
- uid: Cqrs.MongoDB.Serialisers.TypeSerialiser.Serialize(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,System.Object)
  commentId: M:Cqrs.MongoDB.Serialisers.TypeSerialiser.Serialize(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,System.Object)
  id: Serialize(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,System.Object)
  parent: Cqrs.MongoDB.Serialisers.TypeSerialiser
  langs:
  - csharp
  - vb
  name: Serialize(BsonSerializationContext, BsonSerializationArgs, Object)
  nameWithType: TypeSerialiser.Serialize(BsonSerializationContext, BsonSerializationArgs, Object)
  fullName: Cqrs.MongoDB.Serialisers.TypeSerialiser.Serialize(MongoDB.Bson.Serialization.BsonSerializationContext, MongoDB.Bson.Serialization.BsonSerializationArgs, System.Object)
  type: Method
  source:
    remote:
      path: Framework/Cqrs.MongoDB/Serialisers/TypeSerialiser.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Serialize
    path: Framework/Cqrs.MongoDB/Serialisers/TypeSerialiser.cs
    startLine: 83
  assemblies:
  - Cqrs.MongoDB
  namespace: Cqrs.MongoDB.Serialisers
  summary: "\nSerializes a value.\n"
  example: []
  syntax:
    content: public void Serialize(BsonSerializationContext context, BsonSerializationArgs args, object value)
    parameters:
    - id: context
      type: MongoDB.Bson.Serialization.BsonSerializationContext
      description: The serialization context.
    - id: args
      type: MongoDB.Bson.Serialization.BsonSerializationArgs
      description: The serialization args.
    - id: value
      type: System.Object
      description: The value.
    content.vb: Public Sub Serialize(context As BsonSerializationContext, args As BsonSerializationArgs, value As Object)
  overload: Cqrs.MongoDB.Serialisers.TypeSerialiser.Serialize*
  implements:
  - MongoDB.Bson.Serialization.IBsonSerializer.Serialize(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Cqrs.MongoDB.Serialisers.TypeSerialiser.ValueType
  commentId: P:Cqrs.MongoDB.Serialisers.TypeSerialiser.ValueType
  id: ValueType
  parent: Cqrs.MongoDB.Serialisers.TypeSerialiser
  langs:
  - csharp
  - vb
  name: ValueType
  nameWithType: TypeSerialiser.ValueType
  fullName: Cqrs.MongoDB.Serialisers.TypeSerialiser.ValueType
  type: Property
  source:
    remote:
      path: Framework/Cqrs.MongoDB/Serialisers/TypeSerialiser.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: ValueType
    path: Framework/Cqrs.MongoDB/Serialisers/TypeSerialiser.cs
    startLine: 91
  assemblies:
  - Cqrs.MongoDB
  namespace: Cqrs.MongoDB.Serialisers
  summary: "\nGets the type of the value.\n"
  example: []
  syntax:
    content: public Type ValueType { get; protected set; }
    parameters: []
    return:
      type: System.Type
    content.vb: Public Property ValueType As Type
  overload: Cqrs.MongoDB.Serialisers.TypeSerialiser.ValueType*
  implements:
  - MongoDB.Bson.Serialization.IBsonSerializer.ValueType
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
references:
- uid: Cqrs.MongoDB.Serialisers
  commentId: N:Cqrs.MongoDB.Serialisers
  isExternal: false
  name: Cqrs.MongoDB.Serialisers
  nameWithType: Cqrs.MongoDB.Serialisers
  fullName: Cqrs.MongoDB.Serialisers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: MongoDB.Bson.Serialization.IBsonSerializer{System.Type}
  commentId: T:MongoDB.Bson.Serialization.IBsonSerializer{System.Type}
  parent: MongoDB.Bson.Serialization
  definition: MongoDB.Bson.Serialization.IBsonSerializer`1
  name: IBsonSerializer<Type>
  nameWithType: IBsonSerializer<Type>
  fullName: MongoDB.Bson.Serialization.IBsonSerializer<System.Type>
  nameWithType.vb: IBsonSerializer(Of Type)
  fullName.vb: MongoDB.Bson.Serialization.IBsonSerializer(Of System.Type)
  name.vb: IBsonSerializer(Of Type)
  spec.csharp:
  - uid: MongoDB.Bson.Serialization.IBsonSerializer`1
    name: IBsonSerializer
    nameWithType: IBsonSerializer
    fullName: MongoDB.Bson.Serialization.IBsonSerializer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: MongoDB.Bson.Serialization.IBsonSerializer`1
    name: IBsonSerializer
    nameWithType: IBsonSerializer
    fullName: MongoDB.Bson.Serialization.IBsonSerializer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Bson.Serialization.IBsonSerializer
  commentId: T:MongoDB.Bson.Serialization.IBsonSerializer
  parent: MongoDB.Bson.Serialization
  isExternal: true
  name: IBsonSerializer
  nameWithType: IBsonSerializer
  fullName: MongoDB.Bson.Serialization.IBsonSerializer
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: MongoDB.Bson.Serialization.IBsonSerializer`1
  commentId: T:MongoDB.Bson.Serialization.IBsonSerializer`1
  isExternal: true
  name: IBsonSerializer<TValue>
  nameWithType: IBsonSerializer<TValue>
  fullName: MongoDB.Bson.Serialization.IBsonSerializer<TValue>
  nameWithType.vb: IBsonSerializer(Of TValue)
  fullName.vb: MongoDB.Bson.Serialization.IBsonSerializer(Of TValue)
  name.vb: IBsonSerializer(Of TValue)
  spec.csharp:
  - uid: MongoDB.Bson.Serialization.IBsonSerializer`1
    name: IBsonSerializer
    nameWithType: IBsonSerializer
    fullName: MongoDB.Bson.Serialization.IBsonSerializer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: MongoDB.Bson.Serialization.IBsonSerializer`1
    name: IBsonSerializer
    nameWithType: IBsonSerializer
    fullName: MongoDB.Bson.Serialization.IBsonSerializer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Bson.Serialization
  commentId: N:MongoDB.Bson.Serialization
  isExternal: false
  name: MongoDB.Bson.Serialization
  nameWithType: MongoDB.Bson.Serialization
  fullName: MongoDB.Bson.Serialization
- uid: Cqrs.MongoDB.Serialisers.TypeSerialiser.Deserialize*
  commentId: Overload:Cqrs.MongoDB.Serialisers.TypeSerialiser.Deserialize
  isExternal: false
  name: Deserialize
  nameWithType: TypeSerialiser.Deserialize
  fullName: Cqrs.MongoDB.Serialisers.TypeSerialiser.Deserialize
- uid: MongoDB.Bson.Serialization.IBsonSerializer.Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)
  commentId: M:MongoDB.Bson.Serialization.IBsonSerializer.Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)
  parent: MongoDB.Bson.Serialization.IBsonSerializer
  isExternal: true
  name: Deserialize(BsonDeserializationContext, BsonDeserializationArgs)
  nameWithType: IBsonSerializer.Deserialize(BsonDeserializationContext, BsonDeserializationArgs)
  fullName: MongoDB.Bson.Serialization.IBsonSerializer.Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext, MongoDB.Bson.Serialization.BsonDeserializationArgs)
  spec.csharp:
  - uid: MongoDB.Bson.Serialization.IBsonSerializer.Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)
    name: Deserialize
    nameWithType: IBsonSerializer.Deserialize
    fullName: MongoDB.Bson.Serialization.IBsonSerializer.Deserialize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: MongoDB.Bson.Serialization.BsonDeserializationContext
    name: BsonDeserializationContext
    nameWithType: BsonDeserializationContext
    fullName: MongoDB.Bson.Serialization.BsonDeserializationContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MongoDB.Bson.Serialization.BsonDeserializationArgs
    name: BsonDeserializationArgs
    nameWithType: BsonDeserializationArgs
    fullName: MongoDB.Bson.Serialization.BsonDeserializationArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Bson.Serialization.IBsonSerializer.Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)
    name: Deserialize
    nameWithType: IBsonSerializer.Deserialize
    fullName: MongoDB.Bson.Serialization.IBsonSerializer.Deserialize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: MongoDB.Bson.Serialization.BsonDeserializationContext
    name: BsonDeserializationContext
    nameWithType: BsonDeserializationContext
    fullName: MongoDB.Bson.Serialization.BsonDeserializationContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MongoDB.Bson.Serialization.BsonDeserializationArgs
    name: BsonDeserializationArgs
    nameWithType: BsonDeserializationArgs
    fullName: MongoDB.Bson.Serialization.BsonDeserializationArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Bson.Serialization.BsonDeserializationContext
  commentId: T:MongoDB.Bson.Serialization.BsonDeserializationContext
  parent: MongoDB.Bson.Serialization
  isExternal: true
  name: BsonDeserializationContext
  nameWithType: BsonDeserializationContext
  fullName: MongoDB.Bson.Serialization.BsonDeserializationContext
- uid: MongoDB.Bson.Serialization.BsonDeserializationArgs
  commentId: T:MongoDB.Bson.Serialization.BsonDeserializationArgs
  parent: MongoDB.Bson.Serialization
  isExternal: true
  name: BsonDeserializationArgs
  nameWithType: BsonDeserializationArgs
  fullName: MongoDB.Bson.Serialization.BsonDeserializationArgs
- uid: Cqrs.MongoDB.Serialisers.TypeSerialiser.Serialize*
  commentId: Overload:Cqrs.MongoDB.Serialisers.TypeSerialiser.Serialize
  isExternal: false
  name: Serialize
  nameWithType: TypeSerialiser.Serialize
  fullName: Cqrs.MongoDB.Serialisers.TypeSerialiser.Serialize
- uid: MongoDB.Bson.Serialization.IBsonSerializer{System.Type}.Serialize(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,System.Type)
  commentId: M:MongoDB.Bson.Serialization.IBsonSerializer{System.Type}.Serialize(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,System.Type)
  parent: MongoDB.Bson.Serialization.IBsonSerializer{System.Type}
  definition: MongoDB.Bson.Serialization.IBsonSerializer`1.Serialize(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,`0)
  name: Serialize(BsonSerializationContext, BsonSerializationArgs, Type)
  nameWithType: IBsonSerializer<Type>.Serialize(BsonSerializationContext, BsonSerializationArgs, Type)
  fullName: MongoDB.Bson.Serialization.IBsonSerializer<System.Type>.Serialize(MongoDB.Bson.Serialization.BsonSerializationContext, MongoDB.Bson.Serialization.BsonSerializationArgs, System.Type)
  nameWithType.vb: IBsonSerializer(Of Type).Serialize(BsonSerializationContext, BsonSerializationArgs, Type)
  fullName.vb: MongoDB.Bson.Serialization.IBsonSerializer(Of System.Type).Serialize(MongoDB.Bson.Serialization.BsonSerializationContext, MongoDB.Bson.Serialization.BsonSerializationArgs, System.Type)
  spec.csharp:
  - uid: MongoDB.Bson.Serialization.IBsonSerializer`1.Serialize(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,`0)
    name: Serialize
    nameWithType: IBsonSerializer<Type>.Serialize
    fullName: MongoDB.Bson.Serialization.IBsonSerializer<System.Type>.Serialize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: MongoDB.Bson.Serialization.BsonSerializationContext
    name: BsonSerializationContext
    nameWithType: BsonSerializationContext
    fullName: MongoDB.Bson.Serialization.BsonSerializationContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MongoDB.Bson.Serialization.BsonSerializationArgs
    name: BsonSerializationArgs
    nameWithType: BsonSerializationArgs
    fullName: MongoDB.Bson.Serialization.BsonSerializationArgs
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Bson.Serialization.IBsonSerializer`1.Serialize(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,`0)
    name: Serialize
    nameWithType: IBsonSerializer(Of Type).Serialize
    fullName: MongoDB.Bson.Serialization.IBsonSerializer(Of System.Type).Serialize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: MongoDB.Bson.Serialization.BsonSerializationContext
    name: BsonSerializationContext
    nameWithType: BsonSerializationContext
    fullName: MongoDB.Bson.Serialization.BsonSerializationContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MongoDB.Bson.Serialization.BsonSerializationArgs
    name: BsonSerializationArgs
    nameWithType: BsonSerializationArgs
    fullName: MongoDB.Bson.Serialization.BsonSerializationArgs
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Bson.Serialization.BsonSerializationContext
  commentId: T:MongoDB.Bson.Serialization.BsonSerializationContext
  parent: MongoDB.Bson.Serialization
  isExternal: true
  name: BsonSerializationContext
  nameWithType: BsonSerializationContext
  fullName: MongoDB.Bson.Serialization.BsonSerializationContext
- uid: MongoDB.Bson.Serialization.BsonSerializationArgs
  commentId: T:MongoDB.Bson.Serialization.BsonSerializationArgs
  parent: MongoDB.Bson.Serialization
  isExternal: true
  name: BsonSerializationArgs
  nameWithType: BsonSerializationArgs
  fullName: MongoDB.Bson.Serialization.BsonSerializationArgs
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: MongoDB.Bson.Serialization.IBsonSerializer`1.Serialize(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,`0)
  commentId: M:MongoDB.Bson.Serialization.IBsonSerializer`1.Serialize(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,`0)
  isExternal: true
  name: Serialize(BsonSerializationContext, BsonSerializationArgs, TValue)
  nameWithType: IBsonSerializer<TValue>.Serialize(BsonSerializationContext, BsonSerializationArgs, TValue)
  fullName: MongoDB.Bson.Serialization.IBsonSerializer<TValue>.Serialize(MongoDB.Bson.Serialization.BsonSerializationContext, MongoDB.Bson.Serialization.BsonSerializationArgs, TValue)
  nameWithType.vb: IBsonSerializer(Of TValue).Serialize(BsonSerializationContext, BsonSerializationArgs, TValue)
  fullName.vb: MongoDB.Bson.Serialization.IBsonSerializer(Of TValue).Serialize(MongoDB.Bson.Serialization.BsonSerializationContext, MongoDB.Bson.Serialization.BsonSerializationArgs, TValue)
  spec.csharp:
  - uid: MongoDB.Bson.Serialization.IBsonSerializer`1.Serialize(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,`0)
    name: Serialize
    nameWithType: IBsonSerializer<TValue>.Serialize
    fullName: MongoDB.Bson.Serialization.IBsonSerializer<TValue>.Serialize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: MongoDB.Bson.Serialization.BsonSerializationContext
    name: BsonSerializationContext
    nameWithType: BsonSerializationContext
    fullName: MongoDB.Bson.Serialization.BsonSerializationContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MongoDB.Bson.Serialization.BsonSerializationArgs
    name: BsonSerializationArgs
    nameWithType: BsonSerializationArgs
    fullName: MongoDB.Bson.Serialization.BsonSerializationArgs
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Bson.Serialization.IBsonSerializer`1.Serialize(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,`0)
    name: Serialize
    nameWithType: IBsonSerializer(Of TValue).Serialize
    fullName: MongoDB.Bson.Serialization.IBsonSerializer(Of TValue).Serialize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: MongoDB.Bson.Serialization.BsonSerializationContext
    name: BsonSerializationContext
    nameWithType: BsonSerializationContext
    fullName: MongoDB.Bson.Serialization.BsonSerializationContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MongoDB.Bson.Serialization.BsonSerializationArgs
    name: BsonSerializationArgs
    nameWithType: BsonSerializationArgs
    fullName: MongoDB.Bson.Serialization.BsonSerializationArgs
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.MongoDB.Serialisers.TypeSerialiser.MongoDB#Bson#Serialization#IBsonSerializer{System#Type}#Deserialize*
  commentId: Overload:Cqrs.MongoDB.Serialisers.TypeSerialiser.MongoDB#Bson#Serialization#IBsonSerializer{System#Type}#Deserialize
  isExternal: false
  name: IBsonSerializer<Type>.Deserialize
  nameWithType: TypeSerialiser.IBsonSerializer<Type>.Deserialize
  fullName: Cqrs.MongoDB.Serialisers.TypeSerialiser.MongoDB.Bson.Serialization.IBsonSerializer<System.Type>.Deserialize
  nameWithType.vb: TypeSerialiser.MongoDB.Bson.Serialization.IBsonSerializer<System.Type>.Deserialize
  name.vb: MongoDB.Bson.Serialization.IBsonSerializer<System.Type>.Deserialize
- uid: MongoDB.Bson.Serialization.IBsonSerializer{System.Type}.Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)
  commentId: M:MongoDB.Bson.Serialization.IBsonSerializer{System.Type}.Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)
  parent: MongoDB.Bson.Serialization.IBsonSerializer{System.Type}
  definition: MongoDB.Bson.Serialization.IBsonSerializer`1.Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)
  name: Deserialize(BsonDeserializationContext, BsonDeserializationArgs)
  nameWithType: IBsonSerializer<Type>.Deserialize(BsonDeserializationContext, BsonDeserializationArgs)
  fullName: MongoDB.Bson.Serialization.IBsonSerializer<System.Type>.Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext, MongoDB.Bson.Serialization.BsonDeserializationArgs)
  nameWithType.vb: IBsonSerializer(Of Type).Deserialize(BsonDeserializationContext, BsonDeserializationArgs)
  fullName.vb: MongoDB.Bson.Serialization.IBsonSerializer(Of System.Type).Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext, MongoDB.Bson.Serialization.BsonDeserializationArgs)
  spec.csharp:
  - uid: MongoDB.Bson.Serialization.IBsonSerializer`1.Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)
    name: Deserialize
    nameWithType: IBsonSerializer<Type>.Deserialize
    fullName: MongoDB.Bson.Serialization.IBsonSerializer<System.Type>.Deserialize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: MongoDB.Bson.Serialization.BsonDeserializationContext
    name: BsonDeserializationContext
    nameWithType: BsonDeserializationContext
    fullName: MongoDB.Bson.Serialization.BsonDeserializationContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MongoDB.Bson.Serialization.BsonDeserializationArgs
    name: BsonDeserializationArgs
    nameWithType: BsonDeserializationArgs
    fullName: MongoDB.Bson.Serialization.BsonDeserializationArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Bson.Serialization.IBsonSerializer`1.Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)
    name: Deserialize
    nameWithType: IBsonSerializer(Of Type).Deserialize
    fullName: MongoDB.Bson.Serialization.IBsonSerializer(Of System.Type).Deserialize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: MongoDB.Bson.Serialization.BsonDeserializationContext
    name: BsonDeserializationContext
    nameWithType: BsonDeserializationContext
    fullName: MongoDB.Bson.Serialization.BsonDeserializationContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MongoDB.Bson.Serialization.BsonDeserializationArgs
    name: BsonDeserializationArgs
    nameWithType: BsonDeserializationArgs
    fullName: MongoDB.Bson.Serialization.BsonDeserializationArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Bson.Serialization.IBsonSerializer`1.Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)
  commentId: M:MongoDB.Bson.Serialization.IBsonSerializer`1.Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)
  isExternal: true
  name: Deserialize(BsonDeserializationContext, BsonDeserializationArgs)
  nameWithType: IBsonSerializer<TValue>.Deserialize(BsonDeserializationContext, BsonDeserializationArgs)
  fullName: MongoDB.Bson.Serialization.IBsonSerializer<TValue>.Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext, MongoDB.Bson.Serialization.BsonDeserializationArgs)
  nameWithType.vb: IBsonSerializer(Of TValue).Deserialize(BsonDeserializationContext, BsonDeserializationArgs)
  fullName.vb: MongoDB.Bson.Serialization.IBsonSerializer(Of TValue).Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext, MongoDB.Bson.Serialization.BsonDeserializationArgs)
  spec.csharp:
  - uid: MongoDB.Bson.Serialization.IBsonSerializer`1.Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)
    name: Deserialize
    nameWithType: IBsonSerializer<TValue>.Deserialize
    fullName: MongoDB.Bson.Serialization.IBsonSerializer<TValue>.Deserialize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: MongoDB.Bson.Serialization.BsonDeserializationContext
    name: BsonDeserializationContext
    nameWithType: BsonDeserializationContext
    fullName: MongoDB.Bson.Serialization.BsonDeserializationContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MongoDB.Bson.Serialization.BsonDeserializationArgs
    name: BsonDeserializationArgs
    nameWithType: BsonDeserializationArgs
    fullName: MongoDB.Bson.Serialization.BsonDeserializationArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Bson.Serialization.IBsonSerializer`1.Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)
    name: Deserialize
    nameWithType: IBsonSerializer(Of TValue).Deserialize
    fullName: MongoDB.Bson.Serialization.IBsonSerializer(Of TValue).Deserialize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: MongoDB.Bson.Serialization.BsonDeserializationContext
    name: BsonDeserializationContext
    nameWithType: BsonDeserializationContext
    fullName: MongoDB.Bson.Serialization.BsonDeserializationContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MongoDB.Bson.Serialization.BsonDeserializationArgs
    name: BsonDeserializationArgs
    nameWithType: BsonDeserializationArgs
    fullName: MongoDB.Bson.Serialization.BsonDeserializationArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Bson.Serialization.IBsonSerializer.Serialize(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,System.Object)
  commentId: M:MongoDB.Bson.Serialization.IBsonSerializer.Serialize(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,System.Object)
  parent: MongoDB.Bson.Serialization.IBsonSerializer
  isExternal: true
  name: Serialize(BsonSerializationContext, BsonSerializationArgs, Object)
  nameWithType: IBsonSerializer.Serialize(BsonSerializationContext, BsonSerializationArgs, Object)
  fullName: MongoDB.Bson.Serialization.IBsonSerializer.Serialize(MongoDB.Bson.Serialization.BsonSerializationContext, MongoDB.Bson.Serialization.BsonSerializationArgs, System.Object)
  spec.csharp:
  - uid: MongoDB.Bson.Serialization.IBsonSerializer.Serialize(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,System.Object)
    name: Serialize
    nameWithType: IBsonSerializer.Serialize
    fullName: MongoDB.Bson.Serialization.IBsonSerializer.Serialize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: MongoDB.Bson.Serialization.BsonSerializationContext
    name: BsonSerializationContext
    nameWithType: BsonSerializationContext
    fullName: MongoDB.Bson.Serialization.BsonSerializationContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MongoDB.Bson.Serialization.BsonSerializationArgs
    name: BsonSerializationArgs
    nameWithType: BsonSerializationArgs
    fullName: MongoDB.Bson.Serialization.BsonSerializationArgs
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Bson.Serialization.IBsonSerializer.Serialize(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,System.Object)
    name: Serialize
    nameWithType: IBsonSerializer.Serialize
    fullName: MongoDB.Bson.Serialization.IBsonSerializer.Serialize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: MongoDB.Bson.Serialization.BsonSerializationContext
    name: BsonSerializationContext
    nameWithType: BsonSerializationContext
    fullName: MongoDB.Bson.Serialization.BsonSerializationContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MongoDB.Bson.Serialization.BsonSerializationArgs
    name: BsonSerializationArgs
    nameWithType: BsonSerializationArgs
    fullName: MongoDB.Bson.Serialization.BsonSerializationArgs
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.MongoDB.Serialisers.TypeSerialiser.ValueType*
  commentId: Overload:Cqrs.MongoDB.Serialisers.TypeSerialiser.ValueType
  isExternal: false
  name: ValueType
  nameWithType: TypeSerialiser.ValueType
  fullName: Cqrs.MongoDB.Serialisers.TypeSerialiser.ValueType
- uid: MongoDB.Bson.Serialization.IBsonSerializer.ValueType
  commentId: P:MongoDB.Bson.Serialization.IBsonSerializer.ValueType
  parent: MongoDB.Bson.Serialization.IBsonSerializer
  isExternal: true
  name: ValueType
  nameWithType: IBsonSerializer.ValueType
  fullName: MongoDB.Bson.Serialization.IBsonSerializer.ValueType
