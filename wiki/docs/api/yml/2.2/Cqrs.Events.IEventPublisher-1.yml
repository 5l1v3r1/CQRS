### YamlMime:ManagedReference
items:
- uid: Cqrs.Events.IEventPublisher`1
  commentId: T:Cqrs.Events.IEventPublisher`1
  id: IEventPublisher`1
  parent: Cqrs.Events
  children:
  - Cqrs.Events.IEventPublisher`1.Publish``1(``0)
  - Cqrs.Events.IEventPublisher`1.Publish``1(System.Collections.Generic.IEnumerable{``0})
  langs:
  - csharp
  - vb
  name: IEventPublisher<TAuthenticationToken>
  nameWithType: IEventPublisher<TAuthenticationToken>
  fullName: Cqrs.Events.IEventPublisher<TAuthenticationToken>
  type: Interface
  source:
    remote:
      path: Framework/Cqrs/Events/IEventPublisher.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: IEventPublisher
    path: Framework/Cqrs/Events/IEventPublisher.cs
    startLine: 15
  assemblies:
  - Cqrs
  namespace: Cqrs.Events
  summary: "\nPublishes an <xref href=\"Cqrs.Events.IEvent%601\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public interface IEventPublisher<TAuthenticationToken>
    typeParameters:
    - id: TAuthenticationToken
    content.vb: Public Interface IEventPublisher(Of TAuthenticationToken)
  nameWithType.vb: IEventPublisher(Of TAuthenticationToken)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: Cqrs.Events.IEventPublisher(Of TAuthenticationToken)
  name.vb: IEventPublisher(Of TAuthenticationToken)
- uid: Cqrs.Events.IEventPublisher`1.Publish``1(``0)
  commentId: M:Cqrs.Events.IEventPublisher`1.Publish``1(``0)
  id: Publish``1(``0)
  parent: Cqrs.Events.IEventPublisher`1
  langs:
  - csharp
  - vb
  name: Publish<TEvent>(TEvent)
  nameWithType: IEventPublisher<TAuthenticationToken>.Publish<TEvent>(TEvent)
  fullName: Cqrs.Events.IEventPublisher<TAuthenticationToken>.Publish<TEvent>(TEvent)
  type: Method
  source:
    remote:
      path: Framework/Cqrs/Events/IEventPublisher.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Publish
    path: Framework/Cqrs/Events/IEventPublisher.cs
    startLine: 20
  assemblies:
  - Cqrs
  namespace: Cqrs.Events
  summary: "\nPublishes the provided <code data-dev-comment-type=\"paramref\">event</code> on the event bus.\n"
  example: []
  syntax:
    content: 'void Publish<TEvent>(TEvent event)where TEvent : IEvent<TAuthenticationToken>'
    parameters:
    - id: event
      type: '{TEvent}'
    typeParameters:
    - id: TEvent
    content.vb: Sub Publish(Of TEvent As IEvent(Of TAuthenticationToken))(event As TEvent)
  overload: Cqrs.Events.IEventPublisher`1.Publish*
  nameWithType.vb: IEventPublisher(Of TAuthenticationToken).Publish(Of TEvent)(TEvent)
  fullName.vb: Cqrs.Events.IEventPublisher(Of TAuthenticationToken).Publish(Of TEvent)(TEvent)
  name.vb: Publish(Of TEvent)(TEvent)
- uid: Cqrs.Events.IEventPublisher`1.Publish``1(System.Collections.Generic.IEnumerable{``0})
  commentId: M:Cqrs.Events.IEventPublisher`1.Publish``1(System.Collections.Generic.IEnumerable{``0})
  id: Publish``1(System.Collections.Generic.IEnumerable{``0})
  parent: Cqrs.Events.IEventPublisher`1
  langs:
  - csharp
  - vb
  name: Publish<TEvent>(IEnumerable<TEvent>)
  nameWithType: IEventPublisher<TAuthenticationToken>.Publish<TEvent>(IEnumerable<TEvent>)
  fullName: Cqrs.Events.IEventPublisher<TAuthenticationToken>.Publish<TEvent>(System.Collections.Generic.IEnumerable<TEvent>)
  type: Method
  source:
    remote:
      path: Framework/Cqrs/Events/IEventPublisher.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Publish
    path: Framework/Cqrs/Events/IEventPublisher.cs
    startLine: 26
  assemblies:
  - Cqrs
  namespace: Cqrs.Events
  summary: "\nPublishes the provided <code data-dev-comment-type=\"paramref\">events</code> on the event bus.\n"
  example: []
  syntax:
    content: 'void Publish<TEvent>(IEnumerable<TEvent> events)where TEvent : IEvent<TAuthenticationToken>'
    parameters:
    - id: events
      type: System.Collections.Generic.IEnumerable{{TEvent}}
    typeParameters:
    - id: TEvent
    content.vb: Sub Publish(Of TEvent As IEvent(Of TAuthenticationToken))(events As IEnumerable(Of TEvent))
  overload: Cqrs.Events.IEventPublisher`1.Publish*
  nameWithType.vb: IEventPublisher(Of TAuthenticationToken).Publish(Of TEvent)(IEnumerable(Of TEvent))
  fullName.vb: Cqrs.Events.IEventPublisher(Of TAuthenticationToken).Publish(Of TEvent)(System.Collections.Generic.IEnumerable(Of TEvent))
  name.vb: Publish(Of TEvent)(IEnumerable(Of TEvent))
references:
- uid: Cqrs.Events.IEvent`1
  commentId: T:Cqrs.Events.IEvent`1
  isExternal: false
  name: IEvent<TAuthenticationToken>
  nameWithType: IEvent<TAuthenticationToken>
  fullName: Cqrs.Events.IEvent<TAuthenticationToken>
  nameWithType.vb: IEvent(Of TAuthenticationToken)
  fullName.vb: Cqrs.Events.IEvent(Of TAuthenticationToken)
  name.vb: IEvent(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Events
  commentId: N:Cqrs.Events
  isExternal: false
  name: Cqrs.Events
  nameWithType: Cqrs.Events
  fullName: Cqrs.Events
- uid: Cqrs.Events.IEventPublisher`1.Publish*
  commentId: Overload:Cqrs.Events.IEventPublisher`1.Publish
  isExternal: false
  name: Publish
  nameWithType: IEventPublisher<TAuthenticationToken>.Publish
  fullName: Cqrs.Events.IEventPublisher<TAuthenticationToken>.Publish
  nameWithType.vb: IEventPublisher(Of TAuthenticationToken).Publish
  fullName.vb: Cqrs.Events.IEventPublisher(Of TAuthenticationToken).Publish
- uid: '{TEvent}'
  commentId: '!:TEvent'
  definition: TEvent
  name: TEvent
  nameWithType: TEvent
  fullName: TEvent
- uid: TEvent
  isExternal: false
  name: TEvent
  nameWithType: TEvent
  fullName: TEvent
- uid: System.Collections.Generic.IEnumerable{{TEvent}}
  commentId: T:System.Collections.Generic.IEnumerable{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<TEvent>
  nameWithType: IEnumerable<TEvent>
  fullName: System.Collections.Generic.IEnumerable<TEvent>
  nameWithType.vb: IEnumerable(Of TEvent)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TEvent)
  name.vb: IEnumerable(Of TEvent)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEvent
    nameWithType: TEvent
    fullName: TEvent
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEvent
    nameWithType: TEvent
    fullName: TEvent
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
