<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classCqrs_1_1EventStore_1_1Bus_1_1EventStoreEventPublisher" kind="class" language="C#" prot="public">
    <compoundname>Cqrs::EventStore::Bus::EventStoreEventPublisher</compoundname>
    <basecompoundref refid="interfaceCqrs_1_1Events_1_1IEventPublisher" prot="public" virt="non-virtual">Cqrs::Events::IEventPublisher&lt; TAuthenticationToken &gt;</basecompoundref>
    <templateparamlist>
      <param>
        <type>TAuthenticationToken</type>
      </param>
    </templateparamlist>
      <sectiondef kind="property">
      <memberdef kind="property" id="classCqrs_1_1EventStore_1_1Bus_1_1EventStoreEventPublisher_a89bf01d1921bc517ea8b385c0ee724ee_1a89bf01d1921bc517ea8b385c0ee724ee" prot="protected" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="yes" protectedsettable="no">
        <type>Dictionary&lt; Type, List&lt; Action&lt; <ref refid="interfaceCqrs_1_1Messages_1_1IMessage" kindref="compound">IMessage</ref> &gt; &gt; &gt;</type>
        <definition>Dictionary&lt;Type, List&lt;Action&lt;IMessage&gt; &gt; &gt; Cqrs.EventStore.Bus.EventStoreEventPublisher&lt; TAuthenticationToken &gt;.Routes</definition>
        <argsstring></argsstring>
        <name>Routes</name>
        <briefdescription>
<para>The actions to execute per Type </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs.EventStore/Bus/EventStoreEventPublisher.cs" line="27" column="1" bodyfile="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs.EventStore/Bus/EventStoreEventPublisher.cs" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="classCqrs_1_1EventStore_1_1Bus_1_1EventStoreEventPublisher_a16df48a7203bc3bcde5f5a12f1d47934_1a16df48a7203bc3bcde5f5a12f1d47934" prot="protected" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="yes" protectedsettable="no">
        <type>IEventStoreConnection</type>
        <definition>IEventStoreConnection Cqrs.EventStore.Bus.EventStoreEventPublisher&lt; TAuthenticationToken &gt;.EventStoreConnection</definition>
        <argsstring></argsstring>
        <name>EventStoreConnection</name>
        <briefdescription>
<para>The IEventStoreConnection used to read and write streams in the Greg Young Event Store. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs.EventStore/Bus/EventStoreEventPublisher.cs" line="32" column="1" bodyfile="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs.EventStore/Bus/EventStoreEventPublisher.cs" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="classCqrs_1_1EventStore_1_1Bus_1_1EventStoreEventPublisher_a552a16f86c52837bf81200778e3a9fe4_1a552a16f86c52837bf81200778e3a9fe4" prot="protected" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="yes" protectedsettable="no">
        <type><ref refid="interfaceCqrs_1_1Bus_1_1IStoreLastEventProcessed" kindref="compound">IStoreLastEventProcessed</ref></type>
        <definition>IStoreLastEventProcessed Cqrs.EventStore.Bus.EventStoreEventPublisher&lt; TAuthenticationToken &gt;.LastEventProcessedStore</definition>
        <argsstring></argsstring>
        <name>LastEventProcessedStore</name>
        <briefdescription>
<para>The store that hold stream position information. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs.EventStore/Bus/EventStoreEventPublisher.cs" line="37" column="1" bodyfile="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs.EventStore/Bus/EventStoreEventPublisher.cs" bodystart="37" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classCqrs_1_1EventStore_1_1Bus_1_1EventStoreEventPublisher_a4ca16479fe387fae0135865ae3f889d7_1a4ca16479fe387fae0135865ae3f889d7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Cqrs.EventStore.Bus.EventStoreEventPublisher&lt; TAuthenticationToken &gt;.EventStoreEventPublisher</definition>
        <argsstring>(IEventStoreConnectionHelper eventStoreConnectionHelper, IStoreLastEventProcessed lastEventProcessedStore)</argsstring>
        <name>EventStoreEventPublisher</name>
        <param>
          <type><ref refid="interfaceCqrs_1_1EventStore_1_1IEventStoreConnectionHelper" kindref="compound">IEventStoreConnectionHelper</ref></type>
          <declname>eventStoreConnectionHelper</declname>
        </param>
        <param>
          <type><ref refid="interfaceCqrs_1_1Bus_1_1IStoreLastEventProcessed" kindref="compound">IStoreLastEventProcessed</ref></type>
          <declname>lastEventProcessedStore</declname>
        </param>
        <briefdescription>
<para>Instantiates a new instance of <ref refid="classCqrs_1_1EventStore_1_1Bus_1_1EventStoreEventPublisher_a4ca16479fe387fae0135865ae3f889d7_1a4ca16479fe387fae0135865ae3f889d7" kindref="member">EventStoreEventPublisher&lt;TAuthenticationToken&gt;</ref> </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eventStoreConnectionHelper</parametername>
</parameternamelist>
<parameterdescription>
<para>The IEventStoreConnection used to read and write streams in the Greg Young Event Store.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lastEventProcessedStore</parametername>
</parameternamelist>
<parameterdescription>
<para>The store that hold stream position information.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs.EventStore/Bus/EventStoreEventPublisher.cs" line="44" column="1" bodyfile="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs.EventStore/Bus/EventStoreEventPublisher.cs" bodystart="44" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1EventStore_1_1Bus_1_1EventStoreEventPublisher_a1ebb6f08648bdfd5c5bd29fcc12adfea_1a1ebb6f08648bdfd5c5bd29fcc12adfea" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Cqrs.EventStore.Bus.EventStoreEventPublisher&lt; TAuthenticationToken &gt;.Publish&lt; TEvent &gt;</definition>
        <argsstring>(TEvent @event)</argsstring>
        <name>Publish&lt; TEvent &gt;</name>
        <reimplements refid="interfaceCqrs_1_1Events_1_1IEventPublisher_a02f0db0bc9b3aa1c7f766f58f8422ee3_1a02f0db0bc9b3aa1c7f766f58f8422ee3">Publish&lt; TEvent &gt;</reimplements>
        <param>
          <type>TEvent @</type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Publishes the provided <emphasis>event</emphasis>  on the event bus. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs.EventStore/Bus/EventStoreEventPublisher.cs" line="56" column="1" bodyfile="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs.EventStore/Bus/EventStoreEventPublisher.cs" bodystart="56" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1EventStore_1_1Bus_1_1EventStoreEventPublisher_a85b4922ff01b088b01b39463681c6eb6_1a85b4922ff01b088b01b39463681c6eb6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Cqrs.EventStore.Bus.EventStoreEventPublisher&lt; TAuthenticationToken &gt;.Publish&lt; TEvent &gt;</definition>
        <argsstring>(IEnumerable&lt; TEvent &gt; events)</argsstring>
        <name>Publish&lt; TEvent &gt;</name>
        <reimplements refid="interfaceCqrs_1_1Events_1_1IEventPublisher_a2cbcc3d2c24d015abef6337714ec51ff_1a2cbcc3d2c24d015abef6337714ec51ff">Publish&lt; TEvent &gt;</reimplements>
        <param>
          <type>IEnumerable&lt; TEvent &gt;</type>
          <declname>events</declname>
        </param>
        <briefdescription>
<para>Publishes the provided <emphasis>events</emphasis>  on the event bus. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs.EventStore/Bus/EventStoreEventPublisher.cs" line="69" column="1" bodyfile="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs.EventStore/Bus/EventStoreEventPublisher.cs" bodystart="69" bodyend="74"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classCqrs_1_1EventStore_1_1Bus_1_1EventStoreEventPublisher_a145dd61678031747b4c1768e68937181_1a145dd61678031747b4c1768e68937181" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Cqrs.EventStore.Bus.EventStoreEventPublisher&lt; TAuthenticationToken &gt;.InitialiseCatchUpSubscription</definition>
        <argsstring>()</argsstring>
        <name>InitialiseCatchUpSubscription</name>
        <briefdescription>
<para>Reads the position the store was last within the stream and subscribes requesting all events prior to that position aren&apos;t replayed. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs.EventStore/Bus/EventStoreEventPublisher.cs" line="81" column="1" bodyfile="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs.EventStore/Bus/EventStoreEventPublisher.cs" bodystart="81" bodyend="86"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classCqrs_1_1EventStore_1_1Bus_1_1EventStoreEventPublisher_1a7b53ae40e5b23585d4250e419db99eb6" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Position</type>
        <definition>Position Cqrs.EventStore.Bus.EventStoreEventPublisher&lt; TAuthenticationToken &gt;.GetLastEventProcessedLocation</definition>
        <argsstring>()</argsstring>
        <name>GetLastEventProcessedLocation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs.EventStore/Bus/EventStoreEventPublisher.cs" line="88" column="1" bodyfile="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs.EventStore/Bus/EventStoreEventPublisher.cs" bodystart="88" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1EventStore_1_1Bus_1_1EventStoreEventPublisher_1a5cebf114a7cb93be8592d72a29d5b0c8" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Cqrs.EventStore.Bus.EventStoreEventPublisher&lt; TAuthenticationToken &gt;.OnEventAppeared</definition>
        <argsstring>(EventStoreCatchUpSubscription catchUpSubscription, ResolvedEvent resolvedEvent)</argsstring>
        <name>OnEventAppeared</name>
        <param>
          <type>EventStoreCatchUpSubscription</type>
          <declname>catchUpSubscription</declname>
        </param>
        <param>
          <type>ResolvedEvent</type>
          <declname>resolvedEvent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs.EventStore/Bus/EventStoreEventPublisher.cs" line="93" column="1" bodyfile="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs.EventStore/Bus/EventStoreEventPublisher.cs" bodystart="93" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1EventStore_1_1Bus_1_1EventStoreEventPublisher_1a4bf9ac208448c6f01c8786de8caae3f7" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Cqrs.EventStore.Bus.EventStoreEventPublisher&lt; TAuthenticationToken &gt;.SaveLastEventProcessedLocation</definition>
        <argsstring>(Position position)</argsstring>
        <name>SaveLastEventProcessedLocation</name>
        <param>
          <type>Position</type>
          <declname>position</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs.EventStore/Bus/EventStoreEventPublisher.cs" line="108" column="1" bodyfile="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs.EventStore/Bus/EventStoreEventPublisher.cs" bodystart="108" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1EventStore_1_1Bus_1_1EventStoreEventPublisher_1af80061da909355eb126039f6b282f45d" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Cqrs.EventStore.Bus.EventStoreEventPublisher&lt; TAuthenticationToken &gt;.OnLiveProcessingStarted</definition>
        <argsstring>(EventStoreCatchUpSubscription catchUpSubscription)</argsstring>
        <name>OnLiveProcessingStarted</name>
        <param>
          <type>EventStoreCatchUpSubscription</type>
          <declname>catchUpSubscription</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs.EventStore/Bus/EventStoreEventPublisher.cs" line="113" column="1" bodyfile="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs.EventStore/Bus/EventStoreEventPublisher.cs" bodystart="113" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1EventStore_1_1Bus_1_1EventStoreEventPublisher_1a5df010c5951293f5d241949e96192189" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Cqrs.EventStore.Bus.EventStoreEventPublisher&lt; TAuthenticationToken &gt;.OnSubscriptionDropped</definition>
        <argsstring>(EventStoreCatchUpSubscription catchUpSubscription, SubscriptionDropReason dropReason, Exception exception)</argsstring>
        <name>OnSubscriptionDropped</name>
        <param>
          <type>EventStoreCatchUpSubscription</type>
          <declname>catchUpSubscription</declname>
        </param>
        <param>
          <type>SubscriptionDropReason</type>
          <declname>dropReason</declname>
        </param>
        <param>
          <type>Exception</type>
          <declname>exception</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs.EventStore/Bus/EventStoreEventPublisher.cs" line="118" column="1" bodyfile="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs.EventStore/Bus/EventStoreEventPublisher.cs" bodystart="118" bodyend="141"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classCqrs_1_1EventStore_1_1Bus_1_1EventStoreEventPublisher_1a7e2e52acf4e094c5823b6c92852959f0" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Cqrs.EventStore.Bus.EventStoreEventPublisher&lt; TAuthenticationToken &gt;.SubscriptionDropMayBeRecoverable</definition>
        <argsstring>(SubscriptionDropReason dropReason)</argsstring>
        <name>SubscriptionDropMayBeRecoverable</name>
        <param>
          <type>SubscriptionDropReason</type>
          <declname>dropReason</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs.EventStore/Bus/EventStoreEventPublisher.cs" line="143" column="1" bodyfile="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs.EventStore/Bus/EventStoreEventPublisher.cs" bodystart="143" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1EventStore_1_1Bus_1_1EventStoreEventPublisher_1aac763bb6d697d9e44c504920431aa452" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>string</type>
        <definition>static string Cqrs.EventStore.Bus.EventStoreEventPublisher&lt; TAuthenticationToken &gt;.SubscriptionDropReasonText</definition>
        <argsstring>(SubscriptionDropReason reason)</argsstring>
        <name>SubscriptionDropReasonText</name>
        <param>
          <type>SubscriptionDropReason</type>
          <declname>reason</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs.EventStore/Bus/EventStoreEventPublisher.cs" line="150" column="1" bodyfile="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs.EventStore/Bus/EventStoreEventPublisher.cs" bodystart="150" bodyend="189"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A IEventPublisher&lt;TAuthenticationToken&gt; that uses Greg Young&apos;s Event Store. </para>    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>TAuthenticationToken</parametername>
</parameternamelist>
<parameterdescription>
<para>The Type of the authentication token.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="1608">
        <label>Cqrs.EventStore.Bus.EventStoreEventPublisher&lt; TAuthenticationToken &gt;</label>
        <link refid="classCqrs_1_1EventStore_1_1Bus_1_1EventStoreEventPublisher"/>
        <childnode refid="1609" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1609">
        <label>IEventPublisher&lt; TAuthenticationToken &gt;</label>
        <link refid="interfaceCqrs_1_1Events_1_1IEventPublisher"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1610">
        <label>Cqrs.EventStore.Bus.EventStoreEventPublisher&lt; TAuthenticationToken &gt;</label>
        <link refid="classCqrs_1_1EventStore_1_1Bus_1_1EventStoreEventPublisher"/>
        <childnode refid="1611" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1611">
        <label>IEventPublisher&lt; TAuthenticationToken &gt;</label>
        <link refid="interfaceCqrs_1_1Events_1_1IEventPublisher"/>
      </node>
    </collaborationgraph>
    <location file="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs.EventStore/Bus/EventStoreEventPublisher.cs" line="23" column="1" bodyfile="/mnt/c/code/git/CQRS.XsamX/Framework/Cqrs.EventStore/Bus/EventStoreEventPublisher.cs" bodystart="22" bodyend="190"/>
    <listofallmembers>
      <member refid="classCqrs_1_1EventStore_1_1Bus_1_1EventStoreEventPublisher_a16df48a7203bc3bcde5f5a12f1d47934_1a16df48a7203bc3bcde5f5a12f1d47934" prot="protected" virt="non-virtual"><scope>Cqrs::EventStore::Bus::EventStoreEventPublisher</scope><name>EventStoreConnection</name></member>
      <member refid="classCqrs_1_1EventStore_1_1Bus_1_1EventStoreEventPublisher_a4ca16479fe387fae0135865ae3f889d7_1a4ca16479fe387fae0135865ae3f889d7" prot="public" virt="non-virtual"><scope>Cqrs::EventStore::Bus::EventStoreEventPublisher</scope><name>EventStoreEventPublisher</name></member>
      <member refid="classCqrs_1_1EventStore_1_1Bus_1_1EventStoreEventPublisher_1a7b53ae40e5b23585d4250e419db99eb6" prot="private" virt="non-virtual"><scope>Cqrs::EventStore::Bus::EventStoreEventPublisher</scope><name>GetLastEventProcessedLocation</name></member>
      <member refid="classCqrs_1_1EventStore_1_1Bus_1_1EventStoreEventPublisher_a145dd61678031747b4c1768e68937181_1a145dd61678031747b4c1768e68937181" prot="protected" virt="non-virtual"><scope>Cqrs::EventStore::Bus::EventStoreEventPublisher</scope><name>InitialiseCatchUpSubscription</name></member>
      <member refid="classCqrs_1_1EventStore_1_1Bus_1_1EventStoreEventPublisher_a552a16f86c52837bf81200778e3a9fe4_1a552a16f86c52837bf81200778e3a9fe4" prot="protected" virt="non-virtual"><scope>Cqrs::EventStore::Bus::EventStoreEventPublisher</scope><name>LastEventProcessedStore</name></member>
      <member refid="classCqrs_1_1EventStore_1_1Bus_1_1EventStoreEventPublisher_1a5cebf114a7cb93be8592d72a29d5b0c8" prot="private" virt="non-virtual"><scope>Cqrs::EventStore::Bus::EventStoreEventPublisher</scope><name>OnEventAppeared</name></member>
      <member refid="classCqrs_1_1EventStore_1_1Bus_1_1EventStoreEventPublisher_1af80061da909355eb126039f6b282f45d" prot="private" virt="non-virtual"><scope>Cqrs::EventStore::Bus::EventStoreEventPublisher</scope><name>OnLiveProcessingStarted</name></member>
      <member refid="classCqrs_1_1EventStore_1_1Bus_1_1EventStoreEventPublisher_1a5df010c5951293f5d241949e96192189" prot="private" virt="non-virtual"><scope>Cqrs::EventStore::Bus::EventStoreEventPublisher</scope><name>OnSubscriptionDropped</name></member>
      <member refid="classCqrs_1_1EventStore_1_1Bus_1_1EventStoreEventPublisher_a1ebb6f08648bdfd5c5bd29fcc12adfea_1a1ebb6f08648bdfd5c5bd29fcc12adfea" prot="public" virt="non-virtual"><scope>Cqrs::EventStore::Bus::EventStoreEventPublisher</scope><name>Publish&lt; TEvent &gt;</name></member>
      <member refid="classCqrs_1_1EventStore_1_1Bus_1_1EventStoreEventPublisher_a85b4922ff01b088b01b39463681c6eb6_1a85b4922ff01b088b01b39463681c6eb6" prot="public" virt="non-virtual"><scope>Cqrs::EventStore::Bus::EventStoreEventPublisher</scope><name>Publish&lt; TEvent &gt;</name></member>
      <member refid="classCqrs_1_1EventStore_1_1Bus_1_1EventStoreEventPublisher_a89bf01d1921bc517ea8b385c0ee724ee_1a89bf01d1921bc517ea8b385c0ee724ee" prot="protected" virt="non-virtual"><scope>Cqrs::EventStore::Bus::EventStoreEventPublisher</scope><name>Routes</name></member>
      <member refid="classCqrs_1_1EventStore_1_1Bus_1_1EventStoreEventPublisher_1a4bf9ac208448c6f01c8786de8caae3f7" prot="private" virt="non-virtual"><scope>Cqrs::EventStore::Bus::EventStoreEventPublisher</scope><name>SaveLastEventProcessedLocation</name></member>
      <member refid="classCqrs_1_1EventStore_1_1Bus_1_1EventStoreEventPublisher_1a7e2e52acf4e094c5823b6c92852959f0" prot="private" virt="non-virtual"><scope>Cqrs::EventStore::Bus::EventStoreEventPublisher</scope><name>SubscriptionDropMayBeRecoverable</name></member>
      <member refid="classCqrs_1_1EventStore_1_1Bus_1_1EventStoreEventPublisher_1aac763bb6d697d9e44c504920431aa452" prot="private" virt="non-virtual"><scope>Cqrs::EventStore::Bus::EventStoreEventPublisher</scope><name>SubscriptionDropReasonText</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
