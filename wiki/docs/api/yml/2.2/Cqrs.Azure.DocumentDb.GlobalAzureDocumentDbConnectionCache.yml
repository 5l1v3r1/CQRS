### YamlMime:ManagedReference
items:
- uid: Cqrs.Azure.DocumentDb.GlobalAzureDocumentDbConnectionCache
  commentId: T:Cqrs.Azure.DocumentDb.GlobalAzureDocumentDbConnectionCache
  id: GlobalAzureDocumentDbConnectionCache
  parent: Cqrs.Azure.DocumentDb
  children:
  - Cqrs.Azure.DocumentDb.GlobalAzureDocumentDbConnectionCache.Cache
  - Cqrs.Azure.DocumentDb.GlobalAzureDocumentDbConnectionCache.SetClient(System.String,DocumentClient)
  - Cqrs.Azure.DocumentDb.GlobalAzureDocumentDbConnectionCache.SetDatabase(System.String,Database)
  - Cqrs.Azure.DocumentDb.GlobalAzureDocumentDbConnectionCache.SetDocumentCollection(System.String,DocumentCollection)
  - Cqrs.Azure.DocumentDb.GlobalAzureDocumentDbConnectionCache.TryGetClient(System.String,DocumentClient@)
  - Cqrs.Azure.DocumentDb.GlobalAzureDocumentDbConnectionCache.TryGetDatabase(System.String,Database@)
  - Cqrs.Azure.DocumentDb.GlobalAzureDocumentDbConnectionCache.TryGetDocumentCollection(System.String,DocumentCollection@)
  langs:
  - csharp
  - vb
  name: GlobalAzureDocumentDbConnectionCache
  nameWithType: GlobalAzureDocumentDbConnectionCache
  fullName: Cqrs.Azure.DocumentDb.GlobalAzureDocumentDbConnectionCache
  type: Class
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.DocumentDb/GlobalAzureDocumentDbConnectionCache.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: GlobalAzureDocumentDbConnectionCache
    path: Framework/Azure/Cqrs.Azure.DocumentDb/GlobalAzureDocumentDbConnectionCache.cs
    startLine: 14
  assemblies:
  - Cqrs.Azure.DocumentDb
  namespace: Cqrs.Azure.DocumentDb
  syntax:
    content: 'public class GlobalAzureDocumentDbConnectionCache : object, IAzureDocumentDbConnectionCache'
    content.vb: >-
      Public Class GlobalAzureDocumentDbConnectionCache
          Inherits Object
          Implements IAzureDocumentDbConnectionCache
  inheritance:
  - System.Object
  implements:
  - Cqrs.Azure.DocumentDb.IAzureDocumentDbConnectionCache
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Cqrs.Azure.DocumentDb.GlobalAzureDocumentDbConnectionCache.Cache
  commentId: P:Cqrs.Azure.DocumentDb.GlobalAzureDocumentDbConnectionCache.Cache
  id: Cache
  parent: Cqrs.Azure.DocumentDb.GlobalAzureDocumentDbConnectionCache
  langs:
  - csharp
  - vb
  name: Cache
  nameWithType: GlobalAzureDocumentDbConnectionCache.Cache
  fullName: Cqrs.Azure.DocumentDb.GlobalAzureDocumentDbConnectionCache.Cache
  type: Property
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.DocumentDb/GlobalAzureDocumentDbConnectionCache.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Cache
    path: Framework/Azure/Cqrs.Azure.DocumentDb/GlobalAzureDocumentDbConnectionCache.cs
    startLine: 16
  assemblies:
  - Cqrs.Azure.DocumentDb
  namespace: Cqrs.Azure.DocumentDb
  syntax:
    content: protected static IDictionary<string, object> Cache { get; }
    parameters: []
    return:
      type: IDictionary{System.String,System.Object}
    content.vb: Protected Shared ReadOnly Property Cache As IDictionary(Of String, Object)
  overload: Cqrs.Azure.DocumentDb.GlobalAzureDocumentDbConnectionCache.Cache*
  modifiers.csharp:
  - protected
  - static
  - get
  modifiers.vb:
  - Protected
  - Shared
  - ReadOnly
- uid: Cqrs.Azure.DocumentDb.GlobalAzureDocumentDbConnectionCache.TryGetClient(System.String,DocumentClient@)
  commentId: M:Cqrs.Azure.DocumentDb.GlobalAzureDocumentDbConnectionCache.TryGetClient(System.String,DocumentClient@)
  id: TryGetClient(System.String,DocumentClient@)
  parent: Cqrs.Azure.DocumentDb.GlobalAzureDocumentDbConnectionCache
  langs:
  - csharp
  - vb
  name: TryGetClient(String, out DocumentClient)
  nameWithType: GlobalAzureDocumentDbConnectionCache.TryGetClient(String, out DocumentClient)
  fullName: Cqrs.Azure.DocumentDb.GlobalAzureDocumentDbConnectionCache.TryGetClient(System.String, out DocumentClient)
  type: Method
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.DocumentDb/GlobalAzureDocumentDbConnectionCache.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: TryGetClient
    path: Framework/Azure/Cqrs.Azure.DocumentDb/GlobalAzureDocumentDbConnectionCache.cs
    startLine: 23
  assemblies:
  - Cqrs.Azure.DocumentDb
  namespace: Cqrs.Azure.DocumentDb
  syntax:
    content: public bool TryGetClient(string key, out DocumentClient client)
    parameters:
    - id: key
      type: System.String
    - id: client
      type: DocumentClient
    return:
      type: System.Boolean
    content.vb: Public Function TryGetClient(key As String, ByRef client As DocumentClient) As Boolean
  overload: Cqrs.Azure.DocumentDb.GlobalAzureDocumentDbConnectionCache.TryGetClient*
  implements:
  - Cqrs.Azure.DocumentDb.IAzureDocumentDbConnectionCache.TryGetClient(System.String,DocumentClient@)
  nameWithType.vb: GlobalAzureDocumentDbConnectionCache.TryGetClient(String, ByRef DocumentClient)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Cqrs.Azure.DocumentDb.GlobalAzureDocumentDbConnectionCache.TryGetClient(System.String, ByRef DocumentClient)
  name.vb: TryGetClient(String, ByRef DocumentClient)
- uid: Cqrs.Azure.DocumentDb.GlobalAzureDocumentDbConnectionCache.SetClient(System.String,DocumentClient)
  commentId: M:Cqrs.Azure.DocumentDb.GlobalAzureDocumentDbConnectionCache.SetClient(System.String,DocumentClient)
  id: SetClient(System.String,DocumentClient)
  parent: Cqrs.Azure.DocumentDb.GlobalAzureDocumentDbConnectionCache
  langs:
  - csharp
  - vb
  name: SetClient(String, DocumentClient)
  nameWithType: GlobalAzureDocumentDbConnectionCache.SetClient(String, DocumentClient)
  fullName: Cqrs.Azure.DocumentDb.GlobalAzureDocumentDbConnectionCache.SetClient(System.String, DocumentClient)
  type: Method
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.DocumentDb/GlobalAzureDocumentDbConnectionCache.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: SetClient
    path: Framework/Azure/Cqrs.Azure.DocumentDb/GlobalAzureDocumentDbConnectionCache.cs
    startLine: 39
  assemblies:
  - Cqrs.Azure.DocumentDb
  namespace: Cqrs.Azure.DocumentDb
  syntax:
    content: public void SetClient(string key, DocumentClient client)
    parameters:
    - id: key
      type: System.String
    - id: client
      type: DocumentClient
    content.vb: Public Sub SetClient(key As String, client As DocumentClient)
  overload: Cqrs.Azure.DocumentDb.GlobalAzureDocumentDbConnectionCache.SetClient*
  implements:
  - Cqrs.Azure.DocumentDb.IAzureDocumentDbConnectionCache.SetClient(System.String,DocumentClient)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Cqrs.Azure.DocumentDb.GlobalAzureDocumentDbConnectionCache.TryGetDatabase(System.String,Database@)
  commentId: M:Cqrs.Azure.DocumentDb.GlobalAzureDocumentDbConnectionCache.TryGetDatabase(System.String,Database@)
  id: TryGetDatabase(System.String,Database@)
  parent: Cqrs.Azure.DocumentDb.GlobalAzureDocumentDbConnectionCache
  langs:
  - csharp
  - vb
  name: TryGetDatabase(String, out Database)
  nameWithType: GlobalAzureDocumentDbConnectionCache.TryGetDatabase(String, out Database)
  fullName: Cqrs.Azure.DocumentDb.GlobalAzureDocumentDbConnectionCache.TryGetDatabase(System.String, out Database)
  type: Method
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.DocumentDb/GlobalAzureDocumentDbConnectionCache.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: TryGetDatabase
    path: Framework/Azure/Cqrs.Azure.DocumentDb/GlobalAzureDocumentDbConnectionCache.cs
    startLine: 44
  assemblies:
  - Cqrs.Azure.DocumentDb
  namespace: Cqrs.Azure.DocumentDb
  syntax:
    content: public bool TryGetDatabase(string key, out Database database)
    parameters:
    - id: key
      type: System.String
    - id: database
      type: Database
    return:
      type: System.Boolean
    content.vb: Public Function TryGetDatabase(key As String, ByRef database As Database) As Boolean
  overload: Cqrs.Azure.DocumentDb.GlobalAzureDocumentDbConnectionCache.TryGetDatabase*
  implements:
  - Cqrs.Azure.DocumentDb.IAzureDocumentDbConnectionCache.TryGetDatabase(System.String,Database@)
  nameWithType.vb: GlobalAzureDocumentDbConnectionCache.TryGetDatabase(String, ByRef Database)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Cqrs.Azure.DocumentDb.GlobalAzureDocumentDbConnectionCache.TryGetDatabase(System.String, ByRef Database)
  name.vb: TryGetDatabase(String, ByRef Database)
- uid: Cqrs.Azure.DocumentDb.GlobalAzureDocumentDbConnectionCache.SetDatabase(System.String,Database)
  commentId: M:Cqrs.Azure.DocumentDb.GlobalAzureDocumentDbConnectionCache.SetDatabase(System.String,Database)
  id: SetDatabase(System.String,Database)
  parent: Cqrs.Azure.DocumentDb.GlobalAzureDocumentDbConnectionCache
  langs:
  - csharp
  - vb
  name: SetDatabase(String, Database)
  nameWithType: GlobalAzureDocumentDbConnectionCache.SetDatabase(String, Database)
  fullName: Cqrs.Azure.DocumentDb.GlobalAzureDocumentDbConnectionCache.SetDatabase(System.String, Database)
  type: Method
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.DocumentDb/GlobalAzureDocumentDbConnectionCache.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: SetDatabase
    path: Framework/Azure/Cqrs.Azure.DocumentDb/GlobalAzureDocumentDbConnectionCache.cs
    startLine: 60
  assemblies:
  - Cqrs.Azure.DocumentDb
  namespace: Cqrs.Azure.DocumentDb
  syntax:
    content: public void SetDatabase(string key, Database database)
    parameters:
    - id: key
      type: System.String
    - id: database
      type: Database
    content.vb: Public Sub SetDatabase(key As String, database As Database)
  overload: Cqrs.Azure.DocumentDb.GlobalAzureDocumentDbConnectionCache.SetDatabase*
  implements:
  - Cqrs.Azure.DocumentDb.IAzureDocumentDbConnectionCache.SetDatabase(System.String,Database)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Cqrs.Azure.DocumentDb.GlobalAzureDocumentDbConnectionCache.TryGetDocumentCollection(System.String,DocumentCollection@)
  commentId: M:Cqrs.Azure.DocumentDb.GlobalAzureDocumentDbConnectionCache.TryGetDocumentCollection(System.String,DocumentCollection@)
  id: TryGetDocumentCollection(System.String,DocumentCollection@)
  parent: Cqrs.Azure.DocumentDb.GlobalAzureDocumentDbConnectionCache
  langs:
  - csharp
  - vb
  name: TryGetDocumentCollection(String, out DocumentCollection)
  nameWithType: GlobalAzureDocumentDbConnectionCache.TryGetDocumentCollection(String, out DocumentCollection)
  fullName: Cqrs.Azure.DocumentDb.GlobalAzureDocumentDbConnectionCache.TryGetDocumentCollection(System.String, out DocumentCollection)
  type: Method
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.DocumentDb/GlobalAzureDocumentDbConnectionCache.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: TryGetDocumentCollection
    path: Framework/Azure/Cqrs.Azure.DocumentDb/GlobalAzureDocumentDbConnectionCache.cs
    startLine: 65
  assemblies:
  - Cqrs.Azure.DocumentDb
  namespace: Cqrs.Azure.DocumentDb
  syntax:
    content: public bool TryGetDocumentCollection(string key, out DocumentCollection documentCollection)
    parameters:
    - id: key
      type: System.String
    - id: documentCollection
      type: DocumentCollection
    return:
      type: System.Boolean
    content.vb: Public Function TryGetDocumentCollection(key As String, ByRef documentCollection As DocumentCollection) As Boolean
  overload: Cqrs.Azure.DocumentDb.GlobalAzureDocumentDbConnectionCache.TryGetDocumentCollection*
  implements:
  - Cqrs.Azure.DocumentDb.IAzureDocumentDbConnectionCache.TryGetDocumentCollection(System.String,DocumentCollection@)
  nameWithType.vb: GlobalAzureDocumentDbConnectionCache.TryGetDocumentCollection(String, ByRef DocumentCollection)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Cqrs.Azure.DocumentDb.GlobalAzureDocumentDbConnectionCache.TryGetDocumentCollection(System.String, ByRef DocumentCollection)
  name.vb: TryGetDocumentCollection(String, ByRef DocumentCollection)
- uid: Cqrs.Azure.DocumentDb.GlobalAzureDocumentDbConnectionCache.SetDocumentCollection(System.String,DocumentCollection)
  commentId: M:Cqrs.Azure.DocumentDb.GlobalAzureDocumentDbConnectionCache.SetDocumentCollection(System.String,DocumentCollection)
  id: SetDocumentCollection(System.String,DocumentCollection)
  parent: Cqrs.Azure.DocumentDb.GlobalAzureDocumentDbConnectionCache
  langs:
  - csharp
  - vb
  name: SetDocumentCollection(String, DocumentCollection)
  nameWithType: GlobalAzureDocumentDbConnectionCache.SetDocumentCollection(String, DocumentCollection)
  fullName: Cqrs.Azure.DocumentDb.GlobalAzureDocumentDbConnectionCache.SetDocumentCollection(System.String, DocumentCollection)
  type: Method
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.DocumentDb/GlobalAzureDocumentDbConnectionCache.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: SetDocumentCollection
    path: Framework/Azure/Cqrs.Azure.DocumentDb/GlobalAzureDocumentDbConnectionCache.cs
    startLine: 81
  assemblies:
  - Cqrs.Azure.DocumentDb
  namespace: Cqrs.Azure.DocumentDb
  syntax:
    content: public void SetDocumentCollection(string key, DocumentCollection documentCollection)
    parameters:
    - id: key
      type: System.String
    - id: documentCollection
      type: DocumentCollection
    content.vb: Public Sub SetDocumentCollection(key As String, documentCollection As DocumentCollection)
  overload: Cqrs.Azure.DocumentDb.GlobalAzureDocumentDbConnectionCache.SetDocumentCollection*
  implements:
  - Cqrs.Azure.DocumentDb.IAzureDocumentDbConnectionCache.SetDocumentCollection(System.String,DocumentCollection)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Cqrs.Azure.DocumentDb
  commentId: N:Cqrs.Azure.DocumentDb
  isExternal: false
  name: Cqrs.Azure.DocumentDb
  nameWithType: Cqrs.Azure.DocumentDb
  fullName: Cqrs.Azure.DocumentDb
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Cqrs.Azure.DocumentDb.IAzureDocumentDbConnectionCache
  commentId: T:Cqrs.Azure.DocumentDb.IAzureDocumentDbConnectionCache
  parent: Cqrs.Azure.DocumentDb
  isExternal: false
  name: IAzureDocumentDbConnectionCache
  nameWithType: IAzureDocumentDbConnectionCache
  fullName: Cqrs.Azure.DocumentDb.IAzureDocumentDbConnectionCache
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Cqrs.Azure.DocumentDb.GlobalAzureDocumentDbConnectionCache.Cache*
  commentId: Overload:Cqrs.Azure.DocumentDb.GlobalAzureDocumentDbConnectionCache.Cache
  isExternal: false
  name: Cache
  nameWithType: GlobalAzureDocumentDbConnectionCache.Cache
  fullName: Cqrs.Azure.DocumentDb.GlobalAzureDocumentDbConnectionCache.Cache
- uid: IDictionary{System.String,System.Object}
  commentId: '!:IDictionary{System.String,System.Object}'
  definition: IDictionary`2
  name: IDictionary<String, Object>
  nameWithType: IDictionary<String, Object>
  fullName: IDictionary<System.String, System.Object>
  nameWithType.vb: IDictionary(Of String, Object)
  fullName.vb: IDictionary(Of System.String, System.Object)
  name.vb: IDictionary(Of String, Object)
  spec.csharp:
  - uid: IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: IDictionary`2
  isExternal: true
  name: IDictionary<, >
  nameWithType: IDictionary<, >
  fullName: IDictionary<, >
  nameWithType.vb: IDictionary(Of , )
  fullName.vb: IDictionary(Of , )
  name.vb: IDictionary(Of , )
  spec.csharp:
  - uid: IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.DocumentDb.GlobalAzureDocumentDbConnectionCache.TryGetClient*
  commentId: Overload:Cqrs.Azure.DocumentDb.GlobalAzureDocumentDbConnectionCache.TryGetClient
  isExternal: false
  name: TryGetClient
  nameWithType: GlobalAzureDocumentDbConnectionCache.TryGetClient
  fullName: Cqrs.Azure.DocumentDb.GlobalAzureDocumentDbConnectionCache.TryGetClient
- uid: Cqrs.Azure.DocumentDb.IAzureDocumentDbConnectionCache.TryGetClient(System.String,DocumentClient@)
  commentId: M:Cqrs.Azure.DocumentDb.IAzureDocumentDbConnectionCache.TryGetClient(System.String,DocumentClient@)
  parent: Cqrs.Azure.DocumentDb.IAzureDocumentDbConnectionCache
  isExternal: true
  name: TryGetClient(String, DocumentClient)
  nameWithType: IAzureDocumentDbConnectionCache.TryGetClient(String, DocumentClient)
  fullName: Cqrs.Azure.DocumentDb.IAzureDocumentDbConnectionCache.TryGetClient(System.String, DocumentClient)
  spec.csharp:
  - uid: Cqrs.Azure.DocumentDb.IAzureDocumentDbConnectionCache.TryGetClient(System.String,DocumentClient@)
    name: TryGetClient
    nameWithType: IAzureDocumentDbConnectionCache.TryGetClient
    fullName: Cqrs.Azure.DocumentDb.IAzureDocumentDbConnectionCache.TryGetClient
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DocumentClient
    name: DocumentClient
    nameWithType: DocumentClient
    fullName: DocumentClient
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.DocumentDb.IAzureDocumentDbConnectionCache.TryGetClient(System.String,DocumentClient@)
    name: TryGetClient
    nameWithType: IAzureDocumentDbConnectionCache.TryGetClient
    fullName: Cqrs.Azure.DocumentDb.IAzureDocumentDbConnectionCache.TryGetClient
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DocumentClient
    name: DocumentClient
    nameWithType: DocumentClient
    fullName: DocumentClient
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: DocumentClient
  isExternal: true
  name: DocumentClient
  nameWithType: DocumentClient
  fullName: DocumentClient
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Cqrs.Azure.DocumentDb.GlobalAzureDocumentDbConnectionCache.SetClient*
  commentId: Overload:Cqrs.Azure.DocumentDb.GlobalAzureDocumentDbConnectionCache.SetClient
  isExternal: false
  name: SetClient
  nameWithType: GlobalAzureDocumentDbConnectionCache.SetClient
  fullName: Cqrs.Azure.DocumentDb.GlobalAzureDocumentDbConnectionCache.SetClient
- uid: Cqrs.Azure.DocumentDb.IAzureDocumentDbConnectionCache.SetClient(System.String,DocumentClient)
  commentId: M:Cqrs.Azure.DocumentDb.IAzureDocumentDbConnectionCache.SetClient(System.String,DocumentClient)
  parent: Cqrs.Azure.DocumentDb.IAzureDocumentDbConnectionCache
  isExternal: true
  name: SetClient(String, DocumentClient)
  nameWithType: IAzureDocumentDbConnectionCache.SetClient(String, DocumentClient)
  fullName: Cqrs.Azure.DocumentDb.IAzureDocumentDbConnectionCache.SetClient(System.String, DocumentClient)
  spec.csharp:
  - uid: Cqrs.Azure.DocumentDb.IAzureDocumentDbConnectionCache.SetClient(System.String,DocumentClient)
    name: SetClient
    nameWithType: IAzureDocumentDbConnectionCache.SetClient
    fullName: Cqrs.Azure.DocumentDb.IAzureDocumentDbConnectionCache.SetClient
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DocumentClient
    name: DocumentClient
    nameWithType: DocumentClient
    fullName: DocumentClient
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.DocumentDb.IAzureDocumentDbConnectionCache.SetClient(System.String,DocumentClient)
    name: SetClient
    nameWithType: IAzureDocumentDbConnectionCache.SetClient
    fullName: Cqrs.Azure.DocumentDb.IAzureDocumentDbConnectionCache.SetClient
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DocumentClient
    name: DocumentClient
    nameWithType: DocumentClient
    fullName: DocumentClient
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.DocumentDb.GlobalAzureDocumentDbConnectionCache.TryGetDatabase*
  commentId: Overload:Cqrs.Azure.DocumentDb.GlobalAzureDocumentDbConnectionCache.TryGetDatabase
  isExternal: false
  name: TryGetDatabase
  nameWithType: GlobalAzureDocumentDbConnectionCache.TryGetDatabase
  fullName: Cqrs.Azure.DocumentDb.GlobalAzureDocumentDbConnectionCache.TryGetDatabase
- uid: Cqrs.Azure.DocumentDb.IAzureDocumentDbConnectionCache.TryGetDatabase(System.String,Database@)
  commentId: M:Cqrs.Azure.DocumentDb.IAzureDocumentDbConnectionCache.TryGetDatabase(System.String,Database@)
  parent: Cqrs.Azure.DocumentDb.IAzureDocumentDbConnectionCache
  isExternal: true
  name: TryGetDatabase(String, Database)
  nameWithType: IAzureDocumentDbConnectionCache.TryGetDatabase(String, Database)
  fullName: Cqrs.Azure.DocumentDb.IAzureDocumentDbConnectionCache.TryGetDatabase(System.String, Database)
  spec.csharp:
  - uid: Cqrs.Azure.DocumentDb.IAzureDocumentDbConnectionCache.TryGetDatabase(System.String,Database@)
    name: TryGetDatabase
    nameWithType: IAzureDocumentDbConnectionCache.TryGetDatabase
    fullName: Cqrs.Azure.DocumentDb.IAzureDocumentDbConnectionCache.TryGetDatabase
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Database
    name: Database
    nameWithType: Database
    fullName: Database
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.DocumentDb.IAzureDocumentDbConnectionCache.TryGetDatabase(System.String,Database@)
    name: TryGetDatabase
    nameWithType: IAzureDocumentDbConnectionCache.TryGetDatabase
    fullName: Cqrs.Azure.DocumentDb.IAzureDocumentDbConnectionCache.TryGetDatabase
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Database
    name: Database
    nameWithType: Database
    fullName: Database
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Database
  isExternal: true
  name: Database
  nameWithType: Database
  fullName: Database
- uid: Cqrs.Azure.DocumentDb.GlobalAzureDocumentDbConnectionCache.SetDatabase*
  commentId: Overload:Cqrs.Azure.DocumentDb.GlobalAzureDocumentDbConnectionCache.SetDatabase
  isExternal: false
  name: SetDatabase
  nameWithType: GlobalAzureDocumentDbConnectionCache.SetDatabase
  fullName: Cqrs.Azure.DocumentDb.GlobalAzureDocumentDbConnectionCache.SetDatabase
- uid: Cqrs.Azure.DocumentDb.IAzureDocumentDbConnectionCache.SetDatabase(System.String,Database)
  commentId: M:Cqrs.Azure.DocumentDb.IAzureDocumentDbConnectionCache.SetDatabase(System.String,Database)
  parent: Cqrs.Azure.DocumentDb.IAzureDocumentDbConnectionCache
  isExternal: true
  name: SetDatabase(String, Database)
  nameWithType: IAzureDocumentDbConnectionCache.SetDatabase(String, Database)
  fullName: Cqrs.Azure.DocumentDb.IAzureDocumentDbConnectionCache.SetDatabase(System.String, Database)
  spec.csharp:
  - uid: Cqrs.Azure.DocumentDb.IAzureDocumentDbConnectionCache.SetDatabase(System.String,Database)
    name: SetDatabase
    nameWithType: IAzureDocumentDbConnectionCache.SetDatabase
    fullName: Cqrs.Azure.DocumentDb.IAzureDocumentDbConnectionCache.SetDatabase
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Database
    name: Database
    nameWithType: Database
    fullName: Database
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.DocumentDb.IAzureDocumentDbConnectionCache.SetDatabase(System.String,Database)
    name: SetDatabase
    nameWithType: IAzureDocumentDbConnectionCache.SetDatabase
    fullName: Cqrs.Azure.DocumentDb.IAzureDocumentDbConnectionCache.SetDatabase
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Database
    name: Database
    nameWithType: Database
    fullName: Database
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.DocumentDb.GlobalAzureDocumentDbConnectionCache.TryGetDocumentCollection*
  commentId: Overload:Cqrs.Azure.DocumentDb.GlobalAzureDocumentDbConnectionCache.TryGetDocumentCollection
  isExternal: false
  name: TryGetDocumentCollection
  nameWithType: GlobalAzureDocumentDbConnectionCache.TryGetDocumentCollection
  fullName: Cqrs.Azure.DocumentDb.GlobalAzureDocumentDbConnectionCache.TryGetDocumentCollection
- uid: Cqrs.Azure.DocumentDb.IAzureDocumentDbConnectionCache.TryGetDocumentCollection(System.String,DocumentCollection@)
  commentId: M:Cqrs.Azure.DocumentDb.IAzureDocumentDbConnectionCache.TryGetDocumentCollection(System.String,DocumentCollection@)
  parent: Cqrs.Azure.DocumentDb.IAzureDocumentDbConnectionCache
  isExternal: true
  name: TryGetDocumentCollection(String, DocumentCollection)
  nameWithType: IAzureDocumentDbConnectionCache.TryGetDocumentCollection(String, DocumentCollection)
  fullName: Cqrs.Azure.DocumentDb.IAzureDocumentDbConnectionCache.TryGetDocumentCollection(System.String, DocumentCollection)
  spec.csharp:
  - uid: Cqrs.Azure.DocumentDb.IAzureDocumentDbConnectionCache.TryGetDocumentCollection(System.String,DocumentCollection@)
    name: TryGetDocumentCollection
    nameWithType: IAzureDocumentDbConnectionCache.TryGetDocumentCollection
    fullName: Cqrs.Azure.DocumentDb.IAzureDocumentDbConnectionCache.TryGetDocumentCollection
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DocumentCollection
    name: DocumentCollection
    nameWithType: DocumentCollection
    fullName: DocumentCollection
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.DocumentDb.IAzureDocumentDbConnectionCache.TryGetDocumentCollection(System.String,DocumentCollection@)
    name: TryGetDocumentCollection
    nameWithType: IAzureDocumentDbConnectionCache.TryGetDocumentCollection
    fullName: Cqrs.Azure.DocumentDb.IAzureDocumentDbConnectionCache.TryGetDocumentCollection
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DocumentCollection
    name: DocumentCollection
    nameWithType: DocumentCollection
    fullName: DocumentCollection
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DocumentCollection
  isExternal: true
  name: DocumentCollection
  nameWithType: DocumentCollection
  fullName: DocumentCollection
- uid: Cqrs.Azure.DocumentDb.GlobalAzureDocumentDbConnectionCache.SetDocumentCollection*
  commentId: Overload:Cqrs.Azure.DocumentDb.GlobalAzureDocumentDbConnectionCache.SetDocumentCollection
  isExternal: false
  name: SetDocumentCollection
  nameWithType: GlobalAzureDocumentDbConnectionCache.SetDocumentCollection
  fullName: Cqrs.Azure.DocumentDb.GlobalAzureDocumentDbConnectionCache.SetDocumentCollection
- uid: Cqrs.Azure.DocumentDb.IAzureDocumentDbConnectionCache.SetDocumentCollection(System.String,DocumentCollection)
  commentId: M:Cqrs.Azure.DocumentDb.IAzureDocumentDbConnectionCache.SetDocumentCollection(System.String,DocumentCollection)
  parent: Cqrs.Azure.DocumentDb.IAzureDocumentDbConnectionCache
  isExternal: true
  name: SetDocumentCollection(String, DocumentCollection)
  nameWithType: IAzureDocumentDbConnectionCache.SetDocumentCollection(String, DocumentCollection)
  fullName: Cqrs.Azure.DocumentDb.IAzureDocumentDbConnectionCache.SetDocumentCollection(System.String, DocumentCollection)
  spec.csharp:
  - uid: Cqrs.Azure.DocumentDb.IAzureDocumentDbConnectionCache.SetDocumentCollection(System.String,DocumentCollection)
    name: SetDocumentCollection
    nameWithType: IAzureDocumentDbConnectionCache.SetDocumentCollection
    fullName: Cqrs.Azure.DocumentDb.IAzureDocumentDbConnectionCache.SetDocumentCollection
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DocumentCollection
    name: DocumentCollection
    nameWithType: DocumentCollection
    fullName: DocumentCollection
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.DocumentDb.IAzureDocumentDbConnectionCache.SetDocumentCollection(System.String,DocumentCollection)
    name: SetDocumentCollection
    nameWithType: IAzureDocumentDbConnectionCache.SetDocumentCollection
    fullName: Cqrs.Azure.DocumentDb.IAzureDocumentDbConnectionCache.SetDocumentCollection
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DocumentCollection
    name: DocumentCollection
    nameWithType: DocumentCollection
    fullName: DocumentCollection
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
