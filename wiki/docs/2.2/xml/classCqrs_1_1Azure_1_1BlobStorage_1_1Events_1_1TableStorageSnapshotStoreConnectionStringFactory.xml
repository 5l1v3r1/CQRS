<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classCqrs_1_1Azure_1_1BlobStorage_1_1Events_1_1TableStorageSnapshotStoreConnectionStringFactory" kind="class" language="C#" prot="public">
    <compoundname>Cqrs::Azure::BlobStorage::Events::TableStorageSnapshotStoreConnectionStringFactory</compoundname>
    <basecompoundref refid="classCqrs_1_1Azure_1_1BlobStorage_1_1Events_1_1TableStorageEventStoreConnectionStringFactory" prot="public" virt="non-virtual">Cqrs.Azure.BlobStorage.Events.TableStorageEventStoreConnectionStringFactory</basecompoundref>
    <basecompoundref refid="interfaceCqrs_1_1Azure_1_1BlobStorage_1_1ITableStorageSnapshotStoreConnectionStringFactory" prot="public" virt="non-virtual">Cqrs.Azure.BlobStorage.ITableStorageSnapshotStoreConnectionStringFactory</basecompoundref>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classCqrs_1_1Azure_1_1BlobStorage_1_1Events_1_1TableStorageSnapshotStoreConnectionStringFactory_add2ff350d26fed88d8c18737d3895663_1add2ff350d26fed88d8c18737d3895663" prot="public" static="yes" mutable="no">
        <type>string</type>
        <definition>string Cqrs.Azure.BlobStorage.Events.TableStorageSnapshotStoreConnectionStringFactory.TableStorageReadableSnapshotStoreConnectionStringKey</definition>
        <argsstring></argsstring>
        <name>TableStorageReadableSnapshotStoreConnectionStringKey</name>
        <initializer>= &quot;Cqrs.Azure.TableStorage.SnapshotStore.Read.ConnectionStringName&quot;</initializer>
        <briefdescription>
<para>The name of the app setting in IConfigurationManager that will have the connection string of the readable storage account if using a separate storage account for reads and writes. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/a99f043f4d1af837/Framework/Azure/Cqrs.Azure.BlobStorage/Events/TableStorageEventStoreConnectionStringFactory - Copy.cs" line="31" column="1" bodyfile="/opt/buildAgent/work/a99f043f4d1af837/Framework/Azure/Cqrs.Azure.BlobStorage/Events/TableStorageEventStoreConnectionStringFactory - Copy.cs" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCqrs_1_1Azure_1_1BlobStorage_1_1Events_1_1TableStorageSnapshotStoreConnectionStringFactory_a7bb0a4b42242b523df90611e8c28a4e6_1a7bb0a4b42242b523df90611e8c28a4e6" prot="public" static="yes" mutable="no">
        <type>string</type>
        <definition>string Cqrs.Azure.BlobStorage.Events.TableStorageSnapshotStoreConnectionStringFactory.TableStorageWritableSnapshotStoreConnectionStringKey</definition>
        <argsstring></argsstring>
        <name>TableStorageWritableSnapshotStoreConnectionStringKey</name>
        <initializer>= &quot;Cqrs.Azure.TableStorage.SnapshotStore.Write.ConnectionStringName&quot;</initializer>
        <briefdescription>
<para>The name of the app setting in IConfigurationManager that will have the connection string of the writeable storage account if using a separate storage account for reads and writes. This value gets appended with a &quot;.1&quot;, &quot;.2&quot; etc allowing you to write to as many different locations as possible. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/a99f043f4d1af837/Framework/Azure/Cqrs.Azure.BlobStorage/Events/TableStorageEventStoreConnectionStringFactory - Copy.cs" line="37" column="1" bodyfile="/opt/buildAgent/work/a99f043f4d1af837/Framework/Azure/Cqrs.Azure.BlobStorage/Events/TableStorageEventStoreConnectionStringFactory - Copy.cs" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCqrs_1_1Azure_1_1BlobStorage_1_1Events_1_1TableStorageSnapshotStoreConnectionStringFactory_aeb34e21116be39f3f34e5970001f3762_1aeb34e21116be39f3f34e5970001f3762" prot="public" static="yes" mutable="no">
        <type>string</type>
        <definition>string Cqrs.Azure.BlobStorage.Events.TableStorageSnapshotStoreConnectionStringFactory.TableStorageSnapshotStoreConnectionStringKey</definition>
        <argsstring></argsstring>
        <name>TableStorageSnapshotStoreConnectionStringKey</name>
        <initializer>= &quot;Cqrs.Azure.TableStorage.SnapshotStore.ConnectionStringName&quot;</initializer>
        <briefdescription>
<para>The name of the app setting in IConfigurationManager that will have the connection string if using a single storage account for both reads and writes. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/a99f043f4d1af837/Framework/Azure/Cqrs.Azure.BlobStorage/Events/TableStorageEventStoreConnectionStringFactory - Copy.cs" line="42" column="1" bodyfile="/opt/buildAgent/work/a99f043f4d1af837/Framework/Azure/Cqrs.Azure.BlobStorage/Events/TableStorageEventStoreConnectionStringFactory - Copy.cs" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCqrs_1_1Azure_1_1BlobStorage_1_1Events_1_1TableStorageSnapshotStoreConnectionStringFactory_a7bfe58a97886ad7832d5640b626c1ee5_1a7bfe58a97886ad7832d5640b626c1ee5" prot="public" static="yes" mutable="no">
        <type>string</type>
        <definition>string Cqrs.Azure.BlobStorage.Events.TableStorageSnapshotStoreConnectionStringFactory.TableStorageSnapshotBaseContainerNameKey</definition>
        <argsstring></argsstring>
        <name>TableStorageSnapshotBaseContainerNameKey</name>
        <initializer>= &quot;Cqrs.Azure.TableStorage.SnapshotStore.BaseContainerName&quot;</initializer>
        <briefdescription>
<para>The name of the app setting in IConfigurationManager that will have the base name of the container used. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/a99f043f4d1af837/Framework/Azure/Cqrs.Azure.BlobStorage/Events/TableStorageEventStoreConnectionStringFactory - Copy.cs" line="47" column="1" bodyfile="/opt/buildAgent/work/a99f043f4d1af837/Framework/Azure/Cqrs.Azure.BlobStorage/Events/TableStorageEventStoreConnectionStringFactory - Copy.cs" bodystart="47" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classCqrs_1_1Azure_1_1BlobStorage_1_1Events_1_1TableStorageSnapshotStoreConnectionStringFactory_adf49df18fd687cf39ee1c389c338e364_1adf49df18fd687cf39ee1c389c338e364" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Cqrs.Azure.BlobStorage.Events.TableStorageSnapshotStoreConnectionStringFactory.TableStorageSnapshotStoreConnectionStringFactory</definition>
        <argsstring>(IConfigurationManager configurationManager, ILogger logger)</argsstring>
        <name>TableStorageSnapshotStoreConnectionStringFactory</name>
        <param>
          <type><ref refid="interfaceCqrs_1_1Configuration_1_1IConfigurationManager" kindref="compound">IConfigurationManager</ref></type>
          <declname>configurationManager</declname>
        </param>
        <param>
          <type>ILogger</type>
          <declname>logger</declname>
        </param>
        <briefdescription>
<para>Instantiates a new instance of <ref refid="classCqrs_1_1Azure_1_1BlobStorage_1_1Events_1_1TableStorageSnapshotStoreConnectionStringFactory" kindref="compound">TableStorageSnapshotStoreConnectionStringFactory</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/a99f043f4d1af837/Framework/Azure/Cqrs.Azure.BlobStorage/Events/TableStorageEventStoreConnectionStringFactory - Copy.cs" line="52" column="1" bodyfile="/opt/buildAgent/work/a99f043f4d1af837/Framework/Azure/Cqrs.Azure.BlobStorage/Events/TableStorageEventStoreConnectionStringFactory - Copy.cs" bodystart="52" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Azure_1_1BlobStorage_1_1Events_1_1TableStorageSnapshotStoreConnectionStringFactory_a78f9987855e2c4c370c624b0edb97f4d_1a78f9987855e2c4c370c624b0edb97f4d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>override IEnumerable&lt; string &gt;</type>
        <definition>override IEnumerable&lt;string&gt; Cqrs.Azure.BlobStorage.Events.TableStorageSnapshotStoreConnectionStringFactory.GetWritableConnectionStrings</definition>
        <argsstring>()</argsstring>
        <name>GetWritableConnectionStrings</name>
        <reimplements refid="classCqrs_1_1Azure_1_1BlobStorage_1_1Events_1_1TableStorageEventStoreConnectionStringFactory_a07406c2607bdd42dd13116b92fc6b665_1a07406c2607bdd42dd13116b92fc6b665">GetWritableConnectionStrings</reimplements>
        <briefdescription>
<para>Gets all writeable connection strings. If using a single storage account, then <ref refid="classCqrs_1_1Azure_1_1BlobStorage_1_1Events_1_1TableStorageSnapshotStoreConnectionStringFactory_aeb34e21116be39f3f34e5970001f3762_1aeb34e21116be39f3f34e5970001f3762" kindref="member">TableStorageSnapshotStoreConnectionStringKey</ref> will most likely be returned. If a value for <ref refid="classCqrs_1_1Azure_1_1BlobStorage_1_1Events_1_1TableStorageSnapshotStoreConnectionStringFactory_a7bb0a4b42242b523df90611e8c28a4e6_1a7bb0a4b42242b523df90611e8c28a4e6" kindref="member">TableStorageWritableSnapshotStoreConnectionStringKey</ref> is found, it will append &quot;.1&quot;, &quot;.2&quot; etc returning any additionally found connection string values in <ref refid="namespaceCqrs_1_1Azure_1_1ConfigurationManager" kindref="compound">ConfigurationManager</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/a99f043f4d1af837/Framework/Azure/Cqrs.Azure.BlobStorage/Events/TableStorageEventStoreConnectionStringFactory - Copy.cs" line="61" column="1" bodyfile="/opt/buildAgent/work/a99f043f4d1af837/Framework/Azure/Cqrs.Azure.BlobStorage/Events/TableStorageEventStoreConnectionStringFactory - Copy.cs" bodystart="61" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Azure_1_1BlobStorage_1_1Events_1_1TableStorageSnapshotStoreConnectionStringFactory_a092e6f4132d8cb0c1b25e0c19a3911ba_1a092e6f4132d8cb0c1b25e0c19a3911ba" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>override string</type>
        <definition>override string Cqrs.Azure.BlobStorage.Events.TableStorageSnapshotStoreConnectionStringFactory.GetReadableConnectionString</definition>
        <argsstring>()</argsstring>
        <name>GetReadableConnectionString</name>
        <reimplements refid="classCqrs_1_1Azure_1_1BlobStorage_1_1Events_1_1TableStorageEventStoreConnectionStringFactory_a047e58aa30e97231dc913df350bc2446_1a047e58aa30e97231dc913df350bc2446">GetReadableConnectionString</reimplements>
        <briefdescription>
<para>Gets the readable connection string. If using a single storage account, then <ref refid="classCqrs_1_1Azure_1_1BlobStorage_1_1Events_1_1TableStorageSnapshotStoreConnectionStringFactory_aeb34e21116be39f3f34e5970001f3762_1aeb34e21116be39f3f34e5970001f3762" kindref="member">TableStorageSnapshotStoreConnectionStringKey</ref> will most likely be returned. If a value for <ref refid="classCqrs_1_1Azure_1_1BlobStorage_1_1Events_1_1TableStorageSnapshotStoreConnectionStringFactory_add2ff350d26fed88d8c18737d3895663_1add2ff350d26fed88d8c18737d3895663" kindref="member">TableStorageReadableSnapshotStoreConnectionStringKey</ref> is found, that will be returned instead. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/a99f043f4d1af837/Framework/Azure/Cqrs.Azure.BlobStorage/Events/TableStorageEventStoreConnectionStringFactory - Copy.cs" line="104" column="1" bodyfile="/opt/buildAgent/work/a99f043f4d1af837/Framework/Azure/Cqrs.Azure.BlobStorage/Events/TableStorageEventStoreConnectionStringFactory - Copy.cs" bodystart="104" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Azure_1_1BlobStorage_1_1Events_1_1TableStorageSnapshotStoreConnectionStringFactory_af0ddf382c977759aa45d3971fb21cbed_1af0ddf382c977759aa45d3971fb21cbed" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>override string</type>
        <definition>override string Cqrs.Azure.BlobStorage.Events.TableStorageSnapshotStoreConnectionStringFactory.GetBaseContainerName</definition>
        <argsstring>()</argsstring>
        <name>GetBaseContainerName</name>
        <reimplements refid="classCqrs_1_1Azure_1_1BlobStorage_1_1Events_1_1TableStorageEventStoreConnectionStringFactory_a118388598a7fa653122fc11521c915d7_1a118388598a7fa653122fc11521c915d7">GetBaseContainerName</reimplements>
        <briefdescription>
<para>Returns the name of the base contain to be used. This will be the value from <ref refid="namespaceCqrs_1_1Azure_1_1ConfigurationManager" kindref="compound">ConfigurationManager</ref> keyed <ref refid="classCqrs_1_1Azure_1_1BlobStorage_1_1Events_1_1TableStorageSnapshotStoreConnectionStringFactory_a7bfe58a97886ad7832d5640b626c1ee5_1a7bfe58a97886ad7832d5640b626c1ee5" kindref="member">TableStorageSnapshotBaseContainerNameKey</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/a99f043f4d1af837/Framework/Azure/Cqrs.Azure.BlobStorage/Events/TableStorageEventStoreConnectionStringFactory - Copy.cs" line="135" column="1" bodyfile="/opt/buildAgent/work/a99f043f4d1af837/Framework/Azure/Cqrs.Azure.BlobStorage/Events/TableStorageEventStoreConnectionStringFactory - Copy.cs" bodystart="135" bodyend="155"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A factory for getting connection strings and container names for ISnapshotStore access. This factory supports reading and writing from separate storage accounts. Specifically you can have as many different storage accounts as you want to configure when writing. This allows for manual mirroring of data while reading from the fastest/closest location possible. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="516">
        <label>ITableStorageSnapshotStoreConnectionStringFactory</label>
        <link refid="interfaceCqrs_1_1Azure_1_1BlobStorage_1_1ITableStorageSnapshotStoreConnectionStringFactory"/>
        <childnode refid="514" relation="public-inheritance">
        </childnode>
      </node>
      <node id="513">
        <label>TableStorageEventStoreConnectionStringFactory</label>
        <link refid="classCqrs_1_1Azure_1_1BlobStorage_1_1Events_1_1TableStorageEventStoreConnectionStringFactory"/>
        <childnode refid="514" relation="public-inheritance">
        </childnode>
      </node>
      <node id="515">
        <label>IStorageStoreConnectionStringFactory</label>
        <link refid="interfaceCqrs_1_1Azure_1_1BlobStorage_1_1IStorageStoreConnectionStringFactory"/>
      </node>
      <node id="514">
        <label>ITableStorageStoreConnectionStringFactory</label>
        <link refid="interfaceCqrs_1_1Azure_1_1BlobStorage_1_1ITableStorageStoreConnectionStringFactory"/>
        <childnode refid="515" relation="public-inheritance">
        </childnode>
      </node>
      <node id="512">
        <label>Cqrs.Azure.BlobStorage.Events.TableStorageSnapshotStoreConnectionStringFactory</label>
        <link refid="classCqrs_1_1Azure_1_1BlobStorage_1_1Events_1_1TableStorageSnapshotStoreConnectionStringFactory"/>
        <childnode refid="513" relation="public-inheritance">
        </childnode>
        <childnode refid="516" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="521">
        <label>ITableStorageSnapshotStoreConnectionStringFactory</label>
        <link refid="interfaceCqrs_1_1Azure_1_1BlobStorage_1_1ITableStorageSnapshotStoreConnectionStringFactory"/>
        <childnode refid="519" relation="public-inheritance">
        </childnode>
      </node>
      <node id="518">
        <label>TableStorageEventStoreConnectionStringFactory</label>
        <link refid="classCqrs_1_1Azure_1_1BlobStorage_1_1Events_1_1TableStorageEventStoreConnectionStringFactory"/>
        <childnode refid="519" relation="public-inheritance">
        </childnode>
      </node>
      <node id="520">
        <label>IStorageStoreConnectionStringFactory</label>
        <link refid="interfaceCqrs_1_1Azure_1_1BlobStorage_1_1IStorageStoreConnectionStringFactory"/>
      </node>
      <node id="519">
        <label>ITableStorageStoreConnectionStringFactory</label>
        <link refid="interfaceCqrs_1_1Azure_1_1BlobStorage_1_1ITableStorageStoreConnectionStringFactory"/>
        <childnode refid="520" relation="public-inheritance">
        </childnode>
      </node>
      <node id="517">
        <label>Cqrs.Azure.BlobStorage.Events.TableStorageSnapshotStoreConnectionStringFactory</label>
        <link refid="classCqrs_1_1Azure_1_1BlobStorage_1_1Events_1_1TableStorageSnapshotStoreConnectionStringFactory"/>
        <childnode refid="518" relation="public-inheritance">
        </childnode>
        <childnode refid="521" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/opt/buildAgent/work/a99f043f4d1af837/Framework/Azure/Cqrs.Azure.BlobStorage/Events/TableStorageEventStoreConnectionStringFactory - Copy.cs" line="27" column="1" bodyfile="/opt/buildAgent/work/a99f043f4d1af837/Framework/Azure/Cqrs.Azure.BlobStorage/Events/TableStorageEventStoreConnectionStringFactory - Copy.cs" bodystart="24" bodyend="156"/>
    <listofallmembers>
      <member refid="classCqrs_1_1Azure_1_1BlobStorage_1_1Events_1_1TableStorageEventStoreConnectionStringFactory_a3787d14bf40a1756c742b0640413a62e_1a3787d14bf40a1756c742b0640413a62e" prot="protected" virt="non-virtual"><scope>Cqrs::Azure::BlobStorage::Events::TableStorageSnapshotStoreConnectionStringFactory</scope><name>ConfigurationManager</name></member>
      <member refid="classCqrs_1_1Azure_1_1BlobStorage_1_1Events_1_1TableStorageSnapshotStoreConnectionStringFactory_af0ddf382c977759aa45d3971fb21cbed_1af0ddf382c977759aa45d3971fb21cbed" prot="public" virt="virtual"><scope>Cqrs::Azure::BlobStorage::Events::TableStorageSnapshotStoreConnectionStringFactory</scope><name>GetBaseContainerName</name></member>
      <member refid="classCqrs_1_1Azure_1_1BlobStorage_1_1Events_1_1TableStorageSnapshotStoreConnectionStringFactory_a092e6f4132d8cb0c1b25e0c19a3911ba_1a092e6f4132d8cb0c1b25e0c19a3911ba" prot="public" virt="virtual"><scope>Cqrs::Azure::BlobStorage::Events::TableStorageSnapshotStoreConnectionStringFactory</scope><name>GetReadableConnectionString</name></member>
      <member refid="classCqrs_1_1Azure_1_1BlobStorage_1_1Events_1_1TableStorageSnapshotStoreConnectionStringFactory_a78f9987855e2c4c370c624b0edb97f4d_1a78f9987855e2c4c370c624b0edb97f4d" prot="public" virt="virtual"><scope>Cqrs::Azure::BlobStorage::Events::TableStorageSnapshotStoreConnectionStringFactory</scope><name>GetWritableConnectionStrings</name></member>
      <member refid="classCqrs_1_1Azure_1_1BlobStorage_1_1Events_1_1TableStorageEventStoreConnectionStringFactory_a1324be985c77f1393a45a73dbb178314_1a1324be985c77f1393a45a73dbb178314" prot="protected" virt="non-virtual"><scope>Cqrs::Azure::BlobStorage::Events::TableStorageSnapshotStoreConnectionStringFactory</scope><name>Logger</name></member>
      <member refid="classCqrs_1_1Azure_1_1BlobStorage_1_1Events_1_1TableStorageEventStoreConnectionStringFactory_a9aad5e7497e3f5192d3aaec8d5f7b5f8_1a9aad5e7497e3f5192d3aaec8d5f7b5f8" prot="public" virt="non-virtual"><scope>Cqrs::Azure::BlobStorage::Events::TableStorageSnapshotStoreConnectionStringFactory</scope><name>TableStorageBaseContainerNameKey</name></member>
      <member refid="classCqrs_1_1Azure_1_1BlobStorage_1_1Events_1_1TableStorageEventStoreConnectionStringFactory_a48d61b35856515a2bfb0674c1fa57995_1a48d61b35856515a2bfb0674c1fa57995" prot="public" virt="non-virtual"><scope>Cqrs::Azure::BlobStorage::Events::TableStorageSnapshotStoreConnectionStringFactory</scope><name>TableStorageEventStoreConnectionStringFactory</name></member>
      <member refid="classCqrs_1_1Azure_1_1BlobStorage_1_1Events_1_1TableStorageEventStoreConnectionStringFactory_a95f8662029c8a40117e326973de936bf_1a95f8662029c8a40117e326973de936bf" prot="public" virt="non-virtual"><scope>Cqrs::Azure::BlobStorage::Events::TableStorageSnapshotStoreConnectionStringFactory</scope><name>TableStorageEventStoreConnectionStringKey</name></member>
      <member refid="classCqrs_1_1Azure_1_1BlobStorage_1_1Events_1_1TableStorageEventStoreConnectionStringFactory_ac28aea2439fe0bed85d1b53c0fd8fdaf_1ac28aea2439fe0bed85d1b53c0fd8fdaf" prot="public" virt="non-virtual"><scope>Cqrs::Azure::BlobStorage::Events::TableStorageSnapshotStoreConnectionStringFactory</scope><name>TableStorageReadableEventStoreConnectionStringKey</name></member>
      <member refid="classCqrs_1_1Azure_1_1BlobStorage_1_1Events_1_1TableStorageSnapshotStoreConnectionStringFactory_add2ff350d26fed88d8c18737d3895663_1add2ff350d26fed88d8c18737d3895663" prot="public" virt="non-virtual"><scope>Cqrs::Azure::BlobStorage::Events::TableStorageSnapshotStoreConnectionStringFactory</scope><name>TableStorageReadableSnapshotStoreConnectionStringKey</name></member>
      <member refid="classCqrs_1_1Azure_1_1BlobStorage_1_1Events_1_1TableStorageSnapshotStoreConnectionStringFactory_a7bfe58a97886ad7832d5640b626c1ee5_1a7bfe58a97886ad7832d5640b626c1ee5" prot="public" virt="non-virtual"><scope>Cqrs::Azure::BlobStorage::Events::TableStorageSnapshotStoreConnectionStringFactory</scope><name>TableStorageSnapshotBaseContainerNameKey</name></member>
      <member refid="classCqrs_1_1Azure_1_1BlobStorage_1_1Events_1_1TableStorageSnapshotStoreConnectionStringFactory_adf49df18fd687cf39ee1c389c338e364_1adf49df18fd687cf39ee1c389c338e364" prot="public" virt="non-virtual"><scope>Cqrs::Azure::BlobStorage::Events::TableStorageSnapshotStoreConnectionStringFactory</scope><name>TableStorageSnapshotStoreConnectionStringFactory</name></member>
      <member refid="classCqrs_1_1Azure_1_1BlobStorage_1_1Events_1_1TableStorageSnapshotStoreConnectionStringFactory_aeb34e21116be39f3f34e5970001f3762_1aeb34e21116be39f3f34e5970001f3762" prot="public" virt="non-virtual"><scope>Cqrs::Azure::BlobStorage::Events::TableStorageSnapshotStoreConnectionStringFactory</scope><name>TableStorageSnapshotStoreConnectionStringKey</name></member>
      <member refid="classCqrs_1_1Azure_1_1BlobStorage_1_1Events_1_1TableStorageEventStoreConnectionStringFactory_a73df7618d5978a2c0d2e69880b799369_1a73df7618d5978a2c0d2e69880b799369" prot="public" virt="non-virtual"><scope>Cqrs::Azure::BlobStorage::Events::TableStorageSnapshotStoreConnectionStringFactory</scope><name>TableStorageWritableEventStoreConnectionStringKey</name></member>
      <member refid="classCqrs_1_1Azure_1_1BlobStorage_1_1Events_1_1TableStorageSnapshotStoreConnectionStringFactory_a7bb0a4b42242b523df90611e8c28a4e6_1a7bb0a4b42242b523df90611e8c28a4e6" prot="public" virt="non-virtual"><scope>Cqrs::Azure::BlobStorage::Events::TableStorageSnapshotStoreConnectionStringFactory</scope><name>TableStorageWritableSnapshotStoreConnectionStringKey</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
