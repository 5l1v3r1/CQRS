### YamlMime:ManagedReference
items:
- uid: Cqrs.Mongo.Factories.MongoDataStoreFactory
  commentId: T:Cqrs.Mongo.Factories.MongoDataStoreFactory
  id: MongoDataStoreFactory
  parent: Cqrs.Mongo.Factories
  children:
  - Cqrs.Mongo.Factories.MongoDataStoreFactory.#ctor(cdmdotnet.Logging.ILogger,Cqrs.Mongo.Factories.IMongoDataStoreConnectionStringFactory)
  - Cqrs.Mongo.Factories.MongoDataStoreFactory.GetCollection``1
  - Cqrs.Mongo.Factories.MongoDataStoreFactory.Logger
  - Cqrs.Mongo.Factories.MongoDataStoreFactory.MongoDataStoreConnectionStringFactory
  - Cqrs.Mongo.Factories.MongoDataStoreFactory.VerifyIndexes``1(MongoDB.Driver.MongoCollection{``0})
  langs:
  - csharp
  - vb
  name: MongoDataStoreFactory
  nameWithType: MongoDataStoreFactory
  fullName: Cqrs.Mongo.Factories.MongoDataStoreFactory
  type: Class
  source:
    remote:
      path: Framework/Cqrs.Mongo/Factories/MongoDataStoreFactory.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: MongoDataStoreFactory
    path: Framework/Cqrs.Mongo/Factories/MongoDataStoreFactory.cs
    startLine: 24
  assemblies:
  - Cqrs.Mongo
  namespace: Cqrs.Mongo.Factories
  summary: "\nA factory for obtaining <xref href=\"Cqrs.DataStores.IDataStore%601\" data-throw-if-not-resolved=\"false\"></xref> collections from Mongo\n"
  example: []
  syntax:
    content: public class MongoDataStoreFactory
    content.vb: Public Class MongoDataStoreFactory
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Cqrs.Mongo.Factories.MongoDataStoreFactory.Logger
  commentId: P:Cqrs.Mongo.Factories.MongoDataStoreFactory.Logger
  id: Logger
  parent: Cqrs.Mongo.Factories.MongoDataStoreFactory
  langs:
  - csharp
  - vb
  name: Logger
  nameWithType: MongoDataStoreFactory.Logger
  fullName: Cqrs.Mongo.Factories.MongoDataStoreFactory.Logger
  type: Property
  source:
    remote:
      path: Framework/Cqrs.Mongo/Factories/MongoDataStoreFactory.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Logger
    path: Framework/Cqrs.Mongo/Factories/MongoDataStoreFactory.cs
    startLine: 31
  assemblies:
  - Cqrs.Mongo
  namespace: Cqrs.Mongo.Factories
  summary: "\nGets or sets the <xref href=\"cdmdotnet.Logging.ILogger\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: protected ILogger Logger { get; }
    parameters: []
    return:
      type: cdmdotnet.Logging.ILogger
    content.vb: Protected ReadOnly Property Logger As ILogger
  overload: Cqrs.Mongo.Factories.MongoDataStoreFactory.Logger*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Cqrs.Mongo.Factories.MongoDataStoreFactory.MongoDataStoreConnectionStringFactory
  commentId: P:Cqrs.Mongo.Factories.MongoDataStoreFactory.MongoDataStoreConnectionStringFactory
  id: MongoDataStoreConnectionStringFactory
  parent: Cqrs.Mongo.Factories.MongoDataStoreFactory
  langs:
  - csharp
  - vb
  name: MongoDataStoreConnectionStringFactory
  nameWithType: MongoDataStoreFactory.MongoDataStoreConnectionStringFactory
  fullName: Cqrs.Mongo.Factories.MongoDataStoreFactory.MongoDataStoreConnectionStringFactory
  type: Property
  source:
    remote:
      path: Framework/Cqrs.Mongo/Factories/MongoDataStoreFactory.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: MongoDataStoreConnectionStringFactory
    path: Framework/Cqrs.Mongo/Factories/MongoDataStoreFactory.cs
    startLine: 36
  assemblies:
  - Cqrs.Mongo
  namespace: Cqrs.Mongo.Factories
  summary: "\nGets or sets the <xref href=\"Cqrs.Mongo.Factories.IMongoDataStoreConnectionStringFactory\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: protected IMongoDataStoreConnectionStringFactory MongoDataStoreConnectionStringFactory { get; }
    parameters: []
    return:
      type: Cqrs.Mongo.Factories.IMongoDataStoreConnectionStringFactory
    content.vb: Protected ReadOnly Property MongoDataStoreConnectionStringFactory As IMongoDataStoreConnectionStringFactory
  overload: Cqrs.Mongo.Factories.MongoDataStoreFactory.MongoDataStoreConnectionStringFactory*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Cqrs.Mongo.Factories.MongoDataStoreFactory.#ctor(cdmdotnet.Logging.ILogger,Cqrs.Mongo.Factories.IMongoDataStoreConnectionStringFactory)
  commentId: M:Cqrs.Mongo.Factories.MongoDataStoreFactory.#ctor(cdmdotnet.Logging.ILogger,Cqrs.Mongo.Factories.IMongoDataStoreConnectionStringFactory)
  id: '#ctor(cdmdotnet.Logging.ILogger,Cqrs.Mongo.Factories.IMongoDataStoreConnectionStringFactory)'
  parent: Cqrs.Mongo.Factories.MongoDataStoreFactory
  langs:
  - csharp
  - vb
  name: MongoDataStoreFactory(ILogger, IMongoDataStoreConnectionStringFactory)
  nameWithType: MongoDataStoreFactory.MongoDataStoreFactory(ILogger, IMongoDataStoreConnectionStringFactory)
  fullName: Cqrs.Mongo.Factories.MongoDataStoreFactory.MongoDataStoreFactory(cdmdotnet.Logging.ILogger, Cqrs.Mongo.Factories.IMongoDataStoreConnectionStringFactory)
  type: Constructor
  source:
    remote:
      path: Framework/Cqrs.Mongo/Factories/MongoDataStoreFactory.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: .ctor
    path: Framework/Cqrs.Mongo/Factories/MongoDataStoreFactory.cs
    startLine: 41
  assemblies:
  - Cqrs.Mongo
  namespace: Cqrs.Mongo.Factories
  summary: "\nInstantiate a new instance of <xref href=\"Cqrs.Mongo.Factories.MongoDataStoreFactory\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public MongoDataStoreFactory(ILogger logger, IMongoDataStoreConnectionStringFactory mongoDataStoreConnectionStringFactory)
    parameters:
    - id: logger
      type: cdmdotnet.Logging.ILogger
    - id: mongoDataStoreConnectionStringFactory
      type: Cqrs.Mongo.Factories.IMongoDataStoreConnectionStringFactory
    content.vb: Public Sub New(logger As ILogger, mongoDataStoreConnectionStringFactory As IMongoDataStoreConnectionStringFactory)
  overload: Cqrs.Mongo.Factories.MongoDataStoreFactory.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Cqrs.Mongo.Factories.MongoDataStoreFactory.GetCollection``1
  commentId: M:Cqrs.Mongo.Factories.MongoDataStoreFactory.GetCollection``1
  id: GetCollection``1
  parent: Cqrs.Mongo.Factories.MongoDataStoreFactory
  langs:
  - csharp
  - vb
  name: GetCollection<TEntity>()
  nameWithType: MongoDataStoreFactory.GetCollection<TEntity>()
  fullName: Cqrs.Mongo.Factories.MongoDataStoreFactory.GetCollection<TEntity>()
  type: Method
  source:
    remote:
      path: Framework/Cqrs.Mongo/Factories/MongoDataStoreFactory.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: GetCollection
    path: Framework/Cqrs.Mongo/Factories/MongoDataStoreFactory.cs
    startLine: 119
  assemblies:
  - Cqrs.Mongo
  namespace: Cqrs.Mongo.Factories
  summary: "\nGet a <xref href=\"MongoDB.Driver.MongoCollection%601\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: protected virtual MongoCollection<TEntity> GetCollection<TEntity>()
    typeParameters:
    - id: TEntity
    return:
      type: MongoDB.Driver.MongoCollection{{TEntity}}
    content.vb: Protected Overridable Function GetCollection(Of TEntity) As MongoCollection(Of TEntity)
  overload: Cqrs.Mongo.Factories.MongoDataStoreFactory.GetCollection*
  nameWithType.vb: MongoDataStoreFactory.GetCollection(Of TEntity)()
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Cqrs.Mongo.Factories.MongoDataStoreFactory.GetCollection(Of TEntity)()
  name.vb: GetCollection(Of TEntity)()
- uid: Cqrs.Mongo.Factories.MongoDataStoreFactory.VerifyIndexes``1(MongoDB.Driver.MongoCollection{``0})
  commentId: M:Cqrs.Mongo.Factories.MongoDataStoreFactory.VerifyIndexes``1(MongoDB.Driver.MongoCollection{``0})
  id: VerifyIndexes``1(MongoDB.Driver.MongoCollection{``0})
  parent: Cqrs.Mongo.Factories.MongoDataStoreFactory
  langs:
  - csharp
  - vb
  name: VerifyIndexes<TEntity>(MongoCollection<TEntity>)
  nameWithType: MongoDataStoreFactory.VerifyIndexes<TEntity>(MongoCollection<TEntity>)
  fullName: Cqrs.Mongo.Factories.MongoDataStoreFactory.VerifyIndexes<TEntity>(MongoDB.Driver.MongoCollection<TEntity>)
  type: Method
  source:
    remote:
      path: Framework/Cqrs.Mongo/Factories/MongoDataStoreFactory.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: VerifyIndexes
    path: Framework/Cqrs.Mongo/Factories/MongoDataStoreFactory.cs
    startLine: 131
  assemblies:
  - Cqrs.Mongo
  namespace: Cqrs.Mongo.Factories
  summary: "\nVerify all required <xref href=\"MongoDB.Driver.IMongoIndexKeys\" data-throw-if-not-resolved=\"false\"></xref> are defined and ready to go.\n"
  example: []
  syntax:
    content: protected virtual void VerifyIndexes<TEntity>(MongoCollection<TEntity> collection)
    parameters:
    - id: collection
      type: MongoDB.Driver.MongoCollection{{TEntity}}
    typeParameters:
    - id: TEntity
    content.vb: Protected Overridable Sub VerifyIndexes(Of TEntity)(collection As MongoCollection(Of TEntity))
  overload: Cqrs.Mongo.Factories.MongoDataStoreFactory.VerifyIndexes*
  nameWithType.vb: MongoDataStoreFactory.VerifyIndexes(Of TEntity)(MongoCollection(Of TEntity))
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Cqrs.Mongo.Factories.MongoDataStoreFactory.VerifyIndexes(Of TEntity)(MongoDB.Driver.MongoCollection(Of TEntity))
  name.vb: VerifyIndexes(Of TEntity)(MongoCollection(Of TEntity))
references:
- uid: Cqrs.DataStores.IDataStore`1
  commentId: T:Cqrs.DataStores.IDataStore`1
  isExternal: false
  name: IDataStore<TData>
  nameWithType: IDataStore<TData>
  fullName: Cqrs.DataStores.IDataStore<TData>
  nameWithType.vb: IDataStore(Of TData)
  fullName.vb: Cqrs.DataStores.IDataStore(Of TData)
  name.vb: IDataStore(Of TData)
  spec.csharp:
  - uid: Cqrs.DataStores.IDataStore`1
    name: IDataStore
    nameWithType: IDataStore
    fullName: Cqrs.DataStores.IDataStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.DataStores.IDataStore`1
    name: IDataStore
    nameWithType: IDataStore
    fullName: Cqrs.DataStores.IDataStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Mongo.Factories
  commentId: N:Cqrs.Mongo.Factories
  isExternal: false
  name: Cqrs.Mongo.Factories
  nameWithType: Cqrs.Mongo.Factories
  fullName: Cqrs.Mongo.Factories
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: cdmdotnet.Logging.ILogger
  commentId: T:cdmdotnet.Logging.ILogger
  parent: cdmdotnet.Logging
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: cdmdotnet.Logging.ILogger
- uid: Cqrs.Mongo.Factories.MongoDataStoreFactory.Logger*
  commentId: Overload:Cqrs.Mongo.Factories.MongoDataStoreFactory.Logger
  isExternal: false
  name: Logger
  nameWithType: MongoDataStoreFactory.Logger
  fullName: Cqrs.Mongo.Factories.MongoDataStoreFactory.Logger
- uid: cdmdotnet.Logging
  commentId: N:cdmdotnet.Logging
  isExternal: false
  name: cdmdotnet.Logging
  nameWithType: cdmdotnet.Logging
  fullName: cdmdotnet.Logging
- uid: Cqrs.Mongo.Factories.IMongoDataStoreConnectionStringFactory
  commentId: T:Cqrs.Mongo.Factories.IMongoDataStoreConnectionStringFactory
  parent: Cqrs.Mongo.Factories
  isExternal: false
  name: IMongoDataStoreConnectionStringFactory
  nameWithType: IMongoDataStoreConnectionStringFactory
  fullName: Cqrs.Mongo.Factories.IMongoDataStoreConnectionStringFactory
- uid: Cqrs.Mongo.Factories.MongoDataStoreFactory.MongoDataStoreConnectionStringFactory*
  commentId: Overload:Cqrs.Mongo.Factories.MongoDataStoreFactory.MongoDataStoreConnectionStringFactory
  isExternal: false
  name: MongoDataStoreConnectionStringFactory
  nameWithType: MongoDataStoreFactory.MongoDataStoreConnectionStringFactory
  fullName: Cqrs.Mongo.Factories.MongoDataStoreFactory.MongoDataStoreConnectionStringFactory
- uid: Cqrs.Mongo.Factories.MongoDataStoreFactory
  commentId: T:Cqrs.Mongo.Factories.MongoDataStoreFactory
  isExternal: false
  name: MongoDataStoreFactory
  nameWithType: MongoDataStoreFactory
  fullName: Cqrs.Mongo.Factories.MongoDataStoreFactory
- uid: Cqrs.Mongo.Factories.MongoDataStoreFactory.#ctor*
  commentId: Overload:Cqrs.Mongo.Factories.MongoDataStoreFactory.#ctor
  isExternal: false
  name: MongoDataStoreFactory
  nameWithType: MongoDataStoreFactory.MongoDataStoreFactory
  fullName: Cqrs.Mongo.Factories.MongoDataStoreFactory.MongoDataStoreFactory
- uid: MongoDB.Driver.MongoCollection`1
  commentId: T:MongoDB.Driver.MongoCollection`1
  isExternal: true
  name: MongoCollection<TDefaultDocument>
  nameWithType: MongoCollection<TDefaultDocument>
  fullName: MongoDB.Driver.MongoCollection<TDefaultDocument>
  nameWithType.vb: MongoCollection(Of TDefaultDocument)
  fullName.vb: MongoDB.Driver.MongoCollection(Of TDefaultDocument)
  name.vb: MongoCollection(Of TDefaultDocument)
  spec.csharp:
  - uid: MongoDB.Driver.MongoCollection`1
    name: MongoCollection
    nameWithType: MongoCollection
    fullName: MongoDB.Driver.MongoCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TDefaultDocument
    nameWithType: TDefaultDocument
    fullName: TDefaultDocument
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: MongoDB.Driver.MongoCollection`1
    name: MongoCollection
    nameWithType: MongoCollection
    fullName: MongoDB.Driver.MongoCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDefaultDocument
    nameWithType: TDefaultDocument
    fullName: TDefaultDocument
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Mongo.Factories.MongoDataStoreFactory.GetCollection*
  commentId: Overload:Cqrs.Mongo.Factories.MongoDataStoreFactory.GetCollection
  isExternal: false
  name: GetCollection
  nameWithType: MongoDataStoreFactory.GetCollection
  fullName: Cqrs.Mongo.Factories.MongoDataStoreFactory.GetCollection
- uid: MongoDB.Driver.MongoCollection{{TEntity}}
  commentId: T:MongoDB.Driver.MongoCollection{``0}
  parent: MongoDB.Driver
  definition: MongoDB.Driver.MongoCollection`1
  name: MongoCollection<TEntity>
  nameWithType: MongoCollection<TEntity>
  fullName: MongoDB.Driver.MongoCollection<TEntity>
  nameWithType.vb: MongoCollection(Of TEntity)
  fullName.vb: MongoDB.Driver.MongoCollection(Of TEntity)
  name.vb: MongoCollection(Of TEntity)
  spec.csharp:
  - uid: MongoDB.Driver.MongoCollection`1
    name: MongoCollection
    nameWithType: MongoCollection
    fullName: MongoDB.Driver.MongoCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: MongoDB.Driver.MongoCollection`1
    name: MongoCollection
    nameWithType: MongoCollection
    fullName: MongoDB.Driver.MongoCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Driver
  commentId: N:MongoDB.Driver
  isExternal: false
  name: MongoDB.Driver
  nameWithType: MongoDB.Driver
  fullName: MongoDB.Driver
- uid: MongoDB.Driver.IMongoIndexKeys
  commentId: T:MongoDB.Driver.IMongoIndexKeys
- uid: Cqrs.Mongo.Factories.MongoDataStoreFactory.VerifyIndexes*
  commentId: Overload:Cqrs.Mongo.Factories.MongoDataStoreFactory.VerifyIndexes
  isExternal: false
  name: VerifyIndexes
  nameWithType: MongoDataStoreFactory.VerifyIndexes
  fullName: Cqrs.Mongo.Factories.MongoDataStoreFactory.VerifyIndexes
