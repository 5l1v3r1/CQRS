### YamlMime:ManagedReference
items:
- uid: Cqrs.MongoDB.Repositories.Authentication.SingleSignOnToken
  commentId: T:Cqrs.MongoDB.Repositories.Authentication.SingleSignOnToken
  id: SingleSignOnToken
  parent: Cqrs.MongoDB.Repositories.Authentication
  children:
  - Cqrs.MongoDB.Repositories.Authentication.SingleSignOnToken.DateIssued
  - Cqrs.MongoDB.Repositories.Authentication.SingleSignOnToken.Serialise
  - Cqrs.MongoDB.Repositories.Authentication.SingleSignOnToken.TimeOfExpiry
  - Cqrs.MongoDB.Repositories.Authentication.SingleSignOnToken.Token
  langs:
  - csharp
  - vb
  name: SingleSignOnToken
  nameWithType: SingleSignOnToken
  fullName: Cqrs.MongoDB.Repositories.Authentication.SingleSignOnToken
  type: Class
  source:
    remote:
      path: Framework/Cqrs.MongoDB/Repositories/Authentication/SingleSignOnToken.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: SingleSignOnToken
    path: Framework/Cqrs.MongoDB/Repositories/Authentication/SingleSignOnToken.cs
    startLine: 19
  assemblies:
  - Cqrs.MongoDB
  namespace: Cqrs.MongoDB.Repositories.Authentication
  summary: "\nAn <xref href=\"Cqrs.Authentication.ISingleSignOnToken\" data-throw-if-not-resolved=\"false\"></xref> designed to work with MongoDB.\n"
  example: []
  syntax:
    content: >-
      [Serializable]

      [DataContract]

      public class SingleSignOnToken : MongoEntity, IEntity, ISingleSignOnToken
    content.vb: >-
      <Serializable>

      <DataContract>

      Public Class SingleSignOnToken

          Inherits MongoEntity

          Implements IEntity, ISingleSignOnToken
  inheritance:
  - System.Object
  - Cqrs.Entities.Entity
  - Cqrs.MongoDB.Entities.MongoEntity
  implements:
  - Cqrs.Entities.IEntity
  - Cqrs.Authentication.ISingleSignOnToken
  inheritedMembers:
  - Cqrs.MongoDB.Entities.MongoEntity.Rsn
  - Cqrs.MongoDB.Entities.MongoEntity.SortingOrder
  - Cqrs.MongoDB.Entities.MongoEntity.IsLogicallyDeleted
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Cqrs.MongoDB.Repositories.Authentication.SingleSignOnToken.Token
  commentId: P:Cqrs.MongoDB.Repositories.Authentication.SingleSignOnToken.Token
  id: Token
  parent: Cqrs.MongoDB.Repositories.Authentication.SingleSignOnToken
  langs:
  - csharp
  - vb
  name: Token
  nameWithType: SingleSignOnToken.Token
  fullName: Cqrs.MongoDB.Repositories.Authentication.SingleSignOnToken.Token
  type: Property
  source:
    remote:
      path: Framework/Cqrs.MongoDB/Repositories/Authentication/SingleSignOnToken.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Token
    path: Framework/Cqrs.MongoDB/Repositories/Authentication/SingleSignOnToken.cs
    startLine: 26
  assemblies:
  - Cqrs.MongoDB
  namespace: Cqrs.MongoDB.Repositories.Authentication
  summary: "\nThe authentication token.\n"
  example: []
  syntax:
    content: >-
      [Required]

      [DataMember]

      public string Token { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Required>

      <DataMember>

      Public Property Token As String
  overload: Cqrs.MongoDB.Repositories.Authentication.SingleSignOnToken.Token*
  implements:
  - Cqrs.Authentication.ISingleSignOnToken.Token
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Cqrs.MongoDB.Repositories.Authentication.SingleSignOnToken.TimeOfExpiry
  commentId: P:Cqrs.MongoDB.Repositories.Authentication.SingleSignOnToken.TimeOfExpiry
  id: TimeOfExpiry
  parent: Cqrs.MongoDB.Repositories.Authentication.SingleSignOnToken
  langs:
  - csharp
  - vb
  name: TimeOfExpiry
  nameWithType: SingleSignOnToken.TimeOfExpiry
  fullName: Cqrs.MongoDB.Repositories.Authentication.SingleSignOnToken.TimeOfExpiry
  type: Property
  source:
    remote:
      path: Framework/Cqrs.MongoDB/Repositories/Authentication/SingleSignOnToken.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: TimeOfExpiry
    path: Framework/Cqrs.MongoDB/Repositories/Authentication/SingleSignOnToken.cs
    startLine: 33
  assemblies:
  - Cqrs.MongoDB
  namespace: Cqrs.MongoDB.Repositories.Authentication
  summary: "\nThe <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> this token should expire.\n"
  example: []
  syntax:
    content: >-
      [Required]

      [DataMember]

      public DateTime TimeOfExpiry { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: >-
      <Required>

      <DataMember>

      Public Property TimeOfExpiry As Date
  overload: Cqrs.MongoDB.Repositories.Authentication.SingleSignOnToken.TimeOfExpiry*
  implements:
  - Cqrs.Authentication.ISingleSignOnToken.TimeOfExpiry
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Cqrs.MongoDB.Repositories.Authentication.SingleSignOnToken.DateIssued
  commentId: P:Cqrs.MongoDB.Repositories.Authentication.SingleSignOnToken.DateIssued
  id: DateIssued
  parent: Cqrs.MongoDB.Repositories.Authentication.SingleSignOnToken
  langs:
  - csharp
  - vb
  name: DateIssued
  nameWithType: SingleSignOnToken.DateIssued
  fullName: Cqrs.MongoDB.Repositories.Authentication.SingleSignOnToken.DateIssued
  type: Property
  source:
    remote:
      path: Framework/Cqrs.MongoDB/Repositories/Authentication/SingleSignOnToken.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: DateIssued
    path: Framework/Cqrs.MongoDB/Repositories/Authentication/SingleSignOnToken.cs
    startLine: 40
  assemblies:
  - Cqrs.MongoDB
  namespace: Cqrs.MongoDB.Repositories.Authentication
  summary: "\nThe <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> this token was issued.\n"
  example: []
  syntax:
    content: >-
      [Required]

      [DataMember]

      public DateTime DateIssued { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: >-
      <Required>

      <DataMember>

      Public Property DateIssued As Date
  overload: Cqrs.MongoDB.Repositories.Authentication.SingleSignOnToken.DateIssued*
  implements:
  - Cqrs.Authentication.ISingleSignOnToken.DateIssued
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Cqrs.MongoDB.Repositories.Authentication.SingleSignOnToken.Serialise
  commentId: M:Cqrs.MongoDB.Repositories.Authentication.SingleSignOnToken.Serialise
  id: Serialise
  parent: Cqrs.MongoDB.Repositories.Authentication.SingleSignOnToken
  langs:
  - csharp
  - vb
  name: Serialise()
  nameWithType: SingleSignOnToken.Serialise()
  fullName: Cqrs.MongoDB.Repositories.Authentication.SingleSignOnToken.Serialise()
  type: Method
  source:
    remote:
      path: Framework/Cqrs.MongoDB/Repositories/Authentication/SingleSignOnToken.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Serialise
    path: Framework/Cqrs.MongoDB/Repositories/Authentication/SingleSignOnToken.cs
    startLine: 48
  assemblies:
  - Cqrs.MongoDB
  namespace: Cqrs.MongoDB.Repositories.Authentication
  summary: "\nReturns <xref href=\"Cqrs.MongoDB.Repositories.Authentication.SingleSignOnToken.Token\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public string Serialise()
    return:
      type: System.String
      description: <xref href="Cqrs.MongoDB.Repositories.Authentication.SingleSignOnToken.Token" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Function Serialise As String
  overload: Cqrs.MongoDB.Repositories.Authentication.SingleSignOnToken.Serialise*
  implements:
  - Cqrs.Authentication.ISingleSignOnToken.Serialise
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Cqrs.Authentication.ISingleSignOnToken
  commentId: T:Cqrs.Authentication.ISingleSignOnToken
  parent: Cqrs.Authentication
  isExternal: false
  name: ISingleSignOnToken
  nameWithType: ISingleSignOnToken
  fullName: Cqrs.Authentication.ISingleSignOnToken
- uid: Cqrs.MongoDB.Repositories.Authentication
  commentId: N:Cqrs.MongoDB.Repositories.Authentication
  isExternal: false
  name: Cqrs.MongoDB.Repositories.Authentication
  nameWithType: Cqrs.MongoDB.Repositories.Authentication
  fullName: Cqrs.MongoDB.Repositories.Authentication
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Cqrs.Entities.Entity
  commentId: T:Cqrs.Entities.Entity
  parent: Cqrs.Entities
  isExternal: false
  name: Entity
  nameWithType: Entity
  fullName: Cqrs.Entities.Entity
- uid: Cqrs.MongoDB.Entities.MongoEntity
  commentId: T:Cqrs.MongoDB.Entities.MongoEntity
  parent: Cqrs.MongoDB.Entities
  isExternal: false
  name: MongoEntity
  nameWithType: MongoEntity
  fullName: Cqrs.MongoDB.Entities.MongoEntity
- uid: Cqrs.Entities.IEntity
  commentId: T:Cqrs.Entities.IEntity
  parent: Cqrs.Entities
  isExternal: false
  name: IEntity
  nameWithType: IEntity
  fullName: Cqrs.Entities.IEntity
- uid: Cqrs.MongoDB.Entities.MongoEntity.Rsn
  commentId: P:Cqrs.MongoDB.Entities.MongoEntity.Rsn
  parent: Cqrs.MongoDB.Entities.MongoEntity
  isExternal: false
  name: Rsn
  nameWithType: MongoEntity.Rsn
  fullName: Cqrs.MongoDB.Entities.MongoEntity.Rsn
- uid: Cqrs.MongoDB.Entities.MongoEntity.SortingOrder
  commentId: P:Cqrs.MongoDB.Entities.MongoEntity.SortingOrder
  parent: Cqrs.MongoDB.Entities.MongoEntity
  isExternal: false
  name: SortingOrder
  nameWithType: MongoEntity.SortingOrder
  fullName: Cqrs.MongoDB.Entities.MongoEntity.SortingOrder
- uid: Cqrs.MongoDB.Entities.MongoEntity.IsLogicallyDeleted
  commentId: P:Cqrs.MongoDB.Entities.MongoEntity.IsLogicallyDeleted
  parent: Cqrs.MongoDB.Entities.MongoEntity
  isExternal: false
  name: IsLogicallyDeleted
  nameWithType: MongoEntity.IsLogicallyDeleted
  fullName: Cqrs.MongoDB.Entities.MongoEntity.IsLogicallyDeleted
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Authentication
  commentId: N:Cqrs.Authentication
  isExternal: false
  name: Cqrs.Authentication
  nameWithType: Cqrs.Authentication
  fullName: Cqrs.Authentication
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Cqrs.Entities
  commentId: N:Cqrs.Entities
  isExternal: false
  name: Cqrs.Entities
  nameWithType: Cqrs.Entities
  fullName: Cqrs.Entities
- uid: Cqrs.MongoDB.Entities
  commentId: N:Cqrs.MongoDB.Entities
  isExternal: false
  name: Cqrs.MongoDB.Entities
  nameWithType: Cqrs.MongoDB.Entities
  fullName: Cqrs.MongoDB.Entities
- uid: Cqrs.MongoDB.Repositories.Authentication.SingleSignOnToken.Token*
  commentId: Overload:Cqrs.MongoDB.Repositories.Authentication.SingleSignOnToken.Token
  isExternal: false
  name: Token
  nameWithType: SingleSignOnToken.Token
  fullName: Cqrs.MongoDB.Repositories.Authentication.SingleSignOnToken.Token
- uid: Cqrs.Authentication.ISingleSignOnToken.Token
  commentId: P:Cqrs.Authentication.ISingleSignOnToken.Token
  parent: Cqrs.Authentication.ISingleSignOnToken
  isExternal: false
  name: Token
  nameWithType: ISingleSignOnToken.Token
  fullName: Cqrs.Authentication.ISingleSignOnToken.Token
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: Cqrs.MongoDB.Repositories.Authentication.SingleSignOnToken.TimeOfExpiry*
  commentId: Overload:Cqrs.MongoDB.Repositories.Authentication.SingleSignOnToken.TimeOfExpiry
  isExternal: false
  name: TimeOfExpiry
  nameWithType: SingleSignOnToken.TimeOfExpiry
  fullName: Cqrs.MongoDB.Repositories.Authentication.SingleSignOnToken.TimeOfExpiry
- uid: Cqrs.Authentication.ISingleSignOnToken.TimeOfExpiry
  commentId: P:Cqrs.Authentication.ISingleSignOnToken.TimeOfExpiry
  parent: Cqrs.Authentication.ISingleSignOnToken
  isExternal: false
  name: TimeOfExpiry
  nameWithType: ISingleSignOnToken.TimeOfExpiry
  fullName: Cqrs.Authentication.ISingleSignOnToken.TimeOfExpiry
- uid: Cqrs.MongoDB.Repositories.Authentication.SingleSignOnToken.DateIssued*
  commentId: Overload:Cqrs.MongoDB.Repositories.Authentication.SingleSignOnToken.DateIssued
  isExternal: false
  name: DateIssued
  nameWithType: SingleSignOnToken.DateIssued
  fullName: Cqrs.MongoDB.Repositories.Authentication.SingleSignOnToken.DateIssued
- uid: Cqrs.Authentication.ISingleSignOnToken.DateIssued
  commentId: P:Cqrs.Authentication.ISingleSignOnToken.DateIssued
  parent: Cqrs.Authentication.ISingleSignOnToken
  isExternal: false
  name: DateIssued
  nameWithType: ISingleSignOnToken.DateIssued
  fullName: Cqrs.Authentication.ISingleSignOnToken.DateIssued
- uid: Cqrs.MongoDB.Repositories.Authentication.SingleSignOnToken.Token
  commentId: P:Cqrs.MongoDB.Repositories.Authentication.SingleSignOnToken.Token
- uid: Cqrs.MongoDB.Repositories.Authentication.SingleSignOnToken.Serialise*
  commentId: Overload:Cqrs.MongoDB.Repositories.Authentication.SingleSignOnToken.Serialise
  isExternal: false
  name: Serialise
  nameWithType: SingleSignOnToken.Serialise
  fullName: Cqrs.MongoDB.Repositories.Authentication.SingleSignOnToken.Serialise
- uid: Cqrs.Authentication.ISingleSignOnToken.Serialise
  commentId: M:Cqrs.Authentication.ISingleSignOnToken.Serialise
  parent: Cqrs.Authentication.ISingleSignOnToken
  isExternal: false
  name: Serialise()
  nameWithType: ISingleSignOnToken.Serialise()
  fullName: Cqrs.Authentication.ISingleSignOnToken.Serialise()
  spec.csharp:
  - uid: Cqrs.Authentication.ISingleSignOnToken.Serialise
    name: Serialise
    nameWithType: ISingleSignOnToken.Serialise
    fullName: Cqrs.Authentication.ISingleSignOnToken.Serialise
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Authentication.ISingleSignOnToken.Serialise
    name: Serialise
    nameWithType: ISingleSignOnToken.Serialise
    fullName: Cqrs.Authentication.ISingleSignOnToken.Serialise
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
