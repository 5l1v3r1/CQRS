### YamlMime:ManagedReference
items:
- uid: Cqrs.Azure.ServiceBus.Tests.Unit.TestCommand
  commentId: T:Cqrs.Azure.ServiceBus.Tests.Unit.TestCommand
  id: TestCommand
  parent: Cqrs.Azure.ServiceBus.Tests.Unit
  children:
  - Cqrs.Azure.ServiceBus.Tests.Unit.TestCommand.AuthenticationToken
  - Cqrs.Azure.ServiceBus.Tests.Unit.TestCommand.CorrelationId
  - Cqrs.Azure.ServiceBus.Tests.Unit.TestCommand.ExpectedVersion
  - Cqrs.Azure.ServiceBus.Tests.Unit.TestCommand.Frameworks
  - Cqrs.Azure.ServiceBus.Tests.Unit.TestCommand.Id
  - Cqrs.Azure.ServiceBus.Tests.Unit.TestCommand.OriginatingFramework
  langs:
  - csharp
  - vb
  name: TestCommand
  nameWithType: TestCommand
  fullName: Cqrs.Azure.ServiceBus.Tests.Unit.TestCommand
  type: Class
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.ServiceBus.Tests.Unit/TestCommand.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: TestCommand
    path: Framework/Azure/Cqrs.Azure.ServiceBus.Tests.Unit/TestCommand.cs
    startLine: 16
  assemblies:
  - Cqrs.Azure.ServiceBus.Tests.Unit
  namespace: Cqrs.Azure.ServiceBus.Tests.Unit
  syntax:
    content: 'public class TestCommand : ICommand<Guid>, IMessageWithAuthenticationToken<Guid>, IMessage'
    content.vb: >-
      Public Class TestCommand
          Implements ICommand(Of Guid), IMessageWithAuthenticationToken(Of Guid), IMessage
  inheritance:
  - System.Object
  implements:
  - Cqrs.Commands.ICommand{System.Guid}
  - Cqrs.Messages.IMessageWithAuthenticationToken{System.Guid}
  - Cqrs.Messages.IMessage
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Cqrs.Azure.ServiceBus.Tests.Unit.TestCommand.AuthenticationToken
  commentId: P:Cqrs.Azure.ServiceBus.Tests.Unit.TestCommand.AuthenticationToken
  id: AuthenticationToken
  parent: Cqrs.Azure.ServiceBus.Tests.Unit.TestCommand
  langs:
  - csharp
  - vb
  name: AuthenticationToken
  nameWithType: TestCommand.AuthenticationToken
  fullName: Cqrs.Azure.ServiceBus.Tests.Unit.TestCommand.AuthenticationToken
  type: Property
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.ServiceBus.Tests.Unit/TestCommand.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: AuthenticationToken
    path: Framework/Azure/Cqrs.Azure.ServiceBus.Tests.Unit/TestCommand.cs
    startLine: 20
  assemblies:
  - Cqrs.Azure.ServiceBus.Tests.Unit
  namespace: Cqrs.Azure.ServiceBus.Tests.Unit
  syntax:
    content: >-
      [DataMember]

      public Guid AuthenticationToken { get; set; }
    parameters: []
    return:
      type: System.Guid
    content.vb: >-
      <DataMember>

      Public Property AuthenticationToken As Guid
  overload: Cqrs.Azure.ServiceBus.Tests.Unit.TestCommand.AuthenticationToken*
  implements:
  - Cqrs.Messages.IMessageWithAuthenticationToken{System.Guid}.AuthenticationToken
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Cqrs.Azure.ServiceBus.Tests.Unit.TestCommand.ExpectedVersion
  commentId: P:Cqrs.Azure.ServiceBus.Tests.Unit.TestCommand.ExpectedVersion
  id: ExpectedVersion
  parent: Cqrs.Azure.ServiceBus.Tests.Unit.TestCommand
  langs:
  - csharp
  - vb
  name: ExpectedVersion
  nameWithType: TestCommand.ExpectedVersion
  fullName: Cqrs.Azure.ServiceBus.Tests.Unit.TestCommand.ExpectedVersion
  type: Property
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.ServiceBus.Tests.Unit/TestCommand.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: ExpectedVersion
    path: Framework/Azure/Cqrs.Azure.ServiceBus.Tests.Unit/TestCommand.cs
    startLine: 27
  assemblies:
  - Cqrs.Azure.ServiceBus.Tests.Unit
  namespace: Cqrs.Azure.ServiceBus.Tests.Unit
  syntax:
    content: >-
      [DataMember]

      public int ExpectedVersion { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <DataMember>

      Public Property ExpectedVersion As Integer
  overload: Cqrs.Azure.ServiceBus.Tests.Unit.TestCommand.ExpectedVersion*
  implements:
  - Cqrs.Commands.ICommand{System.Guid}.ExpectedVersion
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Cqrs.Azure.ServiceBus.Tests.Unit.TestCommand.Id
  commentId: P:Cqrs.Azure.ServiceBus.Tests.Unit.TestCommand.Id
  id: Id
  parent: Cqrs.Azure.ServiceBus.Tests.Unit.TestCommand
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: TestCommand.Id
  fullName: Cqrs.Azure.ServiceBus.Tests.Unit.TestCommand.Id
  type: Property
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.ServiceBus.Tests.Unit/TestCommand.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Id
    path: Framework/Azure/Cqrs.Azure.ServiceBus.Tests.Unit/TestCommand.cs
    startLine: 32
  assemblies:
  - Cqrs.Azure.ServiceBus.Tests.Unit
  namespace: Cqrs.Azure.ServiceBus.Tests.Unit
  syntax:
    content: >-
      [DataMember]

      public Guid Id { get; set; }
    parameters: []
    return:
      type: System.Guid
    content.vb: >-
      <DataMember>

      Public Property Id As Guid
  overload: Cqrs.Azure.ServiceBus.Tests.Unit.TestCommand.Id*
  implements:
  - Cqrs.Commands.ICommand{System.Guid}.Id
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Cqrs.Azure.ServiceBus.Tests.Unit.TestCommand.CorrelationId
  commentId: P:Cqrs.Azure.ServiceBus.Tests.Unit.TestCommand.CorrelationId
  id: CorrelationId
  parent: Cqrs.Azure.ServiceBus.Tests.Unit.TestCommand
  langs:
  - csharp
  - vb
  name: CorrelationId
  nameWithType: TestCommand.CorrelationId
  fullName: Cqrs.Azure.ServiceBus.Tests.Unit.TestCommand.CorrelationId
  type: Property
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.ServiceBus.Tests.Unit/TestCommand.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: CorrelationId
    path: Framework/Azure/Cqrs.Azure.ServiceBus.Tests.Unit/TestCommand.cs
    startLine: 37
  assemblies:
  - Cqrs.Azure.ServiceBus.Tests.Unit
  namespace: Cqrs.Azure.ServiceBus.Tests.Unit
  syntax:
    content: >-
      [DataMember]

      public Guid CorrelationId { get; set; }
    parameters: []
    return:
      type: System.Guid
    content.vb: >-
      <DataMember>

      Public Property CorrelationId As Guid
  overload: Cqrs.Azure.ServiceBus.Tests.Unit.TestCommand.CorrelationId*
  implements:
  - Cqrs.Messages.IMessage.CorrelationId
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Cqrs.Azure.ServiceBus.Tests.Unit.TestCommand.OriginatingFramework
  commentId: P:Cqrs.Azure.ServiceBus.Tests.Unit.TestCommand.OriginatingFramework
  id: OriginatingFramework
  parent: Cqrs.Azure.ServiceBus.Tests.Unit.TestCommand
  langs:
  - csharp
  - vb
  name: OriginatingFramework
  nameWithType: TestCommand.OriginatingFramework
  fullName: Cqrs.Azure.ServiceBus.Tests.Unit.TestCommand.OriginatingFramework
  type: Property
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.ServiceBus.Tests.Unit/TestCommand.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: OriginatingFramework
    path: Framework/Azure/Cqrs.Azure.ServiceBus.Tests.Unit/TestCommand.cs
    startLine: 43
  assemblies:
  - Cqrs.Azure.ServiceBus.Tests.Unit
  namespace: Cqrs.Azure.ServiceBus.Tests.Unit
  summary: "\nThe originating framework this message was sent from.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public string OriginatingFramework { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <DataMember>

      Public Property OriginatingFramework As String
  overload: Cqrs.Azure.ServiceBus.Tests.Unit.TestCommand.OriginatingFramework*
  implements:
  - Cqrs.Messages.IMessage.OriginatingFramework
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Cqrs.Azure.ServiceBus.Tests.Unit.TestCommand.Frameworks
  commentId: P:Cqrs.Azure.ServiceBus.Tests.Unit.TestCommand.Frameworks
  id: Frameworks
  parent: Cqrs.Azure.ServiceBus.Tests.Unit.TestCommand
  langs:
  - csharp
  - vb
  name: Frameworks
  nameWithType: TestCommand.Frameworks
  fullName: Cqrs.Azure.ServiceBus.Tests.Unit.TestCommand.Frameworks
  type: Property
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.ServiceBus.Tests.Unit/TestCommand.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Frameworks
    path: Framework/Azure/Cqrs.Azure.ServiceBus.Tests.Unit/TestCommand.cs
    startLine: 49
  assemblies:
  - Cqrs.Azure.ServiceBus.Tests.Unit
  namespace: Cqrs.Azure.ServiceBus.Tests.Unit
  summary: "\nThe frameworks this <xref href=\"Cqrs.Messages.IMessage\" data-throw-if-not-resolved=\"false\"></xref> has been delivered to/sent via already.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public IEnumerable<string> Frameworks { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: >-
      <DataMember>

      Public Property Frameworks As IEnumerable(Of String)
  overload: Cqrs.Azure.ServiceBus.Tests.Unit.TestCommand.Frameworks*
  implements:
  - Cqrs.Messages.IMessage.Frameworks
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Cqrs.Azure.ServiceBus.Tests.Unit
  commentId: N:Cqrs.Azure.ServiceBus.Tests.Unit
  isExternal: false
  name: Cqrs.Azure.ServiceBus.Tests.Unit
  nameWithType: Cqrs.Azure.ServiceBus.Tests.Unit
  fullName: Cqrs.Azure.ServiceBus.Tests.Unit
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Cqrs.Commands.ICommand{System.Guid}
  commentId: T:Cqrs.Commands.ICommand{System.Guid}
  parent: Cqrs.Commands
  definition: Cqrs.Commands.ICommand`1
  name: ICommand<Guid>
  nameWithType: ICommand<Guid>
  fullName: Cqrs.Commands.ICommand<System.Guid>
  nameWithType.vb: ICommand(Of Guid)
  fullName.vb: Cqrs.Commands.ICommand(Of System.Guid)
  name.vb: ICommand(Of Guid)
  spec.csharp:
  - uid: Cqrs.Commands.ICommand`1
    name: ICommand
    nameWithType: ICommand
    fullName: Cqrs.Commands.ICommand
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Commands.ICommand`1
    name: ICommand
    nameWithType: ICommand
    fullName: Cqrs.Commands.ICommand
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Messages.IMessageWithAuthenticationToken{System.Guid}
  commentId: T:Cqrs.Messages.IMessageWithAuthenticationToken{System.Guid}
  parent: Cqrs.Messages
  definition: Cqrs.Messages.IMessageWithAuthenticationToken`1
  name: IMessageWithAuthenticationToken<Guid>
  nameWithType: IMessageWithAuthenticationToken<Guid>
  fullName: Cqrs.Messages.IMessageWithAuthenticationToken<System.Guid>
  nameWithType.vb: IMessageWithAuthenticationToken(Of Guid)
  fullName.vb: Cqrs.Messages.IMessageWithAuthenticationToken(Of System.Guid)
  name.vb: IMessageWithAuthenticationToken(Of Guid)
  spec.csharp:
  - uid: Cqrs.Messages.IMessageWithAuthenticationToken`1
    name: IMessageWithAuthenticationToken
    nameWithType: IMessageWithAuthenticationToken
    fullName: Cqrs.Messages.IMessageWithAuthenticationToken
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Messages.IMessageWithAuthenticationToken`1
    name: IMessageWithAuthenticationToken
    nameWithType: IMessageWithAuthenticationToken
    fullName: Cqrs.Messages.IMessageWithAuthenticationToken
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Messages.IMessage
  commentId: T:Cqrs.Messages.IMessage
  parent: Cqrs.Messages
  isExternal: false
  name: IMessage
  nameWithType: IMessage
  fullName: Cqrs.Messages.IMessage
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Cqrs.Commands.ICommand`1
  commentId: T:Cqrs.Commands.ICommand`1
  isExternal: false
  name: ICommand<TAuthenticationToken>
  nameWithType: ICommand<TAuthenticationToken>
  fullName: Cqrs.Commands.ICommand<TAuthenticationToken>
  nameWithType.vb: ICommand(Of TAuthenticationToken)
  fullName.vb: Cqrs.Commands.ICommand(Of TAuthenticationToken)
  name.vb: ICommand(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Commands.ICommand`1
    name: ICommand
    nameWithType: ICommand
    fullName: Cqrs.Commands.ICommand
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Commands.ICommand`1
    name: ICommand
    nameWithType: ICommand
    fullName: Cqrs.Commands.ICommand
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Commands
  commentId: N:Cqrs.Commands
  isExternal: false
  name: Cqrs.Commands
  nameWithType: Cqrs.Commands
  fullName: Cqrs.Commands
- uid: Cqrs.Messages.IMessageWithAuthenticationToken`1
  commentId: T:Cqrs.Messages.IMessageWithAuthenticationToken`1
  isExternal: false
  name: IMessageWithAuthenticationToken<TAuthenticationToken>
  nameWithType: IMessageWithAuthenticationToken<TAuthenticationToken>
  fullName: Cqrs.Messages.IMessageWithAuthenticationToken<TAuthenticationToken>
  nameWithType.vb: IMessageWithAuthenticationToken(Of TAuthenticationToken)
  fullName.vb: Cqrs.Messages.IMessageWithAuthenticationToken(Of TAuthenticationToken)
  name.vb: IMessageWithAuthenticationToken(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Messages.IMessageWithAuthenticationToken`1
    name: IMessageWithAuthenticationToken
    nameWithType: IMessageWithAuthenticationToken
    fullName: Cqrs.Messages.IMessageWithAuthenticationToken
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Messages.IMessageWithAuthenticationToken`1
    name: IMessageWithAuthenticationToken
    nameWithType: IMessageWithAuthenticationToken
    fullName: Cqrs.Messages.IMessageWithAuthenticationToken
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Messages
  commentId: N:Cqrs.Messages
  isExternal: false
  name: Cqrs.Messages
  nameWithType: Cqrs.Messages
  fullName: Cqrs.Messages
- uid: Cqrs.Azure.ServiceBus.Tests.Unit.TestCommand.AuthenticationToken*
  commentId: Overload:Cqrs.Azure.ServiceBus.Tests.Unit.TestCommand.AuthenticationToken
  isExternal: false
  name: AuthenticationToken
  nameWithType: TestCommand.AuthenticationToken
  fullName: Cqrs.Azure.ServiceBus.Tests.Unit.TestCommand.AuthenticationToken
- uid: Cqrs.Messages.IMessageWithAuthenticationToken{System.Guid}.AuthenticationToken
  commentId: P:Cqrs.Messages.IMessageWithAuthenticationToken{System.Guid}.AuthenticationToken
  parent: Cqrs.Messages.IMessageWithAuthenticationToken{System.Guid}
  definition: Cqrs.Messages.IMessageWithAuthenticationToken`1.AuthenticationToken
  name: AuthenticationToken
  nameWithType: IMessageWithAuthenticationToken<Guid>.AuthenticationToken
  fullName: Cqrs.Messages.IMessageWithAuthenticationToken<System.Guid>.AuthenticationToken
  nameWithType.vb: IMessageWithAuthenticationToken(Of Guid).AuthenticationToken
  fullName.vb: Cqrs.Messages.IMessageWithAuthenticationToken(Of System.Guid).AuthenticationToken
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: Cqrs.Messages.IMessageWithAuthenticationToken`1.AuthenticationToken
  commentId: P:Cqrs.Messages.IMessageWithAuthenticationToken`1.AuthenticationToken
  isExternal: false
  name: AuthenticationToken
  nameWithType: IMessageWithAuthenticationToken<TAuthenticationToken>.AuthenticationToken
  fullName: Cqrs.Messages.IMessageWithAuthenticationToken<TAuthenticationToken>.AuthenticationToken
  nameWithType.vb: IMessageWithAuthenticationToken(Of TAuthenticationToken).AuthenticationToken
  fullName.vb: Cqrs.Messages.IMessageWithAuthenticationToken(Of TAuthenticationToken).AuthenticationToken
- uid: Cqrs.Azure.ServiceBus.Tests.Unit.TestCommand.ExpectedVersion*
  commentId: Overload:Cqrs.Azure.ServiceBus.Tests.Unit.TestCommand.ExpectedVersion
  isExternal: false
  name: ExpectedVersion
  nameWithType: TestCommand.ExpectedVersion
  fullName: Cqrs.Azure.ServiceBus.Tests.Unit.TestCommand.ExpectedVersion
- uid: Cqrs.Commands.ICommand{System.Guid}.ExpectedVersion
  commentId: P:Cqrs.Commands.ICommand{System.Guid}.ExpectedVersion
  parent: Cqrs.Commands.ICommand{System.Guid}
  definition: Cqrs.Commands.ICommand`1.ExpectedVersion
  name: ExpectedVersion
  nameWithType: ICommand<Guid>.ExpectedVersion
  fullName: Cqrs.Commands.ICommand<System.Guid>.ExpectedVersion
  nameWithType.vb: ICommand(Of Guid).ExpectedVersion
  fullName.vb: Cqrs.Commands.ICommand(Of System.Guid).ExpectedVersion
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Cqrs.Commands.ICommand`1.ExpectedVersion
  commentId: P:Cqrs.Commands.ICommand`1.ExpectedVersion
  isExternal: false
  name: ExpectedVersion
  nameWithType: ICommand<TAuthenticationToken>.ExpectedVersion
  fullName: Cqrs.Commands.ICommand<TAuthenticationToken>.ExpectedVersion
  nameWithType.vb: ICommand(Of TAuthenticationToken).ExpectedVersion
  fullName.vb: Cqrs.Commands.ICommand(Of TAuthenticationToken).ExpectedVersion
- uid: Cqrs.Azure.ServiceBus.Tests.Unit.TestCommand.Id*
  commentId: Overload:Cqrs.Azure.ServiceBus.Tests.Unit.TestCommand.Id
  isExternal: false
  name: Id
  nameWithType: TestCommand.Id
  fullName: Cqrs.Azure.ServiceBus.Tests.Unit.TestCommand.Id
- uid: Cqrs.Commands.ICommand{System.Guid}.Id
  commentId: P:Cqrs.Commands.ICommand{System.Guid}.Id
  parent: Cqrs.Commands.ICommand{System.Guid}
  definition: Cqrs.Commands.ICommand`1.Id
  name: Id
  nameWithType: ICommand<Guid>.Id
  fullName: Cqrs.Commands.ICommand<System.Guid>.Id
  nameWithType.vb: ICommand(Of Guid).Id
  fullName.vb: Cqrs.Commands.ICommand(Of System.Guid).Id
- uid: Cqrs.Commands.ICommand`1.Id
  commentId: P:Cqrs.Commands.ICommand`1.Id
  isExternal: false
  name: Id
  nameWithType: ICommand<TAuthenticationToken>.Id
  fullName: Cqrs.Commands.ICommand<TAuthenticationToken>.Id
  nameWithType.vb: ICommand(Of TAuthenticationToken).Id
  fullName.vb: Cqrs.Commands.ICommand(Of TAuthenticationToken).Id
- uid: Cqrs.Azure.ServiceBus.Tests.Unit.TestCommand.CorrelationId*
  commentId: Overload:Cqrs.Azure.ServiceBus.Tests.Unit.TestCommand.CorrelationId
  isExternal: false
  name: CorrelationId
  nameWithType: TestCommand.CorrelationId
  fullName: Cqrs.Azure.ServiceBus.Tests.Unit.TestCommand.CorrelationId
- uid: Cqrs.Messages.IMessage.CorrelationId
  commentId: P:Cqrs.Messages.IMessage.CorrelationId
  parent: Cqrs.Messages.IMessage
  isExternal: false
  name: CorrelationId
  nameWithType: IMessage.CorrelationId
  fullName: Cqrs.Messages.IMessage.CorrelationId
- uid: Cqrs.Azure.ServiceBus.Tests.Unit.TestCommand.OriginatingFramework*
  commentId: Overload:Cqrs.Azure.ServiceBus.Tests.Unit.TestCommand.OriginatingFramework
  isExternal: false
  name: OriginatingFramework
  nameWithType: TestCommand.OriginatingFramework
  fullName: Cqrs.Azure.ServiceBus.Tests.Unit.TestCommand.OriginatingFramework
- uid: Cqrs.Messages.IMessage.OriginatingFramework
  commentId: P:Cqrs.Messages.IMessage.OriginatingFramework
  parent: Cqrs.Messages.IMessage
  isExternal: false
  name: OriginatingFramework
  nameWithType: IMessage.OriginatingFramework
  fullName: Cqrs.Messages.IMessage.OriginatingFramework
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Cqrs.Azure.ServiceBus.Tests.Unit.TestCommand.Frameworks*
  commentId: Overload:Cqrs.Azure.ServiceBus.Tests.Unit.TestCommand.Frameworks
  isExternal: false
  name: Frameworks
  nameWithType: TestCommand.Frameworks
  fullName: Cqrs.Azure.ServiceBus.Tests.Unit.TestCommand.Frameworks
- uid: Cqrs.Messages.IMessage.Frameworks
  commentId: P:Cqrs.Messages.IMessage.Frameworks
  parent: Cqrs.Messages.IMessage
  isExternal: false
  name: Frameworks
  nameWithType: IMessage.Frameworks
  fullName: Cqrs.Messages.IMessage.Frameworks
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
