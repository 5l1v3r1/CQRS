<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classCqrs_1_1Hosts_1_1CqrsHttpApplication" kind="class" language="C#" prot="public" abstract="yes">
    <compoundname>Cqrs::Hosts::CqrsHttpApplication</compoundname>
    <basecompoundref prot="public" virt="non-virtual">HttpApplication</basecompoundref>
    <basecompoundref refid="classCqrs_1_1Hosts_1_1CqrsHttpApplication" prot="public" virt="non-virtual">Cqrs.Hosts.CqrsHttpApplication</basecompoundref>
    <templateparamlist>
      <param>
        <type>TAuthenticationToken</type>
      </param>
    </templateparamlist>
      <sectiondef kind="property">
      <memberdef kind="property" id="classCqrs_1_1Hosts_1_1CqrsHttpApplication_a870e055465097455e08bfbef1af723cf_1a870e055465097455e08bfbef1af723cf" prot="protected" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="yes" privatesettable="no" protectedsettable="no">
        <type>Type []</type>
        <definition>Type [] Cqrs.Hosts.CqrsHttpApplication&lt; TAuthenticationToken &gt;.HandlerTypes</definition>
        <argsstring></argsstring>
        <name>HandlerTypes</name>
        <briefdescription>
<para>Each Type will be traced back to it&apos;s assembly, and that assembly will be scanned for other handlers to auto register. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/a99f043f4d1af837/Framework/Cqrs/Hosts/CqrsHttpApplication.cs" line="34" column="1" bodyfile="/opt/buildAgent/work/a99f043f4d1af837/Framework/Cqrs/Hosts/CqrsHttpApplication.cs" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="classCqrs_1_1Hosts_1_1CqrsHttpApplication_a34dec705cd51c34b8440c99795297635_1a34dec705cd51c34b8440c99795297635" prot="protected" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="yes" privatesettable="no" protectedsettable="no">
        <type><ref refid="interfaceCqrs_1_1Events_1_1IEventReceiver" kindref="compound">IEventReceiver</ref></type>
        <definition>IEventReceiver Cqrs.Hosts.CqrsHttpApplication&lt; TAuthenticationToken &gt;.EventBus</definition>
        <argsstring></argsstring>
        <name>EventBus</name>
        <briefdescription>
<para>The IEventReceiver that will be configured to receive <ref refid="" kindref="compound">events</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/a99f043f4d1af837/Framework/Cqrs/Hosts/CqrsHttpApplication.cs" line="39" column="1" bodyfile="/opt/buildAgent/work/a99f043f4d1af837/Framework/Cqrs/Hosts/CqrsHttpApplication.cs" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="classCqrs_1_1Hosts_1_1CqrsHttpApplication_a1d55f0878c5372c9370069d5af7318c4_1a1d55f0878c5372c9370069d5af7318c4" prot="protected" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="yes" privatesettable="no" protectedsettable="no">
        <type><ref refid="interfaceCqrs_1_1Commands_1_1ICommandReceiver" kindref="compound">ICommandReceiver</ref></type>
        <definition>ICommandReceiver Cqrs.Hosts.CqrsHttpApplication&lt; TAuthenticationToken &gt;.CommandBus</definition>
        <argsstring></argsstring>
        <name>CommandBus</name>
        <briefdescription>
<para>The ICommandReceiver that will be configured to receive <ref refid="" kindref="compound">commands</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/a99f043f4d1af837/Framework/Cqrs/Hosts/CqrsHttpApplication.cs" line="44" column="1" bodyfile="/opt/buildAgent/work/a99f043f4d1af837/Framework/Cqrs/Hosts/CqrsHttpApplication.cs" bodystart="44" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classCqrs_1_1Hosts_1_1CqrsHttpApplication_ad9a401ae5cbab0fdba79f0cd6873e7a7_1ad9a401ae5cbab0fdba79f0cd6873e7a7" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Cqrs.Hosts.CqrsHttpApplication&lt; TAuthenticationToken &gt;.CqrsHttpApplication</definition>
        <argsstring>()</argsstring>
        <name>CqrsHttpApplication</name>
        <briefdescription>
<para>Instantiate a new instance of a <ref refid="classCqrs_1_1Hosts_1_1CqrsHttpApplication" kindref="compound">CqrsHttpApplication</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/a99f043f4d1af837/Framework/Cqrs/Hosts/CqrsHttpApplication.cs" line="49" column="1" bodyfile="/opt/buildAgent/work/a99f043f4d1af837/Framework/Cqrs/Hosts/CqrsHttpApplication.cs" bodystart="49" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Hosts_1_1CqrsHttpApplication_a70935b5b1be08e9ce36a074adaf722f0_1a70935b5b1be08e9ce36a074adaf722f0" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Cqrs.Hosts.CqrsHttpApplication&lt; TAuthenticationToken &gt;.Application_Start</definition>
        <argsstring>(object sender, EventArgs e)</argsstring>
        <name>Application_Start</name>
        <param>
          <type>object</type>
          <declname>sender</declname>
        </param>
        <param>
          <type>EventArgs</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Calls SetBuses, RegisterCommandAndEventHandlers, RegisterServiceParameterResolver, StartBuses and finally LogApplicationStarted. Gets executed once during the life cycle of the application when the first request for any resource in the application is made. A resource can be a page or an image in the application. If the server where the application is hosted is restarted then this is fired once again upon the first request for any resource in the application. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/a99f043f4d1af837/Framework/Cqrs/Hosts/CqrsHttpApplication.cs" line="59" column="1" bodyfile="/opt/buildAgent/work/a99f043f4d1af837/Framework/Cqrs/Hosts/CqrsHttpApplication.cs" bodystart="59" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Hosts_1_1CqrsHttpApplication_a32383855c81964c201f428910862301b_1a32383855c81964c201f428910862301b" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>abstract void</type>
        <definition>abstract void Cqrs.Hosts.CqrsHttpApplication&lt; TAuthenticationToken &gt;.SetBuses</definition>
        <argsstring>()</argsstring>
        <name>SetBuses</name>
        <briefdescription>
<para>Set EventBus and CommandBus. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/a99f043f4d1af837/Framework/Cqrs/Hosts/CqrsHttpApplication.cs" line="74" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Hosts_1_1CqrsHttpApplication_a5bcec157d45e63b486b8861ffe1d248b_1a5bcec157d45e63b486b8861ffe1d248b" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classCqrs_1_1Configuration_1_1BusRegistrar" kindref="compound">BusRegistrar</ref></type>
        <definition>virtual BusRegistrar Cqrs.Hosts.CqrsHttpApplication&lt; TAuthenticationToken &gt;.RegisterCommandAndEventHandlers</definition>
        <argsstring>()</argsstring>
        <name>RegisterCommandAndEventHandlers</name>
        <briefdescription>
<para>Start the BusRegistrar by calling BusRegistrar.Register(System.Type[]) passing HandlerTypes </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/a99f043f4d1af837/Framework/Cqrs/Hosts/CqrsHttpApplication.cs" line="79" column="1" bodyfile="/opt/buildAgent/work/a99f043f4d1af837/Framework/Cqrs/Hosts/CqrsHttpApplication.cs" bodystart="79" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Hosts_1_1CqrsHttpApplication_ac30a5d1239be61b0db2da51624fec3ac_1ac30a5d1239be61b0db2da51624fec3ac" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Cqrs.Hosts.CqrsHttpApplication&lt; TAuthenticationToken &gt;.RegisterServiceParameterResolver</definition>
        <argsstring>()</argsstring>
        <name>RegisterServiceParameterResolver</name>
        <briefdescription>
<para>Call the static &quot;RegisterDataContracts&quot; method on any IServiceParameterResolver we can find in the Assembly of any Type in HandlerTypes </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/a99f043f4d1af837/Framework/Cqrs/Hosts/CqrsHttpApplication.cs" line="90" column="1" bodyfile="/opt/buildAgent/work/a99f043f4d1af837/Framework/Cqrs/Hosts/CqrsHttpApplication.cs" bodystart="90" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Hosts_1_1CqrsHttpApplication_afffcb7b14e91c59710678f5cfe0aa69e_1afffcb7b14e91c59710678f5cfe0aa69e" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Cqrs.Hosts.CqrsHttpApplication&lt; TAuthenticationToken &gt;.StartBuses</definition>
        <argsstring>()</argsstring>
        <name>StartBuses</name>
        <briefdescription>
<para>Starts the command bus and event bus receivers depending on configuration settings </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/a99f043f4d1af837/Framework/Cqrs/Hosts/CqrsHttpApplication.cs" line="111" column="1" bodyfile="/opt/buildAgent/work/a99f043f4d1af837/Framework/Cqrs/Hosts/CqrsHttpApplication.cs" bodystart="111" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Hosts_1_1CqrsHttpApplication_a025074f574a1095f0b2b03d7f402c9eb_1a025074f574a1095f0b2b03d7f402c9eb" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Cqrs.Hosts.CqrsHttpApplication&lt; TAuthenticationToken &gt;.LogApplicationStarted</definition>
        <argsstring>()</argsstring>
        <name>LogApplicationStarted</name>
        <briefdescription>
<para>Log that the application has started </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/a99f043f4d1af837/Framework/Cqrs/Hosts/CqrsHttpApplication.cs" line="129" column="1" bodyfile="/opt/buildAgent/work/a99f043f4d1af837/Framework/Cqrs/Hosts/CqrsHttpApplication.cs" bodystart="129" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Hosts_1_1CqrsHttpApplication_a2ce981f49caffda9125d8266dbf16d85_1a2ce981f49caffda9125d8266dbf16d85" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Cqrs.Hosts.CqrsHttpApplication&lt; TAuthenticationToken &gt;.Application_End</definition>
        <argsstring>(object sender, EventArgs e)</argsstring>
        <name>Application_End</name>
        <param>
          <type>object</type>
          <declname>sender</declname>
        </param>
        <param>
          <type>EventArgs</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Gets executed once during the life cycle of the application when it is unloaded. This is normally fired when the application is taken off-line or when the server is stopped. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/a99f043f4d1af837/Framework/Cqrs/Hosts/CqrsHttpApplication.cs" line="148" column="1" bodyfile="/opt/buildAgent/work/a99f043f4d1af837/Framework/Cqrs/Hosts/CqrsHttpApplication.cs" bodystart="148" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Hosts_1_1CqrsHttpApplication_a91a9303aecaa06bfa44d566c8d9ef20e_1a91a9303aecaa06bfa44d566c8d9ef20e" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Cqrs.Hosts.CqrsHttpApplication&lt; TAuthenticationToken &gt;.Application_Error</definition>
        <argsstring>(object sender, EventArgs e)</argsstring>
        <name>Application_Error</name>
        <param>
          <type>object</type>
          <declname>sender</declname>
        </param>
        <param>
          <type>EventArgs</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Logs all error via ILogger.LogError unless the execution is SecurityException, in which case ILogger.LogWarning is used. Gets executed when any un-handled Exception/error occurs anywhere in the application. Any un-handled Exception here means exception which are not caught using try catch block. Also if you have custom errors enabled in your application i.e. in web.config file then the configuration in web.config takes precedence and all errors will be directed to the file mentioned in the tag. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/a99f043f4d1af837/Framework/Cqrs/Hosts/CqrsHttpApplication.cs" line="167" column="1" bodyfile="/opt/buildAgent/work/a99f043f4d1af837/Framework/Cqrs/Hosts/CqrsHttpApplication.cs" bodystart="167" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Hosts_1_1CqrsHttpApplication_a2a41ad4d59c3e91a03f7e23ad0ba0f03_1a2a41ad4d59c3e91a03f7e23ad0ba0f03" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Cqrs.Hosts.CqrsHttpApplication&lt; TAuthenticationToken &gt;.Application_BeginRequest</definition>
        <argsstring>(object sender, EventArgs e)</argsstring>
        <name>Application_BeginRequest</name>
        <param>
          <type>object</type>
          <declname>sender</declname>
        </param>
        <param>
          <type>EventArgs</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Gets executed for each and every request which comes to the application to generate a new CorrelationId and then sets the generated CorrelationId via ICorrelationIdHelper.SetCorrelationId. The generated CorrelationId is also set in the HttpResponse.Headers. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/a99f043f4d1af837/Framework/Cqrs/Hosts/CqrsHttpApplication.cs" line="187" column="1" bodyfile="/opt/buildAgent/work/a99f043f4d1af837/Framework/Cqrs/Hosts/CqrsHttpApplication.cs" bodystart="187" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Hosts_1_1CqrsHttpApplication_afb26dffeafd3277e90cedbff5c540ce8_1afb26dffeafd3277e90cedbff5c540ce8" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Cqrs.Hosts.CqrsHttpApplication&lt; TAuthenticationToken &gt;.Application_EndRequest</definition>
        <argsstring>(object sender, EventArgs e)</argsstring>
        <name>Application_EndRequest</name>
        <param>
          <type>object</type>
          <declname>sender</declname>
        </param>
        <param>
          <type>EventArgs</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Gets executed after Application_BeginRequest and before the stream starts getting sent to the client. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/a99f043f4d1af837/Framework/Cqrs/Hosts/CqrsHttpApplication.cs" line="201" column="1" bodyfile="/opt/buildAgent/work/a99f043f4d1af837/Framework/Cqrs/Hosts/CqrsHttpApplication.cs" bodystart="201" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Hosts_1_1CqrsHttpApplication_a85d676edac10217631e6fd8d56fafb68_1a85d676edac10217631e6fd8d56fafb68" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Cqrs.Hosts.CqrsHttpApplication&lt; TAuthenticationToken &gt;.Application_AuthenticateRequest</definition>
        <argsstring>(object sender, EventArgs e)</argsstring>
        <name>Application_AuthenticateRequest</name>
        <param>
          <type>object</type>
          <declname>sender</declname>
        </param>
        <param>
          <type>EventArgs</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Gets executed after Application_BeginRequest. Override this method to extract any authentication token from the request and then call IAuthenticationTokenHelper&lt;TAuthenticationToken&gt;.SetAuthenticationToken. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/a99f043f4d1af837/Framework/Cqrs/Hosts/CqrsHttpApplication.cs" line="209" column="1" bodyfile="/opt/buildAgent/work/a99f043f4d1af837/Framework/Cqrs/Hosts/CqrsHttpApplication.cs" bodystart="209" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Hosts_1_1CqrsHttpApplication_aa8282b3d83bab81ebbeaa994e1688f98_1aa8282b3d83bab81ebbeaa994e1688f98" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Cqrs.Hosts.CqrsHttpApplication&lt; TAuthenticationToken &gt;.Session_Start</definition>
        <argsstring>(object sender, EventArgs e)</argsstring>
        <name>Session_Start</name>
        <param>
          <type>object</type>
          <declname>sender</declname>
        </param>
        <param>
          <type>EventArgs</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Makes a call to retrieve the HttpSessionState.SessionID. This is done so the session is generated at the beginning of the request. If this isn&apos;t called the session (when using WCF) is generated late in the pipeline, which can cause issues when trying to work with WCF. Gets executed after Application_AuthenticateRequest when a new session for a &quot;user&quot; starts such as a first request or after a session has expired. This event doesn&apos;t get triggered if you are not using sessions which can be disabled in the web.config. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/a99f043f4d1af837/Framework/Cqrs/Hosts/CqrsHttpApplication.cs" line="219" column="1" bodyfile="/opt/buildAgent/work/a99f043f4d1af837/Framework/Cqrs/Hosts/CqrsHttpApplication.cs" bodystart="219" bodyend="225"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Hosts_1_1CqrsHttpApplication_aa3f96ea07f9857dc76157ecaff0aa9c4_1aa3f96ea07f9857dc76157ecaff0aa9c4" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Cqrs.Hosts.CqrsHttpApplication&lt; TAuthenticationToken &gt;.Session_End</definition>
        <argsstring>(object sender, EventArgs e)</argsstring>
        <name>Session_End</name>
        <param>
          <type>object</type>
          <declname>sender</declname>
        </param>
        <param>
          <type>EventArgs</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Whenever a user&apos;s session in the application expires this gets executed. The session is no longer available or accessible. The session expiration time can be set in web.config file. By default session time out is set to 20 mins. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/a99f043f4d1af837/Framework/Cqrs/Hosts/CqrsHttpApplication.cs" line="231" column="1" bodyfile="/opt/buildAgent/work/a99f043f4d1af837/Framework/Cqrs/Hosts/CqrsHttpApplication.cs" bodystart="231" bodyend="233"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Hosts_1_1CqrsHttpApplication_a8743b89c0991c5dd609a639f04a0f771_1a8743b89c0991c5dd609a639f04a0f771" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>override void</type>
        <definition>override void Cqrs.Hosts.CqrsHttpApplication&lt; TAuthenticationToken &gt;.Application_AuthenticateRequest</definition>
        <argsstring>(object sender, EventArgs e)</argsstring>
        <name>Application_AuthenticateRequest</name>
        <param>
          <type>object</type>
          <declname>sender</declname>
        </param>
        <param>
          <type>EventArgs</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Gets executed after CqrsHttpApplication.Application_BeginRequest. Extracts the authentication token looking for a KeyValuePair&lt;TKey,TValue&gt; where the key as defined by the System.Configuration.ConfigurationManager.AppSettings &quot;Cqrs.Web.AuthenticationTokenName&quot;, from the HttpRequest.Headers, if one isn&apos;t found we then try the following in order HttpRequest.Cookies, HttpRequest.Form or HttpRequest.QueryString; then calls IAuthenticationTokenHelper&lt;TAuthenticationToken&gt;.SetAuthenticationToken to make it accessible to others parts of the system if one is found. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/a99f043f4d1af837/Framework/Cqrs/Hosts/CqrsHttpApplication.cs" line="253" column="1" bodyfile="/opt/buildAgent/work/a99f043f4d1af837/Framework/Cqrs/Hosts/CqrsHttpApplication.cs" bodystart="253" bodyend="291"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Hosts_1_1CqrsHttpApplication_ae023401f81c3f085a36d08b547d15073_1ae023401f81c3f085a36d08b547d15073" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>override void</type>
        <definition>override void Cqrs.Hosts.CqrsHttpApplication&lt; TAuthenticationToken &gt;.SetBuses</definition>
        <argsstring>()</argsstring>
        <name>SetBuses</name>
        <briefdescription>
<para>Set CqrsHttpApplication.EventBus and CqrsHttpApplication.CommandBus. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/a99f043f4d1af837/Framework/Cqrs/Hosts/CqrsHttpApplication.cs" line="296" column="1" bodyfile="/opt/buildAgent/work/a99f043f4d1af837/Framework/Cqrs/Hosts/CqrsHttpApplication.cs" bodystart="296" bodyend="300"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>An HttpApplication that prepares and configures CQRS with use in IIS or other web server with knowledge of a basic type authentication token being sent in HttpRequest.Headers, HttpRequest.Cookies, HttpRequest.Form or HttpRequest.QueryString. A basic type authentication token is Guid, string or int. </para>    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>TAuthenticationToken</parametername>
</parameternamelist>
<parameterdescription>
<para>The Type of the authentication token.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="1855">
        <label>Cqrs.Hosts.CqrsHttpApplication&lt; TAuthenticationToken &gt;</label>
        <link refid="classCqrs_1_1Hosts_1_1CqrsHttpApplication"/>
        <childnode refid="1856" relation="public-inheritance">
        </childnode>
        <childnode refid="1857" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1856">
        <label>HttpApplication</label>
      </node>
      <node id="1857">
        <label>CqrsHttpApplication</label>
        <link refid="classCqrs_1_1Hosts_1_1CqrsHttpApplication"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1858">
        <label>Cqrs.Hosts.CqrsHttpApplication&lt; TAuthenticationToken &gt;</label>
        <link refid="classCqrs_1_1Hosts_1_1CqrsHttpApplication"/>
        <childnode refid="1859" relation="public-inheritance">
        </childnode>
        <childnode refid="1860" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1859">
        <label>HttpApplication</label>
      </node>
      <node id="1860">
        <label>CqrsHttpApplication</label>
        <link refid="classCqrs_1_1Hosts_1_1CqrsHttpApplication"/>
      </node>
    </collaborationgraph>
    <location file="/opt/buildAgent/work/a99f043f4d1af837/Framework/Cqrs/Hosts/CqrsHttpApplication.cs" line="243" column="1" bodyfile="/opt/buildAgent/work/a99f043f4d1af837/Framework/Cqrs/Hosts/CqrsHttpApplication.cs" bodystart="241" bodyend="303"/>
    <listofallmembers>
      <member refid="classCqrs_1_1Hosts_1_1CqrsHttpApplication_a85d676edac10217631e6fd8d56fafb68_1a85d676edac10217631e6fd8d56fafb68" prot="protected" virt="virtual"><scope>Cqrs::Hosts::CqrsHttpApplication</scope><name>Application_AuthenticateRequest</name></member>
      <member refid="classCqrs_1_1Hosts_1_1CqrsHttpApplication_a8743b89c0991c5dd609a639f04a0f771_1a8743b89c0991c5dd609a639f04a0f771" prot="protected" virt="non-virtual"><scope>Cqrs::Hosts::CqrsHttpApplication</scope><name>Application_AuthenticateRequest</name></member>
      <member refid="classCqrs_1_1Hosts_1_1CqrsHttpApplication_a2a41ad4d59c3e91a03f7e23ad0ba0f03_1a2a41ad4d59c3e91a03f7e23ad0ba0f03" prot="protected" virt="virtual"><scope>Cqrs::Hosts::CqrsHttpApplication</scope><name>Application_BeginRequest</name></member>
      <member refid="classCqrs_1_1Hosts_1_1CqrsHttpApplication_a2ce981f49caffda9125d8266dbf16d85_1a2ce981f49caffda9125d8266dbf16d85" prot="protected" virt="virtual"><scope>Cqrs::Hosts::CqrsHttpApplication</scope><name>Application_End</name></member>
      <member refid="classCqrs_1_1Hosts_1_1CqrsHttpApplication_afb26dffeafd3277e90cedbff5c540ce8_1afb26dffeafd3277e90cedbff5c540ce8" prot="protected" virt="virtual"><scope>Cqrs::Hosts::CqrsHttpApplication</scope><name>Application_EndRequest</name></member>
      <member refid="classCqrs_1_1Hosts_1_1CqrsHttpApplication_a91a9303aecaa06bfa44d566c8d9ef20e_1a91a9303aecaa06bfa44d566c8d9ef20e" prot="protected" virt="virtual"><scope>Cqrs::Hosts::CqrsHttpApplication</scope><name>Application_Error</name></member>
      <member refid="classCqrs_1_1Hosts_1_1CqrsHttpApplication_a70935b5b1be08e9ce36a074adaf722f0_1a70935b5b1be08e9ce36a074adaf722f0" prot="protected" virt="virtual"><scope>Cqrs::Hosts::CqrsHttpApplication</scope><name>Application_Start</name></member>
      <member refid="classCqrs_1_1Hosts_1_1CqrsHttpApplication_a1d55f0878c5372c9370069d5af7318c4_1a1d55f0878c5372c9370069d5af7318c4" prot="protected" virt="non-virtual"><scope>Cqrs::Hosts::CqrsHttpApplication</scope><name>CommandBus</name></member>
      <member refid="classCqrs_1_1Hosts_1_1CqrsHttpApplication_ad9a401ae5cbab0fdba79f0cd6873e7a7_1ad9a401ae5cbab0fdba79f0cd6873e7a7" prot="protected" virt="non-virtual"><scope>Cqrs::Hosts::CqrsHttpApplication</scope><name>CqrsHttpApplication</name></member>
      <member refid="classCqrs_1_1Hosts_1_1CqrsHttpApplication_a34dec705cd51c34b8440c99795297635_1a34dec705cd51c34b8440c99795297635" prot="protected" virt="non-virtual"><scope>Cqrs::Hosts::CqrsHttpApplication</scope><name>EventBus</name></member>
      <member refid="classCqrs_1_1Hosts_1_1CqrsHttpApplication_a870e055465097455e08bfbef1af723cf_1a870e055465097455e08bfbef1af723cf" prot="protected" virt="non-virtual"><scope>Cqrs::Hosts::CqrsHttpApplication</scope><name>HandlerTypes</name></member>
      <member refid="classCqrs_1_1Hosts_1_1CqrsHttpApplication_a025074f574a1095f0b2b03d7f402c9eb_1a025074f574a1095f0b2b03d7f402c9eb" prot="protected" virt="virtual"><scope>Cqrs::Hosts::CqrsHttpApplication</scope><name>LogApplicationStarted</name></member>
      <member refid="classCqrs_1_1Hosts_1_1CqrsHttpApplication_a5bcec157d45e63b486b8861ffe1d248b_1a5bcec157d45e63b486b8861ffe1d248b" prot="protected" virt="virtual"><scope>Cqrs::Hosts::CqrsHttpApplication</scope><name>RegisterCommandAndEventHandlers</name></member>
      <member refid="classCqrs_1_1Hosts_1_1CqrsHttpApplication_ac30a5d1239be61b0db2da51624fec3ac_1ac30a5d1239be61b0db2da51624fec3ac" prot="protected" virt="virtual"><scope>Cqrs::Hosts::CqrsHttpApplication</scope><name>RegisterServiceParameterResolver</name></member>
      <member refid="classCqrs_1_1Hosts_1_1CqrsHttpApplication_aa3f96ea07f9857dc76157ecaff0aa9c4_1aa3f96ea07f9857dc76157ecaff0aa9c4" prot="protected" virt="virtual"><scope>Cqrs::Hosts::CqrsHttpApplication</scope><name>Session_End</name></member>
      <member refid="classCqrs_1_1Hosts_1_1CqrsHttpApplication_aa8282b3d83bab81ebbeaa994e1688f98_1aa8282b3d83bab81ebbeaa994e1688f98" prot="protected" virt="virtual"><scope>Cqrs::Hosts::CqrsHttpApplication</scope><name>Session_Start</name></member>
      <member refid="classCqrs_1_1Hosts_1_1CqrsHttpApplication_a32383855c81964c201f428910862301b_1a32383855c81964c201f428910862301b" prot="protected" virt="pure-virtual"><scope>Cqrs::Hosts::CqrsHttpApplication</scope><name>SetBuses</name></member>
      <member refid="classCqrs_1_1Hosts_1_1CqrsHttpApplication_ae023401f81c3f085a36d08b547d15073_1ae023401f81c3f085a36d08b547d15073" prot="protected" virt="non-virtual"><scope>Cqrs::Hosts::CqrsHttpApplication</scope><name>SetBuses</name></member>
      <member refid="classCqrs_1_1Hosts_1_1CqrsHttpApplication_afffcb7b14e91c59710678f5cfe0aa69e_1afffcb7b14e91c59710678f5cfe0aa69e" prot="protected" virt="virtual"><scope>Cqrs::Hosts::CqrsHttpApplication</scope><name>StartBuses</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
