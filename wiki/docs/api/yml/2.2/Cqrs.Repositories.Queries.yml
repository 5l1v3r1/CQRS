### YamlMime:ManagedReference
items:
- uid: Cqrs.Repositories.Queries
  commentId: N:Cqrs.Repositories.Queries
  id: Cqrs.Repositories.Queries
  children:
  - Cqrs.Repositories.Queries.AndQueryPredicate
  - Cqrs.Repositories.Queries.CollectionResultQuery`2
  - Cqrs.Repositories.Queries.IAndQueryPredicate
  - Cqrs.Repositories.Queries.ICollectionResultQuery`2
  - Cqrs.Repositories.Queries.IOrQueryPredicate
  - Cqrs.Repositories.Queries.IQueryBuilder`2
  - Cqrs.Repositories.Queries.IQueryFactory
  - Cqrs.Repositories.Queries.IQueryPredicate
  - Cqrs.Repositories.Queries.IQueryPredicateData
  - Cqrs.Repositories.Queries.IQueryStrategy
  - Cqrs.Repositories.Queries.IQueryWithResults`1
  - Cqrs.Repositories.Queries.IQueryWithStrategy`1
  - Cqrs.Repositories.Queries.ISingleResultQuery`2
  - Cqrs.Repositories.Queries.OrQueryPredicate
  - Cqrs.Repositories.Queries.QueryBuilder`2
  - Cqrs.Repositories.Queries.QueryFactory
  - Cqrs.Repositories.Queries.QueryParameter
  - Cqrs.Repositories.Queries.QueryPredicate
  - Cqrs.Repositories.Queries.QueryPredicateExtensions
  - Cqrs.Repositories.Queries.QueryStrategy
  - Cqrs.Repositories.Queries.ResultQuery`2
  - Cqrs.Repositories.Queries.SingleResultQuery`2
  - Cqrs.Repositories.Queries.SortParameter`1
  - Cqrs.Repositories.Queries.SortParameter`1.SortParameterDirectionType
  langs:
  - csharp
  - vb
  name: Cqrs.Repositories.Queries
  nameWithType: Cqrs.Repositories.Queries
  fullName: Cqrs.Repositories.Queries
  type: Namespace
  assemblies:
  - Cqrs
references:
- uid: Cqrs.Repositories.Queries.AndQueryPredicate
  commentId: T:Cqrs.Repositories.Queries.AndQueryPredicate
  isExternal: false
  name: AndQueryPredicate
  nameWithType: AndQueryPredicate
  fullName: Cqrs.Repositories.Queries.AndQueryPredicate
- uid: Cqrs.Repositories.Queries.CollectionResultQuery`2
  commentId: T:Cqrs.Repositories.Queries.CollectionResultQuery`2
  isExternal: false
  name: CollectionResultQuery<TQueryStrategy, TData>
  nameWithType: CollectionResultQuery<TQueryStrategy, TData>
  fullName: Cqrs.Repositories.Queries.CollectionResultQuery<TQueryStrategy, TData>
  nameWithType.vb: CollectionResultQuery(Of TQueryStrategy, TData)
  fullName.vb: Cqrs.Repositories.Queries.CollectionResultQuery(Of TQueryStrategy, TData)
  name.vb: CollectionResultQuery(Of TQueryStrategy, TData)
  spec.csharp:
  - uid: Cqrs.Repositories.Queries.CollectionResultQuery`2
    name: CollectionResultQuery
    nameWithType: CollectionResultQuery
    fullName: Cqrs.Repositories.Queries.CollectionResultQuery
  - name: <
    nameWithType: <
    fullName: <
  - name: TQueryStrategy
    nameWithType: TQueryStrategy
    fullName: TQueryStrategy
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Repositories.Queries.CollectionResultQuery`2
    name: CollectionResultQuery
    nameWithType: CollectionResultQuery
    fullName: Cqrs.Repositories.Queries.CollectionResultQuery
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TQueryStrategy
    nameWithType: TQueryStrategy
    fullName: TQueryStrategy
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Repositories.Queries.IAndQueryPredicate
  commentId: T:Cqrs.Repositories.Queries.IAndQueryPredicate
  parent: Cqrs.Repositories.Queries
  isExternal: false
  name: IAndQueryPredicate
  nameWithType: IAndQueryPredicate
  fullName: Cqrs.Repositories.Queries.IAndQueryPredicate
- uid: Cqrs.Repositories.Queries.ICollectionResultQuery`2
  commentId: T:Cqrs.Repositories.Queries.ICollectionResultQuery`2
  isExternal: false
  name: ICollectionResultQuery<TQueryStrategy, TData>
  nameWithType: ICollectionResultQuery<TQueryStrategy, TData>
  fullName: Cqrs.Repositories.Queries.ICollectionResultQuery<TQueryStrategy, TData>
  nameWithType.vb: ICollectionResultQuery(Of TQueryStrategy, TData)
  fullName.vb: Cqrs.Repositories.Queries.ICollectionResultQuery(Of TQueryStrategy, TData)
  name.vb: ICollectionResultQuery(Of TQueryStrategy, TData)
  spec.csharp:
  - uid: Cqrs.Repositories.Queries.ICollectionResultQuery`2
    name: ICollectionResultQuery
    nameWithType: ICollectionResultQuery
    fullName: Cqrs.Repositories.Queries.ICollectionResultQuery
  - name: <
    nameWithType: <
    fullName: <
  - name: TQueryStrategy
    nameWithType: TQueryStrategy
    fullName: TQueryStrategy
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Repositories.Queries.ICollectionResultQuery`2
    name: ICollectionResultQuery
    nameWithType: ICollectionResultQuery
    fullName: Cqrs.Repositories.Queries.ICollectionResultQuery
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TQueryStrategy
    nameWithType: TQueryStrategy
    fullName: TQueryStrategy
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Repositories.Queries.IOrQueryPredicate
  commentId: T:Cqrs.Repositories.Queries.IOrQueryPredicate
  isExternal: false
  name: IOrQueryPredicate
  nameWithType: IOrQueryPredicate
  fullName: Cqrs.Repositories.Queries.IOrQueryPredicate
- uid: Cqrs.Repositories.Queries.IQueryBuilder`2
  commentId: T:Cqrs.Repositories.Queries.IQueryBuilder`2
  isExternal: false
  name: IQueryBuilder<TQueryStrategy, TData>
  nameWithType: IQueryBuilder<TQueryStrategy, TData>
  fullName: Cqrs.Repositories.Queries.IQueryBuilder<TQueryStrategy, TData>
  nameWithType.vb: IQueryBuilder(Of TQueryStrategy, TData)
  fullName.vb: Cqrs.Repositories.Queries.IQueryBuilder(Of TQueryStrategy, TData)
  name.vb: IQueryBuilder(Of TQueryStrategy, TData)
  spec.csharp:
  - uid: Cqrs.Repositories.Queries.IQueryBuilder`2
    name: IQueryBuilder
    nameWithType: IQueryBuilder
    fullName: Cqrs.Repositories.Queries.IQueryBuilder
  - name: <
    nameWithType: <
    fullName: <
  - name: TQueryStrategy
    nameWithType: TQueryStrategy
    fullName: TQueryStrategy
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Repositories.Queries.IQueryBuilder`2
    name: IQueryBuilder
    nameWithType: IQueryBuilder
    fullName: Cqrs.Repositories.Queries.IQueryBuilder
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TQueryStrategy
    nameWithType: TQueryStrategy
    fullName: TQueryStrategy
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Repositories.Queries.IQueryFactory
  commentId: T:Cqrs.Repositories.Queries.IQueryFactory
  parent: Cqrs.Repositories.Queries
  isExternal: false
  name: IQueryFactory
  nameWithType: IQueryFactory
  fullName: Cqrs.Repositories.Queries.IQueryFactory
- uid: Cqrs.Repositories.Queries.IQueryPredicate
  commentId: T:Cqrs.Repositories.Queries.IQueryPredicate
  parent: Cqrs.Repositories.Queries
  isExternal: false
  name: IQueryPredicate
  nameWithType: IQueryPredicate
  fullName: Cqrs.Repositories.Queries.IQueryPredicate
- uid: Cqrs.Repositories.Queries.IQueryPredicateData
  commentId: T:Cqrs.Repositories.Queries.IQueryPredicateData
  parent: Cqrs.Repositories.Queries
  isExternal: false
  name: IQueryPredicateData
  nameWithType: IQueryPredicateData
  fullName: Cqrs.Repositories.Queries.IQueryPredicateData
- uid: Cqrs.Repositories.Queries.IQueryStrategy
  commentId: T:Cqrs.Repositories.Queries.IQueryStrategy
  parent: Cqrs.Repositories.Queries
  isExternal: false
  name: IQueryStrategy
  nameWithType: IQueryStrategy
  fullName: Cqrs.Repositories.Queries.IQueryStrategy
- uid: Cqrs.Repositories.Queries.IQueryWithResults`1
  commentId: T:Cqrs.Repositories.Queries.IQueryWithResults`1
  isExternal: false
  name: IQueryWithResults<TResult>
  nameWithType: IQueryWithResults<TResult>
  fullName: Cqrs.Repositories.Queries.IQueryWithResults<TResult>
  nameWithType.vb: IQueryWithResults(Of TResult)
  fullName.vb: Cqrs.Repositories.Queries.IQueryWithResults(Of TResult)
  name.vb: IQueryWithResults(Of TResult)
  spec.csharp:
  - uid: Cqrs.Repositories.Queries.IQueryWithResults`1
    name: IQueryWithResults
    nameWithType: IQueryWithResults
    fullName: Cqrs.Repositories.Queries.IQueryWithResults
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Repositories.Queries.IQueryWithResults`1
    name: IQueryWithResults
    nameWithType: IQueryWithResults
    fullName: Cqrs.Repositories.Queries.IQueryWithResults
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Repositories.Queries.IQueryWithStrategy`1
  commentId: T:Cqrs.Repositories.Queries.IQueryWithStrategy`1
  isExternal: false
  name: IQueryWithStrategy<TQueryStrategy>
  nameWithType: IQueryWithStrategy<TQueryStrategy>
  fullName: Cqrs.Repositories.Queries.IQueryWithStrategy<TQueryStrategy>
  nameWithType.vb: IQueryWithStrategy(Of TQueryStrategy)
  fullName.vb: Cqrs.Repositories.Queries.IQueryWithStrategy(Of TQueryStrategy)
  name.vb: IQueryWithStrategy(Of TQueryStrategy)
  spec.csharp:
  - uid: Cqrs.Repositories.Queries.IQueryWithStrategy`1
    name: IQueryWithStrategy
    nameWithType: IQueryWithStrategy
    fullName: Cqrs.Repositories.Queries.IQueryWithStrategy
  - name: <
    nameWithType: <
    fullName: <
  - name: TQueryStrategy
    nameWithType: TQueryStrategy
    fullName: TQueryStrategy
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Repositories.Queries.IQueryWithStrategy`1
    name: IQueryWithStrategy
    nameWithType: IQueryWithStrategy
    fullName: Cqrs.Repositories.Queries.IQueryWithStrategy
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TQueryStrategy
    nameWithType: TQueryStrategy
    fullName: TQueryStrategy
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Repositories.Queries.ISingleResultQuery`2
  commentId: T:Cqrs.Repositories.Queries.ISingleResultQuery`2
  isExternal: false
  name: ISingleResultQuery<TQueryStrategy, TData>
  nameWithType: ISingleResultQuery<TQueryStrategy, TData>
  fullName: Cqrs.Repositories.Queries.ISingleResultQuery<TQueryStrategy, TData>
  nameWithType.vb: ISingleResultQuery(Of TQueryStrategy, TData)
  fullName.vb: Cqrs.Repositories.Queries.ISingleResultQuery(Of TQueryStrategy, TData)
  name.vb: ISingleResultQuery(Of TQueryStrategy, TData)
  spec.csharp:
  - uid: Cqrs.Repositories.Queries.ISingleResultQuery`2
    name: ISingleResultQuery
    nameWithType: ISingleResultQuery
    fullName: Cqrs.Repositories.Queries.ISingleResultQuery
  - name: <
    nameWithType: <
    fullName: <
  - name: TQueryStrategy
    nameWithType: TQueryStrategy
    fullName: TQueryStrategy
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Repositories.Queries.ISingleResultQuery`2
    name: ISingleResultQuery
    nameWithType: ISingleResultQuery
    fullName: Cqrs.Repositories.Queries.ISingleResultQuery
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TQueryStrategy
    nameWithType: TQueryStrategy
    fullName: TQueryStrategy
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Repositories.Queries.OrQueryPredicate
  commentId: T:Cqrs.Repositories.Queries.OrQueryPredicate
  isExternal: false
  name: OrQueryPredicate
  nameWithType: OrQueryPredicate
  fullName: Cqrs.Repositories.Queries.OrQueryPredicate
- uid: Cqrs.Repositories.Queries.QueryBuilder`2
  commentId: T:Cqrs.Repositories.Queries.QueryBuilder`2
  isExternal: false
  name: QueryBuilder<TQueryStrategy, TData>
  nameWithType: QueryBuilder<TQueryStrategy, TData>
  fullName: Cqrs.Repositories.Queries.QueryBuilder<TQueryStrategy, TData>
  nameWithType.vb: QueryBuilder(Of TQueryStrategy, TData)
  fullName.vb: Cqrs.Repositories.Queries.QueryBuilder(Of TQueryStrategy, TData)
  name.vb: QueryBuilder(Of TQueryStrategy, TData)
  spec.csharp:
  - uid: Cqrs.Repositories.Queries.QueryBuilder`2
    name: QueryBuilder
    nameWithType: QueryBuilder
    fullName: Cqrs.Repositories.Queries.QueryBuilder
  - name: <
    nameWithType: <
    fullName: <
  - name: TQueryStrategy
    nameWithType: TQueryStrategy
    fullName: TQueryStrategy
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Repositories.Queries.QueryBuilder`2
    name: QueryBuilder
    nameWithType: QueryBuilder
    fullName: Cqrs.Repositories.Queries.QueryBuilder
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TQueryStrategy
    nameWithType: TQueryStrategy
    fullName: TQueryStrategy
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Repositories.Queries.QueryFactory
  commentId: T:Cqrs.Repositories.Queries.QueryFactory
  isExternal: false
  name: QueryFactory
  nameWithType: QueryFactory
  fullName: Cqrs.Repositories.Queries.QueryFactory
- uid: Cqrs.Repositories.Queries.QueryParameter
  commentId: T:Cqrs.Repositories.Queries.QueryParameter
  parent: Cqrs.Repositories.Queries
  isExternal: false
  name: QueryParameter
  nameWithType: QueryParameter
  fullName: Cqrs.Repositories.Queries.QueryParameter
- uid: Cqrs.Repositories.Queries.QueryPredicate
  commentId: T:Cqrs.Repositories.Queries.QueryPredicate
  parent: Cqrs.Repositories.Queries
  isExternal: false
  name: QueryPredicate
  nameWithType: QueryPredicate
  fullName: Cqrs.Repositories.Queries.QueryPredicate
- uid: Cqrs.Repositories.Queries.QueryPredicateExtensions
  commentId: T:Cqrs.Repositories.Queries.QueryPredicateExtensions
  parent: Cqrs.Repositories.Queries
  isExternal: false
  name: QueryPredicateExtensions
  nameWithType: QueryPredicateExtensions
  fullName: Cqrs.Repositories.Queries.QueryPredicateExtensions
- uid: Cqrs.Repositories.Queries.QueryStrategy
  commentId: T:Cqrs.Repositories.Queries.QueryStrategy
  isExternal: false
  name: QueryStrategy
  nameWithType: QueryStrategy
  fullName: Cqrs.Repositories.Queries.QueryStrategy
- uid: Cqrs.Repositories.Queries.ResultQuery`2
  commentId: T:Cqrs.Repositories.Queries.ResultQuery`2
  isExternal: false
  name: ResultQuery<TQueryStrategy, TData>
  nameWithType: ResultQuery<TQueryStrategy, TData>
  fullName: Cqrs.Repositories.Queries.ResultQuery<TQueryStrategy, TData>
  nameWithType.vb: ResultQuery(Of TQueryStrategy, TData)
  fullName.vb: Cqrs.Repositories.Queries.ResultQuery(Of TQueryStrategy, TData)
  name.vb: ResultQuery(Of TQueryStrategy, TData)
  spec.csharp:
  - uid: Cqrs.Repositories.Queries.ResultQuery`2
    name: ResultQuery
    nameWithType: ResultQuery
    fullName: Cqrs.Repositories.Queries.ResultQuery
  - name: <
    nameWithType: <
    fullName: <
  - name: TQueryStrategy
    nameWithType: TQueryStrategy
    fullName: TQueryStrategy
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Repositories.Queries.ResultQuery`2
    name: ResultQuery
    nameWithType: ResultQuery
    fullName: Cqrs.Repositories.Queries.ResultQuery
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TQueryStrategy
    nameWithType: TQueryStrategy
    fullName: TQueryStrategy
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Repositories.Queries.SingleResultQuery`2
  commentId: T:Cqrs.Repositories.Queries.SingleResultQuery`2
  isExternal: false
  name: SingleResultQuery<TQueryStrategy, TData>
  nameWithType: SingleResultQuery<TQueryStrategy, TData>
  fullName: Cqrs.Repositories.Queries.SingleResultQuery<TQueryStrategy, TData>
  nameWithType.vb: SingleResultQuery(Of TQueryStrategy, TData)
  fullName.vb: Cqrs.Repositories.Queries.SingleResultQuery(Of TQueryStrategy, TData)
  name.vb: SingleResultQuery(Of TQueryStrategy, TData)
  spec.csharp:
  - uid: Cqrs.Repositories.Queries.SingleResultQuery`2
    name: SingleResultQuery
    nameWithType: SingleResultQuery
    fullName: Cqrs.Repositories.Queries.SingleResultQuery
  - name: <
    nameWithType: <
    fullName: <
  - name: TQueryStrategy
    nameWithType: TQueryStrategy
    fullName: TQueryStrategy
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Repositories.Queries.SingleResultQuery`2
    name: SingleResultQuery
    nameWithType: SingleResultQuery
    fullName: Cqrs.Repositories.Queries.SingleResultQuery
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TQueryStrategy
    nameWithType: TQueryStrategy
    fullName: TQueryStrategy
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Repositories.Queries.SortParameter`1
  commentId: T:Cqrs.Repositories.Queries.SortParameter`1
  isExternal: false
  name: SortParameter<TSortBy>
  nameWithType: SortParameter<TSortBy>
  fullName: Cqrs.Repositories.Queries.SortParameter<TSortBy>
  nameWithType.vb: SortParameter(Of TSortBy)
  fullName.vb: Cqrs.Repositories.Queries.SortParameter(Of TSortBy)
  name.vb: SortParameter(Of TSortBy)
  spec.csharp:
  - uid: Cqrs.Repositories.Queries.SortParameter`1
    name: SortParameter
    nameWithType: SortParameter
    fullName: Cqrs.Repositories.Queries.SortParameter
  - name: <
    nameWithType: <
    fullName: <
  - name: TSortBy
    nameWithType: TSortBy
    fullName: TSortBy
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Repositories.Queries.SortParameter`1
    name: SortParameter
    nameWithType: SortParameter
    fullName: Cqrs.Repositories.Queries.SortParameter
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSortBy
    nameWithType: TSortBy
    fullName: TSortBy
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Repositories.Queries.SortParameter`1.SortParameterDirectionType
  commentId: T:Cqrs.Repositories.Queries.SortParameter`1.SortParameterDirectionType
  parent: Cqrs.Repositories.Queries
  isExternal: false
  name: SortParameter.SortParameterDirectionType<>
  nameWithType: SortParameter.SortParameterDirectionType<>
  fullName: Cqrs.Repositories.Queries.SortParameter.SortParameterDirectionType<>
  nameWithType.vb: SortParameter.SortParameterDirectionType(Of )
  fullName.vb: Cqrs.Repositories.Queries.SortParameter.SortParameterDirectionType(Of )
  name.vb: SortParameter.SortParameterDirectionType(Of )
  spec.csharp:
  - uid: Cqrs.Repositories.Queries.SortParameter`1.SortParameterDirectionType
    name: SortParameter.SortParameterDirectionType
    nameWithType: SortParameter.SortParameterDirectionType
    fullName: Cqrs.Repositories.Queries.SortParameter.SortParameterDirectionType
  - name: <
    nameWithType: <
    fullName: <
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Repositories.Queries.SortParameter`1.SortParameterDirectionType
    name: SortParameter.SortParameterDirectionType
    nameWithType: SortParameter.SortParameterDirectionType
    fullName: Cqrs.Repositories.Queries.SortParameter.SortParameterDirectionType
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Repositories.Queries
  commentId: N:Cqrs.Repositories.Queries
  isExternal: false
  name: Cqrs.Repositories.Queries
  nameWithType: Cqrs.Repositories.Queries
  fullName: Cqrs.Repositories.Queries
