### YamlMime:ManagedReference
items:
- uid: Cqrs.Akka.Events.AkkaEventBus`1
  commentId: T:Cqrs.Akka.Events.AkkaEventBus`1
  id: AkkaEventBus`1
  parent: Cqrs.Akka.Events
  children:
  - Cqrs.Akka.Events.AkkaEventBus`1.#ctor(Cqrs.Bus.IBusHelper,Cqrs.Authentication.IAuthenticationTokenHelper{`0},cdmdotnet.Logging.ICorrelationIdHelper,cdmdotnet.Logging.ILogger,Cqrs.Events.IEventPublisher{`0},Cqrs.Events.IEventReceiver{`0})
  - Cqrs.Akka.Events.AkkaEventBus`1.AuthenticationTokenHelper
  - Cqrs.Akka.Events.AkkaEventBus`1.BusHelper
  - Cqrs.Akka.Events.AkkaEventBus`1.CorrelationIdHelper
  - Cqrs.Akka.Events.AkkaEventBus`1.EventPublisher
  - Cqrs.Akka.Events.AkkaEventBus`1.EventReceiver
  - Cqrs.Akka.Events.AkkaEventBus`1.Logger
  - Cqrs.Akka.Events.AkkaEventBus`1.PrepareAndValidateEvent``1(``0,System.String,System.Collections.Generic.IEnumerable{Cqrs.Bus.RouteHandlerDelegate}@)
  - Cqrs.Akka.Events.AkkaEventBus`1.PrepareEvent``1(``0,System.String)
  - Cqrs.Akka.Events.AkkaEventBus`1.Publish``1(``0)
  - Cqrs.Akka.Events.AkkaEventBus`1.Publish``1(System.Collections.Generic.IEnumerable{``0})
  - Cqrs.Akka.Events.AkkaEventBus`1.RegisterGlobalEventHandler``1(System.Action{``0},System.Boolean)
  - Cqrs.Akka.Events.AkkaEventBus`1.RegisterHandler``1(System.Action{``0},System.Boolean)
  - Cqrs.Akka.Events.AkkaEventBus`1.RegisterHandler``1(System.Action{``0},System.Type,System.Boolean)
  - Cqrs.Akka.Events.AkkaEventBus`1.Routes
  langs:
  - csharp
  - vb
  name: AkkaEventBus<TAuthenticationToken>
  nameWithType: AkkaEventBus<TAuthenticationToken>
  fullName: Cqrs.Akka.Events.AkkaEventBus<TAuthenticationToken>
  type: Class
  source:
    remote:
      path: Framework/Akka.Net/Cqrs.Akka/Events/AkkaEventBus.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: AkkaEventBus
    path: Framework/Akka.Net/Cqrs.Akka/Events/AkkaEventBus.cs
    startLine: 23
  assemblies:
  - Cqrs.Akka
  namespace: Cqrs.Akka.Events
  summary: "\nAn <xref href=\"Cqrs.Events.IEventPublisher%601\" data-throw-if-not-resolved=\"false\"></xref> that proxies <xref href=\"Cqrs.Events.IEvent%601\" data-throw-if-not-resolved=\"false\"></xref> back onto the <xref href=\"Akka.Actor.IActorRef\" data-throw-if-not-resolved=\"false\"></xref> and then publishes the <xref href=\"Cqrs.Events.IEvent%601\" data-throw-if-not-resolved=\"false\"></xref> on the public event bus.\n"
  example: []
  syntax:
    content: 'public class AkkaEventBus<TAuthenticationToken> : IAkkaEventPublisher<TAuthenticationToken>, IEventPublisher<TAuthenticationToken>, IEventHandlerRegistrar, IHandlerRegistrar'
    typeParameters:
    - id: TAuthenticationToken
    content.vb: >-
      Public Class AkkaEventBus(Of TAuthenticationToken)
          Implements IAkkaEventPublisher(Of TAuthenticationToken), IEventPublisher(Of TAuthenticationToken), IEventHandlerRegistrar, IHandlerRegistrar
  inheritance:
  - System.Object
  implements:
  - Cqrs.Akka.Events.IAkkaEventPublisher{{TAuthenticationToken}}
  - Cqrs.Events.IEventPublisher{{TAuthenticationToken}}
  - Cqrs.Bus.IEventHandlerRegistrar
  - Cqrs.Bus.IHandlerRegistrar
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: AkkaEventBus(Of TAuthenticationToken)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Cqrs.Akka.Events.AkkaEventBus(Of TAuthenticationToken)
  name.vb: AkkaEventBus(Of TAuthenticationToken)
- uid: Cqrs.Akka.Events.AkkaEventBus`1.Routes
  commentId: P:Cqrs.Akka.Events.AkkaEventBus`1.Routes
  id: Routes
  parent: Cqrs.Akka.Events.AkkaEventBus`1
  langs:
  - csharp
  - vb
  name: Routes
  nameWithType: AkkaEventBus<TAuthenticationToken>.Routes
  fullName: Cqrs.Akka.Events.AkkaEventBus<TAuthenticationToken>.Routes
  type: Property
  source:
    remote:
      path: Framework/Akka.Net/Cqrs.Akka/Events/AkkaEventBus.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Routes
    path: Framework/Akka.Net/Cqrs.Akka/Events/AkkaEventBus.cs
    startLine: 27
  assemblies:
  - Cqrs.Akka
  namespace: Cqrs.Akka.Events
  syntax:
    content: protected static RouteManager Routes { get; }
    parameters: []
    return:
      type: Cqrs.Bus.RouteManager
    content.vb: Protected Shared ReadOnly Property Routes As RouteManager
  overload: Cqrs.Akka.Events.AkkaEventBus`1.Routes*
  nameWithType.vb: AkkaEventBus(Of TAuthenticationToken).Routes
  modifiers.csharp:
  - protected
  - static
  - get
  modifiers.vb:
  - Protected
  - Shared
  - ReadOnly
  fullName.vb: Cqrs.Akka.Events.AkkaEventBus(Of TAuthenticationToken).Routes
- uid: Cqrs.Akka.Events.AkkaEventBus`1.EventPublisher
  commentId: P:Cqrs.Akka.Events.AkkaEventBus`1.EventPublisher
  id: EventPublisher
  parent: Cqrs.Akka.Events.AkkaEventBus`1
  langs:
  - csharp
  - vb
  name: EventPublisher
  nameWithType: AkkaEventBus<TAuthenticationToken>.EventPublisher
  fullName: Cqrs.Akka.Events.AkkaEventBus<TAuthenticationToken>.EventPublisher
  type: Property
  source:
    remote:
      path: Framework/Akka.Net/Cqrs.Akka/Events/AkkaEventBus.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: EventPublisher
    path: Framework/Akka.Net/Cqrs.Akka/Events/AkkaEventBus.cs
    startLine: 34
  assemblies:
  - Cqrs.Akka
  namespace: Cqrs.Akka.Events
  syntax:
    content: protected IEventPublisher<TAuthenticationToken> EventPublisher { get; }
    parameters: []
    return:
      type: Cqrs.Events.IEventPublisher{{TAuthenticationToken}}
    content.vb: Protected ReadOnly Property EventPublisher As IEventPublisher(Of TAuthenticationToken)
  overload: Cqrs.Akka.Events.AkkaEventBus`1.EventPublisher*
  nameWithType.vb: AkkaEventBus(Of TAuthenticationToken).EventPublisher
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: Cqrs.Akka.Events.AkkaEventBus(Of TAuthenticationToken).EventPublisher
- uid: Cqrs.Akka.Events.AkkaEventBus`1.EventReceiver
  commentId: P:Cqrs.Akka.Events.AkkaEventBus`1.EventReceiver
  id: EventReceiver
  parent: Cqrs.Akka.Events.AkkaEventBus`1
  langs:
  - csharp
  - vb
  name: EventReceiver
  nameWithType: AkkaEventBus<TAuthenticationToken>.EventReceiver
  fullName: Cqrs.Akka.Events.AkkaEventBus<TAuthenticationToken>.EventReceiver
  type: Property
  source:
    remote:
      path: Framework/Akka.Net/Cqrs.Akka/Events/AkkaEventBus.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: EventReceiver
    path: Framework/Akka.Net/Cqrs.Akka/Events/AkkaEventBus.cs
    startLine: 36
  assemblies:
  - Cqrs.Akka
  namespace: Cqrs.Akka.Events
  syntax:
    content: protected IEventReceiver<TAuthenticationToken> EventReceiver { get; }
    parameters: []
    return:
      type: Cqrs.Events.IEventReceiver{{TAuthenticationToken}}
    content.vb: Protected ReadOnly Property EventReceiver As IEventReceiver(Of TAuthenticationToken)
  overload: Cqrs.Akka.Events.AkkaEventBus`1.EventReceiver*
  nameWithType.vb: AkkaEventBus(Of TAuthenticationToken).EventReceiver
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: Cqrs.Akka.Events.AkkaEventBus(Of TAuthenticationToken).EventReceiver
- uid: Cqrs.Akka.Events.AkkaEventBus`1.AuthenticationTokenHelper
  commentId: P:Cqrs.Akka.Events.AkkaEventBus`1.AuthenticationTokenHelper
  id: AuthenticationTokenHelper
  parent: Cqrs.Akka.Events.AkkaEventBus`1
  langs:
  - csharp
  - vb
  name: AuthenticationTokenHelper
  nameWithType: AkkaEventBus<TAuthenticationToken>.AuthenticationTokenHelper
  fullName: Cqrs.Akka.Events.AkkaEventBus<TAuthenticationToken>.AuthenticationTokenHelper
  type: Property
  source:
    remote:
      path: Framework/Akka.Net/Cqrs.Akka/Events/AkkaEventBus.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: AuthenticationTokenHelper
    path: Framework/Akka.Net/Cqrs.Akka/Events/AkkaEventBus.cs
    startLine: 38
  assemblies:
  - Cqrs.Akka
  namespace: Cqrs.Akka.Events
  syntax:
    content: protected IAuthenticationTokenHelper<TAuthenticationToken> AuthenticationTokenHelper { get; }
    parameters: []
    return:
      type: Cqrs.Authentication.IAuthenticationTokenHelper{{TAuthenticationToken}}
    content.vb: Protected ReadOnly Property AuthenticationTokenHelper As IAuthenticationTokenHelper(Of TAuthenticationToken)
  overload: Cqrs.Akka.Events.AkkaEventBus`1.AuthenticationTokenHelper*
  nameWithType.vb: AkkaEventBus(Of TAuthenticationToken).AuthenticationTokenHelper
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: Cqrs.Akka.Events.AkkaEventBus(Of TAuthenticationToken).AuthenticationTokenHelper
- uid: Cqrs.Akka.Events.AkkaEventBus`1.CorrelationIdHelper
  commentId: P:Cqrs.Akka.Events.AkkaEventBus`1.CorrelationIdHelper
  id: CorrelationIdHelper
  parent: Cqrs.Akka.Events.AkkaEventBus`1
  langs:
  - csharp
  - vb
  name: CorrelationIdHelper
  nameWithType: AkkaEventBus<TAuthenticationToken>.CorrelationIdHelper
  fullName: Cqrs.Akka.Events.AkkaEventBus<TAuthenticationToken>.CorrelationIdHelper
  type: Property
  source:
    remote:
      path: Framework/Akka.Net/Cqrs.Akka/Events/AkkaEventBus.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: CorrelationIdHelper
    path: Framework/Akka.Net/Cqrs.Akka/Events/AkkaEventBus.cs
    startLine: 40
  assemblies:
  - Cqrs.Akka
  namespace: Cqrs.Akka.Events
  syntax:
    content: protected ICorrelationIdHelper CorrelationIdHelper { get; }
    parameters: []
    return:
      type: cdmdotnet.Logging.ICorrelationIdHelper
    content.vb: Protected ReadOnly Property CorrelationIdHelper As ICorrelationIdHelper
  overload: Cqrs.Akka.Events.AkkaEventBus`1.CorrelationIdHelper*
  nameWithType.vb: AkkaEventBus(Of TAuthenticationToken).CorrelationIdHelper
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: Cqrs.Akka.Events.AkkaEventBus(Of TAuthenticationToken).CorrelationIdHelper
- uid: Cqrs.Akka.Events.AkkaEventBus`1.BusHelper
  commentId: P:Cqrs.Akka.Events.AkkaEventBus`1.BusHelper
  id: BusHelper
  parent: Cqrs.Akka.Events.AkkaEventBus`1
  langs:
  - csharp
  - vb
  name: BusHelper
  nameWithType: AkkaEventBus<TAuthenticationToken>.BusHelper
  fullName: Cqrs.Akka.Events.AkkaEventBus<TAuthenticationToken>.BusHelper
  type: Property
  source:
    remote:
      path: Framework/Akka.Net/Cqrs.Akka/Events/AkkaEventBus.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: BusHelper
    path: Framework/Akka.Net/Cqrs.Akka/Events/AkkaEventBus.cs
    startLine: 42
  assemblies:
  - Cqrs.Akka
  namespace: Cqrs.Akka.Events
  syntax:
    content: protected IBusHelper BusHelper { get; }
    parameters: []
    return:
      type: Cqrs.Bus.IBusHelper
    content.vb: Protected ReadOnly Property BusHelper As IBusHelper
  overload: Cqrs.Akka.Events.AkkaEventBus`1.BusHelper*
  nameWithType.vb: AkkaEventBus(Of TAuthenticationToken).BusHelper
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: Cqrs.Akka.Events.AkkaEventBus(Of TAuthenticationToken).BusHelper
- uid: Cqrs.Akka.Events.AkkaEventBus`1.Logger
  commentId: P:Cqrs.Akka.Events.AkkaEventBus`1.Logger
  id: Logger
  parent: Cqrs.Akka.Events.AkkaEventBus`1
  langs:
  - csharp
  - vb
  name: Logger
  nameWithType: AkkaEventBus<TAuthenticationToken>.Logger
  fullName: Cqrs.Akka.Events.AkkaEventBus<TAuthenticationToken>.Logger
  type: Property
  source:
    remote:
      path: Framework/Akka.Net/Cqrs.Akka/Events/AkkaEventBus.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Logger
    path: Framework/Akka.Net/Cqrs.Akka/Events/AkkaEventBus.cs
    startLine: 44
  assemblies:
  - Cqrs.Akka
  namespace: Cqrs.Akka.Events
  syntax:
    content: protected ILogger Logger { get; }
    parameters: []
    return:
      type: cdmdotnet.Logging.ILogger
    content.vb: Protected ReadOnly Property Logger As ILogger
  overload: Cqrs.Akka.Events.AkkaEventBus`1.Logger*
  nameWithType.vb: AkkaEventBus(Of TAuthenticationToken).Logger
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: Cqrs.Akka.Events.AkkaEventBus(Of TAuthenticationToken).Logger
- uid: Cqrs.Akka.Events.AkkaEventBus`1.#ctor(Cqrs.Bus.IBusHelper,Cqrs.Authentication.IAuthenticationTokenHelper{`0},cdmdotnet.Logging.ICorrelationIdHelper,cdmdotnet.Logging.ILogger,Cqrs.Events.IEventPublisher{`0},Cqrs.Events.IEventReceiver{`0})
  commentId: M:Cqrs.Akka.Events.AkkaEventBus`1.#ctor(Cqrs.Bus.IBusHelper,Cqrs.Authentication.IAuthenticationTokenHelper{`0},cdmdotnet.Logging.ICorrelationIdHelper,cdmdotnet.Logging.ILogger,Cqrs.Events.IEventPublisher{`0},Cqrs.Events.IEventReceiver{`0})
  id: '#ctor(Cqrs.Bus.IBusHelper,Cqrs.Authentication.IAuthenticationTokenHelper{`0},cdmdotnet.Logging.ICorrelationIdHelper,cdmdotnet.Logging.ILogger,Cqrs.Events.IEventPublisher{`0},Cqrs.Events.IEventReceiver{`0})'
  parent: Cqrs.Akka.Events.AkkaEventBus`1
  langs:
  - csharp
  - vb
  name: AkkaEventBus(IBusHelper, IAuthenticationTokenHelper<TAuthenticationToken>, ICorrelationIdHelper, ILogger, IEventPublisher<TAuthenticationToken>, IEventReceiver<TAuthenticationToken>)
  nameWithType: AkkaEventBus<TAuthenticationToken>.AkkaEventBus(IBusHelper, IAuthenticationTokenHelper<TAuthenticationToken>, ICorrelationIdHelper, ILogger, IEventPublisher<TAuthenticationToken>, IEventReceiver<TAuthenticationToken>)
  fullName: Cqrs.Akka.Events.AkkaEventBus<TAuthenticationToken>.AkkaEventBus(Cqrs.Bus.IBusHelper, Cqrs.Authentication.IAuthenticationTokenHelper<TAuthenticationToken>, cdmdotnet.Logging.ICorrelationIdHelper, cdmdotnet.Logging.ILogger, Cqrs.Events.IEventPublisher<TAuthenticationToken>, Cqrs.Events.IEventReceiver<TAuthenticationToken>)
  type: Constructor
  source:
    remote:
      path: Framework/Akka.Net/Cqrs.Akka/Events/AkkaEventBus.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: .ctor
    path: Framework/Akka.Net/Cqrs.Akka/Events/AkkaEventBus.cs
    startLine: 46
  assemblies:
  - Cqrs.Akka
  namespace: Cqrs.Akka.Events
  syntax:
    content: public AkkaEventBus(IBusHelper busHelper, IAuthenticationTokenHelper<TAuthenticationToken> authenticationTokenHelper, ICorrelationIdHelper correlationIdHelper, ILogger logger, IEventPublisher<TAuthenticationToken> eventPublisher, IEventReceiver<TAuthenticationToken> eventReceiver)
    parameters:
    - id: busHelper
      type: Cqrs.Bus.IBusHelper
    - id: authenticationTokenHelper
      type: Cqrs.Authentication.IAuthenticationTokenHelper{{TAuthenticationToken}}
    - id: correlationIdHelper
      type: cdmdotnet.Logging.ICorrelationIdHelper
    - id: logger
      type: cdmdotnet.Logging.ILogger
    - id: eventPublisher
      type: Cqrs.Events.IEventPublisher{{TAuthenticationToken}}
    - id: eventReceiver
      type: Cqrs.Events.IEventReceiver{{TAuthenticationToken}}
    content.vb: Public Sub New(busHelper As IBusHelper, authenticationTokenHelper As IAuthenticationTokenHelper(Of TAuthenticationToken), correlationIdHelper As ICorrelationIdHelper, logger As ILogger, eventPublisher As IEventPublisher(Of TAuthenticationToken), eventReceiver As IEventReceiver(Of TAuthenticationToken))
  overload: Cqrs.Akka.Events.AkkaEventBus`1.#ctor*
  nameWithType.vb: AkkaEventBus(Of TAuthenticationToken).AkkaEventBus(IBusHelper, IAuthenticationTokenHelper(Of TAuthenticationToken), ICorrelationIdHelper, ILogger, IEventPublisher(Of TAuthenticationToken), IEventReceiver(Of TAuthenticationToken))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Cqrs.Akka.Events.AkkaEventBus(Of TAuthenticationToken).AkkaEventBus(Cqrs.Bus.IBusHelper, Cqrs.Authentication.IAuthenticationTokenHelper(Of TAuthenticationToken), cdmdotnet.Logging.ICorrelationIdHelper, cdmdotnet.Logging.ILogger, Cqrs.Events.IEventPublisher(Of TAuthenticationToken), Cqrs.Events.IEventReceiver(Of TAuthenticationToken))
  name.vb: AkkaEventBus(IBusHelper, IAuthenticationTokenHelper(Of TAuthenticationToken), ICorrelationIdHelper, ILogger, IEventPublisher(Of TAuthenticationToken), IEventReceiver(Of TAuthenticationToken))
- uid: Cqrs.Akka.Events.AkkaEventBus`1.Publish``1(``0)
  commentId: M:Cqrs.Akka.Events.AkkaEventBus`1.Publish``1(``0)
  id: Publish``1(``0)
  parent: Cqrs.Akka.Events.AkkaEventBus`1
  langs:
  - csharp
  - vb
  name: Publish<TEvent>(TEvent)
  nameWithType: AkkaEventBus<TAuthenticationToken>.Publish<TEvent>(TEvent)
  fullName: Cqrs.Akka.Events.AkkaEventBus<TAuthenticationToken>.Publish<TEvent>(TEvent)
  type: Method
  source:
    remote:
      path: Framework/Akka.Net/Cqrs.Akka/Events/AkkaEventBus.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Publish
    path: Framework/Akka.Net/Cqrs.Akka/Events/AkkaEventBus.cs
    startLine: 58
  assemblies:
  - Cqrs.Akka
  namespace: Cqrs.Akka.Events
  syntax:
    content: 'public void Publish<TEvent>(TEvent event)where TEvent : IEvent<TAuthenticationToken>'
    parameters:
    - id: event
      type: '{TEvent}'
    typeParameters:
    - id: TEvent
    content.vb: Public Sub Publish(Of TEvent As IEvent(Of TAuthenticationToken))(event As TEvent)
  overload: Cqrs.Akka.Events.AkkaEventBus`1.Publish*
  implements:
  - Cqrs.Events.IEventPublisher{{TAuthenticationToken}}.Publish``1({TEvent})
  nameWithType.vb: AkkaEventBus(Of TAuthenticationToken).Publish(Of TEvent)(TEvent)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Cqrs.Akka.Events.AkkaEventBus(Of TAuthenticationToken).Publish(Of TEvent)(TEvent)
  name.vb: Publish(Of TEvent)(TEvent)
- uid: Cqrs.Akka.Events.AkkaEventBus`1.Publish``1(System.Collections.Generic.IEnumerable{``0})
  commentId: M:Cqrs.Akka.Events.AkkaEventBus`1.Publish``1(System.Collections.Generic.IEnumerable{``0})
  id: Publish``1(System.Collections.Generic.IEnumerable{``0})
  parent: Cqrs.Akka.Events.AkkaEventBus`1
  langs:
  - csharp
  - vb
  name: Publish<TEvent>(IEnumerable<TEvent>)
  nameWithType: AkkaEventBus<TAuthenticationToken>.Publish<TEvent>(IEnumerable<TEvent>)
  fullName: Cqrs.Akka.Events.AkkaEventBus<TAuthenticationToken>.Publish<TEvent>(System.Collections.Generic.IEnumerable<TEvent>)
  type: Method
  source:
    remote:
      path: Framework/Akka.Net/Cqrs.Akka/Events/AkkaEventBus.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Publish
    path: Framework/Akka.Net/Cqrs.Akka/Events/AkkaEventBus.cs
    startLine: 73
  assemblies:
  - Cqrs.Akka
  namespace: Cqrs.Akka.Events
  syntax:
    content: 'public virtual void Publish<TEvent>(IEnumerable<TEvent> events)where TEvent : IEvent<TAuthenticationToken>'
    parameters:
    - id: events
      type: System.Collections.Generic.IEnumerable{{TEvent}}
    typeParameters:
    - id: TEvent
    content.vb: Public Overridable Sub Publish(Of TEvent As IEvent(Of TAuthenticationToken))(events As IEnumerable(Of TEvent))
  overload: Cqrs.Akka.Events.AkkaEventBus`1.Publish*
  implements:
  - Cqrs.Events.IEventPublisher{{TAuthenticationToken}}.Publish``1(System.Collections.Generic.IEnumerable{{TEvent}})
  nameWithType.vb: AkkaEventBus(Of TAuthenticationToken).Publish(Of TEvent)(IEnumerable(Of TEvent))
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Cqrs.Akka.Events.AkkaEventBus(Of TAuthenticationToken).Publish(Of TEvent)(System.Collections.Generic.IEnumerable(Of TEvent))
  name.vb: Publish(Of TEvent)(IEnumerable(Of TEvent))
- uid: Cqrs.Akka.Events.AkkaEventBus`1.PrepareEvent``1(``0,System.String)
  commentId: M:Cqrs.Akka.Events.AkkaEventBus`1.PrepareEvent``1(``0,System.String)
  id: PrepareEvent``1(``0,System.String)
  parent: Cqrs.Akka.Events.AkkaEventBus`1
  langs:
  - csharp
  - vb
  name: PrepareEvent<TEvent>(TEvent, String)
  nameWithType: AkkaEventBus<TAuthenticationToken>.PrepareEvent<TEvent>(TEvent, String)
  fullName: Cqrs.Akka.Events.AkkaEventBus<TAuthenticationToken>.PrepareEvent<TEvent>(TEvent, System.String)
  type: Method
  source:
    remote:
      path: Framework/Akka.Net/Cqrs.Akka/Events/AkkaEventBus.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: PrepareEvent
    path: Framework/Akka.Net/Cqrs.Akka/Events/AkkaEventBus.cs
    startLine: 94
  assemblies:
  - Cqrs.Akka
  namespace: Cqrs.Akka.Events
  syntax:
    content: 'public virtual void PrepareEvent<TEvent>(TEvent event, string framework)where TEvent : IEvent<TAuthenticationToken>'
    parameters:
    - id: event
      type: '{TEvent}'
    - id: framework
      type: System.String
    typeParameters:
    - id: TEvent
    content.vb: Public Overridable Sub PrepareEvent(Of TEvent As IEvent(Of TAuthenticationToken))(event As TEvent, framework As String)
  overload: Cqrs.Akka.Events.AkkaEventBus`1.PrepareEvent*
  nameWithType.vb: AkkaEventBus(Of TAuthenticationToken).PrepareEvent(Of TEvent)(TEvent, String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Cqrs.Akka.Events.AkkaEventBus(Of TAuthenticationToken).PrepareEvent(Of TEvent)(TEvent, System.String)
  name.vb: PrepareEvent(Of TEvent)(TEvent, String)
- uid: Cqrs.Akka.Events.AkkaEventBus`1.PrepareAndValidateEvent``1(``0,System.String,System.Collections.Generic.IEnumerable{Cqrs.Bus.RouteHandlerDelegate}@)
  commentId: M:Cqrs.Akka.Events.AkkaEventBus`1.PrepareAndValidateEvent``1(``0,System.String,System.Collections.Generic.IEnumerable{Cqrs.Bus.RouteHandlerDelegate}@)
  id: PrepareAndValidateEvent``1(``0,System.String,System.Collections.Generic.IEnumerable{Cqrs.Bus.RouteHandlerDelegate}@)
  parent: Cqrs.Akka.Events.AkkaEventBus`1
  langs:
  - csharp
  - vb
  name: PrepareAndValidateEvent<TEvent>(TEvent, String, out IEnumerable<RouteHandlerDelegate>)
  nameWithType: AkkaEventBus<TAuthenticationToken>.PrepareAndValidateEvent<TEvent>(TEvent, String, out IEnumerable<RouteHandlerDelegate>)
  fullName: Cqrs.Akka.Events.AkkaEventBus<TAuthenticationToken>.PrepareAndValidateEvent<TEvent>(TEvent, System.String, out System.Collections.Generic.IEnumerable<Cqrs.Bus.RouteHandlerDelegate>)
  type: Method
  source:
    remote:
      path: Framework/Akka.Net/Cqrs.Akka/Events/AkkaEventBus.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: PrepareAndValidateEvent
    path: Framework/Akka.Net/Cqrs.Akka/Events/AkkaEventBus.cs
    startLine: 113
  assemblies:
  - Cqrs.Akka
  namespace: Cqrs.Akka.Events
  syntax:
    content: 'public virtual bool PrepareAndValidateEvent<TEvent>(TEvent event, string framework, out IEnumerable<RouteHandlerDelegate> handlers)where TEvent : IEvent<TAuthenticationToken>'
    parameters:
    - id: event
      type: '{TEvent}'
    - id: framework
      type: System.String
    - id: handlers
      type: System.Collections.Generic.IEnumerable{Cqrs.Bus.RouteHandlerDelegate}
    typeParameters:
    - id: TEvent
    return:
      type: System.Boolean
    content.vb: Public Overridable Function PrepareAndValidateEvent(Of TEvent As IEvent(Of TAuthenticationToken))(event As TEvent, framework As String, ByRef handlers As IEnumerable(Of RouteHandlerDelegate)) As Boolean
  overload: Cqrs.Akka.Events.AkkaEventBus`1.PrepareAndValidateEvent*
  nameWithType.vb: AkkaEventBus(Of TAuthenticationToken).PrepareAndValidateEvent(Of TEvent)(TEvent, String, ByRef IEnumerable(Of RouteHandlerDelegate))
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Cqrs.Akka.Events.AkkaEventBus(Of TAuthenticationToken).PrepareAndValidateEvent(Of TEvent)(TEvent, System.String, ByRef System.Collections.Generic.IEnumerable(Of Cqrs.Bus.RouteHandlerDelegate))
  name.vb: PrepareAndValidateEvent(Of TEvent)(TEvent, String, ByRef IEnumerable(Of RouteHandlerDelegate))
- uid: Cqrs.Akka.Events.AkkaEventBus`1.RegisterHandler``1(System.Action{``0},System.Type,System.Boolean)
  commentId: M:Cqrs.Akka.Events.AkkaEventBus`1.RegisterHandler``1(System.Action{``0},System.Type,System.Boolean)
  id: RegisterHandler``1(System.Action{``0},System.Type,System.Boolean)
  parent: Cqrs.Akka.Events.AkkaEventBus`1
  langs:
  - csharp
  - vb
  name: RegisterHandler<TMessage>(Action<TMessage>, Type, Boolean)
  nameWithType: AkkaEventBus<TAuthenticationToken>.RegisterHandler<TMessage>(Action<TMessage>, Type, Boolean)
  fullName: Cqrs.Akka.Events.AkkaEventBus<TAuthenticationToken>.RegisterHandler<TMessage>(System.Action<TMessage>, System.Type, System.Boolean)
  type: Method
  source:
    remote:
      path: Framework/Akka.Net/Cqrs.Akka/Events/AkkaEventBus.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: RegisterHandler
    path: Framework/Akka.Net/Cqrs.Akka/Events/AkkaEventBus.cs
    startLine: 151
  assemblies:
  - Cqrs.Akka
  namespace: Cqrs.Akka.Events
  summary: "\nRegister an event or command handler that will listen and respond to events or commands.\n"
  remarks: "\nIn many cases the <code data-dev-comment-type=\"paramref\">targetedType</code> will be the event handler class itself, what you actually want is the target of what is being updated\n"
  example: []
  syntax:
    content: 'public void RegisterHandler<TMessage>(Action<TMessage> handler, Type targetedType, bool holdMessageLock = true)where TMessage : IMessage'
    parameters:
    - id: handler
      type: System.Action{{TMessage}}
    - id: targetedType
      type: System.Type
    - id: holdMessageLock
      type: System.Boolean
    typeParameters:
    - id: TMessage
    content.vb: Public Sub RegisterHandler(Of TMessage As IMessage)(handler As Action(Of TMessage), targetedType As Type, holdMessageLock As Boolean = True)
  overload: Cqrs.Akka.Events.AkkaEventBus`1.RegisterHandler*
  implements:
  - Cqrs.Bus.IHandlerRegistrar.RegisterHandler``1(System.Action{{TMessage}},System.Type,System.Boolean)
  nameWithType.vb: AkkaEventBus(Of TAuthenticationToken).RegisterHandler(Of TMessage)(Action(Of TMessage), Type, Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Cqrs.Akka.Events.AkkaEventBus(Of TAuthenticationToken).RegisterHandler(Of TMessage)(System.Action(Of TMessage), System.Type, System.Boolean)
  name.vb: RegisterHandler(Of TMessage)(Action(Of TMessage), Type, Boolean)
- uid: Cqrs.Akka.Events.AkkaEventBus`1.RegisterHandler``1(System.Action{``0},System.Boolean)
  commentId: M:Cqrs.Akka.Events.AkkaEventBus`1.RegisterHandler``1(System.Action{``0},System.Boolean)
  id: RegisterHandler``1(System.Action{``0},System.Boolean)
  parent: Cqrs.Akka.Events.AkkaEventBus`1
  langs:
  - csharp
  - vb
  name: RegisterHandler<TMessage>(Action<TMessage>, Boolean)
  nameWithType: AkkaEventBus<TAuthenticationToken>.RegisterHandler<TMessage>(Action<TMessage>, Boolean)
  fullName: Cqrs.Akka.Events.AkkaEventBus<TAuthenticationToken>.RegisterHandler<TMessage>(System.Action<TMessage>, System.Boolean)
  type: Method
  source:
    remote:
      path: Framework/Akka.Net/Cqrs.Akka/Events/AkkaEventBus.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: RegisterHandler
    path: Framework/Akka.Net/Cqrs.Akka/Events/AkkaEventBus.cs
    startLine: 159
  assemblies:
  - Cqrs.Akka
  namespace: Cqrs.Akka.Events
  summary: "\nRegister an event or command handler that will listen and respond to events or commands.\n"
  example: []
  syntax:
    content: 'public void RegisterHandler<TMessage>(Action<TMessage> handler, bool holdMessageLock = true)where TMessage : IMessage'
    parameters:
    - id: handler
      type: System.Action{{TMessage}}
    - id: holdMessageLock
      type: System.Boolean
    typeParameters:
    - id: TMessage
    content.vb: Public Sub RegisterHandler(Of TMessage As IMessage)(handler As Action(Of TMessage), holdMessageLock As Boolean = True)
  overload: Cqrs.Akka.Events.AkkaEventBus`1.RegisterHandler*
  implements:
  - Cqrs.Bus.IHandlerRegistrar.RegisterHandler``1(System.Action{{TMessage}},System.Boolean)
  nameWithType.vb: AkkaEventBus(Of TAuthenticationToken).RegisterHandler(Of TMessage)(Action(Of TMessage), Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Cqrs.Akka.Events.AkkaEventBus(Of TAuthenticationToken).RegisterHandler(Of TMessage)(System.Action(Of TMessage), System.Boolean)
  name.vb: RegisterHandler(Of TMessage)(Action(Of TMessage), Boolean)
- uid: Cqrs.Akka.Events.AkkaEventBus`1.RegisterGlobalEventHandler``1(System.Action{``0},System.Boolean)
  commentId: M:Cqrs.Akka.Events.AkkaEventBus`1.RegisterGlobalEventHandler``1(System.Action{``0},System.Boolean)
  id: RegisterGlobalEventHandler``1(System.Action{``0},System.Boolean)
  parent: Cqrs.Akka.Events.AkkaEventBus`1
  langs:
  - csharp
  - vb
  name: RegisterGlobalEventHandler<TMessage>(Action<TMessage>, Boolean)
  nameWithType: AkkaEventBus<TAuthenticationToken>.RegisterGlobalEventHandler<TMessage>(Action<TMessage>, Boolean)
  fullName: Cqrs.Akka.Events.AkkaEventBus<TAuthenticationToken>.RegisterGlobalEventHandler<TMessage>(System.Action<TMessage>, System.Boolean)
  type: Method
  source:
    remote:
      path: Framework/Akka.Net/Cqrs.Akka/Events/AkkaEventBus.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: RegisterGlobalEventHandler
    path: Framework/Akka.Net/Cqrs.Akka/Events/AkkaEventBus.cs
    startLine: 167
  assemblies:
  - Cqrs.Akka
  namespace: Cqrs.Akka.Events
  summary: "\nRegister an event handler that will listen and respond to all events.\n"
  example: []
  syntax:
    content: 'public void RegisterGlobalEventHandler<TMessage>(Action<TMessage> handler, bool holdMessageLock = true)where TMessage : IMessage'
    parameters:
    - id: handler
      type: System.Action{{TMessage}}
    - id: holdMessageLock
      type: System.Boolean
    typeParameters:
    - id: TMessage
    content.vb: Public Sub RegisterGlobalEventHandler(Of TMessage As IMessage)(handler As Action(Of TMessage), holdMessageLock As Boolean = True)
  overload: Cqrs.Akka.Events.AkkaEventBus`1.RegisterGlobalEventHandler*
  implements:
  - Cqrs.Bus.IEventHandlerRegistrar.RegisterGlobalEventHandler``1(System.Action{{TMessage}},System.Boolean)
  nameWithType.vb: AkkaEventBus(Of TAuthenticationToken).RegisterGlobalEventHandler(Of TMessage)(Action(Of TMessage), Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Cqrs.Akka.Events.AkkaEventBus(Of TAuthenticationToken).RegisterGlobalEventHandler(Of TMessage)(System.Action(Of TMessage), System.Boolean)
  name.vb: RegisterGlobalEventHandler(Of TMessage)(Action(Of TMessage), Boolean)
references:
- uid: Cqrs.Events.IEventPublisher`1
  commentId: T:Cqrs.Events.IEventPublisher`1
  isExternal: false
  name: IEventPublisher<TAuthenticationToken>
  nameWithType: IEventPublisher<TAuthenticationToken>
  fullName: Cqrs.Events.IEventPublisher<TAuthenticationToken>
  nameWithType.vb: IEventPublisher(Of TAuthenticationToken)
  fullName.vb: Cqrs.Events.IEventPublisher(Of TAuthenticationToken)
  name.vb: IEventPublisher(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Events.IEventPublisher`1
    name: IEventPublisher
    nameWithType: IEventPublisher
    fullName: Cqrs.Events.IEventPublisher
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Events.IEventPublisher`1
    name: IEventPublisher
    nameWithType: IEventPublisher
    fullName: Cqrs.Events.IEventPublisher
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Events.IEvent`1
  commentId: T:Cqrs.Events.IEvent`1
  isExternal: false
  name: IEvent<TAuthenticationToken>
  nameWithType: IEvent<TAuthenticationToken>
  fullName: Cqrs.Events.IEvent<TAuthenticationToken>
  nameWithType.vb: IEvent(Of TAuthenticationToken)
  fullName.vb: Cqrs.Events.IEvent(Of TAuthenticationToken)
  name.vb: IEvent(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Akka.Actor.IActorRef
  commentId: T:Akka.Actor.IActorRef
  parent: Akka.Actor
  isExternal: true
  name: IActorRef
  nameWithType: IActorRef
  fullName: Akka.Actor.IActorRef
- uid: Cqrs.Akka.Events
  commentId: N:Cqrs.Akka.Events
  isExternal: false
  name: Cqrs.Akka.Events
  nameWithType: Cqrs.Akka.Events
  fullName: Cqrs.Akka.Events
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Cqrs.Akka.Events.IAkkaEventPublisher{{TAuthenticationToken}}
  commentId: T:Cqrs.Akka.Events.IAkkaEventPublisher{`0}
  parent: Cqrs.Akka.Events
  definition: Cqrs.Akka.Events.IAkkaEventPublisher`1
  name: IAkkaEventPublisher<TAuthenticationToken>
  nameWithType: IAkkaEventPublisher<TAuthenticationToken>
  fullName: Cqrs.Akka.Events.IAkkaEventPublisher<TAuthenticationToken>
  nameWithType.vb: IAkkaEventPublisher(Of TAuthenticationToken)
  fullName.vb: Cqrs.Akka.Events.IAkkaEventPublisher(Of TAuthenticationToken)
  name.vb: IAkkaEventPublisher(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Akka.Events.IAkkaEventPublisher`1
    name: IAkkaEventPublisher
    nameWithType: IAkkaEventPublisher
    fullName: Cqrs.Akka.Events.IAkkaEventPublisher
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Akka.Events.IAkkaEventPublisher`1
    name: IAkkaEventPublisher
    nameWithType: IAkkaEventPublisher
    fullName: Cqrs.Akka.Events.IAkkaEventPublisher
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Events.IEventPublisher{{TAuthenticationToken}}
  commentId: T:Cqrs.Events.IEventPublisher{`0}
  parent: Cqrs.Events
  definition: Cqrs.Events.IEventPublisher`1
  name: IEventPublisher<TAuthenticationToken>
  nameWithType: IEventPublisher<TAuthenticationToken>
  fullName: Cqrs.Events.IEventPublisher<TAuthenticationToken>
  nameWithType.vb: IEventPublisher(Of TAuthenticationToken)
  fullName.vb: Cqrs.Events.IEventPublisher(Of TAuthenticationToken)
  name.vb: IEventPublisher(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Events.IEventPublisher`1
    name: IEventPublisher
    nameWithType: IEventPublisher
    fullName: Cqrs.Events.IEventPublisher
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Events.IEventPublisher`1
    name: IEventPublisher
    nameWithType: IEventPublisher
    fullName: Cqrs.Events.IEventPublisher
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Bus.IEventHandlerRegistrar
  commentId: T:Cqrs.Bus.IEventHandlerRegistrar
  parent: Cqrs.Bus
  isExternal: false
  name: IEventHandlerRegistrar
  nameWithType: IEventHandlerRegistrar
  fullName: Cqrs.Bus.IEventHandlerRegistrar
- uid: Cqrs.Bus.IHandlerRegistrar
  commentId: T:Cqrs.Bus.IHandlerRegistrar
  parent: Cqrs.Bus
  isExternal: false
  name: IHandlerRegistrar
  nameWithType: IHandlerRegistrar
  fullName: Cqrs.Bus.IHandlerRegistrar
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Akka.Actor
  commentId: N:Akka.Actor
  isExternal: false
  name: Akka.Actor
  nameWithType: Akka.Actor
  fullName: Akka.Actor
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Cqrs.Akka.Events.IAkkaEventPublisher`1
  commentId: T:Cqrs.Akka.Events.IAkkaEventPublisher`1
  isExternal: false
  name: IAkkaEventPublisher<TAuthenticationToken>
  nameWithType: IAkkaEventPublisher<TAuthenticationToken>
  fullName: Cqrs.Akka.Events.IAkkaEventPublisher<TAuthenticationToken>
  nameWithType.vb: IAkkaEventPublisher(Of TAuthenticationToken)
  fullName.vb: Cqrs.Akka.Events.IAkkaEventPublisher(Of TAuthenticationToken)
  name.vb: IAkkaEventPublisher(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Akka.Events.IAkkaEventPublisher`1
    name: IAkkaEventPublisher
    nameWithType: IAkkaEventPublisher
    fullName: Cqrs.Akka.Events.IAkkaEventPublisher
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Akka.Events.IAkkaEventPublisher`1
    name: IAkkaEventPublisher
    nameWithType: IAkkaEventPublisher
    fullName: Cqrs.Akka.Events.IAkkaEventPublisher
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Events
  commentId: N:Cqrs.Events
  isExternal: false
  name: Cqrs.Events
  nameWithType: Cqrs.Events
  fullName: Cqrs.Events
- uid: Cqrs.Bus
  commentId: N:Cqrs.Bus
  isExternal: false
  name: Cqrs.Bus
  nameWithType: Cqrs.Bus
  fullName: Cqrs.Bus
- uid: Cqrs.Akka.Events.AkkaEventBus`1.Routes*
  commentId: Overload:Cqrs.Akka.Events.AkkaEventBus`1.Routes
  isExternal: false
  name: Routes
  nameWithType: AkkaEventBus<TAuthenticationToken>.Routes
  fullName: Cqrs.Akka.Events.AkkaEventBus<TAuthenticationToken>.Routes
  nameWithType.vb: AkkaEventBus(Of TAuthenticationToken).Routes
  fullName.vb: Cqrs.Akka.Events.AkkaEventBus(Of TAuthenticationToken).Routes
- uid: Cqrs.Bus.RouteManager
  commentId: T:Cqrs.Bus.RouteManager
  parent: Cqrs.Bus
  isExternal: false
  name: RouteManager
  nameWithType: RouteManager
  fullName: Cqrs.Bus.RouteManager
- uid: Cqrs.Akka.Events.AkkaEventBus`1.EventPublisher*
  commentId: Overload:Cqrs.Akka.Events.AkkaEventBus`1.EventPublisher
  isExternal: false
  name: EventPublisher
  nameWithType: AkkaEventBus<TAuthenticationToken>.EventPublisher
  fullName: Cqrs.Akka.Events.AkkaEventBus<TAuthenticationToken>.EventPublisher
  nameWithType.vb: AkkaEventBus(Of TAuthenticationToken).EventPublisher
  fullName.vb: Cqrs.Akka.Events.AkkaEventBus(Of TAuthenticationToken).EventPublisher
- uid: Cqrs.Akka.Events.AkkaEventBus`1.EventReceiver*
  commentId: Overload:Cqrs.Akka.Events.AkkaEventBus`1.EventReceiver
  isExternal: false
  name: EventReceiver
  nameWithType: AkkaEventBus<TAuthenticationToken>.EventReceiver
  fullName: Cqrs.Akka.Events.AkkaEventBus<TAuthenticationToken>.EventReceiver
  nameWithType.vb: AkkaEventBus(Of TAuthenticationToken).EventReceiver
  fullName.vb: Cqrs.Akka.Events.AkkaEventBus(Of TAuthenticationToken).EventReceiver
- uid: Cqrs.Events.IEventReceiver{{TAuthenticationToken}}
  commentId: T:Cqrs.Events.IEventReceiver{`0}
  parent: Cqrs.Events
  definition: Cqrs.Events.IEventReceiver`1
  name: IEventReceiver<TAuthenticationToken>
  nameWithType: IEventReceiver<TAuthenticationToken>
  fullName: Cqrs.Events.IEventReceiver<TAuthenticationToken>
  nameWithType.vb: IEventReceiver(Of TAuthenticationToken)
  fullName.vb: Cqrs.Events.IEventReceiver(Of TAuthenticationToken)
  name.vb: IEventReceiver(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Events.IEventReceiver`1
    name: IEventReceiver
    nameWithType: IEventReceiver
    fullName: Cqrs.Events.IEventReceiver
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Events.IEventReceiver`1
    name: IEventReceiver
    nameWithType: IEventReceiver
    fullName: Cqrs.Events.IEventReceiver
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Events.IEventReceiver`1
  commentId: T:Cqrs.Events.IEventReceiver`1
  isExternal: false
  name: IEventReceiver<TAuthenticationToken>
  nameWithType: IEventReceiver<TAuthenticationToken>
  fullName: Cqrs.Events.IEventReceiver<TAuthenticationToken>
  nameWithType.vb: IEventReceiver(Of TAuthenticationToken)
  fullName.vb: Cqrs.Events.IEventReceiver(Of TAuthenticationToken)
  name.vb: IEventReceiver(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Events.IEventReceiver`1
    name: IEventReceiver
    nameWithType: IEventReceiver
    fullName: Cqrs.Events.IEventReceiver
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Events.IEventReceiver`1
    name: IEventReceiver
    nameWithType: IEventReceiver
    fullName: Cqrs.Events.IEventReceiver
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Akka.Events.AkkaEventBus`1.AuthenticationTokenHelper*
  commentId: Overload:Cqrs.Akka.Events.AkkaEventBus`1.AuthenticationTokenHelper
  isExternal: false
  name: AuthenticationTokenHelper
  nameWithType: AkkaEventBus<TAuthenticationToken>.AuthenticationTokenHelper
  fullName: Cqrs.Akka.Events.AkkaEventBus<TAuthenticationToken>.AuthenticationTokenHelper
  nameWithType.vb: AkkaEventBus(Of TAuthenticationToken).AuthenticationTokenHelper
  fullName.vb: Cqrs.Akka.Events.AkkaEventBus(Of TAuthenticationToken).AuthenticationTokenHelper
- uid: Cqrs.Authentication.IAuthenticationTokenHelper{{TAuthenticationToken}}
  commentId: T:Cqrs.Authentication.IAuthenticationTokenHelper{`0}
  parent: Cqrs.Authentication
  definition: Cqrs.Authentication.IAuthenticationTokenHelper`1
  name: IAuthenticationTokenHelper<TAuthenticationToken>
  nameWithType: IAuthenticationTokenHelper<TAuthenticationToken>
  fullName: Cqrs.Authentication.IAuthenticationTokenHelper<TAuthenticationToken>
  nameWithType.vb: IAuthenticationTokenHelper(Of TAuthenticationToken)
  fullName.vb: Cqrs.Authentication.IAuthenticationTokenHelper(Of TAuthenticationToken)
  name.vb: IAuthenticationTokenHelper(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Authentication.IAuthenticationTokenHelper`1
    name: IAuthenticationTokenHelper
    nameWithType: IAuthenticationTokenHelper
    fullName: Cqrs.Authentication.IAuthenticationTokenHelper
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Authentication.IAuthenticationTokenHelper`1
    name: IAuthenticationTokenHelper
    nameWithType: IAuthenticationTokenHelper
    fullName: Cqrs.Authentication.IAuthenticationTokenHelper
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Authentication.IAuthenticationTokenHelper`1
  commentId: T:Cqrs.Authentication.IAuthenticationTokenHelper`1
  isExternal: false
  name: IAuthenticationTokenHelper<TAuthenticationToken>
  nameWithType: IAuthenticationTokenHelper<TAuthenticationToken>
  fullName: Cqrs.Authentication.IAuthenticationTokenHelper<TAuthenticationToken>
  nameWithType.vb: IAuthenticationTokenHelper(Of TAuthenticationToken)
  fullName.vb: Cqrs.Authentication.IAuthenticationTokenHelper(Of TAuthenticationToken)
  name.vb: IAuthenticationTokenHelper(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Authentication.IAuthenticationTokenHelper`1
    name: IAuthenticationTokenHelper
    nameWithType: IAuthenticationTokenHelper
    fullName: Cqrs.Authentication.IAuthenticationTokenHelper
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Authentication.IAuthenticationTokenHelper`1
    name: IAuthenticationTokenHelper
    nameWithType: IAuthenticationTokenHelper
    fullName: Cqrs.Authentication.IAuthenticationTokenHelper
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Authentication
  commentId: N:Cqrs.Authentication
  isExternal: false
  name: Cqrs.Authentication
  nameWithType: Cqrs.Authentication
  fullName: Cqrs.Authentication
- uid: Cqrs.Akka.Events.AkkaEventBus`1.CorrelationIdHelper*
  commentId: Overload:Cqrs.Akka.Events.AkkaEventBus`1.CorrelationIdHelper
  isExternal: false
  name: CorrelationIdHelper
  nameWithType: AkkaEventBus<TAuthenticationToken>.CorrelationIdHelper
  fullName: Cqrs.Akka.Events.AkkaEventBus<TAuthenticationToken>.CorrelationIdHelper
  nameWithType.vb: AkkaEventBus(Of TAuthenticationToken).CorrelationIdHelper
  fullName.vb: Cqrs.Akka.Events.AkkaEventBus(Of TAuthenticationToken).CorrelationIdHelper
- uid: cdmdotnet.Logging.ICorrelationIdHelper
  commentId: T:cdmdotnet.Logging.ICorrelationIdHelper
  parent: cdmdotnet.Logging
  isExternal: true
  name: ICorrelationIdHelper
  nameWithType: ICorrelationIdHelper
  fullName: cdmdotnet.Logging.ICorrelationIdHelper
- uid: cdmdotnet.Logging
  commentId: N:cdmdotnet.Logging
  isExternal: false
  name: cdmdotnet.Logging
  nameWithType: cdmdotnet.Logging
  fullName: cdmdotnet.Logging
- uid: Cqrs.Akka.Events.AkkaEventBus`1.BusHelper*
  commentId: Overload:Cqrs.Akka.Events.AkkaEventBus`1.BusHelper
  isExternal: false
  name: BusHelper
  nameWithType: AkkaEventBus<TAuthenticationToken>.BusHelper
  fullName: Cqrs.Akka.Events.AkkaEventBus<TAuthenticationToken>.BusHelper
  nameWithType.vb: AkkaEventBus(Of TAuthenticationToken).BusHelper
  fullName.vb: Cqrs.Akka.Events.AkkaEventBus(Of TAuthenticationToken).BusHelper
- uid: Cqrs.Bus.IBusHelper
  commentId: T:Cqrs.Bus.IBusHelper
  parent: Cqrs.Bus
  isExternal: false
  name: IBusHelper
  nameWithType: IBusHelper
  fullName: Cqrs.Bus.IBusHelper
- uid: Cqrs.Akka.Events.AkkaEventBus`1.Logger*
  commentId: Overload:Cqrs.Akka.Events.AkkaEventBus`1.Logger
  isExternal: false
  name: Logger
  nameWithType: AkkaEventBus<TAuthenticationToken>.Logger
  fullName: Cqrs.Akka.Events.AkkaEventBus<TAuthenticationToken>.Logger
  nameWithType.vb: AkkaEventBus(Of TAuthenticationToken).Logger
  fullName.vb: Cqrs.Akka.Events.AkkaEventBus(Of TAuthenticationToken).Logger
- uid: cdmdotnet.Logging.ILogger
  commentId: T:cdmdotnet.Logging.ILogger
  parent: cdmdotnet.Logging
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: cdmdotnet.Logging.ILogger
- uid: Cqrs.Akka.Events.AkkaEventBus`1.#ctor*
  commentId: Overload:Cqrs.Akka.Events.AkkaEventBus`1.#ctor
  isExternal: false
  name: AkkaEventBus
  nameWithType: AkkaEventBus<TAuthenticationToken>.AkkaEventBus
  fullName: Cqrs.Akka.Events.AkkaEventBus<TAuthenticationToken>.AkkaEventBus
  nameWithType.vb: AkkaEventBus(Of TAuthenticationToken).AkkaEventBus
  fullName.vb: Cqrs.Akka.Events.AkkaEventBus(Of TAuthenticationToken).AkkaEventBus
- uid: Cqrs.Akka.Events.AkkaEventBus`1.Publish*
  commentId: Overload:Cqrs.Akka.Events.AkkaEventBus`1.Publish
  isExternal: false
  name: Publish
  nameWithType: AkkaEventBus<TAuthenticationToken>.Publish
  fullName: Cqrs.Akka.Events.AkkaEventBus<TAuthenticationToken>.Publish
  nameWithType.vb: AkkaEventBus(Of TAuthenticationToken).Publish
  fullName.vb: Cqrs.Akka.Events.AkkaEventBus(Of TAuthenticationToken).Publish
- uid: Cqrs.Events.IEventPublisher{{TAuthenticationToken}}.Publish``1({TEvent})
  commentId: M:Cqrs.Events.IEventPublisher{`0}.Publish``1(``0)
  parent: Cqrs.Events.IEventPublisher{{TAuthenticationToken}}
  definition: Cqrs.Events.IEventPublisher`1.Publish``1(``0)
  name: Publish<TEvent>(TEvent)
  nameWithType: IEventPublisher<TAuthenticationToken>.Publish<TEvent>(TEvent)
  fullName: Cqrs.Events.IEventPublisher<TAuthenticationToken>.Publish<TEvent>(TEvent)
  nameWithType.vb: IEventPublisher(Of TAuthenticationToken).Publish(Of TEvent)(TEvent)
  fullName.vb: Cqrs.Events.IEventPublisher(Of TAuthenticationToken).Publish(Of TEvent)(TEvent)
  name.vb: Publish(Of TEvent)(TEvent)
  spec.csharp:
  - uid: Cqrs.Events.IEventPublisher`1.Publish``1(``0)
    name: Publish<TEvent>
    nameWithType: IEventPublisher<TAuthenticationToken>.Publish<TEvent>
    fullName: Cqrs.Events.IEventPublisher<TAuthenticationToken>.Publish<TEvent>
  - name: (
    nameWithType: (
    fullName: (
  - name: TEvent
    nameWithType: TEvent
    fullName: TEvent
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Events.IEventPublisher`1.Publish``1(``0)
    name: Publish(Of TEvent)
    nameWithType: IEventPublisher(Of TAuthenticationToken).Publish(Of TEvent)
    fullName: Cqrs.Events.IEventPublisher(Of TAuthenticationToken).Publish(Of TEvent)
  - name: (
    nameWithType: (
    fullName: (
  - name: TEvent
    nameWithType: TEvent
    fullName: TEvent
  - name: )
    nameWithType: )
    fullName: )
- uid: '{TEvent}'
  commentId: '!:TEvent'
  definition: TEvent
  name: TEvent
  nameWithType: TEvent
  fullName: TEvent
- uid: Cqrs.Events.IEventPublisher`1.Publish``1(``0)
  commentId: M:Cqrs.Events.IEventPublisher`1.Publish``1(``0)
  isExternal: false
  name: Publish<TEvent>(TEvent)
  nameWithType: IEventPublisher<TAuthenticationToken>.Publish<TEvent>(TEvent)
  fullName: Cqrs.Events.IEventPublisher<TAuthenticationToken>.Publish<TEvent>(TEvent)
  nameWithType.vb: IEventPublisher(Of TAuthenticationToken).Publish(Of TEvent)(TEvent)
  fullName.vb: Cqrs.Events.IEventPublisher(Of TAuthenticationToken).Publish(Of TEvent)(TEvent)
  name.vb: Publish(Of TEvent)(TEvent)
  spec.csharp:
  - uid: Cqrs.Events.IEventPublisher`1.Publish``1(``0)
    name: Publish<TEvent>
    nameWithType: IEventPublisher<TAuthenticationToken>.Publish<TEvent>
    fullName: Cqrs.Events.IEventPublisher<TAuthenticationToken>.Publish<TEvent>
  - name: (
    nameWithType: (
    fullName: (
  - name: TEvent
    nameWithType: TEvent
    fullName: TEvent
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Events.IEventPublisher`1.Publish``1(``0)
    name: Publish(Of TEvent)
    nameWithType: IEventPublisher(Of TAuthenticationToken).Publish(Of TEvent)
    fullName: Cqrs.Events.IEventPublisher(Of TAuthenticationToken).Publish(Of TEvent)
  - name: (
    nameWithType: (
    fullName: (
  - name: TEvent
    nameWithType: TEvent
    fullName: TEvent
  - name: )
    nameWithType: )
    fullName: )
- uid: TEvent
  isExternal: false
  name: TEvent
  nameWithType: TEvent
  fullName: TEvent
- uid: Cqrs.Events.IEventPublisher{{TAuthenticationToken}}.Publish``1(System.Collections.Generic.IEnumerable{{TEvent}})
  commentId: M:Cqrs.Events.IEventPublisher{`0}.Publish``1(System.Collections.Generic.IEnumerable{``0})
  parent: Cqrs.Events.IEventPublisher{{TAuthenticationToken}}
  definition: Cqrs.Events.IEventPublisher`1.Publish``1(System.Collections.Generic.IEnumerable{``0})
  name: Publish<TEvent>(IEnumerable<TEvent>)
  nameWithType: IEventPublisher<TAuthenticationToken>.Publish<TEvent>(IEnumerable<TEvent>)
  fullName: Cqrs.Events.IEventPublisher<TAuthenticationToken>.Publish<TEvent>(System.Collections.Generic.IEnumerable<TEvent>)
  nameWithType.vb: IEventPublisher(Of TAuthenticationToken).Publish(Of TEvent)(IEnumerable(Of TEvent))
  fullName.vb: Cqrs.Events.IEventPublisher(Of TAuthenticationToken).Publish(Of TEvent)(System.Collections.Generic.IEnumerable(Of TEvent))
  name.vb: Publish(Of TEvent)(IEnumerable(Of TEvent))
  spec.csharp:
  - uid: Cqrs.Events.IEventPublisher`1.Publish``1(System.Collections.Generic.IEnumerable{``0})
    name: Publish<TEvent>
    nameWithType: IEventPublisher<TAuthenticationToken>.Publish<TEvent>
    fullName: Cqrs.Events.IEventPublisher<TAuthenticationToken>.Publish<TEvent>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEvent
    nameWithType: TEvent
    fullName: TEvent
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Events.IEventPublisher`1.Publish``1(System.Collections.Generic.IEnumerable{``0})
    name: Publish(Of TEvent)
    nameWithType: IEventPublisher(Of TAuthenticationToken).Publish(Of TEvent)
    fullName: Cqrs.Events.IEventPublisher(Of TAuthenticationToken).Publish(Of TEvent)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEvent
    nameWithType: TEvent
    fullName: TEvent
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{{TEvent}}
  commentId: T:System.Collections.Generic.IEnumerable{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<TEvent>
  nameWithType: IEnumerable<TEvent>
  fullName: System.Collections.Generic.IEnumerable<TEvent>
  nameWithType.vb: IEnumerable(Of TEvent)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TEvent)
  name.vb: IEnumerable(Of TEvent)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEvent
    nameWithType: TEvent
    fullName: TEvent
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEvent
    nameWithType: TEvent
    fullName: TEvent
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Events.IEventPublisher`1.Publish``1(System.Collections.Generic.IEnumerable{``0})
  commentId: M:Cqrs.Events.IEventPublisher`1.Publish``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: Publish<TEvent>(IEnumerable<TEvent>)
  nameWithType: IEventPublisher<TAuthenticationToken>.Publish<TEvent>(IEnumerable<TEvent>)
  fullName: Cqrs.Events.IEventPublisher<TAuthenticationToken>.Publish<TEvent>(System.Collections.Generic.IEnumerable<TEvent>)
  nameWithType.vb: IEventPublisher(Of TAuthenticationToken).Publish(Of TEvent)(IEnumerable(Of TEvent))
  fullName.vb: Cqrs.Events.IEventPublisher(Of TAuthenticationToken).Publish(Of TEvent)(System.Collections.Generic.IEnumerable(Of TEvent))
  name.vb: Publish(Of TEvent)(IEnumerable(Of TEvent))
  spec.csharp:
  - uid: Cqrs.Events.IEventPublisher`1.Publish``1(System.Collections.Generic.IEnumerable{``0})
    name: Publish<TEvent>
    nameWithType: IEventPublisher<TAuthenticationToken>.Publish<TEvent>
    fullName: Cqrs.Events.IEventPublisher<TAuthenticationToken>.Publish<TEvent>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEvent
    nameWithType: TEvent
    fullName: TEvent
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Events.IEventPublisher`1.Publish``1(System.Collections.Generic.IEnumerable{``0})
    name: Publish(Of TEvent)
    nameWithType: IEventPublisher(Of TAuthenticationToken).Publish(Of TEvent)
    fullName: Cqrs.Events.IEventPublisher(Of TAuthenticationToken).Publish(Of TEvent)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEvent
    nameWithType: TEvent
    fullName: TEvent
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Cqrs.Akka.Events.AkkaEventBus`1.PrepareEvent*
  commentId: Overload:Cqrs.Akka.Events.AkkaEventBus`1.PrepareEvent
  isExternal: false
  name: PrepareEvent
  nameWithType: AkkaEventBus<TAuthenticationToken>.PrepareEvent
  fullName: Cqrs.Akka.Events.AkkaEventBus<TAuthenticationToken>.PrepareEvent
  nameWithType.vb: AkkaEventBus(Of TAuthenticationToken).PrepareEvent
  fullName.vb: Cqrs.Akka.Events.AkkaEventBus(Of TAuthenticationToken).PrepareEvent
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Cqrs.Akka.Events.AkkaEventBus`1.PrepareAndValidateEvent*
  commentId: Overload:Cqrs.Akka.Events.AkkaEventBus`1.PrepareAndValidateEvent
  isExternal: false
  name: PrepareAndValidateEvent
  nameWithType: AkkaEventBus<TAuthenticationToken>.PrepareAndValidateEvent
  fullName: Cqrs.Akka.Events.AkkaEventBus<TAuthenticationToken>.PrepareAndValidateEvent
  nameWithType.vb: AkkaEventBus(Of TAuthenticationToken).PrepareAndValidateEvent
  fullName.vb: Cqrs.Akka.Events.AkkaEventBus(Of TAuthenticationToken).PrepareAndValidateEvent
- uid: System.Collections.Generic.IEnumerable{Cqrs.Bus.RouteHandlerDelegate}
  commentId: T:System.Collections.Generic.IEnumerable{Cqrs.Bus.RouteHandlerDelegate}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<RouteHandlerDelegate>
  nameWithType: IEnumerable<RouteHandlerDelegate>
  fullName: System.Collections.Generic.IEnumerable<Cqrs.Bus.RouteHandlerDelegate>
  nameWithType.vb: IEnumerable(Of RouteHandlerDelegate)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Cqrs.Bus.RouteHandlerDelegate)
  name.vb: IEnumerable(Of RouteHandlerDelegate)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cqrs.Bus.RouteHandlerDelegate
    name: RouteHandlerDelegate
    nameWithType: RouteHandlerDelegate
    fullName: Cqrs.Bus.RouteHandlerDelegate
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Cqrs.Bus.RouteHandlerDelegate
    name: RouteHandlerDelegate
    nameWithType: RouteHandlerDelegate
    fullName: Cqrs.Bus.RouteHandlerDelegate
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Cqrs.Akka.Events.AkkaEventBus`1.RegisterHandler*
  commentId: Overload:Cqrs.Akka.Events.AkkaEventBus`1.RegisterHandler
  isExternal: false
  name: RegisterHandler
  nameWithType: AkkaEventBus<TAuthenticationToken>.RegisterHandler
  fullName: Cqrs.Akka.Events.AkkaEventBus<TAuthenticationToken>.RegisterHandler
  nameWithType.vb: AkkaEventBus(Of TAuthenticationToken).RegisterHandler
  fullName.vb: Cqrs.Akka.Events.AkkaEventBus(Of TAuthenticationToken).RegisterHandler
- uid: Cqrs.Bus.IHandlerRegistrar.RegisterHandler``1(System.Action{{TMessage}},System.Type,System.Boolean)
  commentId: M:Cqrs.Bus.IHandlerRegistrar.RegisterHandler``1(System.Action{``0},System.Type,System.Boolean)
  parent: Cqrs.Bus.IHandlerRegistrar
  definition: Cqrs.Bus.IHandlerRegistrar.RegisterHandler``1(System.Action{``0},System.Type,System.Boolean)
  name: RegisterHandler<TMessage>(Action<TMessage>, Type, Boolean)
  nameWithType: IHandlerRegistrar.RegisterHandler<TMessage>(Action<TMessage>, Type, Boolean)
  fullName: Cqrs.Bus.IHandlerRegistrar.RegisterHandler<TMessage>(System.Action<TMessage>, System.Type, System.Boolean)
  nameWithType.vb: IHandlerRegistrar.RegisterHandler(Of TMessage)(Action(Of TMessage), Type, Boolean)
  fullName.vb: Cqrs.Bus.IHandlerRegistrar.RegisterHandler(Of TMessage)(System.Action(Of TMessage), System.Type, System.Boolean)
  name.vb: RegisterHandler(Of TMessage)(Action(Of TMessage), Type, Boolean)
  spec.csharp:
  - uid: Cqrs.Bus.IHandlerRegistrar.RegisterHandler``1(System.Action{``0},System.Type,System.Boolean)
    name: RegisterHandler<TMessage>
    nameWithType: IHandlerRegistrar.RegisterHandler<TMessage>
    fullName: Cqrs.Bus.IHandlerRegistrar.RegisterHandler<TMessage>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TMessage
    nameWithType: TMessage
    fullName: TMessage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Bus.IHandlerRegistrar.RegisterHandler``1(System.Action{``0},System.Type,System.Boolean)
    name: RegisterHandler(Of TMessage)
    nameWithType: IHandlerRegistrar.RegisterHandler(Of TMessage)
    fullName: Cqrs.Bus.IHandlerRegistrar.RegisterHandler(Of TMessage)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TMessage
    nameWithType: TMessage
    fullName: TMessage
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action{{TMessage}}
  commentId: T:System.Action{``0}
  parent: System
  definition: System.Action`1
  name: Action<TMessage>
  nameWithType: Action<TMessage>
  fullName: System.Action<TMessage>
  nameWithType.vb: Action(Of TMessage)
  fullName.vb: System.Action(Of TMessage)
  name.vb: Action(Of TMessage)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TMessage
    nameWithType: TMessage
    fullName: TMessage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TMessage
    nameWithType: TMessage
    fullName: TMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Cqrs.Bus.IHandlerRegistrar.RegisterHandler``1(System.Action{``0},System.Type,System.Boolean)
  commentId: M:Cqrs.Bus.IHandlerRegistrar.RegisterHandler``1(System.Action{``0},System.Type,System.Boolean)
  isExternal: true
  name: RegisterHandler<TMessage>(Action<TMessage>, Type, Boolean)
  nameWithType: IHandlerRegistrar.RegisterHandler<TMessage>(Action<TMessage>, Type, Boolean)
  fullName: Cqrs.Bus.IHandlerRegistrar.RegisterHandler<TMessage>(System.Action<TMessage>, System.Type, System.Boolean)
  nameWithType.vb: IHandlerRegistrar.RegisterHandler(Of TMessage)(Action(Of TMessage), Type, Boolean)
  fullName.vb: Cqrs.Bus.IHandlerRegistrar.RegisterHandler(Of TMessage)(System.Action(Of TMessage), System.Type, System.Boolean)
  name.vb: RegisterHandler(Of TMessage)(Action(Of TMessage), Type, Boolean)
  spec.csharp:
  - uid: Cqrs.Bus.IHandlerRegistrar.RegisterHandler``1(System.Action{``0},System.Type,System.Boolean)
    name: RegisterHandler<TMessage>
    nameWithType: IHandlerRegistrar.RegisterHandler<TMessage>
    fullName: Cqrs.Bus.IHandlerRegistrar.RegisterHandler<TMessage>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TMessage
    nameWithType: TMessage
    fullName: TMessage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Bus.IHandlerRegistrar.RegisterHandler``1(System.Action{``0},System.Type,System.Boolean)
    name: RegisterHandler(Of TMessage)
    nameWithType: IHandlerRegistrar.RegisterHandler(Of TMessage)
    fullName: Cqrs.Bus.IHandlerRegistrar.RegisterHandler(Of TMessage)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TMessage
    nameWithType: TMessage
    fullName: TMessage
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Bus.IHandlerRegistrar.RegisterHandler``1(System.Action{{TMessage}},System.Boolean)
  commentId: M:Cqrs.Bus.IHandlerRegistrar.RegisterHandler``1(System.Action{``0},System.Boolean)
  parent: Cqrs.Bus.IHandlerRegistrar
  definition: Cqrs.Bus.IHandlerRegistrar.RegisterHandler``1(System.Action{``0},System.Boolean)
  name: RegisterHandler<TMessage>(Action<TMessage>, Boolean)
  nameWithType: IHandlerRegistrar.RegisterHandler<TMessage>(Action<TMessage>, Boolean)
  fullName: Cqrs.Bus.IHandlerRegistrar.RegisterHandler<TMessage>(System.Action<TMessage>, System.Boolean)
  nameWithType.vb: IHandlerRegistrar.RegisterHandler(Of TMessage)(Action(Of TMessage), Boolean)
  fullName.vb: Cqrs.Bus.IHandlerRegistrar.RegisterHandler(Of TMessage)(System.Action(Of TMessage), System.Boolean)
  name.vb: RegisterHandler(Of TMessage)(Action(Of TMessage), Boolean)
  spec.csharp:
  - uid: Cqrs.Bus.IHandlerRegistrar.RegisterHandler``1(System.Action{``0},System.Boolean)
    name: RegisterHandler<TMessage>
    nameWithType: IHandlerRegistrar.RegisterHandler<TMessage>
    fullName: Cqrs.Bus.IHandlerRegistrar.RegisterHandler<TMessage>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TMessage
    nameWithType: TMessage
    fullName: TMessage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Bus.IHandlerRegistrar.RegisterHandler``1(System.Action{``0},System.Boolean)
    name: RegisterHandler(Of TMessage)
    nameWithType: IHandlerRegistrar.RegisterHandler(Of TMessage)
    fullName: Cqrs.Bus.IHandlerRegistrar.RegisterHandler(Of TMessage)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TMessage
    nameWithType: TMessage
    fullName: TMessage
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Bus.IHandlerRegistrar.RegisterHandler``1(System.Action{``0},System.Boolean)
  commentId: M:Cqrs.Bus.IHandlerRegistrar.RegisterHandler``1(System.Action{``0},System.Boolean)
  isExternal: true
  name: RegisterHandler<TMessage>(Action<TMessage>, Boolean)
  nameWithType: IHandlerRegistrar.RegisterHandler<TMessage>(Action<TMessage>, Boolean)
  fullName: Cqrs.Bus.IHandlerRegistrar.RegisterHandler<TMessage>(System.Action<TMessage>, System.Boolean)
  nameWithType.vb: IHandlerRegistrar.RegisterHandler(Of TMessage)(Action(Of TMessage), Boolean)
  fullName.vb: Cqrs.Bus.IHandlerRegistrar.RegisterHandler(Of TMessage)(System.Action(Of TMessage), System.Boolean)
  name.vb: RegisterHandler(Of TMessage)(Action(Of TMessage), Boolean)
  spec.csharp:
  - uid: Cqrs.Bus.IHandlerRegistrar.RegisterHandler``1(System.Action{``0},System.Boolean)
    name: RegisterHandler<TMessage>
    nameWithType: IHandlerRegistrar.RegisterHandler<TMessage>
    fullName: Cqrs.Bus.IHandlerRegistrar.RegisterHandler<TMessage>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TMessage
    nameWithType: TMessage
    fullName: TMessage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Bus.IHandlerRegistrar.RegisterHandler``1(System.Action{``0},System.Boolean)
    name: RegisterHandler(Of TMessage)
    nameWithType: IHandlerRegistrar.RegisterHandler(Of TMessage)
    fullName: Cqrs.Bus.IHandlerRegistrar.RegisterHandler(Of TMessage)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TMessage
    nameWithType: TMessage
    fullName: TMessage
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Akka.Events.AkkaEventBus`1.RegisterGlobalEventHandler*
  commentId: Overload:Cqrs.Akka.Events.AkkaEventBus`1.RegisterGlobalEventHandler
  isExternal: false
  name: RegisterGlobalEventHandler
  nameWithType: AkkaEventBus<TAuthenticationToken>.RegisterGlobalEventHandler
  fullName: Cqrs.Akka.Events.AkkaEventBus<TAuthenticationToken>.RegisterGlobalEventHandler
  nameWithType.vb: AkkaEventBus(Of TAuthenticationToken).RegisterGlobalEventHandler
  fullName.vb: Cqrs.Akka.Events.AkkaEventBus(Of TAuthenticationToken).RegisterGlobalEventHandler
- uid: Cqrs.Bus.IEventHandlerRegistrar.RegisterGlobalEventHandler``1(System.Action{{TMessage}},System.Boolean)
  commentId: M:Cqrs.Bus.IEventHandlerRegistrar.RegisterGlobalEventHandler``1(System.Action{``0},System.Boolean)
  parent: Cqrs.Bus.IEventHandlerRegistrar
  definition: Cqrs.Bus.IEventHandlerRegistrar.RegisterGlobalEventHandler``1(System.Action{``0},System.Boolean)
  name: RegisterGlobalEventHandler<TMessage>(Action<TMessage>, Boolean)
  nameWithType: IEventHandlerRegistrar.RegisterGlobalEventHandler<TMessage>(Action<TMessage>, Boolean)
  fullName: Cqrs.Bus.IEventHandlerRegistrar.RegisterGlobalEventHandler<TMessage>(System.Action<TMessage>, System.Boolean)
  nameWithType.vb: IEventHandlerRegistrar.RegisterGlobalEventHandler(Of TMessage)(Action(Of TMessage), Boolean)
  fullName.vb: Cqrs.Bus.IEventHandlerRegistrar.RegisterGlobalEventHandler(Of TMessage)(System.Action(Of TMessage), System.Boolean)
  name.vb: RegisterGlobalEventHandler(Of TMessage)(Action(Of TMessage), Boolean)
  spec.csharp:
  - uid: Cqrs.Bus.IEventHandlerRegistrar.RegisterGlobalEventHandler``1(System.Action{``0},System.Boolean)
    name: RegisterGlobalEventHandler<TMessage>
    nameWithType: IEventHandlerRegistrar.RegisterGlobalEventHandler<TMessage>
    fullName: Cqrs.Bus.IEventHandlerRegistrar.RegisterGlobalEventHandler<TMessage>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TMessage
    nameWithType: TMessage
    fullName: TMessage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Bus.IEventHandlerRegistrar.RegisterGlobalEventHandler``1(System.Action{``0},System.Boolean)
    name: RegisterGlobalEventHandler(Of TMessage)
    nameWithType: IEventHandlerRegistrar.RegisterGlobalEventHandler(Of TMessage)
    fullName: Cqrs.Bus.IEventHandlerRegistrar.RegisterGlobalEventHandler(Of TMessage)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TMessage
    nameWithType: TMessage
    fullName: TMessage
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Bus.IEventHandlerRegistrar.RegisterGlobalEventHandler``1(System.Action{``0},System.Boolean)
  commentId: M:Cqrs.Bus.IEventHandlerRegistrar.RegisterGlobalEventHandler``1(System.Action{``0},System.Boolean)
  isExternal: true
  name: RegisterGlobalEventHandler<TMessage>(Action<TMessage>, Boolean)
  nameWithType: IEventHandlerRegistrar.RegisterGlobalEventHandler<TMessage>(Action<TMessage>, Boolean)
  fullName: Cqrs.Bus.IEventHandlerRegistrar.RegisterGlobalEventHandler<TMessage>(System.Action<TMessage>, System.Boolean)
  nameWithType.vb: IEventHandlerRegistrar.RegisterGlobalEventHandler(Of TMessage)(Action(Of TMessage), Boolean)
  fullName.vb: Cqrs.Bus.IEventHandlerRegistrar.RegisterGlobalEventHandler(Of TMessage)(System.Action(Of TMessage), System.Boolean)
  name.vb: RegisterGlobalEventHandler(Of TMessage)(Action(Of TMessage), Boolean)
  spec.csharp:
  - uid: Cqrs.Bus.IEventHandlerRegistrar.RegisterGlobalEventHandler``1(System.Action{``0},System.Boolean)
    name: RegisterGlobalEventHandler<TMessage>
    nameWithType: IEventHandlerRegistrar.RegisterGlobalEventHandler<TMessage>
    fullName: Cqrs.Bus.IEventHandlerRegistrar.RegisterGlobalEventHandler<TMessage>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TMessage
    nameWithType: TMessage
    fullName: TMessage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Bus.IEventHandlerRegistrar.RegisterGlobalEventHandler``1(System.Action{``0},System.Boolean)
    name: RegisterGlobalEventHandler(Of TMessage)
    nameWithType: IEventHandlerRegistrar.RegisterGlobalEventHandler(Of TMessage)
    fullName: Cqrs.Bus.IEventHandlerRegistrar.RegisterGlobalEventHandler(Of TMessage)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TMessage
    nameWithType: TMessage
    fullName: TMessage
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
