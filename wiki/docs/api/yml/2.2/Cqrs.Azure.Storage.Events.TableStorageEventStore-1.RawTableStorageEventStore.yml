### YamlMime:ManagedReference
items:
- uid: Cqrs.Azure.Storage.Events.TableStorageEventStore`1.RawTableStorageEventStore
  commentId: T:Cqrs.Azure.Storage.Events.TableStorageEventStore`1.RawTableStorageEventStore
  id: TableStorageEventStore`1.RawTableStorageEventStore
  parent: Cqrs.Azure.Storage.Events
  children:
  - Cqrs.Azure.Storage.Events.TableStorageEventStore`1.RawTableStorageEventStore.#ctor(cdmdotnet.Logging.ILogger,Cqrs.Azure.BlobStorage.ITableStorageStoreConnectionStringFactory,System.Boolean)
  - Cqrs.Azure.Storage.Events.TableStorageEventStore`1.RawTableStorageEventStore.CreateTableEntity(Cqrs.Events.EventData)
  - Cqrs.Azure.Storage.Events.TableStorageEventStore`1.RawTableStorageEventStore.GetSafeSourceName(System.String)
  langs:
  - csharp
  - vb
  name: TableStorageEventStore<TAuthenticationToken>.RawTableStorageEventStore
  nameWithType: TableStorageEventStore<TAuthenticationToken>.RawTableStorageEventStore
  fullName: Cqrs.Azure.Storage.Events.TableStorageEventStore<TAuthenticationToken>.RawTableStorageEventStore
  type: Class
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.Storage/Events/TableStorageEventStore.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: RawTableStorageEventStore
    path: Framework/Azure/Cqrs.Azure.Storage/Events/TableStorageEventStore.cs
    startLine: 79
  assemblies:
  - Cqrs.Azure.Storage
  namespace: Cqrs.Azure.Storage.Events
  syntax:
    content: 'public class RawTableStorageEventStore : TableStorageEventStore<TAuthenticationToken>.RawTableStorageEventStore, IEnumerable<EventDataTableEntity<EventData>>, IDataStore<EventData>, IOrderedQueryable<EventData>, IQueryable<EventData>, IEnumerable<EventData>, IOrderedQueryable, IQueryable, IEnumerable, IDisposable'
    content.vb: >-
      Public Class RawTableStorageEventStore

          Inherits TableStorageEventStore(Of TAuthenticationToken).RawTableStorageEventStore

          Implements IEnumerable(Of EventDataTableEntity(Of EventData)), IDataStore(Of EventData), IOrderedQueryable(Of EventData), IQueryable(Of EventData), IEnumerable(Of EventData), IOrderedQueryable, IQueryable, IEnumerable, IDisposable
  inheritance:
  - System.Object
  - Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}
  - Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}
  - Cqrs.Azure.BlobStorage.Events.TableStorageEventStore{{TAuthenticationToken}}.RawTableStorageEventStore
  implements:
  - System.Collections.Generic.IEnumerable{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData}}
  - Cqrs.DataStores.IDataStore{Cqrs.Events.EventData}
  - System.Linq.IOrderedQueryable{Cqrs.Events.EventData}
  - System.Linq.IQueryable{Cqrs.Events.EventData}
  - System.Collections.Generic.IEnumerable{Cqrs.Events.EventData}
  - System.Linq.IOrderedQueryable
  - System.Linq.IQueryable
  - System.Collections.IEnumerable
  - System.IDisposable
  inheritedMembers:
  - Cqrs.Azure.BlobStorage.Events.TableStorageEventStore{{TAuthenticationToken}}.RawTableStorageEventStore.IsCorrelationIdTableStorageStore
  - Cqrs.Azure.BlobStorage.Events.TableStorageEventStore{{TAuthenticationToken}}.RawTableStorageEventStore.Remove(Cqrs.Events.EventData)
  - Cqrs.Azure.BlobStorage.Events.TableStorageEventStore{{TAuthenticationToken}}.RawTableStorageEventStore.GetUpdatableTableEntity(Cqrs.Events.EventData)
  - Cqrs.Azure.BlobStorage.Events.TableStorageEventStore{{TAuthenticationToken}}.RawTableStorageEventStore.GetUpdatableTableEntity(Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData})
  - Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}.Collection
  - Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}.Initialise(Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory)
  - Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}.System#Collections#Generic#IEnumerable{TCollectionItemData}#GetEnumerator
  - Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}.GetEnumerator
  - Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}.Expression
  - Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}.ElementType
  - Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}.Provider
  - Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}.AsyncSaveData``2({TSaveData},System.Func{{TSaveData},Microsoft.WindowsAzure.Storage.Table.CloudTable,{TResult}},System.Func{{TSaveData},System.String})
  - Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}.CreateTableEntity(Cqrs.Events.EventData)
  - Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}.Add(Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData})
  - Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}.Add(Microsoft.WindowsAzure.Storage.Table.ITableEntity)
  - Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}.Add(System.Collections.Generic.IEnumerable{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData}})
  - Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}.Add(System.Collections.Generic.IEnumerable{Microsoft.WindowsAzure.Storage.Table.ITableEntity})
  - Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}.Destroy(Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData})
  - Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}.Add(Cqrs.Events.EventData)
  - Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}.Add(System.Collections.Generic.IEnumerable{Cqrs.Events.EventData})
  - Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}.Remove(Cqrs.Events.EventData)
  - Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}.Destroy(Cqrs.Events.EventData)
  - Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}.RemoveAll
  - Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}.Update(Cqrs.Events.EventData)
  - Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}.Update(Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData})
  - Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}.GetUpdatableTableEntity(Cqrs.Events.EventData)
  - Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}.GetUpdatableTableEntity(Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData})
  - Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String,System.Boolean)
  - Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}.GetByKeyAndRow(System.Guid)
  - Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}.GetByKey
  - Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}.ReplaceValues(Microsoft.WindowsAzure.Storage.Table.TableResult,Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData})
  - Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}.GetSafeSourceName(System.String)
  - Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}.WritableCollection
  - Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}.ReadableStorageAccount
  - Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}.Logger
  - Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}.GetContainerName
  - Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}.IsContainerPublic
  - Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}.DefaultSettings
  - Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}.Initialise(Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory)
  - Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}.GetEnumerator
  - Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}.System#Collections#IEnumerable#GetEnumerator
  - Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}.Expression
  - Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}.ElementType
  - Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}.Provider
  - Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}.Dispose
  - Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}.Add(Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData})
  - Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}.Add(System.Collections.Generic.IEnumerable{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData}})
  - Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}.Destroy(Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData})
  - Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}.RemoveAll
  - Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}.Update(Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData})
  - Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String,System.Boolean)
  - Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}.GetSafeSourceName(System.String)
  - Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}.GetSafeSourceName(System.String,System.Boolean)
  - Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}.AzureStorageRetryPolicy
  - Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}.Deserialise(System.IO.Stream)
  - Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}.Deserialise(System.String)
  - Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}.Serialise(Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData})
  - Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}.GetSerialisationSettings
  - Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}.GetSerialiser
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Cqrs.DataStores.IDataStore{Cqrs.Events.EventData}.Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByName``1(System.String)
  - Cqrs.DataStores.IDataStore{Cqrs.Events.EventData}.Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByFolder``1(System.String)
  nameWithType.vb: TableStorageEventStore(Of TAuthenticationToken).RawTableStorageEventStore
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Cqrs.Azure.Storage.Events.TableStorageEventStore(Of TAuthenticationToken).RawTableStorageEventStore
  name.vb: TableStorageEventStore(Of TAuthenticationToken).RawTableStorageEventStore
- uid: Cqrs.Azure.Storage.Events.TableStorageEventStore`1.RawTableStorageEventStore.#ctor(cdmdotnet.Logging.ILogger,Cqrs.Azure.BlobStorage.ITableStorageStoreConnectionStringFactory,System.Boolean)
  commentId: M:Cqrs.Azure.Storage.Events.TableStorageEventStore`1.RawTableStorageEventStore.#ctor(cdmdotnet.Logging.ILogger,Cqrs.Azure.BlobStorage.ITableStorageStoreConnectionStringFactory,System.Boolean)
  id: '#ctor(cdmdotnet.Logging.ILogger,Cqrs.Azure.BlobStorage.ITableStorageStoreConnectionStringFactory,System.Boolean)'
  parent: Cqrs.Azure.Storage.Events.TableStorageEventStore`1.RawTableStorageEventStore
  langs:
  - csharp
  - vb
  name: RawTableStorageEventStore(ILogger, ITableStorageStoreConnectionStringFactory, Boolean)
  nameWithType: TableStorageEventStore<TAuthenticationToken>.RawTableStorageEventStore.RawTableStorageEventStore(ILogger, ITableStorageStoreConnectionStringFactory, Boolean)
  fullName: Cqrs.Azure.Storage.Events.TableStorageEventStore<TAuthenticationToken>.RawTableStorageEventStore.RawTableStorageEventStore(cdmdotnet.Logging.ILogger, Cqrs.Azure.BlobStorage.ITableStorageStoreConnectionStringFactory, System.Boolean)
  type: Constructor
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.Storage/Events/TableStorageEventStore.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: .ctor
    path: Framework/Azure/Cqrs.Azure.Storage/Events/TableStorageEventStore.cs
    startLine: 85
  assemblies:
  - Cqrs.Azure.Storage
  namespace: Cqrs.Azure.Storage.Events
  summary: "\nInitializes a new instance of the <xref href=\"Cqrs.Azure.Storage.Events.TableStorageEventStore%601.RawTableStorageEventStore\" data-throw-if-not-resolved=\"false\"></xref> class using the specified container.\n"
  example: []
  syntax:
    content: public RawTableStorageEventStore(ILogger logger, ITableStorageStoreConnectionStringFactory tableStorageEventStoreConnectionStringFactory, bool isCorrelationIdTableStorageStore = false)
    parameters:
    - id: logger
      type: cdmdotnet.Logging.ILogger
    - id: tableStorageEventStoreConnectionStringFactory
      type: Cqrs.Azure.BlobStorage.ITableStorageStoreConnectionStringFactory
    - id: isCorrelationIdTableStorageStore
      type: System.Boolean
    content.vb: Public Sub New(logger As ILogger, tableStorageEventStoreConnectionStringFactory As ITableStorageStoreConnectionStringFactory, isCorrelationIdTableStorageStore As Boolean = False)
  overload: Cqrs.Azure.Storage.Events.TableStorageEventStore`1.RawTableStorageEventStore.#ctor*
  nameWithType.vb: TableStorageEventStore(Of TAuthenticationToken).RawTableStorageEventStore.RawTableStorageEventStore(ILogger, ITableStorageStoreConnectionStringFactory, Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Cqrs.Azure.Storage.Events.TableStorageEventStore(Of TAuthenticationToken).RawTableStorageEventStore.RawTableStorageEventStore(cdmdotnet.Logging.ILogger, Cqrs.Azure.BlobStorage.ITableStorageStoreConnectionStringFactory, System.Boolean)
- uid: Cqrs.Azure.Storage.Events.TableStorageEventStore`1.RawTableStorageEventStore.GetSafeSourceName(System.String)
  commentId: M:Cqrs.Azure.Storage.Events.TableStorageEventStore`1.RawTableStorageEventStore.GetSafeSourceName(System.String)
  id: GetSafeSourceName(System.String)
  parent: Cqrs.Azure.Storage.Events.TableStorageEventStore`1.RawTableStorageEventStore
  langs:
  - csharp
  - vb
  name: GetSafeSourceName(String)
  nameWithType: TableStorageEventStore<TAuthenticationToken>.RawTableStorageEventStore.GetSafeSourceName(String)
  fullName: Cqrs.Azure.Storage.Events.TableStorageEventStore<TAuthenticationToken>.RawTableStorageEventStore.GetSafeSourceName(System.String)
  type: Method
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.Storage/Events/TableStorageEventStore.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: GetSafeSourceName
    path: Framework/Azure/Cqrs.Azure.Storage/Events/TableStorageEventStore.cs
    startLine: 92
  assemblies:
  - Cqrs.Azure.Storage
  namespace: Cqrs.Azure.Storage.Events
  syntax:
    content: protected override string GetSafeSourceName(string sourceName)
    parameters:
    - id: sourceName
      type: System.String
    return:
      type: System.String
    content.vb: Protected Overrides Function GetSafeSourceName(sourceName As String) As String
  overridden: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore{{TAuthenticationToken}}.RawTableStorageEventStore.GetSafeSourceName(System.String)
  overload: Cqrs.Azure.Storage.Events.TableStorageEventStore`1.RawTableStorageEventStore.GetSafeSourceName*
  nameWithType.vb: TableStorageEventStore(Of TAuthenticationToken).RawTableStorageEventStore.GetSafeSourceName(String)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: Cqrs.Azure.Storage.Events.TableStorageEventStore(Of TAuthenticationToken).RawTableStorageEventStore.GetSafeSourceName(System.String)
- uid: Cqrs.Azure.Storage.Events.TableStorageEventStore`1.RawTableStorageEventStore.CreateTableEntity(Cqrs.Events.EventData)
  commentId: M:Cqrs.Azure.Storage.Events.TableStorageEventStore`1.RawTableStorageEventStore.CreateTableEntity(Cqrs.Events.EventData)
  id: CreateTableEntity(Cqrs.Events.EventData)
  parent: Cqrs.Azure.Storage.Events.TableStorageEventStore`1.RawTableStorageEventStore
  langs:
  - csharp
  - vb
  name: CreateTableEntity(EventData)
  nameWithType: TableStorageEventStore<TAuthenticationToken>.RawTableStorageEventStore.CreateTableEntity(EventData)
  fullName: Cqrs.Azure.Storage.Events.TableStorageEventStore<TAuthenticationToken>.RawTableStorageEventStore.CreateTableEntity(Cqrs.Events.EventData)
  type: Method
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.Storage/Events/TableStorageEventStore.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: CreateTableEntity
    path: Framework/Azure/Cqrs.Azure.Storage/Events/TableStorageEventStore.cs
    startLine: 104
  assemblies:
  - Cqrs.Azure.Storage
  namespace: Cqrs.Azure.Storage.Events
  syntax:
    content: protected override ITableEntity CreateTableEntity(EventData data)
    parameters:
    - id: data
      type: Cqrs.Events.EventData
    return:
      type: Microsoft.WindowsAzure.Storage.Table.ITableEntity
    content.vb: Protected Overrides Function CreateTableEntity(data As EventData) As ITableEntity
  overridden: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore{{TAuthenticationToken}}.RawTableStorageEventStore.CreateTableEntity(Cqrs.Events.EventData)
  overload: Cqrs.Azure.Storage.Events.TableStorageEventStore`1.RawTableStorageEventStore.CreateTableEntity*
  nameWithType.vb: TableStorageEventStore(Of TAuthenticationToken).RawTableStorageEventStore.CreateTableEntity(EventData)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: Cqrs.Azure.Storage.Events.TableStorageEventStore(Of TAuthenticationToken).RawTableStorageEventStore.CreateTableEntity(Cqrs.Events.EventData)
references:
- uid: Cqrs.Azure.Storage.Events
  commentId: N:Cqrs.Azure.Storage.Events
  isExternal: false
  name: Cqrs.Azure.Storage.Events
  nameWithType: Cqrs.Azure.Storage.Events
  fullName: Cqrs.Azure.Storage.Events
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}
  commentId: T:Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}
  parent: Cqrs.Azure.BlobStorage
  definition: Cqrs.Azure.BlobStorage.StorageStore`2
  name: StorageStore<EventDataTableEntity<EventData>, CloudTable>
  nameWithType: StorageStore<EventDataTableEntity<EventData>, CloudTable>
  fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>, Microsoft.WindowsAzure.Storage.Table.CloudTable>
  nameWithType.vb: StorageStore(Of EventDataTableEntity(Of EventData), CloudTable)
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData), Microsoft.WindowsAzure.Storage.Table.CloudTable)
  name.vb: StorageStore(Of EventDataTableEntity(Of EventData), CloudTable)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2
    name: StorageStore
    nameWithType: StorageStore
    fullName: Cqrs.Azure.BlobStorage.StorageStore
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cqrs.Azure.BlobStorage.EventDataTableEntity`1
    name: EventDataTableEntity
    nameWithType: EventDataTableEntity
    fullName: Cqrs.Azure.BlobStorage.EventDataTableEntity
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cqrs.Events.EventData
    name: EventData
    nameWithType: EventData
    fullName: Cqrs.Events.EventData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Table.CloudTable
    name: CloudTable
    nameWithType: CloudTable
    fullName: Microsoft.WindowsAzure.Storage.Table.CloudTable
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2
    name: StorageStore
    nameWithType: StorageStore
    fullName: Cqrs.Azure.BlobStorage.StorageStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Cqrs.Azure.BlobStorage.EventDataTableEntity`1
    name: EventDataTableEntity
    nameWithType: EventDataTableEntity
    fullName: Cqrs.Azure.BlobStorage.EventDataTableEntity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Cqrs.Events.EventData
    name: EventData
    nameWithType: EventData
    fullName: Cqrs.Events.EventData
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Table.CloudTable
    name: CloudTable
    nameWithType: CloudTable
    fullName: Microsoft.WindowsAzure.Storage.Table.CloudTable
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}
  commentId: T:Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}
  parent: Cqrs.Azure.BlobStorage
  definition: Cqrs.Azure.BlobStorage.TableStorageStore`2
  name: TableStorageStore<EventDataTableEntity<EventData>, EventData>
  nameWithType: TableStorageStore<EventDataTableEntity<EventData>, EventData>
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>, Cqrs.Events.EventData>
  nameWithType.vb: TableStorageStore(Of EventDataTableEntity(Of EventData), EventData)
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData), Cqrs.Events.EventData)
  name.vb: TableStorageStore(Of EventDataTableEntity(Of EventData), EventData)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2
    name: TableStorageStore
    nameWithType: TableStorageStore
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cqrs.Azure.BlobStorage.EventDataTableEntity`1
    name: EventDataTableEntity
    nameWithType: EventDataTableEntity
    fullName: Cqrs.Azure.BlobStorage.EventDataTableEntity
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cqrs.Events.EventData
    name: EventData
    nameWithType: EventData
    fullName: Cqrs.Events.EventData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Cqrs.Events.EventData
    name: EventData
    nameWithType: EventData
    fullName: Cqrs.Events.EventData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2
    name: TableStorageStore
    nameWithType: TableStorageStore
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Cqrs.Azure.BlobStorage.EventDataTableEntity`1
    name: EventDataTableEntity
    nameWithType: EventDataTableEntity
    fullName: Cqrs.Azure.BlobStorage.EventDataTableEntity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Cqrs.Events.EventData
    name: EventData
    nameWithType: EventData
    fullName: Cqrs.Events.EventData
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Cqrs.Events.EventData
    name: EventData
    nameWithType: EventData
    fullName: Cqrs.Events.EventData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore{{TAuthenticationToken}}.RawTableStorageEventStore
  commentId: T:Cqrs.Azure.BlobStorage.Events.TableStorageEventStore{`0}.RawTableStorageEventStore
  parent: Cqrs.Azure.BlobStorage.Events
  definition: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore`1.RawTableStorageEventStore
  name: TableStorageEventStore.RawTableStorageEventStore<>
  nameWithType: TableStorageEventStore.RawTableStorageEventStore<>
  fullName: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore.RawTableStorageEventStore<>
  nameWithType.vb: TableStorageEventStore.RawTableStorageEventStore(Of )
  fullName.vb: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore.RawTableStorageEventStore(Of )
  name.vb: TableStorageEventStore.RawTableStorageEventStore(Of )
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore`1.RawTableStorageEventStore
    name: TableStorageEventStore.RawTableStorageEventStore
    nameWithType: TableStorageEventStore.RawTableStorageEventStore
    fullName: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore.RawTableStorageEventStore
  - name: <
    nameWithType: <
    fullName: <
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore`1.RawTableStorageEventStore
    name: TableStorageEventStore.RawTableStorageEventStore
    nameWithType: TableStorageEventStore.RawTableStorageEventStore
    fullName: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore.RawTableStorageEventStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData}}
  commentId: T:System.Collections.Generic.IEnumerable{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<EventDataTableEntity<EventData>>
  nameWithType: IEnumerable<EventDataTableEntity<EventData>>
  fullName: System.Collections.Generic.IEnumerable<Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>>
  nameWithType.vb: IEnumerable(Of EventDataTableEntity(Of EventData))
  fullName.vb: System.Collections.Generic.IEnumerable(Of Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData))
  name.vb: IEnumerable(Of EventDataTableEntity(Of EventData))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cqrs.Azure.BlobStorage.EventDataTableEntity`1
    name: EventDataTableEntity
    nameWithType: EventDataTableEntity
    fullName: Cqrs.Azure.BlobStorage.EventDataTableEntity
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cqrs.Events.EventData
    name: EventData
    nameWithType: EventData
    fullName: Cqrs.Events.EventData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Cqrs.Azure.BlobStorage.EventDataTableEntity`1
    name: EventDataTableEntity
    nameWithType: EventDataTableEntity
    fullName: Cqrs.Azure.BlobStorage.EventDataTableEntity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Cqrs.Events.EventData
    name: EventData
    nameWithType: EventData
    fullName: Cqrs.Events.EventData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.DataStores.IDataStore{Cqrs.Events.EventData}
  commentId: T:Cqrs.DataStores.IDataStore{Cqrs.Events.EventData}
  parent: Cqrs.DataStores
  definition: Cqrs.DataStores.IDataStore`1
  name: IDataStore<EventData>
  nameWithType: IDataStore<EventData>
  fullName: Cqrs.DataStores.IDataStore<Cqrs.Events.EventData>
  nameWithType.vb: IDataStore(Of EventData)
  fullName.vb: Cqrs.DataStores.IDataStore(Of Cqrs.Events.EventData)
  name.vb: IDataStore(Of EventData)
  spec.csharp:
  - uid: Cqrs.DataStores.IDataStore`1
    name: IDataStore
    nameWithType: IDataStore
    fullName: Cqrs.DataStores.IDataStore
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cqrs.Events.EventData
    name: EventData
    nameWithType: EventData
    fullName: Cqrs.Events.EventData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.DataStores.IDataStore`1
    name: IDataStore
    nameWithType: IDataStore
    fullName: Cqrs.DataStores.IDataStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Cqrs.Events.EventData
    name: EventData
    nameWithType: EventData
    fullName: Cqrs.Events.EventData
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.IOrderedQueryable{Cqrs.Events.EventData}
  commentId: T:System.Linq.IOrderedQueryable{Cqrs.Events.EventData}
  parent: System.Linq
  definition: System.Linq.IOrderedQueryable`1
  name: IOrderedQueryable<EventData>
  nameWithType: IOrderedQueryable<EventData>
  fullName: System.Linq.IOrderedQueryable<Cqrs.Events.EventData>
  nameWithType.vb: IOrderedQueryable(Of EventData)
  fullName.vb: System.Linq.IOrderedQueryable(Of Cqrs.Events.EventData)
  name.vb: IOrderedQueryable(Of EventData)
  spec.csharp:
  - uid: System.Linq.IOrderedQueryable`1
    name: IOrderedQueryable
    nameWithType: IOrderedQueryable
    fullName: System.Linq.IOrderedQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cqrs.Events.EventData
    name: EventData
    nameWithType: EventData
    fullName: Cqrs.Events.EventData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.IOrderedQueryable`1
    name: IOrderedQueryable
    nameWithType: IOrderedQueryable
    fullName: System.Linq.IOrderedQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Cqrs.Events.EventData
    name: EventData
    nameWithType: EventData
    fullName: Cqrs.Events.EventData
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.IQueryable{Cqrs.Events.EventData}
  commentId: T:System.Linq.IQueryable{Cqrs.Events.EventData}
  parent: System.Linq
  definition: System.Linq.IQueryable`1
  name: IQueryable<EventData>
  nameWithType: IQueryable<EventData>
  fullName: System.Linq.IQueryable<Cqrs.Events.EventData>
  nameWithType.vb: IQueryable(Of EventData)
  fullName.vb: System.Linq.IQueryable(Of Cqrs.Events.EventData)
  name.vb: IQueryable(Of EventData)
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cqrs.Events.EventData
    name: EventData
    nameWithType: EventData
    fullName: Cqrs.Events.EventData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Cqrs.Events.EventData
    name: EventData
    nameWithType: EventData
    fullName: Cqrs.Events.EventData
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{Cqrs.Events.EventData}
  commentId: T:System.Collections.Generic.IEnumerable{Cqrs.Events.EventData}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<EventData>
  nameWithType: IEnumerable<EventData>
  fullName: System.Collections.Generic.IEnumerable<Cqrs.Events.EventData>
  nameWithType.vb: IEnumerable(Of EventData)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Cqrs.Events.EventData)
  name.vb: IEnumerable(Of EventData)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cqrs.Events.EventData
    name: EventData
    nameWithType: EventData
    fullName: Cqrs.Events.EventData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Cqrs.Events.EventData
    name: EventData
    nameWithType: EventData
    fullName: Cqrs.Events.EventData
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.IOrderedQueryable
  commentId: T:System.Linq.IOrderedQueryable
  parent: System.Linq
  isExternal: true
  name: IOrderedQueryable
  nameWithType: IOrderedQueryable
  fullName: System.Linq.IOrderedQueryable
- uid: System.Linq.IQueryable
  commentId: T:System.Linq.IQueryable
  parent: System.Linq
  isExternal: true
  name: IQueryable
  nameWithType: IQueryable
  fullName: System.Linq.IQueryable
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore{{TAuthenticationToken}}.RawTableStorageEventStore.IsCorrelationIdTableStorageStore
  commentId: P:Cqrs.Azure.BlobStorage.Events.TableStorageEventStore{`0}.RawTableStorageEventStore.IsCorrelationIdTableStorageStore
  parent: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore{{TAuthenticationToken}}.RawTableStorageEventStore
  definition: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore`1.RawTableStorageEventStore.IsCorrelationIdTableStorageStore
  name: IsCorrelationIdTableStorageStore
  nameWithType: TableStorageEventStore<TAuthenticationToken>.RawTableStorageEventStore.IsCorrelationIdTableStorageStore
  fullName: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore<TAuthenticationToken>.RawTableStorageEventStore.IsCorrelationIdTableStorageStore
  nameWithType.vb: TableStorageEventStore(Of TAuthenticationToken).RawTableStorageEventStore.IsCorrelationIdTableStorageStore
  fullName.vb: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore(Of TAuthenticationToken).RawTableStorageEventStore.IsCorrelationIdTableStorageStore
- uid: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore{{TAuthenticationToken}}.RawTableStorageEventStore.Remove(Cqrs.Events.EventData)
  commentId: M:Cqrs.Azure.BlobStorage.Events.TableStorageEventStore{`0}.RawTableStorageEventStore.Remove(Cqrs.Events.EventData)
  parent: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore{{TAuthenticationToken}}.RawTableStorageEventStore
  definition: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore`1.RawTableStorageEventStore.Remove(Cqrs.Events.EventData)
  name: Remove(EventData)
  nameWithType: TableStorageEventStore<TAuthenticationToken>.RawTableStorageEventStore.Remove(EventData)
  fullName: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore<TAuthenticationToken>.RawTableStorageEventStore.Remove(Cqrs.Events.EventData)
  nameWithType.vb: TableStorageEventStore(Of TAuthenticationToken).RawTableStorageEventStore.Remove(EventData)
  fullName.vb: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore(Of TAuthenticationToken).RawTableStorageEventStore.Remove(Cqrs.Events.EventData)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore`1.RawTableStorageEventStore.Remove(Cqrs.Events.EventData)
    name: Remove
    nameWithType: TableStorageEventStore<TAuthenticationToken>.RawTableStorageEventStore.Remove
    fullName: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore<TAuthenticationToken>.RawTableStorageEventStore.Remove
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Events.EventData
    name: EventData
    nameWithType: EventData
    fullName: Cqrs.Events.EventData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore`1.RawTableStorageEventStore.Remove(Cqrs.Events.EventData)
    name: Remove
    nameWithType: TableStorageEventStore(Of TAuthenticationToken).RawTableStorageEventStore.Remove
    fullName: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore(Of TAuthenticationToken).RawTableStorageEventStore.Remove
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Events.EventData
    name: EventData
    nameWithType: EventData
    fullName: Cqrs.Events.EventData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore{{TAuthenticationToken}}.RawTableStorageEventStore.GetUpdatableTableEntity(Cqrs.Events.EventData)
  commentId: M:Cqrs.Azure.BlobStorage.Events.TableStorageEventStore{`0}.RawTableStorageEventStore.GetUpdatableTableEntity(Cqrs.Events.EventData)
  parent: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore{{TAuthenticationToken}}.RawTableStorageEventStore
  definition: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore`1.RawTableStorageEventStore.GetUpdatableTableEntity(Cqrs.Events.EventData)
  name: GetUpdatableTableEntity(EventData)
  nameWithType: TableStorageEventStore<TAuthenticationToken>.RawTableStorageEventStore.GetUpdatableTableEntity(EventData)
  fullName: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore<TAuthenticationToken>.RawTableStorageEventStore.GetUpdatableTableEntity(Cqrs.Events.EventData)
  nameWithType.vb: TableStorageEventStore(Of TAuthenticationToken).RawTableStorageEventStore.GetUpdatableTableEntity(EventData)
  fullName.vb: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore(Of TAuthenticationToken).RawTableStorageEventStore.GetUpdatableTableEntity(Cqrs.Events.EventData)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore`1.RawTableStorageEventStore.GetUpdatableTableEntity(Cqrs.Events.EventData)
    name: GetUpdatableTableEntity
    nameWithType: TableStorageEventStore<TAuthenticationToken>.RawTableStorageEventStore.GetUpdatableTableEntity
    fullName: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore<TAuthenticationToken>.RawTableStorageEventStore.GetUpdatableTableEntity
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Events.EventData
    name: EventData
    nameWithType: EventData
    fullName: Cqrs.Events.EventData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore`1.RawTableStorageEventStore.GetUpdatableTableEntity(Cqrs.Events.EventData)
    name: GetUpdatableTableEntity
    nameWithType: TableStorageEventStore(Of TAuthenticationToken).RawTableStorageEventStore.GetUpdatableTableEntity
    fullName: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore(Of TAuthenticationToken).RawTableStorageEventStore.GetUpdatableTableEntity
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Events.EventData
    name: EventData
    nameWithType: EventData
    fullName: Cqrs.Events.EventData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore{{TAuthenticationToken}}.RawTableStorageEventStore.GetUpdatableTableEntity(Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData})
  commentId: M:Cqrs.Azure.BlobStorage.Events.TableStorageEventStore{`0}.RawTableStorageEventStore.GetUpdatableTableEntity(Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData})
  parent: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore{{TAuthenticationToken}}.RawTableStorageEventStore
  definition: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore`1.RawTableStorageEventStore.GetUpdatableTableEntity(Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData})
  name: GetUpdatableTableEntity(EventDataTableEntity<EventData>)
  nameWithType: TableStorageEventStore<TAuthenticationToken>.RawTableStorageEventStore.GetUpdatableTableEntity(EventDataTableEntity<EventData>)
  fullName: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore<TAuthenticationToken>.RawTableStorageEventStore.GetUpdatableTableEntity(Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>)
  nameWithType.vb: TableStorageEventStore(Of TAuthenticationToken).RawTableStorageEventStore.GetUpdatableTableEntity(EventDataTableEntity(Of EventData))
  fullName.vb: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore(Of TAuthenticationToken).RawTableStorageEventStore.GetUpdatableTableEntity(Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData))
  name.vb: GetUpdatableTableEntity(EventDataTableEntity(Of EventData))
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore`1.RawTableStorageEventStore.GetUpdatableTableEntity(Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData})
    name: GetUpdatableTableEntity
    nameWithType: TableStorageEventStore<TAuthenticationToken>.RawTableStorageEventStore.GetUpdatableTableEntity
    fullName: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore<TAuthenticationToken>.RawTableStorageEventStore.GetUpdatableTableEntity
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Azure.BlobStorage.EventDataTableEntity`1
    name: EventDataTableEntity
    nameWithType: EventDataTableEntity
    fullName: Cqrs.Azure.BlobStorage.EventDataTableEntity
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cqrs.Events.EventData
    name: EventData
    nameWithType: EventData
    fullName: Cqrs.Events.EventData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore`1.RawTableStorageEventStore.GetUpdatableTableEntity(Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData})
    name: GetUpdatableTableEntity
    nameWithType: TableStorageEventStore(Of TAuthenticationToken).RawTableStorageEventStore.GetUpdatableTableEntity
    fullName: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore(Of TAuthenticationToken).RawTableStorageEventStore.GetUpdatableTableEntity
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Azure.BlobStorage.EventDataTableEntity`1
    name: EventDataTableEntity
    nameWithType: EventDataTableEntity
    fullName: Cqrs.Azure.BlobStorage.EventDataTableEntity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Cqrs.Events.EventData
    name: EventData
    nameWithType: EventData
    fullName: Cqrs.Events.EventData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}.Collection
  commentId: P:Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}.Collection
  parent: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}
  definition: Cqrs.Azure.BlobStorage.TableStorageStore`2.Collection
  name: Collection
  nameWithType: TableStorageStore<EventDataTableEntity<EventData>, EventData>.Collection
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>, Cqrs.Events.EventData>.Collection
  nameWithType.vb: TableStorageStore(Of EventDataTableEntity(Of EventData), EventData).Collection
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData), Cqrs.Events.EventData).Collection
- uid: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}.Initialise(Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory)
  commentId: M:Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}.Initialise(Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory)
  parent: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}
  definition: Cqrs.Azure.BlobStorage.TableStorageStore`2.Initialise(Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory)
  name: Initialise(IStorageStoreConnectionStringFactory)
  nameWithType: TableStorageStore<EventDataTableEntity<EventData>, EventData>.Initialise(IStorageStoreConnectionStringFactory)
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>, Cqrs.Events.EventData>.Initialise(Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory)
  nameWithType.vb: TableStorageStore(Of EventDataTableEntity(Of EventData), EventData).Initialise(IStorageStoreConnectionStringFactory)
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData), Cqrs.Events.EventData).Initialise(Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Initialise(Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory)
    name: Initialise
    nameWithType: TableStorageStore<EventDataTableEntity<EventData>, EventData>.Initialise
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore<Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>, Cqrs.Events.EventData>.Initialise
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory
    name: IStorageStoreConnectionStringFactory
    nameWithType: IStorageStoreConnectionStringFactory
    fullName: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Initialise(Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory)
    name: Initialise
    nameWithType: TableStorageStore(Of EventDataTableEntity(Of EventData), EventData).Initialise
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore(Of Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData), Cqrs.Events.EventData).Initialise
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory
    name: IStorageStoreConnectionStringFactory
    nameWithType: IStorageStoreConnectionStringFactory
    fullName: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}.System#Collections#Generic#IEnumerable{TCollectionItemData}#GetEnumerator
  commentId: M:Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}.System#Collections#Generic#IEnumerable{TCollectionItemData}#GetEnumerator
  parent: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}
  definition: Cqrs.Azure.BlobStorage.TableStorageStore`2.System#Collections#Generic#IEnumerable{TCollectionItemData}#GetEnumerator
  name: IEnumerable<EventData>.GetEnumerator()
  nameWithType: TableStorageStore<EventDataTableEntity<EventData>, EventData>.IEnumerable<EventData>.GetEnumerator()
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>, Cqrs.Events.EventData>.System.Collections.Generic.IEnumerable<Cqrs.Events.EventData>.GetEnumerator()
  nameWithType.vb: TableStorageStore(Of EventDataTableEntity(Of EventData), EventData).System.Collections.Generic.IEnumerable<TCollectionItemData>.GetEnumerator()
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData), Cqrs.Events.EventData).System.Collections.Generic.IEnumerable<TCollectionItemData>.GetEnumerator()
  name.vb: System.Collections.Generic.IEnumerable<TCollectionItemData>.GetEnumerator()
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.System#Collections#Generic#IEnumerable{TCollectionItemData}#GetEnumerator
    name: IEnumerable<EventData>.GetEnumerator
    nameWithType: TableStorageStore<EventDataTableEntity<EventData>, EventData>.IEnumerable<EventData>.GetEnumerator
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore<Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>, Cqrs.Events.EventData>.System.Collections.Generic.IEnumerable<Cqrs.Events.EventData>.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.System#Collections#Generic#IEnumerable{TCollectionItemData}#GetEnumerator
    name: System.Collections.Generic.IEnumerable<TCollectionItemData>.GetEnumerator
    nameWithType: TableStorageStore(Of EventDataTableEntity(Of EventData), EventData).System.Collections.Generic.IEnumerable<TCollectionItemData>.GetEnumerator
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore(Of Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData), Cqrs.Events.EventData).System.Collections.Generic.IEnumerable<TCollectionItemData>.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}.GetEnumerator
  commentId: M:Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}.GetEnumerator
  parent: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}
  definition: Cqrs.Azure.BlobStorage.TableStorageStore`2.GetEnumerator
  name: GetEnumerator()
  nameWithType: TableStorageStore<EventDataTableEntity<EventData>, EventData>.GetEnumerator()
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>, Cqrs.Events.EventData>.GetEnumerator()
  nameWithType.vb: TableStorageStore(Of EventDataTableEntity(Of EventData), EventData).GetEnumerator()
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData), Cqrs.Events.EventData).GetEnumerator()
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.GetEnumerator
    name: GetEnumerator
    nameWithType: TableStorageStore<EventDataTableEntity<EventData>, EventData>.GetEnumerator
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore<Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>, Cqrs.Events.EventData>.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.GetEnumerator
    name: GetEnumerator
    nameWithType: TableStorageStore(Of EventDataTableEntity(Of EventData), EventData).GetEnumerator
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore(Of Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData), Cqrs.Events.EventData).GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}.Expression
  commentId: P:Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}.Expression
  parent: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}
  definition: Cqrs.Azure.BlobStorage.TableStorageStore`2.Expression
  name: Expression
  nameWithType: TableStorageStore<EventDataTableEntity<EventData>, EventData>.Expression
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>, Cqrs.Events.EventData>.Expression
  nameWithType.vb: TableStorageStore(Of EventDataTableEntity(Of EventData), EventData).Expression
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData), Cqrs.Events.EventData).Expression
- uid: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}.ElementType
  commentId: P:Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}.ElementType
  parent: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}
  definition: Cqrs.Azure.BlobStorage.TableStorageStore`2.ElementType
  name: ElementType
  nameWithType: TableStorageStore<EventDataTableEntity<EventData>, EventData>.ElementType
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>, Cqrs.Events.EventData>.ElementType
  nameWithType.vb: TableStorageStore(Of EventDataTableEntity(Of EventData), EventData).ElementType
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData), Cqrs.Events.EventData).ElementType
- uid: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}.Provider
  commentId: P:Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}.Provider
  parent: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}
  definition: Cqrs.Azure.BlobStorage.TableStorageStore`2.Provider
  name: Provider
  nameWithType: TableStorageStore<EventDataTableEntity<EventData>, EventData>.Provider
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>, Cqrs.Events.EventData>.Provider
  nameWithType.vb: TableStorageStore(Of EventDataTableEntity(Of EventData), EventData).Provider
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData), Cqrs.Events.EventData).Provider
- uid: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}.AsyncSaveData``2({TSaveData},System.Func{{TSaveData},Microsoft.WindowsAzure.Storage.Table.CloudTable,{TResult}},System.Func{{TSaveData},System.String})
  commentId: M:Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}.AsyncSaveData``2(``0,System.Func{``0,Microsoft.WindowsAzure.Storage.Table.CloudTable,``1},System.Func{``0,System.String})
  parent: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}
  definition: Cqrs.Azure.BlobStorage.TableStorageStore`2.AsyncSaveData``2(``0,System.Func{``0,Microsoft.WindowsAzure.Storage.Table.CloudTable,``1},System.Func{``0,System.String})
  name: AsyncSaveData<TSaveData, TResult>(TSaveData, Func<TSaveData, CloudTable, TResult>, Func<TSaveData, String>)
  nameWithType: TableStorageStore<EventDataTableEntity<EventData>, EventData>.AsyncSaveData<TSaveData, TResult>(TSaveData, Func<TSaveData, CloudTable, TResult>, Func<TSaveData, String>)
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>, Cqrs.Events.EventData>.AsyncSaveData<TSaveData, TResult>(TSaveData, System.Func<TSaveData, Microsoft.WindowsAzure.Storage.Table.CloudTable, TResult>, System.Func<TSaveData, System.String>)
  nameWithType.vb: TableStorageStore(Of EventDataTableEntity(Of EventData), EventData).AsyncSaveData(Of TSaveData, TResult)(TSaveData, Func(Of TSaveData, CloudTable, TResult), Func(Of TSaveData, String))
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData), Cqrs.Events.EventData).AsyncSaveData(Of TSaveData, TResult)(TSaveData, System.Func(Of TSaveData, Microsoft.WindowsAzure.Storage.Table.CloudTable, TResult), System.Func(Of TSaveData, System.String))
  name.vb: AsyncSaveData(Of TSaveData, TResult)(TSaveData, Func(Of TSaveData, CloudTable, TResult), Func(Of TSaveData, String))
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.AsyncSaveData``2(``0,System.Func{``0,Microsoft.WindowsAzure.Storage.Table.CloudTable,``1},System.Func{``0,System.String})
    name: AsyncSaveData<TSaveData, TResult>
    nameWithType: TableStorageStore<EventDataTableEntity<EventData>, EventData>.AsyncSaveData<TSaveData, TResult>
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore<Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>, Cqrs.Events.EventData>.AsyncSaveData<TSaveData, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: TSaveData
    nameWithType: TSaveData
    fullName: TSaveData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSaveData
    nameWithType: TSaveData
    fullName: TSaveData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Table.CloudTable
    name: CloudTable
    nameWithType: CloudTable
    fullName: Microsoft.WindowsAzure.Storage.Table.CloudTable
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSaveData
    nameWithType: TSaveData
    fullName: TSaveData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.AsyncSaveData``2(``0,System.Func{``0,Microsoft.WindowsAzure.Storage.Table.CloudTable,``1},System.Func{``0,System.String})
    name: AsyncSaveData(Of TSaveData, TResult)
    nameWithType: TableStorageStore(Of EventDataTableEntity(Of EventData), EventData).AsyncSaveData(Of TSaveData, TResult)
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore(Of Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData), Cqrs.Events.EventData).AsyncSaveData(Of TSaveData, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: TSaveData
    nameWithType: TSaveData
    fullName: TSaveData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSaveData
    nameWithType: TSaveData
    fullName: TSaveData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Table.CloudTable
    name: CloudTable
    nameWithType: CloudTable
    fullName: Microsoft.WindowsAzure.Storage.Table.CloudTable
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSaveData
    nameWithType: TSaveData
    fullName: TSaveData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}.CreateTableEntity(Cqrs.Events.EventData)
  commentId: M:Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}.CreateTableEntity(Cqrs.Events.EventData)
  parent: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}
  definition: Cqrs.Azure.BlobStorage.TableStorageStore`2.CreateTableEntity(`1)
  name: CreateTableEntity(EventData)
  nameWithType: TableStorageStore<EventDataTableEntity<EventData>, EventData>.CreateTableEntity(EventData)
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>, Cqrs.Events.EventData>.CreateTableEntity(Cqrs.Events.EventData)
  nameWithType.vb: TableStorageStore(Of EventDataTableEntity(Of EventData), EventData).CreateTableEntity(EventData)
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData), Cqrs.Events.EventData).CreateTableEntity(Cqrs.Events.EventData)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.CreateTableEntity(`1)
    name: CreateTableEntity
    nameWithType: TableStorageStore<EventDataTableEntity<EventData>, EventData>.CreateTableEntity
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore<Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>, Cqrs.Events.EventData>.CreateTableEntity
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Events.EventData
    name: EventData
    nameWithType: EventData
    fullName: Cqrs.Events.EventData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.CreateTableEntity(`1)
    name: CreateTableEntity
    nameWithType: TableStorageStore(Of EventDataTableEntity(Of EventData), EventData).CreateTableEntity
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore(Of Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData), Cqrs.Events.EventData).CreateTableEntity
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Events.EventData
    name: EventData
    nameWithType: EventData
    fullName: Cqrs.Events.EventData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}.Add(Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData})
  commentId: M:Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}.Add(Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData})
  parent: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}
  definition: Cqrs.Azure.BlobStorage.TableStorageStore`2.Add(`0)
  name: Add(EventDataTableEntity<EventData>)
  nameWithType: TableStorageStore<EventDataTableEntity<EventData>, EventData>.Add(EventDataTableEntity<EventData>)
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>, Cqrs.Events.EventData>.Add(Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>)
  nameWithType.vb: TableStorageStore(Of EventDataTableEntity(Of EventData), EventData).Add(EventDataTableEntity(Of EventData))
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData), Cqrs.Events.EventData).Add(Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData))
  name.vb: Add(EventDataTableEntity(Of EventData))
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Add(`0)
    name: Add
    nameWithType: TableStorageStore<EventDataTableEntity<EventData>, EventData>.Add
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore<Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>, Cqrs.Events.EventData>.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Azure.BlobStorage.EventDataTableEntity`1
    name: EventDataTableEntity
    nameWithType: EventDataTableEntity
    fullName: Cqrs.Azure.BlobStorage.EventDataTableEntity
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cqrs.Events.EventData
    name: EventData
    nameWithType: EventData
    fullName: Cqrs.Events.EventData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Add(`0)
    name: Add
    nameWithType: TableStorageStore(Of EventDataTableEntity(Of EventData), EventData).Add
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore(Of Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData), Cqrs.Events.EventData).Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Azure.BlobStorage.EventDataTableEntity`1
    name: EventDataTableEntity
    nameWithType: EventDataTableEntity
    fullName: Cqrs.Azure.BlobStorage.EventDataTableEntity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Cqrs.Events.EventData
    name: EventData
    nameWithType: EventData
    fullName: Cqrs.Events.EventData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}.Add(Microsoft.WindowsAzure.Storage.Table.ITableEntity)
  commentId: M:Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}.Add(Microsoft.WindowsAzure.Storage.Table.ITableEntity)
  parent: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}
  definition: Cqrs.Azure.BlobStorage.TableStorageStore`2.Add(Microsoft.WindowsAzure.Storage.Table.ITableEntity)
  name: Add(ITableEntity)
  nameWithType: TableStorageStore<EventDataTableEntity<EventData>, EventData>.Add(ITableEntity)
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>, Cqrs.Events.EventData>.Add(Microsoft.WindowsAzure.Storage.Table.ITableEntity)
  nameWithType.vb: TableStorageStore(Of EventDataTableEntity(Of EventData), EventData).Add(ITableEntity)
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData), Cqrs.Events.EventData).Add(Microsoft.WindowsAzure.Storage.Table.ITableEntity)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Add(Microsoft.WindowsAzure.Storage.Table.ITableEntity)
    name: Add
    nameWithType: TableStorageStore<EventDataTableEntity<EventData>, EventData>.Add
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore<Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>, Cqrs.Events.EventData>.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.Table.ITableEntity
    name: ITableEntity
    nameWithType: ITableEntity
    fullName: Microsoft.WindowsAzure.Storage.Table.ITableEntity
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Add(Microsoft.WindowsAzure.Storage.Table.ITableEntity)
    name: Add
    nameWithType: TableStorageStore(Of EventDataTableEntity(Of EventData), EventData).Add
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore(Of Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData), Cqrs.Events.EventData).Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.Table.ITableEntity
    name: ITableEntity
    nameWithType: ITableEntity
    fullName: Microsoft.WindowsAzure.Storage.Table.ITableEntity
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}.Add(System.Collections.Generic.IEnumerable{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData}})
  commentId: M:Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}.Add(System.Collections.Generic.IEnumerable{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData}})
  parent: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}
  definition: Cqrs.Azure.BlobStorage.TableStorageStore`2.Add(System.Collections.Generic.IEnumerable{`0})
  name: Add(IEnumerable<EventDataTableEntity<EventData>>)
  nameWithType: TableStorageStore<EventDataTableEntity<EventData>, EventData>.Add(IEnumerable<EventDataTableEntity<EventData>>)
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>, Cqrs.Events.EventData>.Add(System.Collections.Generic.IEnumerable<Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>>)
  nameWithType.vb: TableStorageStore(Of EventDataTableEntity(Of EventData), EventData).Add(IEnumerable(Of EventDataTableEntity(Of EventData)))
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData), Cqrs.Events.EventData).Add(System.Collections.Generic.IEnumerable(Of Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData)))
  name.vb: Add(IEnumerable(Of EventDataTableEntity(Of EventData)))
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Add(System.Collections.Generic.IEnumerable{`0})
    name: Add
    nameWithType: TableStorageStore<EventDataTableEntity<EventData>, EventData>.Add
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore<Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>, Cqrs.Events.EventData>.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cqrs.Azure.BlobStorage.EventDataTableEntity`1
    name: EventDataTableEntity
    nameWithType: EventDataTableEntity
    fullName: Cqrs.Azure.BlobStorage.EventDataTableEntity
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cqrs.Events.EventData
    name: EventData
    nameWithType: EventData
    fullName: Cqrs.Events.EventData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Add(System.Collections.Generic.IEnumerable{`0})
    name: Add
    nameWithType: TableStorageStore(Of EventDataTableEntity(Of EventData), EventData).Add
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore(Of Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData), Cqrs.Events.EventData).Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Cqrs.Azure.BlobStorage.EventDataTableEntity`1
    name: EventDataTableEntity
    nameWithType: EventDataTableEntity
    fullName: Cqrs.Azure.BlobStorage.EventDataTableEntity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Cqrs.Events.EventData
    name: EventData
    nameWithType: EventData
    fullName: Cqrs.Events.EventData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}.Add(System.Collections.Generic.IEnumerable{Microsoft.WindowsAzure.Storage.Table.ITableEntity})
  commentId: M:Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}.Add(System.Collections.Generic.IEnumerable{Microsoft.WindowsAzure.Storage.Table.ITableEntity})
  parent: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}
  definition: Cqrs.Azure.BlobStorage.TableStorageStore`2.Add(System.Collections.Generic.IEnumerable{Microsoft.WindowsAzure.Storage.Table.ITableEntity})
  name: Add(IEnumerable<ITableEntity>)
  nameWithType: TableStorageStore<EventDataTableEntity<EventData>, EventData>.Add(IEnumerable<ITableEntity>)
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>, Cqrs.Events.EventData>.Add(System.Collections.Generic.IEnumerable<Microsoft.WindowsAzure.Storage.Table.ITableEntity>)
  nameWithType.vb: TableStorageStore(Of EventDataTableEntity(Of EventData), EventData).Add(IEnumerable(Of ITableEntity))
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData), Cqrs.Events.EventData).Add(System.Collections.Generic.IEnumerable(Of Microsoft.WindowsAzure.Storage.Table.ITableEntity))
  name.vb: Add(IEnumerable(Of ITableEntity))
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Add(System.Collections.Generic.IEnumerable{Microsoft.WindowsAzure.Storage.Table.ITableEntity})
    name: Add
    nameWithType: TableStorageStore<EventDataTableEntity<EventData>, EventData>.Add
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore<Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>, Cqrs.Events.EventData>.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Storage.Table.ITableEntity
    name: ITableEntity
    nameWithType: ITableEntity
    fullName: Microsoft.WindowsAzure.Storage.Table.ITableEntity
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Add(System.Collections.Generic.IEnumerable{Microsoft.WindowsAzure.Storage.Table.ITableEntity})
    name: Add
    nameWithType: TableStorageStore(Of EventDataTableEntity(Of EventData), EventData).Add
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore(Of Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData), Cqrs.Events.EventData).Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Storage.Table.ITableEntity
    name: ITableEntity
    nameWithType: ITableEntity
    fullName: Microsoft.WindowsAzure.Storage.Table.ITableEntity
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}.Destroy(Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData})
  commentId: M:Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}.Destroy(Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData})
  parent: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}
  definition: Cqrs.Azure.BlobStorage.TableStorageStore`2.Destroy(`0)
  name: Destroy(EventDataTableEntity<EventData>)
  nameWithType: TableStorageStore<EventDataTableEntity<EventData>, EventData>.Destroy(EventDataTableEntity<EventData>)
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>, Cqrs.Events.EventData>.Destroy(Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>)
  nameWithType.vb: TableStorageStore(Of EventDataTableEntity(Of EventData), EventData).Destroy(EventDataTableEntity(Of EventData))
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData), Cqrs.Events.EventData).Destroy(Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData))
  name.vb: Destroy(EventDataTableEntity(Of EventData))
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Destroy(`0)
    name: Destroy
    nameWithType: TableStorageStore<EventDataTableEntity<EventData>, EventData>.Destroy
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore<Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>, Cqrs.Events.EventData>.Destroy
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Azure.BlobStorage.EventDataTableEntity`1
    name: EventDataTableEntity
    nameWithType: EventDataTableEntity
    fullName: Cqrs.Azure.BlobStorage.EventDataTableEntity
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cqrs.Events.EventData
    name: EventData
    nameWithType: EventData
    fullName: Cqrs.Events.EventData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Destroy(`0)
    name: Destroy
    nameWithType: TableStorageStore(Of EventDataTableEntity(Of EventData), EventData).Destroy
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore(Of Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData), Cqrs.Events.EventData).Destroy
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Azure.BlobStorage.EventDataTableEntity`1
    name: EventDataTableEntity
    nameWithType: EventDataTableEntity
    fullName: Cqrs.Azure.BlobStorage.EventDataTableEntity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Cqrs.Events.EventData
    name: EventData
    nameWithType: EventData
    fullName: Cqrs.Events.EventData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}.Add(Cqrs.Events.EventData)
  commentId: M:Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}.Add(Cqrs.Events.EventData)
  parent: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}
  definition: Cqrs.Azure.BlobStorage.TableStorageStore`2.Add(`1)
  name: Add(EventData)
  nameWithType: TableStorageStore<EventDataTableEntity<EventData>, EventData>.Add(EventData)
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>, Cqrs.Events.EventData>.Add(Cqrs.Events.EventData)
  nameWithType.vb: TableStorageStore(Of EventDataTableEntity(Of EventData), EventData).Add(EventData)
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData), Cqrs.Events.EventData).Add(Cqrs.Events.EventData)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Add(`1)
    name: Add
    nameWithType: TableStorageStore<EventDataTableEntity<EventData>, EventData>.Add
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore<Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>, Cqrs.Events.EventData>.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Events.EventData
    name: EventData
    nameWithType: EventData
    fullName: Cqrs.Events.EventData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Add(`1)
    name: Add
    nameWithType: TableStorageStore(Of EventDataTableEntity(Of EventData), EventData).Add
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore(Of Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData), Cqrs.Events.EventData).Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Events.EventData
    name: EventData
    nameWithType: EventData
    fullName: Cqrs.Events.EventData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}.Add(System.Collections.Generic.IEnumerable{Cqrs.Events.EventData})
  commentId: M:Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}.Add(System.Collections.Generic.IEnumerable{Cqrs.Events.EventData})
  parent: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}
  definition: Cqrs.Azure.BlobStorage.TableStorageStore`2.Add(System.Collections.Generic.IEnumerable{`1})
  name: Add(IEnumerable<EventData>)
  nameWithType: TableStorageStore<EventDataTableEntity<EventData>, EventData>.Add(IEnumerable<EventData>)
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>, Cqrs.Events.EventData>.Add(System.Collections.Generic.IEnumerable<Cqrs.Events.EventData>)
  nameWithType.vb: TableStorageStore(Of EventDataTableEntity(Of EventData), EventData).Add(IEnumerable(Of EventData))
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData), Cqrs.Events.EventData).Add(System.Collections.Generic.IEnumerable(Of Cqrs.Events.EventData))
  name.vb: Add(IEnumerable(Of EventData))
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Add(System.Collections.Generic.IEnumerable{`1})
    name: Add
    nameWithType: TableStorageStore<EventDataTableEntity<EventData>, EventData>.Add
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore<Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>, Cqrs.Events.EventData>.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cqrs.Events.EventData
    name: EventData
    nameWithType: EventData
    fullName: Cqrs.Events.EventData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Add(System.Collections.Generic.IEnumerable{`1})
    name: Add
    nameWithType: TableStorageStore(Of EventDataTableEntity(Of EventData), EventData).Add
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore(Of Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData), Cqrs.Events.EventData).Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Cqrs.Events.EventData
    name: EventData
    nameWithType: EventData
    fullName: Cqrs.Events.EventData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}.Remove(Cqrs.Events.EventData)
  commentId: M:Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}.Remove(Cqrs.Events.EventData)
  parent: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}
  definition: Cqrs.Azure.BlobStorage.TableStorageStore`2.Remove(`1)
  name: Remove(EventData)
  nameWithType: TableStorageStore<EventDataTableEntity<EventData>, EventData>.Remove(EventData)
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>, Cqrs.Events.EventData>.Remove(Cqrs.Events.EventData)
  nameWithType.vb: TableStorageStore(Of EventDataTableEntity(Of EventData), EventData).Remove(EventData)
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData), Cqrs.Events.EventData).Remove(Cqrs.Events.EventData)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Remove(`1)
    name: Remove
    nameWithType: TableStorageStore<EventDataTableEntity<EventData>, EventData>.Remove
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore<Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>, Cqrs.Events.EventData>.Remove
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Events.EventData
    name: EventData
    nameWithType: EventData
    fullName: Cqrs.Events.EventData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Remove(`1)
    name: Remove
    nameWithType: TableStorageStore(Of EventDataTableEntity(Of EventData), EventData).Remove
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore(Of Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData), Cqrs.Events.EventData).Remove
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Events.EventData
    name: EventData
    nameWithType: EventData
    fullName: Cqrs.Events.EventData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}.Destroy(Cqrs.Events.EventData)
  commentId: M:Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}.Destroy(Cqrs.Events.EventData)
  parent: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}
  definition: Cqrs.Azure.BlobStorage.TableStorageStore`2.Destroy(`1)
  name: Destroy(EventData)
  nameWithType: TableStorageStore<EventDataTableEntity<EventData>, EventData>.Destroy(EventData)
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>, Cqrs.Events.EventData>.Destroy(Cqrs.Events.EventData)
  nameWithType.vb: TableStorageStore(Of EventDataTableEntity(Of EventData), EventData).Destroy(EventData)
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData), Cqrs.Events.EventData).Destroy(Cqrs.Events.EventData)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Destroy(`1)
    name: Destroy
    nameWithType: TableStorageStore<EventDataTableEntity<EventData>, EventData>.Destroy
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore<Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>, Cqrs.Events.EventData>.Destroy
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Events.EventData
    name: EventData
    nameWithType: EventData
    fullName: Cqrs.Events.EventData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Destroy(`1)
    name: Destroy
    nameWithType: TableStorageStore(Of EventDataTableEntity(Of EventData), EventData).Destroy
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore(Of Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData), Cqrs.Events.EventData).Destroy
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Events.EventData
    name: EventData
    nameWithType: EventData
    fullName: Cqrs.Events.EventData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}.RemoveAll
  commentId: M:Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}.RemoveAll
  parent: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}
  definition: Cqrs.Azure.BlobStorage.TableStorageStore`2.RemoveAll
  name: RemoveAll()
  nameWithType: TableStorageStore<EventDataTableEntity<EventData>, EventData>.RemoveAll()
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>, Cqrs.Events.EventData>.RemoveAll()
  nameWithType.vb: TableStorageStore(Of EventDataTableEntity(Of EventData), EventData).RemoveAll()
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData), Cqrs.Events.EventData).RemoveAll()
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.RemoveAll
    name: RemoveAll
    nameWithType: TableStorageStore<EventDataTableEntity<EventData>, EventData>.RemoveAll
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore<Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>, Cqrs.Events.EventData>.RemoveAll
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.RemoveAll
    name: RemoveAll
    nameWithType: TableStorageStore(Of EventDataTableEntity(Of EventData), EventData).RemoveAll
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore(Of Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData), Cqrs.Events.EventData).RemoveAll
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}.Update(Cqrs.Events.EventData)
  commentId: M:Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}.Update(Cqrs.Events.EventData)
  parent: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}
  definition: Cqrs.Azure.BlobStorage.TableStorageStore`2.Update(`1)
  name: Update(EventData)
  nameWithType: TableStorageStore<EventDataTableEntity<EventData>, EventData>.Update(EventData)
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>, Cqrs.Events.EventData>.Update(Cqrs.Events.EventData)
  nameWithType.vb: TableStorageStore(Of EventDataTableEntity(Of EventData), EventData).Update(EventData)
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData), Cqrs.Events.EventData).Update(Cqrs.Events.EventData)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Update(`1)
    name: Update
    nameWithType: TableStorageStore<EventDataTableEntity<EventData>, EventData>.Update
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore<Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>, Cqrs.Events.EventData>.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Events.EventData
    name: EventData
    nameWithType: EventData
    fullName: Cqrs.Events.EventData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Update(`1)
    name: Update
    nameWithType: TableStorageStore(Of EventDataTableEntity(Of EventData), EventData).Update
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore(Of Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData), Cqrs.Events.EventData).Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Events.EventData
    name: EventData
    nameWithType: EventData
    fullName: Cqrs.Events.EventData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}.Update(Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData})
  commentId: M:Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}.Update(Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData})
  parent: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}
  definition: Cqrs.Azure.BlobStorage.TableStorageStore`2.Update(`0)
  name: Update(EventDataTableEntity<EventData>)
  nameWithType: TableStorageStore<EventDataTableEntity<EventData>, EventData>.Update(EventDataTableEntity<EventData>)
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>, Cqrs.Events.EventData>.Update(Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>)
  nameWithType.vb: TableStorageStore(Of EventDataTableEntity(Of EventData), EventData).Update(EventDataTableEntity(Of EventData))
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData), Cqrs.Events.EventData).Update(Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData))
  name.vb: Update(EventDataTableEntity(Of EventData))
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Update(`0)
    name: Update
    nameWithType: TableStorageStore<EventDataTableEntity<EventData>, EventData>.Update
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore<Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>, Cqrs.Events.EventData>.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Azure.BlobStorage.EventDataTableEntity`1
    name: EventDataTableEntity
    nameWithType: EventDataTableEntity
    fullName: Cqrs.Azure.BlobStorage.EventDataTableEntity
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cqrs.Events.EventData
    name: EventData
    nameWithType: EventData
    fullName: Cqrs.Events.EventData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Update(`0)
    name: Update
    nameWithType: TableStorageStore(Of EventDataTableEntity(Of EventData), EventData).Update
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore(Of Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData), Cqrs.Events.EventData).Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Azure.BlobStorage.EventDataTableEntity`1
    name: EventDataTableEntity
    nameWithType: EventDataTableEntity
    fullName: Cqrs.Azure.BlobStorage.EventDataTableEntity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Cqrs.Events.EventData
    name: EventData
    nameWithType: EventData
    fullName: Cqrs.Events.EventData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}.GetUpdatableTableEntity(Cqrs.Events.EventData)
  commentId: M:Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}.GetUpdatableTableEntity(Cqrs.Events.EventData)
  parent: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}
  definition: Cqrs.Azure.BlobStorage.TableStorageStore`2.GetUpdatableTableEntity(`1)
  name: GetUpdatableTableEntity(EventData)
  nameWithType: TableStorageStore<EventDataTableEntity<EventData>, EventData>.GetUpdatableTableEntity(EventData)
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>, Cqrs.Events.EventData>.GetUpdatableTableEntity(Cqrs.Events.EventData)
  nameWithType.vb: TableStorageStore(Of EventDataTableEntity(Of EventData), EventData).GetUpdatableTableEntity(EventData)
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData), Cqrs.Events.EventData).GetUpdatableTableEntity(Cqrs.Events.EventData)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.GetUpdatableTableEntity(`1)
    name: GetUpdatableTableEntity
    nameWithType: TableStorageStore<EventDataTableEntity<EventData>, EventData>.GetUpdatableTableEntity
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore<Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>, Cqrs.Events.EventData>.GetUpdatableTableEntity
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Events.EventData
    name: EventData
    nameWithType: EventData
    fullName: Cqrs.Events.EventData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.GetUpdatableTableEntity(`1)
    name: GetUpdatableTableEntity
    nameWithType: TableStorageStore(Of EventDataTableEntity(Of EventData), EventData).GetUpdatableTableEntity
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore(Of Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData), Cqrs.Events.EventData).GetUpdatableTableEntity
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Events.EventData
    name: EventData
    nameWithType: EventData
    fullName: Cqrs.Events.EventData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}.GetUpdatableTableEntity(Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData})
  commentId: M:Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}.GetUpdatableTableEntity(Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData})
  parent: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}
  definition: Cqrs.Azure.BlobStorage.TableStorageStore`2.GetUpdatableTableEntity(`0)
  name: GetUpdatableTableEntity(EventDataTableEntity<EventData>)
  nameWithType: TableStorageStore<EventDataTableEntity<EventData>, EventData>.GetUpdatableTableEntity(EventDataTableEntity<EventData>)
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>, Cqrs.Events.EventData>.GetUpdatableTableEntity(Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>)
  nameWithType.vb: TableStorageStore(Of EventDataTableEntity(Of EventData), EventData).GetUpdatableTableEntity(EventDataTableEntity(Of EventData))
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData), Cqrs.Events.EventData).GetUpdatableTableEntity(Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData))
  name.vb: GetUpdatableTableEntity(EventDataTableEntity(Of EventData))
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.GetUpdatableTableEntity(`0)
    name: GetUpdatableTableEntity
    nameWithType: TableStorageStore<EventDataTableEntity<EventData>, EventData>.GetUpdatableTableEntity
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore<Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>, Cqrs.Events.EventData>.GetUpdatableTableEntity
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Azure.BlobStorage.EventDataTableEntity`1
    name: EventDataTableEntity
    nameWithType: EventDataTableEntity
    fullName: Cqrs.Azure.BlobStorage.EventDataTableEntity
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cqrs.Events.EventData
    name: EventData
    nameWithType: EventData
    fullName: Cqrs.Events.EventData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.GetUpdatableTableEntity(`0)
    name: GetUpdatableTableEntity
    nameWithType: TableStorageStore(Of EventDataTableEntity(Of EventData), EventData).GetUpdatableTableEntity
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore(Of Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData), Cqrs.Events.EventData).GetUpdatableTableEntity
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Azure.BlobStorage.EventDataTableEntity`1
    name: EventDataTableEntity
    nameWithType: EventDataTableEntity
    fullName: Cqrs.Azure.BlobStorage.EventDataTableEntity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Cqrs.Events.EventData
    name: EventData
    nameWithType: EventData
    fullName: Cqrs.Events.EventData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String,System.Boolean)
  commentId: M:Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String,System.Boolean)
  parent: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}
  definition: Cqrs.Azure.BlobStorage.TableStorageStore`2.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String,System.Boolean)
  name: CreateSource(CloudStorageAccount, String, Boolean)
  nameWithType: TableStorageStore<EventDataTableEntity<EventData>, EventData>.CreateSource(CloudStorageAccount, String, Boolean)
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>, Cqrs.Events.EventData>.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount, System.String, System.Boolean)
  nameWithType.vb: TableStorageStore(Of EventDataTableEntity(Of EventData), EventData).CreateSource(CloudStorageAccount, String, Boolean)
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData), Cqrs.Events.EventData).CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount, System.String, System.Boolean)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String,System.Boolean)
    name: CreateSource
    nameWithType: TableStorageStore<EventDataTableEntity<EventData>, EventData>.CreateSource
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore<Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>, Cqrs.Events.EventData>.CreateSource
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.CloudStorageAccount
    name: CloudStorageAccount
    nameWithType: CloudStorageAccount
    fullName: Microsoft.WindowsAzure.Storage.CloudStorageAccount
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String,System.Boolean)
    name: CreateSource
    nameWithType: TableStorageStore(Of EventDataTableEntity(Of EventData), EventData).CreateSource
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore(Of Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData), Cqrs.Events.EventData).CreateSource
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.CloudStorageAccount
    name: CloudStorageAccount
    nameWithType: CloudStorageAccount
    fullName: Microsoft.WindowsAzure.Storage.CloudStorageAccount
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}.GetByKeyAndRow(System.Guid)
  commentId: M:Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}.GetByKeyAndRow(System.Guid)
  parent: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}
  definition: Cqrs.Azure.BlobStorage.TableStorageStore`2.GetByKeyAndRow(System.Guid)
  name: GetByKeyAndRow(Guid)
  nameWithType: TableStorageStore<EventDataTableEntity<EventData>, EventData>.GetByKeyAndRow(Guid)
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>, Cqrs.Events.EventData>.GetByKeyAndRow(System.Guid)
  nameWithType.vb: TableStorageStore(Of EventDataTableEntity(Of EventData), EventData).GetByKeyAndRow(Guid)
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData), Cqrs.Events.EventData).GetByKeyAndRow(System.Guid)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.GetByKeyAndRow(System.Guid)
    name: GetByKeyAndRow
    nameWithType: TableStorageStore<EventDataTableEntity<EventData>, EventData>.GetByKeyAndRow
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore<Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>, Cqrs.Events.EventData>.GetByKeyAndRow
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.GetByKeyAndRow(System.Guid)
    name: GetByKeyAndRow
    nameWithType: TableStorageStore(Of EventDataTableEntity(Of EventData), EventData).GetByKeyAndRow
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore(Of Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData), Cqrs.Events.EventData).GetByKeyAndRow
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}.GetByKey
  commentId: M:Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}.GetByKey
  parent: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}
  definition: Cqrs.Azure.BlobStorage.TableStorageStore`2.GetByKey
  name: GetByKey()
  nameWithType: TableStorageStore<EventDataTableEntity<EventData>, EventData>.GetByKey()
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>, Cqrs.Events.EventData>.GetByKey()
  nameWithType.vb: TableStorageStore(Of EventDataTableEntity(Of EventData), EventData).GetByKey()
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData), Cqrs.Events.EventData).GetByKey()
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.GetByKey
    name: GetByKey
    nameWithType: TableStorageStore<EventDataTableEntity<EventData>, EventData>.GetByKey
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore<Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>, Cqrs.Events.EventData>.GetByKey
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.GetByKey
    name: GetByKey
    nameWithType: TableStorageStore(Of EventDataTableEntity(Of EventData), EventData).GetByKey
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore(Of Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData), Cqrs.Events.EventData).GetByKey
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}.ReplaceValues(Microsoft.WindowsAzure.Storage.Table.TableResult,Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData})
  commentId: M:Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}.ReplaceValues(Microsoft.WindowsAzure.Storage.Table.TableResult,Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData})
  parent: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}
  definition: Cqrs.Azure.BlobStorage.TableStorageStore`2.ReplaceValues(Microsoft.WindowsAzure.Storage.Table.TableResult,`0)
  name: ReplaceValues(TableResult, EventDataTableEntity<EventData>)
  nameWithType: TableStorageStore<EventDataTableEntity<EventData>, EventData>.ReplaceValues(TableResult, EventDataTableEntity<EventData>)
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>, Cqrs.Events.EventData>.ReplaceValues(Microsoft.WindowsAzure.Storage.Table.TableResult, Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>)
  nameWithType.vb: TableStorageStore(Of EventDataTableEntity(Of EventData), EventData).ReplaceValues(TableResult, EventDataTableEntity(Of EventData))
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData), Cqrs.Events.EventData).ReplaceValues(Microsoft.WindowsAzure.Storage.Table.TableResult, Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData))
  name.vb: ReplaceValues(TableResult, EventDataTableEntity(Of EventData))
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.ReplaceValues(Microsoft.WindowsAzure.Storage.Table.TableResult,`0)
    name: ReplaceValues
    nameWithType: TableStorageStore<EventDataTableEntity<EventData>, EventData>.ReplaceValues
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore<Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>, Cqrs.Events.EventData>.ReplaceValues
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.Table.TableResult
    name: TableResult
    nameWithType: TableResult
    fullName: Microsoft.WindowsAzure.Storage.Table.TableResult
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Cqrs.Azure.BlobStorage.EventDataTableEntity`1
    name: EventDataTableEntity
    nameWithType: EventDataTableEntity
    fullName: Cqrs.Azure.BlobStorage.EventDataTableEntity
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cqrs.Events.EventData
    name: EventData
    nameWithType: EventData
    fullName: Cqrs.Events.EventData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.ReplaceValues(Microsoft.WindowsAzure.Storage.Table.TableResult,`0)
    name: ReplaceValues
    nameWithType: TableStorageStore(Of EventDataTableEntity(Of EventData), EventData).ReplaceValues
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore(Of Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData), Cqrs.Events.EventData).ReplaceValues
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.Table.TableResult
    name: TableResult
    nameWithType: TableResult
    fullName: Microsoft.WindowsAzure.Storage.Table.TableResult
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Cqrs.Azure.BlobStorage.EventDataTableEntity`1
    name: EventDataTableEntity
    nameWithType: EventDataTableEntity
    fullName: Cqrs.Azure.BlobStorage.EventDataTableEntity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Cqrs.Events.EventData
    name: EventData
    nameWithType: EventData
    fullName: Cqrs.Events.EventData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}.GetSafeSourceName(System.String)
  commentId: M:Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}.GetSafeSourceName(System.String)
  parent: Cqrs.Azure.BlobStorage.TableStorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Cqrs.Events.EventData}
  definition: Cqrs.Azure.BlobStorage.TableStorageStore`2.GetSafeSourceName(System.String)
  name: GetSafeSourceName(String)
  nameWithType: TableStorageStore<EventDataTableEntity<EventData>, EventData>.GetSafeSourceName(String)
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>, Cqrs.Events.EventData>.GetSafeSourceName(System.String)
  nameWithType.vb: TableStorageStore(Of EventDataTableEntity(Of EventData), EventData).GetSafeSourceName(String)
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData), Cqrs.Events.EventData).GetSafeSourceName(System.String)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.GetSafeSourceName(System.String)
    name: GetSafeSourceName
    nameWithType: TableStorageStore<EventDataTableEntity<EventData>, EventData>.GetSafeSourceName
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore<Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>, Cqrs.Events.EventData>.GetSafeSourceName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.GetSafeSourceName(System.String)
    name: GetSafeSourceName
    nameWithType: TableStorageStore(Of EventDataTableEntity(Of EventData), EventData).GetSafeSourceName
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore(Of Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData), Cqrs.Events.EventData).GetSafeSourceName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}.WritableCollection
  commentId: P:Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}.WritableCollection
  parent: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.WritableCollection
  name: WritableCollection
  nameWithType: StorageStore<EventDataTableEntity<EventData>, CloudTable>.WritableCollection
  fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>, Microsoft.WindowsAzure.Storage.Table.CloudTable>.WritableCollection
  nameWithType.vb: StorageStore(Of EventDataTableEntity(Of EventData), CloudTable).WritableCollection
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData), Microsoft.WindowsAzure.Storage.Table.CloudTable).WritableCollection
- uid: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}.ReadableStorageAccount
  commentId: P:Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}.ReadableStorageAccount
  parent: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.ReadableStorageAccount
  name: ReadableStorageAccount
  nameWithType: StorageStore<EventDataTableEntity<EventData>, CloudTable>.ReadableStorageAccount
  fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>, Microsoft.WindowsAzure.Storage.Table.CloudTable>.ReadableStorageAccount
  nameWithType.vb: StorageStore(Of EventDataTableEntity(Of EventData), CloudTable).ReadableStorageAccount
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData), Microsoft.WindowsAzure.Storage.Table.CloudTable).ReadableStorageAccount
- uid: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}.Logger
  commentId: P:Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}.Logger
  parent: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.Logger
  name: Logger
  nameWithType: StorageStore<EventDataTableEntity<EventData>, CloudTable>.Logger
  fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>, Microsoft.WindowsAzure.Storage.Table.CloudTable>.Logger
  nameWithType.vb: StorageStore(Of EventDataTableEntity(Of EventData), CloudTable).Logger
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData), Microsoft.WindowsAzure.Storage.Table.CloudTable).Logger
- uid: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}.GetContainerName
  commentId: P:Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}.GetContainerName
  parent: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.GetContainerName
  name: GetContainerName
  nameWithType: StorageStore<EventDataTableEntity<EventData>, CloudTable>.GetContainerName
  fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>, Microsoft.WindowsAzure.Storage.Table.CloudTable>.GetContainerName
  nameWithType.vb: StorageStore(Of EventDataTableEntity(Of EventData), CloudTable).GetContainerName
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData), Microsoft.WindowsAzure.Storage.Table.CloudTable).GetContainerName
- uid: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}.IsContainerPublic
  commentId: P:Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}.IsContainerPublic
  parent: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.IsContainerPublic
  name: IsContainerPublic
  nameWithType: StorageStore<EventDataTableEntity<EventData>, CloudTable>.IsContainerPublic
  fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>, Microsoft.WindowsAzure.Storage.Table.CloudTable>.IsContainerPublic
  nameWithType.vb: StorageStore(Of EventDataTableEntity(Of EventData), CloudTable).IsContainerPublic
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData), Microsoft.WindowsAzure.Storage.Table.CloudTable).IsContainerPublic
- uid: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}.DefaultSettings
  commentId: P:Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}.DefaultSettings
  parent: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.DefaultSettings
  name: DefaultSettings
  nameWithType: StorageStore<EventDataTableEntity<EventData>, CloudTable>.DefaultSettings
  fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>, Microsoft.WindowsAzure.Storage.Table.CloudTable>.DefaultSettings
  nameWithType.vb: StorageStore(Of EventDataTableEntity(Of EventData), CloudTable).DefaultSettings
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData), Microsoft.WindowsAzure.Storage.Table.CloudTable).DefaultSettings
- uid: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}.Initialise(Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory)
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}.Initialise(Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory)
  parent: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.Initialise(Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory)
  name: Initialise(IStorageStoreConnectionStringFactory)
  nameWithType: StorageStore<EventDataTableEntity<EventData>, CloudTable>.Initialise(IStorageStoreConnectionStringFactory)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>, Microsoft.WindowsAzure.Storage.Table.CloudTable>.Initialise(Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory)
  nameWithType.vb: StorageStore(Of EventDataTableEntity(Of EventData), CloudTable).Initialise(IStorageStoreConnectionStringFactory)
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData), Microsoft.WindowsAzure.Storage.Table.CloudTable).Initialise(Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Initialise(Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory)
    name: Initialise
    nameWithType: StorageStore<EventDataTableEntity<EventData>, CloudTable>.Initialise
    fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>, Microsoft.WindowsAzure.Storage.Table.CloudTable>.Initialise
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory
    name: IStorageStoreConnectionStringFactory
    nameWithType: IStorageStoreConnectionStringFactory
    fullName: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Initialise(Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory)
    name: Initialise
    nameWithType: StorageStore(Of EventDataTableEntity(Of EventData), CloudTable).Initialise
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData), Microsoft.WindowsAzure.Storage.Table.CloudTable).Initialise
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory
    name: IStorageStoreConnectionStringFactory
    nameWithType: IStorageStoreConnectionStringFactory
    fullName: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}.GetEnumerator
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}.GetEnumerator
  parent: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.GetEnumerator
  name: GetEnumerator()
  nameWithType: StorageStore<EventDataTableEntity<EventData>, CloudTable>.GetEnumerator()
  fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>, Microsoft.WindowsAzure.Storage.Table.CloudTable>.GetEnumerator()
  nameWithType.vb: StorageStore(Of EventDataTableEntity(Of EventData), CloudTable).GetEnumerator()
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData), Microsoft.WindowsAzure.Storage.Table.CloudTable).GetEnumerator()
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetEnumerator
    name: GetEnumerator
    nameWithType: StorageStore<EventDataTableEntity<EventData>, CloudTable>.GetEnumerator
    fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>, Microsoft.WindowsAzure.Storage.Table.CloudTable>.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetEnumerator
    name: GetEnumerator
    nameWithType: StorageStore(Of EventDataTableEntity(Of EventData), CloudTable).GetEnumerator
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData), Microsoft.WindowsAzure.Storage.Table.CloudTable).GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}.System#Collections#IEnumerable#GetEnumerator
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}.System#Collections#IEnumerable#GetEnumerator
  parent: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator()
  nameWithType: StorageStore<EventDataTableEntity<EventData>, CloudTable>.IEnumerable.GetEnumerator()
  fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>, Microsoft.WindowsAzure.Storage.Table.CloudTable>.System.Collections.IEnumerable.GetEnumerator()
  nameWithType.vb: StorageStore(Of EventDataTableEntity(Of EventData), CloudTable).System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData), Microsoft.WindowsAzure.Storage.Table.CloudTable).System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.System#Collections#IEnumerable#GetEnumerator
    name: IEnumerable.GetEnumerator
    nameWithType: StorageStore<EventDataTableEntity<EventData>, CloudTable>.IEnumerable.GetEnumerator
    fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>, Microsoft.WindowsAzure.Storage.Table.CloudTable>.System.Collections.IEnumerable.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.System#Collections#IEnumerable#GetEnumerator
    name: System.Collections.IEnumerable.GetEnumerator
    nameWithType: StorageStore(Of EventDataTableEntity(Of EventData), CloudTable).System.Collections.IEnumerable.GetEnumerator
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData), Microsoft.WindowsAzure.Storage.Table.CloudTable).System.Collections.IEnumerable.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}.Expression
  commentId: P:Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}.Expression
  parent: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.Expression
  name: Expression
  nameWithType: StorageStore<EventDataTableEntity<EventData>, CloudTable>.Expression
  fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>, Microsoft.WindowsAzure.Storage.Table.CloudTable>.Expression
  nameWithType.vb: StorageStore(Of EventDataTableEntity(Of EventData), CloudTable).Expression
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData), Microsoft.WindowsAzure.Storage.Table.CloudTable).Expression
- uid: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}.ElementType
  commentId: P:Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}.ElementType
  parent: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.ElementType
  name: ElementType
  nameWithType: StorageStore<EventDataTableEntity<EventData>, CloudTable>.ElementType
  fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>, Microsoft.WindowsAzure.Storage.Table.CloudTable>.ElementType
  nameWithType.vb: StorageStore(Of EventDataTableEntity(Of EventData), CloudTable).ElementType
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData), Microsoft.WindowsAzure.Storage.Table.CloudTable).ElementType
- uid: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}.Provider
  commentId: P:Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}.Provider
  parent: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.Provider
  name: Provider
  nameWithType: StorageStore<EventDataTableEntity<EventData>, CloudTable>.Provider
  fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>, Microsoft.WindowsAzure.Storage.Table.CloudTable>.Provider
  nameWithType.vb: StorageStore(Of EventDataTableEntity(Of EventData), CloudTable).Provider
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData), Microsoft.WindowsAzure.Storage.Table.CloudTable).Provider
- uid: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}.Dispose
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}.Dispose
  parent: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.Dispose
  name: Dispose()
  nameWithType: StorageStore<EventDataTableEntity<EventData>, CloudTable>.Dispose()
  fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>, Microsoft.WindowsAzure.Storage.Table.CloudTable>.Dispose()
  nameWithType.vb: StorageStore(Of EventDataTableEntity(Of EventData), CloudTable).Dispose()
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData), Microsoft.WindowsAzure.Storage.Table.CloudTable).Dispose()
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Dispose
    name: Dispose
    nameWithType: StorageStore<EventDataTableEntity<EventData>, CloudTable>.Dispose
    fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>, Microsoft.WindowsAzure.Storage.Table.CloudTable>.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Dispose
    name: Dispose
    nameWithType: StorageStore(Of EventDataTableEntity(Of EventData), CloudTable).Dispose
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData), Microsoft.WindowsAzure.Storage.Table.CloudTable).Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}.Add(Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData})
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}.Add(Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData})
  parent: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.Add(`0)
  name: Add(EventDataTableEntity<EventData>)
  nameWithType: StorageStore<EventDataTableEntity<EventData>, CloudTable>.Add(EventDataTableEntity<EventData>)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>, Microsoft.WindowsAzure.Storage.Table.CloudTable>.Add(Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>)
  nameWithType.vb: StorageStore(Of EventDataTableEntity(Of EventData), CloudTable).Add(EventDataTableEntity(Of EventData))
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData), Microsoft.WindowsAzure.Storage.Table.CloudTable).Add(Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData))
  name.vb: Add(EventDataTableEntity(Of EventData))
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Add(`0)
    name: Add
    nameWithType: StorageStore<EventDataTableEntity<EventData>, CloudTable>.Add
    fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>, Microsoft.WindowsAzure.Storage.Table.CloudTable>.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Azure.BlobStorage.EventDataTableEntity`1
    name: EventDataTableEntity
    nameWithType: EventDataTableEntity
    fullName: Cqrs.Azure.BlobStorage.EventDataTableEntity
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cqrs.Events.EventData
    name: EventData
    nameWithType: EventData
    fullName: Cqrs.Events.EventData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Add(`0)
    name: Add
    nameWithType: StorageStore(Of EventDataTableEntity(Of EventData), CloudTable).Add
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData), Microsoft.WindowsAzure.Storage.Table.CloudTable).Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Azure.BlobStorage.EventDataTableEntity`1
    name: EventDataTableEntity
    nameWithType: EventDataTableEntity
    fullName: Cqrs.Azure.BlobStorage.EventDataTableEntity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Cqrs.Events.EventData
    name: EventData
    nameWithType: EventData
    fullName: Cqrs.Events.EventData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}.Add(System.Collections.Generic.IEnumerable{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData}})
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}.Add(System.Collections.Generic.IEnumerable{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData}})
  parent: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.Add(System.Collections.Generic.IEnumerable{`0})
  name: Add(IEnumerable<EventDataTableEntity<EventData>>)
  nameWithType: StorageStore<EventDataTableEntity<EventData>, CloudTable>.Add(IEnumerable<EventDataTableEntity<EventData>>)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>, Microsoft.WindowsAzure.Storage.Table.CloudTable>.Add(System.Collections.Generic.IEnumerable<Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>>)
  nameWithType.vb: StorageStore(Of EventDataTableEntity(Of EventData), CloudTable).Add(IEnumerable(Of EventDataTableEntity(Of EventData)))
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData), Microsoft.WindowsAzure.Storage.Table.CloudTable).Add(System.Collections.Generic.IEnumerable(Of Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData)))
  name.vb: Add(IEnumerable(Of EventDataTableEntity(Of EventData)))
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Add(System.Collections.Generic.IEnumerable{`0})
    name: Add
    nameWithType: StorageStore<EventDataTableEntity<EventData>, CloudTable>.Add
    fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>, Microsoft.WindowsAzure.Storage.Table.CloudTable>.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cqrs.Azure.BlobStorage.EventDataTableEntity`1
    name: EventDataTableEntity
    nameWithType: EventDataTableEntity
    fullName: Cqrs.Azure.BlobStorage.EventDataTableEntity
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cqrs.Events.EventData
    name: EventData
    nameWithType: EventData
    fullName: Cqrs.Events.EventData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Add(System.Collections.Generic.IEnumerable{`0})
    name: Add
    nameWithType: StorageStore(Of EventDataTableEntity(Of EventData), CloudTable).Add
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData), Microsoft.WindowsAzure.Storage.Table.CloudTable).Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Cqrs.Azure.BlobStorage.EventDataTableEntity`1
    name: EventDataTableEntity
    nameWithType: EventDataTableEntity
    fullName: Cqrs.Azure.BlobStorage.EventDataTableEntity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Cqrs.Events.EventData
    name: EventData
    nameWithType: EventData
    fullName: Cqrs.Events.EventData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}.Destroy(Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData})
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}.Destroy(Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData})
  parent: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.Destroy(`0)
  name: Destroy(EventDataTableEntity<EventData>)
  nameWithType: StorageStore<EventDataTableEntity<EventData>, CloudTable>.Destroy(EventDataTableEntity<EventData>)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>, Microsoft.WindowsAzure.Storage.Table.CloudTable>.Destroy(Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>)
  nameWithType.vb: StorageStore(Of EventDataTableEntity(Of EventData), CloudTable).Destroy(EventDataTableEntity(Of EventData))
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData), Microsoft.WindowsAzure.Storage.Table.CloudTable).Destroy(Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData))
  name.vb: Destroy(EventDataTableEntity(Of EventData))
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Destroy(`0)
    name: Destroy
    nameWithType: StorageStore<EventDataTableEntity<EventData>, CloudTable>.Destroy
    fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>, Microsoft.WindowsAzure.Storage.Table.CloudTable>.Destroy
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Azure.BlobStorage.EventDataTableEntity`1
    name: EventDataTableEntity
    nameWithType: EventDataTableEntity
    fullName: Cqrs.Azure.BlobStorage.EventDataTableEntity
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cqrs.Events.EventData
    name: EventData
    nameWithType: EventData
    fullName: Cqrs.Events.EventData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Destroy(`0)
    name: Destroy
    nameWithType: StorageStore(Of EventDataTableEntity(Of EventData), CloudTable).Destroy
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData), Microsoft.WindowsAzure.Storage.Table.CloudTable).Destroy
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Azure.BlobStorage.EventDataTableEntity`1
    name: EventDataTableEntity
    nameWithType: EventDataTableEntity
    fullName: Cqrs.Azure.BlobStorage.EventDataTableEntity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Cqrs.Events.EventData
    name: EventData
    nameWithType: EventData
    fullName: Cqrs.Events.EventData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}.RemoveAll
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}.RemoveAll
  parent: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.RemoveAll
  name: RemoveAll()
  nameWithType: StorageStore<EventDataTableEntity<EventData>, CloudTable>.RemoveAll()
  fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>, Microsoft.WindowsAzure.Storage.Table.CloudTable>.RemoveAll()
  nameWithType.vb: StorageStore(Of EventDataTableEntity(Of EventData), CloudTable).RemoveAll()
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData), Microsoft.WindowsAzure.Storage.Table.CloudTable).RemoveAll()
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.RemoveAll
    name: RemoveAll
    nameWithType: StorageStore<EventDataTableEntity<EventData>, CloudTable>.RemoveAll
    fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>, Microsoft.WindowsAzure.Storage.Table.CloudTable>.RemoveAll
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.RemoveAll
    name: RemoveAll
    nameWithType: StorageStore(Of EventDataTableEntity(Of EventData), CloudTable).RemoveAll
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData), Microsoft.WindowsAzure.Storage.Table.CloudTable).RemoveAll
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}.Update(Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData})
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}.Update(Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData})
  parent: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.Update(`0)
  name: Update(EventDataTableEntity<EventData>)
  nameWithType: StorageStore<EventDataTableEntity<EventData>, CloudTable>.Update(EventDataTableEntity<EventData>)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>, Microsoft.WindowsAzure.Storage.Table.CloudTable>.Update(Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>)
  nameWithType.vb: StorageStore(Of EventDataTableEntity(Of EventData), CloudTable).Update(EventDataTableEntity(Of EventData))
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData), Microsoft.WindowsAzure.Storage.Table.CloudTable).Update(Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData))
  name.vb: Update(EventDataTableEntity(Of EventData))
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Update(`0)
    name: Update
    nameWithType: StorageStore<EventDataTableEntity<EventData>, CloudTable>.Update
    fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>, Microsoft.WindowsAzure.Storage.Table.CloudTable>.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Azure.BlobStorage.EventDataTableEntity`1
    name: EventDataTableEntity
    nameWithType: EventDataTableEntity
    fullName: Cqrs.Azure.BlobStorage.EventDataTableEntity
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cqrs.Events.EventData
    name: EventData
    nameWithType: EventData
    fullName: Cqrs.Events.EventData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Update(`0)
    name: Update
    nameWithType: StorageStore(Of EventDataTableEntity(Of EventData), CloudTable).Update
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData), Microsoft.WindowsAzure.Storage.Table.CloudTable).Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Azure.BlobStorage.EventDataTableEntity`1
    name: EventDataTableEntity
    nameWithType: EventDataTableEntity
    fullName: Cqrs.Azure.BlobStorage.EventDataTableEntity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Cqrs.Events.EventData
    name: EventData
    nameWithType: EventData
    fullName: Cqrs.Events.EventData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String,System.Boolean)
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String,System.Boolean)
  parent: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String,System.Boolean)
  name: CreateSource(CloudStorageAccount, String, Boolean)
  nameWithType: StorageStore<EventDataTableEntity<EventData>, CloudTable>.CreateSource(CloudStorageAccount, String, Boolean)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>, Microsoft.WindowsAzure.Storage.Table.CloudTable>.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount, System.String, System.Boolean)
  nameWithType.vb: StorageStore(Of EventDataTableEntity(Of EventData), CloudTable).CreateSource(CloudStorageAccount, String, Boolean)
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData), Microsoft.WindowsAzure.Storage.Table.CloudTable).CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount, System.String, System.Boolean)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String,System.Boolean)
    name: CreateSource
    nameWithType: StorageStore<EventDataTableEntity<EventData>, CloudTable>.CreateSource
    fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>, Microsoft.WindowsAzure.Storage.Table.CloudTable>.CreateSource
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.CloudStorageAccount
    name: CloudStorageAccount
    nameWithType: CloudStorageAccount
    fullName: Microsoft.WindowsAzure.Storage.CloudStorageAccount
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String,System.Boolean)
    name: CreateSource
    nameWithType: StorageStore(Of EventDataTableEntity(Of EventData), CloudTable).CreateSource
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData), Microsoft.WindowsAzure.Storage.Table.CloudTable).CreateSource
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.CloudStorageAccount
    name: CloudStorageAccount
    nameWithType: CloudStorageAccount
    fullName: Microsoft.WindowsAzure.Storage.CloudStorageAccount
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}.GetSafeSourceName(System.String)
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}.GetSafeSourceName(System.String)
  parent: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.GetSafeSourceName(System.String)
  name: GetSafeSourceName(String)
  nameWithType: StorageStore<EventDataTableEntity<EventData>, CloudTable>.GetSafeSourceName(String)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>, Microsoft.WindowsAzure.Storage.Table.CloudTable>.GetSafeSourceName(System.String)
  nameWithType.vb: StorageStore(Of EventDataTableEntity(Of EventData), CloudTable).GetSafeSourceName(String)
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData), Microsoft.WindowsAzure.Storage.Table.CloudTable).GetSafeSourceName(System.String)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetSafeSourceName(System.String)
    name: GetSafeSourceName
    nameWithType: StorageStore<EventDataTableEntity<EventData>, CloudTable>.GetSafeSourceName
    fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>, Microsoft.WindowsAzure.Storage.Table.CloudTable>.GetSafeSourceName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetSafeSourceName(System.String)
    name: GetSafeSourceName
    nameWithType: StorageStore(Of EventDataTableEntity(Of EventData), CloudTable).GetSafeSourceName
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData), Microsoft.WindowsAzure.Storage.Table.CloudTable).GetSafeSourceName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}.GetSafeSourceName(System.String,System.Boolean)
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}.GetSafeSourceName(System.String,System.Boolean)
  parent: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.GetSafeSourceName(System.String,System.Boolean)
  name: GetSafeSourceName(String, Boolean)
  nameWithType: StorageStore<EventDataTableEntity<EventData>, CloudTable>.GetSafeSourceName(String, Boolean)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>, Microsoft.WindowsAzure.Storage.Table.CloudTable>.GetSafeSourceName(System.String, System.Boolean)
  nameWithType.vb: StorageStore(Of EventDataTableEntity(Of EventData), CloudTable).GetSafeSourceName(String, Boolean)
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData), Microsoft.WindowsAzure.Storage.Table.CloudTable).GetSafeSourceName(System.String, System.Boolean)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetSafeSourceName(System.String,System.Boolean)
    name: GetSafeSourceName
    nameWithType: StorageStore<EventDataTableEntity<EventData>, CloudTable>.GetSafeSourceName
    fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>, Microsoft.WindowsAzure.Storage.Table.CloudTable>.GetSafeSourceName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetSafeSourceName(System.String,System.Boolean)
    name: GetSafeSourceName
    nameWithType: StorageStore(Of EventDataTableEntity(Of EventData), CloudTable).GetSafeSourceName
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData), Microsoft.WindowsAzure.Storage.Table.CloudTable).GetSafeSourceName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}.AzureStorageRetryPolicy
  commentId: P:Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}.AzureStorageRetryPolicy
  parent: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.AzureStorageRetryPolicy
  name: AzureStorageRetryPolicy
  nameWithType: StorageStore<EventDataTableEntity<EventData>, CloudTable>.AzureStorageRetryPolicy
  fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>, Microsoft.WindowsAzure.Storage.Table.CloudTable>.AzureStorageRetryPolicy
  nameWithType.vb: StorageStore(Of EventDataTableEntity(Of EventData), CloudTable).AzureStorageRetryPolicy
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData), Microsoft.WindowsAzure.Storage.Table.CloudTable).AzureStorageRetryPolicy
- uid: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}.Deserialise(System.IO.Stream)
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}.Deserialise(System.IO.Stream)
  parent: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.Deserialise(System.IO.Stream)
  name: Deserialise(Stream)
  nameWithType: StorageStore<EventDataTableEntity<EventData>, CloudTable>.Deserialise(Stream)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>, Microsoft.WindowsAzure.Storage.Table.CloudTable>.Deserialise(System.IO.Stream)
  nameWithType.vb: StorageStore(Of EventDataTableEntity(Of EventData), CloudTable).Deserialise(Stream)
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData), Microsoft.WindowsAzure.Storage.Table.CloudTable).Deserialise(System.IO.Stream)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Deserialise(System.IO.Stream)
    name: Deserialise
    nameWithType: StorageStore<EventDataTableEntity<EventData>, CloudTable>.Deserialise
    fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>, Microsoft.WindowsAzure.Storage.Table.CloudTable>.Deserialise
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Deserialise(System.IO.Stream)
    name: Deserialise
    nameWithType: StorageStore(Of EventDataTableEntity(Of EventData), CloudTable).Deserialise
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData), Microsoft.WindowsAzure.Storage.Table.CloudTable).Deserialise
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}.Deserialise(System.String)
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}.Deserialise(System.String)
  parent: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.Deserialise(System.String)
  name: Deserialise(String)
  nameWithType: StorageStore<EventDataTableEntity<EventData>, CloudTable>.Deserialise(String)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>, Microsoft.WindowsAzure.Storage.Table.CloudTable>.Deserialise(System.String)
  nameWithType.vb: StorageStore(Of EventDataTableEntity(Of EventData), CloudTable).Deserialise(String)
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData), Microsoft.WindowsAzure.Storage.Table.CloudTable).Deserialise(System.String)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Deserialise(System.String)
    name: Deserialise
    nameWithType: StorageStore<EventDataTableEntity<EventData>, CloudTable>.Deserialise
    fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>, Microsoft.WindowsAzure.Storage.Table.CloudTable>.Deserialise
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Deserialise(System.String)
    name: Deserialise
    nameWithType: StorageStore(Of EventDataTableEntity(Of EventData), CloudTable).Deserialise
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData), Microsoft.WindowsAzure.Storage.Table.CloudTable).Deserialise
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}.Serialise(Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData})
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}.Serialise(Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData})
  parent: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.Serialise(`0)
  name: Serialise(EventDataTableEntity<EventData>)
  nameWithType: StorageStore<EventDataTableEntity<EventData>, CloudTable>.Serialise(EventDataTableEntity<EventData>)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>, Microsoft.WindowsAzure.Storage.Table.CloudTable>.Serialise(Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>)
  nameWithType.vb: StorageStore(Of EventDataTableEntity(Of EventData), CloudTable).Serialise(EventDataTableEntity(Of EventData))
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData), Microsoft.WindowsAzure.Storage.Table.CloudTable).Serialise(Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData))
  name.vb: Serialise(EventDataTableEntity(Of EventData))
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Serialise(`0)
    name: Serialise
    nameWithType: StorageStore<EventDataTableEntity<EventData>, CloudTable>.Serialise
    fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>, Microsoft.WindowsAzure.Storage.Table.CloudTable>.Serialise
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Azure.BlobStorage.EventDataTableEntity`1
    name: EventDataTableEntity
    nameWithType: EventDataTableEntity
    fullName: Cqrs.Azure.BlobStorage.EventDataTableEntity
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cqrs.Events.EventData
    name: EventData
    nameWithType: EventData
    fullName: Cqrs.Events.EventData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Serialise(`0)
    name: Serialise
    nameWithType: StorageStore(Of EventDataTableEntity(Of EventData), CloudTable).Serialise
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData), Microsoft.WindowsAzure.Storage.Table.CloudTable).Serialise
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Azure.BlobStorage.EventDataTableEntity`1
    name: EventDataTableEntity
    nameWithType: EventDataTableEntity
    fullName: Cqrs.Azure.BlobStorage.EventDataTableEntity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Cqrs.Events.EventData
    name: EventData
    nameWithType: EventData
    fullName: Cqrs.Events.EventData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}.GetSerialisationSettings
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}.GetSerialisationSettings
  parent: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.GetSerialisationSettings
  name: GetSerialisationSettings()
  nameWithType: StorageStore<EventDataTableEntity<EventData>, CloudTable>.GetSerialisationSettings()
  fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>, Microsoft.WindowsAzure.Storage.Table.CloudTable>.GetSerialisationSettings()
  nameWithType.vb: StorageStore(Of EventDataTableEntity(Of EventData), CloudTable).GetSerialisationSettings()
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData), Microsoft.WindowsAzure.Storage.Table.CloudTable).GetSerialisationSettings()
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetSerialisationSettings
    name: GetSerialisationSettings
    nameWithType: StorageStore<EventDataTableEntity<EventData>, CloudTable>.GetSerialisationSettings
    fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>, Microsoft.WindowsAzure.Storage.Table.CloudTable>.GetSerialisationSettings
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetSerialisationSettings
    name: GetSerialisationSettings
    nameWithType: StorageStore(Of EventDataTableEntity(Of EventData), CloudTable).GetSerialisationSettings
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData), Microsoft.WindowsAzure.Storage.Table.CloudTable).GetSerialisationSettings
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}.GetSerialiser
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}.GetSerialiser
  parent: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData},Microsoft.WindowsAzure.Storage.Table.CloudTable}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.GetSerialiser
  name: GetSerialiser()
  nameWithType: StorageStore<EventDataTableEntity<EventData>, CloudTable>.GetSerialiser()
  fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>, Microsoft.WindowsAzure.Storage.Table.CloudTable>.GetSerialiser()
  nameWithType.vb: StorageStore(Of EventDataTableEntity(Of EventData), CloudTable).GetSerialiser()
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData), Microsoft.WindowsAzure.Storage.Table.CloudTable).GetSerialiser()
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetSerialiser
    name: GetSerialiser
    nameWithType: StorageStore<EventDataTableEntity<EventData>, CloudTable>.GetSerialiser
    fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>, Microsoft.WindowsAzure.Storage.Table.CloudTable>.GetSerialiser
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetSerialiser
    name: GetSerialiser
    nameWithType: StorageStore(Of EventDataTableEntity(Of EventData), CloudTable).GetSerialiser
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData), Microsoft.WindowsAzure.Storage.Table.CloudTable).GetSerialiser
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.DataStores.IDataStore{Cqrs.Events.EventData}.Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByName``1(System.String)
  commentId: M:Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByName``1(Cqrs.DataStores.IDataStore{``0},System.String)
  parent: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions
  definition: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByName``1(Cqrs.DataStores.IDataStore{``0},System.String)
  name: GetByName<EventData>(String)
  nameWithType: BlobStorageStoreExtensions.GetByName<EventData>(String)
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByName<Cqrs.Events.EventData>(System.String)
  nameWithType.vb: BlobStorageStoreExtensions.GetByName(Of EventData)(String)
  fullName.vb: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByName(Of Cqrs.Events.EventData)(System.String)
  name.vb: GetByName(Of EventData)(String)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByName``1(System.String)
    name: GetByName<EventData>
    nameWithType: BlobStorageStoreExtensions.GetByName<EventData>
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByName<Cqrs.Events.EventData>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByName``1(System.String)
    name: GetByName(Of EventData)
    nameWithType: BlobStorageStoreExtensions.GetByName(Of EventData)
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByName(Of Cqrs.Events.EventData)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.DataStores.IDataStore{Cqrs.Events.EventData}.Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByFolder``1(System.String)
  commentId: M:Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByFolder``1(Cqrs.DataStores.IDataStore{``0},System.String)
  parent: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions
  definition: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByFolder``1(Cqrs.DataStores.IDataStore{``0},System.String)
  name: GetByFolder<EventData>(String)
  nameWithType: BlobStorageStoreExtensions.GetByFolder<EventData>(String)
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByFolder<Cqrs.Events.EventData>(System.String)
  nameWithType.vb: BlobStorageStoreExtensions.GetByFolder(Of EventData)(String)
  fullName.vb: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByFolder(Of Cqrs.Events.EventData)(System.String)
  name.vb: GetByFolder(Of EventData)(String)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByFolder``1(System.String)
    name: GetByFolder<EventData>
    nameWithType: BlobStorageStoreExtensions.GetByFolder<EventData>
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByFolder<Cqrs.Events.EventData>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByFolder``1(System.String)
    name: GetByFolder(Of EventData)
    nameWithType: BlobStorageStoreExtensions.GetByFolder(Of EventData)
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByFolder(Of Cqrs.Events.EventData)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Cqrs.Azure.BlobStorage.StorageStore`2
  commentId: T:Cqrs.Azure.BlobStorage.StorageStore`2
  isExternal: false
  name: StorageStore<TData, TSource>
  nameWithType: StorageStore<TData, TSource>
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>
  nameWithType.vb: StorageStore(Of TData, TSource)
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource)
  name.vb: StorageStore(Of TData, TSource)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2
    name: StorageStore
    nameWithType: StorageStore
    fullName: Cqrs.Azure.BlobStorage.StorageStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2
    name: StorageStore
    nameWithType: StorageStore
    fullName: Cqrs.Azure.BlobStorage.StorageStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage
  commentId: N:Cqrs.Azure.BlobStorage
  isExternal: false
  name: Cqrs.Azure.BlobStorage
  nameWithType: Cqrs.Azure.BlobStorage
  fullName: Cqrs.Azure.BlobStorage
- uid: Cqrs.Azure.BlobStorage.TableStorageStore`2
  commentId: T:Cqrs.Azure.BlobStorage.TableStorageStore`2
  isExternal: false
  name: TableStorageStore<TData, TCollectionItemData>
  nameWithType: TableStorageStore<TData, TCollectionItemData>
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<TData, TCollectionItemData>
  nameWithType.vb: TableStorageStore(Of TData, TCollectionItemData)
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of TData, TCollectionItemData)
  name.vb: TableStorageStore(Of TData, TCollectionItemData)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2
    name: TableStorageStore
    nameWithType: TableStorageStore
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TCollectionItemData
    nameWithType: TCollectionItemData
    fullName: TCollectionItemData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2
    name: TableStorageStore
    nameWithType: TableStorageStore
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TCollectionItemData
    nameWithType: TCollectionItemData
    fullName: TCollectionItemData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore`1.RawTableStorageEventStore
  commentId: T:Cqrs.Azure.BlobStorage.Events.TableStorageEventStore`1.RawTableStorageEventStore
  parent: Cqrs.Azure.BlobStorage.Events
  isExternal: false
  name: TableStorageEventStore.RawTableStorageEventStore<>
  nameWithType: TableStorageEventStore.RawTableStorageEventStore<>
  fullName: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore.RawTableStorageEventStore<>
  nameWithType.vb: TableStorageEventStore.RawTableStorageEventStore(Of )
  fullName.vb: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore.RawTableStorageEventStore(Of )
  name.vb: TableStorageEventStore.RawTableStorageEventStore(Of )
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore`1.RawTableStorageEventStore
    name: TableStorageEventStore.RawTableStorageEventStore
    nameWithType: TableStorageEventStore.RawTableStorageEventStore
    fullName: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore.RawTableStorageEventStore
  - name: <
    nameWithType: <
    fullName: <
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore`1.RawTableStorageEventStore
    name: TableStorageEventStore.RawTableStorageEventStore
    nameWithType: TableStorageEventStore.RawTableStorageEventStore
    fullName: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore.RawTableStorageEventStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.Events
  commentId: N:Cqrs.Azure.BlobStorage.Events
  isExternal: false
  name: Cqrs.Azure.BlobStorage.Events
  nameWithType: Cqrs.Azure.BlobStorage.Events
  fullName: Cqrs.Azure.BlobStorage.Events
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Cqrs.DataStores.IDataStore`1
  commentId: T:Cqrs.DataStores.IDataStore`1
  isExternal: false
  name: IDataStore<TData>
  nameWithType: IDataStore<TData>
  fullName: Cqrs.DataStores.IDataStore<TData>
  nameWithType.vb: IDataStore(Of TData)
  fullName.vb: Cqrs.DataStores.IDataStore(Of TData)
  name.vb: IDataStore(Of TData)
  spec.csharp:
  - uid: Cqrs.DataStores.IDataStore`1
    name: IDataStore
    nameWithType: IDataStore
    fullName: Cqrs.DataStores.IDataStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.DataStores.IDataStore`1
    name: IDataStore
    nameWithType: IDataStore
    fullName: Cqrs.DataStores.IDataStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.DataStores
  commentId: N:Cqrs.DataStores
  isExternal: false
  name: Cqrs.DataStores
  nameWithType: Cqrs.DataStores
  fullName: Cqrs.DataStores
- uid: System.Linq.IOrderedQueryable`1
  commentId: T:System.Linq.IOrderedQueryable`1
  isExternal: true
  name: IOrderedQueryable<T>
  nameWithType: IOrderedQueryable<T>
  fullName: System.Linq.IOrderedQueryable<T>
  nameWithType.vb: IOrderedQueryable(Of T)
  fullName.vb: System.Linq.IOrderedQueryable(Of T)
  name.vb: IOrderedQueryable(Of T)
  spec.csharp:
  - uid: System.Linq.IOrderedQueryable`1
    name: IOrderedQueryable
    nameWithType: IOrderedQueryable
    fullName: System.Linq.IOrderedQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.IOrderedQueryable`1
    name: IOrderedQueryable
    nameWithType: IOrderedQueryable
    fullName: System.Linq.IOrderedQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq
  commentId: N:System.Linq
  isExternal: false
  name: System.Linq
  nameWithType: System.Linq
  fullName: System.Linq
- uid: System.Linq.IQueryable`1
  commentId: T:System.Linq.IQueryable`1
  isExternal: true
  name: IQueryable<T>
  nameWithType: IQueryable<T>
  fullName: System.Linq.IQueryable<T>
  nameWithType.vb: IQueryable(Of T)
  fullName.vb: System.Linq.IQueryable(Of T)
  name.vb: IQueryable(Of T)
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: false
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore`1.RawTableStorageEventStore.IsCorrelationIdTableStorageStore
  commentId: P:Cqrs.Azure.BlobStorage.Events.TableStorageEventStore`1.RawTableStorageEventStore.IsCorrelationIdTableStorageStore
  isExternal: false
  name: IsCorrelationIdTableStorageStore
  nameWithType: TableStorageEventStore<TAuthenticationToken>.RawTableStorageEventStore.IsCorrelationIdTableStorageStore
  fullName: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore<TAuthenticationToken>.RawTableStorageEventStore.IsCorrelationIdTableStorageStore
  nameWithType.vb: TableStorageEventStore(Of TAuthenticationToken).RawTableStorageEventStore.IsCorrelationIdTableStorageStore
  fullName.vb: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore(Of TAuthenticationToken).RawTableStorageEventStore.IsCorrelationIdTableStorageStore
- uid: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore`1.RawTableStorageEventStore.Remove(Cqrs.Events.EventData)
  commentId: M:Cqrs.Azure.BlobStorage.Events.TableStorageEventStore`1.RawTableStorageEventStore.Remove(Cqrs.Events.EventData)
  isExternal: false
  name: Remove(EventData)
  nameWithType: TableStorageEventStore<TAuthenticationToken>.RawTableStorageEventStore.Remove(EventData)
  fullName: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore<TAuthenticationToken>.RawTableStorageEventStore.Remove(Cqrs.Events.EventData)
  nameWithType.vb: TableStorageEventStore(Of TAuthenticationToken).RawTableStorageEventStore.Remove(EventData)
  fullName.vb: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore(Of TAuthenticationToken).RawTableStorageEventStore.Remove(Cqrs.Events.EventData)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore`1.RawTableStorageEventStore.Remove(Cqrs.Events.EventData)
    name: Remove
    nameWithType: TableStorageEventStore<TAuthenticationToken>.RawTableStorageEventStore.Remove
    fullName: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore<TAuthenticationToken>.RawTableStorageEventStore.Remove
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Events.EventData
    name: EventData
    nameWithType: EventData
    fullName: Cqrs.Events.EventData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore`1.RawTableStorageEventStore.Remove(Cqrs.Events.EventData)
    name: Remove
    nameWithType: TableStorageEventStore(Of TAuthenticationToken).RawTableStorageEventStore.Remove
    fullName: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore(Of TAuthenticationToken).RawTableStorageEventStore.Remove
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Events.EventData
    name: EventData
    nameWithType: EventData
    fullName: Cqrs.Events.EventData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore`1.RawTableStorageEventStore.GetUpdatableTableEntity(Cqrs.Events.EventData)
  commentId: M:Cqrs.Azure.BlobStorage.Events.TableStorageEventStore`1.RawTableStorageEventStore.GetUpdatableTableEntity(Cqrs.Events.EventData)
  isExternal: false
  name: GetUpdatableTableEntity(EventData)
  nameWithType: TableStorageEventStore<TAuthenticationToken>.RawTableStorageEventStore.GetUpdatableTableEntity(EventData)
  fullName: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore<TAuthenticationToken>.RawTableStorageEventStore.GetUpdatableTableEntity(Cqrs.Events.EventData)
  nameWithType.vb: TableStorageEventStore(Of TAuthenticationToken).RawTableStorageEventStore.GetUpdatableTableEntity(EventData)
  fullName.vb: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore(Of TAuthenticationToken).RawTableStorageEventStore.GetUpdatableTableEntity(Cqrs.Events.EventData)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore`1.RawTableStorageEventStore.GetUpdatableTableEntity(Cqrs.Events.EventData)
    name: GetUpdatableTableEntity
    nameWithType: TableStorageEventStore<TAuthenticationToken>.RawTableStorageEventStore.GetUpdatableTableEntity
    fullName: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore<TAuthenticationToken>.RawTableStorageEventStore.GetUpdatableTableEntity
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Events.EventData
    name: EventData
    nameWithType: EventData
    fullName: Cqrs.Events.EventData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore`1.RawTableStorageEventStore.GetUpdatableTableEntity(Cqrs.Events.EventData)
    name: GetUpdatableTableEntity
    nameWithType: TableStorageEventStore(Of TAuthenticationToken).RawTableStorageEventStore.GetUpdatableTableEntity
    fullName: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore(Of TAuthenticationToken).RawTableStorageEventStore.GetUpdatableTableEntity
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Events.EventData
    name: EventData
    nameWithType: EventData
    fullName: Cqrs.Events.EventData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore`1.RawTableStorageEventStore.GetUpdatableTableEntity(Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData})
  commentId: M:Cqrs.Azure.BlobStorage.Events.TableStorageEventStore`1.RawTableStorageEventStore.GetUpdatableTableEntity(Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData})
  isExternal: false
  name: GetUpdatableTableEntity(EventDataTableEntity<EventData>)
  nameWithType: TableStorageEventStore<TAuthenticationToken>.RawTableStorageEventStore.GetUpdatableTableEntity(EventDataTableEntity<EventData>)
  fullName: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore<TAuthenticationToken>.RawTableStorageEventStore.GetUpdatableTableEntity(Cqrs.Azure.BlobStorage.EventDataTableEntity<Cqrs.Events.EventData>)
  nameWithType.vb: TableStorageEventStore(Of TAuthenticationToken).RawTableStorageEventStore.GetUpdatableTableEntity(EventDataTableEntity(Of EventData))
  fullName.vb: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore(Of TAuthenticationToken).RawTableStorageEventStore.GetUpdatableTableEntity(Cqrs.Azure.BlobStorage.EventDataTableEntity(Of Cqrs.Events.EventData))
  name.vb: GetUpdatableTableEntity(EventDataTableEntity(Of EventData))
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore`1.RawTableStorageEventStore.GetUpdatableTableEntity(Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData})
    name: GetUpdatableTableEntity
    nameWithType: TableStorageEventStore<TAuthenticationToken>.RawTableStorageEventStore.GetUpdatableTableEntity
    fullName: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore<TAuthenticationToken>.RawTableStorageEventStore.GetUpdatableTableEntity
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Azure.BlobStorage.EventDataTableEntity`1
    name: EventDataTableEntity
    nameWithType: EventDataTableEntity
    fullName: Cqrs.Azure.BlobStorage.EventDataTableEntity
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cqrs.Events.EventData
    name: EventData
    nameWithType: EventData
    fullName: Cqrs.Events.EventData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore`1.RawTableStorageEventStore.GetUpdatableTableEntity(Cqrs.Azure.BlobStorage.EventDataTableEntity{Cqrs.Events.EventData})
    name: GetUpdatableTableEntity
    nameWithType: TableStorageEventStore(Of TAuthenticationToken).RawTableStorageEventStore.GetUpdatableTableEntity
    fullName: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore(Of TAuthenticationToken).RawTableStorageEventStore.GetUpdatableTableEntity
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Azure.BlobStorage.EventDataTableEntity`1
    name: EventDataTableEntity
    nameWithType: EventDataTableEntity
    fullName: Cqrs.Azure.BlobStorage.EventDataTableEntity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Cqrs.Events.EventData
    name: EventData
    nameWithType: EventData
    fullName: Cqrs.Events.EventData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Collection
  commentId: P:Cqrs.Azure.BlobStorage.TableStorageStore`2.Collection
  isExternal: false
  name: Collection
  nameWithType: TableStorageStore<TData, TCollectionItemData>.Collection
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<TData, TCollectionItemData>.Collection
  nameWithType.vb: TableStorageStore(Of TData, TCollectionItemData).Collection
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of TData, TCollectionItemData).Collection
- uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Initialise(Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory)
  commentId: M:Cqrs.Azure.BlobStorage.TableStorageStore`2.Initialise(Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory)
  isExternal: false
  name: Initialise(IStorageStoreConnectionStringFactory)
  nameWithType: TableStorageStore<TData, TCollectionItemData>.Initialise(IStorageStoreConnectionStringFactory)
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<TData, TCollectionItemData>.Initialise(Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory)
  nameWithType.vb: TableStorageStore(Of TData, TCollectionItemData).Initialise(IStorageStoreConnectionStringFactory)
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of TData, TCollectionItemData).Initialise(Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Initialise(Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory)
    name: Initialise
    nameWithType: TableStorageStore<TData, TCollectionItemData>.Initialise
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore<TData, TCollectionItemData>.Initialise
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory
    name: IStorageStoreConnectionStringFactory
    nameWithType: IStorageStoreConnectionStringFactory
    fullName: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Initialise(Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory)
    name: Initialise
    nameWithType: TableStorageStore(Of TData, TCollectionItemData).Initialise
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore(Of TData, TCollectionItemData).Initialise
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory
    name: IStorageStoreConnectionStringFactory
    nameWithType: IStorageStoreConnectionStringFactory
    fullName: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.System#Collections#Generic#IEnumerable{TCollectionItemData}#GetEnumerator
  commentId: M:Cqrs.Azure.BlobStorage.TableStorageStore`2.System#Collections#Generic#IEnumerable{TCollectionItemData}#GetEnumerator
  isExternal: false
  name: IEnumerable<TCollectionItemData>.GetEnumerator()
  nameWithType: TableStorageStore<TData, TCollectionItemData>.IEnumerable<TCollectionItemData>.GetEnumerator()
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<TData, TCollectionItemData>.System.Collections.Generic.IEnumerable<TCollectionItemData>.GetEnumerator()
  nameWithType.vb: TableStorageStore(Of TData, TCollectionItemData).System.Collections.Generic.IEnumerable<TCollectionItemData>.GetEnumerator()
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of TData, TCollectionItemData).System.Collections.Generic.IEnumerable<TCollectionItemData>.GetEnumerator()
  name.vb: System.Collections.Generic.IEnumerable<TCollectionItemData>.GetEnumerator()
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.System#Collections#Generic#IEnumerable{TCollectionItemData}#GetEnumerator
    name: IEnumerable<TCollectionItemData>.GetEnumerator
    nameWithType: TableStorageStore<TData, TCollectionItemData>.IEnumerable<TCollectionItemData>.GetEnumerator
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore<TData, TCollectionItemData>.System.Collections.Generic.IEnumerable<TCollectionItemData>.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.System#Collections#Generic#IEnumerable{TCollectionItemData}#GetEnumerator
    name: System.Collections.Generic.IEnumerable<TCollectionItemData>.GetEnumerator
    nameWithType: TableStorageStore(Of TData, TCollectionItemData).System.Collections.Generic.IEnumerable<TCollectionItemData>.GetEnumerator
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore(Of TData, TCollectionItemData).System.Collections.Generic.IEnumerable<TCollectionItemData>.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.GetEnumerator
  commentId: M:Cqrs.Azure.BlobStorage.TableStorageStore`2.GetEnumerator
  isExternal: false
  name: GetEnumerator()
  nameWithType: TableStorageStore<TData, TCollectionItemData>.GetEnumerator()
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<TData, TCollectionItemData>.GetEnumerator()
  nameWithType.vb: TableStorageStore(Of TData, TCollectionItemData).GetEnumerator()
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of TData, TCollectionItemData).GetEnumerator()
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.GetEnumerator
    name: GetEnumerator
    nameWithType: TableStorageStore<TData, TCollectionItemData>.GetEnumerator
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore<TData, TCollectionItemData>.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.GetEnumerator
    name: GetEnumerator
    nameWithType: TableStorageStore(Of TData, TCollectionItemData).GetEnumerator
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore(Of TData, TCollectionItemData).GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Expression
  commentId: P:Cqrs.Azure.BlobStorage.TableStorageStore`2.Expression
  isExternal: false
  name: Expression
  nameWithType: TableStorageStore<TData, TCollectionItemData>.Expression
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<TData, TCollectionItemData>.Expression
  nameWithType.vb: TableStorageStore(Of TData, TCollectionItemData).Expression
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of TData, TCollectionItemData).Expression
- uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.ElementType
  commentId: P:Cqrs.Azure.BlobStorage.TableStorageStore`2.ElementType
  isExternal: false
  name: ElementType
  nameWithType: TableStorageStore<TData, TCollectionItemData>.ElementType
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<TData, TCollectionItemData>.ElementType
  nameWithType.vb: TableStorageStore(Of TData, TCollectionItemData).ElementType
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of TData, TCollectionItemData).ElementType
- uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Provider
  commentId: P:Cqrs.Azure.BlobStorage.TableStorageStore`2.Provider
  isExternal: false
  name: Provider
  nameWithType: TableStorageStore<TData, TCollectionItemData>.Provider
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<TData, TCollectionItemData>.Provider
  nameWithType.vb: TableStorageStore(Of TData, TCollectionItemData).Provider
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of TData, TCollectionItemData).Provider
- uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.AsyncSaveData``2(``0,System.Func{``0,Microsoft.WindowsAzure.Storage.Table.CloudTable,``1},System.Func{``0,System.String})
  commentId: M:Cqrs.Azure.BlobStorage.TableStorageStore`2.AsyncSaveData``2(``0,System.Func{``0,Microsoft.WindowsAzure.Storage.Table.CloudTable,``1},System.Func{``0,System.String})
  isExternal: true
  name: AsyncSaveData<TSaveData, TResult>(TSaveData, Func<TSaveData, CloudTable, TResult>, Func<TSaveData, String>)
  nameWithType: TableStorageStore<TData, TCollectionItemData>.AsyncSaveData<TSaveData, TResult>(TSaveData, Func<TSaveData, CloudTable, TResult>, Func<TSaveData, String>)
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<TData, TCollectionItemData>.AsyncSaveData<TSaveData, TResult>(TSaveData, System.Func<TSaveData, Microsoft.WindowsAzure.Storage.Table.CloudTable, TResult>, System.Func<TSaveData, System.String>)
  nameWithType.vb: TableStorageStore(Of TData, TCollectionItemData).AsyncSaveData(Of TSaveData, TResult)(TSaveData, Func(Of TSaveData, CloudTable, TResult), Func(Of TSaveData, String))
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of TData, TCollectionItemData).AsyncSaveData(Of TSaveData, TResult)(TSaveData, System.Func(Of TSaveData, Microsoft.WindowsAzure.Storage.Table.CloudTable, TResult), System.Func(Of TSaveData, System.String))
  name.vb: AsyncSaveData(Of TSaveData, TResult)(TSaveData, Func(Of TSaveData, CloudTable, TResult), Func(Of TSaveData, String))
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.AsyncSaveData``2(``0,System.Func{``0,Microsoft.WindowsAzure.Storage.Table.CloudTable,``1},System.Func{``0,System.String})
    name: AsyncSaveData<TSaveData, TResult>
    nameWithType: TableStorageStore<TData, TCollectionItemData>.AsyncSaveData<TSaveData, TResult>
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore<TData, TCollectionItemData>.AsyncSaveData<TSaveData, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: TSaveData
    nameWithType: TSaveData
    fullName: TSaveData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSaveData
    nameWithType: TSaveData
    fullName: TSaveData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Table.CloudTable
    name: CloudTable
    nameWithType: CloudTable
    fullName: Microsoft.WindowsAzure.Storage.Table.CloudTable
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSaveData
    nameWithType: TSaveData
    fullName: TSaveData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.AsyncSaveData``2(``0,System.Func{``0,Microsoft.WindowsAzure.Storage.Table.CloudTable,``1},System.Func{``0,System.String})
    name: AsyncSaveData(Of TSaveData, TResult)
    nameWithType: TableStorageStore(Of TData, TCollectionItemData).AsyncSaveData(Of TSaveData, TResult)
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore(Of TData, TCollectionItemData).AsyncSaveData(Of TSaveData, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: TSaveData
    nameWithType: TSaveData
    fullName: TSaveData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSaveData
    nameWithType: TSaveData
    fullName: TSaveData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Table.CloudTable
    name: CloudTable
    nameWithType: CloudTable
    fullName: Microsoft.WindowsAzure.Storage.Table.CloudTable
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSaveData
    nameWithType: TSaveData
    fullName: TSaveData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.CreateTableEntity(`1)
  commentId: M:Cqrs.Azure.BlobStorage.TableStorageStore`2.CreateTableEntity(`1)
  isExternal: false
  name: CreateTableEntity(TCollectionItemData)
  nameWithType: TableStorageStore<TData, TCollectionItemData>.CreateTableEntity(TCollectionItemData)
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<TData, TCollectionItemData>.CreateTableEntity(TCollectionItemData)
  nameWithType.vb: TableStorageStore(Of TData, TCollectionItemData).CreateTableEntity(TCollectionItemData)
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of TData, TCollectionItemData).CreateTableEntity(TCollectionItemData)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.CreateTableEntity(`1)
    name: CreateTableEntity
    nameWithType: TableStorageStore<TData, TCollectionItemData>.CreateTableEntity
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore<TData, TCollectionItemData>.CreateTableEntity
  - name: (
    nameWithType: (
    fullName: (
  - name: TCollectionItemData
    nameWithType: TCollectionItemData
    fullName: TCollectionItemData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.CreateTableEntity(`1)
    name: CreateTableEntity
    nameWithType: TableStorageStore(Of TData, TCollectionItemData).CreateTableEntity
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore(Of TData, TCollectionItemData).CreateTableEntity
  - name: (
    nameWithType: (
    fullName: (
  - name: TCollectionItemData
    nameWithType: TCollectionItemData
    fullName: TCollectionItemData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Add(`0)
  commentId: M:Cqrs.Azure.BlobStorage.TableStorageStore`2.Add(`0)
  isExternal: false
  name: Add(TData)
  nameWithType: TableStorageStore<TData, TCollectionItemData>.Add(TData)
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<TData, TCollectionItemData>.Add(TData)
  nameWithType.vb: TableStorageStore(Of TData, TCollectionItemData).Add(TData)
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of TData, TCollectionItemData).Add(TData)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Add(`0)
    name: Add
    nameWithType: TableStorageStore<TData, TCollectionItemData>.Add
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore<TData, TCollectionItemData>.Add
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Add(`0)
    name: Add
    nameWithType: TableStorageStore(Of TData, TCollectionItemData).Add
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore(Of TData, TCollectionItemData).Add
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Add(Microsoft.WindowsAzure.Storage.Table.ITableEntity)
  commentId: M:Cqrs.Azure.BlobStorage.TableStorageStore`2.Add(Microsoft.WindowsAzure.Storage.Table.ITableEntity)
  isExternal: true
  name: Add(ITableEntity)
  nameWithType: TableStorageStore<TData, TCollectionItemData>.Add(ITableEntity)
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<TData, TCollectionItemData>.Add(Microsoft.WindowsAzure.Storage.Table.ITableEntity)
  nameWithType.vb: TableStorageStore(Of TData, TCollectionItemData).Add(ITableEntity)
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of TData, TCollectionItemData).Add(Microsoft.WindowsAzure.Storage.Table.ITableEntity)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Add(Microsoft.WindowsAzure.Storage.Table.ITableEntity)
    name: Add
    nameWithType: TableStorageStore<TData, TCollectionItemData>.Add
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore<TData, TCollectionItemData>.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.Table.ITableEntity
    name: ITableEntity
    nameWithType: ITableEntity
    fullName: Microsoft.WindowsAzure.Storage.Table.ITableEntity
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Add(Microsoft.WindowsAzure.Storage.Table.ITableEntity)
    name: Add
    nameWithType: TableStorageStore(Of TData, TCollectionItemData).Add
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore(Of TData, TCollectionItemData).Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.Table.ITableEntity
    name: ITableEntity
    nameWithType: ITableEntity
    fullName: Microsoft.WindowsAzure.Storage.Table.ITableEntity
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Add(System.Collections.Generic.IEnumerable{`0})
  commentId: M:Cqrs.Azure.BlobStorage.TableStorageStore`2.Add(System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  name: Add(IEnumerable<TData>)
  nameWithType: TableStorageStore<TData, TCollectionItemData>.Add(IEnumerable<TData>)
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<TData, TCollectionItemData>.Add(System.Collections.Generic.IEnumerable<TData>)
  nameWithType.vb: TableStorageStore(Of TData, TCollectionItemData).Add(IEnumerable(Of TData))
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of TData, TCollectionItemData).Add(System.Collections.Generic.IEnumerable(Of TData))
  name.vb: Add(IEnumerable(Of TData))
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Add(System.Collections.Generic.IEnumerable{`0})
    name: Add
    nameWithType: TableStorageStore<TData, TCollectionItemData>.Add
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore<TData, TCollectionItemData>.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Add(System.Collections.Generic.IEnumerable{`0})
    name: Add
    nameWithType: TableStorageStore(Of TData, TCollectionItemData).Add
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore(Of TData, TCollectionItemData).Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Add(System.Collections.Generic.IEnumerable{Microsoft.WindowsAzure.Storage.Table.ITableEntity})
  commentId: M:Cqrs.Azure.BlobStorage.TableStorageStore`2.Add(System.Collections.Generic.IEnumerable{Microsoft.WindowsAzure.Storage.Table.ITableEntity})
  isExternal: true
  name: Add(IEnumerable<ITableEntity>)
  nameWithType: TableStorageStore<TData, TCollectionItemData>.Add(IEnumerable<ITableEntity>)
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<TData, TCollectionItemData>.Add(System.Collections.Generic.IEnumerable<Microsoft.WindowsAzure.Storage.Table.ITableEntity>)
  nameWithType.vb: TableStorageStore(Of TData, TCollectionItemData).Add(IEnumerable(Of ITableEntity))
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of TData, TCollectionItemData).Add(System.Collections.Generic.IEnumerable(Of Microsoft.WindowsAzure.Storage.Table.ITableEntity))
  name.vb: Add(IEnumerable(Of ITableEntity))
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Add(System.Collections.Generic.IEnumerable{Microsoft.WindowsAzure.Storage.Table.ITableEntity})
    name: Add
    nameWithType: TableStorageStore<TData, TCollectionItemData>.Add
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore<TData, TCollectionItemData>.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Storage.Table.ITableEntity
    name: ITableEntity
    nameWithType: ITableEntity
    fullName: Microsoft.WindowsAzure.Storage.Table.ITableEntity
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Add(System.Collections.Generic.IEnumerable{Microsoft.WindowsAzure.Storage.Table.ITableEntity})
    name: Add
    nameWithType: TableStorageStore(Of TData, TCollectionItemData).Add
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore(Of TData, TCollectionItemData).Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Storage.Table.ITableEntity
    name: ITableEntity
    nameWithType: ITableEntity
    fullName: Microsoft.WindowsAzure.Storage.Table.ITableEntity
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Destroy(`0)
  commentId: M:Cqrs.Azure.BlobStorage.TableStorageStore`2.Destroy(`0)
  isExternal: false
  name: Destroy(TData)
  nameWithType: TableStorageStore<TData, TCollectionItemData>.Destroy(TData)
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<TData, TCollectionItemData>.Destroy(TData)
  nameWithType.vb: TableStorageStore(Of TData, TCollectionItemData).Destroy(TData)
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of TData, TCollectionItemData).Destroy(TData)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Destroy(`0)
    name: Destroy
    nameWithType: TableStorageStore<TData, TCollectionItemData>.Destroy
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore<TData, TCollectionItemData>.Destroy
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Destroy(`0)
    name: Destroy
    nameWithType: TableStorageStore(Of TData, TCollectionItemData).Destroy
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore(Of TData, TCollectionItemData).Destroy
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Add(`1)
  commentId: M:Cqrs.Azure.BlobStorage.TableStorageStore`2.Add(`1)
  isExternal: false
  name: Add(TCollectionItemData)
  nameWithType: TableStorageStore<TData, TCollectionItemData>.Add(TCollectionItemData)
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<TData, TCollectionItemData>.Add(TCollectionItemData)
  nameWithType.vb: TableStorageStore(Of TData, TCollectionItemData).Add(TCollectionItemData)
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of TData, TCollectionItemData).Add(TCollectionItemData)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Add(`1)
    name: Add
    nameWithType: TableStorageStore<TData, TCollectionItemData>.Add
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore<TData, TCollectionItemData>.Add
  - name: (
    nameWithType: (
    fullName: (
  - name: TCollectionItemData
    nameWithType: TCollectionItemData
    fullName: TCollectionItemData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Add(`1)
    name: Add
    nameWithType: TableStorageStore(Of TData, TCollectionItemData).Add
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore(Of TData, TCollectionItemData).Add
  - name: (
    nameWithType: (
    fullName: (
  - name: TCollectionItemData
    nameWithType: TCollectionItemData
    fullName: TCollectionItemData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Add(System.Collections.Generic.IEnumerable{`1})
  commentId: M:Cqrs.Azure.BlobStorage.TableStorageStore`2.Add(System.Collections.Generic.IEnumerable{`1})
  isExternal: true
  name: Add(IEnumerable<TCollectionItemData>)
  nameWithType: TableStorageStore<TData, TCollectionItemData>.Add(IEnumerable<TCollectionItemData>)
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<TData, TCollectionItemData>.Add(System.Collections.Generic.IEnumerable<TCollectionItemData>)
  nameWithType.vb: TableStorageStore(Of TData, TCollectionItemData).Add(IEnumerable(Of TCollectionItemData))
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of TData, TCollectionItemData).Add(System.Collections.Generic.IEnumerable(Of TCollectionItemData))
  name.vb: Add(IEnumerable(Of TCollectionItemData))
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Add(System.Collections.Generic.IEnumerable{`1})
    name: Add
    nameWithType: TableStorageStore<TData, TCollectionItemData>.Add
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore<TData, TCollectionItemData>.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TCollectionItemData
    nameWithType: TCollectionItemData
    fullName: TCollectionItemData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Add(System.Collections.Generic.IEnumerable{`1})
    name: Add
    nameWithType: TableStorageStore(Of TData, TCollectionItemData).Add
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore(Of TData, TCollectionItemData).Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TCollectionItemData
    nameWithType: TCollectionItemData
    fullName: TCollectionItemData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Remove(`1)
  commentId: M:Cqrs.Azure.BlobStorage.TableStorageStore`2.Remove(`1)
  isExternal: false
  name: Remove(TCollectionItemData)
  nameWithType: TableStorageStore<TData, TCollectionItemData>.Remove(TCollectionItemData)
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<TData, TCollectionItemData>.Remove(TCollectionItemData)
  nameWithType.vb: TableStorageStore(Of TData, TCollectionItemData).Remove(TCollectionItemData)
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of TData, TCollectionItemData).Remove(TCollectionItemData)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Remove(`1)
    name: Remove
    nameWithType: TableStorageStore<TData, TCollectionItemData>.Remove
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore<TData, TCollectionItemData>.Remove
  - name: (
    nameWithType: (
    fullName: (
  - name: TCollectionItemData
    nameWithType: TCollectionItemData
    fullName: TCollectionItemData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Remove(`1)
    name: Remove
    nameWithType: TableStorageStore(Of TData, TCollectionItemData).Remove
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore(Of TData, TCollectionItemData).Remove
  - name: (
    nameWithType: (
    fullName: (
  - name: TCollectionItemData
    nameWithType: TCollectionItemData
    fullName: TCollectionItemData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Destroy(`1)
  commentId: M:Cqrs.Azure.BlobStorage.TableStorageStore`2.Destroy(`1)
  isExternal: false
  name: Destroy(TCollectionItemData)
  nameWithType: TableStorageStore<TData, TCollectionItemData>.Destroy(TCollectionItemData)
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<TData, TCollectionItemData>.Destroy(TCollectionItemData)
  nameWithType.vb: TableStorageStore(Of TData, TCollectionItemData).Destroy(TCollectionItemData)
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of TData, TCollectionItemData).Destroy(TCollectionItemData)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Destroy(`1)
    name: Destroy
    nameWithType: TableStorageStore<TData, TCollectionItemData>.Destroy
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore<TData, TCollectionItemData>.Destroy
  - name: (
    nameWithType: (
    fullName: (
  - name: TCollectionItemData
    nameWithType: TCollectionItemData
    fullName: TCollectionItemData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Destroy(`1)
    name: Destroy
    nameWithType: TableStorageStore(Of TData, TCollectionItemData).Destroy
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore(Of TData, TCollectionItemData).Destroy
  - name: (
    nameWithType: (
    fullName: (
  - name: TCollectionItemData
    nameWithType: TCollectionItemData
    fullName: TCollectionItemData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.RemoveAll
  commentId: M:Cqrs.Azure.BlobStorage.TableStorageStore`2.RemoveAll
  isExternal: false
  name: RemoveAll()
  nameWithType: TableStorageStore<TData, TCollectionItemData>.RemoveAll()
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<TData, TCollectionItemData>.RemoveAll()
  nameWithType.vb: TableStorageStore(Of TData, TCollectionItemData).RemoveAll()
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of TData, TCollectionItemData).RemoveAll()
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.RemoveAll
    name: RemoveAll
    nameWithType: TableStorageStore<TData, TCollectionItemData>.RemoveAll
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore<TData, TCollectionItemData>.RemoveAll
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.RemoveAll
    name: RemoveAll
    nameWithType: TableStorageStore(Of TData, TCollectionItemData).RemoveAll
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore(Of TData, TCollectionItemData).RemoveAll
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Update(`1)
  commentId: M:Cqrs.Azure.BlobStorage.TableStorageStore`2.Update(`1)
  isExternal: false
  name: Update(TCollectionItemData)
  nameWithType: TableStorageStore<TData, TCollectionItemData>.Update(TCollectionItemData)
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<TData, TCollectionItemData>.Update(TCollectionItemData)
  nameWithType.vb: TableStorageStore(Of TData, TCollectionItemData).Update(TCollectionItemData)
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of TData, TCollectionItemData).Update(TCollectionItemData)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Update(`1)
    name: Update
    nameWithType: TableStorageStore<TData, TCollectionItemData>.Update
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore<TData, TCollectionItemData>.Update
  - name: (
    nameWithType: (
    fullName: (
  - name: TCollectionItemData
    nameWithType: TCollectionItemData
    fullName: TCollectionItemData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Update(`1)
    name: Update
    nameWithType: TableStorageStore(Of TData, TCollectionItemData).Update
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore(Of TData, TCollectionItemData).Update
  - name: (
    nameWithType: (
    fullName: (
  - name: TCollectionItemData
    nameWithType: TCollectionItemData
    fullName: TCollectionItemData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Update(`0)
  commentId: M:Cqrs.Azure.BlobStorage.TableStorageStore`2.Update(`0)
  isExternal: false
  name: Update(TData)
  nameWithType: TableStorageStore<TData, TCollectionItemData>.Update(TData)
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<TData, TCollectionItemData>.Update(TData)
  nameWithType.vb: TableStorageStore(Of TData, TCollectionItemData).Update(TData)
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of TData, TCollectionItemData).Update(TData)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Update(`0)
    name: Update
    nameWithType: TableStorageStore<TData, TCollectionItemData>.Update
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore<TData, TCollectionItemData>.Update
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.Update(`0)
    name: Update
    nameWithType: TableStorageStore(Of TData, TCollectionItemData).Update
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore(Of TData, TCollectionItemData).Update
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.GetUpdatableTableEntity(`1)
  commentId: M:Cqrs.Azure.BlobStorage.TableStorageStore`2.GetUpdatableTableEntity(`1)
  isExternal: false
  name: GetUpdatableTableEntity(TCollectionItemData)
  nameWithType: TableStorageStore<TData, TCollectionItemData>.GetUpdatableTableEntity(TCollectionItemData)
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<TData, TCollectionItemData>.GetUpdatableTableEntity(TCollectionItemData)
  nameWithType.vb: TableStorageStore(Of TData, TCollectionItemData).GetUpdatableTableEntity(TCollectionItemData)
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of TData, TCollectionItemData).GetUpdatableTableEntity(TCollectionItemData)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.GetUpdatableTableEntity(`1)
    name: GetUpdatableTableEntity
    nameWithType: TableStorageStore<TData, TCollectionItemData>.GetUpdatableTableEntity
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore<TData, TCollectionItemData>.GetUpdatableTableEntity
  - name: (
    nameWithType: (
    fullName: (
  - name: TCollectionItemData
    nameWithType: TCollectionItemData
    fullName: TCollectionItemData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.GetUpdatableTableEntity(`1)
    name: GetUpdatableTableEntity
    nameWithType: TableStorageStore(Of TData, TCollectionItemData).GetUpdatableTableEntity
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore(Of TData, TCollectionItemData).GetUpdatableTableEntity
  - name: (
    nameWithType: (
    fullName: (
  - name: TCollectionItemData
    nameWithType: TCollectionItemData
    fullName: TCollectionItemData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.GetUpdatableTableEntity(`0)
  commentId: M:Cqrs.Azure.BlobStorage.TableStorageStore`2.GetUpdatableTableEntity(`0)
  isExternal: false
  name: GetUpdatableTableEntity(TData)
  nameWithType: TableStorageStore<TData, TCollectionItemData>.GetUpdatableTableEntity(TData)
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<TData, TCollectionItemData>.GetUpdatableTableEntity(TData)
  nameWithType.vb: TableStorageStore(Of TData, TCollectionItemData).GetUpdatableTableEntity(TData)
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of TData, TCollectionItemData).GetUpdatableTableEntity(TData)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.GetUpdatableTableEntity(`0)
    name: GetUpdatableTableEntity
    nameWithType: TableStorageStore<TData, TCollectionItemData>.GetUpdatableTableEntity
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore<TData, TCollectionItemData>.GetUpdatableTableEntity
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.GetUpdatableTableEntity(`0)
    name: GetUpdatableTableEntity
    nameWithType: TableStorageStore(Of TData, TCollectionItemData).GetUpdatableTableEntity
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore(Of TData, TCollectionItemData).GetUpdatableTableEntity
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String,System.Boolean)
  commentId: M:Cqrs.Azure.BlobStorage.TableStorageStore`2.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String,System.Boolean)
  isExternal: true
  name: CreateSource(CloudStorageAccount, String, Boolean)
  nameWithType: TableStorageStore<TData, TCollectionItemData>.CreateSource(CloudStorageAccount, String, Boolean)
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<TData, TCollectionItemData>.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount, System.String, System.Boolean)
  nameWithType.vb: TableStorageStore(Of TData, TCollectionItemData).CreateSource(CloudStorageAccount, String, Boolean)
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of TData, TCollectionItemData).CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount, System.String, System.Boolean)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String,System.Boolean)
    name: CreateSource
    nameWithType: TableStorageStore<TData, TCollectionItemData>.CreateSource
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore<TData, TCollectionItemData>.CreateSource
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.CloudStorageAccount
    name: CloudStorageAccount
    nameWithType: CloudStorageAccount
    fullName: Microsoft.WindowsAzure.Storage.CloudStorageAccount
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String,System.Boolean)
    name: CreateSource
    nameWithType: TableStorageStore(Of TData, TCollectionItemData).CreateSource
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore(Of TData, TCollectionItemData).CreateSource
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.CloudStorageAccount
    name: CloudStorageAccount
    nameWithType: CloudStorageAccount
    fullName: Microsoft.WindowsAzure.Storage.CloudStorageAccount
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.GetByKeyAndRow(System.Guid)
  commentId: M:Cqrs.Azure.BlobStorage.TableStorageStore`2.GetByKeyAndRow(System.Guid)
  isExternal: true
  name: GetByKeyAndRow(Guid)
  nameWithType: TableStorageStore<TData, TCollectionItemData>.GetByKeyAndRow(Guid)
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<TData, TCollectionItemData>.GetByKeyAndRow(System.Guid)
  nameWithType.vb: TableStorageStore(Of TData, TCollectionItemData).GetByKeyAndRow(Guid)
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of TData, TCollectionItemData).GetByKeyAndRow(System.Guid)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.GetByKeyAndRow(System.Guid)
    name: GetByKeyAndRow
    nameWithType: TableStorageStore<TData, TCollectionItemData>.GetByKeyAndRow
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore<TData, TCollectionItemData>.GetByKeyAndRow
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.GetByKeyAndRow(System.Guid)
    name: GetByKeyAndRow
    nameWithType: TableStorageStore(Of TData, TCollectionItemData).GetByKeyAndRow
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore(Of TData, TCollectionItemData).GetByKeyAndRow
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.GetByKey
  commentId: M:Cqrs.Azure.BlobStorage.TableStorageStore`2.GetByKey
  isExternal: false
  name: GetByKey()
  nameWithType: TableStorageStore<TData, TCollectionItemData>.GetByKey()
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<TData, TCollectionItemData>.GetByKey()
  nameWithType.vb: TableStorageStore(Of TData, TCollectionItemData).GetByKey()
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of TData, TCollectionItemData).GetByKey()
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.GetByKey
    name: GetByKey
    nameWithType: TableStorageStore<TData, TCollectionItemData>.GetByKey
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore<TData, TCollectionItemData>.GetByKey
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.GetByKey
    name: GetByKey
    nameWithType: TableStorageStore(Of TData, TCollectionItemData).GetByKey
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore(Of TData, TCollectionItemData).GetByKey
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.ReplaceValues(Microsoft.WindowsAzure.Storage.Table.TableResult,`0)
  commentId: M:Cqrs.Azure.BlobStorage.TableStorageStore`2.ReplaceValues(Microsoft.WindowsAzure.Storage.Table.TableResult,`0)
  isExternal: true
  name: ReplaceValues(TableResult, TData)
  nameWithType: TableStorageStore<TData, TCollectionItemData>.ReplaceValues(TableResult, TData)
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<TData, TCollectionItemData>.ReplaceValues(Microsoft.WindowsAzure.Storage.Table.TableResult, TData)
  nameWithType.vb: TableStorageStore(Of TData, TCollectionItemData).ReplaceValues(TableResult, TData)
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of TData, TCollectionItemData).ReplaceValues(Microsoft.WindowsAzure.Storage.Table.TableResult, TData)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.ReplaceValues(Microsoft.WindowsAzure.Storage.Table.TableResult,`0)
    name: ReplaceValues
    nameWithType: TableStorageStore<TData, TCollectionItemData>.ReplaceValues
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore<TData, TCollectionItemData>.ReplaceValues
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.Table.TableResult
    name: TableResult
    nameWithType: TableResult
    fullName: Microsoft.WindowsAzure.Storage.Table.TableResult
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.ReplaceValues(Microsoft.WindowsAzure.Storage.Table.TableResult,`0)
    name: ReplaceValues
    nameWithType: TableStorageStore(Of TData, TCollectionItemData).ReplaceValues
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore(Of TData, TCollectionItemData).ReplaceValues
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.Table.TableResult
    name: TableResult
    nameWithType: TableResult
    fullName: Microsoft.WindowsAzure.Storage.Table.TableResult
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.GetSafeSourceName(System.String)
  commentId: M:Cqrs.Azure.BlobStorage.TableStorageStore`2.GetSafeSourceName(System.String)
  isExternal: true
  name: GetSafeSourceName(String)
  nameWithType: TableStorageStore<TData, TCollectionItemData>.GetSafeSourceName(String)
  fullName: Cqrs.Azure.BlobStorage.TableStorageStore<TData, TCollectionItemData>.GetSafeSourceName(System.String)
  nameWithType.vb: TableStorageStore(Of TData, TCollectionItemData).GetSafeSourceName(String)
  fullName.vb: Cqrs.Azure.BlobStorage.TableStorageStore(Of TData, TCollectionItemData).GetSafeSourceName(System.String)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.GetSafeSourceName(System.String)
    name: GetSafeSourceName
    nameWithType: TableStorageStore<TData, TCollectionItemData>.GetSafeSourceName
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore<TData, TCollectionItemData>.GetSafeSourceName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.TableStorageStore`2.GetSafeSourceName(System.String)
    name: GetSafeSourceName
    nameWithType: TableStorageStore(Of TData, TCollectionItemData).GetSafeSourceName
    fullName: Cqrs.Azure.BlobStorage.TableStorageStore(Of TData, TCollectionItemData).GetSafeSourceName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.WritableCollection
  commentId: P:Cqrs.Azure.BlobStorage.StorageStore`2.WritableCollection
  isExternal: false
  name: WritableCollection
  nameWithType: StorageStore<TData, TSource>.WritableCollection
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.WritableCollection
  nameWithType.vb: StorageStore(Of TData, TSource).WritableCollection
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).WritableCollection
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.ReadableStorageAccount
  commentId: P:Cqrs.Azure.BlobStorage.StorageStore`2.ReadableStorageAccount
  isExternal: false
  name: ReadableStorageAccount
  nameWithType: StorageStore<TData, TSource>.ReadableStorageAccount
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.ReadableStorageAccount
  nameWithType.vb: StorageStore(Of TData, TSource).ReadableStorageAccount
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).ReadableStorageAccount
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.Logger
  commentId: P:Cqrs.Azure.BlobStorage.StorageStore`2.Logger
  isExternal: false
  name: Logger
  nameWithType: StorageStore<TData, TSource>.Logger
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.Logger
  nameWithType.vb: StorageStore(Of TData, TSource).Logger
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).Logger
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetContainerName
  commentId: P:Cqrs.Azure.BlobStorage.StorageStore`2.GetContainerName
  isExternal: false
  name: GetContainerName
  nameWithType: StorageStore<TData, TSource>.GetContainerName
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.GetContainerName
  nameWithType.vb: StorageStore(Of TData, TSource).GetContainerName
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).GetContainerName
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.IsContainerPublic
  commentId: P:Cqrs.Azure.BlobStorage.StorageStore`2.IsContainerPublic
  isExternal: false
  name: IsContainerPublic
  nameWithType: StorageStore<TData, TSource>.IsContainerPublic
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.IsContainerPublic
  nameWithType.vb: StorageStore(Of TData, TSource).IsContainerPublic
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).IsContainerPublic
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.DefaultSettings
  commentId: P:Cqrs.Azure.BlobStorage.StorageStore`2.DefaultSettings
  isExternal: false
  name: DefaultSettings
  nameWithType: StorageStore<TData, TSource>.DefaultSettings
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.DefaultSettings
  nameWithType.vb: StorageStore(Of TData, TSource).DefaultSettings
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).DefaultSettings
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.Initialise(Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory)
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore`2.Initialise(Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory)
  isExternal: false
  name: Initialise(IStorageStoreConnectionStringFactory)
  nameWithType: StorageStore<TData, TSource>.Initialise(IStorageStoreConnectionStringFactory)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.Initialise(Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory)
  nameWithType.vb: StorageStore(Of TData, TSource).Initialise(IStorageStoreConnectionStringFactory)
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).Initialise(Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Initialise(Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory)
    name: Initialise
    nameWithType: StorageStore<TData, TSource>.Initialise
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.Initialise
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory
    name: IStorageStoreConnectionStringFactory
    nameWithType: IStorageStoreConnectionStringFactory
    fullName: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Initialise(Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory)
    name: Initialise
    nameWithType: StorageStore(Of TData, TSource).Initialise
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).Initialise
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory
    name: IStorageStoreConnectionStringFactory
    nameWithType: IStorageStoreConnectionStringFactory
    fullName: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetEnumerator
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore`2.GetEnumerator
  isExternal: false
  name: GetEnumerator()
  nameWithType: StorageStore<TData, TSource>.GetEnumerator()
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.GetEnumerator()
  nameWithType.vb: StorageStore(Of TData, TSource).GetEnumerator()
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).GetEnumerator()
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetEnumerator
    name: GetEnumerator
    nameWithType: StorageStore<TData, TSource>.GetEnumerator
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetEnumerator
    name: GetEnumerator
    nameWithType: StorageStore(Of TData, TSource).GetEnumerator
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.System#Collections#IEnumerable#GetEnumerator
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore`2.System#Collections#IEnumerable#GetEnumerator
  isExternal: false
  name: IEnumerable.GetEnumerator()
  nameWithType: StorageStore<TData, TSource>.IEnumerable.GetEnumerator()
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.System.Collections.IEnumerable.GetEnumerator()
  nameWithType.vb: StorageStore(Of TData, TSource).System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.System#Collections#IEnumerable#GetEnumerator
    name: IEnumerable.GetEnumerator
    nameWithType: StorageStore<TData, TSource>.IEnumerable.GetEnumerator
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.System.Collections.IEnumerable.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.System#Collections#IEnumerable#GetEnumerator
    name: System.Collections.IEnumerable.GetEnumerator
    nameWithType: StorageStore(Of TData, TSource).System.Collections.IEnumerable.GetEnumerator
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).System.Collections.IEnumerable.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.Expression
  commentId: P:Cqrs.Azure.BlobStorage.StorageStore`2.Expression
  isExternal: false
  name: Expression
  nameWithType: StorageStore<TData, TSource>.Expression
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.Expression
  nameWithType.vb: StorageStore(Of TData, TSource).Expression
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).Expression
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.ElementType
  commentId: P:Cqrs.Azure.BlobStorage.StorageStore`2.ElementType
  isExternal: false
  name: ElementType
  nameWithType: StorageStore<TData, TSource>.ElementType
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.ElementType
  nameWithType.vb: StorageStore(Of TData, TSource).ElementType
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).ElementType
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.Provider
  commentId: P:Cqrs.Azure.BlobStorage.StorageStore`2.Provider
  isExternal: false
  name: Provider
  nameWithType: StorageStore<TData, TSource>.Provider
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.Provider
  nameWithType.vb: StorageStore(Of TData, TSource).Provider
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).Provider
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.Dispose
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore`2.Dispose
  isExternal: false
  name: Dispose()
  nameWithType: StorageStore<TData, TSource>.Dispose()
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.Dispose()
  nameWithType.vb: StorageStore(Of TData, TSource).Dispose()
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).Dispose()
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Dispose
    name: Dispose
    nameWithType: StorageStore<TData, TSource>.Dispose
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Dispose
    name: Dispose
    nameWithType: StorageStore(Of TData, TSource).Dispose
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.Add(`0)
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore`2.Add(`0)
  isExternal: false
  name: Add(TData)
  nameWithType: StorageStore<TData, TSource>.Add(TData)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.Add(TData)
  nameWithType.vb: StorageStore(Of TData, TSource).Add(TData)
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).Add(TData)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Add(`0)
    name: Add
    nameWithType: StorageStore<TData, TSource>.Add
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.Add
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Add(`0)
    name: Add
    nameWithType: StorageStore(Of TData, TSource).Add
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).Add
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.Add(System.Collections.Generic.IEnumerable{`0})
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore`2.Add(System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  name: Add(IEnumerable<TData>)
  nameWithType: StorageStore<TData, TSource>.Add(IEnumerable<TData>)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.Add(System.Collections.Generic.IEnumerable<TData>)
  nameWithType.vb: StorageStore(Of TData, TSource).Add(IEnumerable(Of TData))
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).Add(System.Collections.Generic.IEnumerable(Of TData))
  name.vb: Add(IEnumerable(Of TData))
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Add(System.Collections.Generic.IEnumerable{`0})
    name: Add
    nameWithType: StorageStore<TData, TSource>.Add
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Add(System.Collections.Generic.IEnumerable{`0})
    name: Add
    nameWithType: StorageStore(Of TData, TSource).Add
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.Destroy(`0)
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore`2.Destroy(`0)
  isExternal: false
  name: Destroy(TData)
  nameWithType: StorageStore<TData, TSource>.Destroy(TData)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.Destroy(TData)
  nameWithType.vb: StorageStore(Of TData, TSource).Destroy(TData)
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).Destroy(TData)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Destroy(`0)
    name: Destroy
    nameWithType: StorageStore<TData, TSource>.Destroy
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.Destroy
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Destroy(`0)
    name: Destroy
    nameWithType: StorageStore(Of TData, TSource).Destroy
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).Destroy
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.RemoveAll
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore`2.RemoveAll
  isExternal: false
  name: RemoveAll()
  nameWithType: StorageStore<TData, TSource>.RemoveAll()
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.RemoveAll()
  nameWithType.vb: StorageStore(Of TData, TSource).RemoveAll()
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).RemoveAll()
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.RemoveAll
    name: RemoveAll
    nameWithType: StorageStore<TData, TSource>.RemoveAll
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.RemoveAll
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.RemoveAll
    name: RemoveAll
    nameWithType: StorageStore(Of TData, TSource).RemoveAll
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).RemoveAll
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.Update(`0)
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore`2.Update(`0)
  isExternal: false
  name: Update(TData)
  nameWithType: StorageStore<TData, TSource>.Update(TData)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.Update(TData)
  nameWithType.vb: StorageStore(Of TData, TSource).Update(TData)
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).Update(TData)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Update(`0)
    name: Update
    nameWithType: StorageStore<TData, TSource>.Update
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.Update
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Update(`0)
    name: Update
    nameWithType: StorageStore(Of TData, TSource).Update
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).Update
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String,System.Boolean)
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore`2.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String,System.Boolean)
  isExternal: true
  name: CreateSource(CloudStorageAccount, String, Boolean)
  nameWithType: StorageStore<TData, TSource>.CreateSource(CloudStorageAccount, String, Boolean)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount, System.String, System.Boolean)
  nameWithType.vb: StorageStore(Of TData, TSource).CreateSource(CloudStorageAccount, String, Boolean)
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount, System.String, System.Boolean)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String,System.Boolean)
    name: CreateSource
    nameWithType: StorageStore<TData, TSource>.CreateSource
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.CreateSource
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.CloudStorageAccount
    name: CloudStorageAccount
    nameWithType: CloudStorageAccount
    fullName: Microsoft.WindowsAzure.Storage.CloudStorageAccount
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String,System.Boolean)
    name: CreateSource
    nameWithType: StorageStore(Of TData, TSource).CreateSource
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).CreateSource
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.CloudStorageAccount
    name: CloudStorageAccount
    nameWithType: CloudStorageAccount
    fullName: Microsoft.WindowsAzure.Storage.CloudStorageAccount
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetSafeSourceName(System.String)
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore`2.GetSafeSourceName(System.String)
  isExternal: true
  name: GetSafeSourceName(String)
  nameWithType: StorageStore<TData, TSource>.GetSafeSourceName(String)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.GetSafeSourceName(System.String)
  nameWithType.vb: StorageStore(Of TData, TSource).GetSafeSourceName(String)
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).GetSafeSourceName(System.String)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetSafeSourceName(System.String)
    name: GetSafeSourceName
    nameWithType: StorageStore<TData, TSource>.GetSafeSourceName
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.GetSafeSourceName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetSafeSourceName(System.String)
    name: GetSafeSourceName
    nameWithType: StorageStore(Of TData, TSource).GetSafeSourceName
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).GetSafeSourceName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetSafeSourceName(System.String,System.Boolean)
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore`2.GetSafeSourceName(System.String,System.Boolean)
  isExternal: true
  name: GetSafeSourceName(String, Boolean)
  nameWithType: StorageStore<TData, TSource>.GetSafeSourceName(String, Boolean)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.GetSafeSourceName(System.String, System.Boolean)
  nameWithType.vb: StorageStore(Of TData, TSource).GetSafeSourceName(String, Boolean)
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).GetSafeSourceName(System.String, System.Boolean)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetSafeSourceName(System.String,System.Boolean)
    name: GetSafeSourceName
    nameWithType: StorageStore<TData, TSource>.GetSafeSourceName
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.GetSafeSourceName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetSafeSourceName(System.String,System.Boolean)
    name: GetSafeSourceName
    nameWithType: StorageStore(Of TData, TSource).GetSafeSourceName
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).GetSafeSourceName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.AzureStorageRetryPolicy
  commentId: P:Cqrs.Azure.BlobStorage.StorageStore`2.AzureStorageRetryPolicy
  isExternal: false
  name: AzureStorageRetryPolicy
  nameWithType: StorageStore<TData, TSource>.AzureStorageRetryPolicy
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.AzureStorageRetryPolicy
  nameWithType.vb: StorageStore(Of TData, TSource).AzureStorageRetryPolicy
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).AzureStorageRetryPolicy
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.Deserialise(System.IO.Stream)
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore`2.Deserialise(System.IO.Stream)
  isExternal: true
  name: Deserialise(Stream)
  nameWithType: StorageStore<TData, TSource>.Deserialise(Stream)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.Deserialise(System.IO.Stream)
  nameWithType.vb: StorageStore(Of TData, TSource).Deserialise(Stream)
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).Deserialise(System.IO.Stream)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Deserialise(System.IO.Stream)
    name: Deserialise
    nameWithType: StorageStore<TData, TSource>.Deserialise
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.Deserialise
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Deserialise(System.IO.Stream)
    name: Deserialise
    nameWithType: StorageStore(Of TData, TSource).Deserialise
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).Deserialise
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.Deserialise(System.String)
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore`2.Deserialise(System.String)
  isExternal: true
  name: Deserialise(String)
  nameWithType: StorageStore<TData, TSource>.Deserialise(String)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.Deserialise(System.String)
  nameWithType.vb: StorageStore(Of TData, TSource).Deserialise(String)
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).Deserialise(System.String)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Deserialise(System.String)
    name: Deserialise
    nameWithType: StorageStore<TData, TSource>.Deserialise
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.Deserialise
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Deserialise(System.String)
    name: Deserialise
    nameWithType: StorageStore(Of TData, TSource).Deserialise
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).Deserialise
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.Serialise(`0)
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore`2.Serialise(`0)
  isExternal: false
  name: Serialise(TData)
  nameWithType: StorageStore<TData, TSource>.Serialise(TData)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.Serialise(TData)
  nameWithType.vb: StorageStore(Of TData, TSource).Serialise(TData)
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).Serialise(TData)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Serialise(`0)
    name: Serialise
    nameWithType: StorageStore<TData, TSource>.Serialise
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.Serialise
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Serialise(`0)
    name: Serialise
    nameWithType: StorageStore(Of TData, TSource).Serialise
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).Serialise
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetSerialisationSettings
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore`2.GetSerialisationSettings
  isExternal: false
  name: GetSerialisationSettings()
  nameWithType: StorageStore<TData, TSource>.GetSerialisationSettings()
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.GetSerialisationSettings()
  nameWithType.vb: StorageStore(Of TData, TSource).GetSerialisationSettings()
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).GetSerialisationSettings()
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetSerialisationSettings
    name: GetSerialisationSettings
    nameWithType: StorageStore<TData, TSource>.GetSerialisationSettings
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.GetSerialisationSettings
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetSerialisationSettings
    name: GetSerialisationSettings
    nameWithType: StorageStore(Of TData, TSource).GetSerialisationSettings
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).GetSerialisationSettings
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetSerialiser
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore`2.GetSerialiser
  isExternal: false
  name: GetSerialiser()
  nameWithType: StorageStore<TData, TSource>.GetSerialiser()
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.GetSerialiser()
  nameWithType.vb: StorageStore(Of TData, TSource).GetSerialiser()
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).GetSerialiser()
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetSerialiser
    name: GetSerialiser
    nameWithType: StorageStore<TData, TSource>.GetSerialiser
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.GetSerialiser
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetSerialiser
    name: GetSerialiser
    nameWithType: StorageStore(Of TData, TSource).GetSerialiser
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).GetSerialiser
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByName``1(Cqrs.DataStores.IDataStore{``0},System.String)
  commentId: M:Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByName``1(Cqrs.DataStores.IDataStore{``0},System.String)
  isExternal: true
  name: GetByName<TData>(IDataStore<TData>, String)
  nameWithType: BlobStorageStoreExtensions.GetByName<TData>(IDataStore<TData>, String)
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByName<TData>(Cqrs.DataStores.IDataStore<TData>, System.String)
  nameWithType.vb: BlobStorageStoreExtensions.GetByName(Of TData)(IDataStore(Of TData), String)
  fullName.vb: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByName(Of TData)(Cqrs.DataStores.IDataStore(Of TData), System.String)
  name.vb: GetByName(Of TData)(IDataStore(Of TData), String)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByName``1(Cqrs.DataStores.IDataStore{``0},System.String)
    name: GetByName<TData>
    nameWithType: BlobStorageStoreExtensions.GetByName<TData>
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByName<TData>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.DataStores.IDataStore`1
    name: IDataStore
    nameWithType: IDataStore
    fullName: Cqrs.DataStores.IDataStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByName``1(Cqrs.DataStores.IDataStore{``0},System.String)
    name: GetByName(Of TData)
    nameWithType: BlobStorageStoreExtensions.GetByName(Of TData)
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByName(Of TData)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.DataStores.IDataStore`1
    name: IDataStore
    nameWithType: IDataStore
    fullName: Cqrs.DataStores.IDataStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions
  commentId: T:Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions
  parent: Cqrs.Azure.BlobStorage
  isExternal: false
  name: BlobStorageStoreExtensions
  nameWithType: BlobStorageStoreExtensions
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions
- uid: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByFolder``1(Cqrs.DataStores.IDataStore{``0},System.String)
  commentId: M:Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByFolder``1(Cqrs.DataStores.IDataStore{``0},System.String)
  isExternal: true
  name: GetByFolder<TData>(IDataStore<TData>, String)
  nameWithType: BlobStorageStoreExtensions.GetByFolder<TData>(IDataStore<TData>, String)
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByFolder<TData>(Cqrs.DataStores.IDataStore<TData>, System.String)
  nameWithType.vb: BlobStorageStoreExtensions.GetByFolder(Of TData)(IDataStore(Of TData), String)
  fullName.vb: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByFolder(Of TData)(Cqrs.DataStores.IDataStore(Of TData), System.String)
  name.vb: GetByFolder(Of TData)(IDataStore(Of TData), String)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByFolder``1(Cqrs.DataStores.IDataStore{``0},System.String)
    name: GetByFolder<TData>
    nameWithType: BlobStorageStoreExtensions.GetByFolder<TData>
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByFolder<TData>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.DataStores.IDataStore`1
    name: IDataStore
    nameWithType: IDataStore
    fullName: Cqrs.DataStores.IDataStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByFolder``1(Cqrs.DataStores.IDataStore{``0},System.String)
    name: GetByFolder(Of TData)
    nameWithType: BlobStorageStoreExtensions.GetByFolder(Of TData)
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStoreExtensions.GetByFolder(Of TData)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.DataStores.IDataStore`1
    name: IDataStore
    nameWithType: IDataStore
    fullName: Cqrs.DataStores.IDataStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.Storage.Events.TableStorageEventStore`1.RawTableStorageEventStore
  commentId: T:Cqrs.Azure.Storage.Events.TableStorageEventStore`1.RawTableStorageEventStore
  isExternal: false
  name: TableStorageEventStore.RawTableStorageEventStore<>
  nameWithType: TableStorageEventStore.RawTableStorageEventStore<>
  fullName: Cqrs.Azure.Storage.Events.TableStorageEventStore.RawTableStorageEventStore<>
  nameWithType.vb: TableStorageEventStore.RawTableStorageEventStore(Of )
  fullName.vb: Cqrs.Azure.Storage.Events.TableStorageEventStore.RawTableStorageEventStore(Of )
  name.vb: TableStorageEventStore.RawTableStorageEventStore(Of )
  spec.csharp:
  - uid: Cqrs.Azure.Storage.Events.TableStorageEventStore`1.RawTableStorageEventStore
    name: TableStorageEventStore.RawTableStorageEventStore
    nameWithType: TableStorageEventStore.RawTableStorageEventStore
    fullName: Cqrs.Azure.Storage.Events.TableStorageEventStore.RawTableStorageEventStore
  - name: <
    nameWithType: <
    fullName: <
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Azure.Storage.Events.TableStorageEventStore`1.RawTableStorageEventStore
    name: TableStorageEventStore.RawTableStorageEventStore
    nameWithType: TableStorageEventStore.RawTableStorageEventStore
    fullName: Cqrs.Azure.Storage.Events.TableStorageEventStore.RawTableStorageEventStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.Storage.Events.TableStorageEventStore`1.RawTableStorageEventStore.#ctor*
  commentId: Overload:Cqrs.Azure.Storage.Events.TableStorageEventStore`1.RawTableStorageEventStore.#ctor
  isExternal: false
  name: RawTableStorageEventStore
  nameWithType: TableStorageEventStore<TAuthenticationToken>.RawTableStorageEventStore.RawTableStorageEventStore
  fullName: Cqrs.Azure.Storage.Events.TableStorageEventStore<TAuthenticationToken>.RawTableStorageEventStore.RawTableStorageEventStore
  nameWithType.vb: TableStorageEventStore(Of TAuthenticationToken).RawTableStorageEventStore.RawTableStorageEventStore
  fullName.vb: Cqrs.Azure.Storage.Events.TableStorageEventStore(Of TAuthenticationToken).RawTableStorageEventStore.RawTableStorageEventStore
- uid: cdmdotnet.Logging.ILogger
  commentId: T:cdmdotnet.Logging.ILogger
  parent: cdmdotnet.Logging
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: cdmdotnet.Logging.ILogger
- uid: Cqrs.Azure.BlobStorage.ITableStorageStoreConnectionStringFactory
  commentId: T:Cqrs.Azure.BlobStorage.ITableStorageStoreConnectionStringFactory
  parent: Cqrs.Azure.BlobStorage
  isExternal: false
  name: ITableStorageStoreConnectionStringFactory
  nameWithType: ITableStorageStoreConnectionStringFactory
  fullName: Cqrs.Azure.BlobStorage.ITableStorageStoreConnectionStringFactory
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: cdmdotnet.Logging
  commentId: N:cdmdotnet.Logging
  isExternal: false
  name: cdmdotnet.Logging
  nameWithType: cdmdotnet.Logging
  fullName: cdmdotnet.Logging
- uid: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore{{TAuthenticationToken}}.RawTableStorageEventStore.GetSafeSourceName(System.String)
  commentId: M:Cqrs.Azure.BlobStorage.Events.TableStorageEventStore{`0}.RawTableStorageEventStore.GetSafeSourceName(System.String)
  parent: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore{{TAuthenticationToken}}.RawTableStorageEventStore
  definition: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore`1.RawTableStorageEventStore.GetSafeSourceName(System.String)
  name: GetSafeSourceName(String)
  nameWithType: TableStorageEventStore<TAuthenticationToken>.RawTableStorageEventStore.GetSafeSourceName(String)
  fullName: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore<TAuthenticationToken>.RawTableStorageEventStore.GetSafeSourceName(System.String)
  nameWithType.vb: TableStorageEventStore(Of TAuthenticationToken).RawTableStorageEventStore.GetSafeSourceName(String)
  fullName.vb: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore(Of TAuthenticationToken).RawTableStorageEventStore.GetSafeSourceName(System.String)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore`1.RawTableStorageEventStore.GetSafeSourceName(System.String)
    name: GetSafeSourceName
    nameWithType: TableStorageEventStore<TAuthenticationToken>.RawTableStorageEventStore.GetSafeSourceName
    fullName: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore<TAuthenticationToken>.RawTableStorageEventStore.GetSafeSourceName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore`1.RawTableStorageEventStore.GetSafeSourceName(System.String)
    name: GetSafeSourceName
    nameWithType: TableStorageEventStore(Of TAuthenticationToken).RawTableStorageEventStore.GetSafeSourceName
    fullName: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore(Of TAuthenticationToken).RawTableStorageEventStore.GetSafeSourceName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.Storage.Events.TableStorageEventStore`1.RawTableStorageEventStore.GetSafeSourceName*
  commentId: Overload:Cqrs.Azure.Storage.Events.TableStorageEventStore`1.RawTableStorageEventStore.GetSafeSourceName
  isExternal: false
  name: GetSafeSourceName
  nameWithType: TableStorageEventStore<TAuthenticationToken>.RawTableStorageEventStore.GetSafeSourceName
  fullName: Cqrs.Azure.Storage.Events.TableStorageEventStore<TAuthenticationToken>.RawTableStorageEventStore.GetSafeSourceName
  nameWithType.vb: TableStorageEventStore(Of TAuthenticationToken).RawTableStorageEventStore.GetSafeSourceName
  fullName.vb: Cqrs.Azure.Storage.Events.TableStorageEventStore(Of TAuthenticationToken).RawTableStorageEventStore.GetSafeSourceName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore`1.RawTableStorageEventStore.GetSafeSourceName(System.String)
  commentId: M:Cqrs.Azure.BlobStorage.Events.TableStorageEventStore`1.RawTableStorageEventStore.GetSafeSourceName(System.String)
  isExternal: true
  name: GetSafeSourceName(String)
  nameWithType: TableStorageEventStore<TAuthenticationToken>.RawTableStorageEventStore.GetSafeSourceName(String)
  fullName: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore<TAuthenticationToken>.RawTableStorageEventStore.GetSafeSourceName(System.String)
  nameWithType.vb: TableStorageEventStore(Of TAuthenticationToken).RawTableStorageEventStore.GetSafeSourceName(String)
  fullName.vb: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore(Of TAuthenticationToken).RawTableStorageEventStore.GetSafeSourceName(System.String)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore`1.RawTableStorageEventStore.GetSafeSourceName(System.String)
    name: GetSafeSourceName
    nameWithType: TableStorageEventStore<TAuthenticationToken>.RawTableStorageEventStore.GetSafeSourceName
    fullName: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore<TAuthenticationToken>.RawTableStorageEventStore.GetSafeSourceName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore`1.RawTableStorageEventStore.GetSafeSourceName(System.String)
    name: GetSafeSourceName
    nameWithType: TableStorageEventStore(Of TAuthenticationToken).RawTableStorageEventStore.GetSafeSourceName
    fullName: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore(Of TAuthenticationToken).RawTableStorageEventStore.GetSafeSourceName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore{{TAuthenticationToken}}.RawTableStorageEventStore.CreateTableEntity(Cqrs.Events.EventData)
  commentId: M:Cqrs.Azure.BlobStorage.Events.TableStorageEventStore{`0}.RawTableStorageEventStore.CreateTableEntity(Cqrs.Events.EventData)
  parent: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore{{TAuthenticationToken}}.RawTableStorageEventStore
  definition: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore`1.RawTableStorageEventStore.CreateTableEntity(Cqrs.Events.EventData)
  name: CreateTableEntity(EventData)
  nameWithType: TableStorageEventStore<TAuthenticationToken>.RawTableStorageEventStore.CreateTableEntity(EventData)
  fullName: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore<TAuthenticationToken>.RawTableStorageEventStore.CreateTableEntity(Cqrs.Events.EventData)
  nameWithType.vb: TableStorageEventStore(Of TAuthenticationToken).RawTableStorageEventStore.CreateTableEntity(EventData)
  fullName.vb: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore(Of TAuthenticationToken).RawTableStorageEventStore.CreateTableEntity(Cqrs.Events.EventData)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore`1.RawTableStorageEventStore.CreateTableEntity(Cqrs.Events.EventData)
    name: CreateTableEntity
    nameWithType: TableStorageEventStore<TAuthenticationToken>.RawTableStorageEventStore.CreateTableEntity
    fullName: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore<TAuthenticationToken>.RawTableStorageEventStore.CreateTableEntity
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Events.EventData
    name: EventData
    nameWithType: EventData
    fullName: Cqrs.Events.EventData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore`1.RawTableStorageEventStore.CreateTableEntity(Cqrs.Events.EventData)
    name: CreateTableEntity
    nameWithType: TableStorageEventStore(Of TAuthenticationToken).RawTableStorageEventStore.CreateTableEntity
    fullName: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore(Of TAuthenticationToken).RawTableStorageEventStore.CreateTableEntity
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Events.EventData
    name: EventData
    nameWithType: EventData
    fullName: Cqrs.Events.EventData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.Storage.Events.TableStorageEventStore`1.RawTableStorageEventStore.CreateTableEntity*
  commentId: Overload:Cqrs.Azure.Storage.Events.TableStorageEventStore`1.RawTableStorageEventStore.CreateTableEntity
  isExternal: false
  name: CreateTableEntity
  nameWithType: TableStorageEventStore<TAuthenticationToken>.RawTableStorageEventStore.CreateTableEntity
  fullName: Cqrs.Azure.Storage.Events.TableStorageEventStore<TAuthenticationToken>.RawTableStorageEventStore.CreateTableEntity
  nameWithType.vb: TableStorageEventStore(Of TAuthenticationToken).RawTableStorageEventStore.CreateTableEntity
  fullName.vb: Cqrs.Azure.Storage.Events.TableStorageEventStore(Of TAuthenticationToken).RawTableStorageEventStore.CreateTableEntity
- uid: Cqrs.Events.EventData
  commentId: T:Cqrs.Events.EventData
  parent: Cqrs.Events
  isExternal: false
  name: EventData
  nameWithType: EventData
  fullName: Cqrs.Events.EventData
- uid: Microsoft.WindowsAzure.Storage.Table.ITableEntity
  commentId: T:Microsoft.WindowsAzure.Storage.Table.ITableEntity
  parent: Microsoft.WindowsAzure.Storage.Table
  isExternal: true
  name: ITableEntity
  nameWithType: ITableEntity
  fullName: Microsoft.WindowsAzure.Storage.Table.ITableEntity
- uid: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore`1.RawTableStorageEventStore.CreateTableEntity(Cqrs.Events.EventData)
  commentId: M:Cqrs.Azure.BlobStorage.Events.TableStorageEventStore`1.RawTableStorageEventStore.CreateTableEntity(Cqrs.Events.EventData)
  isExternal: false
  name: CreateTableEntity(EventData)
  nameWithType: TableStorageEventStore<TAuthenticationToken>.RawTableStorageEventStore.CreateTableEntity(EventData)
  fullName: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore<TAuthenticationToken>.RawTableStorageEventStore.CreateTableEntity(Cqrs.Events.EventData)
  nameWithType.vb: TableStorageEventStore(Of TAuthenticationToken).RawTableStorageEventStore.CreateTableEntity(EventData)
  fullName.vb: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore(Of TAuthenticationToken).RawTableStorageEventStore.CreateTableEntity(Cqrs.Events.EventData)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore`1.RawTableStorageEventStore.CreateTableEntity(Cqrs.Events.EventData)
    name: CreateTableEntity
    nameWithType: TableStorageEventStore<TAuthenticationToken>.RawTableStorageEventStore.CreateTableEntity
    fullName: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore<TAuthenticationToken>.RawTableStorageEventStore.CreateTableEntity
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Events.EventData
    name: EventData
    nameWithType: EventData
    fullName: Cqrs.Events.EventData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore`1.RawTableStorageEventStore.CreateTableEntity(Cqrs.Events.EventData)
    name: CreateTableEntity
    nameWithType: TableStorageEventStore(Of TAuthenticationToken).RawTableStorageEventStore.CreateTableEntity
    fullName: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore(Of TAuthenticationToken).RawTableStorageEventStore.CreateTableEntity
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Events.EventData
    name: EventData
    nameWithType: EventData
    fullName: Cqrs.Events.EventData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Events
  commentId: N:Cqrs.Events
  isExternal: false
  name: Cqrs.Events
  nameWithType: Cqrs.Events
  fullName: Cqrs.Events
- uid: Microsoft.WindowsAzure.Storage.Table
  commentId: N:Microsoft.WindowsAzure.Storage.Table
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.Table
  nameWithType: Microsoft.WindowsAzure.Storage.Table
  fullName: Microsoft.WindowsAzure.Storage.Table
