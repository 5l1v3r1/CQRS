### YamlMime:ManagedReference
items:
- uid: Cqrs.Ninject.Configuration.InProcessEventBusModule`1
  commentId: T:Cqrs.Ninject.Configuration.InProcessEventBusModule`1
  id: InProcessEventBusModule`1
  parent: Cqrs.Ninject.Configuration
  children:
  - Cqrs.Ninject.Configuration.InProcessEventBusModule`1.Load
  - Cqrs.Ninject.Configuration.InProcessEventBusModule`1.RegisterCqrsRequirements
  - Cqrs.Ninject.Configuration.InProcessEventBusModule`1.RegisterFactories
  - Cqrs.Ninject.Configuration.InProcessEventBusModule`1.RegisterServices
  langs:
  - csharp
  - vb
  name: InProcessEventBusModule<TAuthenticationToken>
  nameWithType: InProcessEventBusModule<TAuthenticationToken>
  fullName: Cqrs.Ninject.Configuration.InProcessEventBusModule<TAuthenticationToken>
  type: Class
  source:
    remote:
      path: Framework/Ninject/Cqrs.Ninject/Configuration/InProcessEventBusModule.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: InProcessEventBusModule
    path: Framework/Ninject/Cqrs.Ninject/Configuration/InProcessEventBusModule.cs
    startLine: 21
  assemblies:
  - Cqrs.Ninject
  namespace: Cqrs.Ninject.Configuration
  summary: "\nA <see cref=\"!:INinjectModule\"></see> that configures the <xref href=\"Cqrs.Bus.InProcessBus%601\" data-throw-if-not-resolved=\"false\"></xref> as a <xref href=\"Cqrs.Events.IEventPublisher%601\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"Cqrs.Events.IEventReceiver\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: 'public class InProcessEventBusModule<TAuthenticationToken> : ResolvableModule'
    typeParameters:
    - id: TAuthenticationToken
      description: The <see cref="!:Type"></see> of the authentication token.
    content.vb: >-
      Public Class InProcessEventBusModule(Of TAuthenticationToken)

          Inherits ResolvableModule
  inheritance:
  - System.Object
  - Cqrs.Ninject.Configuration.ResolvableModule
  derivedClasses:
  - Cqrs.Ninject.InProcess.EventBus.Configuration.InProcessEventBusModule`1
  inheritedMembers:
  - Cqrs.Ninject.Configuration.ResolvableModule.Resolve``1
  - Cqrs.Ninject.Configuration.ResolvableModule.Resolve(Type)
  - Cqrs.Ninject.Configuration.ResolvableModule.IsRegistered``1
  - Cqrs.Ninject.Configuration.ResolvableModule.IsRegistered(Type)
  nameWithType.vb: InProcessEventBusModule(Of TAuthenticationToken)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Cqrs.Ninject.Configuration.InProcessEventBusModule(Of TAuthenticationToken)
  name.vb: InProcessEventBusModule(Of TAuthenticationToken)
- uid: Cqrs.Ninject.Configuration.InProcessEventBusModule`1.Load
  commentId: M:Cqrs.Ninject.Configuration.InProcessEventBusModule`1.Load
  id: Load
  parent: Cqrs.Ninject.Configuration.InProcessEventBusModule`1
  langs:
  - csharp
  - vb
  name: Load()
  nameWithType: InProcessEventBusModule<TAuthenticationToken>.Load()
  fullName: Cqrs.Ninject.Configuration.InProcessEventBusModule<TAuthenticationToken>.Load()
  type: Method
  source:
    remote:
      path: Framework/Ninject/Cqrs.Ninject/Configuration/InProcessEventBusModule.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Load
    path: Framework/Ninject/Cqrs.Ninject/Configuration/InProcessEventBusModule.cs
    startLine: 28
  assemblies:
  - Cqrs.Ninject
  namespace: Cqrs.Ninject.Configuration
  summary: "\nLoads the module into the kernel.\n"
  example: []
  syntax:
    content: public override void Load()
    content.vb: Public Overrides Sub Load
  overload: Cqrs.Ninject.Configuration.InProcessEventBusModule`1.Load*
  nameWithType.vb: InProcessEventBusModule(Of TAuthenticationToken).Load()
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Cqrs.Ninject.Configuration.InProcessEventBusModule(Of TAuthenticationToken).Load()
- uid: Cqrs.Ninject.Configuration.InProcessEventBusModule`1.RegisterFactories
  commentId: M:Cqrs.Ninject.Configuration.InProcessEventBusModule`1.RegisterFactories
  id: RegisterFactories
  parent: Cqrs.Ninject.Configuration.InProcessEventBusModule`1
  langs:
  - csharp
  - vb
  name: RegisterFactories()
  nameWithType: InProcessEventBusModule<TAuthenticationToken>.RegisterFactories()
  fullName: Cqrs.Ninject.Configuration.InProcessEventBusModule<TAuthenticationToken>.RegisterFactories()
  type: Method
  source:
    remote:
      path: Framework/Ninject/Cqrs.Ninject/Configuration/InProcessEventBusModule.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: RegisterFactories
    path: Framework/Ninject/Cqrs.Ninject/Configuration/InProcessEventBusModule.cs
    startLine: 40
  assemblies:
  - Cqrs.Ninject
  namespace: Cqrs.Ninject.Configuration
  summary: "\nRegister the all factories\n"
  example: []
  syntax:
    content: public virtual void RegisterFactories()
    content.vb: Public Overridable Sub RegisterFactories
  overload: Cqrs.Ninject.Configuration.InProcessEventBusModule`1.RegisterFactories*
  nameWithType.vb: InProcessEventBusModule(Of TAuthenticationToken).RegisterFactories()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Cqrs.Ninject.Configuration.InProcessEventBusModule(Of TAuthenticationToken).RegisterFactories()
- uid: Cqrs.Ninject.Configuration.InProcessEventBusModule`1.RegisterServices
  commentId: M:Cqrs.Ninject.Configuration.InProcessEventBusModule`1.RegisterServices
  id: RegisterServices
  parent: Cqrs.Ninject.Configuration.InProcessEventBusModule`1
  langs:
  - csharp
  - vb
  name: RegisterServices()
  nameWithType: InProcessEventBusModule<TAuthenticationToken>.RegisterServices()
  fullName: Cqrs.Ninject.Configuration.InProcessEventBusModule<TAuthenticationToken>.RegisterServices()
  type: Method
  source:
    remote:
      path: Framework/Ninject/Cqrs.Ninject/Configuration/InProcessEventBusModule.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: RegisterServices
    path: Framework/Ninject/Cqrs.Ninject/Configuration/InProcessEventBusModule.cs
    startLine: 47
  assemblies:
  - Cqrs.Ninject
  namespace: Cqrs.Ninject.Configuration
  summary: "\nRegister the all services\n"
  example: []
  syntax:
    content: public virtual void RegisterServices()
    content.vb: Public Overridable Sub RegisterServices
  overload: Cqrs.Ninject.Configuration.InProcessEventBusModule`1.RegisterServices*
  nameWithType.vb: InProcessEventBusModule(Of TAuthenticationToken).RegisterServices()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Cqrs.Ninject.Configuration.InProcessEventBusModule(Of TAuthenticationToken).RegisterServices()
- uid: Cqrs.Ninject.Configuration.InProcessEventBusModule`1.RegisterCqrsRequirements
  commentId: M:Cqrs.Ninject.Configuration.InProcessEventBusModule`1.RegisterCqrsRequirements
  id: RegisterCqrsRequirements
  parent: Cqrs.Ninject.Configuration.InProcessEventBusModule`1
  langs:
  - csharp
  - vb
  name: RegisterCqrsRequirements()
  nameWithType: InProcessEventBusModule<TAuthenticationToken>.RegisterCqrsRequirements()
  fullName: Cqrs.Ninject.Configuration.InProcessEventBusModule<TAuthenticationToken>.RegisterCqrsRequirements()
  type: Method
  source:
    remote:
      path: Framework/Ninject/Cqrs.Ninject/Configuration/InProcessEventBusModule.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: RegisterCqrsRequirements
    path: Framework/Ninject/Cqrs.Ninject/Configuration/InProcessEventBusModule.cs
    startLine: 54
  assemblies:
  - Cqrs.Ninject
  namespace: Cqrs.Ninject.Configuration
  summary: "\nRegister the <xref href=\"Cqrs.Events.IEventPublisher%601\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"Cqrs.Events.IEventReceiver%601\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"Cqrs.Bus.IEventHandlerRegistrar\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public virtual void RegisterCqrsRequirements()
    content.vb: Public Overridable Sub RegisterCqrsRequirements
  overload: Cqrs.Ninject.Configuration.InProcessEventBusModule`1.RegisterCqrsRequirements*
  nameWithType.vb: InProcessEventBusModule(Of TAuthenticationToken).RegisterCqrsRequirements()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Cqrs.Ninject.Configuration.InProcessEventBusModule(Of TAuthenticationToken).RegisterCqrsRequirements()
references:
- uid: Cqrs.Bus.InProcessBus`1
  commentId: T:Cqrs.Bus.InProcessBus`1
  isExternal: false
  name: InProcessBus<TAuthenticationToken>
  nameWithType: InProcessBus<TAuthenticationToken>
  fullName: Cqrs.Bus.InProcessBus<TAuthenticationToken>
  nameWithType.vb: InProcessBus(Of TAuthenticationToken)
  fullName.vb: Cqrs.Bus.InProcessBus(Of TAuthenticationToken)
  name.vb: InProcessBus(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Bus.InProcessBus`1
    name: InProcessBus
    nameWithType: InProcessBus
    fullName: Cqrs.Bus.InProcessBus
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Bus.InProcessBus`1
    name: InProcessBus
    nameWithType: InProcessBus
    fullName: Cqrs.Bus.InProcessBus
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Events.IEventPublisher`1
  commentId: T:Cqrs.Events.IEventPublisher`1
  isExternal: false
  name: IEventPublisher<TAuthenticationToken>
  nameWithType: IEventPublisher<TAuthenticationToken>
  fullName: Cqrs.Events.IEventPublisher<TAuthenticationToken>
  nameWithType.vb: IEventPublisher(Of TAuthenticationToken)
  fullName.vb: Cqrs.Events.IEventPublisher(Of TAuthenticationToken)
  name.vb: IEventPublisher(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Events.IEventPublisher`1
    name: IEventPublisher
    nameWithType: IEventPublisher
    fullName: Cqrs.Events.IEventPublisher
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Events.IEventPublisher`1
    name: IEventPublisher
    nameWithType: IEventPublisher
    fullName: Cqrs.Events.IEventPublisher
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Events.IEventReceiver
  commentId: T:Cqrs.Events.IEventReceiver
  parent: Cqrs.Events
  isExternal: false
  name: IEventReceiver
  nameWithType: IEventReceiver
  fullName: Cqrs.Events.IEventReceiver
- uid: Cqrs.Ninject.Configuration
  commentId: N:Cqrs.Ninject.Configuration
  isExternal: false
  name: Cqrs.Ninject.Configuration
  nameWithType: Cqrs.Ninject.Configuration
  fullName: Cqrs.Ninject.Configuration
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Cqrs.Ninject.Configuration.ResolvableModule
  commentId: T:Cqrs.Ninject.Configuration.ResolvableModule
  parent: Cqrs.Ninject.Configuration
  isExternal: false
  name: ResolvableModule
  nameWithType: ResolvableModule
  fullName: Cqrs.Ninject.Configuration.ResolvableModule
- uid: Cqrs.Ninject.Configuration.ResolvableModule.Resolve``1
  commentId: M:Cqrs.Ninject.Configuration.ResolvableModule.Resolve``1
  parent: Cqrs.Ninject.Configuration.ResolvableModule
  isExternal: false
  name: Resolve<T>()
  nameWithType: ResolvableModule.Resolve<T>()
  fullName: Cqrs.Ninject.Configuration.ResolvableModule.Resolve<T>()
  nameWithType.vb: ResolvableModule.Resolve(Of T)()
  fullName.vb: Cqrs.Ninject.Configuration.ResolvableModule.Resolve(Of T)()
  name.vb: Resolve(Of T)()
  spec.csharp:
  - uid: Cqrs.Ninject.Configuration.ResolvableModule.Resolve``1
    name: Resolve<T>
    nameWithType: ResolvableModule.Resolve<T>
    fullName: Cqrs.Ninject.Configuration.ResolvableModule.Resolve<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Ninject.Configuration.ResolvableModule.Resolve``1
    name: Resolve(Of T)
    nameWithType: ResolvableModule.Resolve(Of T)
    fullName: Cqrs.Ninject.Configuration.ResolvableModule.Resolve(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Ninject.Configuration.ResolvableModule.Resolve(Type)
  commentId: M:Cqrs.Ninject.Configuration.ResolvableModule.Resolve(Type)
  parent: Cqrs.Ninject.Configuration.ResolvableModule
  isExternal: true
  name: Resolve(Type)
  nameWithType: ResolvableModule.Resolve(Type)
  fullName: Cqrs.Ninject.Configuration.ResolvableModule.Resolve(Type)
  spec.csharp:
  - uid: Cqrs.Ninject.Configuration.ResolvableModule.Resolve(Type)
    name: Resolve
    nameWithType: ResolvableModule.Resolve
    fullName: Cqrs.Ninject.Configuration.ResolvableModule.Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: Type
    name: Type
    nameWithType: Type
    fullName: Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Ninject.Configuration.ResolvableModule.Resolve(Type)
    name: Resolve
    nameWithType: ResolvableModule.Resolve
    fullName: Cqrs.Ninject.Configuration.ResolvableModule.Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: Type
    name: Type
    nameWithType: Type
    fullName: Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Ninject.Configuration.ResolvableModule.IsRegistered``1
  commentId: M:Cqrs.Ninject.Configuration.ResolvableModule.IsRegistered``1
  parent: Cqrs.Ninject.Configuration.ResolvableModule
  isExternal: false
  name: IsRegistered<T>()
  nameWithType: ResolvableModule.IsRegistered<T>()
  fullName: Cqrs.Ninject.Configuration.ResolvableModule.IsRegistered<T>()
  nameWithType.vb: ResolvableModule.IsRegistered(Of T)()
  fullName.vb: Cqrs.Ninject.Configuration.ResolvableModule.IsRegistered(Of T)()
  name.vb: IsRegistered(Of T)()
  spec.csharp:
  - uid: Cqrs.Ninject.Configuration.ResolvableModule.IsRegistered``1
    name: IsRegistered<T>
    nameWithType: ResolvableModule.IsRegistered<T>
    fullName: Cqrs.Ninject.Configuration.ResolvableModule.IsRegistered<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Ninject.Configuration.ResolvableModule.IsRegistered``1
    name: IsRegistered(Of T)
    nameWithType: ResolvableModule.IsRegistered(Of T)
    fullName: Cqrs.Ninject.Configuration.ResolvableModule.IsRegistered(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Ninject.Configuration.ResolvableModule.IsRegistered(Type)
  commentId: M:Cqrs.Ninject.Configuration.ResolvableModule.IsRegistered(Type)
  parent: Cqrs.Ninject.Configuration.ResolvableModule
  isExternal: true
  name: IsRegistered(Type)
  nameWithType: ResolvableModule.IsRegistered(Type)
  fullName: Cqrs.Ninject.Configuration.ResolvableModule.IsRegistered(Type)
  spec.csharp:
  - uid: Cqrs.Ninject.Configuration.ResolvableModule.IsRegistered(Type)
    name: IsRegistered
    nameWithType: ResolvableModule.IsRegistered
    fullName: Cqrs.Ninject.Configuration.ResolvableModule.IsRegistered
  - name: (
    nameWithType: (
    fullName: (
  - uid: Type
    name: Type
    nameWithType: Type
    fullName: Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Ninject.Configuration.ResolvableModule.IsRegistered(Type)
    name: IsRegistered
    nameWithType: ResolvableModule.IsRegistered
    fullName: Cqrs.Ninject.Configuration.ResolvableModule.IsRegistered
  - name: (
    nameWithType: (
    fullName: (
  - uid: Type
    name: Type
    nameWithType: Type
    fullName: Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Events
  commentId: N:Cqrs.Events
  isExternal: false
  name: Cqrs.Events
  nameWithType: Cqrs.Events
  fullName: Cqrs.Events
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Cqrs.Ninject.Configuration.InProcessEventBusModule`1.Load*
  commentId: Overload:Cqrs.Ninject.Configuration.InProcessEventBusModule`1.Load
  isExternal: false
  name: Load
  nameWithType: InProcessEventBusModule<TAuthenticationToken>.Load
  fullName: Cqrs.Ninject.Configuration.InProcessEventBusModule<TAuthenticationToken>.Load
  nameWithType.vb: InProcessEventBusModule(Of TAuthenticationToken).Load
  fullName.vb: Cqrs.Ninject.Configuration.InProcessEventBusModule(Of TAuthenticationToken).Load
- uid: Cqrs.Ninject.Configuration.InProcessEventBusModule`1.RegisterFactories*
  commentId: Overload:Cqrs.Ninject.Configuration.InProcessEventBusModule`1.RegisterFactories
  isExternal: false
  name: RegisterFactories
  nameWithType: InProcessEventBusModule<TAuthenticationToken>.RegisterFactories
  fullName: Cqrs.Ninject.Configuration.InProcessEventBusModule<TAuthenticationToken>.RegisterFactories
  nameWithType.vb: InProcessEventBusModule(Of TAuthenticationToken).RegisterFactories
  fullName.vb: Cqrs.Ninject.Configuration.InProcessEventBusModule(Of TAuthenticationToken).RegisterFactories
- uid: Cqrs.Ninject.Configuration.InProcessEventBusModule`1.RegisterServices*
  commentId: Overload:Cqrs.Ninject.Configuration.InProcessEventBusModule`1.RegisterServices
  isExternal: false
  name: RegisterServices
  nameWithType: InProcessEventBusModule<TAuthenticationToken>.RegisterServices
  fullName: Cqrs.Ninject.Configuration.InProcessEventBusModule<TAuthenticationToken>.RegisterServices
  nameWithType.vb: InProcessEventBusModule(Of TAuthenticationToken).RegisterServices
  fullName.vb: Cqrs.Ninject.Configuration.InProcessEventBusModule(Of TAuthenticationToken).RegisterServices
- uid: Cqrs.Events.IEventReceiver`1
  commentId: T:Cqrs.Events.IEventReceiver`1
  isExternal: false
  name: IEventReceiver<TAuthenticationToken>
  nameWithType: IEventReceiver<TAuthenticationToken>
  fullName: Cqrs.Events.IEventReceiver<TAuthenticationToken>
  nameWithType.vb: IEventReceiver(Of TAuthenticationToken)
  fullName.vb: Cqrs.Events.IEventReceiver(Of TAuthenticationToken)
  name.vb: IEventReceiver(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Events.IEventReceiver`1
    name: IEventReceiver
    nameWithType: IEventReceiver
    fullName: Cqrs.Events.IEventReceiver
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Events.IEventReceiver`1
    name: IEventReceiver
    nameWithType: IEventReceiver
    fullName: Cqrs.Events.IEventReceiver
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Bus.IEventHandlerRegistrar
  commentId: T:Cqrs.Bus.IEventHandlerRegistrar
  parent: Cqrs.Bus
  isExternal: false
  name: IEventHandlerRegistrar
  nameWithType: IEventHandlerRegistrar
  fullName: Cqrs.Bus.IEventHandlerRegistrar
- uid: Cqrs.Ninject.Configuration.InProcessEventBusModule`1.RegisterCqrsRequirements*
  commentId: Overload:Cqrs.Ninject.Configuration.InProcessEventBusModule`1.RegisterCqrsRequirements
  isExternal: false
  name: RegisterCqrsRequirements
  nameWithType: InProcessEventBusModule<TAuthenticationToken>.RegisterCqrsRequirements
  fullName: Cqrs.Ninject.Configuration.InProcessEventBusModule<TAuthenticationToken>.RegisterCqrsRequirements
  nameWithType.vb: InProcessEventBusModule(Of TAuthenticationToken).RegisterCqrsRequirements
  fullName.vb: Cqrs.Ninject.Configuration.InProcessEventBusModule(Of TAuthenticationToken).RegisterCqrsRequirements
- uid: Cqrs.Bus
  commentId: N:Cqrs.Bus
  isExternal: false
  name: Cqrs.Bus
  nameWithType: Cqrs.Bus
  fullName: Cqrs.Bus
