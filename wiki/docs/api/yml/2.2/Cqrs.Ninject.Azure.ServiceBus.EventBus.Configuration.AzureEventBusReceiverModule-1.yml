### YamlMime:ManagedReference
items:
- uid: Cqrs.Ninject.Azure.ServiceBus.EventBus.Configuration.AzureEventBusReceiverModule`1
  commentId: T:Cqrs.Ninject.Azure.ServiceBus.EventBus.Configuration.AzureEventBusReceiverModule`1
  id: AzureEventBusReceiverModule`1
  parent: Cqrs.Ninject.Azure.ServiceBus.EventBus.Configuration
  children:
  - Cqrs.Ninject.Azure.ServiceBus.EventBus.Configuration.AzureEventBusReceiverModule`1.GetOrCreateBus``1
  - Cqrs.Ninject.Azure.ServiceBus.EventBus.Configuration.AzureEventBusReceiverModule`1.Load
  - Cqrs.Ninject.Azure.ServiceBus.EventBus.Configuration.AzureEventBusReceiverModule`1.RegisterEventHandlerRegistrar``1(``0)
  - Cqrs.Ninject.Azure.ServiceBus.EventBus.Configuration.AzureEventBusReceiverModule`1.RegisterEventMessageSerialiser
  - Cqrs.Ninject.Azure.ServiceBus.EventBus.Configuration.AzureEventBusReceiverModule`1.RegisterEventReceiver``1(``0)
  langs:
  - csharp
  - vb
  name: AzureEventBusReceiverModule<TAuthenticationToken>
  nameWithType: AzureEventBusReceiverModule<TAuthenticationToken>
  fullName: Cqrs.Ninject.Azure.ServiceBus.EventBus.Configuration.AzureEventBusReceiverModule<TAuthenticationToken>
  type: Class
  source:
    remote:
      path: Framework/Ninject/Azure/Cqrs.Ninject.Azure.ServiceBus.EventBus/Configuration/AzureEventBusReceiverModule.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: AzureEventBusReceiverModule
    path: Framework/Ninject/Azure/Cqrs.Ninject.Azure.ServiceBus.EventBus/Configuration/AzureEventBusReceiverModule.cs
    startLine: 22
  assemblies:
  - Cqrs.Ninject.Azure.ServiceBus.EventBus
  namespace: Cqrs.Ninject.Azure.ServiceBus.EventBus.Configuration
  summary: "\nA <see cref=\"!:INinjectModule\"></see> that wires up <xref href=\"Cqrs.Azure.ServiceBus.AzureEventBusReceiver%601\" data-throw-if-not-resolved=\"false\"></xref> as the <xref href=\"Cqrs.Events.IEventReceiver\" data-throw-if-not-resolved=\"false\"></xref> and other require components.\n"
  example: []
  syntax:
    content: 'public class AzureEventBusReceiverModule<TAuthenticationToken> : NinjectModule'
    typeParameters:
    - id: TAuthenticationToken
      description: The <see cref="!:Type"></see> of the authentication token.
    content.vb: >-
      Public Class AzureEventBusReceiverModule(Of TAuthenticationToken)
          Inherits NinjectModule
  inheritance:
  - System.Object
  derivedClasses:
  - Cqrs.Ninject.Azure.ServiceBus.EventBus.Configuration.AzureQueuedEventBusReceiverModule`1
  nameWithType.vb: AzureEventBusReceiverModule(Of TAuthenticationToken)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Cqrs.Ninject.Azure.ServiceBus.EventBus.Configuration.AzureEventBusReceiverModule(Of TAuthenticationToken)
  name.vb: AzureEventBusReceiverModule(Of TAuthenticationToken)
- uid: Cqrs.Ninject.Azure.ServiceBus.EventBus.Configuration.AzureEventBusReceiverModule`1.Load
  commentId: M:Cqrs.Ninject.Azure.ServiceBus.EventBus.Configuration.AzureEventBusReceiverModule`1.Load
  id: Load
  parent: Cqrs.Ninject.Azure.ServiceBus.EventBus.Configuration.AzureEventBusReceiverModule`1
  langs:
  - csharp
  - vb
  name: Load()
  nameWithType: AzureEventBusReceiverModule<TAuthenticationToken>.Load()
  fullName: Cqrs.Ninject.Azure.ServiceBus.EventBus.Configuration.AzureEventBusReceiverModule<TAuthenticationToken>.Load()
  type: Method
  source:
    remote:
      path: Framework/Ninject/Azure/Cqrs.Ninject.Azure.ServiceBus.EventBus/Configuration/AzureEventBusReceiverModule.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Load
    path: Framework/Ninject/Azure/Cqrs.Ninject.Azure.ServiceBus.EventBus/Configuration/AzureEventBusReceiverModule.cs
    startLine: 29
  assemblies:
  - Cqrs.Ninject.Azure.ServiceBus.EventBus
  namespace: Cqrs.Ninject.Azure.ServiceBus.EventBus.Configuration
  summary: "\nLoads the module into the kernel.\n"
  example: []
  syntax:
    content: public override void Load()
    content.vb: Public Overrides Sub Load
  overload: Cqrs.Ninject.Azure.ServiceBus.EventBus.Configuration.AzureEventBusReceiverModule`1.Load*
  nameWithType.vb: AzureEventBusReceiverModule(Of TAuthenticationToken).Load()
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Cqrs.Ninject.Azure.ServiceBus.EventBus.Configuration.AzureEventBusReceiverModule(Of TAuthenticationToken).Load()
- uid: Cqrs.Ninject.Azure.ServiceBus.EventBus.Configuration.AzureEventBusReceiverModule`1.GetOrCreateBus``1
  commentId: M:Cqrs.Ninject.Azure.ServiceBus.EventBus.Configuration.AzureEventBusReceiverModule`1.GetOrCreateBus``1
  id: GetOrCreateBus``1
  parent: Cqrs.Ninject.Azure.ServiceBus.EventBus.Configuration.AzureEventBusReceiverModule`1
  langs:
  - csharp
  - vb
  name: GetOrCreateBus<TBus>()
  nameWithType: AzureEventBusReceiverModule<TAuthenticationToken>.GetOrCreateBus<TBus>()
  fullName: Cqrs.Ninject.Azure.ServiceBus.EventBus.Configuration.AzureEventBusReceiverModule<TAuthenticationToken>.GetOrCreateBus<TBus>()
  type: Method
  source:
    remote:
      path: Framework/Ninject/Azure/Cqrs.Ninject.Azure.ServiceBus.EventBus/Configuration/AzureEventBusReceiverModule.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: GetOrCreateBus
    path: Framework/Ninject/Azure/Cqrs.Ninject.Azure.ServiceBus.EventBus/Configuration/AzureEventBusReceiverModule.cs
    startLine: 53
  assemblies:
  - Cqrs.Ninject.Azure.ServiceBus.EventBus
  namespace: Cqrs.Ninject.Azure.ServiceBus.EventBus.Configuration
  summary: "\nChecks if an existing <code data-dev-comment-type=\"typeparamref\">TBus</code> has already been registered, if not\nit tries to instantiates a new instance via resolution and registers that instance.\n"
  example: []
  syntax:
    content: 'public virtual TBus GetOrCreateBus<TBus>()where TBus : IEventReceiver<TAuthenticationToken>, IEventHandlerRegistrar'
    typeParameters:
    - id: TBus
      description: The <see cref="!:Type"></see> of bus to resolve. Best if a class not an interface.
    return:
      type: '{TBus}'
    content.vb: Public Overridable Function GetOrCreateBus(Of TBus As {IEventReceiver(Of TAuthenticationToken), IEventHandlerRegistrar}) As TBus
  overload: Cqrs.Ninject.Azure.ServiceBus.EventBus.Configuration.AzureEventBusReceiverModule`1.GetOrCreateBus*
  nameWithType.vb: AzureEventBusReceiverModule(Of TAuthenticationToken).GetOrCreateBus(Of TBus)()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Cqrs.Ninject.Azure.ServiceBus.EventBus.Configuration.AzureEventBusReceiverModule(Of TAuthenticationToken).GetOrCreateBus(Of TBus)()
  name.vb: GetOrCreateBus(Of TBus)()
- uid: Cqrs.Ninject.Azure.ServiceBus.EventBus.Configuration.AzureEventBusReceiverModule`1.RegisterEventReceiver``1(``0)
  commentId: M:Cqrs.Ninject.Azure.ServiceBus.EventBus.Configuration.AzureEventBusReceiverModule`1.RegisterEventReceiver``1(``0)
  id: RegisterEventReceiver``1(``0)
  parent: Cqrs.Ninject.Azure.ServiceBus.EventBus.Configuration.AzureEventBusReceiverModule`1
  langs:
  - csharp
  - vb
  name: RegisterEventReceiver<TBus>(TBus)
  nameWithType: AzureEventBusReceiverModule<TAuthenticationToken>.RegisterEventReceiver<TBus>(TBus)
  fullName: Cqrs.Ninject.Azure.ServiceBus.EventBus.Configuration.AzureEventBusReceiverModule<TAuthenticationToken>.RegisterEventReceiver<TBus>(TBus)
  type: Method
  source:
    remote:
      path: Framework/Ninject/Azure/Cqrs.Ninject.Azure.ServiceBus.EventBus/Configuration/AzureEventBusReceiverModule.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: RegisterEventReceiver
    path: Framework/Ninject/Azure/Cqrs.Ninject.Azure.ServiceBus.EventBus/Configuration/AzureEventBusReceiverModule.cs
    startLine: 74
  assemblies:
  - Cqrs.Ninject.Azure.ServiceBus.EventBus
  namespace: Cqrs.Ninject.Azure.ServiceBus.EventBus.Configuration
  summary: "\nRegister the CQRS event receiver\n"
  example: []
  syntax:
    content: 'public virtual void RegisterEventReceiver<TBus>(TBus bus)where TBus : IEventReceiver<TAuthenticationToken>, IEventHandlerRegistrar'
    parameters:
    - id: bus
      type: '{TBus}'
    typeParameters:
    - id: TBus
    content.vb: Public Overridable Sub RegisterEventReceiver(Of TBus As {IEventReceiver(Of TAuthenticationToken), IEventHandlerRegistrar})(bus As TBus)
  overload: Cqrs.Ninject.Azure.ServiceBus.EventBus.Configuration.AzureEventBusReceiverModule`1.RegisterEventReceiver*
  nameWithType.vb: AzureEventBusReceiverModule(Of TAuthenticationToken).RegisterEventReceiver(Of TBus)(TBus)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Cqrs.Ninject.Azure.ServiceBus.EventBus.Configuration.AzureEventBusReceiverModule(Of TAuthenticationToken).RegisterEventReceiver(Of TBus)(TBus)
  name.vb: RegisterEventReceiver(Of TBus)(TBus)
- uid: Cqrs.Ninject.Azure.ServiceBus.EventBus.Configuration.AzureEventBusReceiverModule`1.RegisterEventHandlerRegistrar``1(``0)
  commentId: M:Cqrs.Ninject.Azure.ServiceBus.EventBus.Configuration.AzureEventBusReceiverModule`1.RegisterEventHandlerRegistrar``1(``0)
  id: RegisterEventHandlerRegistrar``1(``0)
  parent: Cqrs.Ninject.Azure.ServiceBus.EventBus.Configuration.AzureEventBusReceiverModule`1
  langs:
  - csharp
  - vb
  name: RegisterEventHandlerRegistrar<TBus>(TBus)
  nameWithType: AzureEventBusReceiverModule<TAuthenticationToken>.RegisterEventHandlerRegistrar<TBus>(TBus)
  fullName: Cqrs.Ninject.Azure.ServiceBus.EventBus.Configuration.AzureEventBusReceiverModule<TAuthenticationToken>.RegisterEventHandlerRegistrar<TBus>(TBus)
  type: Method
  source:
    remote:
      path: Framework/Ninject/Azure/Cqrs.Ninject.Azure.ServiceBus.EventBus/Configuration/AzureEventBusReceiverModule.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: RegisterEventHandlerRegistrar
    path: Framework/Ninject/Azure/Cqrs.Ninject.Azure.ServiceBus.EventBus/Configuration/AzureEventBusReceiverModule.cs
    startLine: 85
  assemblies:
  - Cqrs.Ninject.Azure.ServiceBus.EventBus
  namespace: Cqrs.Ninject.Azure.ServiceBus.EventBus.Configuration
  summary: "\nRegister the CQRS event handler registrar\n"
  example: []
  syntax:
    content: 'public virtual void RegisterEventHandlerRegistrar<TBus>(TBus bus)where TBus : IEventReceiver<TAuthenticationToken>, IEventHandlerRegistrar'
    parameters:
    - id: bus
      type: '{TBus}'
    typeParameters:
    - id: TBus
    content.vb: Public Overridable Sub RegisterEventHandlerRegistrar(Of TBus As {IEventReceiver(Of TAuthenticationToken), IEventHandlerRegistrar})(bus As TBus)
  overload: Cqrs.Ninject.Azure.ServiceBus.EventBus.Configuration.AzureEventBusReceiverModule`1.RegisterEventHandlerRegistrar*
  nameWithType.vb: AzureEventBusReceiverModule(Of TAuthenticationToken).RegisterEventHandlerRegistrar(Of TBus)(TBus)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Cqrs.Ninject.Azure.ServiceBus.EventBus.Configuration.AzureEventBusReceiverModule(Of TAuthenticationToken).RegisterEventHandlerRegistrar(Of TBus)(TBus)
  name.vb: RegisterEventHandlerRegistrar(Of TBus)(TBus)
- uid: Cqrs.Ninject.Azure.ServiceBus.EventBus.Configuration.AzureEventBusReceiverModule`1.RegisterEventMessageSerialiser
  commentId: M:Cqrs.Ninject.Azure.ServiceBus.EventBus.Configuration.AzureEventBusReceiverModule`1.RegisterEventMessageSerialiser
  id: RegisterEventMessageSerialiser
  parent: Cqrs.Ninject.Azure.ServiceBus.EventBus.Configuration.AzureEventBusReceiverModule`1
  langs:
  - csharp
  - vb
  name: RegisterEventMessageSerialiser()
  nameWithType: AzureEventBusReceiverModule<TAuthenticationToken>.RegisterEventMessageSerialiser()
  fullName: Cqrs.Ninject.Azure.ServiceBus.EventBus.Configuration.AzureEventBusReceiverModule<TAuthenticationToken>.RegisterEventMessageSerialiser()
  type: Method
  source:
    remote:
      path: Framework/Ninject/Azure/Cqrs.Ninject.Azure.ServiceBus.EventBus/Configuration/AzureEventBusReceiverModule.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: RegisterEventMessageSerialiser
    path: Framework/Ninject/Azure/Cqrs.Ninject.Azure.ServiceBus.EventBus/Configuration/AzureEventBusReceiverModule.cs
    startLine: 100
  assemblies:
  - Cqrs.Ninject.Azure.ServiceBus.EventBus
  namespace: Cqrs.Ninject.Azure.ServiceBus.EventBus.Configuration
  summary: "\nRegister the CQRS event handler message serialiser\n"
  example: []
  syntax:
    content: public virtual void RegisterEventMessageSerialiser()
    content.vb: Public Overridable Sub RegisterEventMessageSerialiser
  overload: Cqrs.Ninject.Azure.ServiceBus.EventBus.Configuration.AzureEventBusReceiverModule`1.RegisterEventMessageSerialiser*
  nameWithType.vb: AzureEventBusReceiverModule(Of TAuthenticationToken).RegisterEventMessageSerialiser()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Cqrs.Ninject.Azure.ServiceBus.EventBus.Configuration.AzureEventBusReceiverModule(Of TAuthenticationToken).RegisterEventMessageSerialiser()
references:
- uid: Cqrs.Azure.ServiceBus.AzureEventBusReceiver`1
  commentId: T:Cqrs.Azure.ServiceBus.AzureEventBusReceiver`1
  isExternal: false
  name: AzureEventBusReceiver<TAuthenticationToken>
  nameWithType: AzureEventBusReceiver<TAuthenticationToken>
  fullName: Cqrs.Azure.ServiceBus.AzureEventBusReceiver<TAuthenticationToken>
  nameWithType.vb: AzureEventBusReceiver(Of TAuthenticationToken)
  fullName.vb: Cqrs.Azure.ServiceBus.AzureEventBusReceiver(Of TAuthenticationToken)
  name.vb: AzureEventBusReceiver(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Azure.ServiceBus.AzureEventBusReceiver`1
    name: AzureEventBusReceiver
    nameWithType: AzureEventBusReceiver
    fullName: Cqrs.Azure.ServiceBus.AzureEventBusReceiver
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Azure.ServiceBus.AzureEventBusReceiver`1
    name: AzureEventBusReceiver
    nameWithType: AzureEventBusReceiver
    fullName: Cqrs.Azure.ServiceBus.AzureEventBusReceiver
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Events.IEventReceiver
  commentId: T:Cqrs.Events.IEventReceiver
  parent: Cqrs.Events
  isExternal: false
  name: IEventReceiver
  nameWithType: IEventReceiver
  fullName: Cqrs.Events.IEventReceiver
- uid: Cqrs.Ninject.Azure.ServiceBus.EventBus.Configuration
  commentId: N:Cqrs.Ninject.Azure.ServiceBus.EventBus.Configuration
  isExternal: false
  name: Cqrs.Ninject.Azure.ServiceBus.EventBus.Configuration
  nameWithType: Cqrs.Ninject.Azure.ServiceBus.EventBus.Configuration
  fullName: Cqrs.Ninject.Azure.ServiceBus.EventBus.Configuration
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Cqrs.Events
  commentId: N:Cqrs.Events
  isExternal: false
  name: Cqrs.Events
  nameWithType: Cqrs.Events
  fullName: Cqrs.Events
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Cqrs.Ninject.Azure.ServiceBus.EventBus.Configuration.AzureEventBusReceiverModule`1.Load*
  commentId: Overload:Cqrs.Ninject.Azure.ServiceBus.EventBus.Configuration.AzureEventBusReceiverModule`1.Load
  isExternal: false
  name: Load
  nameWithType: AzureEventBusReceiverModule<TAuthenticationToken>.Load
  fullName: Cqrs.Ninject.Azure.ServiceBus.EventBus.Configuration.AzureEventBusReceiverModule<TAuthenticationToken>.Load
  nameWithType.vb: AzureEventBusReceiverModule(Of TAuthenticationToken).Load
  fullName.vb: Cqrs.Ninject.Azure.ServiceBus.EventBus.Configuration.AzureEventBusReceiverModule(Of TAuthenticationToken).Load
- uid: Cqrs.Ninject.Azure.ServiceBus.EventBus.Configuration.AzureEventBusReceiverModule`1.GetOrCreateBus*
  commentId: Overload:Cqrs.Ninject.Azure.ServiceBus.EventBus.Configuration.AzureEventBusReceiverModule`1.GetOrCreateBus
  isExternal: false
  name: GetOrCreateBus
  nameWithType: AzureEventBusReceiverModule<TAuthenticationToken>.GetOrCreateBus
  fullName: Cqrs.Ninject.Azure.ServiceBus.EventBus.Configuration.AzureEventBusReceiverModule<TAuthenticationToken>.GetOrCreateBus
  nameWithType.vb: AzureEventBusReceiverModule(Of TAuthenticationToken).GetOrCreateBus
  fullName.vb: Cqrs.Ninject.Azure.ServiceBus.EventBus.Configuration.AzureEventBusReceiverModule(Of TAuthenticationToken).GetOrCreateBus
- uid: '{TBus}'
  commentId: '!:TBus'
  definition: TBus
  name: TBus
  nameWithType: TBus
  fullName: TBus
- uid: TBus
  isExternal: false
  name: TBus
  nameWithType: TBus
  fullName: TBus
- uid: Cqrs.Ninject.Azure.ServiceBus.EventBus.Configuration.AzureEventBusReceiverModule`1.RegisterEventReceiver*
  commentId: Overload:Cqrs.Ninject.Azure.ServiceBus.EventBus.Configuration.AzureEventBusReceiverModule`1.RegisterEventReceiver
  isExternal: false
  name: RegisterEventReceiver
  nameWithType: AzureEventBusReceiverModule<TAuthenticationToken>.RegisterEventReceiver
  fullName: Cqrs.Ninject.Azure.ServiceBus.EventBus.Configuration.AzureEventBusReceiverModule<TAuthenticationToken>.RegisterEventReceiver
  nameWithType.vb: AzureEventBusReceiverModule(Of TAuthenticationToken).RegisterEventReceiver
  fullName.vb: Cqrs.Ninject.Azure.ServiceBus.EventBus.Configuration.AzureEventBusReceiverModule(Of TAuthenticationToken).RegisterEventReceiver
- uid: Cqrs.Ninject.Azure.ServiceBus.EventBus.Configuration.AzureEventBusReceiverModule`1.RegisterEventHandlerRegistrar*
  commentId: Overload:Cqrs.Ninject.Azure.ServiceBus.EventBus.Configuration.AzureEventBusReceiverModule`1.RegisterEventHandlerRegistrar
  isExternal: false
  name: RegisterEventHandlerRegistrar
  nameWithType: AzureEventBusReceiverModule<TAuthenticationToken>.RegisterEventHandlerRegistrar
  fullName: Cqrs.Ninject.Azure.ServiceBus.EventBus.Configuration.AzureEventBusReceiverModule<TAuthenticationToken>.RegisterEventHandlerRegistrar
  nameWithType.vb: AzureEventBusReceiverModule(Of TAuthenticationToken).RegisterEventHandlerRegistrar
  fullName.vb: Cqrs.Ninject.Azure.ServiceBus.EventBus.Configuration.AzureEventBusReceiverModule(Of TAuthenticationToken).RegisterEventHandlerRegistrar
- uid: Cqrs.Ninject.Azure.ServiceBus.EventBus.Configuration.AzureEventBusReceiverModule`1.RegisterEventMessageSerialiser*
  commentId: Overload:Cqrs.Ninject.Azure.ServiceBus.EventBus.Configuration.AzureEventBusReceiverModule`1.RegisterEventMessageSerialiser
  isExternal: false
  name: RegisterEventMessageSerialiser
  nameWithType: AzureEventBusReceiverModule<TAuthenticationToken>.RegisterEventMessageSerialiser
  fullName: Cqrs.Ninject.Azure.ServiceBus.EventBus.Configuration.AzureEventBusReceiverModule<TAuthenticationToken>.RegisterEventMessageSerialiser
  nameWithType.vb: AzureEventBusReceiverModule(Of TAuthenticationToken).RegisterEventMessageSerialiser
  fullName.vb: Cqrs.Ninject.Azure.ServiceBus.EventBus.Configuration.AzureEventBusReceiverModule(Of TAuthenticationToken).RegisterEventMessageSerialiser
