### YamlMime:ManagedReference
items:
- uid: Cqrs.Tests.Substitutes.TestSaga
  commentId: T:Cqrs.Tests.Substitutes.TestSaga
  id: TestSaga
  parent: Cqrs.Tests.Substitutes
  children:
  - Cqrs.Tests.Substitutes.TestSaga.#ctor(Cqrs.Configuration.IDependencyResolver,System.Guid)
  - Cqrs.Tests.Substitutes.TestSaga.Apply(Cqrs.Tests.Substitutes.TestAggregateDidSomething)
  - Cqrs.Tests.Substitutes.TestSaga.Apply(Cqrs.Tests.Substitutes.TestAggregateDidSomethingElse)
  - Cqrs.Tests.Substitutes.TestSaga.DidSomething
  - Cqrs.Tests.Substitutes.TestSaga.DidSomethingCount
  - Cqrs.Tests.Substitutes.TestSaga.DidSomethingElse
  - Cqrs.Tests.Substitutes.TestSaga.DidSomethingElse2
  - Cqrs.Tests.Substitutes.TestSaga.Handle(Cqrs.Tests.Substitutes.TestAggregateDidSomething)
  - Cqrs.Tests.Substitutes.TestSaga.Handle(Cqrs.Tests.Substitutes.TestAggregateDidSomethingElse)
  - Cqrs.Tests.Substitutes.TestSaga.Handle(Cqrs.Tests.Substitutes.TestAggregateDidSomethingElse2)
  - Cqrs.Tests.Substitutes.TestSaga.Responded
  langs:
  - csharp
  - vb
  name: TestSaga
  nameWithType: TestSaga
  fullName: Cqrs.Tests.Substitutes.TestSaga
  type: Class
  source:
    remote:
      path: Framework/Cqrs.Tests/Substitutes/TestSaga.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: TestSaga
    path: Framework/Cqrs.Tests/Substitutes/TestSaga.cs
    startLine: 76
  assemblies:
  - Cqrs.Tests
  namespace: Cqrs.Tests.Substitutes
  syntax:
    content: 'public class TestSaga : Saga<ISingleSignOnToken>, ISaga<ISingleSignOnToken>'
    content.vb: >-
      Public Class TestSaga

          Inherits Saga(Of ISingleSignOnToken)

          Implements ISaga(Of ISingleSignOnToken)
  inheritance:
  - System.Object
  - Cqrs.Domain.Saga{Cqrs.Authentication.ISingleSignOnToken}
  implements:
  - Cqrs.Domain.ISaga{Cqrs.Authentication.ISingleSignOnToken}
  inheritedMembers:
  - Cqrs.Domain.Saga{Cqrs.Authentication.ISingleSignOnToken}.Rsn
  - Cqrs.Domain.Saga{Cqrs.Authentication.ISingleSignOnToken}.Id
  - Cqrs.Domain.Saga{Cqrs.Authentication.ISingleSignOnToken}.Version
  - Cqrs.Domain.Saga{Cqrs.Authentication.ISingleSignOnToken}.CommandPublisher
  - Cqrs.Domain.Saga{Cqrs.Authentication.ISingleSignOnToken}.DependencyResolver
  - Cqrs.Domain.Saga{Cqrs.Authentication.ISingleSignOnToken}.Logger
  - Cqrs.Domain.Saga{Cqrs.Authentication.ISingleSignOnToken}.GetUncommittedChanges
  - Cqrs.Domain.Saga{Cqrs.Authentication.ISingleSignOnToken}.MarkChangesAsCommitted
  - Cqrs.Domain.Saga{Cqrs.Authentication.ISingleSignOnToken}.LoadFromHistory(System.Collections.Generic.IEnumerable{Cqrs.Events.ISagaEvent{Cqrs.Authentication.ISingleSignOnToken}})
  - Cqrs.Domain.Saga{Cqrs.Authentication.ISingleSignOnToken}.ApplyChange(Cqrs.Events.ISagaEvent{Cqrs.Authentication.ISingleSignOnToken})
  - Cqrs.Domain.Saga{Cqrs.Authentication.ISingleSignOnToken}.ApplyChange(Cqrs.Events.IEvent{Cqrs.Authentication.ISingleSignOnToken})
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Cqrs.Tests.Substitutes.TestSaga.DidSomethingCount
  commentId: F:Cqrs.Tests.Substitutes.TestSaga.DidSomethingCount
  id: DidSomethingCount
  parent: Cqrs.Tests.Substitutes.TestSaga
  langs:
  - csharp
  - vb
  name: DidSomethingCount
  nameWithType: TestSaga.DidSomethingCount
  fullName: Cqrs.Tests.Substitutes.TestSaga.DidSomethingCount
  type: Field
  source:
    remote:
      path: Framework/Cqrs.Tests/Substitutes/TestSaga.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: DidSomethingCount
    path: Framework/Cqrs.Tests/Substitutes/TestSaga.cs
    startLine: 79
  assemblies:
  - Cqrs.Tests
  namespace: Cqrs.Tests.Substitutes
  syntax:
    content: public int DidSomethingCount
    return:
      type: System.Int32
    content.vb: Public DidSomethingCount As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Cqrs.Tests.Substitutes.TestSaga.DidSomething
  commentId: F:Cqrs.Tests.Substitutes.TestSaga.DidSomething
  id: DidSomething
  parent: Cqrs.Tests.Substitutes.TestSaga
  langs:
  - csharp
  - vb
  name: DidSomething
  nameWithType: TestSaga.DidSomething
  fullName: Cqrs.Tests.Substitutes.TestSaga.DidSomething
  type: Field
  source:
    remote:
      path: Framework/Cqrs.Tests/Substitutes/TestSaga.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: DidSomething
    path: Framework/Cqrs.Tests/Substitutes/TestSaga.cs
    startLine: 81
  assemblies:
  - Cqrs.Tests
  namespace: Cqrs.Tests.Substitutes
  syntax:
    content: public bool DidSomething
    return:
      type: System.Boolean
    content.vb: Public DidSomething As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Cqrs.Tests.Substitutes.TestSaga.DidSomethingElse
  commentId: F:Cqrs.Tests.Substitutes.TestSaga.DidSomethingElse
  id: DidSomethingElse
  parent: Cqrs.Tests.Substitutes.TestSaga
  langs:
  - csharp
  - vb
  name: DidSomethingElse
  nameWithType: TestSaga.DidSomethingElse
  fullName: Cqrs.Tests.Substitutes.TestSaga.DidSomethingElse
  type: Field
  source:
    remote:
      path: Framework/Cqrs.Tests/Substitutes/TestSaga.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: DidSomethingElse
    path: Framework/Cqrs.Tests/Substitutes/TestSaga.cs
    startLine: 83
  assemblies:
  - Cqrs.Tests
  namespace: Cqrs.Tests.Substitutes
  syntax:
    content: public bool DidSomethingElse
    return:
      type: System.Boolean
    content.vb: Public DidSomethingElse As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Cqrs.Tests.Substitutes.TestSaga.DidSomethingElse2
  commentId: F:Cqrs.Tests.Substitutes.TestSaga.DidSomethingElse2
  id: DidSomethingElse2
  parent: Cqrs.Tests.Substitutes.TestSaga
  langs:
  - csharp
  - vb
  name: DidSomethingElse2
  nameWithType: TestSaga.DidSomethingElse2
  fullName: Cqrs.Tests.Substitutes.TestSaga.DidSomethingElse2
  type: Field
  source:
    remote:
      path: Framework/Cqrs.Tests/Substitutes/TestSaga.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: DidSomethingElse2
    path: Framework/Cqrs.Tests/Substitutes/TestSaga.cs
    startLine: 85
  assemblies:
  - Cqrs.Tests
  namespace: Cqrs.Tests.Substitutes
  syntax:
    content: public bool DidSomethingElse2
    return:
      type: System.Boolean
    content.vb: Public DidSomethingElse2 As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Cqrs.Tests.Substitutes.TestSaga.Responded
  commentId: F:Cqrs.Tests.Substitutes.TestSaga.Responded
  id: Responded
  parent: Cqrs.Tests.Substitutes.TestSaga
  langs:
  - csharp
  - vb
  name: Responded
  nameWithType: TestSaga.Responded
  fullName: Cqrs.Tests.Substitutes.TestSaga.Responded
  type: Field
  source:
    remote:
      path: Framework/Cqrs.Tests/Substitutes/TestSaga.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Responded
    path: Framework/Cqrs.Tests/Substitutes/TestSaga.cs
    startLine: 87
  assemblies:
  - Cqrs.Tests
  namespace: Cqrs.Tests.Substitutes
  syntax:
    content: public bool Responded
    return:
      type: System.Boolean
    content.vb: Public Responded As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Cqrs.Tests.Substitutes.TestSaga.#ctor(Cqrs.Configuration.IDependencyResolver,System.Guid)
  commentId: M:Cqrs.Tests.Substitutes.TestSaga.#ctor(Cqrs.Configuration.IDependencyResolver,System.Guid)
  id: '#ctor(Cqrs.Configuration.IDependencyResolver,System.Guid)'
  parent: Cqrs.Tests.Substitutes.TestSaga
  langs:
  - csharp
  - vb
  name: TestSaga(IDependencyResolver, Guid)
  nameWithType: TestSaga.TestSaga(IDependencyResolver, Guid)
  fullName: Cqrs.Tests.Substitutes.TestSaga.TestSaga(Cqrs.Configuration.IDependencyResolver, System.Guid)
  type: Constructor
  source:
    remote:
      path: Framework/Cqrs.Tests/Substitutes/TestSaga.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: .ctor
    path: Framework/Cqrs.Tests/Substitutes/TestSaga.cs
    startLine: 96
  assemblies:
  - Cqrs.Tests
  namespace: Cqrs.Tests.Substitutes
  syntax:
    content: public TestSaga(IDependencyResolver dependencyResolver, Guid id)
    parameters:
    - id: dependencyResolver
      type: Cqrs.Configuration.IDependencyResolver
    - id: id
      type: System.Guid
    content.vb: Public Sub New(dependencyResolver As IDependencyResolver, id As Guid)
  overload: Cqrs.Tests.Substitutes.TestSaga.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Cqrs.Tests.Substitutes.TestSaga.Handle(Cqrs.Tests.Substitutes.TestAggregateDidSomething)
  commentId: M:Cqrs.Tests.Substitutes.TestSaga.Handle(Cqrs.Tests.Substitutes.TestAggregateDidSomething)
  id: Handle(Cqrs.Tests.Substitutes.TestAggregateDidSomething)
  parent: Cqrs.Tests.Substitutes.TestSaga
  langs:
  - csharp
  - vb
  name: Handle(TestAggregateDidSomething)
  nameWithType: TestSaga.Handle(TestAggregateDidSomething)
  fullName: Cqrs.Tests.Substitutes.TestSaga.Handle(Cqrs.Tests.Substitutes.TestAggregateDidSomething)
  type: Method
  source:
    remote:
      path: Framework/Cqrs.Tests/Substitutes/TestSaga.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Handle
    path: Framework/Cqrs.Tests/Substitutes/TestSaga.cs
    startLine: 106
  assemblies:
  - Cqrs.Tests
  namespace: Cqrs.Tests.Substitutes
  syntax:
    content: public void Handle(TestAggregateDidSomething message)
    parameters:
    - id: message
      type: Cqrs.Tests.Substitutes.TestAggregateDidSomething
    content.vb: Public Sub Handle(message As TestAggregateDidSomething)
  overload: Cqrs.Tests.Substitutes.TestSaga.Handle*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Cqrs.Tests.Substitutes.TestSaga.Handle(Cqrs.Tests.Substitutes.TestAggregateDidSomethingElse)
  commentId: M:Cqrs.Tests.Substitutes.TestSaga.Handle(Cqrs.Tests.Substitutes.TestAggregateDidSomethingElse)
  id: Handle(Cqrs.Tests.Substitutes.TestAggregateDidSomethingElse)
  parent: Cqrs.Tests.Substitutes.TestSaga
  langs:
  - csharp
  - vb
  name: Handle(TestAggregateDidSomethingElse)
  nameWithType: TestSaga.Handle(TestAggregateDidSomethingElse)
  fullName: Cqrs.Tests.Substitutes.TestSaga.Handle(Cqrs.Tests.Substitutes.TestAggregateDidSomethingElse)
  type: Method
  source:
    remote:
      path: Framework/Cqrs.Tests/Substitutes/TestSaga.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Handle
    path: Framework/Cqrs.Tests/Substitutes/TestSaga.cs
    startLine: 122
  assemblies:
  - Cqrs.Tests
  namespace: Cqrs.Tests.Substitutes
  syntax:
    content: public void Handle(TestAggregateDidSomethingElse message)
    parameters:
    - id: message
      type: Cqrs.Tests.Substitutes.TestAggregateDidSomethingElse
    content.vb: Public Sub Handle(message As TestAggregateDidSomethingElse)
  overload: Cqrs.Tests.Substitutes.TestSaga.Handle*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Cqrs.Tests.Substitutes.TestSaga.Handle(Cqrs.Tests.Substitutes.TestAggregateDidSomethingElse2)
  commentId: M:Cqrs.Tests.Substitutes.TestSaga.Handle(Cqrs.Tests.Substitutes.TestAggregateDidSomethingElse2)
  id: Handle(Cqrs.Tests.Substitutes.TestAggregateDidSomethingElse2)
  parent: Cqrs.Tests.Substitutes.TestSaga
  langs:
  - csharp
  - vb
  name: Handle(TestAggregateDidSomethingElse2)
  nameWithType: TestSaga.Handle(TestAggregateDidSomethingElse2)
  fullName: Cqrs.Tests.Substitutes.TestSaga.Handle(Cqrs.Tests.Substitutes.TestAggregateDidSomethingElse2)
  type: Method
  source:
    remote:
      path: Framework/Cqrs.Tests/Substitutes/TestSaga.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Handle
    path: Framework/Cqrs.Tests/Substitutes/TestSaga.cs
    startLine: 131
  assemblies:
  - Cqrs.Tests
  namespace: Cqrs.Tests.Substitutes
  syntax:
    content: public void Handle(TestAggregateDidSomethingElse2 message)
    parameters:
    - id: message
      type: Cqrs.Tests.Substitutes.TestAggregateDidSomethingElse2
    content.vb: Public Sub Handle(message As TestAggregateDidSomethingElse2)
  overload: Cqrs.Tests.Substitutes.TestSaga.Handle*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Cqrs.Tests.Substitutes.TestSaga.Apply(Cqrs.Tests.Substitutes.TestAggregateDidSomething)
  commentId: M:Cqrs.Tests.Substitutes.TestSaga.Apply(Cqrs.Tests.Substitutes.TestAggregateDidSomething)
  id: Apply(Cqrs.Tests.Substitutes.TestAggregateDidSomething)
  parent: Cqrs.Tests.Substitutes.TestSaga
  langs:
  - csharp
  - vb
  name: Apply(TestAggregateDidSomething)
  nameWithType: TestSaga.Apply(TestAggregateDidSomething)
  fullName: Cqrs.Tests.Substitutes.TestSaga.Apply(Cqrs.Tests.Substitutes.TestAggregateDidSomething)
  type: Method
  source:
    remote:
      path: Framework/Cqrs.Tests/Substitutes/TestSaga.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Apply
    path: Framework/Cqrs.Tests/Substitutes/TestSaga.cs
    startLine: 145
  assemblies:
  - Cqrs.Tests
  namespace: Cqrs.Tests.Substitutes
  syntax:
    content: public void Apply(TestAggregateDidSomething e)
    parameters:
    - id: e
      type: Cqrs.Tests.Substitutes.TestAggregateDidSomething
    content.vb: Public Sub Apply(e As TestAggregateDidSomething)
  overload: Cqrs.Tests.Substitutes.TestSaga.Apply*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Cqrs.Tests.Substitutes.TestSaga.Apply(Cqrs.Tests.Substitutes.TestAggregateDidSomethingElse)
  commentId: M:Cqrs.Tests.Substitutes.TestSaga.Apply(Cqrs.Tests.Substitutes.TestAggregateDidSomethingElse)
  id: Apply(Cqrs.Tests.Substitutes.TestAggregateDidSomethingElse)
  parent: Cqrs.Tests.Substitutes.TestSaga
  langs:
  - csharp
  - vb
  name: Apply(TestAggregateDidSomethingElse)
  nameWithType: TestSaga.Apply(TestAggregateDidSomethingElse)
  fullName: Cqrs.Tests.Substitutes.TestSaga.Apply(Cqrs.Tests.Substitutes.TestAggregateDidSomethingElse)
  type: Method
  source:
    remote:
      path: Framework/Cqrs.Tests/Substitutes/TestSaga.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Apply
    path: Framework/Cqrs.Tests/Substitutes/TestSaga.cs
    startLine: 151
  assemblies:
  - Cqrs.Tests
  namespace: Cqrs.Tests.Substitutes
  syntax:
    content: public void Apply(TestAggregateDidSomethingElse e)
    parameters:
    - id: e
      type: Cqrs.Tests.Substitutes.TestAggregateDidSomethingElse
    content.vb: Public Sub Apply(e As TestAggregateDidSomethingElse)
  overload: Cqrs.Tests.Substitutes.TestSaga.Apply*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Cqrs.Tests.Substitutes
  commentId: N:Cqrs.Tests.Substitutes
  isExternal: false
  name: Cqrs.Tests.Substitutes
  nameWithType: Cqrs.Tests.Substitutes
  fullName: Cqrs.Tests.Substitutes
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Cqrs.Domain.Saga{Cqrs.Authentication.ISingleSignOnToken}
  commentId: T:Cqrs.Domain.Saga{Cqrs.Authentication.ISingleSignOnToken}
  parent: Cqrs.Domain
  definition: Cqrs.Domain.Saga`1
  name: Saga<ISingleSignOnToken>
  nameWithType: Saga<ISingleSignOnToken>
  fullName: Cqrs.Domain.Saga<Cqrs.Authentication.ISingleSignOnToken>
  nameWithType.vb: Saga(Of ISingleSignOnToken)
  fullName.vb: Cqrs.Domain.Saga(Of Cqrs.Authentication.ISingleSignOnToken)
  name.vb: Saga(Of ISingleSignOnToken)
  spec.csharp:
  - uid: Cqrs.Domain.Saga`1
    name: Saga
    nameWithType: Saga
    fullName: Cqrs.Domain.Saga
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cqrs.Authentication.ISingleSignOnToken
    name: ISingleSignOnToken
    nameWithType: ISingleSignOnToken
    fullName: Cqrs.Authentication.ISingleSignOnToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Domain.Saga`1
    name: Saga
    nameWithType: Saga
    fullName: Cqrs.Domain.Saga
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Cqrs.Authentication.ISingleSignOnToken
    name: ISingleSignOnToken
    nameWithType: ISingleSignOnToken
    fullName: Cqrs.Authentication.ISingleSignOnToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Domain.ISaga{Cqrs.Authentication.ISingleSignOnToken}
  commentId: T:Cqrs.Domain.ISaga{Cqrs.Authentication.ISingleSignOnToken}
  parent: Cqrs.Domain
  definition: Cqrs.Domain.ISaga`1
  name: ISaga<ISingleSignOnToken>
  nameWithType: ISaga<ISingleSignOnToken>
  fullName: Cqrs.Domain.ISaga<Cqrs.Authentication.ISingleSignOnToken>
  nameWithType.vb: ISaga(Of ISingleSignOnToken)
  fullName.vb: Cqrs.Domain.ISaga(Of Cqrs.Authentication.ISingleSignOnToken)
  name.vb: ISaga(Of ISingleSignOnToken)
  spec.csharp:
  - uid: Cqrs.Domain.ISaga`1
    name: ISaga
    nameWithType: ISaga
    fullName: Cqrs.Domain.ISaga
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cqrs.Authentication.ISingleSignOnToken
    name: ISingleSignOnToken
    nameWithType: ISingleSignOnToken
    fullName: Cqrs.Authentication.ISingleSignOnToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Domain.ISaga`1
    name: ISaga
    nameWithType: ISaga
    fullName: Cqrs.Domain.ISaga
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Cqrs.Authentication.ISingleSignOnToken
    name: ISingleSignOnToken
    nameWithType: ISingleSignOnToken
    fullName: Cqrs.Authentication.ISingleSignOnToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Domain.Saga{Cqrs.Authentication.ISingleSignOnToken}.Rsn
  commentId: P:Cqrs.Domain.Saga{Cqrs.Authentication.ISingleSignOnToken}.Rsn
  parent: Cqrs.Domain.Saga{Cqrs.Authentication.ISingleSignOnToken}
  definition: Cqrs.Domain.Saga`1.Rsn
  name: Rsn
  nameWithType: Saga<ISingleSignOnToken>.Rsn
  fullName: Cqrs.Domain.Saga<Cqrs.Authentication.ISingleSignOnToken>.Rsn
  nameWithType.vb: Saga(Of ISingleSignOnToken).Rsn
  fullName.vb: Cqrs.Domain.Saga(Of Cqrs.Authentication.ISingleSignOnToken).Rsn
- uid: Cqrs.Domain.Saga{Cqrs.Authentication.ISingleSignOnToken}.Id
  commentId: P:Cqrs.Domain.Saga{Cqrs.Authentication.ISingleSignOnToken}.Id
  parent: Cqrs.Domain.Saga{Cqrs.Authentication.ISingleSignOnToken}
  definition: Cqrs.Domain.Saga`1.Id
  name: Id
  nameWithType: Saga<ISingleSignOnToken>.Id
  fullName: Cqrs.Domain.Saga<Cqrs.Authentication.ISingleSignOnToken>.Id
  nameWithType.vb: Saga(Of ISingleSignOnToken).Id
  fullName.vb: Cqrs.Domain.Saga(Of Cqrs.Authentication.ISingleSignOnToken).Id
- uid: Cqrs.Domain.Saga{Cqrs.Authentication.ISingleSignOnToken}.Version
  commentId: P:Cqrs.Domain.Saga{Cqrs.Authentication.ISingleSignOnToken}.Version
  parent: Cqrs.Domain.Saga{Cqrs.Authentication.ISingleSignOnToken}
  definition: Cqrs.Domain.Saga`1.Version
  name: Version
  nameWithType: Saga<ISingleSignOnToken>.Version
  fullName: Cqrs.Domain.Saga<Cqrs.Authentication.ISingleSignOnToken>.Version
  nameWithType.vb: Saga(Of ISingleSignOnToken).Version
  fullName.vb: Cqrs.Domain.Saga(Of Cqrs.Authentication.ISingleSignOnToken).Version
- uid: Cqrs.Domain.Saga{Cqrs.Authentication.ISingleSignOnToken}.CommandPublisher
  commentId: P:Cqrs.Domain.Saga{Cqrs.Authentication.ISingleSignOnToken}.CommandPublisher
  parent: Cqrs.Domain.Saga{Cqrs.Authentication.ISingleSignOnToken}
  definition: Cqrs.Domain.Saga`1.CommandPublisher
  name: CommandPublisher
  nameWithType: Saga<ISingleSignOnToken>.CommandPublisher
  fullName: Cqrs.Domain.Saga<Cqrs.Authentication.ISingleSignOnToken>.CommandPublisher
  nameWithType.vb: Saga(Of ISingleSignOnToken).CommandPublisher
  fullName.vb: Cqrs.Domain.Saga(Of Cqrs.Authentication.ISingleSignOnToken).CommandPublisher
- uid: Cqrs.Domain.Saga{Cqrs.Authentication.ISingleSignOnToken}.DependencyResolver
  commentId: P:Cqrs.Domain.Saga{Cqrs.Authentication.ISingleSignOnToken}.DependencyResolver
  parent: Cqrs.Domain.Saga{Cqrs.Authentication.ISingleSignOnToken}
  definition: Cqrs.Domain.Saga`1.DependencyResolver
  name: DependencyResolver
  nameWithType: Saga<ISingleSignOnToken>.DependencyResolver
  fullName: Cqrs.Domain.Saga<Cqrs.Authentication.ISingleSignOnToken>.DependencyResolver
  nameWithType.vb: Saga(Of ISingleSignOnToken).DependencyResolver
  fullName.vb: Cqrs.Domain.Saga(Of Cqrs.Authentication.ISingleSignOnToken).DependencyResolver
- uid: Cqrs.Domain.Saga{Cqrs.Authentication.ISingleSignOnToken}.Logger
  commentId: P:Cqrs.Domain.Saga{Cqrs.Authentication.ISingleSignOnToken}.Logger
  parent: Cqrs.Domain.Saga{Cqrs.Authentication.ISingleSignOnToken}
  definition: Cqrs.Domain.Saga`1.Logger
  name: Logger
  nameWithType: Saga<ISingleSignOnToken>.Logger
  fullName: Cqrs.Domain.Saga<Cqrs.Authentication.ISingleSignOnToken>.Logger
  nameWithType.vb: Saga(Of ISingleSignOnToken).Logger
  fullName.vb: Cqrs.Domain.Saga(Of Cqrs.Authentication.ISingleSignOnToken).Logger
- uid: Cqrs.Domain.Saga{Cqrs.Authentication.ISingleSignOnToken}.GetUncommittedChanges
  commentId: M:Cqrs.Domain.Saga{Cqrs.Authentication.ISingleSignOnToken}.GetUncommittedChanges
  parent: Cqrs.Domain.Saga{Cqrs.Authentication.ISingleSignOnToken}
  definition: Cqrs.Domain.Saga`1.GetUncommittedChanges
  name: GetUncommittedChanges()
  nameWithType: Saga<ISingleSignOnToken>.GetUncommittedChanges()
  fullName: Cqrs.Domain.Saga<Cqrs.Authentication.ISingleSignOnToken>.GetUncommittedChanges()
  nameWithType.vb: Saga(Of ISingleSignOnToken).GetUncommittedChanges()
  fullName.vb: Cqrs.Domain.Saga(Of Cqrs.Authentication.ISingleSignOnToken).GetUncommittedChanges()
  spec.csharp:
  - uid: Cqrs.Domain.Saga`1.GetUncommittedChanges
    name: GetUncommittedChanges
    nameWithType: Saga<ISingleSignOnToken>.GetUncommittedChanges
    fullName: Cqrs.Domain.Saga<Cqrs.Authentication.ISingleSignOnToken>.GetUncommittedChanges
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Domain.Saga`1.GetUncommittedChanges
    name: GetUncommittedChanges
    nameWithType: Saga(Of ISingleSignOnToken).GetUncommittedChanges
    fullName: Cqrs.Domain.Saga(Of Cqrs.Authentication.ISingleSignOnToken).GetUncommittedChanges
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Domain.Saga{Cqrs.Authentication.ISingleSignOnToken}.MarkChangesAsCommitted
  commentId: M:Cqrs.Domain.Saga{Cqrs.Authentication.ISingleSignOnToken}.MarkChangesAsCommitted
  parent: Cqrs.Domain.Saga{Cqrs.Authentication.ISingleSignOnToken}
  definition: Cqrs.Domain.Saga`1.MarkChangesAsCommitted
  name: MarkChangesAsCommitted()
  nameWithType: Saga<ISingleSignOnToken>.MarkChangesAsCommitted()
  fullName: Cqrs.Domain.Saga<Cqrs.Authentication.ISingleSignOnToken>.MarkChangesAsCommitted()
  nameWithType.vb: Saga(Of ISingleSignOnToken).MarkChangesAsCommitted()
  fullName.vb: Cqrs.Domain.Saga(Of Cqrs.Authentication.ISingleSignOnToken).MarkChangesAsCommitted()
  spec.csharp:
  - uid: Cqrs.Domain.Saga`1.MarkChangesAsCommitted
    name: MarkChangesAsCommitted
    nameWithType: Saga<ISingleSignOnToken>.MarkChangesAsCommitted
    fullName: Cqrs.Domain.Saga<Cqrs.Authentication.ISingleSignOnToken>.MarkChangesAsCommitted
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Domain.Saga`1.MarkChangesAsCommitted
    name: MarkChangesAsCommitted
    nameWithType: Saga(Of ISingleSignOnToken).MarkChangesAsCommitted
    fullName: Cqrs.Domain.Saga(Of Cqrs.Authentication.ISingleSignOnToken).MarkChangesAsCommitted
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Domain.Saga{Cqrs.Authentication.ISingleSignOnToken}.LoadFromHistory(System.Collections.Generic.IEnumerable{Cqrs.Events.ISagaEvent{Cqrs.Authentication.ISingleSignOnToken}})
  commentId: M:Cqrs.Domain.Saga{Cqrs.Authentication.ISingleSignOnToken}.LoadFromHistory(System.Collections.Generic.IEnumerable{Cqrs.Events.ISagaEvent{Cqrs.Authentication.ISingleSignOnToken}})
  parent: Cqrs.Domain.Saga{Cqrs.Authentication.ISingleSignOnToken}
  definition: Cqrs.Domain.Saga`1.LoadFromHistory(System.Collections.Generic.IEnumerable{Cqrs.Events.ISagaEvent{`0}})
  name: LoadFromHistory(IEnumerable<ISagaEvent<ISingleSignOnToken>>)
  nameWithType: Saga<ISingleSignOnToken>.LoadFromHistory(IEnumerable<ISagaEvent<ISingleSignOnToken>>)
  fullName: Cqrs.Domain.Saga<Cqrs.Authentication.ISingleSignOnToken>.LoadFromHistory(System.Collections.Generic.IEnumerable<Cqrs.Events.ISagaEvent<Cqrs.Authentication.ISingleSignOnToken>>)
  nameWithType.vb: Saga(Of ISingleSignOnToken).LoadFromHistory(IEnumerable(Of ISagaEvent(Of ISingleSignOnToken)))
  fullName.vb: Cqrs.Domain.Saga(Of Cqrs.Authentication.ISingleSignOnToken).LoadFromHistory(System.Collections.Generic.IEnumerable(Of Cqrs.Events.ISagaEvent(Of Cqrs.Authentication.ISingleSignOnToken)))
  name.vb: LoadFromHistory(IEnumerable(Of ISagaEvent(Of ISingleSignOnToken)))
  spec.csharp:
  - uid: Cqrs.Domain.Saga`1.LoadFromHistory(System.Collections.Generic.IEnumerable{Cqrs.Events.ISagaEvent{`0}})
    name: LoadFromHistory
    nameWithType: Saga<ISingleSignOnToken>.LoadFromHistory
    fullName: Cqrs.Domain.Saga<Cqrs.Authentication.ISingleSignOnToken>.LoadFromHistory
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cqrs.Events.ISagaEvent`1
    name: ISagaEvent
    nameWithType: ISagaEvent
    fullName: Cqrs.Events.ISagaEvent
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cqrs.Authentication.ISingleSignOnToken
    name: ISingleSignOnToken
    nameWithType: ISingleSignOnToken
    fullName: Cqrs.Authentication.ISingleSignOnToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Domain.Saga`1.LoadFromHistory(System.Collections.Generic.IEnumerable{Cqrs.Events.ISagaEvent{`0}})
    name: LoadFromHistory
    nameWithType: Saga(Of ISingleSignOnToken).LoadFromHistory
    fullName: Cqrs.Domain.Saga(Of Cqrs.Authentication.ISingleSignOnToken).LoadFromHistory
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Cqrs.Events.ISagaEvent`1
    name: ISagaEvent
    nameWithType: ISagaEvent
    fullName: Cqrs.Events.ISagaEvent
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Cqrs.Authentication.ISingleSignOnToken
    name: ISingleSignOnToken
    nameWithType: ISingleSignOnToken
    fullName: Cqrs.Authentication.ISingleSignOnToken
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Domain.Saga{Cqrs.Authentication.ISingleSignOnToken}.ApplyChange(Cqrs.Events.ISagaEvent{Cqrs.Authentication.ISingleSignOnToken})
  commentId: M:Cqrs.Domain.Saga{Cqrs.Authentication.ISingleSignOnToken}.ApplyChange(Cqrs.Events.ISagaEvent{Cqrs.Authentication.ISingleSignOnToken})
  parent: Cqrs.Domain.Saga{Cqrs.Authentication.ISingleSignOnToken}
  definition: Cqrs.Domain.Saga`1.ApplyChange(Cqrs.Events.ISagaEvent{`0})
  name: ApplyChange(ISagaEvent<ISingleSignOnToken>)
  nameWithType: Saga<ISingleSignOnToken>.ApplyChange(ISagaEvent<ISingleSignOnToken>)
  fullName: Cqrs.Domain.Saga<Cqrs.Authentication.ISingleSignOnToken>.ApplyChange(Cqrs.Events.ISagaEvent<Cqrs.Authentication.ISingleSignOnToken>)
  nameWithType.vb: Saga(Of ISingleSignOnToken).ApplyChange(ISagaEvent(Of ISingleSignOnToken))
  fullName.vb: Cqrs.Domain.Saga(Of Cqrs.Authentication.ISingleSignOnToken).ApplyChange(Cqrs.Events.ISagaEvent(Of Cqrs.Authentication.ISingleSignOnToken))
  name.vb: ApplyChange(ISagaEvent(Of ISingleSignOnToken))
  spec.csharp:
  - uid: Cqrs.Domain.Saga`1.ApplyChange(Cqrs.Events.ISagaEvent{`0})
    name: ApplyChange
    nameWithType: Saga<ISingleSignOnToken>.ApplyChange
    fullName: Cqrs.Domain.Saga<Cqrs.Authentication.ISingleSignOnToken>.ApplyChange
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Events.ISagaEvent`1
    name: ISagaEvent
    nameWithType: ISagaEvent
    fullName: Cqrs.Events.ISagaEvent
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cqrs.Authentication.ISingleSignOnToken
    name: ISingleSignOnToken
    nameWithType: ISingleSignOnToken
    fullName: Cqrs.Authentication.ISingleSignOnToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Domain.Saga`1.ApplyChange(Cqrs.Events.ISagaEvent{`0})
    name: ApplyChange
    nameWithType: Saga(Of ISingleSignOnToken).ApplyChange
    fullName: Cqrs.Domain.Saga(Of Cqrs.Authentication.ISingleSignOnToken).ApplyChange
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Events.ISagaEvent`1
    name: ISagaEvent
    nameWithType: ISagaEvent
    fullName: Cqrs.Events.ISagaEvent
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Cqrs.Authentication.ISingleSignOnToken
    name: ISingleSignOnToken
    nameWithType: ISingleSignOnToken
    fullName: Cqrs.Authentication.ISingleSignOnToken
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Domain.Saga{Cqrs.Authentication.ISingleSignOnToken}.ApplyChange(Cqrs.Events.IEvent{Cqrs.Authentication.ISingleSignOnToken})
  commentId: M:Cqrs.Domain.Saga{Cqrs.Authentication.ISingleSignOnToken}.ApplyChange(Cqrs.Events.IEvent{Cqrs.Authentication.ISingleSignOnToken})
  parent: Cqrs.Domain.Saga{Cqrs.Authentication.ISingleSignOnToken}
  definition: Cqrs.Domain.Saga`1.ApplyChange(Cqrs.Events.IEvent{`0})
  name: ApplyChange(IEvent<ISingleSignOnToken>)
  nameWithType: Saga<ISingleSignOnToken>.ApplyChange(IEvent<ISingleSignOnToken>)
  fullName: Cqrs.Domain.Saga<Cqrs.Authentication.ISingleSignOnToken>.ApplyChange(Cqrs.Events.IEvent<Cqrs.Authentication.ISingleSignOnToken>)
  nameWithType.vb: Saga(Of ISingleSignOnToken).ApplyChange(IEvent(Of ISingleSignOnToken))
  fullName.vb: Cqrs.Domain.Saga(Of Cqrs.Authentication.ISingleSignOnToken).ApplyChange(Cqrs.Events.IEvent(Of Cqrs.Authentication.ISingleSignOnToken))
  name.vb: ApplyChange(IEvent(Of ISingleSignOnToken))
  spec.csharp:
  - uid: Cqrs.Domain.Saga`1.ApplyChange(Cqrs.Events.IEvent{`0})
    name: ApplyChange
    nameWithType: Saga<ISingleSignOnToken>.ApplyChange
    fullName: Cqrs.Domain.Saga<Cqrs.Authentication.ISingleSignOnToken>.ApplyChange
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cqrs.Authentication.ISingleSignOnToken
    name: ISingleSignOnToken
    nameWithType: ISingleSignOnToken
    fullName: Cqrs.Authentication.ISingleSignOnToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Domain.Saga`1.ApplyChange(Cqrs.Events.IEvent{`0})
    name: ApplyChange
    nameWithType: Saga(Of ISingleSignOnToken).ApplyChange
    fullName: Cqrs.Domain.Saga(Of Cqrs.Authentication.ISingleSignOnToken).ApplyChange
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Cqrs.Authentication.ISingleSignOnToken
    name: ISingleSignOnToken
    nameWithType: ISingleSignOnToken
    fullName: Cqrs.Authentication.ISingleSignOnToken
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Cqrs.Domain.Saga`1
  commentId: T:Cqrs.Domain.Saga`1
  isExternal: false
  name: Saga<TAuthenticationToken>
  nameWithType: Saga<TAuthenticationToken>
  fullName: Cqrs.Domain.Saga<TAuthenticationToken>
  nameWithType.vb: Saga(Of TAuthenticationToken)
  fullName.vb: Cqrs.Domain.Saga(Of TAuthenticationToken)
  name.vb: Saga(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Domain.Saga`1
    name: Saga
    nameWithType: Saga
    fullName: Cqrs.Domain.Saga
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Domain.Saga`1
    name: Saga
    nameWithType: Saga
    fullName: Cqrs.Domain.Saga
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Domain
  commentId: N:Cqrs.Domain
  isExternal: false
  name: Cqrs.Domain
  nameWithType: Cqrs.Domain
  fullName: Cqrs.Domain
- uid: Cqrs.Domain.ISaga`1
  commentId: T:Cqrs.Domain.ISaga`1
  isExternal: false
  name: ISaga<TAuthenticationToken>
  nameWithType: ISaga<TAuthenticationToken>
  fullName: Cqrs.Domain.ISaga<TAuthenticationToken>
  nameWithType.vb: ISaga(Of TAuthenticationToken)
  fullName.vb: Cqrs.Domain.ISaga(Of TAuthenticationToken)
  name.vb: ISaga(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Domain.ISaga`1
    name: ISaga
    nameWithType: ISaga
    fullName: Cqrs.Domain.ISaga
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Domain.ISaga`1
    name: ISaga
    nameWithType: ISaga
    fullName: Cqrs.Domain.ISaga
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Domain.Saga`1.Rsn
  commentId: P:Cqrs.Domain.Saga`1.Rsn
  isExternal: false
  name: Rsn
  nameWithType: Saga<TAuthenticationToken>.Rsn
  fullName: Cqrs.Domain.Saga<TAuthenticationToken>.Rsn
  nameWithType.vb: Saga(Of TAuthenticationToken).Rsn
  fullName.vb: Cqrs.Domain.Saga(Of TAuthenticationToken).Rsn
- uid: Cqrs.Domain.Saga`1.Id
  commentId: P:Cqrs.Domain.Saga`1.Id
  isExternal: false
  name: Id
  nameWithType: Saga<TAuthenticationToken>.Id
  fullName: Cqrs.Domain.Saga<TAuthenticationToken>.Id
  nameWithType.vb: Saga(Of TAuthenticationToken).Id
  fullName.vb: Cqrs.Domain.Saga(Of TAuthenticationToken).Id
- uid: Cqrs.Domain.Saga`1.Version
  commentId: P:Cqrs.Domain.Saga`1.Version
  isExternal: false
  name: Version
  nameWithType: Saga<TAuthenticationToken>.Version
  fullName: Cqrs.Domain.Saga<TAuthenticationToken>.Version
  nameWithType.vb: Saga(Of TAuthenticationToken).Version
  fullName.vb: Cqrs.Domain.Saga(Of TAuthenticationToken).Version
- uid: Cqrs.Domain.Saga`1.CommandPublisher
  commentId: P:Cqrs.Domain.Saga`1.CommandPublisher
  isExternal: false
  name: CommandPublisher
  nameWithType: Saga<TAuthenticationToken>.CommandPublisher
  fullName: Cqrs.Domain.Saga<TAuthenticationToken>.CommandPublisher
  nameWithType.vb: Saga(Of TAuthenticationToken).CommandPublisher
  fullName.vb: Cqrs.Domain.Saga(Of TAuthenticationToken).CommandPublisher
- uid: Cqrs.Domain.Saga`1.DependencyResolver
  commentId: P:Cqrs.Domain.Saga`1.DependencyResolver
  isExternal: false
  name: DependencyResolver
  nameWithType: Saga<TAuthenticationToken>.DependencyResolver
  fullName: Cqrs.Domain.Saga<TAuthenticationToken>.DependencyResolver
  nameWithType.vb: Saga(Of TAuthenticationToken).DependencyResolver
  fullName.vb: Cqrs.Domain.Saga(Of TAuthenticationToken).DependencyResolver
- uid: Cqrs.Domain.Saga`1.Logger
  commentId: P:Cqrs.Domain.Saga`1.Logger
  isExternal: false
  name: Logger
  nameWithType: Saga<TAuthenticationToken>.Logger
  fullName: Cqrs.Domain.Saga<TAuthenticationToken>.Logger
  nameWithType.vb: Saga(Of TAuthenticationToken).Logger
  fullName.vb: Cqrs.Domain.Saga(Of TAuthenticationToken).Logger
- uid: Cqrs.Domain.Saga`1.GetUncommittedChanges
  commentId: M:Cqrs.Domain.Saga`1.GetUncommittedChanges
  isExternal: false
  name: GetUncommittedChanges()
  nameWithType: Saga<TAuthenticationToken>.GetUncommittedChanges()
  fullName: Cqrs.Domain.Saga<TAuthenticationToken>.GetUncommittedChanges()
  nameWithType.vb: Saga(Of TAuthenticationToken).GetUncommittedChanges()
  fullName.vb: Cqrs.Domain.Saga(Of TAuthenticationToken).GetUncommittedChanges()
  spec.csharp:
  - uid: Cqrs.Domain.Saga`1.GetUncommittedChanges
    name: GetUncommittedChanges
    nameWithType: Saga<TAuthenticationToken>.GetUncommittedChanges
    fullName: Cqrs.Domain.Saga<TAuthenticationToken>.GetUncommittedChanges
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Domain.Saga`1.GetUncommittedChanges
    name: GetUncommittedChanges
    nameWithType: Saga(Of TAuthenticationToken).GetUncommittedChanges
    fullName: Cqrs.Domain.Saga(Of TAuthenticationToken).GetUncommittedChanges
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Domain.Saga`1.MarkChangesAsCommitted
  commentId: M:Cqrs.Domain.Saga`1.MarkChangesAsCommitted
  isExternal: false
  name: MarkChangesAsCommitted()
  nameWithType: Saga<TAuthenticationToken>.MarkChangesAsCommitted()
  fullName: Cqrs.Domain.Saga<TAuthenticationToken>.MarkChangesAsCommitted()
  nameWithType.vb: Saga(Of TAuthenticationToken).MarkChangesAsCommitted()
  fullName.vb: Cqrs.Domain.Saga(Of TAuthenticationToken).MarkChangesAsCommitted()
  spec.csharp:
  - uid: Cqrs.Domain.Saga`1.MarkChangesAsCommitted
    name: MarkChangesAsCommitted
    nameWithType: Saga<TAuthenticationToken>.MarkChangesAsCommitted
    fullName: Cqrs.Domain.Saga<TAuthenticationToken>.MarkChangesAsCommitted
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Domain.Saga`1.MarkChangesAsCommitted
    name: MarkChangesAsCommitted
    nameWithType: Saga(Of TAuthenticationToken).MarkChangesAsCommitted
    fullName: Cqrs.Domain.Saga(Of TAuthenticationToken).MarkChangesAsCommitted
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Domain.Saga`1.LoadFromHistory(System.Collections.Generic.IEnumerable{Cqrs.Events.ISagaEvent{`0}})
  commentId: M:Cqrs.Domain.Saga`1.LoadFromHistory(System.Collections.Generic.IEnumerable{Cqrs.Events.ISagaEvent{`0}})
  isExternal: true
  name: LoadFromHistory(IEnumerable<ISagaEvent<TAuthenticationToken>>)
  nameWithType: Saga<TAuthenticationToken>.LoadFromHistory(IEnumerable<ISagaEvent<TAuthenticationToken>>)
  fullName: Cqrs.Domain.Saga<TAuthenticationToken>.LoadFromHistory(System.Collections.Generic.IEnumerable<Cqrs.Events.ISagaEvent<TAuthenticationToken>>)
  nameWithType.vb: Saga(Of TAuthenticationToken).LoadFromHistory(IEnumerable(Of ISagaEvent(Of TAuthenticationToken)))
  fullName.vb: Cqrs.Domain.Saga(Of TAuthenticationToken).LoadFromHistory(System.Collections.Generic.IEnumerable(Of Cqrs.Events.ISagaEvent(Of TAuthenticationToken)))
  name.vb: LoadFromHistory(IEnumerable(Of ISagaEvent(Of TAuthenticationToken)))
  spec.csharp:
  - uid: Cqrs.Domain.Saga`1.LoadFromHistory(System.Collections.Generic.IEnumerable{Cqrs.Events.ISagaEvent{`0}})
    name: LoadFromHistory
    nameWithType: Saga<TAuthenticationToken>.LoadFromHistory
    fullName: Cqrs.Domain.Saga<TAuthenticationToken>.LoadFromHistory
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cqrs.Events.ISagaEvent`1
    name: ISagaEvent
    nameWithType: ISagaEvent
    fullName: Cqrs.Events.ISagaEvent
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Domain.Saga`1.LoadFromHistory(System.Collections.Generic.IEnumerable{Cqrs.Events.ISagaEvent{`0}})
    name: LoadFromHistory
    nameWithType: Saga(Of TAuthenticationToken).LoadFromHistory
    fullName: Cqrs.Domain.Saga(Of TAuthenticationToken).LoadFromHistory
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Cqrs.Events.ISagaEvent`1
    name: ISagaEvent
    nameWithType: ISagaEvent
    fullName: Cqrs.Events.ISagaEvent
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Domain.Saga`1.ApplyChange(Cqrs.Events.ISagaEvent{`0})
  commentId: M:Cqrs.Domain.Saga`1.ApplyChange(Cqrs.Events.ISagaEvent{`0})
  isExternal: false
  name: ApplyChange(ISagaEvent<TAuthenticationToken>)
  nameWithType: Saga<TAuthenticationToken>.ApplyChange(ISagaEvent<TAuthenticationToken>)
  fullName: Cqrs.Domain.Saga<TAuthenticationToken>.ApplyChange(Cqrs.Events.ISagaEvent<TAuthenticationToken>)
  nameWithType.vb: Saga(Of TAuthenticationToken).ApplyChange(ISagaEvent(Of TAuthenticationToken))
  fullName.vb: Cqrs.Domain.Saga(Of TAuthenticationToken).ApplyChange(Cqrs.Events.ISagaEvent(Of TAuthenticationToken))
  name.vb: ApplyChange(ISagaEvent(Of TAuthenticationToken))
  spec.csharp:
  - uid: Cqrs.Domain.Saga`1.ApplyChange(Cqrs.Events.ISagaEvent{`0})
    name: ApplyChange
    nameWithType: Saga<TAuthenticationToken>.ApplyChange
    fullName: Cqrs.Domain.Saga<TAuthenticationToken>.ApplyChange
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Events.ISagaEvent`1
    name: ISagaEvent
    nameWithType: ISagaEvent
    fullName: Cqrs.Events.ISagaEvent
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Domain.Saga`1.ApplyChange(Cqrs.Events.ISagaEvent{`0})
    name: ApplyChange
    nameWithType: Saga(Of TAuthenticationToken).ApplyChange
    fullName: Cqrs.Domain.Saga(Of TAuthenticationToken).ApplyChange
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Events.ISagaEvent`1
    name: ISagaEvent
    nameWithType: ISagaEvent
    fullName: Cqrs.Events.ISagaEvent
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Domain.Saga`1.ApplyChange(Cqrs.Events.IEvent{`0})
  commentId: M:Cqrs.Domain.Saga`1.ApplyChange(Cqrs.Events.IEvent{`0})
  isExternal: false
  name: ApplyChange(IEvent<TAuthenticationToken>)
  nameWithType: Saga<TAuthenticationToken>.ApplyChange(IEvent<TAuthenticationToken>)
  fullName: Cqrs.Domain.Saga<TAuthenticationToken>.ApplyChange(Cqrs.Events.IEvent<TAuthenticationToken>)
  nameWithType.vb: Saga(Of TAuthenticationToken).ApplyChange(IEvent(Of TAuthenticationToken))
  fullName.vb: Cqrs.Domain.Saga(Of TAuthenticationToken).ApplyChange(Cqrs.Events.IEvent(Of TAuthenticationToken))
  name.vb: ApplyChange(IEvent(Of TAuthenticationToken))
  spec.csharp:
  - uid: Cqrs.Domain.Saga`1.ApplyChange(Cqrs.Events.IEvent{`0})
    name: ApplyChange
    nameWithType: Saga<TAuthenticationToken>.ApplyChange
    fullName: Cqrs.Domain.Saga<TAuthenticationToken>.ApplyChange
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Domain.Saga`1.ApplyChange(Cqrs.Events.IEvent{`0})
    name: ApplyChange
    nameWithType: Saga(Of TAuthenticationToken).ApplyChange
    fullName: Cqrs.Domain.Saga(Of TAuthenticationToken).ApplyChange
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Cqrs.Tests.Substitutes.TestSaga.#ctor*
  commentId: Overload:Cqrs.Tests.Substitutes.TestSaga.#ctor
  isExternal: false
  name: TestSaga
  nameWithType: TestSaga.TestSaga
  fullName: Cqrs.Tests.Substitutes.TestSaga.TestSaga
- uid: Cqrs.Configuration.IDependencyResolver
  commentId: T:Cqrs.Configuration.IDependencyResolver
  parent: Cqrs.Configuration
  isExternal: false
  name: IDependencyResolver
  nameWithType: IDependencyResolver
  fullName: Cqrs.Configuration.IDependencyResolver
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: Cqrs.Configuration
  commentId: N:Cqrs.Configuration
  isExternal: false
  name: Cqrs.Configuration
  nameWithType: Cqrs.Configuration
  fullName: Cqrs.Configuration
- uid: Cqrs.Tests.Substitutes.TestSaga.Handle*
  commentId: Overload:Cqrs.Tests.Substitutes.TestSaga.Handle
  isExternal: false
  name: Handle
  nameWithType: TestSaga.Handle
  fullName: Cqrs.Tests.Substitutes.TestSaga.Handle
- uid: Cqrs.Tests.Substitutes.TestAggregateDidSomething
  commentId: T:Cqrs.Tests.Substitutes.TestAggregateDidSomething
  parent: Cqrs.Tests.Substitutes
  isExternal: false
  name: TestAggregateDidSomething
  nameWithType: TestAggregateDidSomething
  fullName: Cqrs.Tests.Substitutes.TestAggregateDidSomething
- uid: Cqrs.Tests.Substitutes.TestAggregateDidSomethingElse
  commentId: T:Cqrs.Tests.Substitutes.TestAggregateDidSomethingElse
  parent: Cqrs.Tests.Substitutes
  isExternal: false
  name: TestAggregateDidSomethingElse
  nameWithType: TestAggregateDidSomethingElse
  fullName: Cqrs.Tests.Substitutes.TestAggregateDidSomethingElse
- uid: Cqrs.Tests.Substitutes.TestAggregateDidSomethingElse2
  commentId: T:Cqrs.Tests.Substitutes.TestAggregateDidSomethingElse2
  parent: Cqrs.Tests.Substitutes
  isExternal: false
  name: TestAggregateDidSomethingElse2
  nameWithType: TestAggregateDidSomethingElse2
  fullName: Cqrs.Tests.Substitutes.TestAggregateDidSomethingElse2
- uid: Cqrs.Tests.Substitutes.TestSaga.Apply*
  commentId: Overload:Cqrs.Tests.Substitutes.TestSaga.Apply
  isExternal: false
  name: Apply
  nameWithType: TestSaga.Apply
  fullName: Cqrs.Tests.Substitutes.TestSaga.Apply
