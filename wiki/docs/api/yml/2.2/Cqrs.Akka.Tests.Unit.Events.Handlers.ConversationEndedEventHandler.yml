### YamlMime:ManagedReference
items:
- uid: Cqrs.Akka.Tests.Unit.Events.Handlers.ConversationEndedEventHandler
  commentId: T:Cqrs.Akka.Tests.Unit.Events.Handlers.ConversationEndedEventHandler
  id: ConversationEndedEventHandler
  parent: Cqrs.Akka.Tests.Unit.Events.Handlers
  children:
  - Cqrs.Akka.Tests.Unit.Events.Handlers.ConversationEndedEventHandler.#ctor(Cqrs.Akka.Commands.IAkkaCommandPublisher{System.Guid})
  - Cqrs.Akka.Tests.Unit.Events.Handlers.ConversationEndedEventHandler.CommandBus
  - Cqrs.Akka.Tests.Unit.Events.Handlers.ConversationEndedEventHandler.Handle(Cqrs.Akka.Tests.Unit.Events.ConversationEnded)
  langs:
  - csharp
  - vb
  name: ConversationEndedEventHandler
  nameWithType: ConversationEndedEventHandler
  fullName: Cqrs.Akka.Tests.Unit.Events.Handlers.ConversationEndedEventHandler
  type: Class
  source:
    remote:
      path: Framework/Akka.Net/Cqrs.Akka.Tests.Unit/Events/Handlers/ConversationEndedEventHandler.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: ConversationEndedEventHandler
    path: Framework/Akka.Net/Cqrs.Akka.Tests.Unit/Events/Handlers/ConversationEndedEventHandler.cs
    startLine: 18
  assemblies:
  - Cqrs.Akka.Tests.Unit
  namespace: Cqrs.Akka.Tests.Unit.Events.Handlers
  summary: "\nHandles the <xref href=\"Cqrs.Akka.Tests.Unit.Events.ConversationEnded\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: 'public class ConversationEndedEventHandler : IEventHandler<Guid, ConversationEnded>, IMessageHandler<ConversationEnded>, IEventHandler, IHandler'
    content.vb: >-
      Public Class ConversationEndedEventHandler

          Implements IEventHandler(Of Guid, ConversationEnded), IMessageHandler(Of ConversationEnded), IEventHandler, IHandler
  inheritance:
  - System.Object
  implements:
  - Cqrs.Events.IEventHandler{System.Guid,Cqrs.Akka.Tests.Unit.Events.ConversationEnded}
  - Cqrs.Messages.IMessageHandler{Cqrs.Akka.Tests.Unit.Events.ConversationEnded}
  - Cqrs.Events.IEventHandler
  - Cqrs.Messages.IHandler
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Cqrs.Akka.Tests.Unit.Events.Handlers.ConversationEndedEventHandler.#ctor(Cqrs.Akka.Commands.IAkkaCommandPublisher{System.Guid})
  commentId: M:Cqrs.Akka.Tests.Unit.Events.Handlers.ConversationEndedEventHandler.#ctor(Cqrs.Akka.Commands.IAkkaCommandPublisher{System.Guid})
  id: '#ctor(Cqrs.Akka.Commands.IAkkaCommandPublisher{System.Guid})'
  parent: Cqrs.Akka.Tests.Unit.Events.Handlers.ConversationEndedEventHandler
  langs:
  - csharp
  - vb
  name: ConversationEndedEventHandler(IAkkaCommandPublisher<Guid>)
  nameWithType: ConversationEndedEventHandler.ConversationEndedEventHandler(IAkkaCommandPublisher<Guid>)
  fullName: Cqrs.Akka.Tests.Unit.Events.Handlers.ConversationEndedEventHandler.ConversationEndedEventHandler(Cqrs.Akka.Commands.IAkkaCommandPublisher<System.Guid>)
  type: Constructor
  source:
    remote:
      path: Framework/Akka.Net/Cqrs.Akka.Tests.Unit/Events/Handlers/ConversationEndedEventHandler.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: .ctor
    path: Framework/Akka.Net/Cqrs.Akka.Tests.Unit/Events/Handlers/ConversationEndedEventHandler.cs
    startLine: 24
  assemblies:
  - Cqrs.Akka.Tests.Unit
  namespace: Cqrs.Akka.Tests.Unit.Events.Handlers
  summary: "\nInstantiates a new instance of <xref href=\"Cqrs.Akka.Tests.Unit.Events.Handlers.ConversationEndedEventHandler\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public ConversationEndedEventHandler(IAkkaCommandPublisher<Guid> commandBus)
    parameters:
    - id: commandBus
      type: Cqrs.Akka.Commands.IAkkaCommandPublisher{System.Guid}
    content.vb: Public Sub New(commandBus As IAkkaCommandPublisher(Of Guid))
  overload: Cqrs.Akka.Tests.Unit.Events.Handlers.ConversationEndedEventHandler.#ctor*
  nameWithType.vb: ConversationEndedEventHandler.ConversationEndedEventHandler(IAkkaCommandPublisher(Of Guid))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Cqrs.Akka.Tests.Unit.Events.Handlers.ConversationEndedEventHandler.ConversationEndedEventHandler(Cqrs.Akka.Commands.IAkkaCommandPublisher(Of System.Guid))
  name.vb: ConversationEndedEventHandler(IAkkaCommandPublisher(Of Guid))
- uid: Cqrs.Akka.Tests.Unit.Events.Handlers.ConversationEndedEventHandler.CommandBus
  commentId: P:Cqrs.Akka.Tests.Unit.Events.Handlers.ConversationEndedEventHandler.CommandBus
  id: CommandBus
  parent: Cqrs.Akka.Tests.Unit.Events.Handlers.ConversationEndedEventHandler
  langs:
  - csharp
  - vb
  name: CommandBus
  nameWithType: ConversationEndedEventHandler.CommandBus
  fullName: Cqrs.Akka.Tests.Unit.Events.Handlers.ConversationEndedEventHandler.CommandBus
  type: Property
  source:
    remote:
      path: Framework/Akka.Net/Cqrs.Akka.Tests.Unit/Events/Handlers/ConversationEndedEventHandler.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: CommandBus
    path: Framework/Akka.Net/Cqrs.Akka.Tests.Unit/Events/Handlers/ConversationEndedEventHandler.cs
    startLine: 32
  assemblies:
  - Cqrs.Akka.Tests.Unit
  namespace: Cqrs.Akka.Tests.Unit.Events.Handlers
  summary: "\nPublish any <xref href=\"Cqrs.Commands.ICommand%601\" data-throw-if-not-resolved=\"false\"></xref> instances that you want to send with this.\n"
  example: []
  syntax:
    content: protected ICommandPublisher<Guid> CommandBus { get; }
    parameters: []
    return:
      type: Cqrs.Commands.ICommandPublisher{System.Guid}
    content.vb: Protected ReadOnly Property CommandBus As ICommandPublisher(Of Guid)
  overload: Cqrs.Akka.Tests.Unit.Events.Handlers.ConversationEndedEventHandler.CommandBus*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Cqrs.Akka.Tests.Unit.Events.Handlers.ConversationEndedEventHandler.Handle(Cqrs.Akka.Tests.Unit.Events.ConversationEnded)
  commentId: M:Cqrs.Akka.Tests.Unit.Events.Handlers.ConversationEndedEventHandler.Handle(Cqrs.Akka.Tests.Unit.Events.ConversationEnded)
  id: Handle(Cqrs.Akka.Tests.Unit.Events.ConversationEnded)
  parent: Cqrs.Akka.Tests.Unit.Events.Handlers.ConversationEndedEventHandler
  langs:
  - csharp
  - vb
  name: Handle(ConversationEnded)
  nameWithType: ConversationEndedEventHandler.Handle(ConversationEnded)
  fullName: Cqrs.Akka.Tests.Unit.Events.Handlers.ConversationEndedEventHandler.Handle(Cqrs.Akka.Tests.Unit.Events.ConversationEnded)
  type: Method
  source:
    remote:
      path: Framework/Akka.Net/Cqrs.Akka.Tests.Unit/Events/Handlers/ConversationEndedEventHandler.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Handle
    path: Framework/Akka.Net/Cqrs.Akka.Tests.Unit/Events/Handlers/ConversationEndedEventHandler.cs
    startLine: 40
  assemblies:
  - Cqrs.Akka.Tests.Unit
  namespace: Cqrs.Akka.Tests.Unit.Events.Handlers
  summary: "\nResponds to the provided <span class=\"paramref\">message</span>.\n"
  example: []
  syntax:
    content: public void Handle(ConversationEnded message)
    parameters:
    - id: message
      type: Cqrs.Akka.Tests.Unit.Events.ConversationEnded
      description: The <xref href="Cqrs.Akka.Tests.Unit.Events.ConversationEnded" data-throw-if-not-resolved="false"></xref> to respond to or &quot;handle&quot;
    content.vb: Public Sub Handle(message As ConversationEnded)
  overload: Cqrs.Akka.Tests.Unit.Events.Handlers.ConversationEndedEventHandler.Handle*
  implements:
  - Cqrs.Messages.IMessageHandler{Cqrs.Akka.Tests.Unit.Events.ConversationEnded}.Handle(Cqrs.Akka.Tests.Unit.Events.ConversationEnded)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Cqrs.Akka.Tests.Unit.Events.ConversationEnded
  commentId: T:Cqrs.Akka.Tests.Unit.Events.ConversationEnded
  parent: Cqrs.Akka.Tests.Unit.Events
  isExternal: false
  name: ConversationEnded
  nameWithType: ConversationEnded
  fullName: Cqrs.Akka.Tests.Unit.Events.ConversationEnded
- uid: Cqrs.Akka.Tests.Unit.Events.Handlers
  commentId: N:Cqrs.Akka.Tests.Unit.Events.Handlers
  isExternal: false
  name: Cqrs.Akka.Tests.Unit.Events.Handlers
  nameWithType: Cqrs.Akka.Tests.Unit.Events.Handlers
  fullName: Cqrs.Akka.Tests.Unit.Events.Handlers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Cqrs.Events.IEventHandler{System.Guid,Cqrs.Akka.Tests.Unit.Events.ConversationEnded}
  commentId: T:Cqrs.Events.IEventHandler{System.Guid,Cqrs.Akka.Tests.Unit.Events.ConversationEnded}
  parent: Cqrs.Events
  definition: Cqrs.Events.IEventHandler`2
  name: IEventHandler<Guid, ConversationEnded>
  nameWithType: IEventHandler<Guid, ConversationEnded>
  fullName: Cqrs.Events.IEventHandler<System.Guid, Cqrs.Akka.Tests.Unit.Events.ConversationEnded>
  nameWithType.vb: IEventHandler(Of Guid, ConversationEnded)
  fullName.vb: Cqrs.Events.IEventHandler(Of System.Guid, Cqrs.Akka.Tests.Unit.Events.ConversationEnded)
  name.vb: IEventHandler(Of Guid, ConversationEnded)
  spec.csharp:
  - uid: Cqrs.Events.IEventHandler`2
    name: IEventHandler
    nameWithType: IEventHandler
    fullName: Cqrs.Events.IEventHandler
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Cqrs.Akka.Tests.Unit.Events.ConversationEnded
    name: ConversationEnded
    nameWithType: ConversationEnded
    fullName: Cqrs.Akka.Tests.Unit.Events.ConversationEnded
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Events.IEventHandler`2
    name: IEventHandler
    nameWithType: IEventHandler
    fullName: Cqrs.Events.IEventHandler
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Cqrs.Akka.Tests.Unit.Events.ConversationEnded
    name: ConversationEnded
    nameWithType: ConversationEnded
    fullName: Cqrs.Akka.Tests.Unit.Events.ConversationEnded
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Messages.IMessageHandler{Cqrs.Akka.Tests.Unit.Events.ConversationEnded}
  commentId: T:Cqrs.Messages.IMessageHandler{Cqrs.Akka.Tests.Unit.Events.ConversationEnded}
  parent: Cqrs.Messages
  definition: Cqrs.Messages.IMessageHandler`1
  name: IMessageHandler<ConversationEnded>
  nameWithType: IMessageHandler<ConversationEnded>
  fullName: Cqrs.Messages.IMessageHandler<Cqrs.Akka.Tests.Unit.Events.ConversationEnded>
  nameWithType.vb: IMessageHandler(Of ConversationEnded)
  fullName.vb: Cqrs.Messages.IMessageHandler(Of Cqrs.Akka.Tests.Unit.Events.ConversationEnded)
  name.vb: IMessageHandler(Of ConversationEnded)
  spec.csharp:
  - uid: Cqrs.Messages.IMessageHandler`1
    name: IMessageHandler
    nameWithType: IMessageHandler
    fullName: Cqrs.Messages.IMessageHandler
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cqrs.Akka.Tests.Unit.Events.ConversationEnded
    name: ConversationEnded
    nameWithType: ConversationEnded
    fullName: Cqrs.Akka.Tests.Unit.Events.ConversationEnded
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Messages.IMessageHandler`1
    name: IMessageHandler
    nameWithType: IMessageHandler
    fullName: Cqrs.Messages.IMessageHandler
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Cqrs.Akka.Tests.Unit.Events.ConversationEnded
    name: ConversationEnded
    nameWithType: ConversationEnded
    fullName: Cqrs.Akka.Tests.Unit.Events.ConversationEnded
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Events.IEventHandler
  commentId: T:Cqrs.Events.IEventHandler
  parent: Cqrs.Events
  isExternal: false
  name: IEventHandler
  nameWithType: IEventHandler
  fullName: Cqrs.Events.IEventHandler
- uid: Cqrs.Messages.IHandler
  commentId: T:Cqrs.Messages.IHandler
  parent: Cqrs.Messages
  isExternal: false
  name: IHandler
  nameWithType: IHandler
  fullName: Cqrs.Messages.IHandler
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Akka.Tests.Unit.Events
  commentId: N:Cqrs.Akka.Tests.Unit.Events
  isExternal: false
  name: Cqrs.Akka.Tests.Unit.Events
  nameWithType: Cqrs.Akka.Tests.Unit.Events
  fullName: Cqrs.Akka.Tests.Unit.Events
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Cqrs.Events.IEventHandler`2
  commentId: T:Cqrs.Events.IEventHandler`2
  isExternal: false
  name: IEventHandler<TAuthenticationToken, TEvent>
  nameWithType: IEventHandler<TAuthenticationToken, TEvent>
  fullName: Cqrs.Events.IEventHandler<TAuthenticationToken, TEvent>
  nameWithType.vb: IEventHandler(Of TAuthenticationToken, TEvent)
  fullName.vb: Cqrs.Events.IEventHandler(Of TAuthenticationToken, TEvent)
  name.vb: IEventHandler(Of TAuthenticationToken, TEvent)
  spec.csharp:
  - uid: Cqrs.Events.IEventHandler`2
    name: IEventHandler
    nameWithType: IEventHandler
    fullName: Cqrs.Events.IEventHandler
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEvent
    nameWithType: TEvent
    fullName: TEvent
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Events.IEventHandler`2
    name: IEventHandler
    nameWithType: IEventHandler
    fullName: Cqrs.Events.IEventHandler
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEvent
    nameWithType: TEvent
    fullName: TEvent
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Events
  commentId: N:Cqrs.Events
  isExternal: false
  name: Cqrs.Events
  nameWithType: Cqrs.Events
  fullName: Cqrs.Events
- uid: Cqrs.Messages.IMessageHandler`1
  commentId: T:Cqrs.Messages.IMessageHandler`1
  isExternal: false
  name: IMessageHandler<TMessage>
  nameWithType: IMessageHandler<TMessage>
  fullName: Cqrs.Messages.IMessageHandler<TMessage>
  nameWithType.vb: IMessageHandler(Of TMessage)
  fullName.vb: Cqrs.Messages.IMessageHandler(Of TMessage)
  name.vb: IMessageHandler(Of TMessage)
  spec.csharp:
  - uid: Cqrs.Messages.IMessageHandler`1
    name: IMessageHandler
    nameWithType: IMessageHandler
    fullName: Cqrs.Messages.IMessageHandler
  - name: <
    nameWithType: <
    fullName: <
  - name: TMessage
    nameWithType: TMessage
    fullName: TMessage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Messages.IMessageHandler`1
    name: IMessageHandler
    nameWithType: IMessageHandler
    fullName: Cqrs.Messages.IMessageHandler
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TMessage
    nameWithType: TMessage
    fullName: TMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Messages
  commentId: N:Cqrs.Messages
  isExternal: false
  name: Cqrs.Messages
  nameWithType: Cqrs.Messages
  fullName: Cqrs.Messages
- uid: Cqrs.Akka.Tests.Unit.Events.Handlers.ConversationEndedEventHandler
  commentId: T:Cqrs.Akka.Tests.Unit.Events.Handlers.ConversationEndedEventHandler
  isExternal: false
  name: ConversationEndedEventHandler
  nameWithType: ConversationEndedEventHandler
  fullName: Cqrs.Akka.Tests.Unit.Events.Handlers.ConversationEndedEventHandler
- uid: Cqrs.Akka.Tests.Unit.Events.Handlers.ConversationEndedEventHandler.#ctor*
  commentId: Overload:Cqrs.Akka.Tests.Unit.Events.Handlers.ConversationEndedEventHandler.#ctor
  isExternal: false
  name: ConversationEndedEventHandler
  nameWithType: ConversationEndedEventHandler.ConversationEndedEventHandler
  fullName: Cqrs.Akka.Tests.Unit.Events.Handlers.ConversationEndedEventHandler.ConversationEndedEventHandler
- uid: Cqrs.Akka.Commands.IAkkaCommandPublisher{System.Guid}
  commentId: T:Cqrs.Akka.Commands.IAkkaCommandPublisher{System.Guid}
  parent: Cqrs.Akka.Commands
  definition: Cqrs.Akka.Commands.IAkkaCommandPublisher`1
  name: IAkkaCommandPublisher<Guid>
  nameWithType: IAkkaCommandPublisher<Guid>
  fullName: Cqrs.Akka.Commands.IAkkaCommandPublisher<System.Guid>
  nameWithType.vb: IAkkaCommandPublisher(Of Guid)
  fullName.vb: Cqrs.Akka.Commands.IAkkaCommandPublisher(Of System.Guid)
  name.vb: IAkkaCommandPublisher(Of Guid)
  spec.csharp:
  - uid: Cqrs.Akka.Commands.IAkkaCommandPublisher`1
    name: IAkkaCommandPublisher
    nameWithType: IAkkaCommandPublisher
    fullName: Cqrs.Akka.Commands.IAkkaCommandPublisher
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Akka.Commands.IAkkaCommandPublisher`1
    name: IAkkaCommandPublisher
    nameWithType: IAkkaCommandPublisher
    fullName: Cqrs.Akka.Commands.IAkkaCommandPublisher
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Akka.Commands.IAkkaCommandPublisher`1
  commentId: T:Cqrs.Akka.Commands.IAkkaCommandPublisher`1
  isExternal: false
  name: IAkkaCommandPublisher<TAuthenticationToken>
  nameWithType: IAkkaCommandPublisher<TAuthenticationToken>
  fullName: Cqrs.Akka.Commands.IAkkaCommandPublisher<TAuthenticationToken>
  nameWithType.vb: IAkkaCommandPublisher(Of TAuthenticationToken)
  fullName.vb: Cqrs.Akka.Commands.IAkkaCommandPublisher(Of TAuthenticationToken)
  name.vb: IAkkaCommandPublisher(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Akka.Commands.IAkkaCommandPublisher`1
    name: IAkkaCommandPublisher
    nameWithType: IAkkaCommandPublisher
    fullName: Cqrs.Akka.Commands.IAkkaCommandPublisher
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Akka.Commands.IAkkaCommandPublisher`1
    name: IAkkaCommandPublisher
    nameWithType: IAkkaCommandPublisher
    fullName: Cqrs.Akka.Commands.IAkkaCommandPublisher
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Akka.Commands
  commentId: N:Cqrs.Akka.Commands
  isExternal: false
  name: Cqrs.Akka.Commands
  nameWithType: Cqrs.Akka.Commands
  fullName: Cqrs.Akka.Commands
- uid: Cqrs.Commands.ICommand`1
  commentId: T:Cqrs.Commands.ICommand`1
  isExternal: false
  name: ICommand<TAuthenticationToken>
  nameWithType: ICommand<TAuthenticationToken>
  fullName: Cqrs.Commands.ICommand<TAuthenticationToken>
  nameWithType.vb: ICommand(Of TAuthenticationToken)
  fullName.vb: Cqrs.Commands.ICommand(Of TAuthenticationToken)
  name.vb: ICommand(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Commands.ICommand`1
    name: ICommand
    nameWithType: ICommand
    fullName: Cqrs.Commands.ICommand
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Commands.ICommand`1
    name: ICommand
    nameWithType: ICommand
    fullName: Cqrs.Commands.ICommand
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Akka.Tests.Unit.Events.Handlers.ConversationEndedEventHandler.CommandBus*
  commentId: Overload:Cqrs.Akka.Tests.Unit.Events.Handlers.ConversationEndedEventHandler.CommandBus
  isExternal: false
  name: CommandBus
  nameWithType: ConversationEndedEventHandler.CommandBus
  fullName: Cqrs.Akka.Tests.Unit.Events.Handlers.ConversationEndedEventHandler.CommandBus
- uid: Cqrs.Commands.ICommandPublisher{System.Guid}
  commentId: T:Cqrs.Commands.ICommandPublisher{System.Guid}
  parent: Cqrs.Commands
  definition: Cqrs.Commands.ICommandPublisher`1
  name: ICommandPublisher<Guid>
  nameWithType: ICommandPublisher<Guid>
  fullName: Cqrs.Commands.ICommandPublisher<System.Guid>
  nameWithType.vb: ICommandPublisher(Of Guid)
  fullName.vb: Cqrs.Commands.ICommandPublisher(Of System.Guid)
  name.vb: ICommandPublisher(Of Guid)
  spec.csharp:
  - uid: Cqrs.Commands.ICommandPublisher`1
    name: ICommandPublisher
    nameWithType: ICommandPublisher
    fullName: Cqrs.Commands.ICommandPublisher
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Commands.ICommandPublisher`1
    name: ICommandPublisher
    nameWithType: ICommandPublisher
    fullName: Cqrs.Commands.ICommandPublisher
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Commands.ICommandPublisher`1
  commentId: T:Cqrs.Commands.ICommandPublisher`1
  isExternal: false
  name: ICommandPublisher<TAuthenticationToken>
  nameWithType: ICommandPublisher<TAuthenticationToken>
  fullName: Cqrs.Commands.ICommandPublisher<TAuthenticationToken>
  nameWithType.vb: ICommandPublisher(Of TAuthenticationToken)
  fullName.vb: Cqrs.Commands.ICommandPublisher(Of TAuthenticationToken)
  name.vb: ICommandPublisher(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Commands.ICommandPublisher`1
    name: ICommandPublisher
    nameWithType: ICommandPublisher
    fullName: Cqrs.Commands.ICommandPublisher
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Commands.ICommandPublisher`1
    name: ICommandPublisher
    nameWithType: ICommandPublisher
    fullName: Cqrs.Commands.ICommandPublisher
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Commands
  commentId: N:Cqrs.Commands
  isExternal: false
  name: Cqrs.Commands
  nameWithType: Cqrs.Commands
  fullName: Cqrs.Commands
- uid: Cqrs.Akka.Tests.Unit.Events.Handlers.ConversationEndedEventHandler.Handle*
  commentId: Overload:Cqrs.Akka.Tests.Unit.Events.Handlers.ConversationEndedEventHandler.Handle
  isExternal: false
  name: Handle
  nameWithType: ConversationEndedEventHandler.Handle
  fullName: Cqrs.Akka.Tests.Unit.Events.Handlers.ConversationEndedEventHandler.Handle
- uid: Cqrs.Messages.IMessageHandler{Cqrs.Akka.Tests.Unit.Events.ConversationEnded}.Handle(Cqrs.Akka.Tests.Unit.Events.ConversationEnded)
  commentId: M:Cqrs.Messages.IMessageHandler{Cqrs.Akka.Tests.Unit.Events.ConversationEnded}.Handle(Cqrs.Akka.Tests.Unit.Events.ConversationEnded)
  parent: Cqrs.Messages.IMessageHandler{Cqrs.Akka.Tests.Unit.Events.ConversationEnded}
  definition: Cqrs.Messages.IMessageHandler`1.Handle(`0)
  name: Handle(ConversationEnded)
  nameWithType: IMessageHandler<ConversationEnded>.Handle(ConversationEnded)
  fullName: Cqrs.Messages.IMessageHandler<Cqrs.Akka.Tests.Unit.Events.ConversationEnded>.Handle(Cqrs.Akka.Tests.Unit.Events.ConversationEnded)
  nameWithType.vb: IMessageHandler(Of ConversationEnded).Handle(ConversationEnded)
  fullName.vb: Cqrs.Messages.IMessageHandler(Of Cqrs.Akka.Tests.Unit.Events.ConversationEnded).Handle(Cqrs.Akka.Tests.Unit.Events.ConversationEnded)
  spec.csharp:
  - uid: Cqrs.Messages.IMessageHandler`1.Handle(`0)
    name: Handle
    nameWithType: IMessageHandler<ConversationEnded>.Handle
    fullName: Cqrs.Messages.IMessageHandler<Cqrs.Akka.Tests.Unit.Events.ConversationEnded>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Akka.Tests.Unit.Events.ConversationEnded
    name: ConversationEnded
    nameWithType: ConversationEnded
    fullName: Cqrs.Akka.Tests.Unit.Events.ConversationEnded
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Messages.IMessageHandler`1.Handle(`0)
    name: Handle
    nameWithType: IMessageHandler(Of ConversationEnded).Handle
    fullName: Cqrs.Messages.IMessageHandler(Of Cqrs.Akka.Tests.Unit.Events.ConversationEnded).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Akka.Tests.Unit.Events.ConversationEnded
    name: ConversationEnded
    nameWithType: ConversationEnded
    fullName: Cqrs.Akka.Tests.Unit.Events.ConversationEnded
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Messages.IMessageHandler`1.Handle(`0)
  commentId: M:Cqrs.Messages.IMessageHandler`1.Handle(`0)
  isExternal: false
  name: Handle(TMessage)
  nameWithType: IMessageHandler<TMessage>.Handle(TMessage)
  fullName: Cqrs.Messages.IMessageHandler<TMessage>.Handle(TMessage)
  nameWithType.vb: IMessageHandler(Of TMessage).Handle(TMessage)
  fullName.vb: Cqrs.Messages.IMessageHandler(Of TMessage).Handle(TMessage)
  spec.csharp:
  - uid: Cqrs.Messages.IMessageHandler`1.Handle(`0)
    name: Handle
    nameWithType: IMessageHandler<TMessage>.Handle
    fullName: Cqrs.Messages.IMessageHandler<TMessage>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - name: TMessage
    nameWithType: TMessage
    fullName: TMessage
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Messages.IMessageHandler`1.Handle(`0)
    name: Handle
    nameWithType: IMessageHandler(Of TMessage).Handle
    fullName: Cqrs.Messages.IMessageHandler(Of TMessage).Handle
  - name: (
    nameWithType: (
    fullName: (
  - name: TMessage
    nameWithType: TMessage
    fullName: TMessage
  - name: )
    nameWithType: )
    fullName: )
