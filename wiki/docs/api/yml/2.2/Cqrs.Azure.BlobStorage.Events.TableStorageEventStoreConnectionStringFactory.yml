### YamlMime:ManagedReference
items:
- uid: Cqrs.Azure.BlobStorage.Events.TableStorageEventStoreConnectionStringFactory
  commentId: T:Cqrs.Azure.BlobStorage.Events.TableStorageEventStoreConnectionStringFactory
  id: TableStorageEventStoreConnectionStringFactory
  parent: Cqrs.Azure.BlobStorage.Events
  children:
  - Cqrs.Azure.BlobStorage.Events.TableStorageEventStoreConnectionStringFactory.#ctor(Cqrs.Configuration.IConfigurationManager,cdmdotnet.Logging.ILogger)
  - Cqrs.Azure.BlobStorage.Events.TableStorageEventStoreConnectionStringFactory.ConfigurationManager
  - Cqrs.Azure.BlobStorage.Events.TableStorageEventStoreConnectionStringFactory.GetBaseContainerName
  - Cqrs.Azure.BlobStorage.Events.TableStorageEventStoreConnectionStringFactory.GetReadableConnectionString
  - Cqrs.Azure.BlobStorage.Events.TableStorageEventStoreConnectionStringFactory.GetWritableConnectionStrings
  - Cqrs.Azure.BlobStorage.Events.TableStorageEventStoreConnectionStringFactory.Logger
  - Cqrs.Azure.BlobStorage.Events.TableStorageEventStoreConnectionStringFactory.TableStorageBaseContainerNameKey
  - Cqrs.Azure.BlobStorage.Events.TableStorageEventStoreConnectionStringFactory.TableStorageEventStoreConnectionStringKey
  - Cqrs.Azure.BlobStorage.Events.TableStorageEventStoreConnectionStringFactory.TableStorageReadableEventStoreConnectionStringKey
  - Cqrs.Azure.BlobStorage.Events.TableStorageEventStoreConnectionStringFactory.TableStorageWritableEventStoreConnectionStringKey
  langs:
  - csharp
  - vb
  name: TableStorageEventStoreConnectionStringFactory
  nameWithType: TableStorageEventStoreConnectionStringFactory
  fullName: Cqrs.Azure.BlobStorage.Events.TableStorageEventStoreConnectionStringFactory
  type: Class
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.BlobStorage/Events/TableStorageEventStoreConnectionStringFactory.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: TableStorageEventStoreConnectionStringFactory
    path: Framework/Azure/Cqrs.Azure.BlobStorage/Events/TableStorageEventStoreConnectionStringFactory.cs
    startLine: 16
  assemblies:
  - Cqrs.Azure.BlobStorage
  namespace: Cqrs.Azure.BlobStorage.Events
  syntax:
    content: 'public class TableStorageEventStoreConnectionStringFactory : ITableStorageStoreConnectionStringFactory, IStorageStoreConnectionStringFactory'
    content.vb: >-
      Public Class TableStorageEventStoreConnectionStringFactory

          Implements ITableStorageStoreConnectionStringFactory, IStorageStoreConnectionStringFactory
  inheritance:
  - System.Object
  implements:
  - Cqrs.Azure.BlobStorage.ITableStorageStoreConnectionStringFactory
  - Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Cqrs.Azure.BlobStorage.Events.TableStorageEventStoreConnectionStringFactory.TableStorageReadableEventStoreConnectionStringKey
  commentId: F:Cqrs.Azure.BlobStorage.Events.TableStorageEventStoreConnectionStringFactory.TableStorageReadableEventStoreConnectionStringKey
  id: TableStorageReadableEventStoreConnectionStringKey
  parent: Cqrs.Azure.BlobStorage.Events.TableStorageEventStoreConnectionStringFactory
  langs:
  - csharp
  - vb
  name: TableStorageReadableEventStoreConnectionStringKey
  nameWithType: TableStorageEventStoreConnectionStringFactory.TableStorageReadableEventStoreConnectionStringKey
  fullName: Cqrs.Azure.BlobStorage.Events.TableStorageEventStoreConnectionStringFactory.TableStorageReadableEventStoreConnectionStringKey
  type: Field
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.BlobStorage/Events/TableStorageEventStoreConnectionStringFactory.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: TableStorageReadableEventStoreConnectionStringKey
    path: Framework/Azure/Cqrs.Azure.BlobStorage/Events/TableStorageEventStoreConnectionStringFactory.cs
    startLine: 18
  assemblies:
  - Cqrs.Azure.BlobStorage
  namespace: Cqrs.Azure.BlobStorage.Events
  syntax:
    content: public static string TableStorageReadableEventStoreConnectionStringKey
    return:
      type: System.String
    content.vb: Public Shared TableStorageReadableEventStoreConnectionStringKey As String
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Cqrs.Azure.BlobStorage.Events.TableStorageEventStoreConnectionStringFactory.TableStorageWritableEventStoreConnectionStringKey
  commentId: F:Cqrs.Azure.BlobStorage.Events.TableStorageEventStoreConnectionStringFactory.TableStorageWritableEventStoreConnectionStringKey
  id: TableStorageWritableEventStoreConnectionStringKey
  parent: Cqrs.Azure.BlobStorage.Events.TableStorageEventStoreConnectionStringFactory
  langs:
  - csharp
  - vb
  name: TableStorageWritableEventStoreConnectionStringKey
  nameWithType: TableStorageEventStoreConnectionStringFactory.TableStorageWritableEventStoreConnectionStringKey
  fullName: Cqrs.Azure.BlobStorage.Events.TableStorageEventStoreConnectionStringFactory.TableStorageWritableEventStoreConnectionStringKey
  type: Field
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.BlobStorage/Events/TableStorageEventStoreConnectionStringFactory.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: TableStorageWritableEventStoreConnectionStringKey
    path: Framework/Azure/Cqrs.Azure.BlobStorage/Events/TableStorageEventStoreConnectionStringFactory.cs
    startLine: 20
  assemblies:
  - Cqrs.Azure.BlobStorage
  namespace: Cqrs.Azure.BlobStorage.Events
  syntax:
    content: public static string TableStorageWritableEventStoreConnectionStringKey
    return:
      type: System.String
    content.vb: Public Shared TableStorageWritableEventStoreConnectionStringKey As String
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Cqrs.Azure.BlobStorage.Events.TableStorageEventStoreConnectionStringFactory.TableStorageEventStoreConnectionStringKey
  commentId: F:Cqrs.Azure.BlobStorage.Events.TableStorageEventStoreConnectionStringFactory.TableStorageEventStoreConnectionStringKey
  id: TableStorageEventStoreConnectionStringKey
  parent: Cqrs.Azure.BlobStorage.Events.TableStorageEventStoreConnectionStringFactory
  langs:
  - csharp
  - vb
  name: TableStorageEventStoreConnectionStringKey
  nameWithType: TableStorageEventStoreConnectionStringFactory.TableStorageEventStoreConnectionStringKey
  fullName: Cqrs.Azure.BlobStorage.Events.TableStorageEventStoreConnectionStringFactory.TableStorageEventStoreConnectionStringKey
  type: Field
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.BlobStorage/Events/TableStorageEventStoreConnectionStringFactory.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: TableStorageEventStoreConnectionStringKey
    path: Framework/Azure/Cqrs.Azure.BlobStorage/Events/TableStorageEventStoreConnectionStringFactory.cs
    startLine: 22
  assemblies:
  - Cqrs.Azure.BlobStorage
  namespace: Cqrs.Azure.BlobStorage.Events
  syntax:
    content: public static string TableStorageEventStoreConnectionStringKey
    return:
      type: System.String
    content.vb: Public Shared TableStorageEventStoreConnectionStringKey As String
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Cqrs.Azure.BlobStorage.Events.TableStorageEventStoreConnectionStringFactory.TableStorageBaseContainerNameKey
  commentId: F:Cqrs.Azure.BlobStorage.Events.TableStorageEventStoreConnectionStringFactory.TableStorageBaseContainerNameKey
  id: TableStorageBaseContainerNameKey
  parent: Cqrs.Azure.BlobStorage.Events.TableStorageEventStoreConnectionStringFactory
  langs:
  - csharp
  - vb
  name: TableStorageBaseContainerNameKey
  nameWithType: TableStorageEventStoreConnectionStringFactory.TableStorageBaseContainerNameKey
  fullName: Cqrs.Azure.BlobStorage.Events.TableStorageEventStoreConnectionStringFactory.TableStorageBaseContainerNameKey
  type: Field
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.BlobStorage/Events/TableStorageEventStoreConnectionStringFactory.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: TableStorageBaseContainerNameKey
    path: Framework/Azure/Cqrs.Azure.BlobStorage/Events/TableStorageEventStoreConnectionStringFactory.cs
    startLine: 24
  assemblies:
  - Cqrs.Azure.BlobStorage
  namespace: Cqrs.Azure.BlobStorage.Events
  syntax:
    content: public static string TableStorageBaseContainerNameKey
    return:
      type: System.String
    content.vb: Public Shared TableStorageBaseContainerNameKey As String
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Cqrs.Azure.BlobStorage.Events.TableStorageEventStoreConnectionStringFactory.ConfigurationManager
  commentId: P:Cqrs.Azure.BlobStorage.Events.TableStorageEventStoreConnectionStringFactory.ConfigurationManager
  id: ConfigurationManager
  parent: Cqrs.Azure.BlobStorage.Events.TableStorageEventStoreConnectionStringFactory
  langs:
  - csharp
  - vb
  name: ConfigurationManager
  nameWithType: TableStorageEventStoreConnectionStringFactory.ConfigurationManager
  fullName: Cqrs.Azure.BlobStorage.Events.TableStorageEventStoreConnectionStringFactory.ConfigurationManager
  type: Property
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.BlobStorage/Events/TableStorageEventStoreConnectionStringFactory.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: ConfigurationManager
    path: Framework/Azure/Cqrs.Azure.BlobStorage/Events/TableStorageEventStoreConnectionStringFactory.cs
    startLine: 26
  assemblies:
  - Cqrs.Azure.BlobStorage
  namespace: Cqrs.Azure.BlobStorage.Events
  syntax:
    content: protected IConfigurationManager ConfigurationManager { get; }
    parameters: []
    return:
      type: Cqrs.Configuration.IConfigurationManager
    content.vb: Protected ReadOnly Property ConfigurationManager As IConfigurationManager
  overload: Cqrs.Azure.BlobStorage.Events.TableStorageEventStoreConnectionStringFactory.ConfigurationManager*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Cqrs.Azure.BlobStorage.Events.TableStorageEventStoreConnectionStringFactory.Logger
  commentId: P:Cqrs.Azure.BlobStorage.Events.TableStorageEventStoreConnectionStringFactory.Logger
  id: Logger
  parent: Cqrs.Azure.BlobStorage.Events.TableStorageEventStoreConnectionStringFactory
  langs:
  - csharp
  - vb
  name: Logger
  nameWithType: TableStorageEventStoreConnectionStringFactory.Logger
  fullName: Cqrs.Azure.BlobStorage.Events.TableStorageEventStoreConnectionStringFactory.Logger
  type: Property
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.BlobStorage/Events/TableStorageEventStoreConnectionStringFactory.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Logger
    path: Framework/Azure/Cqrs.Azure.BlobStorage/Events/TableStorageEventStoreConnectionStringFactory.cs
    startLine: 28
  assemblies:
  - Cqrs.Azure.BlobStorage
  namespace: Cqrs.Azure.BlobStorage.Events
  syntax:
    content: protected ILogger Logger { get; }
    parameters: []
    return:
      type: cdmdotnet.Logging.ILogger
    content.vb: Protected ReadOnly Property Logger As ILogger
  overload: Cqrs.Azure.BlobStorage.Events.TableStorageEventStoreConnectionStringFactory.Logger*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Cqrs.Azure.BlobStorage.Events.TableStorageEventStoreConnectionStringFactory.#ctor(Cqrs.Configuration.IConfigurationManager,cdmdotnet.Logging.ILogger)
  commentId: M:Cqrs.Azure.BlobStorage.Events.TableStorageEventStoreConnectionStringFactory.#ctor(Cqrs.Configuration.IConfigurationManager,cdmdotnet.Logging.ILogger)
  id: '#ctor(Cqrs.Configuration.IConfigurationManager,cdmdotnet.Logging.ILogger)'
  parent: Cqrs.Azure.BlobStorage.Events.TableStorageEventStoreConnectionStringFactory
  langs:
  - csharp
  - vb
  name: TableStorageEventStoreConnectionStringFactory(IConfigurationManager, ILogger)
  nameWithType: TableStorageEventStoreConnectionStringFactory.TableStorageEventStoreConnectionStringFactory(IConfigurationManager, ILogger)
  fullName: Cqrs.Azure.BlobStorage.Events.TableStorageEventStoreConnectionStringFactory.TableStorageEventStoreConnectionStringFactory(Cqrs.Configuration.IConfigurationManager, cdmdotnet.Logging.ILogger)
  type: Constructor
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.BlobStorage/Events/TableStorageEventStoreConnectionStringFactory.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: .ctor
    path: Framework/Azure/Cqrs.Azure.BlobStorage/Events/TableStorageEventStoreConnectionStringFactory.cs
    startLine: 30
  assemblies:
  - Cqrs.Azure.BlobStorage
  namespace: Cqrs.Azure.BlobStorage.Events
  syntax:
    content: public TableStorageEventStoreConnectionStringFactory(IConfigurationManager configurationManager, ILogger logger)
    parameters:
    - id: configurationManager
      type: Cqrs.Configuration.IConfigurationManager
    - id: logger
      type: cdmdotnet.Logging.ILogger
    content.vb: Public Sub New(configurationManager As IConfigurationManager, logger As ILogger)
  overload: Cqrs.Azure.BlobStorage.Events.TableStorageEventStoreConnectionStringFactory.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Cqrs.Azure.BlobStorage.Events.TableStorageEventStoreConnectionStringFactory.GetWritableConnectionStrings
  commentId: M:Cqrs.Azure.BlobStorage.Events.TableStorageEventStoreConnectionStringFactory.GetWritableConnectionStrings
  id: GetWritableConnectionStrings
  parent: Cqrs.Azure.BlobStorage.Events.TableStorageEventStoreConnectionStringFactory
  langs:
  - csharp
  - vb
  name: GetWritableConnectionStrings()
  nameWithType: TableStorageEventStoreConnectionStringFactory.GetWritableConnectionStrings()
  fullName: Cqrs.Azure.BlobStorage.Events.TableStorageEventStoreConnectionStringFactory.GetWritableConnectionStrings()
  type: Method
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.BlobStorage/Events/TableStorageEventStoreConnectionStringFactory.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: GetWritableConnectionStrings
    path: Framework/Azure/Cqrs.Azure.BlobStorage/Events/TableStorageEventStoreConnectionStringFactory.cs
    startLine: 36
  assemblies:
  - Cqrs.Azure.BlobStorage
  namespace: Cqrs.Azure.BlobStorage.Events
  syntax:
    content: public virtual IEnumerable<string> GetWritableConnectionStrings()
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: Public Overridable Function GetWritableConnectionStrings As IEnumerable(Of String)
  overload: Cqrs.Azure.BlobStorage.Events.TableStorageEventStoreConnectionStringFactory.GetWritableConnectionStrings*
  implements:
  - Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory.GetWritableConnectionStrings
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Cqrs.Azure.BlobStorage.Events.TableStorageEventStoreConnectionStringFactory.GetReadableConnectionString
  commentId: M:Cqrs.Azure.BlobStorage.Events.TableStorageEventStoreConnectionStringFactory.GetReadableConnectionString
  id: GetReadableConnectionString
  parent: Cqrs.Azure.BlobStorage.Events.TableStorageEventStoreConnectionStringFactory
  langs:
  - csharp
  - vb
  name: GetReadableConnectionString()
  nameWithType: TableStorageEventStoreConnectionStringFactory.GetReadableConnectionString()
  fullName: Cqrs.Azure.BlobStorage.Events.TableStorageEventStoreConnectionStringFactory.GetReadableConnectionString()
  type: Method
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.BlobStorage/Events/TableStorageEventStoreConnectionStringFactory.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: GetReadableConnectionString
    path: Framework/Azure/Cqrs.Azure.BlobStorage/Events/TableStorageEventStoreConnectionStringFactory.cs
    startLine: 75
  assemblies:
  - Cqrs.Azure.BlobStorage
  namespace: Cqrs.Azure.BlobStorage.Events
  syntax:
    content: public virtual string GetReadableConnectionString()
    return:
      type: System.String
    content.vb: Public Overridable Function GetReadableConnectionString As String
  overload: Cqrs.Azure.BlobStorage.Events.TableStorageEventStoreConnectionStringFactory.GetReadableConnectionString*
  implements:
  - Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory.GetReadableConnectionString
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Cqrs.Azure.BlobStorage.Events.TableStorageEventStoreConnectionStringFactory.GetBaseContainerName
  commentId: M:Cqrs.Azure.BlobStorage.Events.TableStorageEventStoreConnectionStringFactory.GetBaseContainerName
  id: GetBaseContainerName
  parent: Cqrs.Azure.BlobStorage.Events.TableStorageEventStoreConnectionStringFactory
  langs:
  - csharp
  - vb
  name: GetBaseContainerName()
  nameWithType: TableStorageEventStoreConnectionStringFactory.GetBaseContainerName()
  fullName: Cqrs.Azure.BlobStorage.Events.TableStorageEventStoreConnectionStringFactory.GetBaseContainerName()
  type: Method
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.BlobStorage/Events/TableStorageEventStoreConnectionStringFactory.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: GetBaseContainerName
    path: Framework/Azure/Cqrs.Azure.BlobStorage/Events/TableStorageEventStoreConnectionStringFactory.cs
    startLine: 102
  assemblies:
  - Cqrs.Azure.BlobStorage
  namespace: Cqrs.Azure.BlobStorage.Events
  syntax:
    content: public virtual string GetBaseContainerName()
    return:
      type: System.String
    content.vb: Public Overridable Function GetBaseContainerName As String
  overload: Cqrs.Azure.BlobStorage.Events.TableStorageEventStoreConnectionStringFactory.GetBaseContainerName*
  implements:
  - Cqrs.Azure.BlobStorage.ITableStorageStoreConnectionStringFactory.GetBaseContainerName
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Cqrs.Azure.BlobStorage.Events
  commentId: N:Cqrs.Azure.BlobStorage.Events
  isExternal: false
  name: Cqrs.Azure.BlobStorage.Events
  nameWithType: Cqrs.Azure.BlobStorage.Events
  fullName: Cqrs.Azure.BlobStorage.Events
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Cqrs.Azure.BlobStorage.ITableStorageStoreConnectionStringFactory
  commentId: T:Cqrs.Azure.BlobStorage.ITableStorageStoreConnectionStringFactory
  parent: Cqrs.Azure.BlobStorage
  isExternal: false
  name: ITableStorageStoreConnectionStringFactory
  nameWithType: ITableStorageStoreConnectionStringFactory
  fullName: Cqrs.Azure.BlobStorage.ITableStorageStoreConnectionStringFactory
- uid: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory
  commentId: T:Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory
  parent: Cqrs.Azure.BlobStorage
  isExternal: false
  name: IStorageStoreConnectionStringFactory
  nameWithType: IStorageStoreConnectionStringFactory
  fullName: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Cqrs.Azure.BlobStorage
  commentId: N:Cqrs.Azure.BlobStorage
  isExternal: false
  name: Cqrs.Azure.BlobStorage
  nameWithType: Cqrs.Azure.BlobStorage
  fullName: Cqrs.Azure.BlobStorage
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Cqrs.Azure.BlobStorage.Events.TableStorageEventStoreConnectionStringFactory.ConfigurationManager*
  commentId: Overload:Cqrs.Azure.BlobStorage.Events.TableStorageEventStoreConnectionStringFactory.ConfigurationManager
  isExternal: false
  name: ConfigurationManager
  nameWithType: TableStorageEventStoreConnectionStringFactory.ConfigurationManager
  fullName: Cqrs.Azure.BlobStorage.Events.TableStorageEventStoreConnectionStringFactory.ConfigurationManager
- uid: Cqrs.Configuration.IConfigurationManager
  commentId: T:Cqrs.Configuration.IConfigurationManager
  parent: Cqrs.Configuration
  isExternal: false
  name: IConfigurationManager
  nameWithType: IConfigurationManager
  fullName: Cqrs.Configuration.IConfigurationManager
- uid: Cqrs.Configuration
  commentId: N:Cqrs.Configuration
  isExternal: false
  name: Cqrs.Configuration
  nameWithType: Cqrs.Configuration
  fullName: Cqrs.Configuration
- uid: Cqrs.Azure.BlobStorage.Events.TableStorageEventStoreConnectionStringFactory.Logger*
  commentId: Overload:Cqrs.Azure.BlobStorage.Events.TableStorageEventStoreConnectionStringFactory.Logger
  isExternal: false
  name: Logger
  nameWithType: TableStorageEventStoreConnectionStringFactory.Logger
  fullName: Cqrs.Azure.BlobStorage.Events.TableStorageEventStoreConnectionStringFactory.Logger
- uid: cdmdotnet.Logging.ILogger
  commentId: T:cdmdotnet.Logging.ILogger
  parent: cdmdotnet.Logging
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: cdmdotnet.Logging.ILogger
- uid: cdmdotnet.Logging
  commentId: N:cdmdotnet.Logging
  isExternal: false
  name: cdmdotnet.Logging
  nameWithType: cdmdotnet.Logging
  fullName: cdmdotnet.Logging
- uid: Cqrs.Azure.BlobStorage.Events.TableStorageEventStoreConnectionStringFactory.#ctor*
  commentId: Overload:Cqrs.Azure.BlobStorage.Events.TableStorageEventStoreConnectionStringFactory.#ctor
  isExternal: false
  name: TableStorageEventStoreConnectionStringFactory
  nameWithType: TableStorageEventStoreConnectionStringFactory.TableStorageEventStoreConnectionStringFactory
  fullName: Cqrs.Azure.BlobStorage.Events.TableStorageEventStoreConnectionStringFactory.TableStorageEventStoreConnectionStringFactory
- uid: Cqrs.Azure.BlobStorage.Events.TableStorageEventStoreConnectionStringFactory.GetWritableConnectionStrings*
  commentId: Overload:Cqrs.Azure.BlobStorage.Events.TableStorageEventStoreConnectionStringFactory.GetWritableConnectionStrings
  isExternal: false
  name: GetWritableConnectionStrings
  nameWithType: TableStorageEventStoreConnectionStringFactory.GetWritableConnectionStrings
  fullName: Cqrs.Azure.BlobStorage.Events.TableStorageEventStoreConnectionStringFactory.GetWritableConnectionStrings
- uid: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory.GetWritableConnectionStrings
  commentId: M:Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory.GetWritableConnectionStrings
  parent: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory
  isExternal: false
  name: GetWritableConnectionStrings()
  nameWithType: IStorageStoreConnectionStringFactory.GetWritableConnectionStrings()
  fullName: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory.GetWritableConnectionStrings()
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory.GetWritableConnectionStrings
    name: GetWritableConnectionStrings
    nameWithType: IStorageStoreConnectionStringFactory.GetWritableConnectionStrings
    fullName: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory.GetWritableConnectionStrings
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory.GetWritableConnectionStrings
    name: GetWritableConnectionStrings
    nameWithType: IStorageStoreConnectionStringFactory.GetWritableConnectionStrings
    fullName: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory.GetWritableConnectionStrings
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Cqrs.Azure.BlobStorage.Events.TableStorageEventStoreConnectionStringFactory.GetReadableConnectionString*
  commentId: Overload:Cqrs.Azure.BlobStorage.Events.TableStorageEventStoreConnectionStringFactory.GetReadableConnectionString
  isExternal: false
  name: GetReadableConnectionString
  nameWithType: TableStorageEventStoreConnectionStringFactory.GetReadableConnectionString
  fullName: Cqrs.Azure.BlobStorage.Events.TableStorageEventStoreConnectionStringFactory.GetReadableConnectionString
- uid: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory.GetReadableConnectionString
  commentId: M:Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory.GetReadableConnectionString
  parent: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory
  isExternal: false
  name: GetReadableConnectionString()
  nameWithType: IStorageStoreConnectionStringFactory.GetReadableConnectionString()
  fullName: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory.GetReadableConnectionString()
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory.GetReadableConnectionString
    name: GetReadableConnectionString
    nameWithType: IStorageStoreConnectionStringFactory.GetReadableConnectionString
    fullName: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory.GetReadableConnectionString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory.GetReadableConnectionString
    name: GetReadableConnectionString
    nameWithType: IStorageStoreConnectionStringFactory.GetReadableConnectionString
    fullName: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory.GetReadableConnectionString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.Events.TableStorageEventStoreConnectionStringFactory.GetBaseContainerName*
  commentId: Overload:Cqrs.Azure.BlobStorage.Events.TableStorageEventStoreConnectionStringFactory.GetBaseContainerName
  isExternal: false
  name: GetBaseContainerName
  nameWithType: TableStorageEventStoreConnectionStringFactory.GetBaseContainerName
  fullName: Cqrs.Azure.BlobStorage.Events.TableStorageEventStoreConnectionStringFactory.GetBaseContainerName
- uid: Cqrs.Azure.BlobStorage.ITableStorageStoreConnectionStringFactory.GetBaseContainerName
  commentId: M:Cqrs.Azure.BlobStorage.ITableStorageStoreConnectionStringFactory.GetBaseContainerName
  parent: Cqrs.Azure.BlobStorage.ITableStorageStoreConnectionStringFactory
  isExternal: false
  name: GetBaseContainerName()
  nameWithType: ITableStorageStoreConnectionStringFactory.GetBaseContainerName()
  fullName: Cqrs.Azure.BlobStorage.ITableStorageStoreConnectionStringFactory.GetBaseContainerName()
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.ITableStorageStoreConnectionStringFactory.GetBaseContainerName
    name: GetBaseContainerName
    nameWithType: ITableStorageStoreConnectionStringFactory.GetBaseContainerName
    fullName: Cqrs.Azure.BlobStorage.ITableStorageStoreConnectionStringFactory.GetBaseContainerName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.ITableStorageStoreConnectionStringFactory.GetBaseContainerName
    name: GetBaseContainerName
    nameWithType: ITableStorageStoreConnectionStringFactory.GetBaseContainerName
    fullName: Cqrs.Azure.BlobStorage.ITableStorageStoreConnectionStringFactory.GetBaseContainerName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
