<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classCqrs_1_1Azure_1_1ServiceBus_1_1AzureCommandBusPublisher" kind="class" language="C#" prot="public">
    <compoundname>Cqrs::Azure::ServiceBus::AzureCommandBusPublisher</compoundname>
    <basecompoundref refid="classCqrs_1_1Azure_1_1ServiceBus_1_1AzureCommandBus" prot="public" virt="non-virtual">Cqrs::Azure::ServiceBus::AzureCommandBus&lt; TAuthenticationToken &gt;</basecompoundref>
    <basecompoundref refid="interfaceCqrs_1_1Commands_1_1IPublishAndWaitCommandPublisher" prot="public" virt="non-virtual">Cqrs::Commands::IPublishAndWaitCommandPublisher&lt; TAuthenticationToken &gt;</basecompoundref>
    <basecompoundref refid="classCqrs_1_1Azure_1_1ServiceBus_1_1AzureCommandBus" prot="public" virt="non-virtual">Cqrs::Azure::ServiceBus::AzureCommandBus&lt; TAuthenticationToken &gt;</basecompoundref>
    <basecompoundref refid="interfaceCqrs_1_1Commands_1_1IPublishAndWaitCommandPublisher" prot="public" virt="non-virtual">Cqrs::Commands::IPublishAndWaitCommandPublisher&lt; TAuthenticationToken &gt;</basecompoundref>
    <templateparamlist>
      <param>
        <type>TAuthenticationToken</type>
      </param>
    </templateparamlist>
      <sectiondef kind="property">
      <memberdef kind="property" id="classCqrs_1_1Azure_1_1ServiceBus_1_1AzureCommandBusPublisher_1a2aab9b4102fadd316d94719d71cec943" prot="package" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>string</type>
        <definition>string Cqrs.Azure.ServiceBus.AzureCommandBusPublisher&lt; TAuthenticationToken &gt;.DebuggerDisplay</definition>
        <argsstring></argsstring>
        <name>DebuggerDisplay</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/y/cdmdotnet/CQRS.XsamX/Framework/Azure/Cqrs.Azure.ServiceBus/AzureCommandBusPublisher.cs" line="39" column="1" bodyfile="/mnt/y/cdmdotnet/CQRS.XsamX/Framework/Azure/Cqrs.Azure.ServiceBus/AzureCommandBusPublisher.cs" bodystart="40" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classCqrs_1_1Azure_1_1ServiceBus_1_1AzureCommandBusPublisher_a5a553159ba76af2fedc86d534fe24fb1_1a5a553159ba76af2fedc86d534fe24fb1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Cqrs.Azure.ServiceBus.AzureCommandBusPublisher&lt; TAuthenticationToken &gt;.AzureCommandBusPublisher</definition>
        <argsstring>(IConfigurationManager configurationManager, IMessageSerialiser&lt; TAuthenticationToken &gt; messageSerialiser, IAuthenticationTokenHelper&lt; TAuthenticationToken &gt; authenticationTokenHelper, ICorrelationIdHelper correlationIdHelper, ILogger logger, IAzureBusHelper&lt; TAuthenticationToken &gt; azureBusHelper)</argsstring>
        <name>AzureCommandBusPublisher</name>
        <param>
          <type><ref refid="interfaceCqrs_1_1Configuration_1_1IConfigurationManager" kindref="compound">IConfigurationManager</ref></type>
          <declname>configurationManager</declname>
        </param>
        <param>
          <type><ref refid="interfaceCqrs_1_1Azure_1_1ServiceBus_1_1IMessageSerialiser" kindref="compound">IMessageSerialiser</ref>&lt; TAuthenticationToken &gt;</type>
          <declname>messageSerialiser</declname>
        </param>
        <param>
          <type><ref refid="interfaceCqrs_1_1Authentication_1_1IAuthenticationTokenHelper" kindref="compound">IAuthenticationTokenHelper</ref>&lt; TAuthenticationToken &gt;</type>
          <declname>authenticationTokenHelper</declname>
        </param>
        <param>
          <type>ICorrelationIdHelper</type>
          <declname>correlationIdHelper</declname>
        </param>
        <param>
          <type>ILogger</type>
          <declname>logger</declname>
        </param>
        <param>
          <type><ref refid="interfaceCqrs_1_1Azure_1_1ServiceBus_1_1IAzureBusHelper" kindref="compound">IAzureBusHelper</ref>&lt; TAuthenticationToken &gt;</type>
          <declname>azureBusHelper</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/y/cdmdotnet/CQRS.XsamX/Framework/Azure/Cqrs.Azure.EventHub/AzureCommandBusPublisher.cs" line="27" column="1" bodyfile="/mnt/y/cdmdotnet/CQRS.XsamX/Framework/Azure/Cqrs.Azure.EventHub/AzureCommandBusPublisher.cs" bodystart="27" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Azure_1_1ServiceBus_1_1AzureCommandBusPublisher_aefdaed600f88cc645a1b7ab41db42a69_1aefdaed600f88cc645a1b7ab41db42a69" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Cqrs.Azure.ServiceBus.AzureCommandBusPublisher&lt; TAuthenticationToken &gt;.Publish&lt; TCommand &gt;</definition>
        <argsstring>(TCommand command)</argsstring>
        <name>Publish&lt; TCommand &gt;</name>
        <reimplements refid="interfaceCqrs_1_1Commands_1_1ICommandPublisher_aeeb487ad5686d9c44d214b1daaf7833a_1aeeb487ad5686d9c44d214b1daaf7833a">Publish&lt; TCommand &gt;</reimplements>
        <param>
          <type>TCommand</type>
          <declname>command</declname>
        </param>
        <briefdescription>
<para>Publishes the provided <emphasis>command</emphasis>  on the command bus. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/y/cdmdotnet/CQRS.XsamX/Framework/Azure/Cqrs.Azure.EventHub/AzureCommandBusPublisher.cs" line="35" column="1" bodyfile="/mnt/y/cdmdotnet/CQRS.XsamX/Framework/Azure/Cqrs.Azure.EventHub/AzureCommandBusPublisher.cs" bodystart="35" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Azure_1_1ServiceBus_1_1AzureCommandBusPublisher_ad4bbbadcac7eb6a83e47649979bc2e7f_1ad4bbbadcac7eb6a83e47649979bc2e7f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Cqrs.Azure.ServiceBus.AzureCommandBusPublisher&lt; TAuthenticationToken &gt;.Send&lt; TCommand &gt;</definition>
        <argsstring>(TCommand command)</argsstring>
        <name>Send&lt; TCommand &gt;</name>
        <param>
          <type>TCommand</type>
          <declname>command</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/y/cdmdotnet/CQRS.XsamX/Framework/Azure/Cqrs.Azure.EventHub/AzureCommandBusPublisher.cs" line="78" column="1" bodyfile="/mnt/y/cdmdotnet/CQRS.XsamX/Framework/Azure/Cqrs.Azure.EventHub/AzureCommandBusPublisher.cs" bodystart="78" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Azure_1_1ServiceBus_1_1AzureCommandBusPublisher_a072f18c8709e0ae61056e34251afc506_1a072f18c8709e0ae61056e34251afc506" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Cqrs.Azure.ServiceBus.AzureCommandBusPublisher&lt; TAuthenticationToken &gt;.Publish&lt; TCommand &gt;</definition>
        <argsstring>(IEnumerable&lt; TCommand &gt; commands)</argsstring>
        <name>Publish&lt; TCommand &gt;</name>
        <reimplements refid="interfaceCqrs_1_1Commands_1_1ICommandPublisher_af0f033c0b949e5650032e4f00b11b595_1af0f033c0b949e5650032e4f00b11b595">Publish&lt; TCommand &gt;</reimplements>
        <param>
          <type>IEnumerable&lt; TCommand &gt;</type>
          <declname>commands</declname>
        </param>
        <briefdescription>
<para>Publishes the provided <emphasis>commands</emphasis>  on the command bus. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/y/cdmdotnet/CQRS.XsamX/Framework/Azure/Cqrs.Azure.EventHub/AzureCommandBusPublisher.cs" line="84" column="1" bodyfile="/mnt/y/cdmdotnet/CQRS.XsamX/Framework/Azure/Cqrs.Azure.EventHub/AzureCommandBusPublisher.cs" bodystart="84" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Azure_1_1ServiceBus_1_1AzureCommandBusPublisher_a1f6742c31a81a1bc96962acd28d4e8d2_1a1f6742c31a81a1bc96962acd28d4e8d2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Cqrs.Azure.ServiceBus.AzureCommandBusPublisher&lt; TAuthenticationToken &gt;.Send&lt; TCommand &gt;</definition>
        <argsstring>(IEnumerable&lt; TCommand &gt; commands)</argsstring>
        <name>Send&lt; TCommand &gt;</name>
        <param>
          <type>IEnumerable&lt; TCommand &gt;</type>
          <declname>commands</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/y/cdmdotnet/CQRS.XsamX/Framework/Azure/Cqrs.Azure.EventHub/AzureCommandBusPublisher.cs" line="148" column="1" bodyfile="/mnt/y/cdmdotnet/CQRS.XsamX/Framework/Azure/Cqrs.Azure.EventHub/AzureCommandBusPublisher.cs" bodystart="148" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Azure_1_1ServiceBus_1_1AzureCommandBusPublisher_ab63045bffba3925270d0087e6fa4366f_1ab63045bffba3925270d0087e6fa4366f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>TEvent</type>
        <definition>virtual TEvent Cqrs.Azure.ServiceBus.AzureCommandBusPublisher&lt; TAuthenticationToken &gt;.PublishAndWait&lt; TCommand, TEvent &gt;</definition>
        <argsstring>(TCommand command, IEventReceiver&lt; TAuthenticationToken &gt; eventReceiver=null)</argsstring>
        <name>PublishAndWait&lt; TCommand, TEvent &gt;</name>
        <reimplements refid="interfaceCqrs_1_1Commands_1_1IPublishAndWaitCommandPublisher_a19ffb318c830e9f05d4adae985232f30_1a19ffb318c830e9f05d4adae985232f30">PublishAndWait&lt; TCommand, TEvent &gt;</reimplements>
        <param>
          <type>TCommand</type>
          <declname>command</declname>
        </param>
        <param>
          <type><ref refid="interfaceCqrs_1_1Events_1_1IEventReceiver" kindref="compound">IEventReceiver</ref>&lt; TAuthenticationToken &gt;</type>
          <declname>eventReceiver</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
<para>Sends the provided <emphasis>command</emphasis>  and waits for an event of <emphasis>TEvent</emphasis>  </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>command</parametername>
</parameternamelist>
<parameterdescription>
<para>The <emphasis>TCommand</emphasis>  to send.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>eventReceiver</parametername>
</parameternamelist>
<parameterdescription>
<para>If provided, is the <ref refid="interfaceCqrs_1_1Events_1_1IEventReceiver" kindref="compound">IEventReceiver&lt;TAuthenticationToken&gt;</ref> that the event is expected to be returned on.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/y/cdmdotnet/CQRS.XsamX/Framework/Azure/Cqrs.Azure.EventHub/AzureCommandBusPublisher.cs" line="159" column="1" bodyfile="/mnt/y/cdmdotnet/CQRS.XsamX/Framework/Azure/Cqrs.Azure.EventHub/AzureCommandBusPublisher.cs" bodystart="159" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Azure_1_1ServiceBus_1_1AzureCommandBusPublisher_a0d60547c692b453310a9062bdfa6b247_1a0d60547c692b453310a9062bdfa6b247" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>TEvent</type>
        <definition>virtual TEvent Cqrs.Azure.ServiceBus.AzureCommandBusPublisher&lt; TAuthenticationToken &gt;.PublishAndWait&lt; TCommand, TEvent &gt;</definition>
        <argsstring>(TCommand command, int millisecondsTimeout, IEventReceiver&lt; TAuthenticationToken &gt; eventReceiver=null)</argsstring>
        <name>PublishAndWait&lt; TCommand, TEvent &gt;</name>
        <reimplements refid="interfaceCqrs_1_1Commands_1_1IPublishAndWaitCommandPublisher_ad3761879cf9e09c9e89cabf8067b6de4_1ad3761879cf9e09c9e89cabf8067b6de4">PublishAndWait&lt; TCommand, TEvent &gt;</reimplements>
        <param>
          <type>TCommand</type>
          <declname>command</declname>
        </param>
        <param>
          <type>int</type>
          <declname>millisecondsTimeout</declname>
        </param>
        <param>
          <type><ref refid="interfaceCqrs_1_1Events_1_1IEventReceiver" kindref="compound">IEventReceiver</ref>&lt; TAuthenticationToken &gt;</type>
          <declname>eventReceiver</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
<para>Sends the provided <emphasis>command</emphasis>  and waits for an event of <emphasis>TEvent</emphasis>  or exits if the specified timeout is expired. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>command</parametername>
</parameternamelist>
<parameterdescription>
<para>The <emphasis>TCommand</emphasis>  to send.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>millisecondsTimeout</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of milliseconds to wait, or F:System.Threading.Timeout.Infinite (-1) to wait indefinitely.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>eventReceiver</parametername>
</parameternamelist>
<parameterdescription>
<para>If provided, is the <ref refid="interfaceCqrs_1_1Events_1_1IEventReceiver" kindref="compound">IEventReceiver&lt;TAuthenticationToken&gt;</ref> that the event is expected to be returned on.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/y/cdmdotnet/CQRS.XsamX/Framework/Azure/Cqrs.Azure.EventHub/AzureCommandBusPublisher.cs" line="171" column="1" bodyfile="/mnt/y/cdmdotnet/CQRS.XsamX/Framework/Azure/Cqrs.Azure.EventHub/AzureCommandBusPublisher.cs" bodystart="171" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Azure_1_1ServiceBus_1_1AzureCommandBusPublisher_ad0fd6759a76dcbc2d527f15908cc09fc_1ad0fd6759a76dcbc2d527f15908cc09fc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>TEvent</type>
        <definition>virtual TEvent Cqrs.Azure.ServiceBus.AzureCommandBusPublisher&lt; TAuthenticationToken &gt;.PublishAndWait&lt; TCommand, TEvent &gt;</definition>
        <argsstring>(TCommand command, TimeSpan timeout, IEventReceiver&lt; TAuthenticationToken &gt; eventReceiver=null)</argsstring>
        <name>PublishAndWait&lt; TCommand, TEvent &gt;</name>
        <reimplements refid="interfaceCqrs_1_1Commands_1_1IPublishAndWaitCommandPublisher_a02ef39482cb50e6e15e06144adca1ed5_1a02ef39482cb50e6e15e06144adca1ed5">PublishAndWait&lt; TCommand, TEvent &gt;</reimplements>
        <param>
          <type>TCommand</type>
          <declname>command</declname>
        </param>
        <param>
          <type>TimeSpan</type>
          <declname>timeout</declname>
        </param>
        <param>
          <type><ref refid="interfaceCqrs_1_1Events_1_1IEventReceiver" kindref="compound">IEventReceiver</ref>&lt; TAuthenticationToken &gt;</type>
          <declname>eventReceiver</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
<para>Sends the provided <emphasis>command</emphasis>  and waits for an event of <emphasis>TEvent</emphasis>  or exits if the specified timeout is expired. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>command</parametername>
</parameternamelist>
<parameterdescription>
<para>The <emphasis>TCommand</emphasis>  to send.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>A T:System.TimeSpan that represents the number of milliseconds to wait, or a TimeSpan that represents -1 milliseconds to wait indefinitely.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>eventReceiver</parametername>
</parameternamelist>
<parameterdescription>
<para>If provided, is the <ref refid="interfaceCqrs_1_1Events_1_1IEventReceiver" kindref="compound">IEventReceiver&lt;TAuthenticationToken&gt;</ref> that the event is expected to be returned on.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/y/cdmdotnet/CQRS.XsamX/Framework/Azure/Cqrs.Azure.EventHub/AzureCommandBusPublisher.cs" line="183" column="1" bodyfile="/mnt/y/cdmdotnet/CQRS.XsamX/Framework/Azure/Cqrs.Azure.EventHub/AzureCommandBusPublisher.cs" bodystart="183" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Azure_1_1ServiceBus_1_1AzureCommandBusPublisher_add51ed3284350c68f01212aa689e106f_1add51ed3284350c68f01212aa689e106f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>TEvent</type>
        <definition>virtual TEvent Cqrs.Azure.ServiceBus.AzureCommandBusPublisher&lt; TAuthenticationToken &gt;.PublishAndWait&lt; TCommand, TEvent &gt;</definition>
        <argsstring>(TCommand command, Func&lt; IEnumerable&lt; IEvent&lt; TAuthenticationToken &gt;&gt;, TEvent &gt; condition, IEventReceiver&lt; TAuthenticationToken &gt; eventReceiver=null)</argsstring>
        <name>PublishAndWait&lt; TCommand, TEvent &gt;</name>
        <reimplements refid="interfaceCqrs_1_1Commands_1_1IPublishAndWaitCommandPublisher_a83e4480bf8cd6015254d700056cf1647_1a83e4480bf8cd6015254d700056cf1647">PublishAndWait&lt; TCommand, TEvent &gt;</reimplements>
        <param>
          <type>TCommand</type>
          <declname>command</declname>
        </param>
        <param>
          <type>Func&lt; IEnumerable&lt; <ref refid="interfaceCqrs_1_1Events_1_1IEvent" kindref="compound">IEvent</ref>&lt; TAuthenticationToken &gt;&gt;, TEvent &gt;</type>
          <declname>condition</declname>
        </param>
        <param>
          <type><ref refid="interfaceCqrs_1_1Events_1_1IEventReceiver" kindref="compound">IEventReceiver</ref>&lt; TAuthenticationToken &gt;</type>
          <declname>eventReceiver</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
<para>Sends the provided <emphasis>command</emphasis>  and waits until the specified condition is satisfied an event of <emphasis>TEvent</emphasis>  </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>command</parametername>
</parameternamelist>
<parameterdescription>
<para>The <emphasis>TCommand</emphasis>  to send.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>condition</parametername>
</parameternamelist>
<parameterdescription>
<para>A delegate to be executed over and over until it returns the <emphasis>TEvent</emphasis>  that is desired, return null to keep trying.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>eventReceiver</parametername>
</parameternamelist>
<parameterdescription>
<para>If provided, is the <ref refid="interfaceCqrs_1_1Events_1_1IEventReceiver" kindref="compound">IEventReceiver&lt;TAuthenticationToken&gt;</ref> that the event is expected to be returned on.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/y/cdmdotnet/CQRS.XsamX/Framework/Azure/Cqrs.Azure.EventHub/AzureCommandBusPublisher.cs" line="198" column="1" bodyfile="/mnt/y/cdmdotnet/CQRS.XsamX/Framework/Azure/Cqrs.Azure.EventHub/AzureCommandBusPublisher.cs" bodystart="198" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Azure_1_1ServiceBus_1_1AzureCommandBusPublisher_aa955c973b4322065b65f85e6bc7835f5_1aa955c973b4322065b65f85e6bc7835f5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>TEvent</type>
        <definition>virtual TEvent Cqrs.Azure.ServiceBus.AzureCommandBusPublisher&lt; TAuthenticationToken &gt;.PublishAndWait&lt; TCommand, TEvent &gt;</definition>
        <argsstring>(TCommand command, Func&lt; IEnumerable&lt; IEvent&lt; TAuthenticationToken &gt;&gt;, TEvent &gt; condition, int millisecondsTimeout, IEventReceiver&lt; TAuthenticationToken &gt; eventReceiver=null)</argsstring>
        <name>PublishAndWait&lt; TCommand, TEvent &gt;</name>
        <reimplements refid="interfaceCqrs_1_1Commands_1_1IPublishAndWaitCommandPublisher_a4b6636f2dba029321c62a78c473590be_1a4b6636f2dba029321c62a78c473590be">PublishAndWait&lt; TCommand, TEvent &gt;</reimplements>
        <param>
          <type>TCommand</type>
          <declname>command</declname>
        </param>
        <param>
          <type>Func&lt; IEnumerable&lt; <ref refid="interfaceCqrs_1_1Events_1_1IEvent" kindref="compound">IEvent</ref>&lt; TAuthenticationToken &gt;&gt;, TEvent &gt;</type>
          <declname>condition</declname>
        </param>
        <param>
          <type>int</type>
          <declname>millisecondsTimeout</declname>
        </param>
        <param>
          <type><ref refid="interfaceCqrs_1_1Events_1_1IEventReceiver" kindref="compound">IEventReceiver</ref>&lt; TAuthenticationToken &gt;</type>
          <declname>eventReceiver</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
<para>Sends the provided <emphasis>command</emphasis>  and waits for an event of <emphasis>TEvent</emphasis>  or exits if the specified timeout is expired. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>command</parametername>
</parameternamelist>
<parameterdescription>
<para>The <emphasis>TCommand</emphasis>  to send.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>condition</parametername>
</parameternamelist>
<parameterdescription>
<para>A delegate to be executed over and over until it returns the <emphasis>TEvent</emphasis>  that is desired, return null to keep trying.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>millisecondsTimeout</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of milliseconds to wait, or F:System.Threading.Timeout.Infinite (-1) to wait indefinitely.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>eventReceiver</parametername>
</parameternamelist>
<parameterdescription>
<para>If provided, is the <ref refid="interfaceCqrs_1_1Events_1_1IEventReceiver" kindref="compound">IEventReceiver&lt;TAuthenticationToken&gt;</ref> that the event is expected to be returned on.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/y/cdmdotnet/CQRS.XsamX/Framework/Azure/Cqrs.Azure.EventHub/AzureCommandBusPublisher.cs" line="211" column="1" bodyfile="/mnt/y/cdmdotnet/CQRS.XsamX/Framework/Azure/Cqrs.Azure.EventHub/AzureCommandBusPublisher.cs" bodystart="211" bodyend="268"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Azure_1_1ServiceBus_1_1AzureCommandBusPublisher_ad4412ea4e633094feff8cc1ad9c55e9a_1ad4412ea4e633094feff8cc1ad9c55e9a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>TEvent</type>
        <definition>virtual TEvent Cqrs.Azure.ServiceBus.AzureCommandBusPublisher&lt; TAuthenticationToken &gt;.PublishAndWait&lt; TCommand, TEvent &gt;</definition>
        <argsstring>(TCommand command, Func&lt; IEnumerable&lt; IEvent&lt; TAuthenticationToken &gt;&gt;, TEvent &gt; condition, TimeSpan timeout, IEventReceiver&lt; TAuthenticationToken &gt; eventReceiver=null)</argsstring>
        <name>PublishAndWait&lt; TCommand, TEvent &gt;</name>
        <reimplements refid="interfaceCqrs_1_1Commands_1_1IPublishAndWaitCommandPublisher_a0460fc2091d52ba3463973fea5028bc6_1a0460fc2091d52ba3463973fea5028bc6">PublishAndWait&lt; TCommand, TEvent &gt;</reimplements>
        <param>
          <type>TCommand</type>
          <declname>command</declname>
        </param>
        <param>
          <type>Func&lt; IEnumerable&lt; <ref refid="interfaceCqrs_1_1Events_1_1IEvent" kindref="compound">IEvent</ref>&lt; TAuthenticationToken &gt;&gt;, TEvent &gt;</type>
          <declname>condition</declname>
        </param>
        <param>
          <type>TimeSpan</type>
          <declname>timeout</declname>
        </param>
        <param>
          <type><ref refid="interfaceCqrs_1_1Events_1_1IEventReceiver" kindref="compound">IEventReceiver</ref>&lt; TAuthenticationToken &gt;</type>
          <declname>eventReceiver</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
<para>Sends the provided <emphasis>command</emphasis>  and waits for an event of <emphasis>TEvent</emphasis>  or exits if the specified timeout is expired. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>command</parametername>
</parameternamelist>
<parameterdescription>
<para>The <emphasis>TCommand</emphasis>  to send.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>condition</parametername>
</parameternamelist>
<parameterdescription>
<para>A delegate to be executed over and over until it returns the <emphasis>TEvent</emphasis>  that is desired, return null to keep trying.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>A T:System.TimeSpan that represents the number of milliseconds to wait, or a TimeSpan that represents -1 milliseconds to wait indefinitely.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>eventReceiver</parametername>
</parameternamelist>
<parameterdescription>
<para>If provided, is the <ref refid="interfaceCqrs_1_1Events_1_1IEventReceiver" kindref="compound">IEventReceiver&lt;TAuthenticationToken&gt;</ref> that the event is expected to be returned on.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/y/cdmdotnet/CQRS.XsamX/Framework/Azure/Cqrs.Azure.EventHub/AzureCommandBusPublisher.cs" line="277" column="1" bodyfile="/mnt/y/cdmdotnet/CQRS.XsamX/Framework/Azure/Cqrs.Azure.EventHub/AzureCommandBusPublisher.cs" bodystart="277" bodyend="284"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Azure_1_1ServiceBus_1_1AzureCommandBusPublisher_a1eeb4392ac56f8a50813ced3031a9833_1a1eeb4392ac56f8a50813ced3031a9833" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Cqrs.Azure.ServiceBus.AzureCommandBusPublisher&lt; TAuthenticationToken &gt;.AzureCommandBusPublisher</definition>
        <argsstring>(IConfigurationManager configurationManager, IMessageSerialiser&lt; TAuthenticationToken &gt; messageSerialiser, IAuthenticationTokenHelper&lt; TAuthenticationToken &gt; authenticationTokenHelper, ICorrelationIdHelper correlationIdHelper, ILogger logger, IAzureBusHelper&lt; TAuthenticationToken &gt; azureBusHelper, IBusHelper busHelper)</argsstring>
        <name>AzureCommandBusPublisher</name>
        <param>
          <type><ref refid="interfaceCqrs_1_1Configuration_1_1IConfigurationManager" kindref="compound">IConfigurationManager</ref></type>
          <declname>configurationManager</declname>
        </param>
        <param>
          <type><ref refid="interfaceCqrs_1_1Azure_1_1ServiceBus_1_1IMessageSerialiser" kindref="compound">IMessageSerialiser</ref>&lt; TAuthenticationToken &gt;</type>
          <declname>messageSerialiser</declname>
        </param>
        <param>
          <type><ref refid="interfaceCqrs_1_1Authentication_1_1IAuthenticationTokenHelper" kindref="compound">IAuthenticationTokenHelper</ref>&lt; TAuthenticationToken &gt;</type>
          <declname>authenticationTokenHelper</declname>
        </param>
        <param>
          <type>ICorrelationIdHelper</type>
          <declname>correlationIdHelper</declname>
        </param>
        <param>
          <type>ILogger</type>
          <declname>logger</declname>
        </param>
        <param>
          <type><ref refid="interfaceCqrs_1_1Azure_1_1ServiceBus_1_1IAzureBusHelper" kindref="compound">IAzureBusHelper</ref>&lt; TAuthenticationToken &gt;</type>
          <declname>azureBusHelper</declname>
        </param>
        <param>
          <type><ref refid="interfaceCqrs_1_1Bus_1_1IBusHelper" kindref="compound">IBusHelper</ref></type>
          <declname>busHelper</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/y/cdmdotnet/CQRS.XsamX/Framework/Azure/Cqrs.Azure.ServiceBus/AzureCommandBusPublisher.cs" line="33" column="1" bodyfile="/mnt/y/cdmdotnet/CQRS.XsamX/Framework/Azure/Cqrs.Azure.ServiceBus/AzureCommandBusPublisher.cs" bodystart="33" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Azure_1_1ServiceBus_1_1AzureCommandBusPublisher_aefdaed600f88cc645a1b7ab41db42a69_1aefdaed600f88cc645a1b7ab41db42a69" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Cqrs.Azure.ServiceBus.AzureCommandBusPublisher&lt; TAuthenticationToken &gt;.Publish&lt; TCommand &gt;</definition>
        <argsstring>(TCommand command)</argsstring>
        <name>Publish&lt; TCommand &gt;</name>
        <reimplements refid="interfaceCqrs_1_1Commands_1_1ICommandPublisher_aeeb487ad5686d9c44d214b1daaf7833a_1aeeb487ad5686d9c44d214b1daaf7833a">Publish&lt; TCommand &gt;</reimplements>
        <param>
          <type>TCommand</type>
          <declname>command</declname>
        </param>
        <briefdescription>
<para>Publishes the provided <emphasis>command</emphasis>  on the command bus. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/y/cdmdotnet/CQRS.XsamX/Framework/Azure/Cqrs.Azure.ServiceBus/AzureCommandBusPublisher.cs" line="56" column="1" bodyfile="/mnt/y/cdmdotnet/CQRS.XsamX/Framework/Azure/Cqrs.Azure.ServiceBus/AzureCommandBusPublisher.cs" bodystart="56" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Azure_1_1ServiceBus_1_1AzureCommandBusPublisher_ad4bbbadcac7eb6a83e47649979bc2e7f_1ad4bbbadcac7eb6a83e47649979bc2e7f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Cqrs.Azure.ServiceBus.AzureCommandBusPublisher&lt; TAuthenticationToken &gt;.Send&lt; TCommand &gt;</definition>
        <argsstring>(TCommand command)</argsstring>
        <name>Send&lt; TCommand &gt;</name>
        <param>
          <type>TCommand</type>
          <declname>command</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/y/cdmdotnet/CQRS.XsamX/Framework/Azure/Cqrs.Azure.ServiceBus/AzureCommandBusPublisher.cs" line="108" column="1" bodyfile="/mnt/y/cdmdotnet/CQRS.XsamX/Framework/Azure/Cqrs.Azure.ServiceBus/AzureCommandBusPublisher.cs" bodystart="108" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Azure_1_1ServiceBus_1_1AzureCommandBusPublisher_a072f18c8709e0ae61056e34251afc506_1a072f18c8709e0ae61056e34251afc506" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Cqrs.Azure.ServiceBus.AzureCommandBusPublisher&lt; TAuthenticationToken &gt;.Publish&lt; TCommand &gt;</definition>
        <argsstring>(IEnumerable&lt; TCommand &gt; commands)</argsstring>
        <name>Publish&lt; TCommand &gt;</name>
        <reimplements refid="interfaceCqrs_1_1Commands_1_1ICommandPublisher_af0f033c0b949e5650032e4f00b11b595_1af0f033c0b949e5650032e4f00b11b595">Publish&lt; TCommand &gt;</reimplements>
        <param>
          <type>IEnumerable&lt; TCommand &gt;</type>
          <declname>commands</declname>
        </param>
        <briefdescription>
<para>Publishes the provided <emphasis>commands</emphasis>  on the command bus. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/y/cdmdotnet/CQRS.XsamX/Framework/Azure/Cqrs.Azure.ServiceBus/AzureCommandBusPublisher.cs" line="114" column="1" bodyfile="/mnt/y/cdmdotnet/CQRS.XsamX/Framework/Azure/Cqrs.Azure.ServiceBus/AzureCommandBusPublisher.cs" bodystart="114" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Azure_1_1ServiceBus_1_1AzureCommandBusPublisher_a1f6742c31a81a1bc96962acd28d4e8d2_1a1f6742c31a81a1bc96962acd28d4e8d2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Cqrs.Azure.ServiceBus.AzureCommandBusPublisher&lt; TAuthenticationToken &gt;.Send&lt; TCommand &gt;</definition>
        <argsstring>(IEnumerable&lt; TCommand &gt; commands)</argsstring>
        <name>Send&lt; TCommand &gt;</name>
        <param>
          <type>IEnumerable&lt; TCommand &gt;</type>
          <declname>commands</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/y/cdmdotnet/CQRS.XsamX/Framework/Azure/Cqrs.Azure.ServiceBus/AzureCommandBusPublisher.cs" line="187" column="1" bodyfile="/mnt/y/cdmdotnet/CQRS.XsamX/Framework/Azure/Cqrs.Azure.ServiceBus/AzureCommandBusPublisher.cs" bodystart="187" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Azure_1_1ServiceBus_1_1AzureCommandBusPublisher_ab63045bffba3925270d0087e6fa4366f_1ab63045bffba3925270d0087e6fa4366f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>TEvent</type>
        <definition>virtual TEvent Cqrs.Azure.ServiceBus.AzureCommandBusPublisher&lt; TAuthenticationToken &gt;.PublishAndWait&lt; TCommand, TEvent &gt;</definition>
        <argsstring>(TCommand command, IEventReceiver&lt; TAuthenticationToken &gt; eventReceiver=null)</argsstring>
        <name>PublishAndWait&lt; TCommand, TEvent &gt;</name>
        <reimplements refid="interfaceCqrs_1_1Commands_1_1IPublishAndWaitCommandPublisher_a19ffb318c830e9f05d4adae985232f30_1a19ffb318c830e9f05d4adae985232f30">PublishAndWait&lt; TCommand, TEvent &gt;</reimplements>
        <param>
          <type>TCommand</type>
          <declname>command</declname>
        </param>
        <param>
          <type><ref refid="interfaceCqrs_1_1Events_1_1IEventReceiver" kindref="compound">IEventReceiver</ref>&lt; TAuthenticationToken &gt;</type>
          <declname>eventReceiver</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
<para>Publishes the provided <emphasis>command</emphasis>  and waits for an event of <emphasis>TEvent</emphasis>  </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>command</parametername>
</parameternamelist>
<parameterdescription>
<para>The <emphasis>TCommand</emphasis>  to publish.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>eventReceiver</parametername>
</parameternamelist>
<parameterdescription>
<para>If provided, is the <ref refid="interfaceCqrs_1_1Events_1_1IEventReceiver" kindref="compound">IEventReceiver&lt;TAuthenticationToken&gt;</ref> that the event is expected to be returned on.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/y/cdmdotnet/CQRS.XsamX/Framework/Azure/Cqrs.Azure.ServiceBus/AzureCommandBusPublisher.cs" line="198" column="1" bodyfile="/mnt/y/cdmdotnet/CQRS.XsamX/Framework/Azure/Cqrs.Azure.ServiceBus/AzureCommandBusPublisher.cs" bodystart="198" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Azure_1_1ServiceBus_1_1AzureCommandBusPublisher_a0d60547c692b453310a9062bdfa6b247_1a0d60547c692b453310a9062bdfa6b247" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>TEvent</type>
        <definition>virtual TEvent Cqrs.Azure.ServiceBus.AzureCommandBusPublisher&lt; TAuthenticationToken &gt;.PublishAndWait&lt; TCommand, TEvent &gt;</definition>
        <argsstring>(TCommand command, int millisecondsTimeout, IEventReceiver&lt; TAuthenticationToken &gt; eventReceiver=null)</argsstring>
        <name>PublishAndWait&lt; TCommand, TEvent &gt;</name>
        <reimplements refid="interfaceCqrs_1_1Commands_1_1IPublishAndWaitCommandPublisher_ad3761879cf9e09c9e89cabf8067b6de4_1ad3761879cf9e09c9e89cabf8067b6de4">PublishAndWait&lt; TCommand, TEvent &gt;</reimplements>
        <param>
          <type>TCommand</type>
          <declname>command</declname>
        </param>
        <param>
          <type>int</type>
          <declname>millisecondsTimeout</declname>
        </param>
        <param>
          <type><ref refid="interfaceCqrs_1_1Events_1_1IEventReceiver" kindref="compound">IEventReceiver</ref>&lt; TAuthenticationToken &gt;</type>
          <declname>eventReceiver</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
<para>Publishes the provided <emphasis>command</emphasis>  and waits for an event of <emphasis>TEvent</emphasis>  or exits if the specified timeout is expired. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>command</parametername>
</parameternamelist>
<parameterdescription>
<para>The <emphasis>TCommand</emphasis>  to publish.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>millisecondsTimeout</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of milliseconds to wait, or F:System.Threading.Timeout.Infinite (-1) to wait indefinitely.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>eventReceiver</parametername>
</parameternamelist>
<parameterdescription>
<para>If provided, is the <ref refid="interfaceCqrs_1_1Events_1_1IEventReceiver" kindref="compound">IEventReceiver&lt;TAuthenticationToken&gt;</ref> that the event is expected to be returned on.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/y/cdmdotnet/CQRS.XsamX/Framework/Azure/Cqrs.Azure.ServiceBus/AzureCommandBusPublisher.cs" line="210" column="1" bodyfile="/mnt/y/cdmdotnet/CQRS.XsamX/Framework/Azure/Cqrs.Azure.ServiceBus/AzureCommandBusPublisher.cs" bodystart="210" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Azure_1_1ServiceBus_1_1AzureCommandBusPublisher_ad0fd6759a76dcbc2d527f15908cc09fc_1ad0fd6759a76dcbc2d527f15908cc09fc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>TEvent</type>
        <definition>virtual TEvent Cqrs.Azure.ServiceBus.AzureCommandBusPublisher&lt; TAuthenticationToken &gt;.PublishAndWait&lt; TCommand, TEvent &gt;</definition>
        <argsstring>(TCommand command, TimeSpan timeout, IEventReceiver&lt; TAuthenticationToken &gt; eventReceiver=null)</argsstring>
        <name>PublishAndWait&lt; TCommand, TEvent &gt;</name>
        <reimplements refid="interfaceCqrs_1_1Commands_1_1IPublishAndWaitCommandPublisher_a02ef39482cb50e6e15e06144adca1ed5_1a02ef39482cb50e6e15e06144adca1ed5">PublishAndWait&lt; TCommand, TEvent &gt;</reimplements>
        <param>
          <type>TCommand</type>
          <declname>command</declname>
        </param>
        <param>
          <type>TimeSpan</type>
          <declname>timeout</declname>
        </param>
        <param>
          <type><ref refid="interfaceCqrs_1_1Events_1_1IEventReceiver" kindref="compound">IEventReceiver</ref>&lt; TAuthenticationToken &gt;</type>
          <declname>eventReceiver</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
<para>Publishes the provided <emphasis>command</emphasis>  and waits for an event of <emphasis>TEvent</emphasis>  or exits if the specified timeout is expired. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>command</parametername>
</parameternamelist>
<parameterdescription>
<para>The <emphasis>TCommand</emphasis>  to publish.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>A T:System.TimeSpan that represents the number of milliseconds to wait, or a TimeSpan that represents -1 milliseconds to wait indefinitely.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>eventReceiver</parametername>
</parameternamelist>
<parameterdescription>
<para>If provided, is the <ref refid="interfaceCqrs_1_1Events_1_1IEventReceiver" kindref="compound">IEventReceiver&lt;TAuthenticationToken&gt;</ref> that the event is expected to be returned on.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/y/cdmdotnet/CQRS.XsamX/Framework/Azure/Cqrs.Azure.ServiceBus/AzureCommandBusPublisher.cs" line="222" column="1" bodyfile="/mnt/y/cdmdotnet/CQRS.XsamX/Framework/Azure/Cqrs.Azure.ServiceBus/AzureCommandBusPublisher.cs" bodystart="222" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Azure_1_1ServiceBus_1_1AzureCommandBusPublisher_add51ed3284350c68f01212aa689e106f_1add51ed3284350c68f01212aa689e106f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>TEvent</type>
        <definition>virtual TEvent Cqrs.Azure.ServiceBus.AzureCommandBusPublisher&lt; TAuthenticationToken &gt;.PublishAndWait&lt; TCommand, TEvent &gt;</definition>
        <argsstring>(TCommand command, Func&lt; IEnumerable&lt; IEvent&lt; TAuthenticationToken &gt;&gt;, TEvent &gt; condition, IEventReceiver&lt; TAuthenticationToken &gt; eventReceiver=null)</argsstring>
        <name>PublishAndWait&lt; TCommand, TEvent &gt;</name>
        <reimplements refid="interfaceCqrs_1_1Commands_1_1IPublishAndWaitCommandPublisher_a83e4480bf8cd6015254d700056cf1647_1a83e4480bf8cd6015254d700056cf1647">PublishAndWait&lt; TCommand, TEvent &gt;</reimplements>
        <param>
          <type>TCommand</type>
          <declname>command</declname>
        </param>
        <param>
          <type>Func&lt; IEnumerable&lt; <ref refid="interfaceCqrs_1_1Events_1_1IEvent" kindref="compound">IEvent</ref>&lt; TAuthenticationToken &gt;&gt;, TEvent &gt;</type>
          <declname>condition</declname>
        </param>
        <param>
          <type><ref refid="interfaceCqrs_1_1Events_1_1IEventReceiver" kindref="compound">IEventReceiver</ref>&lt; TAuthenticationToken &gt;</type>
          <declname>eventReceiver</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
<para>Publishes the provided <emphasis>command</emphasis>  and waits until the specified condition is satisfied an event of <emphasis>TEvent</emphasis>  </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>command</parametername>
</parameternamelist>
<parameterdescription>
<para>The <emphasis>TCommand</emphasis>  to publish.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>condition</parametername>
</parameternamelist>
<parameterdescription>
<para>A delegate to be executed over and over until it returns the <emphasis>TEvent</emphasis>  that is desired, return null to keep trying.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>eventReceiver</parametername>
</parameternamelist>
<parameterdescription>
<para>If provided, is the <ref refid="interfaceCqrs_1_1Events_1_1IEventReceiver" kindref="compound">IEventReceiver&lt;TAuthenticationToken&gt;</ref> that the event is expected to be returned on.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/y/cdmdotnet/CQRS.XsamX/Framework/Azure/Cqrs.Azure.ServiceBus/AzureCommandBusPublisher.cs" line="237" column="1" bodyfile="/mnt/y/cdmdotnet/CQRS.XsamX/Framework/Azure/Cqrs.Azure.ServiceBus/AzureCommandBusPublisher.cs" bodystart="237" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Azure_1_1ServiceBus_1_1AzureCommandBusPublisher_aa955c973b4322065b65f85e6bc7835f5_1aa955c973b4322065b65f85e6bc7835f5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>TEvent</type>
        <definition>virtual TEvent Cqrs.Azure.ServiceBus.AzureCommandBusPublisher&lt; TAuthenticationToken &gt;.PublishAndWait&lt; TCommand, TEvent &gt;</definition>
        <argsstring>(TCommand command, Func&lt; IEnumerable&lt; IEvent&lt; TAuthenticationToken &gt;&gt;, TEvent &gt; condition, int millisecondsTimeout, IEventReceiver&lt; TAuthenticationToken &gt; eventReceiver=null)</argsstring>
        <name>PublishAndWait&lt; TCommand, TEvent &gt;</name>
        <reimplements refid="interfaceCqrs_1_1Commands_1_1IPublishAndWaitCommandPublisher_a4b6636f2dba029321c62a78c473590be_1a4b6636f2dba029321c62a78c473590be">PublishAndWait&lt; TCommand, TEvent &gt;</reimplements>
        <param>
          <type>TCommand</type>
          <declname>command</declname>
        </param>
        <param>
          <type>Func&lt; IEnumerable&lt; <ref refid="interfaceCqrs_1_1Events_1_1IEvent" kindref="compound">IEvent</ref>&lt; TAuthenticationToken &gt;&gt;, TEvent &gt;</type>
          <declname>condition</declname>
        </param>
        <param>
          <type>int</type>
          <declname>millisecondsTimeout</declname>
        </param>
        <param>
          <type><ref refid="interfaceCqrs_1_1Events_1_1IEventReceiver" kindref="compound">IEventReceiver</ref>&lt; TAuthenticationToken &gt;</type>
          <declname>eventReceiver</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
<para>Publishes the provided <emphasis>command</emphasis>  and waits for an event of <emphasis>TEvent</emphasis>  or exits if the specified timeout is expired. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>command</parametername>
</parameternamelist>
<parameterdescription>
<para>The <emphasis>TCommand</emphasis>  to publish.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>condition</parametername>
</parameternamelist>
<parameterdescription>
<para>A delegate to be executed over and over until it returns the <emphasis>TEvent</emphasis>  that is desired, return null to keep trying.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>millisecondsTimeout</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of milliseconds to wait, or F:System.Threading.Timeout.Infinite (-1) to wait indefinitely.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>eventReceiver</parametername>
</parameternamelist>
<parameterdescription>
<para>If provided, is the <ref refid="interfaceCqrs_1_1Events_1_1IEventReceiver" kindref="compound">IEventReceiver&lt;TAuthenticationToken&gt;</ref> that the event is expected to be returned on.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/y/cdmdotnet/CQRS.XsamX/Framework/Azure/Cqrs.Azure.ServiceBus/AzureCommandBusPublisher.cs" line="250" column="1" bodyfile="/mnt/y/cdmdotnet/CQRS.XsamX/Framework/Azure/Cqrs.Azure.ServiceBus/AzureCommandBusPublisher.cs" bodystart="250" bodyend="318"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Azure_1_1ServiceBus_1_1AzureCommandBusPublisher_ad4412ea4e633094feff8cc1ad9c55e9a_1ad4412ea4e633094feff8cc1ad9c55e9a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>TEvent</type>
        <definition>virtual TEvent Cqrs.Azure.ServiceBus.AzureCommandBusPublisher&lt; TAuthenticationToken &gt;.PublishAndWait&lt; TCommand, TEvent &gt;</definition>
        <argsstring>(TCommand command, Func&lt; IEnumerable&lt; IEvent&lt; TAuthenticationToken &gt;&gt;, TEvent &gt; condition, TimeSpan timeout, IEventReceiver&lt; TAuthenticationToken &gt; eventReceiver=null)</argsstring>
        <name>PublishAndWait&lt; TCommand, TEvent &gt;</name>
        <reimplements refid="interfaceCqrs_1_1Commands_1_1IPublishAndWaitCommandPublisher_a0460fc2091d52ba3463973fea5028bc6_1a0460fc2091d52ba3463973fea5028bc6">PublishAndWait&lt; TCommand, TEvent &gt;</reimplements>
        <param>
          <type>TCommand</type>
          <declname>command</declname>
        </param>
        <param>
          <type>Func&lt; IEnumerable&lt; <ref refid="interfaceCqrs_1_1Events_1_1IEvent" kindref="compound">IEvent</ref>&lt; TAuthenticationToken &gt;&gt;, TEvent &gt;</type>
          <declname>condition</declname>
        </param>
        <param>
          <type>TimeSpan</type>
          <declname>timeout</declname>
        </param>
        <param>
          <type><ref refid="interfaceCqrs_1_1Events_1_1IEventReceiver" kindref="compound">IEventReceiver</ref>&lt; TAuthenticationToken &gt;</type>
          <declname>eventReceiver</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
<para>Publishes the provided <emphasis>command</emphasis>  and waits for an event of <emphasis>TEvent</emphasis>  or exits if the specified timeout is expired. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>command</parametername>
</parameternamelist>
<parameterdescription>
<para>The <emphasis>TCommand</emphasis>  to publish.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>condition</parametername>
</parameternamelist>
<parameterdescription>
<para>A delegate to be executed over and over until it returns the <emphasis>TEvent</emphasis>  that is desired, return null to keep trying.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>A T:System.TimeSpan that represents the number of milliseconds to wait, or a TimeSpan that represents -1 milliseconds to wait indefinitely.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>eventReceiver</parametername>
</parameternamelist>
<parameterdescription>
<para>If provided, is the <ref refid="interfaceCqrs_1_1Events_1_1IEventReceiver" kindref="compound">IEventReceiver&lt;TAuthenticationToken&gt;</ref> that the event is expected to be returned on.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/y/cdmdotnet/CQRS.XsamX/Framework/Azure/Cqrs.Azure.ServiceBus/AzureCommandBusPublisher.cs" line="327" column="1" bodyfile="/mnt/y/cdmdotnet/CQRS.XsamX/Framework/Azure/Cqrs.Azure.ServiceBus/AzureCommandBusPublisher.cs" bodystart="327" bodyend="334"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A ICommandPublisher&lt;TAuthenticationToken&gt; that resolves handlers , executes the handler and then publishes the ICommand&lt;TAuthenticationToken&gt; on the public command bus. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="810">
        <label>ICommandPublisher&lt; TAuthenticationToken &gt;</label>
        <link refid="interfaceCqrs_1_1Commands_1_1ICommandPublisher"/>
      </node>
      <node id="807">
        <label>Cqrs.Azure.ServiceBus.AzureCommandBusPublisher&lt; TAuthenticationToken &gt;</label>
        <link refid="classCqrs_1_1Azure_1_1ServiceBus_1_1AzureCommandBusPublisher"/>
        <childnode refid="808" relation="public-inheritance">
        </childnode>
        <childnode refid="809" relation="public-inheritance">
        </childnode>
        <childnode refid="808" relation="public-inheritance">
        </childnode>
        <childnode refid="809" relation="public-inheritance">
        </childnode>
      </node>
      <node id="808">
        <label>AzureCommandBus&lt; TAuthenticationToken &gt;</label>
        <link refid="classCqrs_1_1Azure_1_1ServiceBus_1_1AzureCommandBus"/>
      </node>
      <node id="809">
        <label>IPublishAndWaitCommandPublisher&lt; TAuthenticationToken &gt;</label>
        <link refid="interfaceCqrs_1_1Commands_1_1IPublishAndWaitCommandPublisher"/>
        <childnode refid="810" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="814">
        <label>ICommandPublisher&lt; TAuthenticationToken &gt;</label>
        <link refid="interfaceCqrs_1_1Commands_1_1ICommandPublisher"/>
      </node>
      <node id="811">
        <label>Cqrs.Azure.ServiceBus.AzureCommandBusPublisher&lt; TAuthenticationToken &gt;</label>
        <link refid="classCqrs_1_1Azure_1_1ServiceBus_1_1AzureCommandBusPublisher"/>
        <childnode refid="812" relation="public-inheritance">
        </childnode>
        <childnode refid="813" relation="public-inheritance">
        </childnode>
        <childnode refid="812" relation="public-inheritance">
        </childnode>
        <childnode refid="813" relation="public-inheritance">
        </childnode>
      </node>
      <node id="812">
        <label>AzureCommandBus&lt; TAuthenticationToken &gt;</label>
        <link refid="classCqrs_1_1Azure_1_1ServiceBus_1_1AzureCommandBus"/>
      </node>
      <node id="813">
        <label>IPublishAndWaitCommandPublisher&lt; TAuthenticationToken &gt;</label>
        <link refid="interfaceCqrs_1_1Commands_1_1IPublishAndWaitCommandPublisher"/>
        <childnode refid="814" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/mnt/y/cdmdotnet/CQRS.XsamX/Framework/Azure/Cqrs.Azure.ServiceBus/AzureCommandBusPublisher.cs" line="32" column="1" bodyfile="/mnt/y/cdmdotnet/CQRS.XsamX/Framework/Azure/Cqrs.Azure.ServiceBus/AzureCommandBusPublisher.cs" bodystart="31" bodyend="337"/>
    <listofallmembers>
      <member refid="classCqrs_1_1Azure_1_1ServiceBus_1_1AzureCommandBusPublisher_a5a553159ba76af2fedc86d534fe24fb1_1a5a553159ba76af2fedc86d534fe24fb1" prot="public" virt="non-virtual"><scope>Cqrs::Azure::ServiceBus::AzureCommandBusPublisher</scope><name>AzureCommandBusPublisher</name></member>
      <member refid="classCqrs_1_1Azure_1_1ServiceBus_1_1AzureCommandBusPublisher_a1eeb4392ac56f8a50813ced3031a9833_1a1eeb4392ac56f8a50813ced3031a9833" prot="public" virt="non-virtual"><scope>Cqrs::Azure::ServiceBus::AzureCommandBusPublisher</scope><name>AzureCommandBusPublisher</name></member>
      <member refid="classCqrs_1_1Azure_1_1ServiceBus_1_1AzureCommandBusPublisher_1a2aab9b4102fadd316d94719d71cec943" prot="package" virt="non-virtual"><scope>Cqrs::Azure::ServiceBus::AzureCommandBusPublisher</scope><name>DebuggerDisplay</name></member>
      <member refid="classCqrs_1_1Azure_1_1ServiceBus_1_1AzureCommandBusPublisher_aefdaed600f88cc645a1b7ab41db42a69_1aefdaed600f88cc645a1b7ab41db42a69" prot="public" virt="virtual"><scope>Cqrs::Azure::ServiceBus::AzureCommandBusPublisher</scope><name>Publish&lt; TCommand &gt;</name></member>
      <member refid="classCqrs_1_1Azure_1_1ServiceBus_1_1AzureCommandBusPublisher_a072f18c8709e0ae61056e34251afc506_1a072f18c8709e0ae61056e34251afc506" prot="public" virt="virtual"><scope>Cqrs::Azure::ServiceBus::AzureCommandBusPublisher</scope><name>Publish&lt; TCommand &gt;</name></member>
      <member refid="classCqrs_1_1Azure_1_1ServiceBus_1_1AzureCommandBusPublisher_aefdaed600f88cc645a1b7ab41db42a69_1aefdaed600f88cc645a1b7ab41db42a69" prot="public" virt="virtual"><scope>Cqrs::Azure::ServiceBus::AzureCommandBusPublisher</scope><name>Publish&lt; TCommand &gt;</name></member>
      <member refid="classCqrs_1_1Azure_1_1ServiceBus_1_1AzureCommandBusPublisher_a072f18c8709e0ae61056e34251afc506_1a072f18c8709e0ae61056e34251afc506" prot="public" virt="virtual"><scope>Cqrs::Azure::ServiceBus::AzureCommandBusPublisher</scope><name>Publish&lt; TCommand &gt;</name></member>
      <member refid="classCqrs_1_1Azure_1_1ServiceBus_1_1AzureCommandBusPublisher_ab63045bffba3925270d0087e6fa4366f_1ab63045bffba3925270d0087e6fa4366f" prot="public" virt="virtual"><scope>Cqrs::Azure::ServiceBus::AzureCommandBusPublisher</scope><name>PublishAndWait&lt; TCommand, TEvent &gt;</name></member>
      <member refid="classCqrs_1_1Azure_1_1ServiceBus_1_1AzureCommandBusPublisher_a0d60547c692b453310a9062bdfa6b247_1a0d60547c692b453310a9062bdfa6b247" prot="public" virt="virtual"><scope>Cqrs::Azure::ServiceBus::AzureCommandBusPublisher</scope><name>PublishAndWait&lt; TCommand, TEvent &gt;</name></member>
      <member refid="classCqrs_1_1Azure_1_1ServiceBus_1_1AzureCommandBusPublisher_ad0fd6759a76dcbc2d527f15908cc09fc_1ad0fd6759a76dcbc2d527f15908cc09fc" prot="public" virt="virtual"><scope>Cqrs::Azure::ServiceBus::AzureCommandBusPublisher</scope><name>PublishAndWait&lt; TCommand, TEvent &gt;</name></member>
      <member refid="classCqrs_1_1Azure_1_1ServiceBus_1_1AzureCommandBusPublisher_add51ed3284350c68f01212aa689e106f_1add51ed3284350c68f01212aa689e106f" prot="public" virt="virtual"><scope>Cqrs::Azure::ServiceBus::AzureCommandBusPublisher</scope><name>PublishAndWait&lt; TCommand, TEvent &gt;</name></member>
      <member refid="classCqrs_1_1Azure_1_1ServiceBus_1_1AzureCommandBusPublisher_aa955c973b4322065b65f85e6bc7835f5_1aa955c973b4322065b65f85e6bc7835f5" prot="public" virt="virtual"><scope>Cqrs::Azure::ServiceBus::AzureCommandBusPublisher</scope><name>PublishAndWait&lt; TCommand, TEvent &gt;</name></member>
      <member refid="classCqrs_1_1Azure_1_1ServiceBus_1_1AzureCommandBusPublisher_ad4412ea4e633094feff8cc1ad9c55e9a_1ad4412ea4e633094feff8cc1ad9c55e9a" prot="public" virt="virtual"><scope>Cqrs::Azure::ServiceBus::AzureCommandBusPublisher</scope><name>PublishAndWait&lt; TCommand, TEvent &gt;</name></member>
      <member refid="classCqrs_1_1Azure_1_1ServiceBus_1_1AzureCommandBusPublisher_ab63045bffba3925270d0087e6fa4366f_1ab63045bffba3925270d0087e6fa4366f" prot="public" virt="virtual"><scope>Cqrs::Azure::ServiceBus::AzureCommandBusPublisher</scope><name>PublishAndWait&lt; TCommand, TEvent &gt;</name></member>
      <member refid="classCqrs_1_1Azure_1_1ServiceBus_1_1AzureCommandBusPublisher_a0d60547c692b453310a9062bdfa6b247_1a0d60547c692b453310a9062bdfa6b247" prot="public" virt="virtual"><scope>Cqrs::Azure::ServiceBus::AzureCommandBusPublisher</scope><name>PublishAndWait&lt; TCommand, TEvent &gt;</name></member>
      <member refid="classCqrs_1_1Azure_1_1ServiceBus_1_1AzureCommandBusPublisher_ad0fd6759a76dcbc2d527f15908cc09fc_1ad0fd6759a76dcbc2d527f15908cc09fc" prot="public" virt="virtual"><scope>Cqrs::Azure::ServiceBus::AzureCommandBusPublisher</scope><name>PublishAndWait&lt; TCommand, TEvent &gt;</name></member>
      <member refid="classCqrs_1_1Azure_1_1ServiceBus_1_1AzureCommandBusPublisher_add51ed3284350c68f01212aa689e106f_1add51ed3284350c68f01212aa689e106f" prot="public" virt="virtual"><scope>Cqrs::Azure::ServiceBus::AzureCommandBusPublisher</scope><name>PublishAndWait&lt; TCommand, TEvent &gt;</name></member>
      <member refid="classCqrs_1_1Azure_1_1ServiceBus_1_1AzureCommandBusPublisher_aa955c973b4322065b65f85e6bc7835f5_1aa955c973b4322065b65f85e6bc7835f5" prot="public" virt="virtual"><scope>Cqrs::Azure::ServiceBus::AzureCommandBusPublisher</scope><name>PublishAndWait&lt; TCommand, TEvent &gt;</name></member>
      <member refid="classCqrs_1_1Azure_1_1ServiceBus_1_1AzureCommandBusPublisher_ad4412ea4e633094feff8cc1ad9c55e9a_1ad4412ea4e633094feff8cc1ad9c55e9a" prot="public" virt="virtual"><scope>Cqrs::Azure::ServiceBus::AzureCommandBusPublisher</scope><name>PublishAndWait&lt; TCommand, TEvent &gt;</name></member>
      <member refid="classCqrs_1_1Azure_1_1ServiceBus_1_1AzureCommandBusPublisher_ad4bbbadcac7eb6a83e47649979bc2e7f_1ad4bbbadcac7eb6a83e47649979bc2e7f" prot="public" virt="virtual"><scope>Cqrs::Azure::ServiceBus::AzureCommandBusPublisher</scope><name>Send&lt; TCommand &gt;</name></member>
      <member refid="classCqrs_1_1Azure_1_1ServiceBus_1_1AzureCommandBusPublisher_a1f6742c31a81a1bc96962acd28d4e8d2_1a1f6742c31a81a1bc96962acd28d4e8d2" prot="public" virt="virtual"><scope>Cqrs::Azure::ServiceBus::AzureCommandBusPublisher</scope><name>Send&lt; TCommand &gt;</name></member>
      <member refid="classCqrs_1_1Azure_1_1ServiceBus_1_1AzureCommandBusPublisher_ad4bbbadcac7eb6a83e47649979bc2e7f_1ad4bbbadcac7eb6a83e47649979bc2e7f" prot="public" virt="virtual"><scope>Cqrs::Azure::ServiceBus::AzureCommandBusPublisher</scope><name>Send&lt; TCommand &gt;</name></member>
      <member refid="classCqrs_1_1Azure_1_1ServiceBus_1_1AzureCommandBusPublisher_a1f6742c31a81a1bc96962acd28d4e8d2_1a1f6742c31a81a1bc96962acd28d4e8d2" prot="public" virt="virtual"><scope>Cqrs::Azure::ServiceBus::AzureCommandBusPublisher</scope><name>Send&lt; TCommand &gt;</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
