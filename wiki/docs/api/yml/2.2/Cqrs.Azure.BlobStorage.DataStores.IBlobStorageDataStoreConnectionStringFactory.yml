### YamlMime:ManagedReference
items:
- uid: Cqrs.Azure.BlobStorage.DataStores.IBlobStorageDataStoreConnectionStringFactory
  commentId: T:Cqrs.Azure.BlobStorage.DataStores.IBlobStorageDataStoreConnectionStringFactory
  id: IBlobStorageDataStoreConnectionStringFactory
  parent: Cqrs.Azure.BlobStorage.DataStores
  children:
  - Cqrs.Azure.BlobStorage.DataStores.IBlobStorageDataStoreConnectionStringFactory.GetContainerName``1
  - Cqrs.Azure.BlobStorage.DataStores.IBlobStorageDataStoreConnectionStringFactory.GetEntityName``1
  - Cqrs.Azure.BlobStorage.DataStores.IBlobStorageDataStoreConnectionStringFactory.IsContainerPublic``1
  langs:
  - csharp
  - vb
  name: IBlobStorageDataStoreConnectionStringFactory
  nameWithType: IBlobStorageDataStoreConnectionStringFactory
  fullName: Cqrs.Azure.BlobStorage.DataStores.IBlobStorageDataStoreConnectionStringFactory
  type: Interface
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.BlobStorage/DataStores/IBlobStorageDataStoreConnectionStringFactory.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: IBlobStorageDataStoreConnectionStringFactory
    path: Framework/Azure/Cqrs.Azure.BlobStorage/DataStores/IBlobStorageDataStoreConnectionStringFactory.cs
    startLine: 18
  assemblies:
  - Cqrs.Azure.BlobStorage
  namespace: Cqrs.Azure.BlobStorage.DataStores
  summary: "\nA factory for getting connection strings and container names for <xref href=\"Cqrs.DataStores.IDataStore%601\" data-throw-if-not-resolved=\"false\"></xref> access.\nThis factory supports reading and writing from separate storage accounts. Specifically you can have as many different storage accounts as you want to configure when writing.\nThis allows for manual mirroring of data while reading from the fastest/closest location possible.\n"
  example: []
  syntax:
    content: 'public interface IBlobStorageDataStoreConnectionStringFactory : IBlobStorageStoreConnectionStringFactory, IStorageStoreConnectionStringFactory'
    content.vb: >-
      Public Interface IBlobStorageDataStoreConnectionStringFactory
          Inherits IBlobStorageStoreConnectionStringFactory
  inheritedMembers:
  - Cqrs.Azure.BlobStorage.IBlobStorageStoreConnectionStringFactory.GetBaseContainerName
  - Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory.GetWritableConnectionStrings
  - Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory.GetReadableConnectionString
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Cqrs.Azure.BlobStorage.DataStores.IBlobStorageDataStoreConnectionStringFactory.GetContainerName``1
  commentId: M:Cqrs.Azure.BlobStorage.DataStores.IBlobStorageDataStoreConnectionStringFactory.GetContainerName``1
  id: GetContainerName``1
  parent: Cqrs.Azure.BlobStorage.DataStores.IBlobStorageDataStoreConnectionStringFactory
  langs:
  - csharp
  - vb
  name: GetContainerName<TData>()
  nameWithType: IBlobStorageDataStoreConnectionStringFactory.GetContainerName<TData>()
  fullName: Cqrs.Azure.BlobStorage.DataStores.IBlobStorageDataStoreConnectionStringFactory.GetContainerName<TData>()
  type: Method
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.BlobStorage/DataStores/IBlobStorageDataStoreConnectionStringFactory.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: GetContainerName
    path: Framework/Azure/Cqrs.Azure.BlobStorage/DataStores/IBlobStorageDataStoreConnectionStringFactory.cs
    startLine: 23
  assemblies:
  - Cqrs.Azure.BlobStorage
  namespace: Cqrs.Azure.BlobStorage.DataStores
  summary: "\nGets the name of the container.\n"
  example: []
  syntax:
    content: 'string GetContainerName<TData>()where TData : Entity'
    typeParameters:
    - id: TData
    return:
      type: System.String
    content.vb: Function GetContainerName(Of TData As Entity) As String
  overload: Cqrs.Azure.BlobStorage.DataStores.IBlobStorageDataStoreConnectionStringFactory.GetContainerName*
  nameWithType.vb: IBlobStorageDataStoreConnectionStringFactory.GetContainerName(Of TData)()
  fullName.vb: Cqrs.Azure.BlobStorage.DataStores.IBlobStorageDataStoreConnectionStringFactory.GetContainerName(Of TData)()
  name.vb: GetContainerName(Of TData)()
- uid: Cqrs.Azure.BlobStorage.DataStores.IBlobStorageDataStoreConnectionStringFactory.IsContainerPublic``1
  commentId: M:Cqrs.Azure.BlobStorage.DataStores.IBlobStorageDataStoreConnectionStringFactory.IsContainerPublic``1
  id: IsContainerPublic``1
  parent: Cqrs.Azure.BlobStorage.DataStores.IBlobStorageDataStoreConnectionStringFactory
  langs:
  - csharp
  - vb
  name: IsContainerPublic<TData>()
  nameWithType: IBlobStorageDataStoreConnectionStringFactory.IsContainerPublic<TData>()
  fullName: Cqrs.Azure.BlobStorage.DataStores.IBlobStorageDataStoreConnectionStringFactory.IsContainerPublic<TData>()
  type: Method
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.BlobStorage/DataStores/IBlobStorageDataStoreConnectionStringFactory.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: IsContainerPublic
    path: Framework/Azure/Cqrs.Azure.BlobStorage/DataStores/IBlobStorageDataStoreConnectionStringFactory.cs
    startLine: 29
  assemblies:
  - Cqrs.Azure.BlobStorage
  namespace: Cqrs.Azure.BlobStorage.DataStores
  summary: "\nGet if the container is public or not.\n"
  example: []
  syntax:
    content: 'bool IsContainerPublic<TData>()where TData : Entity'
    typeParameters:
    - id: TData
    return:
      type: System.Boolean
    content.vb: Function IsContainerPublic(Of TData As Entity) As Boolean
  overload: Cqrs.Azure.BlobStorage.DataStores.IBlobStorageDataStoreConnectionStringFactory.IsContainerPublic*
  nameWithType.vb: IBlobStorageDataStoreConnectionStringFactory.IsContainerPublic(Of TData)()
  fullName.vb: Cqrs.Azure.BlobStorage.DataStores.IBlobStorageDataStoreConnectionStringFactory.IsContainerPublic(Of TData)()
  name.vb: IsContainerPublic(Of TData)()
- uid: Cqrs.Azure.BlobStorage.DataStores.IBlobStorageDataStoreConnectionStringFactory.GetEntityName``1
  commentId: M:Cqrs.Azure.BlobStorage.DataStores.IBlobStorageDataStoreConnectionStringFactory.GetEntityName``1
  id: GetEntityName``1
  parent: Cqrs.Azure.BlobStorage.DataStores.IBlobStorageDataStoreConnectionStringFactory
  langs:
  - csharp
  - vb
  name: GetEntityName<TData>()
  nameWithType: IBlobStorageDataStoreConnectionStringFactory.GetEntityName<TData>()
  fullName: Cqrs.Azure.BlobStorage.DataStores.IBlobStorageDataStoreConnectionStringFactory.GetEntityName<TData>()
  type: Method
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.BlobStorage/DataStores/IBlobStorageDataStoreConnectionStringFactory.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: GetEntityName
    path: Framework/Azure/Cqrs.Azure.BlobStorage/DataStores/IBlobStorageDataStoreConnectionStringFactory.cs
    startLine: 35
  assemblies:
  - Cqrs.Azure.BlobStorage
  namespace: Cqrs.Azure.BlobStorage.DataStores
  summary: "\nGets the name of the entity that is safe for container use.\n"
  example: []
  syntax:
    content: 'string GetEntityName<TData>()where TData : Entity'
    typeParameters:
    - id: TData
    return:
      type: System.String
    content.vb: Function GetEntityName(Of TData As Entity) As String
  overload: Cqrs.Azure.BlobStorage.DataStores.IBlobStorageDataStoreConnectionStringFactory.GetEntityName*
  nameWithType.vb: IBlobStorageDataStoreConnectionStringFactory.GetEntityName(Of TData)()
  fullName.vb: Cqrs.Azure.BlobStorage.DataStores.IBlobStorageDataStoreConnectionStringFactory.GetEntityName(Of TData)()
  name.vb: GetEntityName(Of TData)()
references:
- uid: Cqrs.DataStores.IDataStore`1
  commentId: T:Cqrs.DataStores.IDataStore`1
  isExternal: false
  name: IDataStore<TData>
  nameWithType: IDataStore<TData>
  fullName: Cqrs.DataStores.IDataStore<TData>
  nameWithType.vb: IDataStore(Of TData)
  fullName.vb: Cqrs.DataStores.IDataStore(Of TData)
  name.vb: IDataStore(Of TData)
  spec.csharp:
  - uid: Cqrs.DataStores.IDataStore`1
    name: IDataStore
    nameWithType: IDataStore
    fullName: Cqrs.DataStores.IDataStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.DataStores.IDataStore`1
    name: IDataStore
    nameWithType: IDataStore
    fullName: Cqrs.DataStores.IDataStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.DataStores
  commentId: N:Cqrs.Azure.BlobStorage.DataStores
  isExternal: false
  name: Cqrs.Azure.BlobStorage.DataStores
  nameWithType: Cqrs.Azure.BlobStorage.DataStores
  fullName: Cqrs.Azure.BlobStorage.DataStores
- uid: Cqrs.Azure.BlobStorage.IBlobStorageStoreConnectionStringFactory.GetBaseContainerName
  commentId: M:Cqrs.Azure.BlobStorage.IBlobStorageStoreConnectionStringFactory.GetBaseContainerName
  parent: Cqrs.Azure.BlobStorage.IBlobStorageStoreConnectionStringFactory
  isExternal: false
  name: GetBaseContainerName()
  nameWithType: IBlobStorageStoreConnectionStringFactory.GetBaseContainerName()
  fullName: Cqrs.Azure.BlobStorage.IBlobStorageStoreConnectionStringFactory.GetBaseContainerName()
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.IBlobStorageStoreConnectionStringFactory.GetBaseContainerName
    name: GetBaseContainerName
    nameWithType: IBlobStorageStoreConnectionStringFactory.GetBaseContainerName
    fullName: Cqrs.Azure.BlobStorage.IBlobStorageStoreConnectionStringFactory.GetBaseContainerName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.IBlobStorageStoreConnectionStringFactory.GetBaseContainerName
    name: GetBaseContainerName
    nameWithType: IBlobStorageStoreConnectionStringFactory.GetBaseContainerName
    fullName: Cqrs.Azure.BlobStorage.IBlobStorageStoreConnectionStringFactory.GetBaseContainerName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory.GetWritableConnectionStrings
  commentId: M:Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory.GetWritableConnectionStrings
  parent: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory
  isExternal: false
  name: GetWritableConnectionStrings()
  nameWithType: IStorageStoreConnectionStringFactory.GetWritableConnectionStrings()
  fullName: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory.GetWritableConnectionStrings()
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory.GetWritableConnectionStrings
    name: GetWritableConnectionStrings
    nameWithType: IStorageStoreConnectionStringFactory.GetWritableConnectionStrings
    fullName: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory.GetWritableConnectionStrings
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory.GetWritableConnectionStrings
    name: GetWritableConnectionStrings
    nameWithType: IStorageStoreConnectionStringFactory.GetWritableConnectionStrings
    fullName: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory.GetWritableConnectionStrings
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory.GetReadableConnectionString
  commentId: M:Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory.GetReadableConnectionString
  parent: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory
  isExternal: false
  name: GetReadableConnectionString()
  nameWithType: IStorageStoreConnectionStringFactory.GetReadableConnectionString()
  fullName: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory.GetReadableConnectionString()
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory.GetReadableConnectionString
    name: GetReadableConnectionString
    nameWithType: IStorageStoreConnectionStringFactory.GetReadableConnectionString
    fullName: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory.GetReadableConnectionString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory.GetReadableConnectionString
    name: GetReadableConnectionString
    nameWithType: IStorageStoreConnectionStringFactory.GetReadableConnectionString
    fullName: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory.GetReadableConnectionString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.IBlobStorageStoreConnectionStringFactory
  commentId: T:Cqrs.Azure.BlobStorage.IBlobStorageStoreConnectionStringFactory
  parent: Cqrs.Azure.BlobStorage
  isExternal: false
  name: IBlobStorageStoreConnectionStringFactory
  nameWithType: IBlobStorageStoreConnectionStringFactory
  fullName: Cqrs.Azure.BlobStorage.IBlobStorageStoreConnectionStringFactory
- uid: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory
  commentId: T:Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory
  parent: Cqrs.Azure.BlobStorage
  isExternal: false
  name: IStorageStoreConnectionStringFactory
  nameWithType: IStorageStoreConnectionStringFactory
  fullName: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory
- uid: Cqrs.Azure.BlobStorage
  commentId: N:Cqrs.Azure.BlobStorage
  isExternal: false
  name: Cqrs.Azure.BlobStorage
  nameWithType: Cqrs.Azure.BlobStorage
  fullName: Cqrs.Azure.BlobStorage
- uid: Cqrs.Azure.BlobStorage.DataStores.IBlobStorageDataStoreConnectionStringFactory.GetContainerName*
  commentId: Overload:Cqrs.Azure.BlobStorage.DataStores.IBlobStorageDataStoreConnectionStringFactory.GetContainerName
  isExternal: false
  name: GetContainerName
  nameWithType: IBlobStorageDataStoreConnectionStringFactory.GetContainerName
  fullName: Cqrs.Azure.BlobStorage.DataStores.IBlobStorageDataStoreConnectionStringFactory.GetContainerName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Cqrs.Azure.BlobStorage.DataStores.IBlobStorageDataStoreConnectionStringFactory.IsContainerPublic*
  commentId: Overload:Cqrs.Azure.BlobStorage.DataStores.IBlobStorageDataStoreConnectionStringFactory.IsContainerPublic
  isExternal: false
  name: IsContainerPublic
  nameWithType: IBlobStorageDataStoreConnectionStringFactory.IsContainerPublic
  fullName: Cqrs.Azure.BlobStorage.DataStores.IBlobStorageDataStoreConnectionStringFactory.IsContainerPublic
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Cqrs.Azure.BlobStorage.DataStores.IBlobStorageDataStoreConnectionStringFactory.GetEntityName*
  commentId: Overload:Cqrs.Azure.BlobStorage.DataStores.IBlobStorageDataStoreConnectionStringFactory.GetEntityName
  isExternal: false
  name: GetEntityName
  nameWithType: IBlobStorageDataStoreConnectionStringFactory.GetEntityName
  fullName: Cqrs.Azure.BlobStorage.DataStores.IBlobStorageDataStoreConnectionStringFactory.GetEntityName
