### YamlMime:ManagedReference
items:
- uid: Cqrs.Snapshots.ISnapshotStore
  commentId: T:Cqrs.Snapshots.ISnapshotStore
  id: ISnapshotStore
  parent: Cqrs.Snapshots
  children:
  - Cqrs.Snapshots.ISnapshotStore.Get``1(System.Guid)
  - Cqrs.Snapshots.ISnapshotStore.Save(Cqrs.Snapshots.Snapshot)
  langs:
  - csharp
  - vb
  name: ISnapshotStore
  nameWithType: ISnapshotStore
  fullName: Cqrs.Snapshots.ISnapshotStore
  type: Interface
  source:
    remote:
      path: Framework/Cqrs/Snapshots/ISnapshotStore.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: ISnapshotStore
    path: Framework/Cqrs/Snapshots/ISnapshotStore.cs
    startLine: 16
  assemblies:
  - Cqrs
  namespace: Cqrs.Snapshots
  summary: "\nStores the most recent <xref href=\"Cqrs.Snapshots.Snapshot\" data-throw-if-not-resolved=\"false\"></xref> for replay and <xref href=\"Cqrs.Domain.IAggregateRoot%601\" data-throw-if-not-resolved=\"false\"></xref> rehydration on a <xref href=\"Cqrs.Snapshots.SnapshotAggregateRoot%602\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public interface ISnapshotStore
    content.vb: Public Interface ISnapshotStore
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Cqrs.Snapshots.ISnapshotStore.Get``1(System.Guid)
  commentId: M:Cqrs.Snapshots.ISnapshotStore.Get``1(System.Guid)
  id: Get``1(System.Guid)
  parent: Cqrs.Snapshots.ISnapshotStore
  langs:
  - csharp
  - vb
  name: Get<TAggregateRoot>(Guid)
  nameWithType: ISnapshotStore.Get<TAggregateRoot>(Guid)
  fullName: Cqrs.Snapshots.ISnapshotStore.Get<TAggregateRoot>(System.Guid)
  type: Method
  source:
    remote:
      path: Framework/Cqrs/Snapshots/ISnapshotStore.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Get
    path: Framework/Cqrs/Snapshots/ISnapshotStore.cs
    startLine: 24
  assemblies:
  - Cqrs
  namespace: Cqrs.Snapshots
  summary: "\nGet the latest <xref href=\"Cqrs.Snapshots.Snapshot\" data-throw-if-not-resolved=\"false\"></xref> from storage.\n"
  example: []
  syntax:
    content: Snapshot Get<TAggregateRoot>(Guid id)
    parameters:
    - id: id
      type: System.Guid
      description: The identifier of the <xref href="Cqrs.Domain.IAggregateRoot%601" data-throw-if-not-resolved="false"></xref> to get the most recent <xref href="Cqrs.Snapshots.Snapshot" data-throw-if-not-resolved="false"></xref> of.
    typeParameters:
    - id: TAggregateRoot
      description: The <xref href="System.Type" data-throw-if-not-resolved="false"></xref> of <xref href="Cqrs.Domain.IAggregateRoot%601" data-throw-if-not-resolved="false"></xref> to find a snapshot for.
    return:
      type: Cqrs.Snapshots.Snapshot
      description: The most recent <xref href="Cqrs.Snapshots.Snapshot" data-throw-if-not-resolved="false"></xref> of
    content.vb: Function Get(Of TAggregateRoot)(id As Guid) As Snapshot
  overload: Cqrs.Snapshots.ISnapshotStore.Get*
  nameWithType.vb: ISnapshotStore.Get(Of TAggregateRoot)(Guid)
  fullName.vb: Cqrs.Snapshots.ISnapshotStore.Get(Of TAggregateRoot)(System.Guid)
  name.vb: Get(Of TAggregateRoot)(Guid)
- uid: Cqrs.Snapshots.ISnapshotStore.Save(Cqrs.Snapshots.Snapshot)
  commentId: M:Cqrs.Snapshots.ISnapshotStore.Save(Cqrs.Snapshots.Snapshot)
  id: Save(Cqrs.Snapshots.Snapshot)
  parent: Cqrs.Snapshots.ISnapshotStore
  langs:
  - csharp
  - vb
  name: Save(Snapshot)
  nameWithType: ISnapshotStore.Save(Snapshot)
  fullName: Cqrs.Snapshots.ISnapshotStore.Save(Cqrs.Snapshots.Snapshot)
  type: Method
  source:
    remote:
      path: Framework/Cqrs/Snapshots/ISnapshotStore.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Save
    path: Framework/Cqrs/Snapshots/ISnapshotStore.cs
    startLine: 30
  assemblies:
  - Cqrs
  namespace: Cqrs.Snapshots
  summary: "\nSaves the provided <span class=\"paramref\">snapshot</span> into storage.\n"
  example: []
  syntax:
    content: void Save(Snapshot snapshot)
    parameters:
    - id: snapshot
      type: Cqrs.Snapshots.Snapshot
      description: the <xref href="Cqrs.Snapshots.Snapshot" data-throw-if-not-resolved="false"></xref> to save and store.
    content.vb: Sub Save(snapshot As Snapshot)
  overload: Cqrs.Snapshots.ISnapshotStore.Save*
references:
- uid: Cqrs.Snapshots.Snapshot
  commentId: T:Cqrs.Snapshots.Snapshot
  parent: Cqrs.Snapshots
  isExternal: false
  name: Snapshot
  nameWithType: Snapshot
  fullName: Cqrs.Snapshots.Snapshot
- uid: Cqrs.Domain.IAggregateRoot`1
  commentId: T:Cqrs.Domain.IAggregateRoot`1
  isExternal: false
  name: IAggregateRoot<TAuthenticationToken>
  nameWithType: IAggregateRoot<TAuthenticationToken>
  fullName: Cqrs.Domain.IAggregateRoot<TAuthenticationToken>
  nameWithType.vb: IAggregateRoot(Of TAuthenticationToken)
  fullName.vb: Cqrs.Domain.IAggregateRoot(Of TAuthenticationToken)
  name.vb: IAggregateRoot(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Domain.IAggregateRoot`1
    name: IAggregateRoot
    nameWithType: IAggregateRoot
    fullName: Cqrs.Domain.IAggregateRoot
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Domain.IAggregateRoot`1
    name: IAggregateRoot
    nameWithType: IAggregateRoot
    fullName: Cqrs.Domain.IAggregateRoot
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Snapshots.SnapshotAggregateRoot`2
  commentId: T:Cqrs.Snapshots.SnapshotAggregateRoot`2
  isExternal: false
  name: SnapshotAggregateRoot<TAuthenticationToken, TSnapshot>
  nameWithType: SnapshotAggregateRoot<TAuthenticationToken, TSnapshot>
  fullName: Cqrs.Snapshots.SnapshotAggregateRoot<TAuthenticationToken, TSnapshot>
  nameWithType.vb: SnapshotAggregateRoot(Of TAuthenticationToken, TSnapshot)
  fullName.vb: Cqrs.Snapshots.SnapshotAggregateRoot(Of TAuthenticationToken, TSnapshot)
  name.vb: SnapshotAggregateRoot(Of TAuthenticationToken, TSnapshot)
  spec.csharp:
  - uid: Cqrs.Snapshots.SnapshotAggregateRoot`2
    name: SnapshotAggregateRoot
    nameWithType: SnapshotAggregateRoot
    fullName: Cqrs.Snapshots.SnapshotAggregateRoot
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TSnapshot
    nameWithType: TSnapshot
    fullName: TSnapshot
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Snapshots.SnapshotAggregateRoot`2
    name: SnapshotAggregateRoot
    nameWithType: SnapshotAggregateRoot
    fullName: Cqrs.Snapshots.SnapshotAggregateRoot
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TSnapshot
    nameWithType: TSnapshot
    fullName: TSnapshot
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Snapshots
  commentId: N:Cqrs.Snapshots
  isExternal: false
  name: Cqrs.Snapshots
  nameWithType: Cqrs.Snapshots
  fullName: Cqrs.Snapshots
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Cqrs.Snapshots.ISnapshotStore.Get*
  commentId: Overload:Cqrs.Snapshots.ISnapshotStore.Get
  isExternal: false
  name: Get
  nameWithType: ISnapshotStore.Get
  fullName: Cqrs.Snapshots.ISnapshotStore.Get
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Cqrs.Snapshots.ISnapshotStore.Save*
  commentId: Overload:Cqrs.Snapshots.ISnapshotStore.Save
  isExternal: false
  name: Save
  nameWithType: ISnapshotStore.Save
  fullName: Cqrs.Snapshots.ISnapshotStore.Save
