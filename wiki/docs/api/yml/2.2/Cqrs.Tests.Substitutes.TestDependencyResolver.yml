### YamlMime:ManagedReference
items:
- uid: Cqrs.Tests.Substitutes.TestDependencyResolver
  commentId: T:Cqrs.Tests.Substitutes.TestDependencyResolver
  id: TestDependencyResolver
  parent: Cqrs.Tests.Substitutes
  children:
  - Cqrs.Tests.Substitutes.TestDependencyResolver.#ctor(Cqrs.Tests.Substitutes.TestEventStore,Cqrs.Commands.ICommandPublisher{Cqrs.Authentication.ISingleSignOnToken})
  - Cqrs.Tests.Substitutes.TestDependencyResolver.Handlers
  - Cqrs.Tests.Substitutes.TestDependencyResolver.NewAggregateGuid
  - Cqrs.Tests.Substitutes.TestDependencyResolver.Resolve(System.Type)
  - Cqrs.Tests.Substitutes.TestDependencyResolver.Resolve``1
  - Cqrs.Tests.Substitutes.TestDependencyResolver.TestEventStore
  - Cqrs.Tests.Substitutes.TestDependencyResolver.TestSingleSignOnTokenCommandPublisher
  - Cqrs.Tests.Substitutes.TestDependencyResolver.UseTestEventStoreGuid
  langs:
  - csharp
  - vb
  name: TestDependencyResolver
  nameWithType: TestDependencyResolver
  fullName: Cqrs.Tests.Substitutes.TestDependencyResolver
  type: Class
  source:
    remote:
      path: Framework/Cqrs.Tests/Substitutes/TestDependencyResolver.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: TestDependencyResolver
    path: Framework/Cqrs.Tests/Substitutes/TestDependencyResolver.cs
    startLine: 12
  assemblies:
  - Cqrs.Tests
  namespace: Cqrs.Tests.Substitutes
  syntax:
    content: 'public class TestDependencyResolver : IDependencyResolver'
    content.vb: >-
      Public Class TestDependencyResolver
          Implements IDependencyResolver
  inheritance:
  - System.Object
  implements:
  - Cqrs.Configuration.IDependencyResolver
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Cqrs.Tests.Substitutes.TestDependencyResolver.TestEventStore
  commentId: P:Cqrs.Tests.Substitutes.TestDependencyResolver.TestEventStore
  id: TestEventStore
  parent: Cqrs.Tests.Substitutes.TestDependencyResolver
  langs:
  - csharp
  - vb
  name: TestEventStore
  nameWithType: TestDependencyResolver.TestEventStore
  fullName: Cqrs.Tests.Substitutes.TestDependencyResolver.TestEventStore
  type: Property
  source:
    remote:
      path: Framework/Cqrs.Tests/Substitutes/TestDependencyResolver.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: TestEventStore
    path: Framework/Cqrs.Tests/Substitutes/TestDependencyResolver.cs
    startLine: 14
  assemblies:
  - Cqrs.Tests
  namespace: Cqrs.Tests.Substitutes
  syntax:
    content: protected TestEventStore TestEventStore { get; }
    parameters: []
    return:
      type: Cqrs.Tests.Substitutes.TestEventStore
    content.vb: Protected ReadOnly Property TestEventStore As TestEventStore
  overload: Cqrs.Tests.Substitutes.TestDependencyResolver.TestEventStore*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Cqrs.Tests.Substitutes.TestDependencyResolver.TestSingleSignOnTokenCommandPublisher
  commentId: P:Cqrs.Tests.Substitutes.TestDependencyResolver.TestSingleSignOnTokenCommandPublisher
  id: TestSingleSignOnTokenCommandPublisher
  parent: Cqrs.Tests.Substitutes.TestDependencyResolver
  langs:
  - csharp
  - vb
  name: TestSingleSignOnTokenCommandPublisher
  nameWithType: TestDependencyResolver.TestSingleSignOnTokenCommandPublisher
  fullName: Cqrs.Tests.Substitutes.TestDependencyResolver.TestSingleSignOnTokenCommandPublisher
  type: Property
  source:
    remote:
      path: Framework/Cqrs.Tests/Substitutes/TestDependencyResolver.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: TestSingleSignOnTokenCommandPublisher
    path: Framework/Cqrs.Tests/Substitutes/TestDependencyResolver.cs
    startLine: 16
  assemblies:
  - Cqrs.Tests
  namespace: Cqrs.Tests.Substitutes
  syntax:
    content: protected ICommandPublisher<ISingleSignOnToken> TestSingleSignOnTokenCommandPublisher { get; }
    parameters: []
    return:
      type: Cqrs.Commands.ICommandPublisher{Cqrs.Authentication.ISingleSignOnToken}
    content.vb: Protected ReadOnly Property TestSingleSignOnTokenCommandPublisher As ICommandPublisher(Of ISingleSignOnToken)
  overload: Cqrs.Tests.Substitutes.TestDependencyResolver.TestSingleSignOnTokenCommandPublisher*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Cqrs.Tests.Substitutes.TestDependencyResolver.UseTestEventStoreGuid
  commentId: P:Cqrs.Tests.Substitutes.TestDependencyResolver.UseTestEventStoreGuid
  id: UseTestEventStoreGuid
  parent: Cqrs.Tests.Substitutes.TestDependencyResolver
  langs:
  - csharp
  - vb
  name: UseTestEventStoreGuid
  nameWithType: TestDependencyResolver.UseTestEventStoreGuid
  fullName: Cqrs.Tests.Substitutes.TestDependencyResolver.UseTestEventStoreGuid
  type: Property
  source:
    remote:
      path: Framework/Cqrs.Tests/Substitutes/TestDependencyResolver.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: UseTestEventStoreGuid
    path: Framework/Cqrs.Tests/Substitutes/TestDependencyResolver.cs
    startLine: 18
  assemblies:
  - Cqrs.Tests
  namespace: Cqrs.Tests.Substitutes
  syntax:
    content: public bool UseTestEventStoreGuid { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property UseTestEventStoreGuid As Boolean
  overload: Cqrs.Tests.Substitutes.TestDependencyResolver.UseTestEventStoreGuid*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Cqrs.Tests.Substitutes.TestDependencyResolver.NewAggregateGuid
  commentId: P:Cqrs.Tests.Substitutes.TestDependencyResolver.NewAggregateGuid
  id: NewAggregateGuid
  parent: Cqrs.Tests.Substitutes.TestDependencyResolver
  langs:
  - csharp
  - vb
  name: NewAggregateGuid
  nameWithType: TestDependencyResolver.NewAggregateGuid
  fullName: Cqrs.Tests.Substitutes.TestDependencyResolver.NewAggregateGuid
  type: Property
  source:
    remote:
      path: Framework/Cqrs.Tests/Substitutes/TestDependencyResolver.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: NewAggregateGuid
    path: Framework/Cqrs.Tests/Substitutes/TestDependencyResolver.cs
    startLine: 20
  assemblies:
  - Cqrs.Tests
  namespace: Cqrs.Tests.Substitutes
  syntax:
    content: public Guid? NewAggregateGuid { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Guid}
    content.vb: Public Property NewAggregateGuid As Guid?
  overload: Cqrs.Tests.Substitutes.TestDependencyResolver.NewAggregateGuid*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Cqrs.Tests.Substitutes.TestDependencyResolver.Handlers
  commentId: F:Cqrs.Tests.Substitutes.TestDependencyResolver.Handlers
  id: Handlers
  parent: Cqrs.Tests.Substitutes.TestDependencyResolver
  langs:
  - csharp
  - vb
  name: Handlers
  nameWithType: TestDependencyResolver.Handlers
  fullName: Cqrs.Tests.Substitutes.TestDependencyResolver.Handlers
  type: Field
  source:
    remote:
      path: Framework/Cqrs.Tests/Substitutes/TestDependencyResolver.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Handlers
    path: Framework/Cqrs.Tests/Substitutes/TestDependencyResolver.cs
    startLine: 22
  assemblies:
  - Cqrs.Tests
  namespace: Cqrs.Tests.Substitutes
  syntax:
    content: public readonly List<dynamic> Handlers
    return:
      type: System.Collections.Generic.List{System.Object}
    content.vb: Public ReadOnly Handlers As List(Of Object)
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Cqrs.Tests.Substitutes.TestDependencyResolver.#ctor(Cqrs.Tests.Substitutes.TestEventStore,Cqrs.Commands.ICommandPublisher{Cqrs.Authentication.ISingleSignOnToken})
  commentId: M:Cqrs.Tests.Substitutes.TestDependencyResolver.#ctor(Cqrs.Tests.Substitutes.TestEventStore,Cqrs.Commands.ICommandPublisher{Cqrs.Authentication.ISingleSignOnToken})
  id: '#ctor(Cqrs.Tests.Substitutes.TestEventStore,Cqrs.Commands.ICommandPublisher{Cqrs.Authentication.ISingleSignOnToken})'
  parent: Cqrs.Tests.Substitutes.TestDependencyResolver
  langs:
  - csharp
  - vb
  name: TestDependencyResolver(TestEventStore, ICommandPublisher<ISingleSignOnToken>)
  nameWithType: TestDependencyResolver.TestDependencyResolver(TestEventStore, ICommandPublisher<ISingleSignOnToken>)
  fullName: Cqrs.Tests.Substitutes.TestDependencyResolver.TestDependencyResolver(Cqrs.Tests.Substitutes.TestEventStore, Cqrs.Commands.ICommandPublisher<Cqrs.Authentication.ISingleSignOnToken>)
  type: Constructor
  source:
    remote:
      path: Framework/Cqrs.Tests/Substitutes/TestDependencyResolver.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: .ctor
    path: Framework/Cqrs.Tests/Substitutes/TestDependencyResolver.cs
    startLine: 24
  assemblies:
  - Cqrs.Tests
  namespace: Cqrs.Tests.Substitutes
  syntax:
    content: public TestDependencyResolver(TestEventStore testEventStore, ICommandPublisher<ISingleSignOnToken> testSingleSignOnTokenCommandPublisher = null)
    parameters:
    - id: testEventStore
      type: Cqrs.Tests.Substitutes.TestEventStore
    - id: testSingleSignOnTokenCommandPublisher
      type: Cqrs.Commands.ICommandPublisher{Cqrs.Authentication.ISingleSignOnToken}
    content.vb: Public Sub New(testEventStore As TestEventStore, testSingleSignOnTokenCommandPublisher As ICommandPublisher(Of ISingleSignOnToken) = Nothing)
  overload: Cqrs.Tests.Substitutes.TestDependencyResolver.#ctor*
  nameWithType.vb: TestDependencyResolver.TestDependencyResolver(TestEventStore, ICommandPublisher(Of ISingleSignOnToken))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Cqrs.Tests.Substitutes.TestDependencyResolver.TestDependencyResolver(Cqrs.Tests.Substitutes.TestEventStore, Cqrs.Commands.ICommandPublisher(Of Cqrs.Authentication.ISingleSignOnToken))
  name.vb: TestDependencyResolver(TestEventStore, ICommandPublisher(Of ISingleSignOnToken))
- uid: Cqrs.Tests.Substitutes.TestDependencyResolver.Resolve``1
  commentId: M:Cqrs.Tests.Substitutes.TestDependencyResolver.Resolve``1
  id: Resolve``1
  parent: Cqrs.Tests.Substitutes.TestDependencyResolver
  langs:
  - csharp
  - vb
  name: Resolve<T>()
  nameWithType: TestDependencyResolver.Resolve<T>()
  fullName: Cqrs.Tests.Substitutes.TestDependencyResolver.Resolve<T>()
  type: Method
  source:
    remote:
      path: Framework/Cqrs.Tests/Substitutes/TestDependencyResolver.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Resolve
    path: Framework/Cqrs.Tests/Substitutes/TestDependencyResolver.cs
    startLine: 30
  assemblies:
  - Cqrs.Tests
  namespace: Cqrs.Tests.Substitutes
  syntax:
    content: public T Resolve<T>()
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Function Resolve(Of T) As T
  overload: Cqrs.Tests.Substitutes.TestDependencyResolver.Resolve*
  implements:
  - Cqrs.Configuration.IDependencyResolver.Resolve``1
  nameWithType.vb: TestDependencyResolver.Resolve(Of T)()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Cqrs.Tests.Substitutes.TestDependencyResolver.Resolve(Of T)()
  name.vb: Resolve(Of T)()
- uid: Cqrs.Tests.Substitutes.TestDependencyResolver.Resolve(System.Type)
  commentId: M:Cqrs.Tests.Substitutes.TestDependencyResolver.Resolve(System.Type)
  id: Resolve(System.Type)
  parent: Cqrs.Tests.Substitutes.TestDependencyResolver
  langs:
  - csharp
  - vb
  name: Resolve(Type)
  nameWithType: TestDependencyResolver.Resolve(Type)
  fullName: Cqrs.Tests.Substitutes.TestDependencyResolver.Resolve(System.Type)
  type: Method
  source:
    remote:
      path: Framework/Cqrs.Tests/Substitutes/TestDependencyResolver.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Resolve
    path: Framework/Cqrs.Tests/Substitutes/TestDependencyResolver.cs
    startLine: 35
  assemblies:
  - Cqrs.Tests
  namespace: Cqrs.Tests.Substitutes
  syntax:
    content: public object Resolve(Type type)
    parameters:
    - id: type
      type: System.Type
    return:
      type: System.Object
    content.vb: Public Function Resolve(type As Type) As Object
  overload: Cqrs.Tests.Substitutes.TestDependencyResolver.Resolve*
  implements:
  - Cqrs.Configuration.IDependencyResolver.Resolve(System.Type)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Cqrs.Tests.Substitutes
  commentId: N:Cqrs.Tests.Substitutes
  isExternal: false
  name: Cqrs.Tests.Substitutes
  nameWithType: Cqrs.Tests.Substitutes
  fullName: Cqrs.Tests.Substitutes
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Cqrs.Configuration.IDependencyResolver
  commentId: T:Cqrs.Configuration.IDependencyResolver
  parent: Cqrs.Configuration
  isExternal: false
  name: IDependencyResolver
  nameWithType: IDependencyResolver
  fullName: Cqrs.Configuration.IDependencyResolver
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Cqrs.Configuration
  commentId: N:Cqrs.Configuration
  isExternal: false
  name: Cqrs.Configuration
  nameWithType: Cqrs.Configuration
  fullName: Cqrs.Configuration
- uid: Cqrs.Tests.Substitutes.TestDependencyResolver.TestEventStore*
  commentId: Overload:Cqrs.Tests.Substitutes.TestDependencyResolver.TestEventStore
  isExternal: false
  name: TestEventStore
  nameWithType: TestDependencyResolver.TestEventStore
  fullName: Cqrs.Tests.Substitutes.TestDependencyResolver.TestEventStore
- uid: Cqrs.Tests.Substitutes.TestEventStore
  commentId: T:Cqrs.Tests.Substitutes.TestEventStore
  parent: Cqrs.Tests.Substitutes
  isExternal: false
  name: TestEventStore
  nameWithType: TestEventStore
  fullName: Cqrs.Tests.Substitutes.TestEventStore
- uid: Cqrs.Tests.Substitutes.TestDependencyResolver.TestSingleSignOnTokenCommandPublisher*
  commentId: Overload:Cqrs.Tests.Substitutes.TestDependencyResolver.TestSingleSignOnTokenCommandPublisher
  isExternal: false
  name: TestSingleSignOnTokenCommandPublisher
  nameWithType: TestDependencyResolver.TestSingleSignOnTokenCommandPublisher
  fullName: Cqrs.Tests.Substitutes.TestDependencyResolver.TestSingleSignOnTokenCommandPublisher
- uid: Cqrs.Commands.ICommandPublisher{Cqrs.Authentication.ISingleSignOnToken}
  commentId: T:Cqrs.Commands.ICommandPublisher{Cqrs.Authentication.ISingleSignOnToken}
  parent: Cqrs.Commands
  definition: Cqrs.Commands.ICommandPublisher`1
  name: ICommandPublisher<ISingleSignOnToken>
  nameWithType: ICommandPublisher<ISingleSignOnToken>
  fullName: Cqrs.Commands.ICommandPublisher<Cqrs.Authentication.ISingleSignOnToken>
  nameWithType.vb: ICommandPublisher(Of ISingleSignOnToken)
  fullName.vb: Cqrs.Commands.ICommandPublisher(Of Cqrs.Authentication.ISingleSignOnToken)
  name.vb: ICommandPublisher(Of ISingleSignOnToken)
  spec.csharp:
  - uid: Cqrs.Commands.ICommandPublisher`1
    name: ICommandPublisher
    nameWithType: ICommandPublisher
    fullName: Cqrs.Commands.ICommandPublisher
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cqrs.Authentication.ISingleSignOnToken
    name: ISingleSignOnToken
    nameWithType: ISingleSignOnToken
    fullName: Cqrs.Authentication.ISingleSignOnToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Commands.ICommandPublisher`1
    name: ICommandPublisher
    nameWithType: ICommandPublisher
    fullName: Cqrs.Commands.ICommandPublisher
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Cqrs.Authentication.ISingleSignOnToken
    name: ISingleSignOnToken
    nameWithType: ISingleSignOnToken
    fullName: Cqrs.Authentication.ISingleSignOnToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Commands.ICommandPublisher`1
  commentId: T:Cqrs.Commands.ICommandPublisher`1
  isExternal: false
  name: ICommandPublisher<TAuthenticationToken>
  nameWithType: ICommandPublisher<TAuthenticationToken>
  fullName: Cqrs.Commands.ICommandPublisher<TAuthenticationToken>
  nameWithType.vb: ICommandPublisher(Of TAuthenticationToken)
  fullName.vb: Cqrs.Commands.ICommandPublisher(Of TAuthenticationToken)
  name.vb: ICommandPublisher(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Commands.ICommandPublisher`1
    name: ICommandPublisher
    nameWithType: ICommandPublisher
    fullName: Cqrs.Commands.ICommandPublisher
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Commands.ICommandPublisher`1
    name: ICommandPublisher
    nameWithType: ICommandPublisher
    fullName: Cqrs.Commands.ICommandPublisher
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Commands
  commentId: N:Cqrs.Commands
  isExternal: false
  name: Cqrs.Commands
  nameWithType: Cqrs.Commands
  fullName: Cqrs.Commands
- uid: Cqrs.Tests.Substitutes.TestDependencyResolver.UseTestEventStoreGuid*
  commentId: Overload:Cqrs.Tests.Substitutes.TestDependencyResolver.UseTestEventStoreGuid
  isExternal: false
  name: UseTestEventStoreGuid
  nameWithType: TestDependencyResolver.UseTestEventStoreGuid
  fullName: Cqrs.Tests.Substitutes.TestDependencyResolver.UseTestEventStoreGuid
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Cqrs.Tests.Substitutes.TestDependencyResolver.NewAggregateGuid*
  commentId: Overload:Cqrs.Tests.Substitutes.TestDependencyResolver.NewAggregateGuid
  isExternal: false
  name: NewAggregateGuid
  nameWithType: TestDependencyResolver.NewAggregateGuid
  fullName: Cqrs.Tests.Substitutes.TestDependencyResolver.NewAggregateGuid
- uid: System.Nullable{System.Guid}
  commentId: T:System.Nullable{System.Guid}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Guid>
  nameWithType: Nullable<Guid>
  fullName: System.Nullable<System.Guid>
  nameWithType.vb: Nullable(Of Guid)
  fullName.vb: System.Nullable(Of System.Guid)
  name.vb: Nullable(Of Guid)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{System.Object}
  commentId: T:System.Collections.Generic.List{System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Object>
  nameWithType: List<Object>
  fullName: System.Collections.Generic.List<System.Object>
  nameWithType.vb: List(Of )
  fullName.vb: System.Collections.Generic.List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Cqrs.Tests.Substitutes.TestDependencyResolver.#ctor*
  commentId: Overload:Cqrs.Tests.Substitutes.TestDependencyResolver.#ctor
  isExternal: false
  name: TestDependencyResolver
  nameWithType: TestDependencyResolver.TestDependencyResolver
  fullName: Cqrs.Tests.Substitutes.TestDependencyResolver.TestDependencyResolver
- uid: Cqrs.Tests.Substitutes.TestDependencyResolver.Resolve*
  commentId: Overload:Cqrs.Tests.Substitutes.TestDependencyResolver.Resolve
  isExternal: false
  name: Resolve
  nameWithType: TestDependencyResolver.Resolve
  fullName: Cqrs.Tests.Substitutes.TestDependencyResolver.Resolve
- uid: Cqrs.Configuration.IDependencyResolver.Resolve``1
  commentId: M:Cqrs.Configuration.IDependencyResolver.Resolve``1
  parent: Cqrs.Configuration.IDependencyResolver
  isExternal: false
  name: Resolve<T>()
  nameWithType: IDependencyResolver.Resolve<T>()
  fullName: Cqrs.Configuration.IDependencyResolver.Resolve<T>()
  nameWithType.vb: IDependencyResolver.Resolve(Of T)()
  fullName.vb: Cqrs.Configuration.IDependencyResolver.Resolve(Of T)()
  name.vb: Resolve(Of T)()
  spec.csharp:
  - uid: Cqrs.Configuration.IDependencyResolver.Resolve``1
    name: Resolve<T>
    nameWithType: IDependencyResolver.Resolve<T>
    fullName: Cqrs.Configuration.IDependencyResolver.Resolve<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Configuration.IDependencyResolver.Resolve``1
    name: Resolve(Of T)
    nameWithType: IDependencyResolver.Resolve(Of T)
    fullName: Cqrs.Configuration.IDependencyResolver.Resolve(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  isExternal: false
  name: T
  nameWithType: T
  fullName: T
- uid: Cqrs.Configuration.IDependencyResolver.Resolve(System.Type)
  commentId: M:Cqrs.Configuration.IDependencyResolver.Resolve(System.Type)
  parent: Cqrs.Configuration.IDependencyResolver
  isExternal: true
  name: Resolve(Type)
  nameWithType: IDependencyResolver.Resolve(Type)
  fullName: Cqrs.Configuration.IDependencyResolver.Resolve(System.Type)
  spec.csharp:
  - uid: Cqrs.Configuration.IDependencyResolver.Resolve(System.Type)
    name: Resolve
    nameWithType: IDependencyResolver.Resolve
    fullName: Cqrs.Configuration.IDependencyResolver.Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Configuration.IDependencyResolver.Resolve(System.Type)
    name: Resolve
    nameWithType: IDependencyResolver.Resolve
    fullName: Cqrs.Configuration.IDependencyResolver.Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
