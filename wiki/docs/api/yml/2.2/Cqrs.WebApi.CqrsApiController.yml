### YamlMime:ManagedReference
items:
- uid: Cqrs.WebApi.CqrsApiController
  commentId: T:Cqrs.WebApi.CqrsApiController
  id: CqrsApiController
  parent: Cqrs.WebApi
  children:
  - Cqrs.WebApi.CqrsApiController.#ctor(cdmdotnet.Logging.ILogger,cdmdotnet.Logging.ICorrelationIdHelper,Cqrs.Configuration.IConfigurationManager)
  - Cqrs.WebApi.CqrsApiController.CompleteResponse``1(``0)
  - Cqrs.WebApi.CqrsApiController.CompleteResponse``1(System.Net.Http.HttpResponseMessage,``0)
  - Cqrs.WebApi.CqrsApiController.CompleteResponseWithData``1(``0)
  - Cqrs.WebApi.CqrsApiController.ConfigurationManager
  - Cqrs.WebApi.CqrsApiController.CorrelationIdHelper
  - Cqrs.WebApi.CqrsApiController.CreateAuthenticationToken``1
  - Cqrs.WebApi.CqrsApiController.CreateParameter``1
  - Cqrs.WebApi.CqrsApiController.CreateRequest``1
  - Cqrs.WebApi.CqrsApiController.CreateRequestWithData``2(System.Func{``1})
  - Cqrs.WebApi.CqrsApiController.GetDateTokenIssued
  - Cqrs.WebApi.CqrsApiController.GetToken
  - Cqrs.WebApi.CqrsApiController.GetTokenTimeOfExpiry
  - Cqrs.WebApi.CqrsApiController.Logger
  langs:
  - csharp
  - vb
  name: CqrsApiController
  nameWithType: CqrsApiController
  fullName: Cqrs.WebApi.CqrsApiController
  type: Class
  source:
    remote:
      path: Framework/Cqrs.WebApi/CqrsApiController.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: CqrsApiController
    path: Framework/Cqrs.WebApi/CqrsApiController.cs
    startLine: 29
  assemblies:
  - Cqrs.WebApi
  namespace: Cqrs.WebApi
  summary: "\nA <xref href=\"System.Web.Http.ApiController\" data-throw-if-not-resolved=\"false\"></xref> that expects the <xref href=\"Cqrs.Authentication.ISingleSignOnToken.Token\" data-throw-if-not-resolved=\"false\"></xref> to be sent as a <xref href=\"System.Net.Http.Headers.HttpHeaders\" data-throw-if-not-resolved=\"false\"></xref> with a key whose name is defined by the <xref href=\"System.Configuration.ConfigurationManager.AppSettings\" data-throw-if-not-resolved=\"false\"></xref> &quot;Cqrs.Web.AuthenticationTokenName&quot;, in accordance with OAuth specifications\n"
  remarks: "\nSee https://www.asp.net/web-api/overview/getting-started-with-aspnet-web-api/creating-api-help-pages for details on adding WebApi Help Pages.\n"
  example: []
  syntax:
    content: 'public abstract class CqrsApiController : ApiController, IHttpController, IDisposable'
    content.vb: >-
      Public MustInherit Class CqrsApiController
          Inherits ApiController
          Implements IHttpController, IDisposable
  inheritance:
  - System.Object
  - System.Web.Http.ApiController
  derivedClasses:
  - Cqrs.WebApi.CqrsApiController`1
  - Cqrs.WebApi.CqrsEventApiController`1
  implements:
  - System.Web.Http.Controllers.IHttpController
  - System.IDisposable
  inheritedMembers:
  - System.Web.Http.ApiController.ExecuteAsync(System.Web.Http.Controllers.HttpControllerContext,System.Threading.CancellationToken)
  - System.Web.Http.ApiController.Validate``1({TEntity})
  - System.Web.Http.ApiController.Validate``1({TEntity},System.String)
  - System.Web.Http.ApiController.BadRequest
  - System.Web.Http.ApiController.BadRequest(System.String)
  - System.Web.Http.ApiController.BadRequest(System.Web.Http.ModelBinding.ModelStateDictionary)
  - System.Web.Http.ApiController.Conflict
  - System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,{T})
  - System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,{T},System.Net.Http.Formatting.MediaTypeFormatter)
  - System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,{T},System.Net.Http.Formatting.MediaTypeFormatter,System.String)
  - System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,{T},System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue)
  - System.Web.Http.ApiController.Created``1(System.String,{T})
  - System.Web.Http.ApiController.Created``1(System.Uri,{T})
  - System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Object,{T})
  - System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},{T})
  - System.Web.Http.ApiController.InternalServerError
  - System.Web.Http.ApiController.InternalServerError(System.Exception)
  - System.Web.Http.ApiController.Json``1({T})
  - System.Web.Http.ApiController.Json``1({T},Newtonsoft.Json.JsonSerializerSettings)
  - System.Web.Http.ApiController.Json``1({T},Newtonsoft.Json.JsonSerializerSettings,System.Text.Encoding)
  - System.Web.Http.ApiController.NotFound
  - System.Web.Http.ApiController.Ok
  - System.Web.Http.ApiController.Ok``1({T})
  - System.Web.Http.ApiController.Redirect(System.String)
  - System.Web.Http.ApiController.Redirect(System.Uri)
  - System.Web.Http.ApiController.RedirectToRoute(System.String,System.Object)
  - System.Web.Http.ApiController.RedirectToRoute(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  - System.Web.Http.ApiController.ResponseMessage(System.Net.Http.HttpResponseMessage)
  - System.Web.Http.ApiController.StatusCode(System.Net.HttpStatusCode)
  - System.Web.Http.ApiController.Unauthorized(System.Net.Http.Headers.AuthenticationHeaderValue[])
  - System.Web.Http.ApiController.Unauthorized(System.Collections.Generic.IEnumerable{System.Net.Http.Headers.AuthenticationHeaderValue})
  - System.Web.Http.ApiController.Initialize(System.Web.Http.Controllers.HttpControllerContext)
  - System.Web.Http.ApiController.Dispose
  - System.Web.Http.ApiController.Dispose(System.Boolean)
  - System.Web.Http.ApiController.Configuration
  - System.Web.Http.ApiController.ControllerContext
  - System.Web.Http.ApiController.ActionContext
  - System.Web.Http.ApiController.ModelState
  - System.Web.Http.ApiController.Request
  - System.Web.Http.ApiController.RequestContext
  - System.Web.Http.ApiController.Url
  - System.Web.Http.ApiController.User
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Cqrs.WebApi.CqrsApiController.#ctor(cdmdotnet.Logging.ILogger,cdmdotnet.Logging.ICorrelationIdHelper,Cqrs.Configuration.IConfigurationManager)
  commentId: M:Cqrs.WebApi.CqrsApiController.#ctor(cdmdotnet.Logging.ILogger,cdmdotnet.Logging.ICorrelationIdHelper,Cqrs.Configuration.IConfigurationManager)
  id: '#ctor(cdmdotnet.Logging.ILogger,cdmdotnet.Logging.ICorrelationIdHelper,Cqrs.Configuration.IConfigurationManager)'
  parent: Cqrs.WebApi.CqrsApiController
  langs:
  - csharp
  - vb
  name: CqrsApiController(ILogger, ICorrelationIdHelper, IConfigurationManager)
  nameWithType: CqrsApiController.CqrsApiController(ILogger, ICorrelationIdHelper, IConfigurationManager)
  fullName: Cqrs.WebApi.CqrsApiController.CqrsApiController(cdmdotnet.Logging.ILogger, cdmdotnet.Logging.ICorrelationIdHelper, Cqrs.Configuration.IConfigurationManager)
  type: Constructor
  source:
    remote:
      path: Framework/Cqrs.WebApi/CqrsApiController.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: .ctor
    path: Framework/Cqrs.WebApi/CqrsApiController.cs
    startLine: 32
  assemblies:
  - Cqrs.WebApi
  namespace: Cqrs.WebApi
  syntax:
    content: protected CqrsApiController(ILogger logger, ICorrelationIdHelper correlationIdHelper, IConfigurationManager configurationManager)
    parameters:
    - id: logger
      type: cdmdotnet.Logging.ILogger
    - id: correlationIdHelper
      type: cdmdotnet.Logging.ICorrelationIdHelper
    - id: configurationManager
      type: Cqrs.Configuration.IConfigurationManager
    content.vb: Protected Sub New(logger As ILogger, correlationIdHelper As ICorrelationIdHelper, configurationManager As IConfigurationManager)
  overload: Cqrs.WebApi.CqrsApiController.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Cqrs.WebApi.CqrsApiController.CorrelationIdHelper
  commentId: P:Cqrs.WebApi.CqrsApiController.CorrelationIdHelper
  id: CorrelationIdHelper
  parent: Cqrs.WebApi.CqrsApiController
  langs:
  - csharp
  - vb
  name: CorrelationIdHelper
  nameWithType: CqrsApiController.CorrelationIdHelper
  fullName: Cqrs.WebApi.CqrsApiController.CorrelationIdHelper
  type: Property
  source:
    remote:
      path: Framework/Cqrs.WebApi/CqrsApiController.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: CorrelationIdHelper
    path: Framework/Cqrs.WebApi/CqrsApiController.cs
    startLine: 39
  assemblies:
  - Cqrs.WebApi
  namespace: Cqrs.WebApi
  syntax:
    content: protected ICorrelationIdHelper CorrelationIdHelper { get; }
    parameters: []
    return:
      type: cdmdotnet.Logging.ICorrelationIdHelper
    content.vb: Protected ReadOnly Property CorrelationIdHelper As ICorrelationIdHelper
  overload: Cqrs.WebApi.CqrsApiController.CorrelationIdHelper*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Cqrs.WebApi.CqrsApiController.Logger
  commentId: P:Cqrs.WebApi.CqrsApiController.Logger
  id: Logger
  parent: Cqrs.WebApi.CqrsApiController
  langs:
  - csharp
  - vb
  name: Logger
  nameWithType: CqrsApiController.Logger
  fullName: Cqrs.WebApi.CqrsApiController.Logger
  type: Property
  source:
    remote:
      path: Framework/Cqrs.WebApi/CqrsApiController.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Logger
    path: Framework/Cqrs.WebApi/CqrsApiController.cs
    startLine: 41
  assemblies:
  - Cqrs.WebApi
  namespace: Cqrs.WebApi
  syntax:
    content: protected ILogger Logger { get; }
    parameters: []
    return:
      type: cdmdotnet.Logging.ILogger
    content.vb: Protected ReadOnly Property Logger As ILogger
  overload: Cqrs.WebApi.CqrsApiController.Logger*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Cqrs.WebApi.CqrsApiController.ConfigurationManager
  commentId: P:Cqrs.WebApi.CqrsApiController.ConfigurationManager
  id: ConfigurationManager
  parent: Cqrs.WebApi.CqrsApiController
  langs:
  - csharp
  - vb
  name: ConfigurationManager
  nameWithType: CqrsApiController.ConfigurationManager
  fullName: Cqrs.WebApi.CqrsApiController.ConfigurationManager
  type: Property
  source:
    remote:
      path: Framework/Cqrs.WebApi/CqrsApiController.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: ConfigurationManager
    path: Framework/Cqrs.WebApi/CqrsApiController.cs
    startLine: 43
  assemblies:
  - Cqrs.WebApi
  namespace: Cqrs.WebApi
  syntax:
    content: protected IConfigurationManager ConfigurationManager { get; }
    parameters: []
    return:
      type: Cqrs.Configuration.IConfigurationManager
    content.vb: Protected ReadOnly Property ConfigurationManager As IConfigurationManager
  overload: Cqrs.WebApi.CqrsApiController.ConfigurationManager*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Cqrs.WebApi.CqrsApiController.GetToken
  commentId: M:Cqrs.WebApi.CqrsApiController.GetToken
  id: GetToken
  parent: Cqrs.WebApi.CqrsApiController
  langs:
  - csharp
  - vb
  name: GetToken()
  nameWithType: CqrsApiController.GetToken()
  fullName: Cqrs.WebApi.CqrsApiController.GetToken()
  type: Method
  source:
    remote:
      path: Framework/Cqrs.WebApi/CqrsApiController.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: GetToken
    path: Framework/Cqrs.WebApi/CqrsApiController.cs
    startLine: 45
  assemblies:
  - Cqrs.WebApi
  namespace: Cqrs.WebApi
  syntax:
    content: protected virtual string GetToken()
    return:
      type: System.String
    content.vb: Protected Overridable Function GetToken As String
  overload: Cqrs.WebApi.CqrsApiController.GetToken*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Cqrs.WebApi.CqrsApiController.CreateRequest``1
  commentId: M:Cqrs.WebApi.CqrsApiController.CreateRequest``1
  id: CreateRequest``1
  parent: Cqrs.WebApi.CqrsApiController
  langs:
  - csharp
  - vb
  name: CreateRequest<TSingleSignOnToken>()
  nameWithType: CqrsApiController.CreateRequest<TSingleSignOnToken>()
  fullName: Cqrs.WebApi.CqrsApiController.CreateRequest<TSingleSignOnToken>()
  type: Method
  source:
    remote:
      path: Framework/Cqrs.WebApi/CqrsApiController.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: CreateRequest
    path: Framework/Cqrs.WebApi/CqrsApiController.cs
    startLine: 63
  assemblies:
  - Cqrs.WebApi
  namespace: Cqrs.WebApi
  syntax:
    content: 'protected virtual IServiceRequest<TSingleSignOnToken> CreateRequest<TSingleSignOnToken>()where TSingleSignOnToken : ISingleSignOnToken, new ()'
    typeParameters:
    - id: TSingleSignOnToken
    return:
      type: Cqrs.Services.IServiceRequest{{TSingleSignOnToken}}
    content.vb: Protected Overridable Function CreateRequest(Of TSingleSignOnToken As {ISingleSignOnToken, New}) As IServiceRequest(Of TSingleSignOnToken)
  overload: Cqrs.WebApi.CqrsApiController.CreateRequest*
  nameWithType.vb: CqrsApiController.CreateRequest(Of TSingleSignOnToken)()
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Cqrs.WebApi.CqrsApiController.CreateRequest(Of TSingleSignOnToken)()
  name.vb: CreateRequest(Of TSingleSignOnToken)()
- uid: Cqrs.WebApi.CqrsApiController.CreateRequestWithData``2(System.Func{``1})
  commentId: M:Cqrs.WebApi.CqrsApiController.CreateRequestWithData``2(System.Func{``1})
  id: CreateRequestWithData``2(System.Func{``1})
  parent: Cqrs.WebApi.CqrsApiController
  langs:
  - csharp
  - vb
  name: CreateRequestWithData<TSingleSignOnToken, TParameters>(Func<TParameters>)
  nameWithType: CqrsApiController.CreateRequestWithData<TSingleSignOnToken, TParameters>(Func<TParameters>)
  fullName: Cqrs.WebApi.CqrsApiController.CreateRequestWithData<TSingleSignOnToken, TParameters>(System.Func<TParameters>)
  type: Method
  source:
    remote:
      path: Framework/Cqrs.WebApi/CqrsApiController.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: CreateRequestWithData
    path: Framework/Cqrs.WebApi/CqrsApiController.cs
    startLine: 73
  assemblies:
  - Cqrs.WebApi
  namespace: Cqrs.WebApi
  syntax:
    content: 'protected virtual IServiceRequestWithData<TSingleSignOnToken, TParameters> CreateRequestWithData<TSingleSignOnToken, TParameters>(Func<TParameters> createParameterDelegate = null)where TSingleSignOnToken : ISingleSignOnToken, new ()where TParameters : new ()'
    parameters:
    - id: createParameterDelegate
      type: System.Func{{TParameters}}
    typeParameters:
    - id: TSingleSignOnToken
    - id: TParameters
    return:
      type: Cqrs.Services.IServiceRequestWithData{{TSingleSignOnToken},{TParameters}}
    content.vb: Protected Overridable Function CreateRequestWithData(Of TSingleSignOnToken As {ISingleSignOnToken, New}, TParameters As New)(createParameterDelegate As Func(Of TParameters) = Nothing) As IServiceRequestWithData(Of TSingleSignOnToken, TParameters)
  overload: Cqrs.WebApi.CqrsApiController.CreateRequestWithData*
  nameWithType.vb: CqrsApiController.CreateRequestWithData(Of TSingleSignOnToken, TParameters)(Func(Of TParameters))
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Cqrs.WebApi.CqrsApiController.CreateRequestWithData(Of TSingleSignOnToken, TParameters)(System.Func(Of TParameters))
  name.vb: CreateRequestWithData(Of TSingleSignOnToken, TParameters)(Func(Of TParameters))
- uid: Cqrs.WebApi.CqrsApiController.CreateAuthenticationToken``1
  commentId: M:Cqrs.WebApi.CqrsApiController.CreateAuthenticationToken``1
  id: CreateAuthenticationToken``1
  parent: Cqrs.WebApi.CqrsApiController
  langs:
  - csharp
  - vb
  name: CreateAuthenticationToken<TSingleSignOnToken>()
  nameWithType: CqrsApiController.CreateAuthenticationToken<TSingleSignOnToken>()
  fullName: Cqrs.WebApi.CqrsApiController.CreateAuthenticationToken<TSingleSignOnToken>()
  type: Method
  source:
    remote:
      path: Framework/Cqrs.WebApi/CqrsApiController.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: CreateAuthenticationToken
    path: Framework/Cqrs.WebApi/CqrsApiController.cs
    startLine: 85
  assemblies:
  - Cqrs.WebApi
  namespace: Cqrs.WebApi
  syntax:
    content: 'protected virtual TSingleSignOnToken CreateAuthenticationToken<TSingleSignOnToken>()where TSingleSignOnToken : ISingleSignOnToken, new ()'
    typeParameters:
    - id: TSingleSignOnToken
    return:
      type: '{TSingleSignOnToken}'
    content.vb: Protected Overridable Function CreateAuthenticationToken(Of TSingleSignOnToken As {ISingleSignOnToken, New}) As TSingleSignOnToken
  overload: Cqrs.WebApi.CqrsApiController.CreateAuthenticationToken*
  nameWithType.vb: CqrsApiController.CreateAuthenticationToken(Of TSingleSignOnToken)()
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Cqrs.WebApi.CqrsApiController.CreateAuthenticationToken(Of TSingleSignOnToken)()
  name.vb: CreateAuthenticationToken(Of TSingleSignOnToken)()
- uid: Cqrs.WebApi.CqrsApiController.CreateParameter``1
  commentId: M:Cqrs.WebApi.CqrsApiController.CreateParameter``1
  id: CreateParameter``1
  parent: Cqrs.WebApi.CqrsApiController
  langs:
  - csharp
  - vb
  name: CreateParameter<TParameters>()
  nameWithType: CqrsApiController.CreateParameter<TParameters>()
  fullName: Cqrs.WebApi.CqrsApiController.CreateParameter<TParameters>()
  type: Method
  source:
    remote:
      path: Framework/Cqrs.WebApi/CqrsApiController.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: CreateParameter
    path: Framework/Cqrs.WebApi/CqrsApiController.cs
    startLine: 96
  assemblies:
  - Cqrs.WebApi
  namespace: Cqrs.WebApi
  syntax:
    content: 'protected virtual TParameters CreateParameter<TParameters>()where TParameters : new ()'
    typeParameters:
    - id: TParameters
    return:
      type: '{TParameters}'
    content.vb: Protected Overridable Function CreateParameter(Of TParameters As New) As TParameters
  overload: Cqrs.WebApi.CqrsApiController.CreateParameter*
  nameWithType.vb: CqrsApiController.CreateParameter(Of TParameters)()
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Cqrs.WebApi.CqrsApiController.CreateParameter(Of TParameters)()
  name.vb: CreateParameter(Of TParameters)()
- uid: Cqrs.WebApi.CqrsApiController.GetDateTokenIssued
  commentId: M:Cqrs.WebApi.CqrsApiController.GetDateTokenIssued
  id: GetDateTokenIssued
  parent: Cqrs.WebApi.CqrsApiController
  langs:
  - csharp
  - vb
  name: GetDateTokenIssued()
  nameWithType: CqrsApiController.GetDateTokenIssued()
  fullName: Cqrs.WebApi.CqrsApiController.GetDateTokenIssued()
  type: Method
  source:
    remote:
      path: Framework/Cqrs.WebApi/CqrsApiController.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: GetDateTokenIssued
    path: Framework/Cqrs.WebApi/CqrsApiController.cs
    startLine: 102
  assemblies:
  - Cqrs.WebApi
  namespace: Cqrs.WebApi
  syntax:
    content: protected virtual DateTime GetDateTokenIssued()
    return:
      type: System.DateTime
    content.vb: Protected Overridable Function GetDateTokenIssued As Date
  overload: Cqrs.WebApi.CqrsApiController.GetDateTokenIssued*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Cqrs.WebApi.CqrsApiController.GetTokenTimeOfExpiry
  commentId: M:Cqrs.WebApi.CqrsApiController.GetTokenTimeOfExpiry
  id: GetTokenTimeOfExpiry
  parent: Cqrs.WebApi.CqrsApiController
  langs:
  - csharp
  - vb
  name: GetTokenTimeOfExpiry()
  nameWithType: CqrsApiController.GetTokenTimeOfExpiry()
  fullName: Cqrs.WebApi.CqrsApiController.GetTokenTimeOfExpiry()
  type: Method
  source:
    remote:
      path: Framework/Cqrs.WebApi/CqrsApiController.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: GetTokenTimeOfExpiry
    path: Framework/Cqrs.WebApi/CqrsApiController.cs
    startLine: 107
  assemblies:
  - Cqrs.WebApi
  namespace: Cqrs.WebApi
  syntax:
    content: protected virtual DateTime GetTokenTimeOfExpiry()
    return:
      type: System.DateTime
    content.vb: Protected Overridable Function GetTokenTimeOfExpiry As Date
  overload: Cqrs.WebApi.CqrsApiController.GetTokenTimeOfExpiry*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Cqrs.WebApi.CqrsApiController.CompleteResponse``1(System.Net.Http.HttpResponseMessage,``0)
  commentId: M:Cqrs.WebApi.CqrsApiController.CompleteResponse``1(System.Net.Http.HttpResponseMessage,``0)
  id: CompleteResponse``1(System.Net.Http.HttpResponseMessage,``0)
  parent: Cqrs.WebApi.CqrsApiController
  langs:
  - csharp
  - vb
  name: CompleteResponse<TServiceResponse>(HttpResponseMessage, TServiceResponse)
  nameWithType: CqrsApiController.CompleteResponse<TServiceResponse>(HttpResponseMessage, TServiceResponse)
  fullName: Cqrs.WebApi.CqrsApiController.CompleteResponse<TServiceResponse>(System.Net.Http.HttpResponseMessage, TServiceResponse)
  type: Method
  source:
    remote:
      path: Framework/Cqrs.WebApi/CqrsApiController.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: CompleteResponse
    path: Framework/Cqrs.WebApi/CqrsApiController.cs
    startLine: 112
  assemblies:
  - Cqrs.WebApi
  namespace: Cqrs.WebApi
  syntax:
    content: 'protected virtual HttpResponseMessage CompleteResponse<TServiceResponse>(HttpResponseMessage response, TServiceResponse serviceResponse)where TServiceResponse : IServiceResponse'
    parameters:
    - id: response
      type: System.Net.Http.HttpResponseMessage
    - id: serviceResponse
      type: '{TServiceResponse}'
    typeParameters:
    - id: TServiceResponse
    return:
      type: System.Net.Http.HttpResponseMessage
    content.vb: Protected Overridable Function CompleteResponse(Of TServiceResponse As IServiceResponse)(response As HttpResponseMessage, serviceResponse As TServiceResponse) As HttpResponseMessage
  overload: Cqrs.WebApi.CqrsApiController.CompleteResponse*
  nameWithType.vb: CqrsApiController.CompleteResponse(Of TServiceResponse)(HttpResponseMessage, TServiceResponse)
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Cqrs.WebApi.CqrsApiController.CompleteResponse(Of TServiceResponse)(System.Net.Http.HttpResponseMessage, TServiceResponse)
  name.vb: CompleteResponse(Of TServiceResponse)(HttpResponseMessage, TServiceResponse)
- uid: Cqrs.WebApi.CqrsApiController.CompleteResponse``1(``0)
  commentId: M:Cqrs.WebApi.CqrsApiController.CompleteResponse``1(``0)
  id: CompleteResponse``1(``0)
  parent: Cqrs.WebApi.CqrsApiController
  langs:
  - csharp
  - vb
  name: CompleteResponse<TServiceResponse>(TServiceResponse)
  nameWithType: CqrsApiController.CompleteResponse<TServiceResponse>(TServiceResponse)
  fullName: Cqrs.WebApi.CqrsApiController.CompleteResponse<TServiceResponse>(TServiceResponse)
  type: Method
  source:
    remote:
      path: Framework/Cqrs.WebApi/CqrsApiController.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: CompleteResponse
    path: Framework/Cqrs.WebApi/CqrsApiController.cs
    startLine: 154
  assemblies:
  - Cqrs.WebApi
  namespace: Cqrs.WebApi
  syntax:
    content: 'protected virtual HttpResponseMessage CompleteResponse<TServiceResponse>(TServiceResponse serviceResponse)where TServiceResponse : IServiceResponse'
    parameters:
    - id: serviceResponse
      type: '{TServiceResponse}'
    typeParameters:
    - id: TServiceResponse
    return:
      type: System.Net.Http.HttpResponseMessage
    content.vb: Protected Overridable Function CompleteResponse(Of TServiceResponse As IServiceResponse)(serviceResponse As TServiceResponse) As HttpResponseMessage
  overload: Cqrs.WebApi.CqrsApiController.CompleteResponse*
  nameWithType.vb: CqrsApiController.CompleteResponse(Of TServiceResponse)(TServiceResponse)
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Cqrs.WebApi.CqrsApiController.CompleteResponse(Of TServiceResponse)(TServiceResponse)
  name.vb: CompleteResponse(Of TServiceResponse)(TServiceResponse)
- uid: Cqrs.WebApi.CqrsApiController.CompleteResponseWithData``1(``0)
  commentId: M:Cqrs.WebApi.CqrsApiController.CompleteResponseWithData``1(``0)
  id: CompleteResponseWithData``1(``0)
  parent: Cqrs.WebApi.CqrsApiController
  langs:
  - csharp
  - vb
  name: CompleteResponseWithData<TServiceResponse>(TServiceResponse)
  nameWithType: CqrsApiController.CompleteResponseWithData<TServiceResponse>(TServiceResponse)
  fullName: Cqrs.WebApi.CqrsApiController.CompleteResponseWithData<TServiceResponse>(TServiceResponse)
  type: Method
  source:
    remote:
      path: Framework/Cqrs.WebApi/CqrsApiController.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: CompleteResponseWithData
    path: Framework/Cqrs.WebApi/CqrsApiController.cs
    startLine: 162
  assemblies:
  - Cqrs.WebApi
  namespace: Cqrs.WebApi
  syntax:
    content: 'protected virtual HttpResponseMessage<TServiceResponse> CompleteResponseWithData<TServiceResponse>(TServiceResponse serviceResponse)where TServiceResponse : IServiceResponse'
    parameters:
    - id: serviceResponse
      type: '{TServiceResponse}'
    typeParameters:
    - id: TServiceResponse
    return:
      type: Cqrs.WebApi.HttpResponseMessage{{TServiceResponse}}
    content.vb: Protected Overridable Function CompleteResponseWithData(Of TServiceResponse As IServiceResponse)(serviceResponse As TServiceResponse) As HttpResponseMessage(Of TServiceResponse)
  overload: Cqrs.WebApi.CqrsApiController.CompleteResponseWithData*
  nameWithType.vb: CqrsApiController.CompleteResponseWithData(Of TServiceResponse)(TServiceResponse)
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Cqrs.WebApi.CqrsApiController.CompleteResponseWithData(Of TServiceResponse)(TServiceResponse)
  name.vb: CompleteResponseWithData(Of TServiceResponse)(TServiceResponse)
references:
- uid: System.Web.Http.ApiController
  commentId: T:System.Web.Http.ApiController
  parent: System.Web.Http
  isExternal: true
  name: ApiController
  nameWithType: ApiController
  fullName: System.Web.Http.ApiController
- uid: Cqrs.Authentication.ISingleSignOnToken.Token
  commentId: P:Cqrs.Authentication.ISingleSignOnToken.Token
  parent: Cqrs.Authentication.ISingleSignOnToken
  isExternal: false
  name: Token
  nameWithType: ISingleSignOnToken.Token
  fullName: Cqrs.Authentication.ISingleSignOnToken.Token
- uid: System.Net.Http.Headers.HttpHeaders
  commentId: T:System.Net.Http.Headers.HttpHeaders
- uid: System.Configuration.ConfigurationManager.AppSettings
  commentId: P:System.Configuration.ConfigurationManager.AppSettings
- uid: Cqrs.WebApi
  commentId: N:Cqrs.WebApi
  isExternal: false
  name: Cqrs.WebApi
  nameWithType: Cqrs.WebApi
  fullName: Cqrs.WebApi
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.Http.Controllers.IHttpController
  commentId: T:System.Web.Http.Controllers.IHttpController
  parent: System.Web.Http.Controllers
  isExternal: true
  name: IHttpController
  nameWithType: IHttpController
  fullName: System.Web.Http.Controllers.IHttpController
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Web.Http.ApiController.ExecuteAsync(System.Web.Http.Controllers.HttpControllerContext,System.Threading.CancellationToken)
  commentId: M:System.Web.Http.ApiController.ExecuteAsync(System.Web.Http.Controllers.HttpControllerContext,System.Threading.CancellationToken)
  parent: System.Web.Http.ApiController
  isExternal: true
  name: ExecuteAsync(HttpControllerContext, CancellationToken)
  nameWithType: ApiController.ExecuteAsync(HttpControllerContext, CancellationToken)
  fullName: System.Web.Http.ApiController.ExecuteAsync(System.Web.Http.Controllers.HttpControllerContext, System.Threading.CancellationToken)
  spec.csharp:
  - uid: System.Web.Http.ApiController.ExecuteAsync(System.Web.Http.Controllers.HttpControllerContext,System.Threading.CancellationToken)
    name: ExecuteAsync
    nameWithType: ApiController.ExecuteAsync
    fullName: System.Web.Http.ApiController.ExecuteAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Web.Http.Controllers.HttpControllerContext
    name: HttpControllerContext
    nameWithType: HttpControllerContext
    fullName: System.Web.Http.Controllers.HttpControllerContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Web.Http.ApiController.ExecuteAsync(System.Web.Http.Controllers.HttpControllerContext,System.Threading.CancellationToken)
    name: ExecuteAsync
    nameWithType: ApiController.ExecuteAsync
    fullName: System.Web.Http.ApiController.ExecuteAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Web.Http.Controllers.HttpControllerContext
    name: HttpControllerContext
    nameWithType: HttpControllerContext
    fullName: System.Web.Http.Controllers.HttpControllerContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Web.Http.ApiController.Validate``1({TEntity})
  commentId: M:System.Web.Http.ApiController.Validate``1(``0)
  parent: System.Web.Http.ApiController
  definition: System.Web.Http.ApiController.Validate``1(``0)
  name: Validate<TEntity>(TEntity)
  nameWithType: ApiController.Validate<TEntity>(TEntity)
  fullName: System.Web.Http.ApiController.Validate<TEntity>(TEntity)
  nameWithType.vb: ApiController.Validate(Of TEntity)(TEntity)
  fullName.vb: System.Web.Http.ApiController.Validate(Of TEntity)(TEntity)
  name.vb: Validate(Of TEntity)(TEntity)
  spec.csharp:
  - uid: System.Web.Http.ApiController.Validate``1(``0)
    name: Validate<TEntity>
    nameWithType: ApiController.Validate<TEntity>
    fullName: System.Web.Http.ApiController.Validate<TEntity>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Web.Http.ApiController.Validate``1(``0)
    name: Validate(Of TEntity)
    nameWithType: ApiController.Validate(Of TEntity)
    fullName: System.Web.Http.ApiController.Validate(Of TEntity)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Web.Http.ApiController.Validate``1({TEntity},System.String)
  commentId: M:System.Web.Http.ApiController.Validate``1(``0,System.String)
  parent: System.Web.Http.ApiController
  definition: System.Web.Http.ApiController.Validate``1(``0,System.String)
  name: Validate<TEntity>(TEntity, String)
  nameWithType: ApiController.Validate<TEntity>(TEntity, String)
  fullName: System.Web.Http.ApiController.Validate<TEntity>(TEntity, System.String)
  nameWithType.vb: ApiController.Validate(Of TEntity)(TEntity, String)
  fullName.vb: System.Web.Http.ApiController.Validate(Of TEntity)(TEntity, System.String)
  name.vb: Validate(Of TEntity)(TEntity, String)
  spec.csharp:
  - uid: System.Web.Http.ApiController.Validate``1(``0,System.String)
    name: Validate<TEntity>
    nameWithType: ApiController.Validate<TEntity>
    fullName: System.Web.Http.ApiController.Validate<TEntity>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Web.Http.ApiController.Validate``1(``0,System.String)
    name: Validate(Of TEntity)
    nameWithType: ApiController.Validate(Of TEntity)
    fullName: System.Web.Http.ApiController.Validate(Of TEntity)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Web.Http.ApiController.BadRequest
  commentId: M:System.Web.Http.ApiController.BadRequest
  parent: System.Web.Http.ApiController
  isExternal: true
  name: BadRequest()
  nameWithType: ApiController.BadRequest()
  fullName: System.Web.Http.ApiController.BadRequest()
  spec.csharp:
  - uid: System.Web.Http.ApiController.BadRequest
    name: BadRequest
    nameWithType: ApiController.BadRequest
    fullName: System.Web.Http.ApiController.BadRequest
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Web.Http.ApiController.BadRequest
    name: BadRequest
    nameWithType: ApiController.BadRequest
    fullName: System.Web.Http.ApiController.BadRequest
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Web.Http.ApiController.BadRequest(System.String)
  commentId: M:System.Web.Http.ApiController.BadRequest(System.String)
  parent: System.Web.Http.ApiController
  isExternal: true
  name: BadRequest(String)
  nameWithType: ApiController.BadRequest(String)
  fullName: System.Web.Http.ApiController.BadRequest(System.String)
  spec.csharp:
  - uid: System.Web.Http.ApiController.BadRequest(System.String)
    name: BadRequest
    nameWithType: ApiController.BadRequest
    fullName: System.Web.Http.ApiController.BadRequest
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Web.Http.ApiController.BadRequest(System.String)
    name: BadRequest
    nameWithType: ApiController.BadRequest
    fullName: System.Web.Http.ApiController.BadRequest
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Web.Http.ApiController.BadRequest(System.Web.Http.ModelBinding.ModelStateDictionary)
  commentId: M:System.Web.Http.ApiController.BadRequest(System.Web.Http.ModelBinding.ModelStateDictionary)
  parent: System.Web.Http.ApiController
  isExternal: true
  name: BadRequest(ModelStateDictionary)
  nameWithType: ApiController.BadRequest(ModelStateDictionary)
  fullName: System.Web.Http.ApiController.BadRequest(System.Web.Http.ModelBinding.ModelStateDictionary)
  spec.csharp:
  - uid: System.Web.Http.ApiController.BadRequest(System.Web.Http.ModelBinding.ModelStateDictionary)
    name: BadRequest
    nameWithType: ApiController.BadRequest
    fullName: System.Web.Http.ApiController.BadRequest
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Web.Http.ModelBinding.ModelStateDictionary
    name: ModelStateDictionary
    nameWithType: ModelStateDictionary
    fullName: System.Web.Http.ModelBinding.ModelStateDictionary
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Web.Http.ApiController.BadRequest(System.Web.Http.ModelBinding.ModelStateDictionary)
    name: BadRequest
    nameWithType: ApiController.BadRequest
    fullName: System.Web.Http.ApiController.BadRequest
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Web.Http.ModelBinding.ModelStateDictionary
    name: ModelStateDictionary
    nameWithType: ModelStateDictionary
    fullName: System.Web.Http.ModelBinding.ModelStateDictionary
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Web.Http.ApiController.Conflict
  commentId: M:System.Web.Http.ApiController.Conflict
  parent: System.Web.Http.ApiController
  isExternal: true
  name: Conflict()
  nameWithType: ApiController.Conflict()
  fullName: System.Web.Http.ApiController.Conflict()
  spec.csharp:
  - uid: System.Web.Http.ApiController.Conflict
    name: Conflict
    nameWithType: ApiController.Conflict
    fullName: System.Web.Http.ApiController.Conflict
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Web.Http.ApiController.Conflict
    name: Conflict
    nameWithType: ApiController.Conflict
    fullName: System.Web.Http.ApiController.Conflict
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,{T})
  commentId: M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0)
  parent: System.Web.Http.ApiController
  definition: System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0)
  name: Content<T>(HttpStatusCode, T)
  nameWithType: ApiController.Content<T>(HttpStatusCode, T)
  fullName: System.Web.Http.ApiController.Content<T>(System.Net.HttpStatusCode, T)
  nameWithType.vb: ApiController.Content(Of T)(HttpStatusCode, T)
  fullName.vb: System.Web.Http.ApiController.Content(Of T)(System.Net.HttpStatusCode, T)
  name.vb: Content(Of T)(HttpStatusCode, T)
  spec.csharp:
  - uid: System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0)
    name: Content<T>
    nameWithType: ApiController.Content<T>
    fullName: System.Web.Http.ApiController.Content<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.HttpStatusCode
    name: HttpStatusCode
    nameWithType: HttpStatusCode
    fullName: System.Net.HttpStatusCode
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0)
    name: Content(Of T)
    nameWithType: ApiController.Content(Of T)
    fullName: System.Web.Http.ApiController.Content(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.HttpStatusCode
    name: HttpStatusCode
    nameWithType: HttpStatusCode
    fullName: System.Net.HttpStatusCode
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,{T},System.Net.Http.Formatting.MediaTypeFormatter)
  commentId: M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter)
  parent: System.Web.Http.ApiController
  definition: System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter)
  name: Content<T>(HttpStatusCode, T, MediaTypeFormatter)
  nameWithType: ApiController.Content<T>(HttpStatusCode, T, MediaTypeFormatter)
  fullName: System.Web.Http.ApiController.Content<T>(System.Net.HttpStatusCode, T, System.Net.Http.Formatting.MediaTypeFormatter)
  nameWithType.vb: ApiController.Content(Of T)(HttpStatusCode, T, MediaTypeFormatter)
  fullName.vb: System.Web.Http.ApiController.Content(Of T)(System.Net.HttpStatusCode, T, System.Net.Http.Formatting.MediaTypeFormatter)
  name.vb: Content(Of T)(HttpStatusCode, T, MediaTypeFormatter)
  spec.csharp:
  - uid: System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter)
    name: Content<T>
    nameWithType: ApiController.Content<T>
    fullName: System.Web.Http.ApiController.Content<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.HttpStatusCode
    name: HttpStatusCode
    nameWithType: HttpStatusCode
    fullName: System.Net.HttpStatusCode
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.Formatting.MediaTypeFormatter
    name: MediaTypeFormatter
    nameWithType: MediaTypeFormatter
    fullName: System.Net.Http.Formatting.MediaTypeFormatter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter)
    name: Content(Of T)
    nameWithType: ApiController.Content(Of T)
    fullName: System.Web.Http.ApiController.Content(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.HttpStatusCode
    name: HttpStatusCode
    nameWithType: HttpStatusCode
    fullName: System.Net.HttpStatusCode
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.Formatting.MediaTypeFormatter
    name: MediaTypeFormatter
    nameWithType: MediaTypeFormatter
    fullName: System.Net.Http.Formatting.MediaTypeFormatter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,{T},System.Net.Http.Formatting.MediaTypeFormatter,System.String)
  commentId: M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.String)
  parent: System.Web.Http.ApiController
  definition: System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.String)
  name: Content<T>(HttpStatusCode, T, MediaTypeFormatter, String)
  nameWithType: ApiController.Content<T>(HttpStatusCode, T, MediaTypeFormatter, String)
  fullName: System.Web.Http.ApiController.Content<T>(System.Net.HttpStatusCode, T, System.Net.Http.Formatting.MediaTypeFormatter, System.String)
  nameWithType.vb: ApiController.Content(Of T)(HttpStatusCode, T, MediaTypeFormatter, String)
  fullName.vb: System.Web.Http.ApiController.Content(Of T)(System.Net.HttpStatusCode, T, System.Net.Http.Formatting.MediaTypeFormatter, System.String)
  name.vb: Content(Of T)(HttpStatusCode, T, MediaTypeFormatter, String)
  spec.csharp:
  - uid: System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.String)
    name: Content<T>
    nameWithType: ApiController.Content<T>
    fullName: System.Web.Http.ApiController.Content<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.HttpStatusCode
    name: HttpStatusCode
    nameWithType: HttpStatusCode
    fullName: System.Net.HttpStatusCode
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.Formatting.MediaTypeFormatter
    name: MediaTypeFormatter
    nameWithType: MediaTypeFormatter
    fullName: System.Net.Http.Formatting.MediaTypeFormatter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.String)
    name: Content(Of T)
    nameWithType: ApiController.Content(Of T)
    fullName: System.Web.Http.ApiController.Content(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.HttpStatusCode
    name: HttpStatusCode
    nameWithType: HttpStatusCode
    fullName: System.Net.HttpStatusCode
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.Formatting.MediaTypeFormatter
    name: MediaTypeFormatter
    nameWithType: MediaTypeFormatter
    fullName: System.Net.Http.Formatting.MediaTypeFormatter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,{T},System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue)
  commentId: M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue)
  parent: System.Web.Http.ApiController
  definition: System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue)
  name: Content<T>(HttpStatusCode, T, MediaTypeFormatter, MediaTypeHeaderValue)
  nameWithType: ApiController.Content<T>(HttpStatusCode, T, MediaTypeFormatter, MediaTypeHeaderValue)
  fullName: System.Web.Http.ApiController.Content<T>(System.Net.HttpStatusCode, T, System.Net.Http.Formatting.MediaTypeFormatter, System.Net.Http.Headers.MediaTypeHeaderValue)
  nameWithType.vb: ApiController.Content(Of T)(HttpStatusCode, T, MediaTypeFormatter, MediaTypeHeaderValue)
  fullName.vb: System.Web.Http.ApiController.Content(Of T)(System.Net.HttpStatusCode, T, System.Net.Http.Formatting.MediaTypeFormatter, System.Net.Http.Headers.MediaTypeHeaderValue)
  name.vb: Content(Of T)(HttpStatusCode, T, MediaTypeFormatter, MediaTypeHeaderValue)
  spec.csharp:
  - uid: System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue)
    name: Content<T>
    nameWithType: ApiController.Content<T>
    fullName: System.Web.Http.ApiController.Content<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.HttpStatusCode
    name: HttpStatusCode
    nameWithType: HttpStatusCode
    fullName: System.Net.HttpStatusCode
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.Formatting.MediaTypeFormatter
    name: MediaTypeFormatter
    nameWithType: MediaTypeFormatter
    fullName: System.Net.Http.Formatting.MediaTypeFormatter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.Headers.MediaTypeHeaderValue
    name: MediaTypeHeaderValue
    nameWithType: MediaTypeHeaderValue
    fullName: System.Net.Http.Headers.MediaTypeHeaderValue
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue)
    name: Content(Of T)
    nameWithType: ApiController.Content(Of T)
    fullName: System.Web.Http.ApiController.Content(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.HttpStatusCode
    name: HttpStatusCode
    nameWithType: HttpStatusCode
    fullName: System.Net.HttpStatusCode
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.Formatting.MediaTypeFormatter
    name: MediaTypeFormatter
    nameWithType: MediaTypeFormatter
    fullName: System.Net.Http.Formatting.MediaTypeFormatter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.Headers.MediaTypeHeaderValue
    name: MediaTypeHeaderValue
    nameWithType: MediaTypeHeaderValue
    fullName: System.Net.Http.Headers.MediaTypeHeaderValue
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Web.Http.ApiController.Created``1(System.String,{T})
  commentId: M:System.Web.Http.ApiController.Created``1(System.String,``0)
  parent: System.Web.Http.ApiController
  definition: System.Web.Http.ApiController.Created``1(System.String,``0)
  name: Created<T>(String, T)
  nameWithType: ApiController.Created<T>(String, T)
  fullName: System.Web.Http.ApiController.Created<T>(System.String, T)
  nameWithType.vb: ApiController.Created(Of T)(String, T)
  fullName.vb: System.Web.Http.ApiController.Created(Of T)(System.String, T)
  name.vb: Created(Of T)(String, T)
  spec.csharp:
  - uid: System.Web.Http.ApiController.Created``1(System.String,``0)
    name: Created<T>
    nameWithType: ApiController.Created<T>
    fullName: System.Web.Http.ApiController.Created<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Web.Http.ApiController.Created``1(System.String,``0)
    name: Created(Of T)
    nameWithType: ApiController.Created(Of T)
    fullName: System.Web.Http.ApiController.Created(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Web.Http.ApiController.Created``1(System.Uri,{T})
  commentId: M:System.Web.Http.ApiController.Created``1(System.Uri,``0)
  parent: System.Web.Http.ApiController
  definition: System.Web.Http.ApiController.Created``1(System.Uri,``0)
  name: Created<T>(Uri, T)
  nameWithType: ApiController.Created<T>(Uri, T)
  fullName: System.Web.Http.ApiController.Created<T>(System.Uri, T)
  nameWithType.vb: ApiController.Created(Of T)(Uri, T)
  fullName.vb: System.Web.Http.ApiController.Created(Of T)(System.Uri, T)
  name.vb: Created(Of T)(Uri, T)
  spec.csharp:
  - uid: System.Web.Http.ApiController.Created``1(System.Uri,``0)
    name: Created<T>
    nameWithType: ApiController.Created<T>
    fullName: System.Web.Http.ApiController.Created<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Web.Http.ApiController.Created``1(System.Uri,``0)
    name: Created(Of T)
    nameWithType: ApiController.Created(Of T)
    fullName: System.Web.Http.ApiController.Created(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Object,{T})
  commentId: M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Object,``0)
  parent: System.Web.Http.ApiController
  definition: System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Object,``0)
  name: CreatedAtRoute<T>(String, Object, T)
  nameWithType: ApiController.CreatedAtRoute<T>(String, Object, T)
  fullName: System.Web.Http.ApiController.CreatedAtRoute<T>(System.String, System.Object, T)
  nameWithType.vb: ApiController.CreatedAtRoute(Of T)(String, Object, T)
  fullName.vb: System.Web.Http.ApiController.CreatedAtRoute(Of T)(System.String, System.Object, T)
  name.vb: CreatedAtRoute(Of T)(String, Object, T)
  spec.csharp:
  - uid: System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Object,``0)
    name: CreatedAtRoute<T>
    nameWithType: ApiController.CreatedAtRoute<T>
    fullName: System.Web.Http.ApiController.CreatedAtRoute<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Object,``0)
    name: CreatedAtRoute(Of T)
    nameWithType: ApiController.CreatedAtRoute(Of T)
    fullName: System.Web.Http.ApiController.CreatedAtRoute(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},{T})
  commentId: M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},``0)
  parent: System.Web.Http.ApiController
  definition: System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},``0)
  name: CreatedAtRoute<T>(String, IDictionary<String, Object>, T)
  nameWithType: ApiController.CreatedAtRoute<T>(String, IDictionary<String, Object>, T)
  fullName: System.Web.Http.ApiController.CreatedAtRoute<T>(System.String, System.Collections.Generic.IDictionary<System.String, System.Object>, T)
  nameWithType.vb: ApiController.CreatedAtRoute(Of T)(String, IDictionary(Of String, Object), T)
  fullName.vb: System.Web.Http.ApiController.CreatedAtRoute(Of T)(System.String, System.Collections.Generic.IDictionary(Of System.String, System.Object), T)
  name.vb: CreatedAtRoute(Of T)(String, IDictionary(Of String, Object), T)
  spec.csharp:
  - uid: System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},``0)
    name: CreatedAtRoute<T>
    nameWithType: ApiController.CreatedAtRoute<T>
    fullName: System.Web.Http.ApiController.CreatedAtRoute<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},``0)
    name: CreatedAtRoute(Of T)
    nameWithType: ApiController.CreatedAtRoute(Of T)
    fullName: System.Web.Http.ApiController.CreatedAtRoute(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Web.Http.ApiController.InternalServerError
  commentId: M:System.Web.Http.ApiController.InternalServerError
  parent: System.Web.Http.ApiController
  isExternal: true
  name: InternalServerError()
  nameWithType: ApiController.InternalServerError()
  fullName: System.Web.Http.ApiController.InternalServerError()
  spec.csharp:
  - uid: System.Web.Http.ApiController.InternalServerError
    name: InternalServerError
    nameWithType: ApiController.InternalServerError
    fullName: System.Web.Http.ApiController.InternalServerError
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Web.Http.ApiController.InternalServerError
    name: InternalServerError
    nameWithType: ApiController.InternalServerError
    fullName: System.Web.Http.ApiController.InternalServerError
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Web.Http.ApiController.InternalServerError(System.Exception)
  commentId: M:System.Web.Http.ApiController.InternalServerError(System.Exception)
  parent: System.Web.Http.ApiController
  isExternal: true
  name: InternalServerError(Exception)
  nameWithType: ApiController.InternalServerError(Exception)
  fullName: System.Web.Http.ApiController.InternalServerError(System.Exception)
  spec.csharp:
  - uid: System.Web.Http.ApiController.InternalServerError(System.Exception)
    name: InternalServerError
    nameWithType: ApiController.InternalServerError
    fullName: System.Web.Http.ApiController.InternalServerError
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Web.Http.ApiController.InternalServerError(System.Exception)
    name: InternalServerError
    nameWithType: ApiController.InternalServerError
    fullName: System.Web.Http.ApiController.InternalServerError
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Web.Http.ApiController.Json``1({T})
  commentId: M:System.Web.Http.ApiController.Json``1(``0)
  parent: System.Web.Http.ApiController
  definition: System.Web.Http.ApiController.Json``1(``0)
  name: Json<T>(T)
  nameWithType: ApiController.Json<T>(T)
  fullName: System.Web.Http.ApiController.Json<T>(T)
  nameWithType.vb: ApiController.Json(Of T)(T)
  fullName.vb: System.Web.Http.ApiController.Json(Of T)(T)
  name.vb: Json(Of T)(T)
  spec.csharp:
  - uid: System.Web.Http.ApiController.Json``1(``0)
    name: Json<T>
    nameWithType: ApiController.Json<T>
    fullName: System.Web.Http.ApiController.Json<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Web.Http.ApiController.Json``1(``0)
    name: Json(Of T)
    nameWithType: ApiController.Json(Of T)
    fullName: System.Web.Http.ApiController.Json(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Web.Http.ApiController.Json``1({T},Newtonsoft.Json.JsonSerializerSettings)
  commentId: M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings)
  parent: System.Web.Http.ApiController
  definition: System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings)
  name: Json<T>(T, JsonSerializerSettings)
  nameWithType: ApiController.Json<T>(T, JsonSerializerSettings)
  fullName: System.Web.Http.ApiController.Json<T>(T, Newtonsoft.Json.JsonSerializerSettings)
  nameWithType.vb: ApiController.Json(Of T)(T, JsonSerializerSettings)
  fullName.vb: System.Web.Http.ApiController.Json(Of T)(T, Newtonsoft.Json.JsonSerializerSettings)
  name.vb: Json(Of T)(T, JsonSerializerSettings)
  spec.csharp:
  - uid: System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings)
    name: Json<T>
    nameWithType: ApiController.Json<T>
    fullName: System.Web.Http.ApiController.Json<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Newtonsoft.Json.JsonSerializerSettings
    name: JsonSerializerSettings
    nameWithType: JsonSerializerSettings
    fullName: Newtonsoft.Json.JsonSerializerSettings
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings)
    name: Json(Of T)
    nameWithType: ApiController.Json(Of T)
    fullName: System.Web.Http.ApiController.Json(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Newtonsoft.Json.JsonSerializerSettings
    name: JsonSerializerSettings
    nameWithType: JsonSerializerSettings
    fullName: Newtonsoft.Json.JsonSerializerSettings
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Web.Http.ApiController.Json``1({T},Newtonsoft.Json.JsonSerializerSettings,System.Text.Encoding)
  commentId: M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings,System.Text.Encoding)
  parent: System.Web.Http.ApiController
  definition: System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings,System.Text.Encoding)
  name: Json<T>(T, JsonSerializerSettings, Encoding)
  nameWithType: ApiController.Json<T>(T, JsonSerializerSettings, Encoding)
  fullName: System.Web.Http.ApiController.Json<T>(T, Newtonsoft.Json.JsonSerializerSettings, System.Text.Encoding)
  nameWithType.vb: ApiController.Json(Of T)(T, JsonSerializerSettings, Encoding)
  fullName.vb: System.Web.Http.ApiController.Json(Of T)(T, Newtonsoft.Json.JsonSerializerSettings, System.Text.Encoding)
  name.vb: Json(Of T)(T, JsonSerializerSettings, Encoding)
  spec.csharp:
  - uid: System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings,System.Text.Encoding)
    name: Json<T>
    nameWithType: ApiController.Json<T>
    fullName: System.Web.Http.ApiController.Json<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Newtonsoft.Json.JsonSerializerSettings
    name: JsonSerializerSettings
    nameWithType: JsonSerializerSettings
    fullName: Newtonsoft.Json.JsonSerializerSettings
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Text.Encoding
    name: Encoding
    nameWithType: Encoding
    fullName: System.Text.Encoding
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings,System.Text.Encoding)
    name: Json(Of T)
    nameWithType: ApiController.Json(Of T)
    fullName: System.Web.Http.ApiController.Json(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Newtonsoft.Json.JsonSerializerSettings
    name: JsonSerializerSettings
    nameWithType: JsonSerializerSettings
    fullName: Newtonsoft.Json.JsonSerializerSettings
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Text.Encoding
    name: Encoding
    nameWithType: Encoding
    fullName: System.Text.Encoding
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Web.Http.ApiController.NotFound
  commentId: M:System.Web.Http.ApiController.NotFound
  parent: System.Web.Http.ApiController
  isExternal: true
  name: NotFound()
  nameWithType: ApiController.NotFound()
  fullName: System.Web.Http.ApiController.NotFound()
  spec.csharp:
  - uid: System.Web.Http.ApiController.NotFound
    name: NotFound
    nameWithType: ApiController.NotFound
    fullName: System.Web.Http.ApiController.NotFound
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Web.Http.ApiController.NotFound
    name: NotFound
    nameWithType: ApiController.NotFound
    fullName: System.Web.Http.ApiController.NotFound
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Web.Http.ApiController.Ok
  commentId: M:System.Web.Http.ApiController.Ok
  parent: System.Web.Http.ApiController
  isExternal: true
  name: Ok()
  nameWithType: ApiController.Ok()
  fullName: System.Web.Http.ApiController.Ok()
  spec.csharp:
  - uid: System.Web.Http.ApiController.Ok
    name: Ok
    nameWithType: ApiController.Ok
    fullName: System.Web.Http.ApiController.Ok
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Web.Http.ApiController.Ok
    name: Ok
    nameWithType: ApiController.Ok
    fullName: System.Web.Http.ApiController.Ok
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Web.Http.ApiController.Ok``1({T})
  commentId: M:System.Web.Http.ApiController.Ok``1(``0)
  parent: System.Web.Http.ApiController
  definition: System.Web.Http.ApiController.Ok``1(``0)
  name: Ok<T>(T)
  nameWithType: ApiController.Ok<T>(T)
  fullName: System.Web.Http.ApiController.Ok<T>(T)
  nameWithType.vb: ApiController.Ok(Of T)(T)
  fullName.vb: System.Web.Http.ApiController.Ok(Of T)(T)
  name.vb: Ok(Of T)(T)
  spec.csharp:
  - uid: System.Web.Http.ApiController.Ok``1(``0)
    name: Ok<T>
    nameWithType: ApiController.Ok<T>
    fullName: System.Web.Http.ApiController.Ok<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Web.Http.ApiController.Ok``1(``0)
    name: Ok(Of T)
    nameWithType: ApiController.Ok(Of T)
    fullName: System.Web.Http.ApiController.Ok(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Web.Http.ApiController.Redirect(System.String)
  commentId: M:System.Web.Http.ApiController.Redirect(System.String)
  parent: System.Web.Http.ApiController
  isExternal: true
  name: Redirect(String)
  nameWithType: ApiController.Redirect(String)
  fullName: System.Web.Http.ApiController.Redirect(System.String)
  spec.csharp:
  - uid: System.Web.Http.ApiController.Redirect(System.String)
    name: Redirect
    nameWithType: ApiController.Redirect
    fullName: System.Web.Http.ApiController.Redirect
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Web.Http.ApiController.Redirect(System.String)
    name: Redirect
    nameWithType: ApiController.Redirect
    fullName: System.Web.Http.ApiController.Redirect
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Web.Http.ApiController.Redirect(System.Uri)
  commentId: M:System.Web.Http.ApiController.Redirect(System.Uri)
  parent: System.Web.Http.ApiController
  isExternal: true
  name: Redirect(Uri)
  nameWithType: ApiController.Redirect(Uri)
  fullName: System.Web.Http.ApiController.Redirect(System.Uri)
  spec.csharp:
  - uid: System.Web.Http.ApiController.Redirect(System.Uri)
    name: Redirect
    nameWithType: ApiController.Redirect
    fullName: System.Web.Http.ApiController.Redirect
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Web.Http.ApiController.Redirect(System.Uri)
    name: Redirect
    nameWithType: ApiController.Redirect
    fullName: System.Web.Http.ApiController.Redirect
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Web.Http.ApiController.RedirectToRoute(System.String,System.Object)
  commentId: M:System.Web.Http.ApiController.RedirectToRoute(System.String,System.Object)
  parent: System.Web.Http.ApiController
  isExternal: true
  name: RedirectToRoute(String, Object)
  nameWithType: ApiController.RedirectToRoute(String, Object)
  fullName: System.Web.Http.ApiController.RedirectToRoute(System.String, System.Object)
  spec.csharp:
  - uid: System.Web.Http.ApiController.RedirectToRoute(System.String,System.Object)
    name: RedirectToRoute
    nameWithType: ApiController.RedirectToRoute
    fullName: System.Web.Http.ApiController.RedirectToRoute
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Web.Http.ApiController.RedirectToRoute(System.String,System.Object)
    name: RedirectToRoute
    nameWithType: ApiController.RedirectToRoute
    fullName: System.Web.Http.ApiController.RedirectToRoute
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Web.Http.ApiController.RedirectToRoute(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:System.Web.Http.ApiController.RedirectToRoute(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: System.Web.Http.ApiController
  isExternal: true
  name: RedirectToRoute(String, IDictionary<String, Object>)
  nameWithType: ApiController.RedirectToRoute(String, IDictionary<String, Object>)
  fullName: System.Web.Http.ApiController.RedirectToRoute(System.String, System.Collections.Generic.IDictionary<System.String, System.Object>)
  nameWithType.vb: ApiController.RedirectToRoute(String, IDictionary(Of String, Object))
  fullName.vb: System.Web.Http.ApiController.RedirectToRoute(System.String, System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: RedirectToRoute(String, IDictionary(Of String, Object))
  spec.csharp:
  - uid: System.Web.Http.ApiController.RedirectToRoute(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
    name: RedirectToRoute
    nameWithType: ApiController.RedirectToRoute
    fullName: System.Web.Http.ApiController.RedirectToRoute
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Web.Http.ApiController.RedirectToRoute(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
    name: RedirectToRoute
    nameWithType: ApiController.RedirectToRoute
    fullName: System.Web.Http.ApiController.RedirectToRoute
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Web.Http.ApiController.ResponseMessage(System.Net.Http.HttpResponseMessage)
  commentId: M:System.Web.Http.ApiController.ResponseMessage(System.Net.Http.HttpResponseMessage)
  parent: System.Web.Http.ApiController
  isExternal: true
  name: ResponseMessage(HttpResponseMessage)
  nameWithType: ApiController.ResponseMessage(HttpResponseMessage)
  fullName: System.Web.Http.ApiController.ResponseMessage(System.Net.Http.HttpResponseMessage)
  spec.csharp:
  - uid: System.Web.Http.ApiController.ResponseMessage(System.Net.Http.HttpResponseMessage)
    name: ResponseMessage
    nameWithType: ApiController.ResponseMessage
    fullName: System.Web.Http.ApiController.ResponseMessage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpResponseMessage
    name: HttpResponseMessage
    nameWithType: HttpResponseMessage
    fullName: System.Net.Http.HttpResponseMessage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Web.Http.ApiController.ResponseMessage(System.Net.Http.HttpResponseMessage)
    name: ResponseMessage
    nameWithType: ApiController.ResponseMessage
    fullName: System.Web.Http.ApiController.ResponseMessage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpResponseMessage
    name: HttpResponseMessage
    nameWithType: HttpResponseMessage
    fullName: System.Net.Http.HttpResponseMessage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Web.Http.ApiController.StatusCode(System.Net.HttpStatusCode)
  commentId: M:System.Web.Http.ApiController.StatusCode(System.Net.HttpStatusCode)
  parent: System.Web.Http.ApiController
  isExternal: true
  name: StatusCode(HttpStatusCode)
  nameWithType: ApiController.StatusCode(HttpStatusCode)
  fullName: System.Web.Http.ApiController.StatusCode(System.Net.HttpStatusCode)
  spec.csharp:
  - uid: System.Web.Http.ApiController.StatusCode(System.Net.HttpStatusCode)
    name: StatusCode
    nameWithType: ApiController.StatusCode
    fullName: System.Web.Http.ApiController.StatusCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.HttpStatusCode
    name: HttpStatusCode
    nameWithType: HttpStatusCode
    fullName: System.Net.HttpStatusCode
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Web.Http.ApiController.StatusCode(System.Net.HttpStatusCode)
    name: StatusCode
    nameWithType: ApiController.StatusCode
    fullName: System.Web.Http.ApiController.StatusCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.HttpStatusCode
    name: HttpStatusCode
    nameWithType: HttpStatusCode
    fullName: System.Net.HttpStatusCode
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Web.Http.ApiController.Unauthorized(System.Net.Http.Headers.AuthenticationHeaderValue[])
  commentId: M:System.Web.Http.ApiController.Unauthorized(System.Net.Http.Headers.AuthenticationHeaderValue[])
  parent: System.Web.Http.ApiController
  isExternal: true
  name: Unauthorized(AuthenticationHeaderValue[])
  nameWithType: ApiController.Unauthorized(AuthenticationHeaderValue[])
  fullName: System.Web.Http.ApiController.Unauthorized(System.Net.Http.Headers.AuthenticationHeaderValue[])
  nameWithType.vb: ApiController.Unauthorized(AuthenticationHeaderValue())
  fullName.vb: System.Web.Http.ApiController.Unauthorized(System.Net.Http.Headers.AuthenticationHeaderValue())
  name.vb: Unauthorized(AuthenticationHeaderValue())
  spec.csharp:
  - uid: System.Web.Http.ApiController.Unauthorized(System.Net.Http.Headers.AuthenticationHeaderValue[])
    name: Unauthorized
    nameWithType: ApiController.Unauthorized
    fullName: System.Web.Http.ApiController.Unauthorized
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.Headers.AuthenticationHeaderValue
    name: AuthenticationHeaderValue
    nameWithType: AuthenticationHeaderValue
    fullName: System.Net.Http.Headers.AuthenticationHeaderValue
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Web.Http.ApiController.Unauthorized(System.Net.Http.Headers.AuthenticationHeaderValue[])
    name: Unauthorized
    nameWithType: ApiController.Unauthorized
    fullName: System.Web.Http.ApiController.Unauthorized
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.Headers.AuthenticationHeaderValue
    name: AuthenticationHeaderValue
    nameWithType: AuthenticationHeaderValue
    fullName: System.Net.Http.Headers.AuthenticationHeaderValue
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Web.Http.ApiController.Unauthorized(System.Collections.Generic.IEnumerable{System.Net.Http.Headers.AuthenticationHeaderValue})
  commentId: M:System.Web.Http.ApiController.Unauthorized(System.Collections.Generic.IEnumerable{System.Net.Http.Headers.AuthenticationHeaderValue})
  parent: System.Web.Http.ApiController
  isExternal: true
  name: Unauthorized(IEnumerable<AuthenticationHeaderValue>)
  nameWithType: ApiController.Unauthorized(IEnumerable<AuthenticationHeaderValue>)
  fullName: System.Web.Http.ApiController.Unauthorized(System.Collections.Generic.IEnumerable<System.Net.Http.Headers.AuthenticationHeaderValue>)
  nameWithType.vb: ApiController.Unauthorized(IEnumerable(Of AuthenticationHeaderValue))
  fullName.vb: System.Web.Http.ApiController.Unauthorized(System.Collections.Generic.IEnumerable(Of System.Net.Http.Headers.AuthenticationHeaderValue))
  name.vb: Unauthorized(IEnumerable(Of AuthenticationHeaderValue))
  spec.csharp:
  - uid: System.Web.Http.ApiController.Unauthorized(System.Collections.Generic.IEnumerable{System.Net.Http.Headers.AuthenticationHeaderValue})
    name: Unauthorized
    nameWithType: ApiController.Unauthorized
    fullName: System.Web.Http.ApiController.Unauthorized
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.Http.Headers.AuthenticationHeaderValue
    name: AuthenticationHeaderValue
    nameWithType: AuthenticationHeaderValue
    fullName: System.Net.Http.Headers.AuthenticationHeaderValue
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Web.Http.ApiController.Unauthorized(System.Collections.Generic.IEnumerable{System.Net.Http.Headers.AuthenticationHeaderValue})
    name: Unauthorized
    nameWithType: ApiController.Unauthorized
    fullName: System.Web.Http.ApiController.Unauthorized
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Net.Http.Headers.AuthenticationHeaderValue
    name: AuthenticationHeaderValue
    nameWithType: AuthenticationHeaderValue
    fullName: System.Net.Http.Headers.AuthenticationHeaderValue
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Web.Http.ApiController.Initialize(System.Web.Http.Controllers.HttpControllerContext)
  commentId: M:System.Web.Http.ApiController.Initialize(System.Web.Http.Controllers.HttpControllerContext)
  parent: System.Web.Http.ApiController
  isExternal: true
  name: Initialize(HttpControllerContext)
  nameWithType: ApiController.Initialize(HttpControllerContext)
  fullName: System.Web.Http.ApiController.Initialize(System.Web.Http.Controllers.HttpControllerContext)
  spec.csharp:
  - uid: System.Web.Http.ApiController.Initialize(System.Web.Http.Controllers.HttpControllerContext)
    name: Initialize
    nameWithType: ApiController.Initialize
    fullName: System.Web.Http.ApiController.Initialize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Web.Http.Controllers.HttpControllerContext
    name: HttpControllerContext
    nameWithType: HttpControllerContext
    fullName: System.Web.Http.Controllers.HttpControllerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Web.Http.ApiController.Initialize(System.Web.Http.Controllers.HttpControllerContext)
    name: Initialize
    nameWithType: ApiController.Initialize
    fullName: System.Web.Http.ApiController.Initialize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Web.Http.Controllers.HttpControllerContext
    name: HttpControllerContext
    nameWithType: HttpControllerContext
    fullName: System.Web.Http.Controllers.HttpControllerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Web.Http.ApiController.Dispose
  commentId: M:System.Web.Http.ApiController.Dispose
  parent: System.Web.Http.ApiController
  isExternal: true
  name: Dispose()
  nameWithType: ApiController.Dispose()
  fullName: System.Web.Http.ApiController.Dispose()
  spec.csharp:
  - uid: System.Web.Http.ApiController.Dispose
    name: Dispose
    nameWithType: ApiController.Dispose
    fullName: System.Web.Http.ApiController.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Web.Http.ApiController.Dispose
    name: Dispose
    nameWithType: ApiController.Dispose
    fullName: System.Web.Http.ApiController.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Web.Http.ApiController.Dispose(System.Boolean)
  commentId: M:System.Web.Http.ApiController.Dispose(System.Boolean)
  parent: System.Web.Http.ApiController
  isExternal: true
  name: Dispose(Boolean)
  nameWithType: ApiController.Dispose(Boolean)
  fullName: System.Web.Http.ApiController.Dispose(System.Boolean)
  spec.csharp:
  - uid: System.Web.Http.ApiController.Dispose(System.Boolean)
    name: Dispose
    nameWithType: ApiController.Dispose
    fullName: System.Web.Http.ApiController.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Web.Http.ApiController.Dispose(System.Boolean)
    name: Dispose
    nameWithType: ApiController.Dispose
    fullName: System.Web.Http.ApiController.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Web.Http.ApiController.Configuration
  commentId: P:System.Web.Http.ApiController.Configuration
  parent: System.Web.Http.ApiController
  isExternal: true
  name: Configuration
  nameWithType: ApiController.Configuration
  fullName: System.Web.Http.ApiController.Configuration
- uid: System.Web.Http.ApiController.ControllerContext
  commentId: P:System.Web.Http.ApiController.ControllerContext
  parent: System.Web.Http.ApiController
  isExternal: true
  name: ControllerContext
  nameWithType: ApiController.ControllerContext
  fullName: System.Web.Http.ApiController.ControllerContext
- uid: System.Web.Http.ApiController.ActionContext
  commentId: P:System.Web.Http.ApiController.ActionContext
  parent: System.Web.Http.ApiController
  isExternal: true
  name: ActionContext
  nameWithType: ApiController.ActionContext
  fullName: System.Web.Http.ApiController.ActionContext
- uid: System.Web.Http.ApiController.ModelState
  commentId: P:System.Web.Http.ApiController.ModelState
  parent: System.Web.Http.ApiController
  isExternal: true
  name: ModelState
  nameWithType: ApiController.ModelState
  fullName: System.Web.Http.ApiController.ModelState
- uid: System.Web.Http.ApiController.Request
  commentId: P:System.Web.Http.ApiController.Request
  parent: System.Web.Http.ApiController
  isExternal: true
  name: Request
  nameWithType: ApiController.Request
  fullName: System.Web.Http.ApiController.Request
- uid: System.Web.Http.ApiController.RequestContext
  commentId: P:System.Web.Http.ApiController.RequestContext
  parent: System.Web.Http.ApiController
  isExternal: true
  name: RequestContext
  nameWithType: ApiController.RequestContext
  fullName: System.Web.Http.ApiController.RequestContext
- uid: System.Web.Http.ApiController.Url
  commentId: P:System.Web.Http.ApiController.Url
  parent: System.Web.Http.ApiController
  isExternal: true
  name: Url
  nameWithType: ApiController.Url
  fullName: System.Web.Http.ApiController.Url
- uid: System.Web.Http.ApiController.User
  commentId: P:System.Web.Http.ApiController.User
  parent: System.Web.Http.ApiController
  isExternal: true
  name: User
  nameWithType: ApiController.User
  fullName: System.Web.Http.ApiController.User
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Web.Http
  commentId: N:System.Web.Http
  isExternal: false
  name: System.Web.Http
  nameWithType: System.Web.Http
  fullName: System.Web.Http
- uid: Cqrs.Authentication.ISingleSignOnToken
  commentId: T:Cqrs.Authentication.ISingleSignOnToken
  parent: Cqrs.Authentication
  isExternal: false
  name: ISingleSignOnToken
  nameWithType: ISingleSignOnToken
  fullName: Cqrs.Authentication.ISingleSignOnToken
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Web.Http.Controllers
  commentId: N:System.Web.Http.Controllers
  isExternal: false
  name: System.Web.Http.Controllers
  nameWithType: System.Web.Http.Controllers
  fullName: System.Web.Http.Controllers
- uid: System.Web.Http.ApiController.Validate``1(``0)
  commentId: M:System.Web.Http.ApiController.Validate``1(``0)
  isExternal: true
  name: Validate<TEntity>(TEntity)
  nameWithType: ApiController.Validate<TEntity>(TEntity)
  fullName: System.Web.Http.ApiController.Validate<TEntity>(TEntity)
  nameWithType.vb: ApiController.Validate(Of TEntity)(TEntity)
  fullName.vb: System.Web.Http.ApiController.Validate(Of TEntity)(TEntity)
  name.vb: Validate(Of TEntity)(TEntity)
  spec.csharp:
  - uid: System.Web.Http.ApiController.Validate``1(``0)
    name: Validate<TEntity>
    nameWithType: ApiController.Validate<TEntity>
    fullName: System.Web.Http.ApiController.Validate<TEntity>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Web.Http.ApiController.Validate``1(``0)
    name: Validate(Of TEntity)
    nameWithType: ApiController.Validate(Of TEntity)
    fullName: System.Web.Http.ApiController.Validate(Of TEntity)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Web.Http.ApiController.Validate``1(``0,System.String)
  commentId: M:System.Web.Http.ApiController.Validate``1(``0,System.String)
  isExternal: true
  name: Validate<TEntity>(TEntity, String)
  nameWithType: ApiController.Validate<TEntity>(TEntity, String)
  fullName: System.Web.Http.ApiController.Validate<TEntity>(TEntity, System.String)
  nameWithType.vb: ApiController.Validate(Of TEntity)(TEntity, String)
  fullName.vb: System.Web.Http.ApiController.Validate(Of TEntity)(TEntity, System.String)
  name.vb: Validate(Of TEntity)(TEntity, String)
  spec.csharp:
  - uid: System.Web.Http.ApiController.Validate``1(``0,System.String)
    name: Validate<TEntity>
    nameWithType: ApiController.Validate<TEntity>
    fullName: System.Web.Http.ApiController.Validate<TEntity>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Web.Http.ApiController.Validate``1(``0,System.String)
    name: Validate(Of TEntity)
    nameWithType: ApiController.Validate(Of TEntity)
    fullName: System.Web.Http.ApiController.Validate(Of TEntity)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0)
  commentId: M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0)
  isExternal: true
  name: Content<T>(HttpStatusCode, T)
  nameWithType: ApiController.Content<T>(HttpStatusCode, T)
  fullName: System.Web.Http.ApiController.Content<T>(System.Net.HttpStatusCode, T)
  nameWithType.vb: ApiController.Content(Of T)(HttpStatusCode, T)
  fullName.vb: System.Web.Http.ApiController.Content(Of T)(System.Net.HttpStatusCode, T)
  name.vb: Content(Of T)(HttpStatusCode, T)
  spec.csharp:
  - uid: System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0)
    name: Content<T>
    nameWithType: ApiController.Content<T>
    fullName: System.Web.Http.ApiController.Content<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.HttpStatusCode
    name: HttpStatusCode
    nameWithType: HttpStatusCode
    fullName: System.Net.HttpStatusCode
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0)
    name: Content(Of T)
    nameWithType: ApiController.Content(Of T)
    fullName: System.Web.Http.ApiController.Content(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.HttpStatusCode
    name: HttpStatusCode
    nameWithType: HttpStatusCode
    fullName: System.Net.HttpStatusCode
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter)
  commentId: M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter)
  isExternal: true
  name: Content<T>(HttpStatusCode, T, MediaTypeFormatter)
  nameWithType: ApiController.Content<T>(HttpStatusCode, T, MediaTypeFormatter)
  fullName: System.Web.Http.ApiController.Content<T>(System.Net.HttpStatusCode, T, System.Net.Http.Formatting.MediaTypeFormatter)
  nameWithType.vb: ApiController.Content(Of T)(HttpStatusCode, T, MediaTypeFormatter)
  fullName.vb: System.Web.Http.ApiController.Content(Of T)(System.Net.HttpStatusCode, T, System.Net.Http.Formatting.MediaTypeFormatter)
  name.vb: Content(Of T)(HttpStatusCode, T, MediaTypeFormatter)
  spec.csharp:
  - uid: System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter)
    name: Content<T>
    nameWithType: ApiController.Content<T>
    fullName: System.Web.Http.ApiController.Content<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.HttpStatusCode
    name: HttpStatusCode
    nameWithType: HttpStatusCode
    fullName: System.Net.HttpStatusCode
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.Formatting.MediaTypeFormatter
    name: MediaTypeFormatter
    nameWithType: MediaTypeFormatter
    fullName: System.Net.Http.Formatting.MediaTypeFormatter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter)
    name: Content(Of T)
    nameWithType: ApiController.Content(Of T)
    fullName: System.Web.Http.ApiController.Content(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.HttpStatusCode
    name: HttpStatusCode
    nameWithType: HttpStatusCode
    fullName: System.Net.HttpStatusCode
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.Formatting.MediaTypeFormatter
    name: MediaTypeFormatter
    nameWithType: MediaTypeFormatter
    fullName: System.Net.Http.Formatting.MediaTypeFormatter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.String)
  commentId: M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.String)
  isExternal: true
  name: Content<T>(HttpStatusCode, T, MediaTypeFormatter, String)
  nameWithType: ApiController.Content<T>(HttpStatusCode, T, MediaTypeFormatter, String)
  fullName: System.Web.Http.ApiController.Content<T>(System.Net.HttpStatusCode, T, System.Net.Http.Formatting.MediaTypeFormatter, System.String)
  nameWithType.vb: ApiController.Content(Of T)(HttpStatusCode, T, MediaTypeFormatter, String)
  fullName.vb: System.Web.Http.ApiController.Content(Of T)(System.Net.HttpStatusCode, T, System.Net.Http.Formatting.MediaTypeFormatter, System.String)
  name.vb: Content(Of T)(HttpStatusCode, T, MediaTypeFormatter, String)
  spec.csharp:
  - uid: System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.String)
    name: Content<T>
    nameWithType: ApiController.Content<T>
    fullName: System.Web.Http.ApiController.Content<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.HttpStatusCode
    name: HttpStatusCode
    nameWithType: HttpStatusCode
    fullName: System.Net.HttpStatusCode
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.Formatting.MediaTypeFormatter
    name: MediaTypeFormatter
    nameWithType: MediaTypeFormatter
    fullName: System.Net.Http.Formatting.MediaTypeFormatter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.String)
    name: Content(Of T)
    nameWithType: ApiController.Content(Of T)
    fullName: System.Web.Http.ApiController.Content(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.HttpStatusCode
    name: HttpStatusCode
    nameWithType: HttpStatusCode
    fullName: System.Net.HttpStatusCode
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.Formatting.MediaTypeFormatter
    name: MediaTypeFormatter
    nameWithType: MediaTypeFormatter
    fullName: System.Net.Http.Formatting.MediaTypeFormatter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue)
  commentId: M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue)
  isExternal: true
  name: Content<T>(HttpStatusCode, T, MediaTypeFormatter, MediaTypeHeaderValue)
  nameWithType: ApiController.Content<T>(HttpStatusCode, T, MediaTypeFormatter, MediaTypeHeaderValue)
  fullName: System.Web.Http.ApiController.Content<T>(System.Net.HttpStatusCode, T, System.Net.Http.Formatting.MediaTypeFormatter, System.Net.Http.Headers.MediaTypeHeaderValue)
  nameWithType.vb: ApiController.Content(Of T)(HttpStatusCode, T, MediaTypeFormatter, MediaTypeHeaderValue)
  fullName.vb: System.Web.Http.ApiController.Content(Of T)(System.Net.HttpStatusCode, T, System.Net.Http.Formatting.MediaTypeFormatter, System.Net.Http.Headers.MediaTypeHeaderValue)
  name.vb: Content(Of T)(HttpStatusCode, T, MediaTypeFormatter, MediaTypeHeaderValue)
  spec.csharp:
  - uid: System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue)
    name: Content<T>
    nameWithType: ApiController.Content<T>
    fullName: System.Web.Http.ApiController.Content<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.HttpStatusCode
    name: HttpStatusCode
    nameWithType: HttpStatusCode
    fullName: System.Net.HttpStatusCode
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.Formatting.MediaTypeFormatter
    name: MediaTypeFormatter
    nameWithType: MediaTypeFormatter
    fullName: System.Net.Http.Formatting.MediaTypeFormatter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.Headers.MediaTypeHeaderValue
    name: MediaTypeHeaderValue
    nameWithType: MediaTypeHeaderValue
    fullName: System.Net.Http.Headers.MediaTypeHeaderValue
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue)
    name: Content(Of T)
    nameWithType: ApiController.Content(Of T)
    fullName: System.Web.Http.ApiController.Content(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.HttpStatusCode
    name: HttpStatusCode
    nameWithType: HttpStatusCode
    fullName: System.Net.HttpStatusCode
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.Formatting.MediaTypeFormatter
    name: MediaTypeFormatter
    nameWithType: MediaTypeFormatter
    fullName: System.Net.Http.Formatting.MediaTypeFormatter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.Headers.MediaTypeHeaderValue
    name: MediaTypeHeaderValue
    nameWithType: MediaTypeHeaderValue
    fullName: System.Net.Http.Headers.MediaTypeHeaderValue
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Web.Http.ApiController.Created``1(System.String,``0)
  commentId: M:System.Web.Http.ApiController.Created``1(System.String,``0)
  isExternal: true
  name: Created<T>(String, T)
  nameWithType: ApiController.Created<T>(String, T)
  fullName: System.Web.Http.ApiController.Created<T>(System.String, T)
  nameWithType.vb: ApiController.Created(Of T)(String, T)
  fullName.vb: System.Web.Http.ApiController.Created(Of T)(System.String, T)
  name.vb: Created(Of T)(String, T)
  spec.csharp:
  - uid: System.Web.Http.ApiController.Created``1(System.String,``0)
    name: Created<T>
    nameWithType: ApiController.Created<T>
    fullName: System.Web.Http.ApiController.Created<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Web.Http.ApiController.Created``1(System.String,``0)
    name: Created(Of T)
    nameWithType: ApiController.Created(Of T)
    fullName: System.Web.Http.ApiController.Created(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Web.Http.ApiController.Created``1(System.Uri,``0)
  commentId: M:System.Web.Http.ApiController.Created``1(System.Uri,``0)
  isExternal: true
  name: Created<T>(Uri, T)
  nameWithType: ApiController.Created<T>(Uri, T)
  fullName: System.Web.Http.ApiController.Created<T>(System.Uri, T)
  nameWithType.vb: ApiController.Created(Of T)(Uri, T)
  fullName.vb: System.Web.Http.ApiController.Created(Of T)(System.Uri, T)
  name.vb: Created(Of T)(Uri, T)
  spec.csharp:
  - uid: System.Web.Http.ApiController.Created``1(System.Uri,``0)
    name: Created<T>
    nameWithType: ApiController.Created<T>
    fullName: System.Web.Http.ApiController.Created<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Web.Http.ApiController.Created``1(System.Uri,``0)
    name: Created(Of T)
    nameWithType: ApiController.Created(Of T)
    fullName: System.Web.Http.ApiController.Created(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Object,``0)
  commentId: M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Object,``0)
  isExternal: true
  name: CreatedAtRoute<T>(String, Object, T)
  nameWithType: ApiController.CreatedAtRoute<T>(String, Object, T)
  fullName: System.Web.Http.ApiController.CreatedAtRoute<T>(System.String, System.Object, T)
  nameWithType.vb: ApiController.CreatedAtRoute(Of T)(String, Object, T)
  fullName.vb: System.Web.Http.ApiController.CreatedAtRoute(Of T)(System.String, System.Object, T)
  name.vb: CreatedAtRoute(Of T)(String, Object, T)
  spec.csharp:
  - uid: System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Object,``0)
    name: CreatedAtRoute<T>
    nameWithType: ApiController.CreatedAtRoute<T>
    fullName: System.Web.Http.ApiController.CreatedAtRoute<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Object,``0)
    name: CreatedAtRoute(Of T)
    nameWithType: ApiController.CreatedAtRoute(Of T)
    fullName: System.Web.Http.ApiController.CreatedAtRoute(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},``0)
  commentId: M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},``0)
  isExternal: true
  name: CreatedAtRoute<T>(String, IDictionary<String, Object>, T)
  nameWithType: ApiController.CreatedAtRoute<T>(String, IDictionary<String, Object>, T)
  fullName: System.Web.Http.ApiController.CreatedAtRoute<T>(System.String, System.Collections.Generic.IDictionary<System.String, System.Object>, T)
  nameWithType.vb: ApiController.CreatedAtRoute(Of T)(String, IDictionary(Of String, Object), T)
  fullName.vb: System.Web.Http.ApiController.CreatedAtRoute(Of T)(System.String, System.Collections.Generic.IDictionary(Of System.String, System.Object), T)
  name.vb: CreatedAtRoute(Of T)(String, IDictionary(Of String, Object), T)
  spec.csharp:
  - uid: System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},``0)
    name: CreatedAtRoute<T>
    nameWithType: ApiController.CreatedAtRoute<T>
    fullName: System.Web.Http.ApiController.CreatedAtRoute<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},``0)
    name: CreatedAtRoute(Of T)
    nameWithType: ApiController.CreatedAtRoute(Of T)
    fullName: System.Web.Http.ApiController.CreatedAtRoute(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Web.Http.ApiController.Json``1(``0)
  commentId: M:System.Web.Http.ApiController.Json``1(``0)
  isExternal: true
  name: Json<T>(T)
  nameWithType: ApiController.Json<T>(T)
  fullName: System.Web.Http.ApiController.Json<T>(T)
  nameWithType.vb: ApiController.Json(Of T)(T)
  fullName.vb: System.Web.Http.ApiController.Json(Of T)(T)
  name.vb: Json(Of T)(T)
  spec.csharp:
  - uid: System.Web.Http.ApiController.Json``1(``0)
    name: Json<T>
    nameWithType: ApiController.Json<T>
    fullName: System.Web.Http.ApiController.Json<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Web.Http.ApiController.Json``1(``0)
    name: Json(Of T)
    nameWithType: ApiController.Json(Of T)
    fullName: System.Web.Http.ApiController.Json(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings)
  commentId: M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings)
  isExternal: true
  name: Json<T>(T, JsonSerializerSettings)
  nameWithType: ApiController.Json<T>(T, JsonSerializerSettings)
  fullName: System.Web.Http.ApiController.Json<T>(T, Newtonsoft.Json.JsonSerializerSettings)
  nameWithType.vb: ApiController.Json(Of T)(T, JsonSerializerSettings)
  fullName.vb: System.Web.Http.ApiController.Json(Of T)(T, Newtonsoft.Json.JsonSerializerSettings)
  name.vb: Json(Of T)(T, JsonSerializerSettings)
  spec.csharp:
  - uid: System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings)
    name: Json<T>
    nameWithType: ApiController.Json<T>
    fullName: System.Web.Http.ApiController.Json<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Newtonsoft.Json.JsonSerializerSettings
    name: JsonSerializerSettings
    nameWithType: JsonSerializerSettings
    fullName: Newtonsoft.Json.JsonSerializerSettings
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings)
    name: Json(Of T)
    nameWithType: ApiController.Json(Of T)
    fullName: System.Web.Http.ApiController.Json(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Newtonsoft.Json.JsonSerializerSettings
    name: JsonSerializerSettings
    nameWithType: JsonSerializerSettings
    fullName: Newtonsoft.Json.JsonSerializerSettings
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings,System.Text.Encoding)
  commentId: M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings,System.Text.Encoding)
  isExternal: true
  name: Json<T>(T, JsonSerializerSettings, Encoding)
  nameWithType: ApiController.Json<T>(T, JsonSerializerSettings, Encoding)
  fullName: System.Web.Http.ApiController.Json<T>(T, Newtonsoft.Json.JsonSerializerSettings, System.Text.Encoding)
  nameWithType.vb: ApiController.Json(Of T)(T, JsonSerializerSettings, Encoding)
  fullName.vb: System.Web.Http.ApiController.Json(Of T)(T, Newtonsoft.Json.JsonSerializerSettings, System.Text.Encoding)
  name.vb: Json(Of T)(T, JsonSerializerSettings, Encoding)
  spec.csharp:
  - uid: System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings,System.Text.Encoding)
    name: Json<T>
    nameWithType: ApiController.Json<T>
    fullName: System.Web.Http.ApiController.Json<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Newtonsoft.Json.JsonSerializerSettings
    name: JsonSerializerSettings
    nameWithType: JsonSerializerSettings
    fullName: Newtonsoft.Json.JsonSerializerSettings
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Text.Encoding
    name: Encoding
    nameWithType: Encoding
    fullName: System.Text.Encoding
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings,System.Text.Encoding)
    name: Json(Of T)
    nameWithType: ApiController.Json(Of T)
    fullName: System.Web.Http.ApiController.Json(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Newtonsoft.Json.JsonSerializerSettings
    name: JsonSerializerSettings
    nameWithType: JsonSerializerSettings
    fullName: Newtonsoft.Json.JsonSerializerSettings
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Text.Encoding
    name: Encoding
    nameWithType: Encoding
    fullName: System.Text.Encoding
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Web.Http.ApiController.Ok``1(``0)
  commentId: M:System.Web.Http.ApiController.Ok``1(``0)
  isExternal: true
  name: Ok<T>(T)
  nameWithType: ApiController.Ok<T>(T)
  fullName: System.Web.Http.ApiController.Ok<T>(T)
  nameWithType.vb: ApiController.Ok(Of T)(T)
  fullName.vb: System.Web.Http.ApiController.Ok(Of T)(T)
  name.vb: Ok(Of T)(T)
  spec.csharp:
  - uid: System.Web.Http.ApiController.Ok``1(``0)
    name: Ok<T>
    nameWithType: ApiController.Ok<T>
    fullName: System.Web.Http.ApiController.Ok<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Web.Http.ApiController.Ok``1(``0)
    name: Ok(Of T)
    nameWithType: ApiController.Ok(Of T)
    fullName: System.Web.Http.ApiController.Ok(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Authentication
  commentId: N:Cqrs.Authentication
  isExternal: false
  name: Cqrs.Authentication
  nameWithType: Cqrs.Authentication
  fullName: Cqrs.Authentication
- uid: Cqrs.WebApi.CqrsApiController.#ctor*
  commentId: Overload:Cqrs.WebApi.CqrsApiController.#ctor
  isExternal: false
  name: CqrsApiController
  nameWithType: CqrsApiController.CqrsApiController
  fullName: Cqrs.WebApi.CqrsApiController.CqrsApiController
- uid: cdmdotnet.Logging.ILogger
  commentId: T:cdmdotnet.Logging.ILogger
  parent: cdmdotnet.Logging
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: cdmdotnet.Logging.ILogger
- uid: cdmdotnet.Logging.ICorrelationIdHelper
  commentId: T:cdmdotnet.Logging.ICorrelationIdHelper
  parent: cdmdotnet.Logging
  isExternal: true
  name: ICorrelationIdHelper
  nameWithType: ICorrelationIdHelper
  fullName: cdmdotnet.Logging.ICorrelationIdHelper
- uid: Cqrs.Configuration.IConfigurationManager
  commentId: T:Cqrs.Configuration.IConfigurationManager
  parent: Cqrs.Configuration
  isExternal: false
  name: IConfigurationManager
  nameWithType: IConfigurationManager
  fullName: Cqrs.Configuration.IConfigurationManager
- uid: cdmdotnet.Logging
  commentId: N:cdmdotnet.Logging
  isExternal: false
  name: cdmdotnet.Logging
  nameWithType: cdmdotnet.Logging
  fullName: cdmdotnet.Logging
- uid: Cqrs.Configuration
  commentId: N:Cqrs.Configuration
  isExternal: false
  name: Cqrs.Configuration
  nameWithType: Cqrs.Configuration
  fullName: Cqrs.Configuration
- uid: Cqrs.WebApi.CqrsApiController.CorrelationIdHelper*
  commentId: Overload:Cqrs.WebApi.CqrsApiController.CorrelationIdHelper
  isExternal: false
  name: CorrelationIdHelper
  nameWithType: CqrsApiController.CorrelationIdHelper
  fullName: Cqrs.WebApi.CqrsApiController.CorrelationIdHelper
- uid: Cqrs.WebApi.CqrsApiController.Logger*
  commentId: Overload:Cqrs.WebApi.CqrsApiController.Logger
  isExternal: false
  name: Logger
  nameWithType: CqrsApiController.Logger
  fullName: Cqrs.WebApi.CqrsApiController.Logger
- uid: Cqrs.WebApi.CqrsApiController.ConfigurationManager*
  commentId: Overload:Cqrs.WebApi.CqrsApiController.ConfigurationManager
  isExternal: false
  name: ConfigurationManager
  nameWithType: CqrsApiController.ConfigurationManager
  fullName: Cqrs.WebApi.CqrsApiController.ConfigurationManager
- uid: Cqrs.WebApi.CqrsApiController.GetToken*
  commentId: Overload:Cqrs.WebApi.CqrsApiController.GetToken
  isExternal: false
  name: GetToken
  nameWithType: CqrsApiController.GetToken
  fullName: Cqrs.WebApi.CqrsApiController.GetToken
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Cqrs.WebApi.CqrsApiController.CreateRequest*
  commentId: Overload:Cqrs.WebApi.CqrsApiController.CreateRequest
  isExternal: false
  name: CreateRequest
  nameWithType: CqrsApiController.CreateRequest
  fullName: Cqrs.WebApi.CqrsApiController.CreateRequest
- uid: Cqrs.Services.IServiceRequest{{TSingleSignOnToken}}
  commentId: T:Cqrs.Services.IServiceRequest{``0}
  parent: Cqrs.Services
  definition: Cqrs.Services.IServiceRequest`1
  name: IServiceRequest<TSingleSignOnToken>
  nameWithType: IServiceRequest<TSingleSignOnToken>
  fullName: Cqrs.Services.IServiceRequest<TSingleSignOnToken>
  nameWithType.vb: IServiceRequest(Of TSingleSignOnToken)
  fullName.vb: Cqrs.Services.IServiceRequest(Of TSingleSignOnToken)
  name.vb: IServiceRequest(Of TSingleSignOnToken)
  spec.csharp:
  - uid: Cqrs.Services.IServiceRequest`1
    name: IServiceRequest
    nameWithType: IServiceRequest
    fullName: Cqrs.Services.IServiceRequest
  - name: <
    nameWithType: <
    fullName: <
  - name: TSingleSignOnToken
    nameWithType: TSingleSignOnToken
    fullName: TSingleSignOnToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Services.IServiceRequest`1
    name: IServiceRequest
    nameWithType: IServiceRequest
    fullName: Cqrs.Services.IServiceRequest
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSingleSignOnToken
    nameWithType: TSingleSignOnToken
    fullName: TSingleSignOnToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Services.IServiceRequest`1
  commentId: T:Cqrs.Services.IServiceRequest`1
  isExternal: false
  name: IServiceRequest<TAuthenticationToken>
  nameWithType: IServiceRequest<TAuthenticationToken>
  fullName: Cqrs.Services.IServiceRequest<TAuthenticationToken>
  nameWithType.vb: IServiceRequest(Of TAuthenticationToken)
  fullName.vb: Cqrs.Services.IServiceRequest(Of TAuthenticationToken)
  name.vb: IServiceRequest(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Services.IServiceRequest`1
    name: IServiceRequest
    nameWithType: IServiceRequest
    fullName: Cqrs.Services.IServiceRequest
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Services.IServiceRequest`1
    name: IServiceRequest
    nameWithType: IServiceRequest
    fullName: Cqrs.Services.IServiceRequest
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Services
  commentId: N:Cqrs.Services
  isExternal: false
  name: Cqrs.Services
  nameWithType: Cqrs.Services
  fullName: Cqrs.Services
- uid: Cqrs.WebApi.CqrsApiController.CreateRequestWithData*
  commentId: Overload:Cqrs.WebApi.CqrsApiController.CreateRequestWithData
  isExternal: false
  name: CreateRequestWithData
  nameWithType: CqrsApiController.CreateRequestWithData
  fullName: Cqrs.WebApi.CqrsApiController.CreateRequestWithData
- uid: System.Func{{TParameters}}
  commentId: T:System.Func{``1}
  parent: System
  definition: System.Func`1
  name: Func<TParameters>
  nameWithType: Func<TParameters>
  fullName: System.Func<TParameters>
  nameWithType.vb: Func(Of TParameters)
  fullName.vb: System.Func(Of TParameters)
  name.vb: Func(Of TParameters)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TParameters
    nameWithType: TParameters
    fullName: TParameters
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TParameters
    nameWithType: TParameters
    fullName: TParameters
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Services.IServiceRequestWithData{{TSingleSignOnToken},{TParameters}}
  commentId: T:Cqrs.Services.IServiceRequestWithData{``0,``1}
  parent: Cqrs.Services
  definition: Cqrs.Services.IServiceRequestWithData`2
  name: IServiceRequestWithData<TSingleSignOnToken, TParameters>
  nameWithType: IServiceRequestWithData<TSingleSignOnToken, TParameters>
  fullName: Cqrs.Services.IServiceRequestWithData<TSingleSignOnToken, TParameters>
  nameWithType.vb: IServiceRequestWithData(Of TSingleSignOnToken, TParameters)
  fullName.vb: Cqrs.Services.IServiceRequestWithData(Of TSingleSignOnToken, TParameters)
  name.vb: IServiceRequestWithData(Of TSingleSignOnToken, TParameters)
  spec.csharp:
  - uid: Cqrs.Services.IServiceRequestWithData`2
    name: IServiceRequestWithData
    nameWithType: IServiceRequestWithData
    fullName: Cqrs.Services.IServiceRequestWithData
  - name: <
    nameWithType: <
    fullName: <
  - name: TSingleSignOnToken
    nameWithType: TSingleSignOnToken
    fullName: TSingleSignOnToken
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TParameters
    nameWithType: TParameters
    fullName: TParameters
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Services.IServiceRequestWithData`2
    name: IServiceRequestWithData
    nameWithType: IServiceRequestWithData
    fullName: Cqrs.Services.IServiceRequestWithData
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSingleSignOnToken
    nameWithType: TSingleSignOnToken
    fullName: TSingleSignOnToken
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TParameters
    nameWithType: TParameters
    fullName: TParameters
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullName.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Services.IServiceRequestWithData`2
  commentId: T:Cqrs.Services.IServiceRequestWithData`2
  isExternal: false
  name: IServiceRequestWithData<TAuthenticationToken, TData>
  nameWithType: IServiceRequestWithData<TAuthenticationToken, TData>
  fullName: Cqrs.Services.IServiceRequestWithData<TAuthenticationToken, TData>
  nameWithType.vb: IServiceRequestWithData(Of TAuthenticationToken, TData)
  fullName.vb: Cqrs.Services.IServiceRequestWithData(Of TAuthenticationToken, TData)
  name.vb: IServiceRequestWithData(Of TAuthenticationToken, TData)
  spec.csharp:
  - uid: Cqrs.Services.IServiceRequestWithData`2
    name: IServiceRequestWithData
    nameWithType: IServiceRequestWithData
    fullName: Cqrs.Services.IServiceRequestWithData
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Services.IServiceRequestWithData`2
    name: IServiceRequestWithData
    nameWithType: IServiceRequestWithData
    fullName: Cqrs.Services.IServiceRequestWithData
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.WebApi.CqrsApiController.CreateAuthenticationToken*
  commentId: Overload:Cqrs.WebApi.CqrsApiController.CreateAuthenticationToken
  isExternal: false
  name: CreateAuthenticationToken
  nameWithType: CqrsApiController.CreateAuthenticationToken
  fullName: Cqrs.WebApi.CqrsApiController.CreateAuthenticationToken
- uid: '{TSingleSignOnToken}'
  commentId: '!:TSingleSignOnToken'
  definition: TSingleSignOnToken
  name: TSingleSignOnToken
  nameWithType: TSingleSignOnToken
  fullName: TSingleSignOnToken
- uid: TSingleSignOnToken
  isExternal: false
  name: TSingleSignOnToken
  nameWithType: TSingleSignOnToken
  fullName: TSingleSignOnToken
- uid: Cqrs.WebApi.CqrsApiController.CreateParameter*
  commentId: Overload:Cqrs.WebApi.CqrsApiController.CreateParameter
  isExternal: false
  name: CreateParameter
  nameWithType: CqrsApiController.CreateParameter
  fullName: Cqrs.WebApi.CqrsApiController.CreateParameter
- uid: '{TParameters}'
  commentId: '!:TParameters'
  definition: TParameters
  name: TParameters
  nameWithType: TParameters
  fullName: TParameters
- uid: TParameters
  commentId: '!:TParameters'
  isExternal: false
  name: TParameters
  nameWithType: TParameters
  fullName: TParameters
- uid: Cqrs.WebApi.CqrsApiController.GetDateTokenIssued*
  commentId: Overload:Cqrs.WebApi.CqrsApiController.GetDateTokenIssued
  isExternal: false
  name: GetDateTokenIssued
  nameWithType: CqrsApiController.GetDateTokenIssued
  fullName: Cqrs.WebApi.CqrsApiController.GetDateTokenIssued
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: Cqrs.WebApi.CqrsApiController.GetTokenTimeOfExpiry*
  commentId: Overload:Cqrs.WebApi.CqrsApiController.GetTokenTimeOfExpiry
  isExternal: false
  name: GetTokenTimeOfExpiry
  nameWithType: CqrsApiController.GetTokenTimeOfExpiry
  fullName: Cqrs.WebApi.CqrsApiController.GetTokenTimeOfExpiry
- uid: Cqrs.WebApi.CqrsApiController.CompleteResponse*
  commentId: Overload:Cqrs.WebApi.CqrsApiController.CompleteResponse
  isExternal: false
  name: CompleteResponse
  nameWithType: CqrsApiController.CompleteResponse
  fullName: Cqrs.WebApi.CqrsApiController.CompleteResponse
- uid: System.Net.Http.HttpResponseMessage
  commentId: T:System.Net.Http.HttpResponseMessage
  parent: System.Net.Http
  isExternal: true
  name: HttpResponseMessage
  nameWithType: HttpResponseMessage
  fullName: System.Net.Http.HttpResponseMessage
- uid: '{TServiceResponse}'
  commentId: '!:TServiceResponse'
  definition: TServiceResponse
  name: TServiceResponse
  nameWithType: TServiceResponse
  fullName: TServiceResponse
- uid: System.Net.Http
  commentId: N:System.Net.Http
  isExternal: false
  name: System.Net.Http
  nameWithType: System.Net.Http
  fullName: System.Net.Http
- uid: TServiceResponse
  isExternal: false
  name: TServiceResponse
  nameWithType: TServiceResponse
  fullName: TServiceResponse
- uid: Cqrs.WebApi.CqrsApiController.CompleteResponseWithData*
  commentId: Overload:Cqrs.WebApi.CqrsApiController.CompleteResponseWithData
  isExternal: false
  name: CompleteResponseWithData
  nameWithType: CqrsApiController.CompleteResponseWithData
  fullName: Cqrs.WebApi.CqrsApiController.CompleteResponseWithData
- uid: Cqrs.WebApi.HttpResponseMessage{{TServiceResponse}}
  commentId: T:Cqrs.WebApi.HttpResponseMessage{``0}
  parent: Cqrs.WebApi
  definition: Cqrs.WebApi.HttpResponseMessage`1
  name: HttpResponseMessage<TServiceResponse>
  nameWithType: HttpResponseMessage<TServiceResponse>
  fullName: Cqrs.WebApi.HttpResponseMessage<TServiceResponse>
  nameWithType.vb: HttpResponseMessage(Of TServiceResponse)
  fullName.vb: Cqrs.WebApi.HttpResponseMessage(Of TServiceResponse)
  name.vb: HttpResponseMessage(Of TServiceResponse)
  spec.csharp:
  - uid: Cqrs.WebApi.HttpResponseMessage`1
    name: HttpResponseMessage
    nameWithType: HttpResponseMessage
    fullName: Cqrs.WebApi.HttpResponseMessage
  - name: <
    nameWithType: <
    fullName: <
  - name: TServiceResponse
    nameWithType: TServiceResponse
    fullName: TServiceResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.WebApi.HttpResponseMessage`1
    name: HttpResponseMessage
    nameWithType: HttpResponseMessage
    fullName: Cqrs.WebApi.HttpResponseMessage
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TServiceResponse
    nameWithType: TServiceResponse
    fullName: TServiceResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.WebApi.HttpResponseMessage`1
  commentId: T:Cqrs.WebApi.HttpResponseMessage`1
  isExternal: false
  name: HttpResponseMessage<TData>
  nameWithType: HttpResponseMessage<TData>
  fullName: Cqrs.WebApi.HttpResponseMessage<TData>
  nameWithType.vb: HttpResponseMessage(Of TData)
  fullName.vb: Cqrs.WebApi.HttpResponseMessage(Of TData)
  name.vb: HttpResponseMessage(Of TData)
  spec.csharp:
  - uid: Cqrs.WebApi.HttpResponseMessage`1
    name: HttpResponseMessage
    nameWithType: HttpResponseMessage
    fullName: Cqrs.WebApi.HttpResponseMessage
  - name: <
    nameWithType: <
    fullName: <
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.WebApi.HttpResponseMessage`1
    name: HttpResponseMessage
    nameWithType: HttpResponseMessage
    fullName: Cqrs.WebApi.HttpResponseMessage
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
