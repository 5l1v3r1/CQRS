### YamlMime:ManagedReference
items:
- uid: Cqrs.Ninject.MongoDB.TestMongoDbDataStoreConnectionStringFactory
  commentId: T:Cqrs.Ninject.MongoDB.TestMongoDbDataStoreConnectionStringFactory
  id: TestMongoDbDataStoreConnectionStringFactory
  parent: Cqrs.Ninject.MongoDB
  children:
  - Cqrs.Ninject.MongoDB.TestMongoDbDataStoreConnectionStringFactory.DatabaseName
  - Cqrs.Ninject.MongoDB.TestMongoDbDataStoreConnectionStringFactory.GetDataStoreConnectionString
  - Cqrs.Ninject.MongoDB.TestMongoDbDataStoreConnectionStringFactory.GetDataStoreDatabaseName
  - Cqrs.Ninject.MongoDB.TestMongoDbDataStoreConnectionStringFactory.GetEventStoreConnectionString
  - Cqrs.Ninject.MongoDB.TestMongoDbDataStoreConnectionStringFactory.GetEventStoreDatabaseName
  langs:
  - csharp
  - vb
  name: TestMongoDbDataStoreConnectionStringFactory
  nameWithType: TestMongoDbDataStoreConnectionStringFactory
  fullName: Cqrs.Ninject.MongoDB.TestMongoDbDataStoreConnectionStringFactory
  type: Class
  source:
    remote:
      path: Framework/Ninject/Cqrs.Ninject.MongoDB/TestMongoDataStoreConnectionStringFactory.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: TestMongoDbDataStoreConnectionStringFactory
    path: Framework/Ninject/Cqrs.Ninject.MongoDB/TestMongoDataStoreConnectionStringFactory.cs
    startLine: 23
  assemblies:
  - Cqrs.Ninject.MongoDB
  namespace: Cqrs.Ninject.MongoDB
  summary: "\nA <xref href=\"Cqrs.MongoDB.Factories.IMongoDbDataStoreConnectionStringFactory\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"Cqrs.MongoDB.Events.IMongoDbEventStoreConnectionStringFactory\" data-throw-if-not-resolved=\"false\"></xref>\nthat enables you to set a database name with <xref href=\"Cqrs.Ninject.MongoDB.TestMongoDbDataStoreConnectionStringFactory.DatabaseName\" data-throw-if-not-resolved=\"false\"></xref>. This means you can randomly generate your own database name per test.\nBoth <xref href=\"Cqrs.Events.IEventStore%601\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"Cqrs.DataStores.IDataStore%601\" data-throw-if-not-resolved=\"false\"></xref> use the same connection string and database name.\n"
  example: []
  syntax:
    content: 'public class TestMongoDbDataStoreConnectionStringFactory : IMongoDbDataStoreConnectionStringFactory, IMongoDbEventStoreConnectionStringFactory'
    content.vb: >-
      Public Class TestMongoDbDataStoreConnectionStringFactory

          Implements IMongoDbDataStoreConnectionStringFactory, IMongoDbEventStoreConnectionStringFactory
  inheritance:
  - System.Object
  implements:
  - Cqrs.MongoDB.Factories.IMongoDbDataStoreConnectionStringFactory
  - Cqrs.MongoDB.Events.IMongoDbEventStoreConnectionStringFactory
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Cqrs.Ninject.MongoDB.TestMongoDbDataStoreConnectionStringFactory.DatabaseName
  commentId: P:Cqrs.Ninject.MongoDB.TestMongoDbDataStoreConnectionStringFactory.DatabaseName
  id: DatabaseName
  parent: Cqrs.Ninject.MongoDB.TestMongoDbDataStoreConnectionStringFactory
  langs:
  - csharp
  - vb
  name: DatabaseName
  nameWithType: TestMongoDbDataStoreConnectionStringFactory.DatabaseName
  fullName: Cqrs.Ninject.MongoDB.TestMongoDbDataStoreConnectionStringFactory.DatabaseName
  type: Property
  source:
    remote:
      path: Framework/Ninject/Cqrs.Ninject.MongoDB/TestMongoDataStoreConnectionStringFactory.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: DatabaseName
    path: Framework/Ninject/Cqrs.Ninject.MongoDB/TestMongoDataStoreConnectionStringFactory.cs
    startLine: 41
  assemblies:
  - Cqrs.Ninject.MongoDB
  namespace: Cqrs.Ninject.MongoDB
  summary: "\nThe name of the database currently being used.\n"
  example: []
  syntax:
    content: public static string DatabaseName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Shared Property DatabaseName As String
  overload: Cqrs.Ninject.MongoDB.TestMongoDbDataStoreConnectionStringFactory.DatabaseName*
  modifiers.csharp:
  - public
  - static
  - get
  - set
  modifiers.vb:
  - Public
  - Shared
- uid: Cqrs.Ninject.MongoDB.TestMongoDbDataStoreConnectionStringFactory.GetDataStoreConnectionString
  commentId: M:Cqrs.Ninject.MongoDB.TestMongoDbDataStoreConnectionStringFactory.GetDataStoreConnectionString
  id: GetDataStoreConnectionString
  parent: Cqrs.Ninject.MongoDB.TestMongoDbDataStoreConnectionStringFactory
  langs:
  - csharp
  - vb
  name: GetDataStoreConnectionString()
  nameWithType: TestMongoDbDataStoreConnectionStringFactory.GetDataStoreConnectionString()
  fullName: Cqrs.Ninject.MongoDB.TestMongoDbDataStoreConnectionStringFactory.GetDataStoreConnectionString()
  type: Method
  source:
    remote:
      path: Framework/Ninject/Cqrs.Ninject.MongoDB/TestMongoDataStoreConnectionStringFactory.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: GetDataStoreConnectionString
    path: Framework/Ninject/Cqrs.Ninject.MongoDB/TestMongoDataStoreConnectionStringFactory.cs
    startLine: 58
  assemblies:
  - Cqrs.Ninject.MongoDB
  namespace: Cqrs.Ninject.MongoDB
  summary: "\nGets the current connection string.\n"
  example: []
  syntax:
    content: public string GetDataStoreConnectionString()
    return:
      type: System.String
    content.vb: Public Function GetDataStoreConnectionString As String
  overload: Cqrs.Ninject.MongoDB.TestMongoDbDataStoreConnectionStringFactory.GetDataStoreConnectionString*
  implements:
  - Cqrs.MongoDB.Factories.IMongoDbDataStoreConnectionStringFactory.GetDataStoreConnectionString
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Cqrs.Ninject.MongoDB.TestMongoDbDataStoreConnectionStringFactory.GetDataStoreDatabaseName
  commentId: M:Cqrs.Ninject.MongoDB.TestMongoDbDataStoreConnectionStringFactory.GetDataStoreDatabaseName
  id: GetDataStoreDatabaseName
  parent: Cqrs.Ninject.MongoDB.TestMongoDbDataStoreConnectionStringFactory
  langs:
  - csharp
  - vb
  name: GetDataStoreDatabaseName()
  nameWithType: TestMongoDbDataStoreConnectionStringFactory.GetDataStoreDatabaseName()
  fullName: Cqrs.Ninject.MongoDB.TestMongoDbDataStoreConnectionStringFactory.GetDataStoreDatabaseName()
  type: Method
  source:
    remote:
      path: Framework/Ninject/Cqrs.Ninject.MongoDB/TestMongoDataStoreConnectionStringFactory.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: GetDataStoreDatabaseName
    path: Framework/Ninject/Cqrs.Ninject.MongoDB/TestMongoDataStoreConnectionStringFactory.cs
    startLine: 66
  assemblies:
  - Cqrs.Ninject.MongoDB
  namespace: Cqrs.Ninject.MongoDB
  summary: "\nGets the value of <xref href=\"Cqrs.Ninject.MongoDB.TestMongoDbDataStoreConnectionStringFactory.DatabaseName\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public string GetDataStoreDatabaseName()
    return:
      type: System.String
    content.vb: Public Function GetDataStoreDatabaseName As String
  overload: Cqrs.Ninject.MongoDB.TestMongoDbDataStoreConnectionStringFactory.GetDataStoreDatabaseName*
  implements:
  - Cqrs.MongoDB.Factories.IMongoDbDataStoreConnectionStringFactory.GetDataStoreDatabaseName
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Cqrs.Ninject.MongoDB.TestMongoDbDataStoreConnectionStringFactory.GetEventStoreConnectionString
  commentId: M:Cqrs.Ninject.MongoDB.TestMongoDbDataStoreConnectionStringFactory.GetEventStoreConnectionString
  id: GetEventStoreConnectionString
  parent: Cqrs.Ninject.MongoDB.TestMongoDbDataStoreConnectionStringFactory
  langs:
  - csharp
  - vb
  name: GetEventStoreConnectionString()
  nameWithType: TestMongoDbDataStoreConnectionStringFactory.GetEventStoreConnectionString()
  fullName: Cqrs.Ninject.MongoDB.TestMongoDbDataStoreConnectionStringFactory.GetEventStoreConnectionString()
  type: Method
  source:
    remote:
      path: Framework/Ninject/Cqrs.Ninject.MongoDB/TestMongoDataStoreConnectionStringFactory.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: GetEventStoreConnectionString
    path: Framework/Ninject/Cqrs.Ninject.MongoDB/TestMongoDataStoreConnectionStringFactory.cs
    startLine: 78
  assemblies:
  - Cqrs.Ninject.MongoDB
  namespace: Cqrs.Ninject.MongoDB
  summary: "\nGets the current connection string.\n"
  example: []
  syntax:
    content: public string GetEventStoreConnectionString()
    return:
      type: System.String
    content.vb: Public Function GetEventStoreConnectionString As String
  overload: Cqrs.Ninject.MongoDB.TestMongoDbDataStoreConnectionStringFactory.GetEventStoreConnectionString*
  implements:
  - Cqrs.MongoDB.Events.IMongoDbEventStoreConnectionStringFactory.GetEventStoreConnectionString
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Cqrs.Ninject.MongoDB.TestMongoDbDataStoreConnectionStringFactory.GetEventStoreDatabaseName
  commentId: M:Cqrs.Ninject.MongoDB.TestMongoDbDataStoreConnectionStringFactory.GetEventStoreDatabaseName
  id: GetEventStoreDatabaseName
  parent: Cqrs.Ninject.MongoDB.TestMongoDbDataStoreConnectionStringFactory
  langs:
  - csharp
  - vb
  name: GetEventStoreDatabaseName()
  nameWithType: TestMongoDbDataStoreConnectionStringFactory.GetEventStoreDatabaseName()
  fullName: Cqrs.Ninject.MongoDB.TestMongoDbDataStoreConnectionStringFactory.GetEventStoreDatabaseName()
  type: Method
  source:
    remote:
      path: Framework/Ninject/Cqrs.Ninject.MongoDB/TestMongoDataStoreConnectionStringFactory.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: GetEventStoreDatabaseName
    path: Framework/Ninject/Cqrs.Ninject.MongoDB/TestMongoDataStoreConnectionStringFactory.cs
    startLine: 86
  assemblies:
  - Cqrs.Ninject.MongoDB
  namespace: Cqrs.Ninject.MongoDB
  summary: "\nGets the value of <xref href=\"Cqrs.Ninject.MongoDB.TestMongoDbDataStoreConnectionStringFactory.DatabaseName\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public string GetEventStoreDatabaseName()
    return:
      type: System.String
    content.vb: Public Function GetEventStoreDatabaseName As String
  overload: Cqrs.Ninject.MongoDB.TestMongoDbDataStoreConnectionStringFactory.GetEventStoreDatabaseName*
  implements:
  - Cqrs.MongoDB.Events.IMongoDbEventStoreConnectionStringFactory.GetEventStoreDatabaseName
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Cqrs.MongoDB.Factories.IMongoDbDataStoreConnectionStringFactory
  commentId: T:Cqrs.MongoDB.Factories.IMongoDbDataStoreConnectionStringFactory
  parent: Cqrs.MongoDB.Factories
  isExternal: false
  name: IMongoDbDataStoreConnectionStringFactory
  nameWithType: IMongoDbDataStoreConnectionStringFactory
  fullName: Cqrs.MongoDB.Factories.IMongoDbDataStoreConnectionStringFactory
- uid: Cqrs.MongoDB.Events.IMongoDbEventStoreConnectionStringFactory
  commentId: T:Cqrs.MongoDB.Events.IMongoDbEventStoreConnectionStringFactory
  parent: Cqrs.MongoDB.Events
  isExternal: false
  name: IMongoDbEventStoreConnectionStringFactory
  nameWithType: IMongoDbEventStoreConnectionStringFactory
  fullName: Cqrs.MongoDB.Events.IMongoDbEventStoreConnectionStringFactory
- uid: Cqrs.Ninject.MongoDB.TestMongoDbDataStoreConnectionStringFactory.DatabaseName
  commentId: P:Cqrs.Ninject.MongoDB.TestMongoDbDataStoreConnectionStringFactory.DatabaseName
- uid: Cqrs.Events.IEventStore`1
  commentId: T:Cqrs.Events.IEventStore`1
  isExternal: false
  name: IEventStore<TAuthenticationToken>
  nameWithType: IEventStore<TAuthenticationToken>
  fullName: Cqrs.Events.IEventStore<TAuthenticationToken>
  nameWithType.vb: IEventStore(Of TAuthenticationToken)
  fullName.vb: Cqrs.Events.IEventStore(Of TAuthenticationToken)
  name.vb: IEventStore(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Events.IEventStore`1
    name: IEventStore
    nameWithType: IEventStore
    fullName: Cqrs.Events.IEventStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Events.IEventStore`1
    name: IEventStore
    nameWithType: IEventStore
    fullName: Cqrs.Events.IEventStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.DataStores.IDataStore`1
  commentId: T:Cqrs.DataStores.IDataStore`1
  isExternal: false
  name: IDataStore<TData>
  nameWithType: IDataStore<TData>
  fullName: Cqrs.DataStores.IDataStore<TData>
  nameWithType.vb: IDataStore(Of TData)
  fullName.vb: Cqrs.DataStores.IDataStore(Of TData)
  name.vb: IDataStore(Of TData)
  spec.csharp:
  - uid: Cqrs.DataStores.IDataStore`1
    name: IDataStore
    nameWithType: IDataStore
    fullName: Cqrs.DataStores.IDataStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.DataStores.IDataStore`1
    name: IDataStore
    nameWithType: IDataStore
    fullName: Cqrs.DataStores.IDataStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Ninject.MongoDB
  commentId: N:Cqrs.Ninject.MongoDB
  isExternal: false
  name: Cqrs.Ninject.MongoDB
  nameWithType: Cqrs.Ninject.MongoDB
  fullName: Cqrs.Ninject.MongoDB
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.MongoDB.Factories
  commentId: N:Cqrs.MongoDB.Factories
  isExternal: false
  name: Cqrs.MongoDB.Factories
  nameWithType: Cqrs.MongoDB.Factories
  fullName: Cqrs.MongoDB.Factories
- uid: Cqrs.MongoDB.Events
  commentId: N:Cqrs.MongoDB.Events
  isExternal: false
  name: Cqrs.MongoDB.Events
  nameWithType: Cqrs.MongoDB.Events
  fullName: Cqrs.MongoDB.Events
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Cqrs.Ninject.MongoDB.TestMongoDbDataStoreConnectionStringFactory.DatabaseName*
  commentId: Overload:Cqrs.Ninject.MongoDB.TestMongoDbDataStoreConnectionStringFactory.DatabaseName
  isExternal: false
  name: DatabaseName
  nameWithType: TestMongoDbDataStoreConnectionStringFactory.DatabaseName
  fullName: Cqrs.Ninject.MongoDB.TestMongoDbDataStoreConnectionStringFactory.DatabaseName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Cqrs.Ninject.MongoDB.TestMongoDbDataStoreConnectionStringFactory.GetDataStoreConnectionString*
  commentId: Overload:Cqrs.Ninject.MongoDB.TestMongoDbDataStoreConnectionStringFactory.GetDataStoreConnectionString
  isExternal: false
  name: GetDataStoreConnectionString
  nameWithType: TestMongoDbDataStoreConnectionStringFactory.GetDataStoreConnectionString
  fullName: Cqrs.Ninject.MongoDB.TestMongoDbDataStoreConnectionStringFactory.GetDataStoreConnectionString
- uid: Cqrs.MongoDB.Factories.IMongoDbDataStoreConnectionStringFactory.GetDataStoreConnectionString
  commentId: M:Cqrs.MongoDB.Factories.IMongoDbDataStoreConnectionStringFactory.GetDataStoreConnectionString
  parent: Cqrs.MongoDB.Factories.IMongoDbDataStoreConnectionStringFactory
  isExternal: false
  name: GetDataStoreConnectionString()
  nameWithType: IMongoDbDataStoreConnectionStringFactory.GetDataStoreConnectionString()
  fullName: Cqrs.MongoDB.Factories.IMongoDbDataStoreConnectionStringFactory.GetDataStoreConnectionString()
  spec.csharp:
  - uid: Cqrs.MongoDB.Factories.IMongoDbDataStoreConnectionStringFactory.GetDataStoreConnectionString
    name: GetDataStoreConnectionString
    nameWithType: IMongoDbDataStoreConnectionStringFactory.GetDataStoreConnectionString
    fullName: Cqrs.MongoDB.Factories.IMongoDbDataStoreConnectionStringFactory.GetDataStoreConnectionString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.MongoDB.Factories.IMongoDbDataStoreConnectionStringFactory.GetDataStoreConnectionString
    name: GetDataStoreConnectionString
    nameWithType: IMongoDbDataStoreConnectionStringFactory.GetDataStoreConnectionString
    fullName: Cqrs.MongoDB.Factories.IMongoDbDataStoreConnectionStringFactory.GetDataStoreConnectionString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Ninject.MongoDB.TestMongoDbDataStoreConnectionStringFactory.GetDataStoreDatabaseName*
  commentId: Overload:Cqrs.Ninject.MongoDB.TestMongoDbDataStoreConnectionStringFactory.GetDataStoreDatabaseName
  isExternal: false
  name: GetDataStoreDatabaseName
  nameWithType: TestMongoDbDataStoreConnectionStringFactory.GetDataStoreDatabaseName
  fullName: Cqrs.Ninject.MongoDB.TestMongoDbDataStoreConnectionStringFactory.GetDataStoreDatabaseName
- uid: Cqrs.MongoDB.Factories.IMongoDbDataStoreConnectionStringFactory.GetDataStoreDatabaseName
  commentId: M:Cqrs.MongoDB.Factories.IMongoDbDataStoreConnectionStringFactory.GetDataStoreDatabaseName
  parent: Cqrs.MongoDB.Factories.IMongoDbDataStoreConnectionStringFactory
  isExternal: false
  name: GetDataStoreDatabaseName()
  nameWithType: IMongoDbDataStoreConnectionStringFactory.GetDataStoreDatabaseName()
  fullName: Cqrs.MongoDB.Factories.IMongoDbDataStoreConnectionStringFactory.GetDataStoreDatabaseName()
  spec.csharp:
  - uid: Cqrs.MongoDB.Factories.IMongoDbDataStoreConnectionStringFactory.GetDataStoreDatabaseName
    name: GetDataStoreDatabaseName
    nameWithType: IMongoDbDataStoreConnectionStringFactory.GetDataStoreDatabaseName
    fullName: Cqrs.MongoDB.Factories.IMongoDbDataStoreConnectionStringFactory.GetDataStoreDatabaseName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.MongoDB.Factories.IMongoDbDataStoreConnectionStringFactory.GetDataStoreDatabaseName
    name: GetDataStoreDatabaseName
    nameWithType: IMongoDbDataStoreConnectionStringFactory.GetDataStoreDatabaseName
    fullName: Cqrs.MongoDB.Factories.IMongoDbDataStoreConnectionStringFactory.GetDataStoreDatabaseName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Ninject.MongoDB.TestMongoDbDataStoreConnectionStringFactory.GetEventStoreConnectionString*
  commentId: Overload:Cqrs.Ninject.MongoDB.TestMongoDbDataStoreConnectionStringFactory.GetEventStoreConnectionString
  isExternal: false
  name: GetEventStoreConnectionString
  nameWithType: TestMongoDbDataStoreConnectionStringFactory.GetEventStoreConnectionString
  fullName: Cqrs.Ninject.MongoDB.TestMongoDbDataStoreConnectionStringFactory.GetEventStoreConnectionString
- uid: Cqrs.MongoDB.Events.IMongoDbEventStoreConnectionStringFactory.GetEventStoreConnectionString
  commentId: M:Cqrs.MongoDB.Events.IMongoDbEventStoreConnectionStringFactory.GetEventStoreConnectionString
  parent: Cqrs.MongoDB.Events.IMongoDbEventStoreConnectionStringFactory
  isExternal: false
  name: GetEventStoreConnectionString()
  nameWithType: IMongoDbEventStoreConnectionStringFactory.GetEventStoreConnectionString()
  fullName: Cqrs.MongoDB.Events.IMongoDbEventStoreConnectionStringFactory.GetEventStoreConnectionString()
  spec.csharp:
  - uid: Cqrs.MongoDB.Events.IMongoDbEventStoreConnectionStringFactory.GetEventStoreConnectionString
    name: GetEventStoreConnectionString
    nameWithType: IMongoDbEventStoreConnectionStringFactory.GetEventStoreConnectionString
    fullName: Cqrs.MongoDB.Events.IMongoDbEventStoreConnectionStringFactory.GetEventStoreConnectionString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.MongoDB.Events.IMongoDbEventStoreConnectionStringFactory.GetEventStoreConnectionString
    name: GetEventStoreConnectionString
    nameWithType: IMongoDbEventStoreConnectionStringFactory.GetEventStoreConnectionString
    fullName: Cqrs.MongoDB.Events.IMongoDbEventStoreConnectionStringFactory.GetEventStoreConnectionString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Ninject.MongoDB.TestMongoDbDataStoreConnectionStringFactory.GetEventStoreDatabaseName*
  commentId: Overload:Cqrs.Ninject.MongoDB.TestMongoDbDataStoreConnectionStringFactory.GetEventStoreDatabaseName
  isExternal: false
  name: GetEventStoreDatabaseName
  nameWithType: TestMongoDbDataStoreConnectionStringFactory.GetEventStoreDatabaseName
  fullName: Cqrs.Ninject.MongoDB.TestMongoDbDataStoreConnectionStringFactory.GetEventStoreDatabaseName
- uid: Cqrs.MongoDB.Events.IMongoDbEventStoreConnectionStringFactory.GetEventStoreDatabaseName
  commentId: M:Cqrs.MongoDB.Events.IMongoDbEventStoreConnectionStringFactory.GetEventStoreDatabaseName
  parent: Cqrs.MongoDB.Events.IMongoDbEventStoreConnectionStringFactory
  isExternal: false
  name: GetEventStoreDatabaseName()
  nameWithType: IMongoDbEventStoreConnectionStringFactory.GetEventStoreDatabaseName()
  fullName: Cqrs.MongoDB.Events.IMongoDbEventStoreConnectionStringFactory.GetEventStoreDatabaseName()
  spec.csharp:
  - uid: Cqrs.MongoDB.Events.IMongoDbEventStoreConnectionStringFactory.GetEventStoreDatabaseName
    name: GetEventStoreDatabaseName
    nameWithType: IMongoDbEventStoreConnectionStringFactory.GetEventStoreDatabaseName
    fullName: Cqrs.MongoDB.Events.IMongoDbEventStoreConnectionStringFactory.GetEventStoreDatabaseName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.MongoDB.Events.IMongoDbEventStoreConnectionStringFactory.GetEventStoreDatabaseName
    name: GetEventStoreDatabaseName
    nameWithType: IMongoDbEventStoreConnectionStringFactory.GetEventStoreDatabaseName
    fullName: Cqrs.MongoDB.Events.IMongoDbEventStoreConnectionStringFactory.GetEventStoreDatabaseName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
