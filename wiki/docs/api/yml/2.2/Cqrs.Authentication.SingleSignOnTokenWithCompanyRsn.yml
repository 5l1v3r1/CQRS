### YamlMime:ManagedReference
items:
- uid: Cqrs.Authentication.SingleSignOnTokenWithCompanyRsn
  commentId: T:Cqrs.Authentication.SingleSignOnTokenWithCompanyRsn
  id: SingleSignOnTokenWithCompanyRsn
  parent: Cqrs.Authentication
  children:
  - Cqrs.Authentication.SingleSignOnTokenWithCompanyRsn.CompanyRsn
  - Cqrs.Authentication.SingleSignOnTokenWithCompanyRsn.Serialise
  langs:
  - csharp
  - vb
  name: SingleSignOnTokenWithCompanyRsn
  nameWithType: SingleSignOnTokenWithCompanyRsn
  fullName: Cqrs.Authentication.SingleSignOnTokenWithCompanyRsn
  type: Class
  source:
    remote:
      path: Framework/Cqrs/Authentication/SingleSignOnTokenWithCompanyRsn.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: SingleSignOnTokenWithCompanyRsn
    path: Framework/Cqrs/Authentication/SingleSignOnTokenWithCompanyRsn.cs
    startLine: 20
  assemblies:
  - Cqrs
  namespace: Cqrs.Authentication
  summary: "\nThis is a <xref href=\"Cqrs.Authentication.ISingleSignOnToken\" data-throw-if-not-resolved=\"false\"></xref> that includes an identifiable <xref href=\"Cqrs.Authentication.SingleSignOnTokenWithCompanyRsn.CompanyRsn\" data-throw-if-not-resolved=\"false\"></xref> to optimise the hits of the <xref href=\"Cqrs.DataStores.IDataStore%601\" data-throw-if-not-resolved=\"false\"></xref> by including data you most likely need.\nAs such, if not used correctly, this can expose identifiable information.\nIt is suggested the service layer populates this before sending commands as part of authorisation/authentication.\n"
  example: []
  syntax:
    content: 'public class SingleSignOnTokenWithCompanyRsn : SingleSignOnToken, ISingleSignOnTokenWithCompanyRsn, ISingleSignOnToken'
    content.vb: >-
      Public Class SingleSignOnTokenWithCompanyRsn

          Inherits SingleSignOnToken

          Implements ISingleSignOnTokenWithCompanyRsn, ISingleSignOnToken
  inheritance:
  - System.Object
  - Cqrs.Authentication.SingleSignOnToken
  implements:
  - Cqrs.Authentication.ISingleSignOnTokenWithCompanyRsn
  - Cqrs.Authentication.ISingleSignOnToken
  inheritedMembers:
  - Cqrs.Authentication.SingleSignOnToken.Token
  - Cqrs.Authentication.SingleSignOnToken.TimeOfExpiry
  - Cqrs.Authentication.SingleSignOnToken.DateIssued
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Cqrs.Authentication.SingleSignOnTokenWithCompanyRsn.CompanyRsn
  commentId: P:Cqrs.Authentication.SingleSignOnTokenWithCompanyRsn.CompanyRsn
  id: CompanyRsn
  parent: Cqrs.Authentication.SingleSignOnTokenWithCompanyRsn
  langs:
  - csharp
  - vb
  name: CompanyRsn
  nameWithType: SingleSignOnTokenWithCompanyRsn.CompanyRsn
  fullName: Cqrs.Authentication.SingleSignOnTokenWithCompanyRsn.CompanyRsn
  type: Property
  source:
    remote:
      path: Framework/Cqrs/Authentication/SingleSignOnTokenWithCompanyRsn.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: CompanyRsn
    path: Framework/Cqrs/Authentication/SingleSignOnTokenWithCompanyRsn.cs
    startLine: 27
  assemblies:
  - Cqrs
  namespace: Cqrs.Authentication
  summary: "\nThe Rsn of the company the user doing the operation is operating on.\nWhen used in a system where a single user can have access to multiple companies, this is not the company the user belongs to, but the company it is operating on.\nWhen used by an external 3rd party this is the all in context of the person being impersonated, not the 3rd party system itself.\n"
  example: []
  syntax:
    content: >-
      [Required]

      [DataMember]

      public Guid CompanyRsn { get; set; }
    parameters: []
    return:
      type: System.Guid
    content.vb: >-
      <Required>

      <DataMember>

      Public Property CompanyRsn As Guid
  overload: Cqrs.Authentication.SingleSignOnTokenWithCompanyRsn.CompanyRsn*
  implements:
  - Cqrs.Authentication.ISingleSignOnTokenWithCompanyRsn.CompanyRsn
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Cqrs.Authentication.SingleSignOnTokenWithCompanyRsn.Serialise
  commentId: M:Cqrs.Authentication.SingleSignOnTokenWithCompanyRsn.Serialise
  id: Serialise
  parent: Cqrs.Authentication.SingleSignOnTokenWithCompanyRsn
  langs:
  - csharp
  - vb
  name: Serialise()
  nameWithType: SingleSignOnTokenWithCompanyRsn.Serialise()
  fullName: Cqrs.Authentication.SingleSignOnTokenWithCompanyRsn.Serialise()
  type: Method
  source:
    remote:
      path: Framework/Cqrs/Authentication/SingleSignOnTokenWithCompanyRsn.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Serialise
    path: Framework/Cqrs/Authentication/SingleSignOnTokenWithCompanyRsn.cs
    startLine: 35
  assemblies:
  - Cqrs
  namespace: Cqrs.Authentication
  summary: "\nReturns <xref href=\"Cqrs.Authentication.SingleSignOnTokenWithCompanyRsn.CompanyRsn\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public override string Serialise()
    return:
      type: System.String
      description: <xref href="Cqrs.Authentication.SingleSignOnTokenWithCompanyRsn.CompanyRsn" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Overrides Function Serialise As String
  overridden: Cqrs.Authentication.SingleSignOnToken.Serialise
  overload: Cqrs.Authentication.SingleSignOnTokenWithCompanyRsn.Serialise*
  implements:
  - Cqrs.Authentication.ISingleSignOnToken.Serialise
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Cqrs.Authentication.ISingleSignOnToken
  commentId: T:Cqrs.Authentication.ISingleSignOnToken
  parent: Cqrs.Authentication
  isExternal: false
  name: ISingleSignOnToken
  nameWithType: ISingleSignOnToken
  fullName: Cqrs.Authentication.ISingleSignOnToken
- uid: Cqrs.Authentication.SingleSignOnTokenWithCompanyRsn.CompanyRsn
  commentId: P:Cqrs.Authentication.SingleSignOnTokenWithCompanyRsn.CompanyRsn
- uid: Cqrs.DataStores.IDataStore`1
  commentId: T:Cqrs.DataStores.IDataStore`1
  isExternal: false
  name: IDataStore<TData>
  nameWithType: IDataStore<TData>
  fullName: Cqrs.DataStores.IDataStore<TData>
  nameWithType.vb: IDataStore(Of TData)
  fullName.vb: Cqrs.DataStores.IDataStore(Of TData)
  name.vb: IDataStore(Of TData)
  spec.csharp:
  - uid: Cqrs.DataStores.IDataStore`1
    name: IDataStore
    nameWithType: IDataStore
    fullName: Cqrs.DataStores.IDataStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.DataStores.IDataStore`1
    name: IDataStore
    nameWithType: IDataStore
    fullName: Cqrs.DataStores.IDataStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Authentication
  commentId: N:Cqrs.Authentication
  isExternal: false
  name: Cqrs.Authentication
  nameWithType: Cqrs.Authentication
  fullName: Cqrs.Authentication
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Cqrs.Authentication.SingleSignOnToken
  commentId: T:Cqrs.Authentication.SingleSignOnToken
  parent: Cqrs.Authentication
  isExternal: false
  name: SingleSignOnToken
  nameWithType: SingleSignOnToken
  fullName: Cqrs.Authentication.SingleSignOnToken
- uid: Cqrs.Authentication.ISingleSignOnTokenWithCompanyRsn
  commentId: T:Cqrs.Authentication.ISingleSignOnTokenWithCompanyRsn
  parent: Cqrs.Authentication
  isExternal: false
  name: ISingleSignOnTokenWithCompanyRsn
  nameWithType: ISingleSignOnTokenWithCompanyRsn
  fullName: Cqrs.Authentication.ISingleSignOnTokenWithCompanyRsn
- uid: Cqrs.Authentication.SingleSignOnToken.Token
  commentId: P:Cqrs.Authentication.SingleSignOnToken.Token
  parent: Cqrs.Authentication.SingleSignOnToken
  isExternal: false
  name: Token
  nameWithType: SingleSignOnToken.Token
  fullName: Cqrs.Authentication.SingleSignOnToken.Token
- uid: Cqrs.Authentication.SingleSignOnToken.TimeOfExpiry
  commentId: P:Cqrs.Authentication.SingleSignOnToken.TimeOfExpiry
  parent: Cqrs.Authentication.SingleSignOnToken
  isExternal: false
  name: TimeOfExpiry
  nameWithType: SingleSignOnToken.TimeOfExpiry
  fullName: Cqrs.Authentication.SingleSignOnToken.TimeOfExpiry
- uid: Cqrs.Authentication.SingleSignOnToken.DateIssued
  commentId: P:Cqrs.Authentication.SingleSignOnToken.DateIssued
  parent: Cqrs.Authentication.SingleSignOnToken
  isExternal: false
  name: DateIssued
  nameWithType: SingleSignOnToken.DateIssued
  fullName: Cqrs.Authentication.SingleSignOnToken.DateIssued
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Cqrs.Authentication.SingleSignOnTokenWithCompanyRsn.CompanyRsn*
  commentId: Overload:Cqrs.Authentication.SingleSignOnTokenWithCompanyRsn.CompanyRsn
  isExternal: false
  name: CompanyRsn
  nameWithType: SingleSignOnTokenWithCompanyRsn.CompanyRsn
  fullName: Cqrs.Authentication.SingleSignOnTokenWithCompanyRsn.CompanyRsn
- uid: Cqrs.Authentication.ISingleSignOnTokenWithCompanyRsn.CompanyRsn
  commentId: P:Cqrs.Authentication.ISingleSignOnTokenWithCompanyRsn.CompanyRsn
  parent: Cqrs.Authentication.ISingleSignOnTokenWithCompanyRsn
  isExternal: false
  name: CompanyRsn
  nameWithType: ISingleSignOnTokenWithCompanyRsn.CompanyRsn
  fullName: Cqrs.Authentication.ISingleSignOnTokenWithCompanyRsn.CompanyRsn
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: Cqrs.Authentication.SingleSignOnToken.Serialise
  commentId: M:Cqrs.Authentication.SingleSignOnToken.Serialise
  parent: Cqrs.Authentication.SingleSignOnToken
  isExternal: false
  name: Serialise()
  nameWithType: SingleSignOnToken.Serialise()
  fullName: Cqrs.Authentication.SingleSignOnToken.Serialise()
  spec.csharp:
  - uid: Cqrs.Authentication.SingleSignOnToken.Serialise
    name: Serialise
    nameWithType: SingleSignOnToken.Serialise
    fullName: Cqrs.Authentication.SingleSignOnToken.Serialise
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Authentication.SingleSignOnToken.Serialise
    name: Serialise
    nameWithType: SingleSignOnToken.Serialise
    fullName: Cqrs.Authentication.SingleSignOnToken.Serialise
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Authentication.SingleSignOnTokenWithCompanyRsn.Serialise*
  commentId: Overload:Cqrs.Authentication.SingleSignOnTokenWithCompanyRsn.Serialise
  isExternal: false
  name: Serialise
  nameWithType: SingleSignOnTokenWithCompanyRsn.Serialise
  fullName: Cqrs.Authentication.SingleSignOnTokenWithCompanyRsn.Serialise
- uid: Cqrs.Authentication.ISingleSignOnToken.Serialise
  commentId: M:Cqrs.Authentication.ISingleSignOnToken.Serialise
  parent: Cqrs.Authentication.ISingleSignOnToken
  isExternal: false
  name: Serialise()
  nameWithType: ISingleSignOnToken.Serialise()
  fullName: Cqrs.Authentication.ISingleSignOnToken.Serialise()
  spec.csharp:
  - uid: Cqrs.Authentication.ISingleSignOnToken.Serialise
    name: Serialise
    nameWithType: ISingleSignOnToken.Serialise
    fullName: Cqrs.Authentication.ISingleSignOnToken.Serialise
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Authentication.ISingleSignOnToken.Serialise
    name: Serialise
    nameWithType: ISingleSignOnToken.Serialise
    fullName: Cqrs.Authentication.ISingleSignOnToken.Serialise
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
