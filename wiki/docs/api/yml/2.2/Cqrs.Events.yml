### YamlMime:ManagedReference
items:
- uid: Cqrs.Events
  commentId: N:Cqrs.Events
  id: Cqrs.Events
  children:
  - Cqrs.Events.DefaultEventBuilder`1
  - Cqrs.Events.DefaultJsonSerializerSettings
  - Cqrs.Events.DtoAggregateEvent`2
  - Cqrs.Events.DtoAggregateEventType
  - Cqrs.Events.DuplicateCreateCommandEvent`1
  - Cqrs.Events.EventBuilder`1
  - Cqrs.Events.EventData
  - Cqrs.Events.EventDataResolver`1
  - Cqrs.Events.EventDeserialiser`1
  - Cqrs.Events.EventStore`1
  - Cqrs.Events.EventStoreRetentionLevelAttribute
  - Cqrs.Events.IEvent`1
  - Cqrs.Events.IEventBuilder`1
  - Cqrs.Events.IEventDeserialiser`1
  - Cqrs.Events.IEventHandler
  - Cqrs.Events.IEventHandler`2
  - Cqrs.Events.IEventHandler`3
  - Cqrs.Events.IEventPublisher`1
  - Cqrs.Events.IEventReceiver
  - Cqrs.Events.IEventReceiver`1
  - Cqrs.Events.IEventStore`1
  - Cqrs.Events.InProcessEventStore`1
  - Cqrs.Events.ISagaEvent`1
  - Cqrs.Events.MemoryCacheEventStore`1
  - Cqrs.Events.NotifyCallerEventAttribute
  - Cqrs.Events.NotifyEveryoneEventAttribute
  - Cqrs.Events.NotifyEveryoneExceptCallerEventAttribute
  - Cqrs.Events.PrivateEventAttribute
  - Cqrs.Events.PublicEventAttribute
  - Cqrs.Events.ReplicatedSqlEventStore`1
  - Cqrs.Events.SagaEvent`1
  - Cqrs.Events.SqlEventStore`1
  langs:
  - csharp
  - vb
  name: Cqrs.Events
  nameWithType: Cqrs.Events
  fullName: Cqrs.Events
  type: Namespace
  assemblies:
  - Cqrs
references:
- uid: Cqrs.Events.DefaultJsonSerializerSettings
  commentId: T:Cqrs.Events.DefaultJsonSerializerSettings
  isExternal: false
  name: DefaultJsonSerializerSettings
  nameWithType: DefaultJsonSerializerSettings
  fullName: Cqrs.Events.DefaultJsonSerializerSettings
- uid: Cqrs.Events.InProcessEventStore`1
  commentId: T:Cqrs.Events.InProcessEventStore`1
  isExternal: false
  name: InProcessEventStore<TAuthenticationToken>
  nameWithType: InProcessEventStore<TAuthenticationToken>
  fullName: Cqrs.Events.InProcessEventStore<TAuthenticationToken>
  nameWithType.vb: InProcessEventStore(Of TAuthenticationToken)
  fullName.vb: Cqrs.Events.InProcessEventStore(Of TAuthenticationToken)
  name.vb: InProcessEventStore(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Events.InProcessEventStore`1
    name: InProcessEventStore
    nameWithType: InProcessEventStore
    fullName: Cqrs.Events.InProcessEventStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Events.InProcessEventStore`1
    name: InProcessEventStore
    nameWithType: InProcessEventStore
    fullName: Cqrs.Events.InProcessEventStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Events.ReplicatedSqlEventStore`1
  commentId: T:Cqrs.Events.ReplicatedSqlEventStore`1
  isExternal: false
  name: ReplicatedSqlEventStore<TAuthenticationToken>
  nameWithType: ReplicatedSqlEventStore<TAuthenticationToken>
  fullName: Cqrs.Events.ReplicatedSqlEventStore<TAuthenticationToken>
  nameWithType.vb: ReplicatedSqlEventStore(Of TAuthenticationToken)
  fullName.vb: Cqrs.Events.ReplicatedSqlEventStore(Of TAuthenticationToken)
  name.vb: ReplicatedSqlEventStore(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Events.ReplicatedSqlEventStore`1
    name: ReplicatedSqlEventStore
    nameWithType: ReplicatedSqlEventStore
    fullName: Cqrs.Events.ReplicatedSqlEventStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Events.ReplicatedSqlEventStore`1
    name: ReplicatedSqlEventStore
    nameWithType: ReplicatedSqlEventStore
    fullName: Cqrs.Events.ReplicatedSqlEventStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Events.SagaEvent`1
  commentId: T:Cqrs.Events.SagaEvent`1
  isExternal: false
  name: SagaEvent<TAuthenticationToken>
  nameWithType: SagaEvent<TAuthenticationToken>
  fullName: Cqrs.Events.SagaEvent<TAuthenticationToken>
  nameWithType.vb: SagaEvent(Of TAuthenticationToken)
  fullName.vb: Cqrs.Events.SagaEvent(Of TAuthenticationToken)
  name.vb: SagaEvent(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Events.SagaEvent`1
    name: SagaEvent
    nameWithType: SagaEvent
    fullName: Cqrs.Events.SagaEvent
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Events.SagaEvent`1
    name: SagaEvent
    nameWithType: SagaEvent
    fullName: Cqrs.Events.SagaEvent
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Events.ISagaEvent`1
  commentId: T:Cqrs.Events.ISagaEvent`1
  isExternal: false
  name: ISagaEvent<TAuthenticationToken>
  nameWithType: ISagaEvent<TAuthenticationToken>
  fullName: Cqrs.Events.ISagaEvent<TAuthenticationToken>
  nameWithType.vb: ISagaEvent(Of TAuthenticationToken)
  fullName.vb: Cqrs.Events.ISagaEvent(Of TAuthenticationToken)
  name.vb: ISagaEvent(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Events.ISagaEvent`1
    name: ISagaEvent
    nameWithType: ISagaEvent
    fullName: Cqrs.Events.ISagaEvent
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Events.ISagaEvent`1
    name: ISagaEvent
    nameWithType: ISagaEvent
    fullName: Cqrs.Events.ISagaEvent
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Events.NotifyEveryoneExceptCallerEventAttribute
  commentId: T:Cqrs.Events.NotifyEveryoneExceptCallerEventAttribute
  isExternal: false
  name: NotifyEveryoneExceptCallerEventAttribute
  nameWithType: NotifyEveryoneExceptCallerEventAttribute
  fullName: Cqrs.Events.NotifyEveryoneExceptCallerEventAttribute
- uid: Cqrs.Events.NotifyEveryoneEventAttribute
  commentId: T:Cqrs.Events.NotifyEveryoneEventAttribute
  isExternal: false
  name: NotifyEveryoneEventAttribute
  nameWithType: NotifyEveryoneEventAttribute
  fullName: Cqrs.Events.NotifyEveryoneEventAttribute
- uid: Cqrs.Events.NotifyCallerEventAttribute
  commentId: T:Cqrs.Events.NotifyCallerEventAttribute
  isExternal: false
  name: NotifyCallerEventAttribute
  nameWithType: NotifyCallerEventAttribute
  fullName: Cqrs.Events.NotifyCallerEventAttribute
- uid: Cqrs.Events.PrivateEventAttribute
  commentId: T:Cqrs.Events.PrivateEventAttribute
  isExternal: false
  name: PrivateEventAttribute
  nameWithType: PrivateEventAttribute
  fullName: Cqrs.Events.PrivateEventAttribute
- uid: Cqrs.Events.EventDataResolver`1
  commentId: T:Cqrs.Events.EventDataResolver`1
  isExternal: false
  name: EventDataResolver<TAuthenticationToken>
  nameWithType: EventDataResolver<TAuthenticationToken>
  fullName: Cqrs.Events.EventDataResolver<TAuthenticationToken>
  nameWithType.vb: EventDataResolver(Of TAuthenticationToken)
  fullName.vb: Cqrs.Events.EventDataResolver(Of TAuthenticationToken)
  name.vb: EventDataResolver(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Events.EventDataResolver`1
    name: EventDataResolver
    nameWithType: EventDataResolver
    fullName: Cqrs.Events.EventDataResolver
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Events.EventDataResolver`1
    name: EventDataResolver
    nameWithType: EventDataResolver
    fullName: Cqrs.Events.EventDataResolver
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Events.EventStoreRetentionLevelAttribute
  commentId: T:Cqrs.Events.EventStoreRetentionLevelAttribute
  isExternal: false
  name: EventStoreRetentionLevelAttribute
  nameWithType: EventStoreRetentionLevelAttribute
  fullName: Cqrs.Events.EventStoreRetentionLevelAttribute
- uid: Cqrs.Events.MemoryCacheEventStore`1
  commentId: T:Cqrs.Events.MemoryCacheEventStore`1
  isExternal: false
  name: MemoryCacheEventStore<TAuthenticationToken>
  nameWithType: MemoryCacheEventStore<TAuthenticationToken>
  fullName: Cqrs.Events.MemoryCacheEventStore<TAuthenticationToken>
  nameWithType.vb: MemoryCacheEventStore(Of TAuthenticationToken)
  fullName.vb: Cqrs.Events.MemoryCacheEventStore(Of TAuthenticationToken)
  name.vb: MemoryCacheEventStore(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Events.MemoryCacheEventStore`1
    name: MemoryCacheEventStore
    nameWithType: MemoryCacheEventStore
    fullName: Cqrs.Events.MemoryCacheEventStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Events.MemoryCacheEventStore`1
    name: MemoryCacheEventStore
    nameWithType: MemoryCacheEventStore
    fullName: Cqrs.Events.MemoryCacheEventStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Events.DefaultEventBuilder`1
  commentId: T:Cqrs.Events.DefaultEventBuilder`1
  isExternal: false
  name: DefaultEventBuilder<TAuthenticationToken>
  nameWithType: DefaultEventBuilder<TAuthenticationToken>
  fullName: Cqrs.Events.DefaultEventBuilder<TAuthenticationToken>
  nameWithType.vb: DefaultEventBuilder(Of TAuthenticationToken)
  fullName.vb: Cqrs.Events.DefaultEventBuilder(Of TAuthenticationToken)
  name.vb: DefaultEventBuilder(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Events.DefaultEventBuilder`1
    name: DefaultEventBuilder
    nameWithType: DefaultEventBuilder
    fullName: Cqrs.Events.DefaultEventBuilder
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Events.DefaultEventBuilder`1
    name: DefaultEventBuilder
    nameWithType: DefaultEventBuilder
    fullName: Cqrs.Events.DefaultEventBuilder
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Events.DtoAggregateEventType
  commentId: T:Cqrs.Events.DtoAggregateEventType
  parent: Cqrs.Events
  isExternal: false
  name: DtoAggregateEventType
  nameWithType: DtoAggregateEventType
  fullName: Cqrs.Events.DtoAggregateEventType
- uid: Cqrs.Events.DuplicateCreateCommandEvent`1
  commentId: T:Cqrs.Events.DuplicateCreateCommandEvent`1
  isExternal: false
  name: DuplicateCreateCommandEvent<TAuthenticationToken>
  nameWithType: DuplicateCreateCommandEvent<TAuthenticationToken>
  fullName: Cqrs.Events.DuplicateCreateCommandEvent<TAuthenticationToken>
  nameWithType.vb: DuplicateCreateCommandEvent(Of TAuthenticationToken)
  fullName.vb: Cqrs.Events.DuplicateCreateCommandEvent(Of TAuthenticationToken)
  name.vb: DuplicateCreateCommandEvent(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Events.DuplicateCreateCommandEvent`1
    name: DuplicateCreateCommandEvent
    nameWithType: DuplicateCreateCommandEvent
    fullName: Cqrs.Events.DuplicateCreateCommandEvent
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Events.DuplicateCreateCommandEvent`1
    name: DuplicateCreateCommandEvent
    nameWithType: DuplicateCreateCommandEvent
    fullName: Cqrs.Events.DuplicateCreateCommandEvent
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Events.EventData
  commentId: T:Cqrs.Events.EventData
  parent: Cqrs.Events
  isExternal: false
  name: EventData
  nameWithType: EventData
  fullName: Cqrs.Events.EventData
- uid: Cqrs.Events.EventBuilder`1
  commentId: T:Cqrs.Events.EventBuilder`1
  isExternal: false
  name: EventBuilder<TAuthenticationToken>
  nameWithType: EventBuilder<TAuthenticationToken>
  fullName: Cqrs.Events.EventBuilder<TAuthenticationToken>
  nameWithType.vb: EventBuilder(Of TAuthenticationToken)
  fullName.vb: Cqrs.Events.EventBuilder(Of TAuthenticationToken)
  name.vb: EventBuilder(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Events.EventBuilder`1
    name: EventBuilder
    nameWithType: EventBuilder
    fullName: Cqrs.Events.EventBuilder
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Events.EventBuilder`1
    name: EventBuilder
    nameWithType: EventBuilder
    fullName: Cqrs.Events.EventBuilder
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Events.EventDeserialiser`1
  commentId: T:Cqrs.Events.EventDeserialiser`1
  isExternal: false
  name: EventDeserialiser<TAuthenticationToken>
  nameWithType: EventDeserialiser<TAuthenticationToken>
  fullName: Cqrs.Events.EventDeserialiser<TAuthenticationToken>
  nameWithType.vb: EventDeserialiser(Of TAuthenticationToken)
  fullName.vb: Cqrs.Events.EventDeserialiser(Of TAuthenticationToken)
  name.vb: EventDeserialiser(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Events.EventDeserialiser`1
    name: EventDeserialiser
    nameWithType: EventDeserialiser
    fullName: Cqrs.Events.EventDeserialiser
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Events.EventDeserialiser`1
    name: EventDeserialiser
    nameWithType: EventDeserialiser
    fullName: Cqrs.Events.EventDeserialiser
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Events.EventStore`1
  commentId: T:Cqrs.Events.EventStore`1
  isExternal: false
  name: EventStore<TAuthenticationToken>
  nameWithType: EventStore<TAuthenticationToken>
  fullName: Cqrs.Events.EventStore<TAuthenticationToken>
  nameWithType.vb: EventStore(Of TAuthenticationToken)
  fullName.vb: Cqrs.Events.EventStore(Of TAuthenticationToken)
  name.vb: EventStore(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Events.EventStore`1
    name: EventStore
    nameWithType: EventStore
    fullName: Cqrs.Events.EventStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Events.EventStore`1
    name: EventStore
    nameWithType: EventStore
    fullName: Cqrs.Events.EventStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Events.IEventBuilder`1
  commentId: T:Cqrs.Events.IEventBuilder`1
  isExternal: false
  name: IEventBuilder<TAuthenticationToken>
  nameWithType: IEventBuilder<TAuthenticationToken>
  fullName: Cqrs.Events.IEventBuilder<TAuthenticationToken>
  nameWithType.vb: IEventBuilder(Of TAuthenticationToken)
  fullName.vb: Cqrs.Events.IEventBuilder(Of TAuthenticationToken)
  name.vb: IEventBuilder(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Events.IEventBuilder`1
    name: IEventBuilder
    nameWithType: IEventBuilder
    fullName: Cqrs.Events.IEventBuilder
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Events.IEventBuilder`1
    name: IEventBuilder
    nameWithType: IEventBuilder
    fullName: Cqrs.Events.IEventBuilder
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Events.IEventDeserialiser`1
  commentId: T:Cqrs.Events.IEventDeserialiser`1
  isExternal: false
  name: IEventDeserialiser<TAuthenticationToken>
  nameWithType: IEventDeserialiser<TAuthenticationToken>
  fullName: Cqrs.Events.IEventDeserialiser<TAuthenticationToken>
  nameWithType.vb: IEventDeserialiser(Of TAuthenticationToken)
  fullName.vb: Cqrs.Events.IEventDeserialiser(Of TAuthenticationToken)
  name.vb: IEventDeserialiser(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Events.IEventDeserialiser`1
    name: IEventDeserialiser
    nameWithType: IEventDeserialiser
    fullName: Cqrs.Events.IEventDeserialiser
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Events.IEventDeserialiser`1
    name: IEventDeserialiser
    nameWithType: IEventDeserialiser
    fullName: Cqrs.Events.IEventDeserialiser
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Events.IEventReceiver
  commentId: T:Cqrs.Events.IEventReceiver
  parent: Cqrs.Events
  isExternal: false
  name: IEventReceiver
  nameWithType: IEventReceiver
  fullName: Cqrs.Events.IEventReceiver
- uid: Cqrs.Events.IEventReceiver`1
  commentId: T:Cqrs.Events.IEventReceiver`1
  isExternal: false
  name: IEventReceiver<TAuthenticationToken>
  nameWithType: IEventReceiver<TAuthenticationToken>
  fullName: Cqrs.Events.IEventReceiver<TAuthenticationToken>
  nameWithType.vb: IEventReceiver(Of TAuthenticationToken)
  fullName.vb: Cqrs.Events.IEventReceiver(Of TAuthenticationToken)
  name.vb: IEventReceiver(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Events.IEventReceiver`1
    name: IEventReceiver
    nameWithType: IEventReceiver
    fullName: Cqrs.Events.IEventReceiver
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Events.IEventReceiver`1
    name: IEventReceiver
    nameWithType: IEventReceiver
    fullName: Cqrs.Events.IEventReceiver
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Events.IEventPublisher`1
  commentId: T:Cqrs.Events.IEventPublisher`1
  isExternal: false
  name: IEventPublisher<TAuthenticationToken>
  nameWithType: IEventPublisher<TAuthenticationToken>
  fullName: Cqrs.Events.IEventPublisher<TAuthenticationToken>
  nameWithType.vb: IEventPublisher(Of TAuthenticationToken)
  fullName.vb: Cqrs.Events.IEventPublisher(Of TAuthenticationToken)
  name.vb: IEventPublisher(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Events.IEventPublisher`1
    name: IEventPublisher
    nameWithType: IEventPublisher
    fullName: Cqrs.Events.IEventPublisher
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Events.IEventPublisher`1
    name: IEventPublisher
    nameWithType: IEventPublisher
    fullName: Cqrs.Events.IEventPublisher
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Events.IEventStore`1
  commentId: T:Cqrs.Events.IEventStore`1
  isExternal: false
  name: IEventStore<TAuthenticationToken>
  nameWithType: IEventStore<TAuthenticationToken>
  fullName: Cqrs.Events.IEventStore<TAuthenticationToken>
  nameWithType.vb: IEventStore(Of TAuthenticationToken)
  fullName.vb: Cqrs.Events.IEventStore(Of TAuthenticationToken)
  name.vb: IEventStore(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Events.IEventStore`1
    name: IEventStore
    nameWithType: IEventStore
    fullName: Cqrs.Events.IEventStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Events.IEventStore`1
    name: IEventStore
    nameWithType: IEventStore
    fullName: Cqrs.Events.IEventStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Events.IEventHandler`3
  commentId: T:Cqrs.Events.IEventHandler`3
  isExternal: false
  name: IEventHandler<TAuthenticationToken, TTarget, TEvent>
  nameWithType: IEventHandler<TAuthenticationToken, TTarget, TEvent>
  fullName: Cqrs.Events.IEventHandler<TAuthenticationToken, TTarget, TEvent>
  nameWithType.vb: IEventHandler(Of TAuthenticationToken, TTarget, TEvent)
  fullName.vb: Cqrs.Events.IEventHandler(Of TAuthenticationToken, TTarget, TEvent)
  name.vb: IEventHandler(Of TAuthenticationToken, TTarget, TEvent)
  spec.csharp:
  - uid: Cqrs.Events.IEventHandler`3
    name: IEventHandler
    nameWithType: IEventHandler
    fullName: Cqrs.Events.IEventHandler
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TTarget
    nameWithType: TTarget
    fullName: TTarget
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEvent
    nameWithType: TEvent
    fullName: TEvent
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Events.IEventHandler`3
    name: IEventHandler
    nameWithType: IEventHandler
    fullName: Cqrs.Events.IEventHandler
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TTarget
    nameWithType: TTarget
    fullName: TTarget
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEvent
    nameWithType: TEvent
    fullName: TEvent
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Events.IEventHandler`2
  commentId: T:Cqrs.Events.IEventHandler`2
  isExternal: false
  name: IEventHandler<TAuthenticationToken, TEvent>
  nameWithType: IEventHandler<TAuthenticationToken, TEvent>
  fullName: Cqrs.Events.IEventHandler<TAuthenticationToken, TEvent>
  nameWithType.vb: IEventHandler(Of TAuthenticationToken, TEvent)
  fullName.vb: Cqrs.Events.IEventHandler(Of TAuthenticationToken, TEvent)
  name.vb: IEventHandler(Of TAuthenticationToken, TEvent)
  spec.csharp:
  - uid: Cqrs.Events.IEventHandler`2
    name: IEventHandler
    nameWithType: IEventHandler
    fullName: Cqrs.Events.IEventHandler
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEvent
    nameWithType: TEvent
    fullName: TEvent
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Events.IEventHandler`2
    name: IEventHandler
    nameWithType: IEventHandler
    fullName: Cqrs.Events.IEventHandler
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEvent
    nameWithType: TEvent
    fullName: TEvent
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Events.IEventHandler
  commentId: T:Cqrs.Events.IEventHandler
  parent: Cqrs.Events
  isExternal: false
  name: IEventHandler
  nameWithType: IEventHandler
  fullName: Cqrs.Events.IEventHandler
- uid: Cqrs.Events.DtoAggregateEvent`2
  commentId: T:Cqrs.Events.DtoAggregateEvent`2
  isExternal: false
  name: DtoAggregateEvent<TAuthenticationToken, TDto>
  nameWithType: DtoAggregateEvent<TAuthenticationToken, TDto>
  fullName: Cqrs.Events.DtoAggregateEvent<TAuthenticationToken, TDto>
  nameWithType.vb: DtoAggregateEvent(Of TAuthenticationToken, TDto)
  fullName.vb: Cqrs.Events.DtoAggregateEvent(Of TAuthenticationToken, TDto)
  name.vb: DtoAggregateEvent(Of TAuthenticationToken, TDto)
  spec.csharp:
  - uid: Cqrs.Events.DtoAggregateEvent`2
    name: DtoAggregateEvent
    nameWithType: DtoAggregateEvent
    fullName: Cqrs.Events.DtoAggregateEvent
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDto
    nameWithType: TDto
    fullName: TDto
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Events.DtoAggregateEvent`2
    name: DtoAggregateEvent
    nameWithType: DtoAggregateEvent
    fullName: Cqrs.Events.DtoAggregateEvent
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDto
    nameWithType: TDto
    fullName: TDto
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Events.PublicEventAttribute
  commentId: T:Cqrs.Events.PublicEventAttribute
  isExternal: false
  name: PublicEventAttribute
  nameWithType: PublicEventAttribute
  fullName: Cqrs.Events.PublicEventAttribute
- uid: Cqrs.Events.SqlEventStore`1
  commentId: T:Cqrs.Events.SqlEventStore`1
  isExternal: false
  name: SqlEventStore<TAuthenticationToken>
  nameWithType: SqlEventStore<TAuthenticationToken>
  fullName: Cqrs.Events.SqlEventStore<TAuthenticationToken>
  nameWithType.vb: SqlEventStore(Of TAuthenticationToken)
  fullName.vb: Cqrs.Events.SqlEventStore(Of TAuthenticationToken)
  name.vb: SqlEventStore(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Events.SqlEventStore`1
    name: SqlEventStore
    nameWithType: SqlEventStore
    fullName: Cqrs.Events.SqlEventStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Events.SqlEventStore`1
    name: SqlEventStore
    nameWithType: SqlEventStore
    fullName: Cqrs.Events.SqlEventStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Events.IEvent`1
  commentId: T:Cqrs.Events.IEvent`1
  isExternal: false
  name: IEvent<TAuthenticationToken>
  nameWithType: IEvent<TAuthenticationToken>
  fullName: Cqrs.Events.IEvent<TAuthenticationToken>
  nameWithType.vb: IEvent(Of TAuthenticationToken)
  fullName.vb: Cqrs.Events.IEvent(Of TAuthenticationToken)
  name.vb: IEvent(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Events
  commentId: N:Cqrs.Events
  isExternal: false
  name: Cqrs.Events
  nameWithType: Cqrs.Events
  fullName: Cqrs.Events
