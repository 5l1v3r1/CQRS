### YamlMime:ManagedReference
items:
- uid: Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger.FormDataConverterLogger.LogErrorInfo
  commentId: T:Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger.FormDataConverterLogger.LogErrorInfo
  id: FormDataConverterLogger.LogErrorInfo
  parent: Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger
  children:
  - Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger.FormDataConverterLogger.LogErrorInfo.#ctor(System.Exception)
  - Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger.FormDataConverterLogger.LogErrorInfo.#ctor(System.String)
  - Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger.FormDataConverterLogger.LogErrorInfo.ErrorMessage
  - Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger.FormDataConverterLogger.LogErrorInfo.Exception
  - Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger.FormDataConverterLogger.LogErrorInfo.IsException
  langs:
  - csharp
  - vb
  name: FormDataConverterLogger.LogErrorInfo
  nameWithType: FormDataConverterLogger.LogErrorInfo
  fullName: Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger.FormDataConverterLogger.LogErrorInfo
  type: Class
  source:
    remote:
      path: Framework/Cqrs.WebApi/Formatters/FormMultipart/Infrastructure/Logger/FormDataConverterLogger.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: LogErrorInfo
    path: Framework/Cqrs.WebApi/Formatters/FormMultipart/Infrastructure/Logger/FormDataConverterLogger.cs
    startLine: 111
  assemblies:
  - Cqrs.WebApi
  namespace: Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger
  summary: "\nAn error, issue or <xref href=\"Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger.FormDataConverterLogger.LogErrorInfo.Exception\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public class LogErrorInfo
    content.vb: Public Class LogErrorInfo
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger.FormDataConverterLogger.LogErrorInfo.ErrorMessage
  commentId: P:Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger.FormDataConverterLogger.LogErrorInfo.ErrorMessage
  id: ErrorMessage
  parent: Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger.FormDataConverterLogger.LogErrorInfo
  langs:
  - csharp
  - vb
  name: ErrorMessage
  nameWithType: FormDataConverterLogger.LogErrorInfo.ErrorMessage
  fullName: Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger.FormDataConverterLogger.LogErrorInfo.ErrorMessage
  type: Property
  source:
    remote:
      path: Framework/Cqrs.WebApi/Formatters/FormMultipart/Infrastructure/Logger/FormDataConverterLogger.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: ErrorMessage
    path: Framework/Cqrs.WebApi/Formatters/FormMultipart/Infrastructure/Logger/FormDataConverterLogger.cs
    startLine: 116
  assemblies:
  - Cqrs.WebApi
  namespace: Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger
  summary: "\nThe details of the error, issue or <xref href=\"Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger.FormDataConverterLogger.LogErrorInfo.Exception\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public string ErrorMessage { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property ErrorMessage As String
  overload: Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger.FormDataConverterLogger.LogErrorInfo.ErrorMessage*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger.FormDataConverterLogger.LogErrorInfo.Exception
  commentId: P:Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger.FormDataConverterLogger.LogErrorInfo.Exception
  id: Exception
  parent: Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger.FormDataConverterLogger.LogErrorInfo
  langs:
  - csharp
  - vb
  name: Exception
  nameWithType: FormDataConverterLogger.LogErrorInfo.Exception
  fullName: Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger.FormDataConverterLogger.LogErrorInfo.Exception
  type: Property
  source:
    remote:
      path: Framework/Cqrs.WebApi/Formatters/FormMultipart/Infrastructure/Logger/FormDataConverterLogger.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Exception
    path: Framework/Cqrs.WebApi/Formatters/FormMultipart/Infrastructure/Logger/FormDataConverterLogger.cs
    startLine: 121
  assemblies:
  - Cqrs.WebApi
  namespace: Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger
  summary: "\nThe <xref href=\"Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger.FormDataConverterLogger.LogErrorInfo.Exception\" data-throw-if-not-resolved=\"false\"></xref> if <xref href=\"Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger.FormDataConverterLogger.LogErrorInfo.IsException\" data-throw-if-not-resolved=\"false\"></xref> is true.\n"
  example: []
  syntax:
    content: public Exception Exception { get; }
    parameters: []
    return:
      type: System.Exception
    content.vb: Public ReadOnly Property Exception As Exception
  overload: Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger.FormDataConverterLogger.LogErrorInfo.Exception*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger.FormDataConverterLogger.LogErrorInfo.IsException
  commentId: P:Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger.FormDataConverterLogger.LogErrorInfo.IsException
  id: IsException
  parent: Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger.FormDataConverterLogger.LogErrorInfo
  langs:
  - csharp
  - vb
  name: IsException
  nameWithType: FormDataConverterLogger.LogErrorInfo.IsException
  fullName: Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger.FormDataConverterLogger.LogErrorInfo.IsException
  type: Property
  source:
    remote:
      path: Framework/Cqrs.WebApi/Formatters/FormMultipart/Infrastructure/Logger/FormDataConverterLogger.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: IsException
    path: Framework/Cqrs.WebApi/Formatters/FormMultipart/Infrastructure/Logger/FormDataConverterLogger.cs
    startLine: 126
  assemblies:
  - Cqrs.WebApi
  namespace: Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger
  summary: "\nIndicates of the error or issue was an exception.\n"
  example: []
  syntax:
    content: public bool IsException { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsException As Boolean
  overload: Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger.FormDataConverterLogger.LogErrorInfo.IsException*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger.FormDataConverterLogger.LogErrorInfo.#ctor(System.String)
  commentId: M:Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger.FormDataConverterLogger.LogErrorInfo.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger.FormDataConverterLogger.LogErrorInfo
  langs:
  - csharp
  - vb
  name: LogErrorInfo(String)
  nameWithType: FormDataConverterLogger.LogErrorInfo.LogErrorInfo(String)
  fullName: Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger.FormDataConverterLogger.LogErrorInfo.LogErrorInfo(System.String)
  type: Constructor
  source:
    remote:
      path: Framework/Cqrs.WebApi/Formatters/FormMultipart/Infrastructure/Logger/FormDataConverterLogger.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: .ctor
    path: Framework/Cqrs.WebApi/Formatters/FormMultipart/Infrastructure/Logger/FormDataConverterLogger.cs
    startLine: 131
  assemblies:
  - Cqrs.WebApi
  namespace: Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger
  summary: "\nInstantiates a new instance of <xref href=\"Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger.FormDataConverterLogger\" data-throw-if-not-resolved=\"false\"></xref> with the specified <code data-dev-comment-type=\"paramref\">errorMessage</code>.\n"
  example: []
  syntax:
    content: public LogErrorInfo(string errorMessage)
    parameters:
    - id: errorMessage
      type: System.String
    content.vb: Public Sub New(errorMessage As String)
  overload: Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger.FormDataConverterLogger.LogErrorInfo.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger.FormDataConverterLogger.LogErrorInfo.#ctor(System.Exception)
  commentId: M:Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger.FormDataConverterLogger.LogErrorInfo.#ctor(System.Exception)
  id: '#ctor(System.Exception)'
  parent: Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger.FormDataConverterLogger.LogErrorInfo
  langs:
  - csharp
  - vb
  name: LogErrorInfo(Exception)
  nameWithType: FormDataConverterLogger.LogErrorInfo.LogErrorInfo(Exception)
  fullName: Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger.FormDataConverterLogger.LogErrorInfo.LogErrorInfo(System.Exception)
  type: Constructor
  source:
    remote:
      path: Framework/Cqrs.WebApi/Formatters/FormMultipart/Infrastructure/Logger/FormDataConverterLogger.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: .ctor
    path: Framework/Cqrs.WebApi/Formatters/FormMultipart/Infrastructure/Logger/FormDataConverterLogger.cs
    startLine: 140
  assemblies:
  - Cqrs.WebApi
  namespace: Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger
  summary: "\nInstantiates a new instance of <xref href=\"Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger.FormDataConverterLogger\" data-throw-if-not-resolved=\"false\"></xref> with the specified <code data-dev-comment-type=\"paramref\">exception</code>\n"
  example: []
  syntax:
    content: public LogErrorInfo(Exception exception)
    parameters:
    - id: exception
      type: System.Exception
    content.vb: Public Sub New(exception As Exception)
  overload: Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger.FormDataConverterLogger.LogErrorInfo.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger.FormDataConverterLogger.LogErrorInfo.Exception
  commentId: P:Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger.FormDataConverterLogger.LogErrorInfo.Exception
- uid: Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger
  commentId: N:Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger
  isExternal: false
  name: Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger
  nameWithType: Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger
  fullName: Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger.FormDataConverterLogger.LogErrorInfo.ErrorMessage*
  commentId: Overload:Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger.FormDataConverterLogger.LogErrorInfo.ErrorMessage
  isExternal: false
  name: ErrorMessage
  nameWithType: FormDataConverterLogger.LogErrorInfo.ErrorMessage
  fullName: Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger.FormDataConverterLogger.LogErrorInfo.ErrorMessage
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger.FormDataConverterLogger.LogErrorInfo.IsException
  commentId: P:Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger.FormDataConverterLogger.LogErrorInfo.IsException
- uid: Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger.FormDataConverterLogger.LogErrorInfo.Exception*
  commentId: Overload:Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger.FormDataConverterLogger.LogErrorInfo.Exception
  isExternal: false
  name: Exception
  nameWithType: FormDataConverterLogger.LogErrorInfo.Exception
  fullName: Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger.FormDataConverterLogger.LogErrorInfo.Exception
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger.FormDataConverterLogger.LogErrorInfo.IsException*
  commentId: Overload:Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger.FormDataConverterLogger.LogErrorInfo.IsException
  isExternal: false
  name: IsException
  nameWithType: FormDataConverterLogger.LogErrorInfo.IsException
  fullName: Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger.FormDataConverterLogger.LogErrorInfo.IsException
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger.FormDataConverterLogger
  commentId: T:Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger.FormDataConverterLogger
  isExternal: false
  name: FormDataConverterLogger
  nameWithType: FormDataConverterLogger
  fullName: Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger.FormDataConverterLogger
- uid: Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger.FormDataConverterLogger.LogErrorInfo.#ctor*
  commentId: Overload:Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger.FormDataConverterLogger.LogErrorInfo.#ctor
  isExternal: false
  name: LogErrorInfo
  nameWithType: FormDataConverterLogger.LogErrorInfo.LogErrorInfo
  fullName: Cqrs.WebApi.Formatters.FormMultipart.Infrastructure.Logger.FormDataConverterLogger.LogErrorInfo.LogErrorInfo
