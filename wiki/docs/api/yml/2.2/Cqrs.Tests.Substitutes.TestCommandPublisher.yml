### YamlMime:ManagedReference
items:
- uid: Cqrs.Tests.Substitutes.TestCommandPublisher
  commentId: T:Cqrs.Tests.Substitutes.TestCommandPublisher
  id: TestCommandPublisher
  parent: Cqrs.Tests.Substitutes
  children:
  - Cqrs.Tests.Substitutes.TestCommandPublisher.#ctor
  - Cqrs.Tests.Substitutes.TestCommandPublisher.Publish``1(``0)
  - Cqrs.Tests.Substitutes.TestCommandPublisher.Publish``1(System.Collections.Generic.IEnumerable{``0})
  - Cqrs.Tests.Substitutes.TestCommandPublisher.Published
  - Cqrs.Tests.Substitutes.TestCommandPublisher.PublishedCommands
  langs:
  - csharp
  - vb
  name: TestCommandPublisher
  nameWithType: TestCommandPublisher
  fullName: Cqrs.Tests.Substitutes.TestCommandPublisher
  type: Class
  source:
    remote:
      path: Framework/Cqrs.Tests/Substitutes/TestCommandPublisher.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: TestCommandPublisher
    path: Framework/Cqrs.Tests/Substitutes/TestCommandPublisher.cs
    startLine: 7
  assemblies:
  - Cqrs.Tests
  namespace: Cqrs.Tests.Substitutes
  syntax:
    content: 'public class TestCommandPublisher : ICommandPublisher<ISingleSignOnToken>'
    content.vb: >-
      Public Class TestCommandPublisher
          Implements ICommandPublisher(Of ISingleSignOnToken)
  inheritance:
  - System.Object
  implements:
  - Cqrs.Commands.ICommandPublisher{Cqrs.Authentication.ISingleSignOnToken}
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Cqrs.Tests.Substitutes.TestCommandPublisher.#ctor
  commentId: M:Cqrs.Tests.Substitutes.TestCommandPublisher.#ctor
  id: '#ctor'
  parent: Cqrs.Tests.Substitutes.TestCommandPublisher
  langs:
  - csharp
  - vb
  name: TestCommandPublisher()
  nameWithType: TestCommandPublisher.TestCommandPublisher()
  fullName: Cqrs.Tests.Substitutes.TestCommandPublisher.TestCommandPublisher()
  type: Constructor
  source:
    remote:
      path: Framework/Cqrs.Tests/Substitutes/TestCommandPublisher.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: .ctor
    path: Framework/Cqrs.Tests/Substitutes/TestCommandPublisher.cs
    startLine: 9
  assemblies:
  - Cqrs.Tests
  namespace: Cqrs.Tests.Substitutes
  syntax:
    content: public TestCommandPublisher()
    content.vb: Public Sub New
  overload: Cqrs.Tests.Substitutes.TestCommandPublisher.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Cqrs.Tests.Substitutes.TestCommandPublisher.Publish``1(``0)
  commentId: M:Cqrs.Tests.Substitutes.TestCommandPublisher.Publish``1(``0)
  id: Publish``1(``0)
  parent: Cqrs.Tests.Substitutes.TestCommandPublisher
  langs:
  - csharp
  - vb
  name: Publish<TCommand>(TCommand)
  nameWithType: TestCommandPublisher.Publish<TCommand>(TCommand)
  fullName: Cqrs.Tests.Substitutes.TestCommandPublisher.Publish<TCommand>(TCommand)
  type: Method
  source:
    remote:
      path: Framework/Cqrs.Tests/Substitutes/TestCommandPublisher.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Publish
    path: Framework/Cqrs.Tests/Substitutes/TestCommandPublisher.cs
    startLine: 14
  assemblies:
  - Cqrs.Tests
  namespace: Cqrs.Tests.Substitutes
  syntax:
    content: 'public void Publish<TCommand>(TCommand command)where TCommand : ICommand<ISingleSignOnToken>'
    parameters:
    - id: command
      type: '{TCommand}'
    typeParameters:
    - id: TCommand
    content.vb: Public Sub Publish(Of TCommand As ICommand(Of ISingleSignOnToken))(command As TCommand)
  overload: Cqrs.Tests.Substitutes.TestCommandPublisher.Publish*
  implements:
  - Cqrs.Commands.ICommandPublisher{Cqrs.Authentication.ISingleSignOnToken}.Publish``1({TCommand})
  nameWithType.vb: TestCommandPublisher.Publish(Of TCommand)(TCommand)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Cqrs.Tests.Substitutes.TestCommandPublisher.Publish(Of TCommand)(TCommand)
  name.vb: Publish(Of TCommand)(TCommand)
- uid: Cqrs.Tests.Substitutes.TestCommandPublisher.Publish``1(System.Collections.Generic.IEnumerable{``0})
  commentId: M:Cqrs.Tests.Substitutes.TestCommandPublisher.Publish``1(System.Collections.Generic.IEnumerable{``0})
  id: Publish``1(System.Collections.Generic.IEnumerable{``0})
  parent: Cqrs.Tests.Substitutes.TestCommandPublisher
  langs:
  - csharp
  - vb
  name: Publish<TCommand>(IEnumerable<TCommand>)
  nameWithType: TestCommandPublisher.Publish<TCommand>(IEnumerable<TCommand>)
  fullName: Cqrs.Tests.Substitutes.TestCommandPublisher.Publish<TCommand>(System.Collections.Generic.IEnumerable<TCommand>)
  type: Method
  source:
    remote:
      path: Framework/Cqrs.Tests/Substitutes/TestCommandPublisher.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Publish
    path: Framework/Cqrs.Tests/Substitutes/TestCommandPublisher.cs
    startLine: 20
  assemblies:
  - Cqrs.Tests
  namespace: Cqrs.Tests.Substitutes
  syntax:
    content: 'public void Publish<TCommand>(IEnumerable<TCommand> commands)where TCommand : ICommand<ISingleSignOnToken>'
    parameters:
    - id: commands
      type: System.Collections.Generic.IEnumerable{{TCommand}}
    typeParameters:
    - id: TCommand
    content.vb: Public Sub Publish(Of TCommand As ICommand(Of ISingleSignOnToken))(commands As IEnumerable(Of TCommand))
  overload: Cqrs.Tests.Substitutes.TestCommandPublisher.Publish*
  implements:
  - Cqrs.Commands.ICommandPublisher{Cqrs.Authentication.ISingleSignOnToken}.Publish``1(System.Collections.Generic.IEnumerable{{TCommand}})
  nameWithType.vb: TestCommandPublisher.Publish(Of TCommand)(IEnumerable(Of TCommand))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Cqrs.Tests.Substitutes.TestCommandPublisher.Publish(Of TCommand)(System.Collections.Generic.IEnumerable(Of TCommand))
  name.vb: Publish(Of TCommand)(IEnumerable(Of TCommand))
- uid: Cqrs.Tests.Substitutes.TestCommandPublisher.Published
  commentId: P:Cqrs.Tests.Substitutes.TestCommandPublisher.Published
  id: Published
  parent: Cqrs.Tests.Substitutes.TestCommandPublisher
  langs:
  - csharp
  - vb
  name: Published
  nameWithType: TestCommandPublisher.Published
  fullName: Cqrs.Tests.Substitutes.TestCommandPublisher.Published
  type: Property
  source:
    remote:
      path: Framework/Cqrs.Tests/Substitutes/TestCommandPublisher.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Published
    path: Framework/Cqrs.Tests/Substitutes/TestCommandPublisher.cs
    startLine: 26
  assemblies:
  - Cqrs.Tests
  namespace: Cqrs.Tests.Substitutes
  syntax:
    content: public int Published { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Published As Integer
  overload: Cqrs.Tests.Substitutes.TestCommandPublisher.Published*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Cqrs.Tests.Substitutes.TestCommandPublisher.PublishedCommands
  commentId: P:Cqrs.Tests.Substitutes.TestCommandPublisher.PublishedCommands
  id: PublishedCommands
  parent: Cqrs.Tests.Substitutes.TestCommandPublisher
  langs:
  - csharp
  - vb
  name: PublishedCommands
  nameWithType: TestCommandPublisher.PublishedCommands
  fullName: Cqrs.Tests.Substitutes.TestCommandPublisher.PublishedCommands
  type: Property
  source:
    remote:
      path: Framework/Cqrs.Tests/Substitutes/TestCommandPublisher.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: PublishedCommands
    path: Framework/Cqrs.Tests/Substitutes/TestCommandPublisher.cs
    startLine: 28
  assemblies:
  - Cqrs.Tests
  namespace: Cqrs.Tests.Substitutes
  syntax:
    content: public List<ICommand<ISingleSignOnToken>> PublishedCommands { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Cqrs.Commands.ICommand{Cqrs.Authentication.ISingleSignOnToken}}
    content.vb: Public ReadOnly Property PublishedCommands As List(Of ICommand(Of ISingleSignOnToken))
  overload: Cqrs.Tests.Substitutes.TestCommandPublisher.PublishedCommands*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Cqrs.Tests.Substitutes
  commentId: N:Cqrs.Tests.Substitutes
  isExternal: false
  name: Cqrs.Tests.Substitutes
  nameWithType: Cqrs.Tests.Substitutes
  fullName: Cqrs.Tests.Substitutes
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Cqrs.Commands.ICommandPublisher{Cqrs.Authentication.ISingleSignOnToken}
  commentId: T:Cqrs.Commands.ICommandPublisher{Cqrs.Authentication.ISingleSignOnToken}
  parent: Cqrs.Commands
  definition: Cqrs.Commands.ICommandPublisher`1
  name: ICommandPublisher<ISingleSignOnToken>
  nameWithType: ICommandPublisher<ISingleSignOnToken>
  fullName: Cqrs.Commands.ICommandPublisher<Cqrs.Authentication.ISingleSignOnToken>
  nameWithType.vb: ICommandPublisher(Of ISingleSignOnToken)
  fullName.vb: Cqrs.Commands.ICommandPublisher(Of Cqrs.Authentication.ISingleSignOnToken)
  name.vb: ICommandPublisher(Of ISingleSignOnToken)
  spec.csharp:
  - uid: Cqrs.Commands.ICommandPublisher`1
    name: ICommandPublisher
    nameWithType: ICommandPublisher
    fullName: Cqrs.Commands.ICommandPublisher
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cqrs.Authentication.ISingleSignOnToken
    name: ISingleSignOnToken
    nameWithType: ISingleSignOnToken
    fullName: Cqrs.Authentication.ISingleSignOnToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Commands.ICommandPublisher`1
    name: ICommandPublisher
    nameWithType: ICommandPublisher
    fullName: Cqrs.Commands.ICommandPublisher
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Cqrs.Authentication.ISingleSignOnToken
    name: ISingleSignOnToken
    nameWithType: ISingleSignOnToken
    fullName: Cqrs.Authentication.ISingleSignOnToken
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Cqrs.Commands.ICommandPublisher`1
  commentId: T:Cqrs.Commands.ICommandPublisher`1
  isExternal: false
  name: ICommandPublisher<TAuthenticationToken>
  nameWithType: ICommandPublisher<TAuthenticationToken>
  fullName: Cqrs.Commands.ICommandPublisher<TAuthenticationToken>
  nameWithType.vb: ICommandPublisher(Of TAuthenticationToken)
  fullName.vb: Cqrs.Commands.ICommandPublisher(Of TAuthenticationToken)
  name.vb: ICommandPublisher(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Commands.ICommandPublisher`1
    name: ICommandPublisher
    nameWithType: ICommandPublisher
    fullName: Cqrs.Commands.ICommandPublisher
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Commands.ICommandPublisher`1
    name: ICommandPublisher
    nameWithType: ICommandPublisher
    fullName: Cqrs.Commands.ICommandPublisher
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Commands
  commentId: N:Cqrs.Commands
  isExternal: false
  name: Cqrs.Commands
  nameWithType: Cqrs.Commands
  fullName: Cqrs.Commands
- uid: Cqrs.Tests.Substitutes.TestCommandPublisher.#ctor*
  commentId: Overload:Cqrs.Tests.Substitutes.TestCommandPublisher.#ctor
  isExternal: false
  name: TestCommandPublisher
  nameWithType: TestCommandPublisher.TestCommandPublisher
  fullName: Cqrs.Tests.Substitutes.TestCommandPublisher.TestCommandPublisher
- uid: Cqrs.Tests.Substitutes.TestCommandPublisher.Publish*
  commentId: Overload:Cqrs.Tests.Substitutes.TestCommandPublisher.Publish
  isExternal: false
  name: Publish
  nameWithType: TestCommandPublisher.Publish
  fullName: Cqrs.Tests.Substitutes.TestCommandPublisher.Publish
- uid: Cqrs.Commands.ICommandPublisher{Cqrs.Authentication.ISingleSignOnToken}.Publish``1({TCommand})
  commentId: M:Cqrs.Commands.ICommandPublisher{Cqrs.Authentication.ISingleSignOnToken}.Publish``1(``0)
  parent: Cqrs.Commands.ICommandPublisher{Cqrs.Authentication.ISingleSignOnToken}
  definition: Cqrs.Commands.ICommandPublisher`1.Publish``1(``0)
  name: Publish<TCommand>(TCommand)
  nameWithType: ICommandPublisher<ISingleSignOnToken>.Publish<TCommand>(TCommand)
  fullName: Cqrs.Commands.ICommandPublisher<Cqrs.Authentication.ISingleSignOnToken>.Publish<TCommand>(TCommand)
  nameWithType.vb: ICommandPublisher(Of ISingleSignOnToken).Publish(Of TCommand)(TCommand)
  fullName.vb: Cqrs.Commands.ICommandPublisher(Of Cqrs.Authentication.ISingleSignOnToken).Publish(Of TCommand)(TCommand)
  name.vb: Publish(Of TCommand)(TCommand)
  spec.csharp:
  - uid: Cqrs.Commands.ICommandPublisher`1.Publish``1(``0)
    name: Publish<TCommand>
    nameWithType: ICommandPublisher<ISingleSignOnToken>.Publish<TCommand>
    fullName: Cqrs.Commands.ICommandPublisher<Cqrs.Authentication.ISingleSignOnToken>.Publish<TCommand>
  - name: (
    nameWithType: (
    fullName: (
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Commands.ICommandPublisher`1.Publish``1(``0)
    name: Publish(Of TCommand)
    nameWithType: ICommandPublisher(Of ISingleSignOnToken).Publish(Of TCommand)
    fullName: Cqrs.Commands.ICommandPublisher(Of Cqrs.Authentication.ISingleSignOnToken).Publish(Of TCommand)
  - name: (
    nameWithType: (
    fullName: (
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: )
    nameWithType: )
    fullName: )
- uid: '{TCommand}'
  commentId: '!:TCommand'
  definition: TCommand
  name: TCommand
  nameWithType: TCommand
  fullName: TCommand
- uid: Cqrs.Commands.ICommandPublisher`1.Publish``1(``0)
  commentId: M:Cqrs.Commands.ICommandPublisher`1.Publish``1(``0)
  isExternal: false
  name: Publish<TCommand>(TCommand)
  nameWithType: ICommandPublisher<TAuthenticationToken>.Publish<TCommand>(TCommand)
  fullName: Cqrs.Commands.ICommandPublisher<TAuthenticationToken>.Publish<TCommand>(TCommand)
  nameWithType.vb: ICommandPublisher(Of TAuthenticationToken).Publish(Of TCommand)(TCommand)
  fullName.vb: Cqrs.Commands.ICommandPublisher(Of TAuthenticationToken).Publish(Of TCommand)(TCommand)
  name.vb: Publish(Of TCommand)(TCommand)
  spec.csharp:
  - uid: Cqrs.Commands.ICommandPublisher`1.Publish``1(``0)
    name: Publish<TCommand>
    nameWithType: ICommandPublisher<TAuthenticationToken>.Publish<TCommand>
    fullName: Cqrs.Commands.ICommandPublisher<TAuthenticationToken>.Publish<TCommand>
  - name: (
    nameWithType: (
    fullName: (
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Commands.ICommandPublisher`1.Publish``1(``0)
    name: Publish(Of TCommand)
    nameWithType: ICommandPublisher(Of TAuthenticationToken).Publish(Of TCommand)
    fullName: Cqrs.Commands.ICommandPublisher(Of TAuthenticationToken).Publish(Of TCommand)
  - name: (
    nameWithType: (
    fullName: (
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: )
    nameWithType: )
    fullName: )
- uid: TCommand
  isExternal: false
  name: TCommand
  nameWithType: TCommand
  fullName: TCommand
- uid: Cqrs.Commands.ICommandPublisher{Cqrs.Authentication.ISingleSignOnToken}.Publish``1(System.Collections.Generic.IEnumerable{{TCommand}})
  commentId: M:Cqrs.Commands.ICommandPublisher{Cqrs.Authentication.ISingleSignOnToken}.Publish``1(System.Collections.Generic.IEnumerable{``0})
  parent: Cqrs.Commands.ICommandPublisher{Cqrs.Authentication.ISingleSignOnToken}
  definition: Cqrs.Commands.ICommandPublisher`1.Publish``1(System.Collections.Generic.IEnumerable{``0})
  name: Publish<TCommand>(IEnumerable<TCommand>)
  nameWithType: ICommandPublisher<ISingleSignOnToken>.Publish<TCommand>(IEnumerable<TCommand>)
  fullName: Cqrs.Commands.ICommandPublisher<Cqrs.Authentication.ISingleSignOnToken>.Publish<TCommand>(System.Collections.Generic.IEnumerable<TCommand>)
  nameWithType.vb: ICommandPublisher(Of ISingleSignOnToken).Publish(Of TCommand)(IEnumerable(Of TCommand))
  fullName.vb: Cqrs.Commands.ICommandPublisher(Of Cqrs.Authentication.ISingleSignOnToken).Publish(Of TCommand)(System.Collections.Generic.IEnumerable(Of TCommand))
  name.vb: Publish(Of TCommand)(IEnumerable(Of TCommand))
  spec.csharp:
  - uid: Cqrs.Commands.ICommandPublisher`1.Publish``1(System.Collections.Generic.IEnumerable{``0})
    name: Publish<TCommand>
    nameWithType: ICommandPublisher<ISingleSignOnToken>.Publish<TCommand>
    fullName: Cqrs.Commands.ICommandPublisher<Cqrs.Authentication.ISingleSignOnToken>.Publish<TCommand>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Commands.ICommandPublisher`1.Publish``1(System.Collections.Generic.IEnumerable{``0})
    name: Publish(Of TCommand)
    nameWithType: ICommandPublisher(Of ISingleSignOnToken).Publish(Of TCommand)
    fullName: Cqrs.Commands.ICommandPublisher(Of Cqrs.Authentication.ISingleSignOnToken).Publish(Of TCommand)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{{TCommand}}
  commentId: T:System.Collections.Generic.IEnumerable{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<TCommand>
  nameWithType: IEnumerable<TCommand>
  fullName: System.Collections.Generic.IEnumerable<TCommand>
  nameWithType.vb: IEnumerable(Of TCommand)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TCommand)
  name.vb: IEnumerable(Of TCommand)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Commands.ICommandPublisher`1.Publish``1(System.Collections.Generic.IEnumerable{``0})
  commentId: M:Cqrs.Commands.ICommandPublisher`1.Publish``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: Publish<TCommand>(IEnumerable<TCommand>)
  nameWithType: ICommandPublisher<TAuthenticationToken>.Publish<TCommand>(IEnumerable<TCommand>)
  fullName: Cqrs.Commands.ICommandPublisher<TAuthenticationToken>.Publish<TCommand>(System.Collections.Generic.IEnumerable<TCommand>)
  nameWithType.vb: ICommandPublisher(Of TAuthenticationToken).Publish(Of TCommand)(IEnumerable(Of TCommand))
  fullName.vb: Cqrs.Commands.ICommandPublisher(Of TAuthenticationToken).Publish(Of TCommand)(System.Collections.Generic.IEnumerable(Of TCommand))
  name.vb: Publish(Of TCommand)(IEnumerable(Of TCommand))
  spec.csharp:
  - uid: Cqrs.Commands.ICommandPublisher`1.Publish``1(System.Collections.Generic.IEnumerable{``0})
    name: Publish<TCommand>
    nameWithType: ICommandPublisher<TAuthenticationToken>.Publish<TCommand>
    fullName: Cqrs.Commands.ICommandPublisher<TAuthenticationToken>.Publish<TCommand>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Commands.ICommandPublisher`1.Publish``1(System.Collections.Generic.IEnumerable{``0})
    name: Publish(Of TCommand)
    nameWithType: ICommandPublisher(Of TAuthenticationToken).Publish(Of TCommand)
    fullName: Cqrs.Commands.ICommandPublisher(Of TAuthenticationToken).Publish(Of TCommand)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Cqrs.Tests.Substitutes.TestCommandPublisher.Published*
  commentId: Overload:Cqrs.Tests.Substitutes.TestCommandPublisher.Published
  isExternal: false
  name: Published
  nameWithType: TestCommandPublisher.Published
  fullName: Cqrs.Tests.Substitutes.TestCommandPublisher.Published
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Cqrs.Tests.Substitutes.TestCommandPublisher.PublishedCommands*
  commentId: Overload:Cqrs.Tests.Substitutes.TestCommandPublisher.PublishedCommands
  isExternal: false
  name: PublishedCommands
  nameWithType: TestCommandPublisher.PublishedCommands
  fullName: Cqrs.Tests.Substitutes.TestCommandPublisher.PublishedCommands
- uid: System.Collections.Generic.List{Cqrs.Commands.ICommand{Cqrs.Authentication.ISingleSignOnToken}}
  commentId: T:System.Collections.Generic.List{Cqrs.Commands.ICommand{Cqrs.Authentication.ISingleSignOnToken}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<ICommand<ISingleSignOnToken>>
  nameWithType: List<ICommand<ISingleSignOnToken>>
  fullName: System.Collections.Generic.List<Cqrs.Commands.ICommand<Cqrs.Authentication.ISingleSignOnToken>>
  nameWithType.vb: List(Of ICommand(Of ISingleSignOnToken))
  fullName.vb: System.Collections.Generic.List(Of Cqrs.Commands.ICommand(Of Cqrs.Authentication.ISingleSignOnToken))
  name.vb: List(Of ICommand(Of ISingleSignOnToken))
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cqrs.Commands.ICommand`1
    name: ICommand
    nameWithType: ICommand
    fullName: Cqrs.Commands.ICommand
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cqrs.Authentication.ISingleSignOnToken
    name: ISingleSignOnToken
    nameWithType: ISingleSignOnToken
    fullName: Cqrs.Authentication.ISingleSignOnToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Cqrs.Commands.ICommand`1
    name: ICommand
    nameWithType: ICommand
    fullName: Cqrs.Commands.ICommand
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Cqrs.Authentication.ISingleSignOnToken
    name: ISingleSignOnToken
    nameWithType: ISingleSignOnToken
    fullName: Cqrs.Authentication.ISingleSignOnToken
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
