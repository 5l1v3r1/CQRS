### YamlMime:ManagedReference
items:
- uid: Cqrs.Azure.BlobStorage.Events.BlobStorageEventStoreConnectionStringFactory
  commentId: T:Cqrs.Azure.BlobStorage.Events.BlobStorageEventStoreConnectionStringFactory
  id: BlobStorageEventStoreConnectionStringFactory
  parent: Cqrs.Azure.BlobStorage.Events
  children:
  - Cqrs.Azure.BlobStorage.Events.BlobStorageEventStoreConnectionStringFactory.#ctor(Cqrs.Configuration.IConfigurationManager,cdmdotnet.Logging.ILogger)
  - Cqrs.Azure.BlobStorage.Events.BlobStorageEventStoreConnectionStringFactory.BlobStorageBaseContainerNameKey
  - Cqrs.Azure.BlobStorage.Events.BlobStorageEventStoreConnectionStringFactory.BlobStorageEventStoreConnectionStringKey
  - Cqrs.Azure.BlobStorage.Events.BlobStorageEventStoreConnectionStringFactory.BlobStorageReadableEventStoreConnectionStringKey
  - Cqrs.Azure.BlobStorage.Events.BlobStorageEventStoreConnectionStringFactory.BlobStorageWritableEventStoreConnectionStringKey
  - Cqrs.Azure.BlobStorage.Events.BlobStorageEventStoreConnectionStringFactory.ConfigurationManager
  - Cqrs.Azure.BlobStorage.Events.BlobStorageEventStoreConnectionStringFactory.GetBaseContainerName
  - Cqrs.Azure.BlobStorage.Events.BlobStorageEventStoreConnectionStringFactory.GetReadableConnectionString
  - Cqrs.Azure.BlobStorage.Events.BlobStorageEventStoreConnectionStringFactory.GetWritableConnectionStrings
  - Cqrs.Azure.BlobStorage.Events.BlobStorageEventStoreConnectionStringFactory.Logger
  langs:
  - csharp
  - vb
  name: BlobStorageEventStoreConnectionStringFactory
  nameWithType: BlobStorageEventStoreConnectionStringFactory
  fullName: Cqrs.Azure.BlobStorage.Events.BlobStorageEventStoreConnectionStringFactory
  type: Class
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.BlobStorage/Events/BlobStorageEventStoreConnectionStringFactory.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: BlobStorageEventStoreConnectionStringFactory
    path: Framework/Azure/Cqrs.Azure.BlobStorage/Events/BlobStorageEventStoreConnectionStringFactory.cs
    startLine: 22
  assemblies:
  - Cqrs.Azure.BlobStorage
  namespace: Cqrs.Azure.BlobStorage.Events
  summary: "\nA factory for getting connection strings and container names for <xref href=\"Cqrs.Events.IEventStore%601\" data-throw-if-not-resolved=\"false\"></xref> access.\nThis factory supports reading and writing from separate storage accounts. Specifically you can have as many different storage accounts as you want to configure when writing.\nThis allows for manual mirroring of data while reading from the fastest/closest location possible.\n"
  example: []
  syntax:
    content: 'public class BlobStorageEventStoreConnectionStringFactory : IBlobStorageStoreConnectionStringFactory, IStorageStoreConnectionStringFactory'
    content.vb: >-
      Public Class BlobStorageEventStoreConnectionStringFactory
          Implements IBlobStorageStoreConnectionStringFactory, IStorageStoreConnectionStringFactory
  inheritance:
  - System.Object
  implements:
  - Cqrs.Azure.BlobStorage.IBlobStorageStoreConnectionStringFactory
  - Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Cqrs.Azure.BlobStorage.Events.BlobStorageEventStoreConnectionStringFactory.BlobStorageReadableEventStoreConnectionStringKey
  commentId: F:Cqrs.Azure.BlobStorage.Events.BlobStorageEventStoreConnectionStringFactory.BlobStorageReadableEventStoreConnectionStringKey
  id: BlobStorageReadableEventStoreConnectionStringKey
  parent: Cqrs.Azure.BlobStorage.Events.BlobStorageEventStoreConnectionStringFactory
  langs:
  - csharp
  - vb
  name: BlobStorageReadableEventStoreConnectionStringKey
  nameWithType: BlobStorageEventStoreConnectionStringFactory.BlobStorageReadableEventStoreConnectionStringKey
  fullName: Cqrs.Azure.BlobStorage.Events.BlobStorageEventStoreConnectionStringFactory.BlobStorageReadableEventStoreConnectionStringKey
  type: Field
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.BlobStorage/Events/BlobStorageEventStoreConnectionStringFactory.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: BlobStorageReadableEventStoreConnectionStringKey
    path: Framework/Azure/Cqrs.Azure.BlobStorage/Events/BlobStorageEventStoreConnectionStringFactory.cs
    startLine: 27
  assemblies:
  - Cqrs.Azure.BlobStorage
  namespace: Cqrs.Azure.BlobStorage.Events
  summary: "\nThe name of the app setting in <xref href=\"Cqrs.Configuration.IConfigurationManager\" data-throw-if-not-resolved=\"false\"></xref> that will have the connection string of the readable storage account if using a separate storage account for reads and writes.\n"
  example: []
  syntax:
    content: public static string BlobStorageReadableEventStoreConnectionStringKey
    return:
      type: System.String
    content.vb: Public Shared BlobStorageReadableEventStoreConnectionStringKey As String
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Cqrs.Azure.BlobStorage.Events.BlobStorageEventStoreConnectionStringFactory.BlobStorageWritableEventStoreConnectionStringKey
  commentId: F:Cqrs.Azure.BlobStorage.Events.BlobStorageEventStoreConnectionStringFactory.BlobStorageWritableEventStoreConnectionStringKey
  id: BlobStorageWritableEventStoreConnectionStringKey
  parent: Cqrs.Azure.BlobStorage.Events.BlobStorageEventStoreConnectionStringFactory
  langs:
  - csharp
  - vb
  name: BlobStorageWritableEventStoreConnectionStringKey
  nameWithType: BlobStorageEventStoreConnectionStringFactory.BlobStorageWritableEventStoreConnectionStringKey
  fullName: Cqrs.Azure.BlobStorage.Events.BlobStorageEventStoreConnectionStringFactory.BlobStorageWritableEventStoreConnectionStringKey
  type: Field
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.BlobStorage/Events/BlobStorageEventStoreConnectionStringFactory.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: BlobStorageWritableEventStoreConnectionStringKey
    path: Framework/Azure/Cqrs.Azure.BlobStorage/Events/BlobStorageEventStoreConnectionStringFactory.cs
    startLine: 33
  assemblies:
  - Cqrs.Azure.BlobStorage
  namespace: Cqrs.Azure.BlobStorage.Events
  summary: "\nThe name of the app setting in <xref href=\"Cqrs.Configuration.IConfigurationManager\" data-throw-if-not-resolved=\"false\"></xref> that will have the connection string of the writeable storage account if using a separate storage account for reads and writes.\nThis value gets appended with a &quot;.1&quot;, &quot;.2&quot; etc allowing you to write to as many different locations as possible.\n"
  example: []
  syntax:
    content: public static string BlobStorageWritableEventStoreConnectionStringKey
    return:
      type: System.String
    content.vb: Public Shared BlobStorageWritableEventStoreConnectionStringKey As String
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Cqrs.Azure.BlobStorage.Events.BlobStorageEventStoreConnectionStringFactory.BlobStorageEventStoreConnectionStringKey
  commentId: F:Cqrs.Azure.BlobStorage.Events.BlobStorageEventStoreConnectionStringFactory.BlobStorageEventStoreConnectionStringKey
  id: BlobStorageEventStoreConnectionStringKey
  parent: Cqrs.Azure.BlobStorage.Events.BlobStorageEventStoreConnectionStringFactory
  langs:
  - csharp
  - vb
  name: BlobStorageEventStoreConnectionStringKey
  nameWithType: BlobStorageEventStoreConnectionStringFactory.BlobStorageEventStoreConnectionStringKey
  fullName: Cqrs.Azure.BlobStorage.Events.BlobStorageEventStoreConnectionStringFactory.BlobStorageEventStoreConnectionStringKey
  type: Field
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.BlobStorage/Events/BlobStorageEventStoreConnectionStringFactory.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: BlobStorageEventStoreConnectionStringKey
    path: Framework/Azure/Cqrs.Azure.BlobStorage/Events/BlobStorageEventStoreConnectionStringFactory.cs
    startLine: 38
  assemblies:
  - Cqrs.Azure.BlobStorage
  namespace: Cqrs.Azure.BlobStorage.Events
  summary: "\nThe name of the app setting in <xref href=\"Cqrs.Configuration.IConfigurationManager\" data-throw-if-not-resolved=\"false\"></xref> that will have the connection string if using a single storage account for both reads and writes.\n"
  example: []
  syntax:
    content: public static string BlobStorageEventStoreConnectionStringKey
    return:
      type: System.String
    content.vb: Public Shared BlobStorageEventStoreConnectionStringKey As String
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Cqrs.Azure.BlobStorage.Events.BlobStorageEventStoreConnectionStringFactory.BlobStorageBaseContainerNameKey
  commentId: F:Cqrs.Azure.BlobStorage.Events.BlobStorageEventStoreConnectionStringFactory.BlobStorageBaseContainerNameKey
  id: BlobStorageBaseContainerNameKey
  parent: Cqrs.Azure.BlobStorage.Events.BlobStorageEventStoreConnectionStringFactory
  langs:
  - csharp
  - vb
  name: BlobStorageBaseContainerNameKey
  nameWithType: BlobStorageEventStoreConnectionStringFactory.BlobStorageBaseContainerNameKey
  fullName: Cqrs.Azure.BlobStorage.Events.BlobStorageEventStoreConnectionStringFactory.BlobStorageBaseContainerNameKey
  type: Field
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.BlobStorage/Events/BlobStorageEventStoreConnectionStringFactory.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: BlobStorageBaseContainerNameKey
    path: Framework/Azure/Cqrs.Azure.BlobStorage/Events/BlobStorageEventStoreConnectionStringFactory.cs
    startLine: 43
  assemblies:
  - Cqrs.Azure.BlobStorage
  namespace: Cqrs.Azure.BlobStorage.Events
  summary: "\nThe name of the app setting in <xref href=\"Cqrs.Configuration.IConfigurationManager\" data-throw-if-not-resolved=\"false\"></xref> that will have the base name of the container used.\n"
  example: []
  syntax:
    content: public static string BlobStorageBaseContainerNameKey
    return:
      type: System.String
    content.vb: Public Shared BlobStorageBaseContainerNameKey As String
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Cqrs.Azure.BlobStorage.Events.BlobStorageEventStoreConnectionStringFactory.ConfigurationManager
  commentId: P:Cqrs.Azure.BlobStorage.Events.BlobStorageEventStoreConnectionStringFactory.ConfigurationManager
  id: ConfigurationManager
  parent: Cqrs.Azure.BlobStorage.Events.BlobStorageEventStoreConnectionStringFactory
  langs:
  - csharp
  - vb
  name: ConfigurationManager
  nameWithType: BlobStorageEventStoreConnectionStringFactory.ConfigurationManager
  fullName: Cqrs.Azure.BlobStorage.Events.BlobStorageEventStoreConnectionStringFactory.ConfigurationManager
  type: Property
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.BlobStorage/Events/BlobStorageEventStoreConnectionStringFactory.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: ConfigurationManager
    path: Framework/Azure/Cqrs.Azure.BlobStorage/Events/BlobStorageEventStoreConnectionStringFactory.cs
    startLine: 48
  assemblies:
  - Cqrs.Azure.BlobStorage
  namespace: Cqrs.Azure.BlobStorage.Events
  summary: "\nGets or sets the <xref href=\"Cqrs.Configuration.IConfigurationManager\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: protected IConfigurationManager ConfigurationManager { get; }
    parameters: []
    return:
      type: Cqrs.Configuration.IConfigurationManager
    content.vb: Protected ReadOnly Property ConfigurationManager As IConfigurationManager
  overload: Cqrs.Azure.BlobStorage.Events.BlobStorageEventStoreConnectionStringFactory.ConfigurationManager*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Cqrs.Azure.BlobStorage.Events.BlobStorageEventStoreConnectionStringFactory.Logger
  commentId: P:Cqrs.Azure.BlobStorage.Events.BlobStorageEventStoreConnectionStringFactory.Logger
  id: Logger
  parent: Cqrs.Azure.BlobStorage.Events.BlobStorageEventStoreConnectionStringFactory
  langs:
  - csharp
  - vb
  name: Logger
  nameWithType: BlobStorageEventStoreConnectionStringFactory.Logger
  fullName: Cqrs.Azure.BlobStorage.Events.BlobStorageEventStoreConnectionStringFactory.Logger
  type: Property
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.BlobStorage/Events/BlobStorageEventStoreConnectionStringFactory.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Logger
    path: Framework/Azure/Cqrs.Azure.BlobStorage/Events/BlobStorageEventStoreConnectionStringFactory.cs
    startLine: 53
  assemblies:
  - Cqrs.Azure.BlobStorage
  namespace: Cqrs.Azure.BlobStorage.Events
  summary: "\nGets or sets the <xref href=\"cdmdotnet.Logging.ILogger\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: protected ILogger Logger { get; }
    parameters: []
    return:
      type: cdmdotnet.Logging.ILogger
    content.vb: Protected ReadOnly Property Logger As ILogger
  overload: Cqrs.Azure.BlobStorage.Events.BlobStorageEventStoreConnectionStringFactory.Logger*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Cqrs.Azure.BlobStorage.Events.BlobStorageEventStoreConnectionStringFactory.#ctor(Cqrs.Configuration.IConfigurationManager,cdmdotnet.Logging.ILogger)
  commentId: M:Cqrs.Azure.BlobStorage.Events.BlobStorageEventStoreConnectionStringFactory.#ctor(Cqrs.Configuration.IConfigurationManager,cdmdotnet.Logging.ILogger)
  id: '#ctor(Cqrs.Configuration.IConfigurationManager,cdmdotnet.Logging.ILogger)'
  parent: Cqrs.Azure.BlobStorage.Events.BlobStorageEventStoreConnectionStringFactory
  langs:
  - csharp
  - vb
  name: BlobStorageEventStoreConnectionStringFactory(IConfigurationManager, ILogger)
  nameWithType: BlobStorageEventStoreConnectionStringFactory.BlobStorageEventStoreConnectionStringFactory(IConfigurationManager, ILogger)
  fullName: Cqrs.Azure.BlobStorage.Events.BlobStorageEventStoreConnectionStringFactory.BlobStorageEventStoreConnectionStringFactory(Cqrs.Configuration.IConfigurationManager, cdmdotnet.Logging.ILogger)
  type: Constructor
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.BlobStorage/Events/BlobStorageEventStoreConnectionStringFactory.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: .ctor
    path: Framework/Azure/Cqrs.Azure.BlobStorage/Events/BlobStorageEventStoreConnectionStringFactory.cs
    startLine: 58
  assemblies:
  - Cqrs.Azure.BlobStorage
  namespace: Cqrs.Azure.BlobStorage.Events
  summary: "\nInstantiates a new instance of <xref href=\"Cqrs.Azure.BlobStorage.Events.BlobStorageEventStoreConnectionStringFactory\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public BlobStorageEventStoreConnectionStringFactory(IConfigurationManager configurationManager, ILogger logger)
    parameters:
    - id: configurationManager
      type: Cqrs.Configuration.IConfigurationManager
    - id: logger
      type: cdmdotnet.Logging.ILogger
    content.vb: Public Sub New(configurationManager As IConfigurationManager, logger As ILogger)
  overload: Cqrs.Azure.BlobStorage.Events.BlobStorageEventStoreConnectionStringFactory.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Cqrs.Azure.BlobStorage.Events.BlobStorageEventStoreConnectionStringFactory.GetWritableConnectionStrings
  commentId: M:Cqrs.Azure.BlobStorage.Events.BlobStorageEventStoreConnectionStringFactory.GetWritableConnectionStrings
  id: GetWritableConnectionStrings
  parent: Cqrs.Azure.BlobStorage.Events.BlobStorageEventStoreConnectionStringFactory
  langs:
  - csharp
  - vb
  name: GetWritableConnectionStrings()
  nameWithType: BlobStorageEventStoreConnectionStringFactory.GetWritableConnectionStrings()
  fullName: Cqrs.Azure.BlobStorage.Events.BlobStorageEventStoreConnectionStringFactory.GetWritableConnectionStrings()
  type: Method
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.BlobStorage/Events/BlobStorageEventStoreConnectionStringFactory.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: GetWritableConnectionStrings
    path: Framework/Azure/Cqrs.Azure.BlobStorage/Events/BlobStorageEventStoreConnectionStringFactory.cs
    startLine: 68
  assemblies:
  - Cqrs.Azure.BlobStorage
  namespace: Cqrs.Azure.BlobStorage.Events
  summary: "\nGets all writeable connection strings. If using a single storage account, then <xref href=\"Cqrs.Azure.BlobStorage.Events.BlobStorageEventStoreConnectionStringFactory.BlobStorageEventStoreConnectionStringKey\" data-throw-if-not-resolved=\"false\"></xref> will most likely be returned.\nIf a value for <xref href=\"Cqrs.Azure.BlobStorage.Events.BlobStorageEventStoreConnectionStringFactory.BlobStorageWritableEventStoreConnectionStringKey\" data-throw-if-not-resolved=\"false\"></xref> is found, it will append &quot;.1&quot;, &quot;.2&quot; etc returning any additionally found connection string values in <xref href=\"Cqrs.Azure.BlobStorage.Events.BlobStorageEventStoreConnectionStringFactory.ConfigurationManager\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public virtual IEnumerable<string> GetWritableConnectionStrings()
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: Public Overridable Function GetWritableConnectionStrings As IEnumerable(Of String)
  overload: Cqrs.Azure.BlobStorage.Events.BlobStorageEventStoreConnectionStringFactory.GetWritableConnectionStrings*
  implements:
  - Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory.GetWritableConnectionStrings
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Cqrs.Azure.BlobStorage.Events.BlobStorageEventStoreConnectionStringFactory.GetReadableConnectionString
  commentId: M:Cqrs.Azure.BlobStorage.Events.BlobStorageEventStoreConnectionStringFactory.GetReadableConnectionString
  id: GetReadableConnectionString
  parent: Cqrs.Azure.BlobStorage.Events.BlobStorageEventStoreConnectionStringFactory
  langs:
  - csharp
  - vb
  name: GetReadableConnectionString()
  nameWithType: BlobStorageEventStoreConnectionStringFactory.GetReadableConnectionString()
  fullName: Cqrs.Azure.BlobStorage.Events.BlobStorageEventStoreConnectionStringFactory.GetReadableConnectionString()
  type: Method
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.BlobStorage/Events/BlobStorageEventStoreConnectionStringFactory.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: GetReadableConnectionString
    path: Framework/Azure/Cqrs.Azure.BlobStorage/Events/BlobStorageEventStoreConnectionStringFactory.cs
    startLine: 111
  assemblies:
  - Cqrs.Azure.BlobStorage
  namespace: Cqrs.Azure.BlobStorage.Events
  summary: "\nGets the readable connection string. If using a single storage account, then <xref href=\"Cqrs.Azure.BlobStorage.Events.BlobStorageEventStoreConnectionStringFactory.BlobStorageEventStoreConnectionStringKey\" data-throw-if-not-resolved=\"false\"></xref> will most likely be returned.\nIf a value for <xref href=\"Cqrs.Azure.BlobStorage.Events.BlobStorageEventStoreConnectionStringFactory.BlobStorageReadableEventStoreConnectionStringKey\" data-throw-if-not-resolved=\"false\"></xref> is found, that will be returned instead.\n"
  example: []
  syntax:
    content: public virtual string GetReadableConnectionString()
    return:
      type: System.String
    content.vb: Public Overridable Function GetReadableConnectionString As String
  overload: Cqrs.Azure.BlobStorage.Events.BlobStorageEventStoreConnectionStringFactory.GetReadableConnectionString*
  implements:
  - Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory.GetReadableConnectionString
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Cqrs.Azure.BlobStorage.Events.BlobStorageEventStoreConnectionStringFactory.GetBaseContainerName
  commentId: M:Cqrs.Azure.BlobStorage.Events.BlobStorageEventStoreConnectionStringFactory.GetBaseContainerName
  id: GetBaseContainerName
  parent: Cqrs.Azure.BlobStorage.Events.BlobStorageEventStoreConnectionStringFactory
  langs:
  - csharp
  - vb
  name: GetBaseContainerName()
  nameWithType: BlobStorageEventStoreConnectionStringFactory.GetBaseContainerName()
  fullName: Cqrs.Azure.BlobStorage.Events.BlobStorageEventStoreConnectionStringFactory.GetBaseContainerName()
  type: Method
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.BlobStorage/Events/BlobStorageEventStoreConnectionStringFactory.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: GetBaseContainerName
    path: Framework/Azure/Cqrs.Azure.BlobStorage/Events/BlobStorageEventStoreConnectionStringFactory.cs
    startLine: 142
  assemblies:
  - Cqrs.Azure.BlobStorage
  namespace: Cqrs.Azure.BlobStorage.Events
  summary: "\nReturns the name of the base contain to be used.\nThis will be the value from <xref href=\"Cqrs.Azure.BlobStorage.Events.BlobStorageEventStoreConnectionStringFactory.ConfigurationManager\" data-throw-if-not-resolved=\"false\"></xref> keyed <xref href=\"Cqrs.Azure.BlobStorage.Events.BlobStorageEventStoreConnectionStringFactory.BlobStorageBaseContainerNameKey\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public virtual string GetBaseContainerName()
    return:
      type: System.String
    content.vb: Public Overridable Function GetBaseContainerName As String
  overload: Cqrs.Azure.BlobStorage.Events.BlobStorageEventStoreConnectionStringFactory.GetBaseContainerName*
  implements:
  - Cqrs.Azure.BlobStorage.IBlobStorageStoreConnectionStringFactory.GetBaseContainerName
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Cqrs.Events.IEventStore`1
  commentId: T:Cqrs.Events.IEventStore`1
  isExternal: false
  name: IEventStore<TAuthenticationToken>
  nameWithType: IEventStore<TAuthenticationToken>
  fullName: Cqrs.Events.IEventStore<TAuthenticationToken>
  nameWithType.vb: IEventStore(Of TAuthenticationToken)
  fullName.vb: Cqrs.Events.IEventStore(Of TAuthenticationToken)
  name.vb: IEventStore(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Events.IEventStore`1
    name: IEventStore
    nameWithType: IEventStore
    fullName: Cqrs.Events.IEventStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Events.IEventStore`1
    name: IEventStore
    nameWithType: IEventStore
    fullName: Cqrs.Events.IEventStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.Events
  commentId: N:Cqrs.Azure.BlobStorage.Events
  isExternal: false
  name: Cqrs.Azure.BlobStorage.Events
  nameWithType: Cqrs.Azure.BlobStorage.Events
  fullName: Cqrs.Azure.BlobStorage.Events
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Cqrs.Azure.BlobStorage.IBlobStorageStoreConnectionStringFactory
  commentId: T:Cqrs.Azure.BlobStorage.IBlobStorageStoreConnectionStringFactory
  parent: Cqrs.Azure.BlobStorage
  isExternal: false
  name: IBlobStorageStoreConnectionStringFactory
  nameWithType: IBlobStorageStoreConnectionStringFactory
  fullName: Cqrs.Azure.BlobStorage.IBlobStorageStoreConnectionStringFactory
- uid: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory
  commentId: T:Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory
  parent: Cqrs.Azure.BlobStorage
  isExternal: false
  name: IStorageStoreConnectionStringFactory
  nameWithType: IStorageStoreConnectionStringFactory
  fullName: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Cqrs.Azure.BlobStorage
  commentId: N:Cqrs.Azure.BlobStorage
  isExternal: false
  name: Cqrs.Azure.BlobStorage
  nameWithType: Cqrs.Azure.BlobStorage
  fullName: Cqrs.Azure.BlobStorage
- uid: Cqrs.Configuration.IConfigurationManager
  commentId: T:Cqrs.Configuration.IConfigurationManager
  parent: Cqrs.Configuration
  isExternal: false
  name: IConfigurationManager
  nameWithType: IConfigurationManager
  fullName: Cqrs.Configuration.IConfigurationManager
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Cqrs.Configuration
  commentId: N:Cqrs.Configuration
  isExternal: false
  name: Cqrs.Configuration
  nameWithType: Cqrs.Configuration
  fullName: Cqrs.Configuration
- uid: Cqrs.Azure.BlobStorage.Events.BlobStorageEventStoreConnectionStringFactory.ConfigurationManager*
  commentId: Overload:Cqrs.Azure.BlobStorage.Events.BlobStorageEventStoreConnectionStringFactory.ConfigurationManager
  isExternal: false
  name: ConfigurationManager
  nameWithType: BlobStorageEventStoreConnectionStringFactory.ConfigurationManager
  fullName: Cqrs.Azure.BlobStorage.Events.BlobStorageEventStoreConnectionStringFactory.ConfigurationManager
- uid: cdmdotnet.Logging.ILogger
  commentId: T:cdmdotnet.Logging.ILogger
  parent: cdmdotnet.Logging
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: cdmdotnet.Logging.ILogger
- uid: Cqrs.Azure.BlobStorage.Events.BlobStorageEventStoreConnectionStringFactory.Logger*
  commentId: Overload:Cqrs.Azure.BlobStorage.Events.BlobStorageEventStoreConnectionStringFactory.Logger
  isExternal: false
  name: Logger
  nameWithType: BlobStorageEventStoreConnectionStringFactory.Logger
  fullName: Cqrs.Azure.BlobStorage.Events.BlobStorageEventStoreConnectionStringFactory.Logger
- uid: cdmdotnet.Logging
  commentId: N:cdmdotnet.Logging
  isExternal: false
  name: cdmdotnet.Logging
  nameWithType: cdmdotnet.Logging
  fullName: cdmdotnet.Logging
- uid: Cqrs.Azure.BlobStorage.Events.BlobStorageEventStoreConnectionStringFactory
  commentId: T:Cqrs.Azure.BlobStorage.Events.BlobStorageEventStoreConnectionStringFactory
  isExternal: false
  name: BlobStorageEventStoreConnectionStringFactory
  nameWithType: BlobStorageEventStoreConnectionStringFactory
  fullName: Cqrs.Azure.BlobStorage.Events.BlobStorageEventStoreConnectionStringFactory
- uid: Cqrs.Azure.BlobStorage.Events.BlobStorageEventStoreConnectionStringFactory.#ctor*
  commentId: Overload:Cqrs.Azure.BlobStorage.Events.BlobStorageEventStoreConnectionStringFactory.#ctor
  isExternal: false
  name: BlobStorageEventStoreConnectionStringFactory
  nameWithType: BlobStorageEventStoreConnectionStringFactory.BlobStorageEventStoreConnectionStringFactory
  fullName: Cqrs.Azure.BlobStorage.Events.BlobStorageEventStoreConnectionStringFactory.BlobStorageEventStoreConnectionStringFactory
- uid: Cqrs.Azure.BlobStorage.Events.BlobStorageEventStoreConnectionStringFactory.BlobStorageEventStoreConnectionStringKey
  commentId: F:Cqrs.Azure.BlobStorage.Events.BlobStorageEventStoreConnectionStringFactory.BlobStorageEventStoreConnectionStringKey
- uid: Cqrs.Azure.BlobStorage.Events.BlobStorageEventStoreConnectionStringFactory.BlobStorageWritableEventStoreConnectionStringKey
  commentId: F:Cqrs.Azure.BlobStorage.Events.BlobStorageEventStoreConnectionStringFactory.BlobStorageWritableEventStoreConnectionStringKey
- uid: Cqrs.Azure.BlobStorage.Events.BlobStorageEventStoreConnectionStringFactory.ConfigurationManager
  commentId: P:Cqrs.Azure.BlobStorage.Events.BlobStorageEventStoreConnectionStringFactory.ConfigurationManager
- uid: Cqrs.Azure.BlobStorage.Events.BlobStorageEventStoreConnectionStringFactory.GetWritableConnectionStrings*
  commentId: Overload:Cqrs.Azure.BlobStorage.Events.BlobStorageEventStoreConnectionStringFactory.GetWritableConnectionStrings
  isExternal: false
  name: GetWritableConnectionStrings
  nameWithType: BlobStorageEventStoreConnectionStringFactory.GetWritableConnectionStrings
  fullName: Cqrs.Azure.BlobStorage.Events.BlobStorageEventStoreConnectionStringFactory.GetWritableConnectionStrings
- uid: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory.GetWritableConnectionStrings
  commentId: M:Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory.GetWritableConnectionStrings
  parent: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory
  isExternal: false
  name: GetWritableConnectionStrings()
  nameWithType: IStorageStoreConnectionStringFactory.GetWritableConnectionStrings()
  fullName: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory.GetWritableConnectionStrings()
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory.GetWritableConnectionStrings
    name: GetWritableConnectionStrings
    nameWithType: IStorageStoreConnectionStringFactory.GetWritableConnectionStrings
    fullName: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory.GetWritableConnectionStrings
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory.GetWritableConnectionStrings
    name: GetWritableConnectionStrings
    nameWithType: IStorageStoreConnectionStringFactory.GetWritableConnectionStrings
    fullName: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory.GetWritableConnectionStrings
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Cqrs.Azure.BlobStorage.Events.BlobStorageEventStoreConnectionStringFactory.BlobStorageReadableEventStoreConnectionStringKey
  commentId: F:Cqrs.Azure.BlobStorage.Events.BlobStorageEventStoreConnectionStringFactory.BlobStorageReadableEventStoreConnectionStringKey
- uid: Cqrs.Azure.BlobStorage.Events.BlobStorageEventStoreConnectionStringFactory.GetReadableConnectionString*
  commentId: Overload:Cqrs.Azure.BlobStorage.Events.BlobStorageEventStoreConnectionStringFactory.GetReadableConnectionString
  isExternal: false
  name: GetReadableConnectionString
  nameWithType: BlobStorageEventStoreConnectionStringFactory.GetReadableConnectionString
  fullName: Cqrs.Azure.BlobStorage.Events.BlobStorageEventStoreConnectionStringFactory.GetReadableConnectionString
- uid: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory.GetReadableConnectionString
  commentId: M:Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory.GetReadableConnectionString
  parent: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory
  isExternal: false
  name: GetReadableConnectionString()
  nameWithType: IStorageStoreConnectionStringFactory.GetReadableConnectionString()
  fullName: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory.GetReadableConnectionString()
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory.GetReadableConnectionString
    name: GetReadableConnectionString
    nameWithType: IStorageStoreConnectionStringFactory.GetReadableConnectionString
    fullName: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory.GetReadableConnectionString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory.GetReadableConnectionString
    name: GetReadableConnectionString
    nameWithType: IStorageStoreConnectionStringFactory.GetReadableConnectionString
    fullName: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory.GetReadableConnectionString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.Events.BlobStorageEventStoreConnectionStringFactory.BlobStorageBaseContainerNameKey
  commentId: F:Cqrs.Azure.BlobStorage.Events.BlobStorageEventStoreConnectionStringFactory.BlobStorageBaseContainerNameKey
- uid: Cqrs.Azure.BlobStorage.Events.BlobStorageEventStoreConnectionStringFactory.GetBaseContainerName*
  commentId: Overload:Cqrs.Azure.BlobStorage.Events.BlobStorageEventStoreConnectionStringFactory.GetBaseContainerName
  isExternal: false
  name: GetBaseContainerName
  nameWithType: BlobStorageEventStoreConnectionStringFactory.GetBaseContainerName
  fullName: Cqrs.Azure.BlobStorage.Events.BlobStorageEventStoreConnectionStringFactory.GetBaseContainerName
- uid: Cqrs.Azure.BlobStorage.IBlobStorageStoreConnectionStringFactory.GetBaseContainerName
  commentId: M:Cqrs.Azure.BlobStorage.IBlobStorageStoreConnectionStringFactory.GetBaseContainerName
  parent: Cqrs.Azure.BlobStorage.IBlobStorageStoreConnectionStringFactory
  isExternal: false
  name: GetBaseContainerName()
  nameWithType: IBlobStorageStoreConnectionStringFactory.GetBaseContainerName()
  fullName: Cqrs.Azure.BlobStorage.IBlobStorageStoreConnectionStringFactory.GetBaseContainerName()
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.IBlobStorageStoreConnectionStringFactory.GetBaseContainerName
    name: GetBaseContainerName
    nameWithType: IBlobStorageStoreConnectionStringFactory.GetBaseContainerName
    fullName: Cqrs.Azure.BlobStorage.IBlobStorageStoreConnectionStringFactory.GetBaseContainerName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.IBlobStorageStoreConnectionStringFactory.GetBaseContainerName
    name: GetBaseContainerName
    nameWithType: IBlobStorageStoreConnectionStringFactory.GetBaseContainerName
    fullName: Cqrs.Azure.BlobStorage.IBlobStorageStoreConnectionStringFactory.GetBaseContainerName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
