### YamlMime:ManagedReference
items:
- uid: Cqrs.Ninject.Akka.Configuration.AkkaModule`1
  commentId: T:Cqrs.Ninject.Akka.Configuration.AkkaModule`1
  id: AkkaModule`1
  parent: Cqrs.Ninject.Akka.Configuration
  children:
  - Cqrs.Ninject.Akka.Configuration.AkkaModule`1.Load
  langs:
  - csharp
  - vb
  name: AkkaModule<TAuthenticationToken>
  nameWithType: AkkaModule<TAuthenticationToken>
  fullName: Cqrs.Ninject.Akka.Configuration.AkkaModule<TAuthenticationToken>
  type: Class
  source:
    remote:
      path: Framework/Ninject/Cqrs.Ninject.Akka/Configuration/AkkaModule.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: AkkaModule
    path: Framework/Ninject/Cqrs.Ninject.Akka/Configuration/AkkaModule.cs
    startLine: 25
  assemblies:
  - Cqrs.Ninject.Akka
  namespace: Cqrs.Ninject.Akka.Configuration
  summary: "\nA <xref href=\"Ninject.Modules.INinjectModule\" data-throw-if-not-resolved=\"false\"></xref> that wires up many of the prerequisites for running CQRS.NET with Akka.NET\n"
  example: []
  syntax:
    content: 'public class AkkaModule<TAuthenticationToken> : ResolvableModule'
    typeParameters:
    - id: TAuthenticationToken
      description: The <xref href="System.Type" data-throw-if-not-resolved="false"></xref> of the authentication token.
    content.vb: >-
      Public Class AkkaModule(Of TAuthenticationToken)

          Inherits ResolvableModule
  inheritance:
  - System.Object
  - Cqrs.Ninject.Configuration.ResolvableModule
  inheritedMembers:
  - Cqrs.Ninject.Configuration.ResolvableModule.Resolve``1
  - Cqrs.Ninject.Configuration.ResolvableModule.Resolve(Type)
  - Cqrs.Ninject.Configuration.ResolvableModule.IsRegistered``1
  - Cqrs.Ninject.Configuration.ResolvableModule.IsRegistered(Type)
  nameWithType.vb: AkkaModule(Of TAuthenticationToken)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Cqrs.Ninject.Akka.Configuration.AkkaModule(Of TAuthenticationToken)
  name.vb: AkkaModule(Of TAuthenticationToken)
- uid: Cqrs.Ninject.Akka.Configuration.AkkaModule`1.Load
  commentId: M:Cqrs.Ninject.Akka.Configuration.AkkaModule`1.Load
  id: Load
  parent: Cqrs.Ninject.Akka.Configuration.AkkaModule`1
  langs:
  - csharp
  - vb
  name: Load()
  nameWithType: AkkaModule<TAuthenticationToken>.Load()
  fullName: Cqrs.Ninject.Akka.Configuration.AkkaModule<TAuthenticationToken>.Load()
  type: Method
  source:
    remote:
      path: Framework/Ninject/Cqrs.Ninject.Akka/Configuration/AkkaModule.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Load
    path: Framework/Ninject/Cqrs.Ninject.Akka/Configuration/AkkaModule.cs
    startLine: 32
  assemblies:
  - Cqrs.Ninject.Akka
  namespace: Cqrs.Ninject.Akka.Configuration
  summary: "\nLoads the module into the kernel.\n"
  example: []
  syntax:
    content: public override void Load()
    content.vb: Public Overrides Sub Load
  overload: Cqrs.Ninject.Akka.Configuration.AkkaModule`1.Load*
  nameWithType.vb: AkkaModule(Of TAuthenticationToken).Load()
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Cqrs.Ninject.Akka.Configuration.AkkaModule(Of TAuthenticationToken).Load()
references:
- uid: Ninject.Modules.INinjectModule
  commentId: T:Ninject.Modules.INinjectModule
  parent: Ninject.Modules
  isExternal: true
  name: INinjectModule
  nameWithType: INinjectModule
  fullName: Ninject.Modules.INinjectModule
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Cqrs.Ninject.Akka.Configuration
  commentId: N:Cqrs.Ninject.Akka.Configuration
  isExternal: false
  name: Cqrs.Ninject.Akka.Configuration
  nameWithType: Cqrs.Ninject.Akka.Configuration
  fullName: Cqrs.Ninject.Akka.Configuration
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Cqrs.Ninject.Configuration.ResolvableModule
  commentId: T:Cqrs.Ninject.Configuration.ResolvableModule
  parent: Cqrs.Ninject.Configuration
  isExternal: false
  name: ResolvableModule
  nameWithType: ResolvableModule
  fullName: Cqrs.Ninject.Configuration.ResolvableModule
- uid: Cqrs.Ninject.Configuration.ResolvableModule.Resolve``1
  commentId: M:Cqrs.Ninject.Configuration.ResolvableModule.Resolve``1
  parent: Cqrs.Ninject.Configuration.ResolvableModule
  isExternal: false
  name: Resolve<T>()
  nameWithType: ResolvableModule.Resolve<T>()
  fullName: Cqrs.Ninject.Configuration.ResolvableModule.Resolve<T>()
  nameWithType.vb: ResolvableModule.Resolve(Of T)()
  fullName.vb: Cqrs.Ninject.Configuration.ResolvableModule.Resolve(Of T)()
  name.vb: Resolve(Of T)()
  spec.csharp:
  - uid: Cqrs.Ninject.Configuration.ResolvableModule.Resolve``1
    name: Resolve<T>
    nameWithType: ResolvableModule.Resolve<T>
    fullName: Cqrs.Ninject.Configuration.ResolvableModule.Resolve<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Ninject.Configuration.ResolvableModule.Resolve``1
    name: Resolve(Of T)
    nameWithType: ResolvableModule.Resolve(Of T)
    fullName: Cqrs.Ninject.Configuration.ResolvableModule.Resolve(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Ninject.Configuration.ResolvableModule.Resolve(Type)
  commentId: M:Cqrs.Ninject.Configuration.ResolvableModule.Resolve(Type)
  parent: Cqrs.Ninject.Configuration.ResolvableModule
  isExternal: true
  name: Resolve(Type)
  nameWithType: ResolvableModule.Resolve(Type)
  fullName: Cqrs.Ninject.Configuration.ResolvableModule.Resolve(Type)
  spec.csharp:
  - uid: Cqrs.Ninject.Configuration.ResolvableModule.Resolve(Type)
    name: Resolve
    nameWithType: ResolvableModule.Resolve
    fullName: Cqrs.Ninject.Configuration.ResolvableModule.Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: Type
    name: Type
    nameWithType: Type
    fullName: Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Ninject.Configuration.ResolvableModule.Resolve(Type)
    name: Resolve
    nameWithType: ResolvableModule.Resolve
    fullName: Cqrs.Ninject.Configuration.ResolvableModule.Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: Type
    name: Type
    nameWithType: Type
    fullName: Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Ninject.Configuration.ResolvableModule.IsRegistered``1
  commentId: M:Cqrs.Ninject.Configuration.ResolvableModule.IsRegistered``1
  parent: Cqrs.Ninject.Configuration.ResolvableModule
  isExternal: false
  name: IsRegistered<T>()
  nameWithType: ResolvableModule.IsRegistered<T>()
  fullName: Cqrs.Ninject.Configuration.ResolvableModule.IsRegistered<T>()
  nameWithType.vb: ResolvableModule.IsRegistered(Of T)()
  fullName.vb: Cqrs.Ninject.Configuration.ResolvableModule.IsRegistered(Of T)()
  name.vb: IsRegistered(Of T)()
  spec.csharp:
  - uid: Cqrs.Ninject.Configuration.ResolvableModule.IsRegistered``1
    name: IsRegistered<T>
    nameWithType: ResolvableModule.IsRegistered<T>
    fullName: Cqrs.Ninject.Configuration.ResolvableModule.IsRegistered<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Ninject.Configuration.ResolvableModule.IsRegistered``1
    name: IsRegistered(Of T)
    nameWithType: ResolvableModule.IsRegistered(Of T)
    fullName: Cqrs.Ninject.Configuration.ResolvableModule.IsRegistered(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Ninject.Configuration.ResolvableModule.IsRegistered(Type)
  commentId: M:Cqrs.Ninject.Configuration.ResolvableModule.IsRegistered(Type)
  parent: Cqrs.Ninject.Configuration.ResolvableModule
  isExternal: true
  name: IsRegistered(Type)
  nameWithType: ResolvableModule.IsRegistered(Type)
  fullName: Cqrs.Ninject.Configuration.ResolvableModule.IsRegistered(Type)
  spec.csharp:
  - uid: Cqrs.Ninject.Configuration.ResolvableModule.IsRegistered(Type)
    name: IsRegistered
    nameWithType: ResolvableModule.IsRegistered
    fullName: Cqrs.Ninject.Configuration.ResolvableModule.IsRegistered
  - name: (
    nameWithType: (
    fullName: (
  - uid: Type
    name: Type
    nameWithType: Type
    fullName: Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Ninject.Configuration.ResolvableModule.IsRegistered(Type)
    name: IsRegistered
    nameWithType: ResolvableModule.IsRegistered
    fullName: Cqrs.Ninject.Configuration.ResolvableModule.IsRegistered
  - name: (
    nameWithType: (
    fullName: (
  - uid: Type
    name: Type
    nameWithType: Type
    fullName: Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Ninject.Modules
  commentId: N:Ninject.Modules
  isExternal: false
  name: Ninject.Modules
  nameWithType: Ninject.Modules
  fullName: Ninject.Modules
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Cqrs.Ninject.Configuration
  commentId: N:Cqrs.Ninject.Configuration
  isExternal: false
  name: Cqrs.Ninject.Configuration
  nameWithType: Cqrs.Ninject.Configuration
  fullName: Cqrs.Ninject.Configuration
- uid: Cqrs.Ninject.Akka.Configuration.AkkaModule`1.Load*
  commentId: Overload:Cqrs.Ninject.Akka.Configuration.AkkaModule`1.Load
  isExternal: false
  name: Load
  nameWithType: AkkaModule<TAuthenticationToken>.Load
  fullName: Cqrs.Ninject.Akka.Configuration.AkkaModule<TAuthenticationToken>.Load
  nameWithType.vb: AkkaModule(Of TAuthenticationToken).Load
  fullName.vb: Cqrs.Ninject.Akka.Configuration.AkkaModule(Of TAuthenticationToken).Load
