<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classCqrs_1_1Hosts_1_1CoreHost" kind="class" language="C#" prot="public" abstract="yes">
    <compoundname>Cqrs::Hosts::CoreHost</compoundname>
    <derivedcompoundref refid="classCqrs_1_1Azure_1_1ConfigurationManager_1_1TelemetryCoreHost" prot="public" virt="non-virtual">Cqrs.Azure.ConfigurationManager.TelemetryCoreHost&lt; TAuthenticationToken &gt;</derivedcompoundref>
    <templateparamlist>
      <param>
        <type>TAuthenticationToken</type>
      </param>
    </templateparamlist>
      <sectiondef kind="property">
      <memberdef kind="property" id="classCqrs_1_1Hosts_1_1CoreHost_a768172344b47e2011878cf22466b18e3_1a768172344b47e2011878cf22466b18e3" prot="protected" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>abstract <ref refid="interfaceCqrs_1_1Configuration_1_1IConfigurationManager" kindref="compound">IConfigurationManager</ref></type>
        <definition>abstract IConfigurationManager Cqrs.Hosts.CoreHost&lt; TAuthenticationToken &gt;.ConfigurationManager</definition>
        <argsstring></argsstring>
        <name>ConfigurationManager</name>
        <briefdescription>
<para>The IConfigurationManager that can be use before the DependencyResolver.Current is set. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/a99f043f4d1af837/Framework/Cqrs/Hosts/CoreHost.cs" line="29" column="1" bodyfile="/opt/buildAgent/work/a99f043f4d1af837/Framework/Cqrs/Hosts/CoreHost.cs" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="classCqrs_1_1Hosts_1_1CoreHost_a7bfb4acd3b84a95d341b57cc28388023_1a7bfb4acd3b84a95d341b57cc28388023" prot="protected" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="yes" privatesettable="no" protectedsettable="no">
        <type>Type []</type>
        <definition>Type [] Cqrs.Hosts.CoreHost&lt; TAuthenticationToken &gt;.HandlerTypes</definition>
        <argsstring></argsstring>
        <name>HandlerTypes</name>
        <briefdescription>
<para>Each Type will be traced back to it&apos;s assembly, and that assembly will be scanned for other handlers to auto register. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/a99f043f4d1af837/Framework/Cqrs/Hosts/CoreHost.cs" line="34" column="1" bodyfile="/opt/buildAgent/work/a99f043f4d1af837/Framework/Cqrs/Hosts/CoreHost.cs" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="classCqrs_1_1Hosts_1_1CoreHost_a43800973db69575a947f16c9f3e12c8b_1a43800973db69575a947f16c9f3e12c8b" prot="protected" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="yes" protectedsettable="no">
        <type><ref refid="interfaceCqrs_1_1Events_1_1IEventReceiver" kindref="compound">IEventReceiver</ref>&lt; TAuthenticationToken &gt;</type>
        <definition>IEventReceiver&lt;TAuthenticationToken&gt; Cqrs.Hosts.CoreHost&lt; TAuthenticationToken &gt;.EventBus</definition>
        <argsstring></argsstring>
        <name>EventBus</name>
        <briefdescription>
<para>The IEventReceiver that will be configured to receive <ref refid="" kindref="compound">events</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/a99f043f4d1af837/Framework/Cqrs/Hosts/CoreHost.cs" line="39" column="1" bodyfile="/opt/buildAgent/work/a99f043f4d1af837/Framework/Cqrs/Hosts/CoreHost.cs" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="classCqrs_1_1Hosts_1_1CoreHost_a3d9121f200c8bb6b1cfe1d93ae96461e_1a3d9121f200c8bb6b1cfe1d93ae96461e" prot="protected" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="yes" protectedsettable="no">
        <type><ref refid="interfaceCqrs_1_1Commands_1_1ICommandReceiver" kindref="compound">ICommandReceiver</ref>&lt; TAuthenticationToken &gt;</type>
        <definition>ICommandReceiver&lt;TAuthenticationToken&gt; Cqrs.Hosts.CoreHost&lt; TAuthenticationToken &gt;.CommandBus</definition>
        <argsstring></argsstring>
        <name>CommandBus</name>
        <briefdescription>
<para>The ICommandReceiver that will be configured to receive <ref refid="" kindref="compound">commands</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/a99f043f4d1af837/Framework/Cqrs/Hosts/CoreHost.cs" line="44" column="1" bodyfile="/opt/buildAgent/work/a99f043f4d1af837/Framework/Cqrs/Hosts/CoreHost.cs" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="classCqrs_1_1Hosts_1_1CoreHost_a098b8ab87f83dd6519e36b9838fd6e2e_1a098b8ab87f83dd6519e36b9838fd6e2e" prot="protected" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="yes" privatesettable="no" protectedsettable="no">
        <type>string</type>
        <definition>string Cqrs.Hosts.CoreHost&lt; TAuthenticationToken &gt;.TelemetryName</definition>
        <argsstring></argsstring>
        <name>TelemetryName</name>
        <briefdescription>
<para>The hosts telemetry name if telemetry is configured </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/a99f043f4d1af837/Framework/Cqrs/Hosts/CoreHost.cs" line="49" column="1" bodyfile="/opt/buildAgent/work/a99f043f4d1af837/Framework/Cqrs/Hosts/CoreHost.cs" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="classCqrs_1_1Hosts_1_1CoreHost_ac67d2efe8657b335feb997a0dd5aa6b0_1ac67d2efe8657b335feb997a0dd5aa6b0" prot="protected" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="yes" protectedsettable="no">
        <type>ICorrelationIdHelper</type>
        <definition>ICorrelationIdHelper Cqrs.Hosts.CoreHost&lt; TAuthenticationToken &gt;.CorrelationIdHelper</definition>
        <argsstring></argsstring>
        <name>CorrelationIdHelper</name>
        <briefdescription>
<para>The ICorrelationIdHelper that will be used when starting and stopping the host. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/a99f043f4d1af837/Framework/Cqrs/Hosts/CoreHost.cs" line="54" column="1" bodyfile="/opt/buildAgent/work/a99f043f4d1af837/Framework/Cqrs/Hosts/CoreHost.cs" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="classCqrs_1_1Hosts_1_1CoreHost_a7eca7bf35000d2c5b41b88b636907be3_1a7eca7bf35000d2c5b41b88b636907be3" prot="protected" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="yes" protectedsettable="no">
        <type>ILogger</type>
        <definition>ILogger Cqrs.Hosts.CoreHost&lt; TAuthenticationToken &gt;.Logger</definition>
        <argsstring></argsstring>
        <name>Logger</name>
        <briefdescription>
<para>The ILogger that will be used when starting and stopping the host. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/a99f043f4d1af837/Framework/Cqrs/Hosts/CoreHost.cs" line="59" column="1" bodyfile="/opt/buildAgent/work/a99f043f4d1af837/Framework/Cqrs/Hosts/CoreHost.cs" bodystart="59" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classCqrs_1_1Hosts_1_1CoreHost_aa1f88ad96bd3f1680e18550299cd6f69_1aa1f88ad96bd3f1680e18550299cd6f69" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Cqrs.Hosts.CoreHost&lt; TAuthenticationToken &gt;.CoreHost</definition>
        <argsstring>()</argsstring>
        <name>CoreHost</name>
        <briefdescription>
<para>Instantiate a new instance of a <ref refid="classCqrs_1_1Hosts_1_1CoreHost_aa1f88ad96bd3f1680e18550299cd6f69_1aa1f88ad96bd3f1680e18550299cd6f69" kindref="member">CoreHost&lt;TAuthenticationToken&gt;</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/a99f043f4d1af837/Framework/Cqrs/Hosts/CoreHost.cs" line="65" column="1" bodyfile="/opt/buildAgent/work/a99f043f4d1af837/Framework/Cqrs/Hosts/CoreHost.cs" bodystart="65" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Hosts_1_1CoreHost_a8035dd83f62ec6184854e7e833be5db9_1a8035dd83f62ec6184854e7e833be5db9" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Cqrs.Hosts.CoreHost&lt; TAuthenticationToken &gt;.ConfigureTelemetry</definition>
        <argsstring>()</argsstring>
        <name>ConfigureTelemetry</name>
        <reimplementedby refid="classCqrs_1_1Azure_1_1ConfigurationManager_1_1TelemetryCoreHost_abcb4e14f33f2b85b95a2b80c4555748a_1abcb4e14f33f2b85b95a2b80c4555748a">ConfigureTelemetry</reimplementedby>
        <briefdescription>
<para>When overridden, allows you to configure Telemetry </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/a99f043f4d1af837/Framework/Cqrs/Hosts/CoreHost.cs" line="93" column="1" bodyfile="/opt/buildAgent/work/a99f043f4d1af837/Framework/Cqrs/Hosts/CoreHost.cs" bodystart="93" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Hosts_1_1CoreHost_a220ba43ac810c074c8881e8f598ff746_1a220ba43ac810c074c8881e8f598ff746" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Cqrs.Hosts.CoreHost&lt; TAuthenticationToken &gt;.PrepareSecurityProtocol</definition>
        <argsstring>()</argsstring>
        <name>PrepareSecurityProtocol</name>
        <reimplementedby refid="classCqrs_1_1Azure_1_1ConfigurationManager_1_1TelemetryCoreHost_a0e920d0139b12319847f8ec1deb12f3b_1a0e920d0139b12319847f8ec1deb12f3b">PrepareSecurityProtocol</reimplementedby>
        <briefdescription>
<para>Sets the ServicePointManager.SecurityProtocol to SecurityProtocolType.Tls. You might want to override this to .net 4.5 and above to SecurityProtocolType.Tls12 | SecurityProtocolType.Tls11 | SecurityProtocolType.Tls </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/a99f043f4d1af837/Framework/Cqrs/Hosts/CoreHost.cs" line="112" column="1" bodyfile="/opt/buildAgent/work/a99f043f4d1af837/Framework/Cqrs/Hosts/CoreHost.cs" bodystart="112" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Hosts_1_1CoreHost_aa01932c1199967babe19c3059e86f513_1aa01932c1199967babe19c3059e86f513" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Cqrs.Hosts.CoreHost&lt; TAuthenticationToken &gt;.Prepare</definition>
        <argsstring>()</argsstring>
        <name>Prepare</name>
        <reimplementedby refid="classCqrs_1_1Azure_1_1ConfigurationManager_1_1TelemetryCoreHost_a620cb9c1ceb78a8f23b45ae749199fd4_1a620cb9c1ceb78a8f23b45ae749199fd4">Prepare</reimplementedby>
        <briefdescription>
<para>Prepare the host before registering handlers and starting the host. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/a99f043f4d1af837/Framework/Cqrs/Hosts/CoreHost.cs" line="120" column="1" bodyfile="/opt/buildAgent/work/a99f043f4d1af837/Framework/Cqrs/Hosts/CoreHost.cs" bodystart="120" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Hosts_1_1CoreHost_a9e6067f83498b6eca0cd7cdc175fd943_1a9e6067f83498b6eca0cd7cdc175fd943" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>abstract void</type>
        <definition>abstract void Cqrs.Hosts.CoreHost&lt; TAuthenticationToken &gt;.ConfigureDefaultDependencyResolver</definition>
        <argsstring>()</argsstring>
        <name>ConfigureDefaultDependencyResolver</name>
        <reimplementedby refid="classCqrs_1_1Ninject_1_1Azure_1_1Wcf_1_1CqrsWebHost_a7ea9f096372888eae726284c4a7c320a_1a7ea9f096372888eae726284c4a7c320a">ConfigureDefaultDependencyResolver</reimplementedby>
        <briefdescription>
<para>Configure the DependencyResolver. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/a99f043f4d1af837/Framework/Cqrs/Hosts/CoreHost.cs" line="140" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Hosts_1_1CoreHost_ad8abd7b3c7f6970e106ba42c2745beda_1ad8abd7b3c7f6970e106ba42c2745beda" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Cqrs.Hosts.CoreHost&lt; TAuthenticationToken &gt;.Start</definition>
        <argsstring>()</argsstring>
        <name>Start</name>
        <reimplementedby refid="classCqrs_1_1Azure_1_1ConfigurationManager_1_1TelemetryCoreHost_a37c8e3f829743d6be1108b3fd8a5a3e7_1a37c8e3f829743d6be1108b3fd8a5a3e7">Start</reimplementedby>
        <briefdescription>
<para>Start the host post preparing and registering handlers. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/a99f043f4d1af837/Framework/Cqrs/Hosts/CoreHost.cs" line="145" column="1" bodyfile="/opt/buildAgent/work/a99f043f4d1af837/Framework/Cqrs/Hosts/CoreHost.cs" bodystart="145" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Hosts_1_1CoreHost_afd0a6b149a8b5ce0e9be016f422f06f9_1afd0a6b149a8b5ce0e9be016f422f06f9" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Cqrs.Hosts.CoreHost&lt; TAuthenticationToken &gt;.ManuallyRegisterEventHandler&lt; TMessage &gt;</definition>
        <argsstring>(Action&lt; TMessage &gt; eventHandler, bool holdMessageLock=true)</argsstring>
        <name>ManuallyRegisterEventHandler&lt; TMessage &gt;</name>
        <param>
          <type>Action&lt; TMessage &gt;</type>
          <declname>eventHandler</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>holdMessageLock</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Register an event handler that will listen and respond to events. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eventHandler</parametername>
</parameternamelist>
<parameterdescription>
<para>The event handler to call</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>holdMessageLock</parametername>
</parameternamelist>
<parameterdescription>
<para>If false, this will spin off another thread. This is a bad performance impact. Strongly suggest you use lock renewing instead... which is configuration based... so even better.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/a99f043f4d1af837/Framework/Cqrs/Hosts/CoreHost.cs" line="166" column="1" bodyfile="/opt/buildAgent/work/a99f043f4d1af837/Framework/Cqrs/Hosts/CoreHost.cs" bodystart="166" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Hosts_1_1CoreHost_a834781c47df7220f4b62a90d0333ab18_1a834781c47df7220f4b62a90d0333ab18" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Cqrs.Hosts.CoreHost&lt; TAuthenticationToken &gt;.ManuallyRegisterCommandHandler&lt; TMessage &gt;</definition>
        <argsstring>(Action&lt; TMessage &gt; commandHandler, bool holdMessageLock=true)</argsstring>
        <name>ManuallyRegisterCommandHandler&lt; TMessage &gt;</name>
        <param>
          <type>Action&lt; TMessage &gt;</type>
          <declname>commandHandler</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>holdMessageLock</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Register an command handler that will listen and respond to commands. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>commandHandler</parametername>
</parameternamelist>
<parameterdescription>
<para>The command handler to call</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>holdMessageLock</parametername>
</parameternamelist>
<parameterdescription>
<para>If false, this will spin off another thread. This is a bad performance impact. Strongly suggest you use lock renewing instead... which is configuration based... so even better.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/a99f043f4d1af837/Framework/Cqrs/Hosts/CoreHost.cs" line="178" column="1" bodyfile="/opt/buildAgent/work/a99f043f4d1af837/Framework/Cqrs/Hosts/CoreHost.cs" bodystart="178" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Hosts_1_1CoreHost_af743bda749d5b95aecb4ee4a4e2a263f_1af743bda749d5b95aecb4ee4a4e2a263f" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Cqrs.Hosts.CoreHost&lt; TAuthenticationToken &gt;.StartBusRegistrar</definition>
        <argsstring>()</argsstring>
        <name>StartBusRegistrar</name>
        <briefdescription>
<para>Start the BusRegistrar by calling BusRegistrar.Register(System.Type[]) passing <ref refid="classCqrs_1_1Hosts_1_1CoreHost_a7bfb4acd3b84a95d341b57cc28388023_1a7bfb4acd3b84a95d341b57cc28388023" kindref="member">HandlerTypes</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/a99f043f4d1af837/Framework/Cqrs/Hosts/CoreHost.cs" line="188" column="1" bodyfile="/opt/buildAgent/work/a99f043f4d1af837/Framework/Cqrs/Hosts/CoreHost.cs" bodystart="188" bodyend="192"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classCqrs_1_1Hosts_1_1CoreHost_a118553f5aa11e7fe07fce1d899528fa6_1a118553f5aa11e7fe07fce1d899528fa6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Cqrs.Hosts.CoreHost&lt; TAuthenticationToken &gt;.Run</definition>
        <argsstring>(Action handlerRegistation=null)</argsstring>
        <name>Run</name>
        <reimplementedby refid="classCqrs_1_1Azure_1_1ConfigurationManager_1_1TelemetryCoreHost_a1d7406fe5dd09d6d6e449522a0a2f637_1a1d7406fe5dd09d6d6e449522a0a2f637">Run</reimplementedby>
        <param>
          <type>Action</type>
          <declname>handlerRegistation</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
<para>Calls <ref refid="classCqrs_1_1Hosts_1_1CoreHost_aa01932c1199967babe19c3059e86f513_1aa01932c1199967babe19c3059e86f513" kindref="member">Prepare</ref>, <emphasis>handlerRegistation</emphasis>  and then <ref refid="classCqrs_1_1Hosts_1_1CoreHost_ad8abd7b3c7f6970e106ba42c2745beda_1ad8abd7b3c7f6970e106ba42c2745beda" kindref="member">Start</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/buildAgent/work/a99f043f4d1af837/Framework/Cqrs/Hosts/CoreHost.cs" line="100" column="1" bodyfile="/opt/buildAgent/work/a99f043f4d1af837/Framework/Cqrs/Hosts/CoreHost.cs" bodystart="100" bodyend="106"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Configure and start command and event handlers in a host </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1849">
        <label>Cqrs::Azure::WebJobs::CqrsJobHost&lt; TAuthenticationToken &gt;</label>
        <link refid="classCqrs_1_1Azure_1_1WebJobs_1_1CqrsJobHost"/>
        <childnode refid="1848" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1850">
        <label>Cqrs::Ninject::Azure::Wcf::CqrsWebHost&lt; TAuthenticationToken &gt;</label>
        <link refid="classCqrs_1_1Ninject_1_1Azure_1_1Wcf_1_1CqrsWebHost"/>
        <childnode refid="1848" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1848">
        <label>Cqrs::Azure::ConfigurationManager::TelemetryCoreHost&lt; TAuthenticationToken &gt;</label>
        <link refid="classCqrs_1_1Azure_1_1ConfigurationManager_1_1TelemetryCoreHost"/>
        <childnode refid="1847" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1847">
        <label>Cqrs.Hosts.CoreHost&lt; TAuthenticationToken &gt;</label>
        <link refid="classCqrs_1_1Hosts_1_1CoreHost"/>
      </node>
    </inheritancegraph>
    <location file="/opt/buildAgent/work/a99f043f4d1af837/Framework/Cqrs/Hosts/CoreHost.cs" line="25" column="1" bodyfile="/opt/buildAgent/work/a99f043f4d1af837/Framework/Cqrs/Hosts/CoreHost.cs" bodystart="24" bodyend="193"/>
    <listofallmembers>
      <member refid="classCqrs_1_1Hosts_1_1CoreHost_a3d9121f200c8bb6b1cfe1d93ae96461e_1a3d9121f200c8bb6b1cfe1d93ae96461e" prot="protected" virt="non-virtual"><scope>Cqrs::Hosts::CoreHost</scope><name>CommandBus</name></member>
      <member refid="classCqrs_1_1Hosts_1_1CoreHost_a768172344b47e2011878cf22466b18e3_1a768172344b47e2011878cf22466b18e3" prot="protected" virt="non-virtual"><scope>Cqrs::Hosts::CoreHost</scope><name>ConfigurationManager</name></member>
      <member refid="classCqrs_1_1Hosts_1_1CoreHost_a9e6067f83498b6eca0cd7cdc175fd943_1a9e6067f83498b6eca0cd7cdc175fd943" prot="protected" virt="pure-virtual"><scope>Cqrs::Hosts::CoreHost</scope><name>ConfigureDefaultDependencyResolver</name></member>
      <member refid="classCqrs_1_1Hosts_1_1CoreHost_a8035dd83f62ec6184854e7e833be5db9_1a8035dd83f62ec6184854e7e833be5db9" prot="protected" virt="virtual"><scope>Cqrs::Hosts::CoreHost</scope><name>ConfigureTelemetry</name></member>
      <member refid="classCqrs_1_1Hosts_1_1CoreHost_aa1f88ad96bd3f1680e18550299cd6f69_1aa1f88ad96bd3f1680e18550299cd6f69" prot="protected" virt="non-virtual"><scope>Cqrs::Hosts::CoreHost</scope><name>CoreHost</name></member>
      <member refid="classCqrs_1_1Hosts_1_1CoreHost_ac67d2efe8657b335feb997a0dd5aa6b0_1ac67d2efe8657b335feb997a0dd5aa6b0" prot="protected" virt="non-virtual"><scope>Cqrs::Hosts::CoreHost</scope><name>CorrelationIdHelper</name></member>
      <member refid="classCqrs_1_1Hosts_1_1CoreHost_a43800973db69575a947f16c9f3e12c8b_1a43800973db69575a947f16c9f3e12c8b" prot="protected" virt="non-virtual"><scope>Cqrs::Hosts::CoreHost</scope><name>EventBus</name></member>
      <member refid="classCqrs_1_1Hosts_1_1CoreHost_a7bfb4acd3b84a95d341b57cc28388023_1a7bfb4acd3b84a95d341b57cc28388023" prot="protected" virt="non-virtual"><scope>Cqrs::Hosts::CoreHost</scope><name>HandlerTypes</name></member>
      <member refid="classCqrs_1_1Hosts_1_1CoreHost_a7eca7bf35000d2c5b41b88b636907be3_1a7eca7bf35000d2c5b41b88b636907be3" prot="protected" virt="non-virtual"><scope>Cqrs::Hosts::CoreHost</scope><name>Logger</name></member>
      <member refid="classCqrs_1_1Hosts_1_1CoreHost_a834781c47df7220f4b62a90d0333ab18_1a834781c47df7220f4b62a90d0333ab18" prot="protected" virt="virtual"><scope>Cqrs::Hosts::CoreHost</scope><name>ManuallyRegisterCommandHandler&lt; TMessage &gt;</name></member>
      <member refid="classCqrs_1_1Hosts_1_1CoreHost_afd0a6b149a8b5ce0e9be016f422f06f9_1afd0a6b149a8b5ce0e9be016f422f06f9" prot="protected" virt="virtual"><scope>Cqrs::Hosts::CoreHost</scope><name>ManuallyRegisterEventHandler&lt; TMessage &gt;</name></member>
      <member refid="classCqrs_1_1Hosts_1_1CoreHost_aa01932c1199967babe19c3059e86f513_1aa01932c1199967babe19c3059e86f513" prot="protected" virt="virtual"><scope>Cqrs::Hosts::CoreHost</scope><name>Prepare</name></member>
      <member refid="classCqrs_1_1Hosts_1_1CoreHost_a220ba43ac810c074c8881e8f598ff746_1a220ba43ac810c074c8881e8f598ff746" prot="protected" virt="virtual"><scope>Cqrs::Hosts::CoreHost</scope><name>PrepareSecurityProtocol</name></member>
      <member refid="classCqrs_1_1Hosts_1_1CoreHost_a118553f5aa11e7fe07fce1d899528fa6_1a118553f5aa11e7fe07fce1d899528fa6" prot="public" virt="virtual"><scope>Cqrs::Hosts::CoreHost</scope><name>Run</name></member>
      <member refid="classCqrs_1_1Hosts_1_1CoreHost_ad8abd7b3c7f6970e106ba42c2745beda_1ad8abd7b3c7f6970e106ba42c2745beda" prot="protected" virt="virtual"><scope>Cqrs::Hosts::CoreHost</scope><name>Start</name></member>
      <member refid="classCqrs_1_1Hosts_1_1CoreHost_af743bda749d5b95aecb4ee4a4e2a263f_1af743bda749d5b95aecb4ee4a4e2a263f" prot="protected" virt="virtual"><scope>Cqrs::Hosts::CoreHost</scope><name>StartBusRegistrar</name></member>
      <member refid="classCqrs_1_1Hosts_1_1CoreHost_a098b8ab87f83dd6519e36b9838fd6e2e_1a098b8ab87f83dd6519e36b9838fd6e2e" prot="protected" virt="non-virtual"><scope>Cqrs::Hosts::CoreHost</scope><name>TelemetryName</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
