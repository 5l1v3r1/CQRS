### YamlMime:ManagedReference
items:
- uid: Cqrs.Azure.BlobStorage.Events.BlobStorageEventStore`1.RawBlobStorageEventStore
  commentId: T:Cqrs.Azure.BlobStorage.Events.BlobStorageEventStore`1.RawBlobStorageEventStore
  id: BlobStorageEventStore`1.RawBlobStorageEventStore
  parent: Cqrs.Azure.BlobStorage.Events
  children:
  - Cqrs.Azure.BlobStorage.Events.BlobStorageEventStore`1.RawBlobStorageEventStore.#ctor(cdmdotnet.Logging.ILogger,Cqrs.Azure.BlobStorage.IBlobStorageStoreConnectionStringFactory)
  - Cqrs.Azure.BlobStorage.Events.BlobStorageEventStore`1.RawBlobStorageEventStore.AddToCorrelationFolder(Cqrs.Events.EventData)
  langs:
  - csharp
  - vb
  name: BlobStorageEventStore<TAuthenticationToken>.RawBlobStorageEventStore
  nameWithType: BlobStorageEventStore<TAuthenticationToken>.RawBlobStorageEventStore
  fullName: Cqrs.Azure.BlobStorage.Events.BlobStorageEventStore<TAuthenticationToken>.RawBlobStorageEventStore
  type: Class
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.BlobStorage/Events/BlobStorageEventStore.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: RawBlobStorageEventStore
    path: Framework/Azure/Cqrs.Azure.BlobStorage/Events/BlobStorageEventStore.cs
    startLine: 70
  assemblies:
  - Cqrs.Azure.BlobStorage
  namespace: Cqrs.Azure.BlobStorage.Events
  syntax:
    content: 'public class RawBlobStorageEventStore : BlobStorageStore<EventData>, IEnumerable<EventData>, IEnumerable'
    content.vb: >-
      Public Class RawBlobStorageEventStore

          Inherits BlobStorageStore(Of EventData)

          Implements IEnumerable(Of EventData), IEnumerable
  inheritance:
  - System.Object
  - Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}
  - Cqrs.Azure.BlobStorage.BlobStorageStore{Cqrs.Events.EventData}
  implements:
  - System.Collections.Generic.IEnumerable{Cqrs.Events.EventData}
  - System.Collections.IEnumerable
  inheritedMembers:
  - Cqrs.Azure.BlobStorage.BlobStorageStore{Cqrs.Events.EventData}.GetEnumerator
  - Cqrs.Azure.BlobStorage.BlobStorageStore{Cqrs.Events.EventData}.Expression
  - Cqrs.Azure.BlobStorage.BlobStorageStore{Cqrs.Events.EventData}.ElementType
  - Cqrs.Azure.BlobStorage.BlobStorageStore{Cqrs.Events.EventData}.Provider
  - Cqrs.Azure.BlobStorage.BlobStorageStore{Cqrs.Events.EventData}.AsyncSaveData``1(Cqrs.Events.EventData,System.Func{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob,{TResult}},System.Func{Cqrs.Events.EventData,System.String})
  - Cqrs.Azure.BlobStorage.BlobStorageStore{Cqrs.Events.EventData}.Add(Cqrs.Events.EventData)
  - Cqrs.Azure.BlobStorage.BlobStorageStore{Cqrs.Events.EventData}.Destroy(Cqrs.Events.EventData)
  - Cqrs.Azure.BlobStorage.BlobStorageStore{Cqrs.Events.EventData}.RemoveAll
  - Cqrs.Azure.BlobStorage.BlobStorageStore{Cqrs.Events.EventData}.Update(Cqrs.Events.EventData)
  - Cqrs.Azure.BlobStorage.BlobStorageStore{Cqrs.Events.EventData}.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String,System.Boolean)
  - Cqrs.Azure.BlobStorage.BlobStorageStore{Cqrs.Events.EventData}.OpenStreamsForReading(System.Func{Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob,System.Boolean},System.String,System.String)
  - Cqrs.Azure.BlobStorage.BlobStorageStore{Cqrs.Events.EventData}.GetBlobReference(Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer,System.String)
  - Cqrs.Azure.BlobStorage.BlobStorageStore{Cqrs.Events.EventData}.GetByName(System.String)
  - Cqrs.Azure.BlobStorage.BlobStorageStore{Cqrs.Events.EventData}.GetByFolder(System.String)
  - Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.WritableCollection
  - Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.ReadableStorageAccount
  - Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Logger
  - Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.GetContainerName
  - Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.IsContainerPublic
  - Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.DefaultSettings
  - Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Initialise(Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory)
  - Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.GetEnumerator
  - Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.System#Collections#IEnumerable#GetEnumerator
  - Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Expression
  - Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.ElementType
  - Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Provider
  - Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Dispose
  - Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Add(Cqrs.Events.EventData)
  - Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Add(System.Collections.Generic.IEnumerable{Cqrs.Events.EventData})
  - Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Destroy(Cqrs.Events.EventData)
  - Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.RemoveAll
  - Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Update(Cqrs.Events.EventData)
  - Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String,System.Boolean)
  - Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.GetSafeSourceName(System.String)
  - Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.GetSafeSourceName(System.String,System.Boolean)
  - Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.AzureStorageRetryPolicy
  - Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Deserialise(System.IO.Stream)
  - Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Deserialise(System.String)
  - Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Serialise(Cqrs.Events.EventData)
  - Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.GetSerialisationSettings
  - Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.GetSerialiser
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Collections.Generic.IEnumerable{Cqrs.Events.EventData}.Cqrs.Sql.DataStores.SqlDataStoreExtensions.Single``2
  nameWithType.vb: BlobStorageEventStore(Of TAuthenticationToken).RawBlobStorageEventStore
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Cqrs.Azure.BlobStorage.Events.BlobStorageEventStore(Of TAuthenticationToken).RawBlobStorageEventStore
  name.vb: BlobStorageEventStore(Of TAuthenticationToken).RawBlobStorageEventStore
- uid: Cqrs.Azure.BlobStorage.Events.BlobStorageEventStore`1.RawBlobStorageEventStore.#ctor(cdmdotnet.Logging.ILogger,Cqrs.Azure.BlobStorage.IBlobStorageStoreConnectionStringFactory)
  commentId: M:Cqrs.Azure.BlobStorage.Events.BlobStorageEventStore`1.RawBlobStorageEventStore.#ctor(cdmdotnet.Logging.ILogger,Cqrs.Azure.BlobStorage.IBlobStorageStoreConnectionStringFactory)
  id: '#ctor(cdmdotnet.Logging.ILogger,Cqrs.Azure.BlobStorage.IBlobStorageStoreConnectionStringFactory)'
  parent: Cqrs.Azure.BlobStorage.Events.BlobStorageEventStore`1.RawBlobStorageEventStore
  langs:
  - csharp
  - vb
  name: RawBlobStorageEventStore(ILogger, IBlobStorageStoreConnectionStringFactory)
  nameWithType: BlobStorageEventStore<TAuthenticationToken>.RawBlobStorageEventStore.RawBlobStorageEventStore(ILogger, IBlobStorageStoreConnectionStringFactory)
  fullName: Cqrs.Azure.BlobStorage.Events.BlobStorageEventStore<TAuthenticationToken>.RawBlobStorageEventStore.RawBlobStorageEventStore(cdmdotnet.Logging.ILogger, Cqrs.Azure.BlobStorage.IBlobStorageStoreConnectionStringFactory)
  type: Constructor
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.BlobStorage/Events/BlobStorageEventStore.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: .ctor
    path: Framework/Azure/Cqrs.Azure.BlobStorage/Events/BlobStorageEventStore.cs
    startLine: 76
  assemblies:
  - Cqrs.Azure.BlobStorage
  namespace: Cqrs.Azure.BlobStorage.Events
  summary: "\nInitializes a new instance of the <xref href=\"Cqrs.Azure.BlobStorage.Events.BlobStorageEventStore%601.RawBlobStorageEventStore\" data-throw-if-not-resolved=\"false\"></xref> class using the specified container.\n"
  example: []
  syntax:
    content: public RawBlobStorageEventStore(ILogger logger, IBlobStorageStoreConnectionStringFactory blobStorageEventStoreConnectionStringFactory)
    parameters:
    - id: logger
      type: cdmdotnet.Logging.ILogger
    - id: blobStorageEventStoreConnectionStringFactory
      type: Cqrs.Azure.BlobStorage.IBlobStorageStoreConnectionStringFactory
    content.vb: Public Sub New(logger As ILogger, blobStorageEventStoreConnectionStringFactory As IBlobStorageStoreConnectionStringFactory)
  overload: Cqrs.Azure.BlobStorage.Events.BlobStorageEventStore`1.RawBlobStorageEventStore.#ctor*
  nameWithType.vb: BlobStorageEventStore(Of TAuthenticationToken).RawBlobStorageEventStore.RawBlobStorageEventStore(ILogger, IBlobStorageStoreConnectionStringFactory)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Cqrs.Azure.BlobStorage.Events.BlobStorageEventStore(Of TAuthenticationToken).RawBlobStorageEventStore.RawBlobStorageEventStore(cdmdotnet.Logging.ILogger, Cqrs.Azure.BlobStorage.IBlobStorageStoreConnectionStringFactory)
- uid: Cqrs.Azure.BlobStorage.Events.BlobStorageEventStore`1.RawBlobStorageEventStore.AddToCorrelationFolder(Cqrs.Events.EventData)
  commentId: M:Cqrs.Azure.BlobStorage.Events.BlobStorageEventStore`1.RawBlobStorageEventStore.AddToCorrelationFolder(Cqrs.Events.EventData)
  id: AddToCorrelationFolder(Cqrs.Events.EventData)
  parent: Cqrs.Azure.BlobStorage.Events.BlobStorageEventStore`1.RawBlobStorageEventStore
  langs:
  - csharp
  - vb
  name: AddToCorrelationFolder(EventData)
  nameWithType: BlobStorageEventStore<TAuthenticationToken>.RawBlobStorageEventStore.AddToCorrelationFolder(EventData)
  fullName: Cqrs.Azure.BlobStorage.Events.BlobStorageEventStore<TAuthenticationToken>.RawBlobStorageEventStore.AddToCorrelationFolder(Cqrs.Events.EventData)
  type: Method
  source:
    remote:
      path: Framework/Azure/Cqrs.Azure.BlobStorage/Events/BlobStorageEventStore.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: AddToCorrelationFolder
    path: Framework/Azure/Cqrs.Azure.BlobStorage/Events/BlobStorageEventStore.cs
    startLine: 88
  assemblies:
  - Cqrs.Azure.BlobStorage
  namespace: Cqrs.Azure.BlobStorage.Events
  syntax:
    content: public void AddToCorrelationFolder(EventData data)
    parameters:
    - id: data
      type: Cqrs.Events.EventData
    content.vb: Public Sub AddToCorrelationFolder(data As EventData)
  overload: Cqrs.Azure.BlobStorage.Events.BlobStorageEventStore`1.RawBlobStorageEventStore.AddToCorrelationFolder*
  nameWithType.vb: BlobStorageEventStore(Of TAuthenticationToken).RawBlobStorageEventStore.AddToCorrelationFolder(EventData)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Cqrs.Azure.BlobStorage.Events.BlobStorageEventStore(Of TAuthenticationToken).RawBlobStorageEventStore.AddToCorrelationFolder(Cqrs.Events.EventData)
references:
- uid: Cqrs.Azure.BlobStorage.Events
  commentId: N:Cqrs.Azure.BlobStorage.Events
  isExternal: false
  name: Cqrs.Azure.BlobStorage.Events
  nameWithType: Cqrs.Azure.BlobStorage.Events
  fullName: Cqrs.Azure.BlobStorage.Events
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}
  commentId: T:Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}
  parent: Cqrs.Azure.BlobStorage
  definition: Cqrs.Azure.BlobStorage.StorageStore`2
  name: StorageStore<EventData, CloudBlobContainer>
  nameWithType: StorageStore<EventData, CloudBlobContainer>
  fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Events.EventData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>
  nameWithType.vb: StorageStore(Of EventData, CloudBlobContainer)
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Events.EventData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer)
  name.vb: StorageStore(Of EventData, CloudBlobContainer)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2
    name: StorageStore
    nameWithType: StorageStore
    fullName: Cqrs.Azure.BlobStorage.StorageStore
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cqrs.Events.EventData
    name: EventData
    nameWithType: EventData
    fullName: Cqrs.Events.EventData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
    name: CloudBlobContainer
    nameWithType: CloudBlobContainer
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2
    name: StorageStore
    nameWithType: StorageStore
    fullName: Cqrs.Azure.BlobStorage.StorageStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Cqrs.Events.EventData
    name: EventData
    nameWithType: EventData
    fullName: Cqrs.Events.EventData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
    name: CloudBlobContainer
    nameWithType: CloudBlobContainer
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.BlobStorageStore{Cqrs.Events.EventData}
  commentId: T:Cqrs.Azure.BlobStorage.BlobStorageStore{Cqrs.Events.EventData}
  parent: Cqrs.Azure.BlobStorage
  definition: Cqrs.Azure.BlobStorage.BlobStorageStore`1
  name: BlobStorageStore<EventData>
  nameWithType: BlobStorageStore<EventData>
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<Cqrs.Events.EventData>
  nameWithType.vb: BlobStorageStore(Of EventData)
  fullName.vb: Cqrs.Azure.BlobStorage.BlobStorageStore(Of Cqrs.Events.EventData)
  name.vb: BlobStorageStore(Of EventData)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1
    name: BlobStorageStore
    nameWithType: BlobStorageStore
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStore
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cqrs.Events.EventData
    name: EventData
    nameWithType: EventData
    fullName: Cqrs.Events.EventData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1
    name: BlobStorageStore
    nameWithType: BlobStorageStore
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Cqrs.Events.EventData
    name: EventData
    nameWithType: EventData
    fullName: Cqrs.Events.EventData
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{Cqrs.Events.EventData}
  commentId: T:System.Collections.Generic.IEnumerable{Cqrs.Events.EventData}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<EventData>
  nameWithType: IEnumerable<EventData>
  fullName: System.Collections.Generic.IEnumerable<Cqrs.Events.EventData>
  nameWithType.vb: IEnumerable(Of EventData)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Cqrs.Events.EventData)
  name.vb: IEnumerable(Of EventData)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cqrs.Events.EventData
    name: EventData
    nameWithType: EventData
    fullName: Cqrs.Events.EventData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Cqrs.Events.EventData
    name: EventData
    nameWithType: EventData
    fullName: Cqrs.Events.EventData
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: Cqrs.Azure.BlobStorage.BlobStorageStore{Cqrs.Events.EventData}.GetEnumerator
  commentId: M:Cqrs.Azure.BlobStorage.BlobStorageStore{Cqrs.Events.EventData}.GetEnumerator
  parent: Cqrs.Azure.BlobStorage.BlobStorageStore{Cqrs.Events.EventData}
  definition: Cqrs.Azure.BlobStorage.BlobStorageStore`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: BlobStorageStore<EventData>.GetEnumerator()
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<Cqrs.Events.EventData>.GetEnumerator()
  nameWithType.vb: BlobStorageStore(Of EventData).GetEnumerator()
  fullName.vb: Cqrs.Azure.BlobStorage.BlobStorageStore(Of Cqrs.Events.EventData).GetEnumerator()
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.GetEnumerator
    name: GetEnumerator
    nameWithType: BlobStorageStore<EventData>.GetEnumerator
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<Cqrs.Events.EventData>.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.GetEnumerator
    name: GetEnumerator
    nameWithType: BlobStorageStore(Of EventData).GetEnumerator
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStore(Of Cqrs.Events.EventData).GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.BlobStorageStore{Cqrs.Events.EventData}.Expression
  commentId: P:Cqrs.Azure.BlobStorage.BlobStorageStore{Cqrs.Events.EventData}.Expression
  parent: Cqrs.Azure.BlobStorage.BlobStorageStore{Cqrs.Events.EventData}
  definition: Cqrs.Azure.BlobStorage.BlobStorageStore`1.Expression
  name: Expression
  nameWithType: BlobStorageStore<EventData>.Expression
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<Cqrs.Events.EventData>.Expression
  nameWithType.vb: BlobStorageStore(Of EventData).Expression
  fullName.vb: Cqrs.Azure.BlobStorage.BlobStorageStore(Of Cqrs.Events.EventData).Expression
- uid: Cqrs.Azure.BlobStorage.BlobStorageStore{Cqrs.Events.EventData}.ElementType
  commentId: P:Cqrs.Azure.BlobStorage.BlobStorageStore{Cqrs.Events.EventData}.ElementType
  parent: Cqrs.Azure.BlobStorage.BlobStorageStore{Cqrs.Events.EventData}
  definition: Cqrs.Azure.BlobStorage.BlobStorageStore`1.ElementType
  name: ElementType
  nameWithType: BlobStorageStore<EventData>.ElementType
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<Cqrs.Events.EventData>.ElementType
  nameWithType.vb: BlobStorageStore(Of EventData).ElementType
  fullName.vb: Cqrs.Azure.BlobStorage.BlobStorageStore(Of Cqrs.Events.EventData).ElementType
- uid: Cqrs.Azure.BlobStorage.BlobStorageStore{Cqrs.Events.EventData}.Provider
  commentId: P:Cqrs.Azure.BlobStorage.BlobStorageStore{Cqrs.Events.EventData}.Provider
  parent: Cqrs.Azure.BlobStorage.BlobStorageStore{Cqrs.Events.EventData}
  definition: Cqrs.Azure.BlobStorage.BlobStorageStore`1.Provider
  name: Provider
  nameWithType: BlobStorageStore<EventData>.Provider
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<Cqrs.Events.EventData>.Provider
  nameWithType.vb: BlobStorageStore(Of EventData).Provider
  fullName.vb: Cqrs.Azure.BlobStorage.BlobStorageStore(Of Cqrs.Events.EventData).Provider
- uid: Cqrs.Azure.BlobStorage.BlobStorageStore{Cqrs.Events.EventData}.AsyncSaveData``1(Cqrs.Events.EventData,System.Func{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob,{TResult}},System.Func{Cqrs.Events.EventData,System.String})
  commentId: M:Cqrs.Azure.BlobStorage.BlobStorageStore{Cqrs.Events.EventData}.AsyncSaveData``1(Cqrs.Events.EventData,System.Func{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob,``0},System.Func{Cqrs.Events.EventData,System.String})
  parent: Cqrs.Azure.BlobStorage.BlobStorageStore{Cqrs.Events.EventData}
  definition: Cqrs.Azure.BlobStorage.BlobStorageStore`1.AsyncSaveData``1(`0,System.Func{`0,Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob,``0},System.Func{`0,System.String})
  name: AsyncSaveData<TResult>(EventData, Func<EventData, CloudBlockBlob, TResult>, Func<EventData, String>)
  nameWithType: BlobStorageStore<EventData>.AsyncSaveData<TResult>(EventData, Func<EventData, CloudBlockBlob, TResult>, Func<EventData, String>)
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<Cqrs.Events.EventData>.AsyncSaveData<TResult>(Cqrs.Events.EventData, System.Func<Cqrs.Events.EventData, Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob, TResult>, System.Func<Cqrs.Events.EventData, System.String>)
  nameWithType.vb: BlobStorageStore(Of EventData).AsyncSaveData(Of TResult)(EventData, Func(Of EventData, CloudBlockBlob, TResult), Func(Of EventData, String))
  fullName.vb: Cqrs.Azure.BlobStorage.BlobStorageStore(Of Cqrs.Events.EventData).AsyncSaveData(Of TResult)(Cqrs.Events.EventData, System.Func(Of Cqrs.Events.EventData, Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob, TResult), System.Func(Of Cqrs.Events.EventData, System.String))
  name.vb: AsyncSaveData(Of TResult)(EventData, Func(Of EventData, CloudBlockBlob, TResult), Func(Of EventData, String))
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.AsyncSaveData``1(`0,System.Func{`0,Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob,``0},System.Func{`0,System.String})
    name: AsyncSaveData<TResult>
    nameWithType: BlobStorageStore<EventData>.AsyncSaveData<TResult>
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<Cqrs.Events.EventData>.AsyncSaveData<TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Events.EventData
    name: EventData
    nameWithType: EventData
    fullName: Cqrs.Events.EventData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cqrs.Events.EventData
    name: EventData
    nameWithType: EventData
    fullName: Cqrs.Events.EventData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob
    name: CloudBlockBlob
    nameWithType: CloudBlockBlob
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cqrs.Events.EventData
    name: EventData
    nameWithType: EventData
    fullName: Cqrs.Events.EventData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.AsyncSaveData``1(`0,System.Func{`0,Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob,``0},System.Func{`0,System.String})
    name: AsyncSaveData(Of TResult)
    nameWithType: BlobStorageStore(Of EventData).AsyncSaveData(Of TResult)
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStore(Of Cqrs.Events.EventData).AsyncSaveData(Of TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Events.EventData
    name: EventData
    nameWithType: EventData
    fullName: Cqrs.Events.EventData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Cqrs.Events.EventData
    name: EventData
    nameWithType: EventData
    fullName: Cqrs.Events.EventData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob
    name: CloudBlockBlob
    nameWithType: CloudBlockBlob
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Cqrs.Events.EventData
    name: EventData
    nameWithType: EventData
    fullName: Cqrs.Events.EventData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.BlobStorageStore{Cqrs.Events.EventData}.Add(Cqrs.Events.EventData)
  commentId: M:Cqrs.Azure.BlobStorage.BlobStorageStore{Cqrs.Events.EventData}.Add(Cqrs.Events.EventData)
  parent: Cqrs.Azure.BlobStorage.BlobStorageStore{Cqrs.Events.EventData}
  definition: Cqrs.Azure.BlobStorage.BlobStorageStore`1.Add(`0)
  name: Add(EventData)
  nameWithType: BlobStorageStore<EventData>.Add(EventData)
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<Cqrs.Events.EventData>.Add(Cqrs.Events.EventData)
  nameWithType.vb: BlobStorageStore(Of EventData).Add(EventData)
  fullName.vb: Cqrs.Azure.BlobStorage.BlobStorageStore(Of Cqrs.Events.EventData).Add(Cqrs.Events.EventData)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.Add(`0)
    name: Add
    nameWithType: BlobStorageStore<EventData>.Add
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<Cqrs.Events.EventData>.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Events.EventData
    name: EventData
    nameWithType: EventData
    fullName: Cqrs.Events.EventData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.Add(`0)
    name: Add
    nameWithType: BlobStorageStore(Of EventData).Add
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStore(Of Cqrs.Events.EventData).Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Events.EventData
    name: EventData
    nameWithType: EventData
    fullName: Cqrs.Events.EventData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.BlobStorageStore{Cqrs.Events.EventData}.Destroy(Cqrs.Events.EventData)
  commentId: M:Cqrs.Azure.BlobStorage.BlobStorageStore{Cqrs.Events.EventData}.Destroy(Cqrs.Events.EventData)
  parent: Cqrs.Azure.BlobStorage.BlobStorageStore{Cqrs.Events.EventData}
  definition: Cqrs.Azure.BlobStorage.BlobStorageStore`1.Destroy(`0)
  name: Destroy(EventData)
  nameWithType: BlobStorageStore<EventData>.Destroy(EventData)
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<Cqrs.Events.EventData>.Destroy(Cqrs.Events.EventData)
  nameWithType.vb: BlobStorageStore(Of EventData).Destroy(EventData)
  fullName.vb: Cqrs.Azure.BlobStorage.BlobStorageStore(Of Cqrs.Events.EventData).Destroy(Cqrs.Events.EventData)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.Destroy(`0)
    name: Destroy
    nameWithType: BlobStorageStore<EventData>.Destroy
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<Cqrs.Events.EventData>.Destroy
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Events.EventData
    name: EventData
    nameWithType: EventData
    fullName: Cqrs.Events.EventData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.Destroy(`0)
    name: Destroy
    nameWithType: BlobStorageStore(Of EventData).Destroy
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStore(Of Cqrs.Events.EventData).Destroy
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Events.EventData
    name: EventData
    nameWithType: EventData
    fullName: Cqrs.Events.EventData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.BlobStorageStore{Cqrs.Events.EventData}.RemoveAll
  commentId: M:Cqrs.Azure.BlobStorage.BlobStorageStore{Cqrs.Events.EventData}.RemoveAll
  parent: Cqrs.Azure.BlobStorage.BlobStorageStore{Cqrs.Events.EventData}
  definition: Cqrs.Azure.BlobStorage.BlobStorageStore`1.RemoveAll
  name: RemoveAll()
  nameWithType: BlobStorageStore<EventData>.RemoveAll()
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<Cqrs.Events.EventData>.RemoveAll()
  nameWithType.vb: BlobStorageStore(Of EventData).RemoveAll()
  fullName.vb: Cqrs.Azure.BlobStorage.BlobStorageStore(Of Cqrs.Events.EventData).RemoveAll()
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.RemoveAll
    name: RemoveAll
    nameWithType: BlobStorageStore<EventData>.RemoveAll
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<Cqrs.Events.EventData>.RemoveAll
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.RemoveAll
    name: RemoveAll
    nameWithType: BlobStorageStore(Of EventData).RemoveAll
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStore(Of Cqrs.Events.EventData).RemoveAll
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.BlobStorageStore{Cqrs.Events.EventData}.Update(Cqrs.Events.EventData)
  commentId: M:Cqrs.Azure.BlobStorage.BlobStorageStore{Cqrs.Events.EventData}.Update(Cqrs.Events.EventData)
  parent: Cqrs.Azure.BlobStorage.BlobStorageStore{Cqrs.Events.EventData}
  definition: Cqrs.Azure.BlobStorage.BlobStorageStore`1.Update(`0)
  name: Update(EventData)
  nameWithType: BlobStorageStore<EventData>.Update(EventData)
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<Cqrs.Events.EventData>.Update(Cqrs.Events.EventData)
  nameWithType.vb: BlobStorageStore(Of EventData).Update(EventData)
  fullName.vb: Cqrs.Azure.BlobStorage.BlobStorageStore(Of Cqrs.Events.EventData).Update(Cqrs.Events.EventData)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.Update(`0)
    name: Update
    nameWithType: BlobStorageStore<EventData>.Update
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<Cqrs.Events.EventData>.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Events.EventData
    name: EventData
    nameWithType: EventData
    fullName: Cqrs.Events.EventData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.Update(`0)
    name: Update
    nameWithType: BlobStorageStore(Of EventData).Update
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStore(Of Cqrs.Events.EventData).Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Events.EventData
    name: EventData
    nameWithType: EventData
    fullName: Cqrs.Events.EventData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.BlobStorageStore{Cqrs.Events.EventData}.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String,System.Boolean)
  commentId: M:Cqrs.Azure.BlobStorage.BlobStorageStore{Cqrs.Events.EventData}.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String,System.Boolean)
  parent: Cqrs.Azure.BlobStorage.BlobStorageStore{Cqrs.Events.EventData}
  definition: Cqrs.Azure.BlobStorage.BlobStorageStore`1.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String,System.Boolean)
  name: CreateSource(CloudStorageAccount, String, Boolean)
  nameWithType: BlobStorageStore<EventData>.CreateSource(CloudStorageAccount, String, Boolean)
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<Cqrs.Events.EventData>.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount, System.String, System.Boolean)
  nameWithType.vb: BlobStorageStore(Of EventData).CreateSource(CloudStorageAccount, String, Boolean)
  fullName.vb: Cqrs.Azure.BlobStorage.BlobStorageStore(Of Cqrs.Events.EventData).CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount, System.String, System.Boolean)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String,System.Boolean)
    name: CreateSource
    nameWithType: BlobStorageStore<EventData>.CreateSource
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<Cqrs.Events.EventData>.CreateSource
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.CloudStorageAccount
    name: CloudStorageAccount
    nameWithType: CloudStorageAccount
    fullName: Microsoft.WindowsAzure.Storage.CloudStorageAccount
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String,System.Boolean)
    name: CreateSource
    nameWithType: BlobStorageStore(Of EventData).CreateSource
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStore(Of Cqrs.Events.EventData).CreateSource
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.CloudStorageAccount
    name: CloudStorageAccount
    nameWithType: CloudStorageAccount
    fullName: Microsoft.WindowsAzure.Storage.CloudStorageAccount
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.BlobStorageStore{Cqrs.Events.EventData}.OpenStreamsForReading(System.Func{Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob,System.Boolean},System.String,System.String)
  commentId: M:Cqrs.Azure.BlobStorage.BlobStorageStore{Cqrs.Events.EventData}.OpenStreamsForReading(System.Func{Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob,System.Boolean},System.String,System.String)
  parent: Cqrs.Azure.BlobStorage.BlobStorageStore{Cqrs.Events.EventData}
  definition: Cqrs.Azure.BlobStorage.BlobStorageStore`1.OpenStreamsForReading(System.Func{Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob,System.Boolean},System.String,System.String)
  name: OpenStreamsForReading(Func<CloudBlockBlob, Boolean>, String, String)
  nameWithType: BlobStorageStore<EventData>.OpenStreamsForReading(Func<CloudBlockBlob, Boolean>, String, String)
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<Cqrs.Events.EventData>.OpenStreamsForReading(System.Func<Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob, System.Boolean>, System.String, System.String)
  nameWithType.vb: BlobStorageStore(Of EventData).OpenStreamsForReading(Func(Of CloudBlockBlob, Boolean), String, String)
  fullName.vb: Cqrs.Azure.BlobStorage.BlobStorageStore(Of Cqrs.Events.EventData).OpenStreamsForReading(System.Func(Of Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob, System.Boolean), System.String, System.String)
  name.vb: OpenStreamsForReading(Func(Of CloudBlockBlob, Boolean), String, String)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.OpenStreamsForReading(System.Func{Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob,System.Boolean},System.String,System.String)
    name: OpenStreamsForReading
    nameWithType: BlobStorageStore<EventData>.OpenStreamsForReading
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<Cqrs.Events.EventData>.OpenStreamsForReading
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob
    name: CloudBlockBlob
    nameWithType: CloudBlockBlob
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.OpenStreamsForReading(System.Func{Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob,System.Boolean},System.String,System.String)
    name: OpenStreamsForReading
    nameWithType: BlobStorageStore(Of EventData).OpenStreamsForReading
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStore(Of Cqrs.Events.EventData).OpenStreamsForReading
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob
    name: CloudBlockBlob
    nameWithType: CloudBlockBlob
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.BlobStorageStore{Cqrs.Events.EventData}.GetBlobReference(Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer,System.String)
  commentId: M:Cqrs.Azure.BlobStorage.BlobStorageStore{Cqrs.Events.EventData}.GetBlobReference(Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer,System.String)
  parent: Cqrs.Azure.BlobStorage.BlobStorageStore{Cqrs.Events.EventData}
  definition: Cqrs.Azure.BlobStorage.BlobStorageStore`1.GetBlobReference(Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer,System.String)
  name: GetBlobReference(CloudBlobContainer, String)
  nameWithType: BlobStorageStore<EventData>.GetBlobReference(CloudBlobContainer, String)
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<Cqrs.Events.EventData>.GetBlobReference(Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer, System.String)
  nameWithType.vb: BlobStorageStore(Of EventData).GetBlobReference(CloudBlobContainer, String)
  fullName.vb: Cqrs.Azure.BlobStorage.BlobStorageStore(Of Cqrs.Events.EventData).GetBlobReference(Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer, System.String)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.GetBlobReference(Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer,System.String)
    name: GetBlobReference
    nameWithType: BlobStorageStore<EventData>.GetBlobReference
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<Cqrs.Events.EventData>.GetBlobReference
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
    name: CloudBlobContainer
    nameWithType: CloudBlobContainer
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.GetBlobReference(Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer,System.String)
    name: GetBlobReference
    nameWithType: BlobStorageStore(Of EventData).GetBlobReference
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStore(Of Cqrs.Events.EventData).GetBlobReference
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
    name: CloudBlobContainer
    nameWithType: CloudBlobContainer
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.BlobStorageStore{Cqrs.Events.EventData}.GetByName(System.String)
  commentId: M:Cqrs.Azure.BlobStorage.BlobStorageStore{Cqrs.Events.EventData}.GetByName(System.String)
  parent: Cqrs.Azure.BlobStorage.BlobStorageStore{Cqrs.Events.EventData}
  definition: Cqrs.Azure.BlobStorage.BlobStorageStore`1.GetByName(System.String)
  name: GetByName(String)
  nameWithType: BlobStorageStore<EventData>.GetByName(String)
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<Cqrs.Events.EventData>.GetByName(System.String)
  nameWithType.vb: BlobStorageStore(Of EventData).GetByName(String)
  fullName.vb: Cqrs.Azure.BlobStorage.BlobStorageStore(Of Cqrs.Events.EventData).GetByName(System.String)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.GetByName(System.String)
    name: GetByName
    nameWithType: BlobStorageStore<EventData>.GetByName
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<Cqrs.Events.EventData>.GetByName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.GetByName(System.String)
    name: GetByName
    nameWithType: BlobStorageStore(Of EventData).GetByName
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStore(Of Cqrs.Events.EventData).GetByName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.BlobStorageStore{Cqrs.Events.EventData}.GetByFolder(System.String)
  commentId: M:Cqrs.Azure.BlobStorage.BlobStorageStore{Cqrs.Events.EventData}.GetByFolder(System.String)
  parent: Cqrs.Azure.BlobStorage.BlobStorageStore{Cqrs.Events.EventData}
  definition: Cqrs.Azure.BlobStorage.BlobStorageStore`1.GetByFolder(System.String)
  name: GetByFolder(String)
  nameWithType: BlobStorageStore<EventData>.GetByFolder(String)
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<Cqrs.Events.EventData>.GetByFolder(System.String)
  nameWithType.vb: BlobStorageStore(Of EventData).GetByFolder(String)
  fullName.vb: Cqrs.Azure.BlobStorage.BlobStorageStore(Of Cqrs.Events.EventData).GetByFolder(System.String)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.GetByFolder(System.String)
    name: GetByFolder
    nameWithType: BlobStorageStore<EventData>.GetByFolder
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<Cqrs.Events.EventData>.GetByFolder
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.GetByFolder(System.String)
    name: GetByFolder
    nameWithType: BlobStorageStore(Of EventData).GetByFolder
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStore(Of Cqrs.Events.EventData).GetByFolder
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.WritableCollection
  commentId: P:Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.WritableCollection
  parent: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.WritableCollection
  name: WritableCollection
  nameWithType: StorageStore<EventData, CloudBlobContainer>.WritableCollection
  fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Events.EventData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.WritableCollection
  nameWithType.vb: StorageStore(Of EventData, CloudBlobContainer).WritableCollection
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Events.EventData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).WritableCollection
- uid: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.ReadableStorageAccount
  commentId: P:Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.ReadableStorageAccount
  parent: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.ReadableStorageAccount
  name: ReadableStorageAccount
  nameWithType: StorageStore<EventData, CloudBlobContainer>.ReadableStorageAccount
  fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Events.EventData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.ReadableStorageAccount
  nameWithType.vb: StorageStore(Of EventData, CloudBlobContainer).ReadableStorageAccount
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Events.EventData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).ReadableStorageAccount
- uid: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Logger
  commentId: P:Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Logger
  parent: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.Logger
  name: Logger
  nameWithType: StorageStore<EventData, CloudBlobContainer>.Logger
  fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Events.EventData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.Logger
  nameWithType.vb: StorageStore(Of EventData, CloudBlobContainer).Logger
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Events.EventData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).Logger
- uid: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.GetContainerName
  commentId: P:Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.GetContainerName
  parent: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.GetContainerName
  name: GetContainerName
  nameWithType: StorageStore<EventData, CloudBlobContainer>.GetContainerName
  fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Events.EventData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.GetContainerName
  nameWithType.vb: StorageStore(Of EventData, CloudBlobContainer).GetContainerName
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Events.EventData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).GetContainerName
- uid: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.IsContainerPublic
  commentId: P:Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.IsContainerPublic
  parent: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.IsContainerPublic
  name: IsContainerPublic
  nameWithType: StorageStore<EventData, CloudBlobContainer>.IsContainerPublic
  fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Events.EventData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.IsContainerPublic
  nameWithType.vb: StorageStore(Of EventData, CloudBlobContainer).IsContainerPublic
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Events.EventData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).IsContainerPublic
- uid: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.DefaultSettings
  commentId: P:Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.DefaultSettings
  parent: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.DefaultSettings
  name: DefaultSettings
  nameWithType: StorageStore<EventData, CloudBlobContainer>.DefaultSettings
  fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Events.EventData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.DefaultSettings
  nameWithType.vb: StorageStore(Of EventData, CloudBlobContainer).DefaultSettings
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Events.EventData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).DefaultSettings
- uid: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Initialise(Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory)
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Initialise(Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory)
  parent: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.Initialise(Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory)
  name: Initialise(IStorageStoreConnectionStringFactory)
  nameWithType: StorageStore<EventData, CloudBlobContainer>.Initialise(IStorageStoreConnectionStringFactory)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Events.EventData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.Initialise(Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory)
  nameWithType.vb: StorageStore(Of EventData, CloudBlobContainer).Initialise(IStorageStoreConnectionStringFactory)
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Events.EventData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).Initialise(Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Initialise(Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory)
    name: Initialise
    nameWithType: StorageStore<EventData, CloudBlobContainer>.Initialise
    fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Events.EventData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.Initialise
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory
    name: IStorageStoreConnectionStringFactory
    nameWithType: IStorageStoreConnectionStringFactory
    fullName: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Initialise(Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory)
    name: Initialise
    nameWithType: StorageStore(Of EventData, CloudBlobContainer).Initialise
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Events.EventData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).Initialise
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory
    name: IStorageStoreConnectionStringFactory
    nameWithType: IStorageStoreConnectionStringFactory
    fullName: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.GetEnumerator
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.GetEnumerator
  parent: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.GetEnumerator
  name: GetEnumerator()
  nameWithType: StorageStore<EventData, CloudBlobContainer>.GetEnumerator()
  fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Events.EventData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.GetEnumerator()
  nameWithType.vb: StorageStore(Of EventData, CloudBlobContainer).GetEnumerator()
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Events.EventData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).GetEnumerator()
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetEnumerator
    name: GetEnumerator
    nameWithType: StorageStore<EventData, CloudBlobContainer>.GetEnumerator
    fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Events.EventData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetEnumerator
    name: GetEnumerator
    nameWithType: StorageStore(Of EventData, CloudBlobContainer).GetEnumerator
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Events.EventData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.System#Collections#IEnumerable#GetEnumerator
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.System#Collections#IEnumerable#GetEnumerator
  parent: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator()
  nameWithType: StorageStore<EventData, CloudBlobContainer>.IEnumerable.GetEnumerator()
  fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Events.EventData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.System.Collections.IEnumerable.GetEnumerator()
  nameWithType.vb: StorageStore(Of EventData, CloudBlobContainer).System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Events.EventData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.System#Collections#IEnumerable#GetEnumerator
    name: IEnumerable.GetEnumerator
    nameWithType: StorageStore<EventData, CloudBlobContainer>.IEnumerable.GetEnumerator
    fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Events.EventData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.System.Collections.IEnumerable.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.System#Collections#IEnumerable#GetEnumerator
    name: System.Collections.IEnumerable.GetEnumerator
    nameWithType: StorageStore(Of EventData, CloudBlobContainer).System.Collections.IEnumerable.GetEnumerator
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Events.EventData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).System.Collections.IEnumerable.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Expression
  commentId: P:Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Expression
  parent: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.Expression
  name: Expression
  nameWithType: StorageStore<EventData, CloudBlobContainer>.Expression
  fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Events.EventData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.Expression
  nameWithType.vb: StorageStore(Of EventData, CloudBlobContainer).Expression
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Events.EventData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).Expression
- uid: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.ElementType
  commentId: P:Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.ElementType
  parent: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.ElementType
  name: ElementType
  nameWithType: StorageStore<EventData, CloudBlobContainer>.ElementType
  fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Events.EventData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.ElementType
  nameWithType.vb: StorageStore(Of EventData, CloudBlobContainer).ElementType
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Events.EventData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).ElementType
- uid: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Provider
  commentId: P:Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Provider
  parent: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.Provider
  name: Provider
  nameWithType: StorageStore<EventData, CloudBlobContainer>.Provider
  fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Events.EventData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.Provider
  nameWithType.vb: StorageStore(Of EventData, CloudBlobContainer).Provider
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Events.EventData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).Provider
- uid: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Dispose
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Dispose
  parent: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.Dispose
  name: Dispose()
  nameWithType: StorageStore<EventData, CloudBlobContainer>.Dispose()
  fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Events.EventData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.Dispose()
  nameWithType.vb: StorageStore(Of EventData, CloudBlobContainer).Dispose()
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Events.EventData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).Dispose()
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Dispose
    name: Dispose
    nameWithType: StorageStore<EventData, CloudBlobContainer>.Dispose
    fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Events.EventData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Dispose
    name: Dispose
    nameWithType: StorageStore(Of EventData, CloudBlobContainer).Dispose
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Events.EventData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Add(Cqrs.Events.EventData)
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Add(Cqrs.Events.EventData)
  parent: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.Add(`0)
  name: Add(EventData)
  nameWithType: StorageStore<EventData, CloudBlobContainer>.Add(EventData)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Events.EventData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.Add(Cqrs.Events.EventData)
  nameWithType.vb: StorageStore(Of EventData, CloudBlobContainer).Add(EventData)
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Events.EventData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).Add(Cqrs.Events.EventData)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Add(`0)
    name: Add
    nameWithType: StorageStore<EventData, CloudBlobContainer>.Add
    fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Events.EventData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Events.EventData
    name: EventData
    nameWithType: EventData
    fullName: Cqrs.Events.EventData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Add(`0)
    name: Add
    nameWithType: StorageStore(Of EventData, CloudBlobContainer).Add
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Events.EventData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Events.EventData
    name: EventData
    nameWithType: EventData
    fullName: Cqrs.Events.EventData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Add(System.Collections.Generic.IEnumerable{Cqrs.Events.EventData})
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Add(System.Collections.Generic.IEnumerable{Cqrs.Events.EventData})
  parent: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.Add(System.Collections.Generic.IEnumerable{`0})
  name: Add(IEnumerable<EventData>)
  nameWithType: StorageStore<EventData, CloudBlobContainer>.Add(IEnumerable<EventData>)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Events.EventData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.Add(System.Collections.Generic.IEnumerable<Cqrs.Events.EventData>)
  nameWithType.vb: StorageStore(Of EventData, CloudBlobContainer).Add(IEnumerable(Of EventData))
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Events.EventData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).Add(System.Collections.Generic.IEnumerable(Of Cqrs.Events.EventData))
  name.vb: Add(IEnumerable(Of EventData))
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Add(System.Collections.Generic.IEnumerable{`0})
    name: Add
    nameWithType: StorageStore<EventData, CloudBlobContainer>.Add
    fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Events.EventData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cqrs.Events.EventData
    name: EventData
    nameWithType: EventData
    fullName: Cqrs.Events.EventData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Add(System.Collections.Generic.IEnumerable{`0})
    name: Add
    nameWithType: StorageStore(Of EventData, CloudBlobContainer).Add
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Events.EventData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Cqrs.Events.EventData
    name: EventData
    nameWithType: EventData
    fullName: Cqrs.Events.EventData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Destroy(Cqrs.Events.EventData)
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Destroy(Cqrs.Events.EventData)
  parent: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.Destroy(`0)
  name: Destroy(EventData)
  nameWithType: StorageStore<EventData, CloudBlobContainer>.Destroy(EventData)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Events.EventData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.Destroy(Cqrs.Events.EventData)
  nameWithType.vb: StorageStore(Of EventData, CloudBlobContainer).Destroy(EventData)
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Events.EventData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).Destroy(Cqrs.Events.EventData)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Destroy(`0)
    name: Destroy
    nameWithType: StorageStore<EventData, CloudBlobContainer>.Destroy
    fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Events.EventData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.Destroy
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Events.EventData
    name: EventData
    nameWithType: EventData
    fullName: Cqrs.Events.EventData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Destroy(`0)
    name: Destroy
    nameWithType: StorageStore(Of EventData, CloudBlobContainer).Destroy
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Events.EventData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).Destroy
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Events.EventData
    name: EventData
    nameWithType: EventData
    fullName: Cqrs.Events.EventData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.RemoveAll
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.RemoveAll
  parent: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.RemoveAll
  name: RemoveAll()
  nameWithType: StorageStore<EventData, CloudBlobContainer>.RemoveAll()
  fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Events.EventData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.RemoveAll()
  nameWithType.vb: StorageStore(Of EventData, CloudBlobContainer).RemoveAll()
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Events.EventData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).RemoveAll()
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.RemoveAll
    name: RemoveAll
    nameWithType: StorageStore<EventData, CloudBlobContainer>.RemoveAll
    fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Events.EventData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.RemoveAll
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.RemoveAll
    name: RemoveAll
    nameWithType: StorageStore(Of EventData, CloudBlobContainer).RemoveAll
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Events.EventData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).RemoveAll
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Update(Cqrs.Events.EventData)
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Update(Cqrs.Events.EventData)
  parent: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.Update(`0)
  name: Update(EventData)
  nameWithType: StorageStore<EventData, CloudBlobContainer>.Update(EventData)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Events.EventData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.Update(Cqrs.Events.EventData)
  nameWithType.vb: StorageStore(Of EventData, CloudBlobContainer).Update(EventData)
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Events.EventData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).Update(Cqrs.Events.EventData)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Update(`0)
    name: Update
    nameWithType: StorageStore<EventData, CloudBlobContainer>.Update
    fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Events.EventData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Events.EventData
    name: EventData
    nameWithType: EventData
    fullName: Cqrs.Events.EventData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Update(`0)
    name: Update
    nameWithType: StorageStore(Of EventData, CloudBlobContainer).Update
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Events.EventData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Events.EventData
    name: EventData
    nameWithType: EventData
    fullName: Cqrs.Events.EventData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String,System.Boolean)
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String,System.Boolean)
  parent: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String,System.Boolean)
  name: CreateSource(CloudStorageAccount, String, Boolean)
  nameWithType: StorageStore<EventData, CloudBlobContainer>.CreateSource(CloudStorageAccount, String, Boolean)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Events.EventData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount, System.String, System.Boolean)
  nameWithType.vb: StorageStore(Of EventData, CloudBlobContainer).CreateSource(CloudStorageAccount, String, Boolean)
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Events.EventData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount, System.String, System.Boolean)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String,System.Boolean)
    name: CreateSource
    nameWithType: StorageStore<EventData, CloudBlobContainer>.CreateSource
    fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Events.EventData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.CreateSource
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.CloudStorageAccount
    name: CloudStorageAccount
    nameWithType: CloudStorageAccount
    fullName: Microsoft.WindowsAzure.Storage.CloudStorageAccount
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String,System.Boolean)
    name: CreateSource
    nameWithType: StorageStore(Of EventData, CloudBlobContainer).CreateSource
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Events.EventData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).CreateSource
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.CloudStorageAccount
    name: CloudStorageAccount
    nameWithType: CloudStorageAccount
    fullName: Microsoft.WindowsAzure.Storage.CloudStorageAccount
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.GetSafeSourceName(System.String)
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.GetSafeSourceName(System.String)
  parent: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.GetSafeSourceName(System.String)
  name: GetSafeSourceName(String)
  nameWithType: StorageStore<EventData, CloudBlobContainer>.GetSafeSourceName(String)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Events.EventData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.GetSafeSourceName(System.String)
  nameWithType.vb: StorageStore(Of EventData, CloudBlobContainer).GetSafeSourceName(String)
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Events.EventData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).GetSafeSourceName(System.String)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetSafeSourceName(System.String)
    name: GetSafeSourceName
    nameWithType: StorageStore<EventData, CloudBlobContainer>.GetSafeSourceName
    fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Events.EventData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.GetSafeSourceName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetSafeSourceName(System.String)
    name: GetSafeSourceName
    nameWithType: StorageStore(Of EventData, CloudBlobContainer).GetSafeSourceName
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Events.EventData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).GetSafeSourceName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.GetSafeSourceName(System.String,System.Boolean)
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.GetSafeSourceName(System.String,System.Boolean)
  parent: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.GetSafeSourceName(System.String,System.Boolean)
  name: GetSafeSourceName(String, Boolean)
  nameWithType: StorageStore<EventData, CloudBlobContainer>.GetSafeSourceName(String, Boolean)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Events.EventData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.GetSafeSourceName(System.String, System.Boolean)
  nameWithType.vb: StorageStore(Of EventData, CloudBlobContainer).GetSafeSourceName(String, Boolean)
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Events.EventData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).GetSafeSourceName(System.String, System.Boolean)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetSafeSourceName(System.String,System.Boolean)
    name: GetSafeSourceName
    nameWithType: StorageStore<EventData, CloudBlobContainer>.GetSafeSourceName
    fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Events.EventData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.GetSafeSourceName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetSafeSourceName(System.String,System.Boolean)
    name: GetSafeSourceName
    nameWithType: StorageStore(Of EventData, CloudBlobContainer).GetSafeSourceName
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Events.EventData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).GetSafeSourceName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.AzureStorageRetryPolicy
  commentId: P:Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.AzureStorageRetryPolicy
  parent: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.AzureStorageRetryPolicy
  name: AzureStorageRetryPolicy
  nameWithType: StorageStore<EventData, CloudBlobContainer>.AzureStorageRetryPolicy
  fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Events.EventData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.AzureStorageRetryPolicy
  nameWithType.vb: StorageStore(Of EventData, CloudBlobContainer).AzureStorageRetryPolicy
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Events.EventData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).AzureStorageRetryPolicy
- uid: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Deserialise(System.IO.Stream)
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Deserialise(System.IO.Stream)
  parent: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.Deserialise(System.IO.Stream)
  name: Deserialise(Stream)
  nameWithType: StorageStore<EventData, CloudBlobContainer>.Deserialise(Stream)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Events.EventData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.Deserialise(System.IO.Stream)
  nameWithType.vb: StorageStore(Of EventData, CloudBlobContainer).Deserialise(Stream)
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Events.EventData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).Deserialise(System.IO.Stream)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Deserialise(System.IO.Stream)
    name: Deserialise
    nameWithType: StorageStore<EventData, CloudBlobContainer>.Deserialise
    fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Events.EventData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.Deserialise
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Deserialise(System.IO.Stream)
    name: Deserialise
    nameWithType: StorageStore(Of EventData, CloudBlobContainer).Deserialise
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Events.EventData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).Deserialise
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Deserialise(System.String)
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Deserialise(System.String)
  parent: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.Deserialise(System.String)
  name: Deserialise(String)
  nameWithType: StorageStore<EventData, CloudBlobContainer>.Deserialise(String)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Events.EventData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.Deserialise(System.String)
  nameWithType.vb: StorageStore(Of EventData, CloudBlobContainer).Deserialise(String)
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Events.EventData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).Deserialise(System.String)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Deserialise(System.String)
    name: Deserialise
    nameWithType: StorageStore<EventData, CloudBlobContainer>.Deserialise
    fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Events.EventData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.Deserialise
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Deserialise(System.String)
    name: Deserialise
    nameWithType: StorageStore(Of EventData, CloudBlobContainer).Deserialise
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Events.EventData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).Deserialise
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Serialise(Cqrs.Events.EventData)
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.Serialise(Cqrs.Events.EventData)
  parent: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.Serialise(`0)
  name: Serialise(EventData)
  nameWithType: StorageStore<EventData, CloudBlobContainer>.Serialise(EventData)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Events.EventData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.Serialise(Cqrs.Events.EventData)
  nameWithType.vb: StorageStore(Of EventData, CloudBlobContainer).Serialise(EventData)
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Events.EventData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).Serialise(Cqrs.Events.EventData)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Serialise(`0)
    name: Serialise
    nameWithType: StorageStore<EventData, CloudBlobContainer>.Serialise
    fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Events.EventData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.Serialise
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Events.EventData
    name: EventData
    nameWithType: EventData
    fullName: Cqrs.Events.EventData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Serialise(`0)
    name: Serialise
    nameWithType: StorageStore(Of EventData, CloudBlobContainer).Serialise
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Events.EventData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).Serialise
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Events.EventData
    name: EventData
    nameWithType: EventData
    fullName: Cqrs.Events.EventData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.GetSerialisationSettings
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.GetSerialisationSettings
  parent: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.GetSerialisationSettings
  name: GetSerialisationSettings()
  nameWithType: StorageStore<EventData, CloudBlobContainer>.GetSerialisationSettings()
  fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Events.EventData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.GetSerialisationSettings()
  nameWithType.vb: StorageStore(Of EventData, CloudBlobContainer).GetSerialisationSettings()
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Events.EventData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).GetSerialisationSettings()
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetSerialisationSettings
    name: GetSerialisationSettings
    nameWithType: StorageStore<EventData, CloudBlobContainer>.GetSerialisationSettings
    fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Events.EventData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.GetSerialisationSettings
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetSerialisationSettings
    name: GetSerialisationSettings
    nameWithType: StorageStore(Of EventData, CloudBlobContainer).GetSerialisationSettings
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Events.EventData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).GetSerialisationSettings
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.GetSerialiser
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}.GetSerialiser
  parent: Cqrs.Azure.BlobStorage.StorageStore{Cqrs.Events.EventData,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer}
  definition: Cqrs.Azure.BlobStorage.StorageStore`2.GetSerialiser
  name: GetSerialiser()
  nameWithType: StorageStore<EventData, CloudBlobContainer>.GetSerialiser()
  fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Events.EventData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.GetSerialiser()
  nameWithType.vb: StorageStore(Of EventData, CloudBlobContainer).GetSerialiser()
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Events.EventData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).GetSerialiser()
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetSerialiser
    name: GetSerialiser
    nameWithType: StorageStore<EventData, CloudBlobContainer>.GetSerialiser
    fullName: Cqrs.Azure.BlobStorage.StorageStore<Cqrs.Events.EventData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>.GetSerialiser
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetSerialiser
    name: GetSerialiser
    nameWithType: StorageStore(Of EventData, CloudBlobContainer).GetSerialiser
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of Cqrs.Events.EventData, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).GetSerialiser
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{Cqrs.Events.EventData}.Cqrs.Sql.DataStores.SqlDataStoreExtensions.Single``2
  commentId: M:Cqrs.Sql.DataStores.SqlDataStoreExtensions.Single``2(System.Collections.Generic.IEnumerable{``0})
  parent: Cqrs.Sql.DataStores.SqlDataStoreExtensions
  definition: Cqrs.Sql.DataStores.SqlDataStoreExtensions.Single``2(System.Collections.Generic.IEnumerable{``0})
  name: Single<EventData, TDbEntity>()
  nameWithType: SqlDataStoreExtensions.Single<EventData, TDbEntity>()
  fullName: Cqrs.Sql.DataStores.SqlDataStoreExtensions.Single<Cqrs.Events.EventData, TDbEntity>()
  nameWithType.vb: SqlDataStoreExtensions.Single(Of EventData, TDbEntity)()
  fullName.vb: Cqrs.Sql.DataStores.SqlDataStoreExtensions.Single(Of Cqrs.Events.EventData, TDbEntity)()
  name.vb: Single(Of EventData, TDbEntity)()
  spec.csharp:
  - uid: Cqrs.Sql.DataStores.SqlDataStoreExtensions.Single``2
    name: Single<EventData, TDbEntity>
    nameWithType: SqlDataStoreExtensions.Single<EventData, TDbEntity>
    fullName: Cqrs.Sql.DataStores.SqlDataStoreExtensions.Single<Cqrs.Events.EventData, TDbEntity>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Sql.DataStores.SqlDataStoreExtensions.Single``2
    name: Single(Of EventData, TDbEntity)
    nameWithType: SqlDataStoreExtensions.Single(Of EventData, TDbEntity)
    fullName: Cqrs.Sql.DataStores.SqlDataStoreExtensions.Single(Of Cqrs.Events.EventData, TDbEntity)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Cqrs.Azure.BlobStorage.StorageStore`2
  commentId: T:Cqrs.Azure.BlobStorage.StorageStore`2
  isExternal: false
  name: StorageStore<TData, TSource>
  nameWithType: StorageStore<TData, TSource>
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>
  nameWithType.vb: StorageStore(Of TData, TSource)
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource)
  name.vb: StorageStore(Of TData, TSource)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2
    name: StorageStore
    nameWithType: StorageStore
    fullName: Cqrs.Azure.BlobStorage.StorageStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2
    name: StorageStore
    nameWithType: StorageStore
    fullName: Cqrs.Azure.BlobStorage.StorageStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage
  commentId: N:Cqrs.Azure.BlobStorage
  isExternal: false
  name: Cqrs.Azure.BlobStorage
  nameWithType: Cqrs.Azure.BlobStorage
  fullName: Cqrs.Azure.BlobStorage
- uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1
  commentId: T:Cqrs.Azure.BlobStorage.BlobStorageStore`1
  isExternal: false
  name: BlobStorageStore<TData>
  nameWithType: BlobStorageStore<TData>
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>
  nameWithType.vb: BlobStorageStore(Of TData)
  fullName.vb: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData)
  name.vb: BlobStorageStore(Of TData)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1
    name: BlobStorageStore
    nameWithType: BlobStorageStore
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1
    name: BlobStorageStore
    nameWithType: BlobStorageStore
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: false
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.GetEnumerator
  commentId: M:Cqrs.Azure.BlobStorage.BlobStorageStore`1.GetEnumerator
  isExternal: false
  name: GetEnumerator()
  nameWithType: BlobStorageStore<TData>.GetEnumerator()
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>.GetEnumerator()
  nameWithType.vb: BlobStorageStore(Of TData).GetEnumerator()
  fullName.vb: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData).GetEnumerator()
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.GetEnumerator
    name: GetEnumerator
    nameWithType: BlobStorageStore<TData>.GetEnumerator
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.GetEnumerator
    name: GetEnumerator
    nameWithType: BlobStorageStore(Of TData).GetEnumerator
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData).GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.Expression
  commentId: P:Cqrs.Azure.BlobStorage.BlobStorageStore`1.Expression
  isExternal: false
  name: Expression
  nameWithType: BlobStorageStore<TData>.Expression
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>.Expression
  nameWithType.vb: BlobStorageStore(Of TData).Expression
  fullName.vb: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData).Expression
- uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.ElementType
  commentId: P:Cqrs.Azure.BlobStorage.BlobStorageStore`1.ElementType
  isExternal: false
  name: ElementType
  nameWithType: BlobStorageStore<TData>.ElementType
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>.ElementType
  nameWithType.vb: BlobStorageStore(Of TData).ElementType
  fullName.vb: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData).ElementType
- uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.Provider
  commentId: P:Cqrs.Azure.BlobStorage.BlobStorageStore`1.Provider
  isExternal: false
  name: Provider
  nameWithType: BlobStorageStore<TData>.Provider
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>.Provider
  nameWithType.vb: BlobStorageStore(Of TData).Provider
  fullName.vb: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData).Provider
- uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.AsyncSaveData``1(`0,System.Func{`0,Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob,``0},System.Func{`0,System.String})
  commentId: M:Cqrs.Azure.BlobStorage.BlobStorageStore`1.AsyncSaveData``1(`0,System.Func{`0,Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob,``0},System.Func{`0,System.String})
  isExternal: true
  name: AsyncSaveData<TResult>(TData, Func<TData, CloudBlockBlob, TResult>, Func<TData, String>)
  nameWithType: BlobStorageStore<TData>.AsyncSaveData<TResult>(TData, Func<TData, CloudBlockBlob, TResult>, Func<TData, String>)
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>.AsyncSaveData<TResult>(TData, System.Func<TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob, TResult>, System.Func<TData, System.String>)
  nameWithType.vb: BlobStorageStore(Of TData).AsyncSaveData(Of TResult)(TData, Func(Of TData, CloudBlockBlob, TResult), Func(Of TData, String))
  fullName.vb: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData).AsyncSaveData(Of TResult)(TData, System.Func(Of TData, Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob, TResult), System.Func(Of TData, System.String))
  name.vb: AsyncSaveData(Of TResult)(TData, Func(Of TData, CloudBlockBlob, TResult), Func(Of TData, String))
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.AsyncSaveData``1(`0,System.Func{`0,Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob,``0},System.Func{`0,System.String})
    name: AsyncSaveData<TResult>
    nameWithType: BlobStorageStore<TData>.AsyncSaveData<TResult>
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>.AsyncSaveData<TResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob
    name: CloudBlockBlob
    nameWithType: CloudBlockBlob
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.AsyncSaveData``1(`0,System.Func{`0,Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob,``0},System.Func{`0,System.String})
    name: AsyncSaveData(Of TResult)
    nameWithType: BlobStorageStore(Of TData).AsyncSaveData(Of TResult)
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData).AsyncSaveData(Of TResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob
    name: CloudBlockBlob
    nameWithType: CloudBlockBlob
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.Add(`0)
  commentId: M:Cqrs.Azure.BlobStorage.BlobStorageStore`1.Add(`0)
  isExternal: false
  name: Add(TData)
  nameWithType: BlobStorageStore<TData>.Add(TData)
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>.Add(TData)
  nameWithType.vb: BlobStorageStore(Of TData).Add(TData)
  fullName.vb: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData).Add(TData)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.Add(`0)
    name: Add
    nameWithType: BlobStorageStore<TData>.Add
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>.Add
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.Add(`0)
    name: Add
    nameWithType: BlobStorageStore(Of TData).Add
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData).Add
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.Destroy(`0)
  commentId: M:Cqrs.Azure.BlobStorage.BlobStorageStore`1.Destroy(`0)
  isExternal: false
  name: Destroy(TData)
  nameWithType: BlobStorageStore<TData>.Destroy(TData)
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>.Destroy(TData)
  nameWithType.vb: BlobStorageStore(Of TData).Destroy(TData)
  fullName.vb: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData).Destroy(TData)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.Destroy(`0)
    name: Destroy
    nameWithType: BlobStorageStore<TData>.Destroy
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>.Destroy
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.Destroy(`0)
    name: Destroy
    nameWithType: BlobStorageStore(Of TData).Destroy
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData).Destroy
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.RemoveAll
  commentId: M:Cqrs.Azure.BlobStorage.BlobStorageStore`1.RemoveAll
  isExternal: false
  name: RemoveAll()
  nameWithType: BlobStorageStore<TData>.RemoveAll()
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>.RemoveAll()
  nameWithType.vb: BlobStorageStore(Of TData).RemoveAll()
  fullName.vb: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData).RemoveAll()
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.RemoveAll
    name: RemoveAll
    nameWithType: BlobStorageStore<TData>.RemoveAll
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>.RemoveAll
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.RemoveAll
    name: RemoveAll
    nameWithType: BlobStorageStore(Of TData).RemoveAll
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData).RemoveAll
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.Update(`0)
  commentId: M:Cqrs.Azure.BlobStorage.BlobStorageStore`1.Update(`0)
  isExternal: false
  name: Update(TData)
  nameWithType: BlobStorageStore<TData>.Update(TData)
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>.Update(TData)
  nameWithType.vb: BlobStorageStore(Of TData).Update(TData)
  fullName.vb: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData).Update(TData)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.Update(`0)
    name: Update
    nameWithType: BlobStorageStore<TData>.Update
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>.Update
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.Update(`0)
    name: Update
    nameWithType: BlobStorageStore(Of TData).Update
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData).Update
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String,System.Boolean)
  commentId: M:Cqrs.Azure.BlobStorage.BlobStorageStore`1.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String,System.Boolean)
  isExternal: true
  name: CreateSource(CloudStorageAccount, String, Boolean)
  nameWithType: BlobStorageStore<TData>.CreateSource(CloudStorageAccount, String, Boolean)
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount, System.String, System.Boolean)
  nameWithType.vb: BlobStorageStore(Of TData).CreateSource(CloudStorageAccount, String, Boolean)
  fullName.vb: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData).CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount, System.String, System.Boolean)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String,System.Boolean)
    name: CreateSource
    nameWithType: BlobStorageStore<TData>.CreateSource
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>.CreateSource
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.CloudStorageAccount
    name: CloudStorageAccount
    nameWithType: CloudStorageAccount
    fullName: Microsoft.WindowsAzure.Storage.CloudStorageAccount
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String,System.Boolean)
    name: CreateSource
    nameWithType: BlobStorageStore(Of TData).CreateSource
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData).CreateSource
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.CloudStorageAccount
    name: CloudStorageAccount
    nameWithType: CloudStorageAccount
    fullName: Microsoft.WindowsAzure.Storage.CloudStorageAccount
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.OpenStreamsForReading(System.Func{Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob,System.Boolean},System.String,System.String)
  commentId: M:Cqrs.Azure.BlobStorage.BlobStorageStore`1.OpenStreamsForReading(System.Func{Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob,System.Boolean},System.String,System.String)
  isExternal: true
  name: OpenStreamsForReading(Func<CloudBlockBlob, Boolean>, String, String)
  nameWithType: BlobStorageStore<TData>.OpenStreamsForReading(Func<CloudBlockBlob, Boolean>, String, String)
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>.OpenStreamsForReading(System.Func<Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob, System.Boolean>, System.String, System.String)
  nameWithType.vb: BlobStorageStore(Of TData).OpenStreamsForReading(Func(Of CloudBlockBlob, Boolean), String, String)
  fullName.vb: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData).OpenStreamsForReading(System.Func(Of Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob, System.Boolean), System.String, System.String)
  name.vb: OpenStreamsForReading(Func(Of CloudBlockBlob, Boolean), String, String)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.OpenStreamsForReading(System.Func{Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob,System.Boolean},System.String,System.String)
    name: OpenStreamsForReading
    nameWithType: BlobStorageStore<TData>.OpenStreamsForReading
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>.OpenStreamsForReading
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob
    name: CloudBlockBlob
    nameWithType: CloudBlockBlob
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.OpenStreamsForReading(System.Func{Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob,System.Boolean},System.String,System.String)
    name: OpenStreamsForReading
    nameWithType: BlobStorageStore(Of TData).OpenStreamsForReading
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData).OpenStreamsForReading
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob
    name: CloudBlockBlob
    nameWithType: CloudBlockBlob
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.GetBlobReference(Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer,System.String)
  commentId: M:Cqrs.Azure.BlobStorage.BlobStorageStore`1.GetBlobReference(Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer,System.String)
  isExternal: true
  name: GetBlobReference(CloudBlobContainer, String)
  nameWithType: BlobStorageStore<TData>.GetBlobReference(CloudBlobContainer, String)
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>.GetBlobReference(Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer, System.String)
  nameWithType.vb: BlobStorageStore(Of TData).GetBlobReference(CloudBlobContainer, String)
  fullName.vb: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData).GetBlobReference(Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer, System.String)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.GetBlobReference(Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer,System.String)
    name: GetBlobReference
    nameWithType: BlobStorageStore<TData>.GetBlobReference
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>.GetBlobReference
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
    name: CloudBlobContainer
    nameWithType: CloudBlobContainer
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.GetBlobReference(Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer,System.String)
    name: GetBlobReference
    nameWithType: BlobStorageStore(Of TData).GetBlobReference
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData).GetBlobReference
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
    name: CloudBlobContainer
    nameWithType: CloudBlobContainer
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.GetByName(System.String)
  commentId: M:Cqrs.Azure.BlobStorage.BlobStorageStore`1.GetByName(System.String)
  isExternal: true
  name: GetByName(String)
  nameWithType: BlobStorageStore<TData>.GetByName(String)
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>.GetByName(System.String)
  nameWithType.vb: BlobStorageStore(Of TData).GetByName(String)
  fullName.vb: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData).GetByName(System.String)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.GetByName(System.String)
    name: GetByName
    nameWithType: BlobStorageStore<TData>.GetByName
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>.GetByName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.GetByName(System.String)
    name: GetByName
    nameWithType: BlobStorageStore(Of TData).GetByName
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData).GetByName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.GetByFolder(System.String)
  commentId: M:Cqrs.Azure.BlobStorage.BlobStorageStore`1.GetByFolder(System.String)
  isExternal: true
  name: GetByFolder(String)
  nameWithType: BlobStorageStore<TData>.GetByFolder(String)
  fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>.GetByFolder(System.String)
  nameWithType.vb: BlobStorageStore(Of TData).GetByFolder(String)
  fullName.vb: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData).GetByFolder(System.String)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.GetByFolder(System.String)
    name: GetByFolder
    nameWithType: BlobStorageStore<TData>.GetByFolder
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStore<TData>.GetByFolder
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.BlobStorageStore`1.GetByFolder(System.String)
    name: GetByFolder
    nameWithType: BlobStorageStore(Of TData).GetByFolder
    fullName: Cqrs.Azure.BlobStorage.BlobStorageStore(Of TData).GetByFolder
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.WritableCollection
  commentId: P:Cqrs.Azure.BlobStorage.StorageStore`2.WritableCollection
  isExternal: false
  name: WritableCollection
  nameWithType: StorageStore<TData, TSource>.WritableCollection
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.WritableCollection
  nameWithType.vb: StorageStore(Of TData, TSource).WritableCollection
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).WritableCollection
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.ReadableStorageAccount
  commentId: P:Cqrs.Azure.BlobStorage.StorageStore`2.ReadableStorageAccount
  isExternal: false
  name: ReadableStorageAccount
  nameWithType: StorageStore<TData, TSource>.ReadableStorageAccount
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.ReadableStorageAccount
  nameWithType.vb: StorageStore(Of TData, TSource).ReadableStorageAccount
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).ReadableStorageAccount
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.Logger
  commentId: P:Cqrs.Azure.BlobStorage.StorageStore`2.Logger
  isExternal: false
  name: Logger
  nameWithType: StorageStore<TData, TSource>.Logger
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.Logger
  nameWithType.vb: StorageStore(Of TData, TSource).Logger
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).Logger
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetContainerName
  commentId: P:Cqrs.Azure.BlobStorage.StorageStore`2.GetContainerName
  isExternal: false
  name: GetContainerName
  nameWithType: StorageStore<TData, TSource>.GetContainerName
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.GetContainerName
  nameWithType.vb: StorageStore(Of TData, TSource).GetContainerName
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).GetContainerName
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.IsContainerPublic
  commentId: P:Cqrs.Azure.BlobStorage.StorageStore`2.IsContainerPublic
  isExternal: false
  name: IsContainerPublic
  nameWithType: StorageStore<TData, TSource>.IsContainerPublic
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.IsContainerPublic
  nameWithType.vb: StorageStore(Of TData, TSource).IsContainerPublic
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).IsContainerPublic
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.DefaultSettings
  commentId: P:Cqrs.Azure.BlobStorage.StorageStore`2.DefaultSettings
  isExternal: false
  name: DefaultSettings
  nameWithType: StorageStore<TData, TSource>.DefaultSettings
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.DefaultSettings
  nameWithType.vb: StorageStore(Of TData, TSource).DefaultSettings
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).DefaultSettings
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.Initialise(Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory)
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore`2.Initialise(Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory)
  isExternal: false
  name: Initialise(IStorageStoreConnectionStringFactory)
  nameWithType: StorageStore<TData, TSource>.Initialise(IStorageStoreConnectionStringFactory)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.Initialise(Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory)
  nameWithType.vb: StorageStore(Of TData, TSource).Initialise(IStorageStoreConnectionStringFactory)
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).Initialise(Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Initialise(Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory)
    name: Initialise
    nameWithType: StorageStore<TData, TSource>.Initialise
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.Initialise
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory
    name: IStorageStoreConnectionStringFactory
    nameWithType: IStorageStoreConnectionStringFactory
    fullName: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Initialise(Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory)
    name: Initialise
    nameWithType: StorageStore(Of TData, TSource).Initialise
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).Initialise
  - name: (
    nameWithType: (
    fullName: (
  - uid: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory
    name: IStorageStoreConnectionStringFactory
    nameWithType: IStorageStoreConnectionStringFactory
    fullName: Cqrs.Azure.BlobStorage.IStorageStoreConnectionStringFactory
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetEnumerator
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore`2.GetEnumerator
  isExternal: false
  name: GetEnumerator()
  nameWithType: StorageStore<TData, TSource>.GetEnumerator()
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.GetEnumerator()
  nameWithType.vb: StorageStore(Of TData, TSource).GetEnumerator()
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).GetEnumerator()
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetEnumerator
    name: GetEnumerator
    nameWithType: StorageStore<TData, TSource>.GetEnumerator
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetEnumerator
    name: GetEnumerator
    nameWithType: StorageStore(Of TData, TSource).GetEnumerator
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.System#Collections#IEnumerable#GetEnumerator
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore`2.System#Collections#IEnumerable#GetEnumerator
  isExternal: false
  name: IEnumerable.GetEnumerator()
  nameWithType: StorageStore<TData, TSource>.IEnumerable.GetEnumerator()
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.System.Collections.IEnumerable.GetEnumerator()
  nameWithType.vb: StorageStore(Of TData, TSource).System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.System#Collections#IEnumerable#GetEnumerator
    name: IEnumerable.GetEnumerator
    nameWithType: StorageStore<TData, TSource>.IEnumerable.GetEnumerator
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.System.Collections.IEnumerable.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.System#Collections#IEnumerable#GetEnumerator
    name: System.Collections.IEnumerable.GetEnumerator
    nameWithType: StorageStore(Of TData, TSource).System.Collections.IEnumerable.GetEnumerator
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).System.Collections.IEnumerable.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.Expression
  commentId: P:Cqrs.Azure.BlobStorage.StorageStore`2.Expression
  isExternal: false
  name: Expression
  nameWithType: StorageStore<TData, TSource>.Expression
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.Expression
  nameWithType.vb: StorageStore(Of TData, TSource).Expression
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).Expression
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.ElementType
  commentId: P:Cqrs.Azure.BlobStorage.StorageStore`2.ElementType
  isExternal: false
  name: ElementType
  nameWithType: StorageStore<TData, TSource>.ElementType
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.ElementType
  nameWithType.vb: StorageStore(Of TData, TSource).ElementType
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).ElementType
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.Provider
  commentId: P:Cqrs.Azure.BlobStorage.StorageStore`2.Provider
  isExternal: false
  name: Provider
  nameWithType: StorageStore<TData, TSource>.Provider
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.Provider
  nameWithType.vb: StorageStore(Of TData, TSource).Provider
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).Provider
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.Dispose
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore`2.Dispose
  isExternal: false
  name: Dispose()
  nameWithType: StorageStore<TData, TSource>.Dispose()
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.Dispose()
  nameWithType.vb: StorageStore(Of TData, TSource).Dispose()
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).Dispose()
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Dispose
    name: Dispose
    nameWithType: StorageStore<TData, TSource>.Dispose
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Dispose
    name: Dispose
    nameWithType: StorageStore(Of TData, TSource).Dispose
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.Add(`0)
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore`2.Add(`0)
  isExternal: false
  name: Add(TData)
  nameWithType: StorageStore<TData, TSource>.Add(TData)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.Add(TData)
  nameWithType.vb: StorageStore(Of TData, TSource).Add(TData)
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).Add(TData)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Add(`0)
    name: Add
    nameWithType: StorageStore<TData, TSource>.Add
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.Add
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Add(`0)
    name: Add
    nameWithType: StorageStore(Of TData, TSource).Add
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).Add
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.Add(System.Collections.Generic.IEnumerable{`0})
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore`2.Add(System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  name: Add(IEnumerable<TData>)
  nameWithType: StorageStore<TData, TSource>.Add(IEnumerable<TData>)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.Add(System.Collections.Generic.IEnumerable<TData>)
  nameWithType.vb: StorageStore(Of TData, TSource).Add(IEnumerable(Of TData))
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).Add(System.Collections.Generic.IEnumerable(Of TData))
  name.vb: Add(IEnumerable(Of TData))
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Add(System.Collections.Generic.IEnumerable{`0})
    name: Add
    nameWithType: StorageStore<TData, TSource>.Add
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Add(System.Collections.Generic.IEnumerable{`0})
    name: Add
    nameWithType: StorageStore(Of TData, TSource).Add
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.Destroy(`0)
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore`2.Destroy(`0)
  isExternal: false
  name: Destroy(TData)
  nameWithType: StorageStore<TData, TSource>.Destroy(TData)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.Destroy(TData)
  nameWithType.vb: StorageStore(Of TData, TSource).Destroy(TData)
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).Destroy(TData)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Destroy(`0)
    name: Destroy
    nameWithType: StorageStore<TData, TSource>.Destroy
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.Destroy
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Destroy(`0)
    name: Destroy
    nameWithType: StorageStore(Of TData, TSource).Destroy
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).Destroy
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.RemoveAll
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore`2.RemoveAll
  isExternal: false
  name: RemoveAll()
  nameWithType: StorageStore<TData, TSource>.RemoveAll()
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.RemoveAll()
  nameWithType.vb: StorageStore(Of TData, TSource).RemoveAll()
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).RemoveAll()
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.RemoveAll
    name: RemoveAll
    nameWithType: StorageStore<TData, TSource>.RemoveAll
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.RemoveAll
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.RemoveAll
    name: RemoveAll
    nameWithType: StorageStore(Of TData, TSource).RemoveAll
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).RemoveAll
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.Update(`0)
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore`2.Update(`0)
  isExternal: false
  name: Update(TData)
  nameWithType: StorageStore<TData, TSource>.Update(TData)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.Update(TData)
  nameWithType.vb: StorageStore(Of TData, TSource).Update(TData)
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).Update(TData)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Update(`0)
    name: Update
    nameWithType: StorageStore<TData, TSource>.Update
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.Update
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Update(`0)
    name: Update
    nameWithType: StorageStore(Of TData, TSource).Update
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).Update
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String,System.Boolean)
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore`2.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String,System.Boolean)
  isExternal: true
  name: CreateSource(CloudStorageAccount, String, Boolean)
  nameWithType: StorageStore<TData, TSource>.CreateSource(CloudStorageAccount, String, Boolean)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount, System.String, System.Boolean)
  nameWithType.vb: StorageStore(Of TData, TSource).CreateSource(CloudStorageAccount, String, Boolean)
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount, System.String, System.Boolean)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String,System.Boolean)
    name: CreateSource
    nameWithType: StorageStore<TData, TSource>.CreateSource
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.CreateSource
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.CloudStorageAccount
    name: CloudStorageAccount
    nameWithType: CloudStorageAccount
    fullName: Microsoft.WindowsAzure.Storage.CloudStorageAccount
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.CreateSource(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String,System.Boolean)
    name: CreateSource
    nameWithType: StorageStore(Of TData, TSource).CreateSource
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).CreateSource
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.CloudStorageAccount
    name: CloudStorageAccount
    nameWithType: CloudStorageAccount
    fullName: Microsoft.WindowsAzure.Storage.CloudStorageAccount
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetSafeSourceName(System.String)
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore`2.GetSafeSourceName(System.String)
  isExternal: true
  name: GetSafeSourceName(String)
  nameWithType: StorageStore<TData, TSource>.GetSafeSourceName(String)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.GetSafeSourceName(System.String)
  nameWithType.vb: StorageStore(Of TData, TSource).GetSafeSourceName(String)
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).GetSafeSourceName(System.String)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetSafeSourceName(System.String)
    name: GetSafeSourceName
    nameWithType: StorageStore<TData, TSource>.GetSafeSourceName
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.GetSafeSourceName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetSafeSourceName(System.String)
    name: GetSafeSourceName
    nameWithType: StorageStore(Of TData, TSource).GetSafeSourceName
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).GetSafeSourceName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetSafeSourceName(System.String,System.Boolean)
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore`2.GetSafeSourceName(System.String,System.Boolean)
  isExternal: true
  name: GetSafeSourceName(String, Boolean)
  nameWithType: StorageStore<TData, TSource>.GetSafeSourceName(String, Boolean)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.GetSafeSourceName(System.String, System.Boolean)
  nameWithType.vb: StorageStore(Of TData, TSource).GetSafeSourceName(String, Boolean)
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).GetSafeSourceName(System.String, System.Boolean)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetSafeSourceName(System.String,System.Boolean)
    name: GetSafeSourceName
    nameWithType: StorageStore<TData, TSource>.GetSafeSourceName
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.GetSafeSourceName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetSafeSourceName(System.String,System.Boolean)
    name: GetSafeSourceName
    nameWithType: StorageStore(Of TData, TSource).GetSafeSourceName
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).GetSafeSourceName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.AzureStorageRetryPolicy
  commentId: P:Cqrs.Azure.BlobStorage.StorageStore`2.AzureStorageRetryPolicy
  isExternal: false
  name: AzureStorageRetryPolicy
  nameWithType: StorageStore<TData, TSource>.AzureStorageRetryPolicy
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.AzureStorageRetryPolicy
  nameWithType.vb: StorageStore(Of TData, TSource).AzureStorageRetryPolicy
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).AzureStorageRetryPolicy
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.Deserialise(System.IO.Stream)
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore`2.Deserialise(System.IO.Stream)
  isExternal: true
  name: Deserialise(Stream)
  nameWithType: StorageStore<TData, TSource>.Deserialise(Stream)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.Deserialise(System.IO.Stream)
  nameWithType.vb: StorageStore(Of TData, TSource).Deserialise(Stream)
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).Deserialise(System.IO.Stream)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Deserialise(System.IO.Stream)
    name: Deserialise
    nameWithType: StorageStore<TData, TSource>.Deserialise
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.Deserialise
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Deserialise(System.IO.Stream)
    name: Deserialise
    nameWithType: StorageStore(Of TData, TSource).Deserialise
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).Deserialise
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.Deserialise(System.String)
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore`2.Deserialise(System.String)
  isExternal: true
  name: Deserialise(String)
  nameWithType: StorageStore<TData, TSource>.Deserialise(String)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.Deserialise(System.String)
  nameWithType.vb: StorageStore(Of TData, TSource).Deserialise(String)
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).Deserialise(System.String)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Deserialise(System.String)
    name: Deserialise
    nameWithType: StorageStore<TData, TSource>.Deserialise
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.Deserialise
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Deserialise(System.String)
    name: Deserialise
    nameWithType: StorageStore(Of TData, TSource).Deserialise
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).Deserialise
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.Serialise(`0)
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore`2.Serialise(`0)
  isExternal: false
  name: Serialise(TData)
  nameWithType: StorageStore<TData, TSource>.Serialise(TData)
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.Serialise(TData)
  nameWithType.vb: StorageStore(Of TData, TSource).Serialise(TData)
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).Serialise(TData)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Serialise(`0)
    name: Serialise
    nameWithType: StorageStore<TData, TSource>.Serialise
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.Serialise
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.Serialise(`0)
    name: Serialise
    nameWithType: StorageStore(Of TData, TSource).Serialise
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).Serialise
  - name: (
    nameWithType: (
    fullName: (
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetSerialisationSettings
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore`2.GetSerialisationSettings
  isExternal: false
  name: GetSerialisationSettings()
  nameWithType: StorageStore<TData, TSource>.GetSerialisationSettings()
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.GetSerialisationSettings()
  nameWithType.vb: StorageStore(Of TData, TSource).GetSerialisationSettings()
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).GetSerialisationSettings()
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetSerialisationSettings
    name: GetSerialisationSettings
    nameWithType: StorageStore<TData, TSource>.GetSerialisationSettings
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.GetSerialisationSettings
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetSerialisationSettings
    name: GetSerialisationSettings
    nameWithType: StorageStore(Of TData, TSource).GetSerialisationSettings
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).GetSerialisationSettings
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetSerialiser
  commentId: M:Cqrs.Azure.BlobStorage.StorageStore`2.GetSerialiser
  isExternal: false
  name: GetSerialiser()
  nameWithType: StorageStore<TData, TSource>.GetSerialiser()
  fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.GetSerialiser()
  nameWithType.vb: StorageStore(Of TData, TSource).GetSerialiser()
  fullName.vb: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).GetSerialiser()
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetSerialiser
    name: GetSerialiser
    nameWithType: StorageStore<TData, TSource>.GetSerialiser
    fullName: Cqrs.Azure.BlobStorage.StorageStore<TData, TSource>.GetSerialiser
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.StorageStore`2.GetSerialiser
    name: GetSerialiser
    nameWithType: StorageStore(Of TData, TSource).GetSerialiser
    fullName: Cqrs.Azure.BlobStorage.StorageStore(Of TData, TSource).GetSerialiser
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Sql.DataStores.SqlDataStoreExtensions.Single``2(System.Collections.Generic.IEnumerable{``0})
  commentId: M:Cqrs.Sql.DataStores.SqlDataStoreExtensions.Single``2(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: Single<TEntity, TDbEntity>(IEnumerable<TEntity>)
  nameWithType: SqlDataStoreExtensions.Single<TEntity, TDbEntity>(IEnumerable<TEntity>)
  fullName: Cqrs.Sql.DataStores.SqlDataStoreExtensions.Single<TEntity, TDbEntity>(System.Collections.Generic.IEnumerable<TEntity>)
  nameWithType.vb: SqlDataStoreExtensions.Single(Of TEntity, TDbEntity)(IEnumerable(Of TEntity))
  fullName.vb: Cqrs.Sql.DataStores.SqlDataStoreExtensions.Single(Of TEntity, TDbEntity)(System.Collections.Generic.IEnumerable(Of TEntity))
  name.vb: Single(Of TEntity, TDbEntity)(IEnumerable(Of TEntity))
  spec.csharp:
  - uid: Cqrs.Sql.DataStores.SqlDataStoreExtensions.Single``2(System.Collections.Generic.IEnumerable{``0})
    name: Single<TEntity, TDbEntity>
    nameWithType: SqlDataStoreExtensions.Single<TEntity, TDbEntity>
    fullName: Cqrs.Sql.DataStores.SqlDataStoreExtensions.Single<TEntity, TDbEntity>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Sql.DataStores.SqlDataStoreExtensions.Single``2(System.Collections.Generic.IEnumerable{``0})
    name: Single(Of TEntity, TDbEntity)
    nameWithType: SqlDataStoreExtensions.Single(Of TEntity, TDbEntity)
    fullName: Cqrs.Sql.DataStores.SqlDataStoreExtensions.Single(Of TEntity, TDbEntity)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Sql.DataStores.SqlDataStoreExtensions
  commentId: T:Cqrs.Sql.DataStores.SqlDataStoreExtensions
  parent: Cqrs.Sql.DataStores
  isExternal: false
  name: SqlDataStoreExtensions
  nameWithType: SqlDataStoreExtensions
  fullName: Cqrs.Sql.DataStores.SqlDataStoreExtensions
- uid: Cqrs.Sql.DataStores
  commentId: N:Cqrs.Sql.DataStores
  isExternal: false
  name: Cqrs.Sql.DataStores
  nameWithType: Cqrs.Sql.DataStores
  fullName: Cqrs.Sql.DataStores
- uid: Cqrs.Azure.BlobStorage.Events.BlobStorageEventStore`1.RawBlobStorageEventStore
  commentId: T:Cqrs.Azure.BlobStorage.Events.BlobStorageEventStore`1.RawBlobStorageEventStore
  parent: Cqrs.Azure.BlobStorage.Events
  isExternal: false
  name: BlobStorageEventStore.RawBlobStorageEventStore<>
  nameWithType: BlobStorageEventStore.RawBlobStorageEventStore<>
  fullName: Cqrs.Azure.BlobStorage.Events.BlobStorageEventStore.RawBlobStorageEventStore<>
  nameWithType.vb: BlobStorageEventStore.RawBlobStorageEventStore(Of )
  fullName.vb: Cqrs.Azure.BlobStorage.Events.BlobStorageEventStore.RawBlobStorageEventStore(Of )
  name.vb: BlobStorageEventStore.RawBlobStorageEventStore(Of )
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.Events.BlobStorageEventStore`1.RawBlobStorageEventStore
    name: BlobStorageEventStore.RawBlobStorageEventStore
    nameWithType: BlobStorageEventStore.RawBlobStorageEventStore
    fullName: Cqrs.Azure.BlobStorage.Events.BlobStorageEventStore.RawBlobStorageEventStore
  - name: <
    nameWithType: <
    fullName: <
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.Events.BlobStorageEventStore`1.RawBlobStorageEventStore
    name: BlobStorageEventStore.RawBlobStorageEventStore
    nameWithType: BlobStorageEventStore.RawBlobStorageEventStore
    fullName: Cqrs.Azure.BlobStorage.Events.BlobStorageEventStore.RawBlobStorageEventStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.Events.BlobStorageEventStore`1.RawBlobStorageEventStore.#ctor*
  commentId: Overload:Cqrs.Azure.BlobStorage.Events.BlobStorageEventStore`1.RawBlobStorageEventStore.#ctor
  isExternal: false
  name: RawBlobStorageEventStore
  nameWithType: BlobStorageEventStore<TAuthenticationToken>.RawBlobStorageEventStore.RawBlobStorageEventStore
  fullName: Cqrs.Azure.BlobStorage.Events.BlobStorageEventStore<TAuthenticationToken>.RawBlobStorageEventStore.RawBlobStorageEventStore
  nameWithType.vb: BlobStorageEventStore(Of TAuthenticationToken).RawBlobStorageEventStore.RawBlobStorageEventStore
  fullName.vb: Cqrs.Azure.BlobStorage.Events.BlobStorageEventStore(Of TAuthenticationToken).RawBlobStorageEventStore.RawBlobStorageEventStore
- uid: cdmdotnet.Logging.ILogger
  commentId: T:cdmdotnet.Logging.ILogger
  parent: cdmdotnet.Logging
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: cdmdotnet.Logging.ILogger
- uid: Cqrs.Azure.BlobStorage.IBlobStorageStoreConnectionStringFactory
  commentId: T:Cqrs.Azure.BlobStorage.IBlobStorageStoreConnectionStringFactory
  parent: Cqrs.Azure.BlobStorage
  isExternal: false
  name: IBlobStorageStoreConnectionStringFactory
  nameWithType: IBlobStorageStoreConnectionStringFactory
  fullName: Cqrs.Azure.BlobStorage.IBlobStorageStoreConnectionStringFactory
- uid: cdmdotnet.Logging
  commentId: N:cdmdotnet.Logging
  isExternal: false
  name: cdmdotnet.Logging
  nameWithType: cdmdotnet.Logging
  fullName: cdmdotnet.Logging
- uid: Cqrs.Azure.BlobStorage.Events.BlobStorageEventStore`1.RawBlobStorageEventStore.AddToCorrelationFolder*
  commentId: Overload:Cqrs.Azure.BlobStorage.Events.BlobStorageEventStore`1.RawBlobStorageEventStore.AddToCorrelationFolder
  isExternal: false
  name: AddToCorrelationFolder
  nameWithType: BlobStorageEventStore<TAuthenticationToken>.RawBlobStorageEventStore.AddToCorrelationFolder
  fullName: Cqrs.Azure.BlobStorage.Events.BlobStorageEventStore<TAuthenticationToken>.RawBlobStorageEventStore.AddToCorrelationFolder
  nameWithType.vb: BlobStorageEventStore(Of TAuthenticationToken).RawBlobStorageEventStore.AddToCorrelationFolder
  fullName.vb: Cqrs.Azure.BlobStorage.Events.BlobStorageEventStore(Of TAuthenticationToken).RawBlobStorageEventStore.AddToCorrelationFolder
- uid: Cqrs.Events.EventData
  commentId: T:Cqrs.Events.EventData
  parent: Cqrs.Events
  isExternal: false
  name: EventData
  nameWithType: EventData
  fullName: Cqrs.Events.EventData
- uid: Cqrs.Events
  commentId: N:Cqrs.Events
  isExternal: false
  name: Cqrs.Events
  nameWithType: Cqrs.Events
  fullName: Cqrs.Events
