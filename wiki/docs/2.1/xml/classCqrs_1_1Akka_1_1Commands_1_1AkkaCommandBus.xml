<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus" kind="class" language="C#" prot="public">
    <compoundname>Cqrs::Akka::Commands::AkkaCommandBus</compoundname>
    <basecompoundref refid="interfaceCqrs_1_1Akka_1_1Commands_1_1IAkkaCommandSender" prot="public" virt="non-virtual">Cqrs::Akka::Commands::IAkkaCommandSender&lt; TAuthenticationToken &gt;</basecompoundref>
    <basecompoundref refid="interfaceCqrs_1_1Bus_1_1ICommandHandlerRegistrar" prot="public" virt="non-virtual">Cqrs.Bus.ICommandHandlerRegistrar</basecompoundref>
    <templateparamlist>
      <param>
        <type>TAuthenticationToken</type>
      </param>
    </templateparamlist>
      <sectiondef kind="property">
      <memberdef kind="property" id="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus_a93ddefb347d0cbc4f869c6d0866c8c64_1a93ddefb347d0cbc4f869c6d0866c8c64" prot="protected" static="yes" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="yes" protectedsettable="no">
        <type><ref refid="classCqrs_1_1Bus_1_1RouteManager" kindref="compound">RouteManager</ref></type>
        <definition>RouteManager Cqrs.Akka.Commands.AkkaCommandBus&lt; TAuthenticationToken &gt;.Routes</definition>
        <argsstring></argsstring>
        <name>Routes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/y/cdmdotnet/cqrs/Framework/Akka.Net/Cqrs.Akka/Commands/AkkaCommandBus.cs" line="31" column="1" bodyfile="/mnt/y/cdmdotnet/cqrs/Framework/Akka.Net/Cqrs.Akka/Commands/AkkaCommandBus.cs" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus_ad74a628484d215ec6daab02b20ac1dbe_1ad74a628484d215ec6daab02b20ac1dbe" prot="protected" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="yes" protectedsettable="no">
        <type><ref refid="interfaceCqrs_1_1Authentication_1_1IAuthenticationTokenHelper" kindref="compound">IAuthenticationTokenHelper</ref>&lt; TAuthenticationToken &gt;</type>
        <definition>IAuthenticationTokenHelper&lt;TAuthenticationToken&gt; Cqrs.Akka.Commands.AkkaCommandBus&lt; TAuthenticationToken &gt;.AuthenticationTokenHelper</definition>
        <argsstring></argsstring>
        <name>AuthenticationTokenHelper</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/y/cdmdotnet/cqrs/Framework/Akka.Net/Cqrs.Akka/Commands/AkkaCommandBus.cs" line="33" column="1" bodyfile="/mnt/y/cdmdotnet/cqrs/Framework/Akka.Net/Cqrs.Akka/Commands/AkkaCommandBus.cs" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus_ad8bdf5674c0d5ea3fd9340bd8cd4b0a8_1ad8bdf5674c0d5ea3fd9340bd8cd4b0a8" prot="protected" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="yes" protectedsettable="no">
        <type>ICorrelationIdHelper</type>
        <definition>ICorrelationIdHelper Cqrs.Akka.Commands.AkkaCommandBus&lt; TAuthenticationToken &gt;.CorrelationIdHelper</definition>
        <argsstring></argsstring>
        <name>CorrelationIdHelper</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/y/cdmdotnet/cqrs/Framework/Akka.Net/Cqrs.Akka/Commands/AkkaCommandBus.cs" line="35" column="1" bodyfile="/mnt/y/cdmdotnet/cqrs/Framework/Akka.Net/Cqrs.Akka/Commands/AkkaCommandBus.cs" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus_ae1229644077b0740d9014708d15b44c2_1ae1229644077b0740d9014708d15b44c2" prot="protected" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="yes" protectedsettable="no">
        <type><ref refid="interfaceCqrs_1_1Configuration_1_1IDependencyResolver" kindref="compound">IDependencyResolver</ref></type>
        <definition>IDependencyResolver Cqrs.Akka.Commands.AkkaCommandBus&lt; TAuthenticationToken &gt;.DependencyResolver</definition>
        <argsstring></argsstring>
        <name>DependencyResolver</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/y/cdmdotnet/cqrs/Framework/Akka.Net/Cqrs.Akka/Commands/AkkaCommandBus.cs" line="37" column="1" bodyfile="/mnt/y/cdmdotnet/cqrs/Framework/Akka.Net/Cqrs.Akka/Commands/AkkaCommandBus.cs" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus_abe5501970c0e39abb9a70670ab985fdc_1abe5501970c0e39abb9a70670ab985fdc" prot="protected" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="yes" protectedsettable="no">
        <type><ref refid="interfaceCqrs_1_1Bus_1_1IBusHelper" kindref="compound">IBusHelper</ref></type>
        <definition>IBusHelper Cqrs.Akka.Commands.AkkaCommandBus&lt; TAuthenticationToken &gt;.BusHelper</definition>
        <argsstring></argsstring>
        <name>BusHelper</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/y/cdmdotnet/cqrs/Framework/Akka.Net/Cqrs.Akka/Commands/AkkaCommandBus.cs" line="56" column="1" bodyfile="/mnt/y/cdmdotnet/cqrs/Framework/Akka.Net/Cqrs.Akka/Commands/AkkaCommandBus.cs" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus_a218e431067a4cadbdd711d74cbe8e53b_1a218e431067a4cadbdd711d74cbe8e53b" prot="protected" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="yes" protectedsettable="no">
        <type>ILogger</type>
        <definition>ILogger Cqrs.Akka.Commands.AkkaCommandBus&lt; TAuthenticationToken &gt;.Logger</definition>
        <argsstring></argsstring>
        <name>Logger</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/y/cdmdotnet/cqrs/Framework/Akka.Net/Cqrs.Akka/Commands/AkkaCommandBus.cs" line="58" column="1" bodyfile="/mnt/y/cdmdotnet/cqrs/Framework/Akka.Net/Cqrs.Akka/Commands/AkkaCommandBus.cs" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus_ae3659627842e6d556320c2d79ab17ebd_1ae3659627842e6d556320c2d79ab17ebd" prot="protected" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="yes" protectedsettable="no">
        <type><ref refid="interfaceCqrs_1_1Commands_1_1ICommandPublisher" kindref="compound">ICommandPublisher</ref>&lt; TAuthenticationToken &gt;</type>
        <definition>ICommandPublisher&lt;TAuthenticationToken&gt; Cqrs.Akka.Commands.AkkaCommandBus&lt; TAuthenticationToken &gt;.CommandSender</definition>
        <argsstring></argsstring>
        <name>CommandSender</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/y/cdmdotnet/cqrs/Framework/Akka.Net/Cqrs.Akka/Commands/AkkaCommandBus.cs" line="60" column="1" bodyfile="/mnt/y/cdmdotnet/cqrs/Framework/Akka.Net/Cqrs.Akka/Commands/AkkaCommandBus.cs" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus_ac65a93dadbbb006dd815c5c54c9ecc82_1ac65a93dadbbb006dd815c5c54c9ecc82" prot="protected" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="yes" protectedsettable="no">
        <type><ref refid="interfaceCqrs_1_1Commands_1_1ICommandReceiver" kindref="compound">ICommandReceiver</ref>&lt; TAuthenticationToken &gt;</type>
        <definition>ICommandReceiver&lt;TAuthenticationToken&gt; Cqrs.Akka.Commands.AkkaCommandBus&lt; TAuthenticationToken &gt;.CommandReceiver</definition>
        <argsstring></argsstring>
        <name>CommandReceiver</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/y/cdmdotnet/cqrs/Framework/Akka.Net/Cqrs.Akka/Commands/AkkaCommandBus.cs" line="62" column="1" bodyfile="/mnt/y/cdmdotnet/cqrs/Framework/Akka.Net/Cqrs.Akka/Commands/AkkaCommandBus.cs" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus_af64744500f25a0b203684ef757aa7962_1af64744500f25a0b203684ef757aa7962" prot="protected" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="yes" protectedsettable="no">
        <type>IDictionary&lt; Guid, IList&lt; <ref refid="interfaceCqrs_1_1Events_1_1IEvent" kindref="compound">IEvent</ref>&lt; TAuthenticationToken &gt; &gt; &gt;</type>
        <definition>IDictionary&lt;Guid, IList&lt;IEvent&lt;TAuthenticationToken&gt; &gt; &gt; Cqrs.Akka.Commands.AkkaCommandBus&lt; TAuthenticationToken &gt;.EventWaits</definition>
        <argsstring></argsstring>
        <name>EventWaits</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/y/cdmdotnet/cqrs/Framework/Akka.Net/Cqrs.Akka/Commands/AkkaCommandBus.cs" line="64" column="1" bodyfile="/mnt/y/cdmdotnet/cqrs/Framework/Akka.Net/Cqrs.Akka/Commands/AkkaCommandBus.cs" bodystart="64" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus_1a16660487f6c209957c48da57b67cf555" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>static</type>
        <definition>static Cqrs.Akka.Commands.AkkaCommandBus&lt; TAuthenticationToken &gt;.AkkaCommandBus</definition>
        <argsstring>()</argsstring>
        <name>AkkaCommandBus</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/y/cdmdotnet/cqrs/Framework/Akka.Net/Cqrs.Akka/Commands/AkkaCommandBus.cs" line="39" column="1" bodyfile="/mnt/y/cdmdotnet/cqrs/Framework/Akka.Net/Cqrs.Akka/Commands/AkkaCommandBus.cs" bodystart="39" bodyend="42"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus_a765b65e299cc1b32c4c0e7ee405c473d_1a765b65e299cc1b32c4c0e7ee405c473d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Cqrs.Akka.Commands.AkkaCommandBus&lt; TAuthenticationToken &gt;.AkkaCommandBus</definition>
        <argsstring>(IBusHelper busHelper, IAuthenticationTokenHelper&lt; TAuthenticationToken &gt; authenticationTokenHelper, ICorrelationIdHelper correlationIdHelper, IDependencyResolver dependencyResolver, ILogger logger, ICommandPublisher&lt; TAuthenticationToken &gt; commandSender, ICommandReceiver&lt; TAuthenticationToken &gt; commandReceiver)</argsstring>
        <name>AkkaCommandBus</name>
        <param>
          <type><ref refid="interfaceCqrs_1_1Bus_1_1IBusHelper" kindref="compound">IBusHelper</ref></type>
          <declname>busHelper</declname>
        </param>
        <param>
          <type><ref refid="interfaceCqrs_1_1Authentication_1_1IAuthenticationTokenHelper" kindref="compound">IAuthenticationTokenHelper</ref>&lt; TAuthenticationToken &gt;</type>
          <declname>authenticationTokenHelper</declname>
        </param>
        <param>
          <type>ICorrelationIdHelper</type>
          <declname>correlationIdHelper</declname>
        </param>
        <param>
          <type><ref refid="interfaceCqrs_1_1Configuration_1_1IDependencyResolver" kindref="compound">IDependencyResolver</ref></type>
          <declname>dependencyResolver</declname>
        </param>
        <param>
          <type>ILogger</type>
          <declname>logger</declname>
        </param>
        <param>
          <type><ref refid="interfaceCqrs_1_1Commands_1_1ICommandPublisher" kindref="compound">ICommandPublisher</ref>&lt; TAuthenticationToken &gt;</type>
          <declname>commandSender</declname>
        </param>
        <param>
          <type><ref refid="interfaceCqrs_1_1Commands_1_1ICommandReceiver" kindref="compound">ICommandReceiver</ref>&lt; TAuthenticationToken &gt;</type>
          <declname>commandReceiver</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/y/cdmdotnet/cqrs/Framework/Akka.Net/Cqrs.Akka/Commands/AkkaCommandBus.cs" line="44" column="1" bodyfile="/mnt/y/cdmdotnet/cqrs/Framework/Akka.Net/Cqrs.Akka/Commands/AkkaCommandBus.cs" bodystart="44" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus_a48e1d46035b1e1a3251636b8a03f7dae_1a48e1d46035b1e1a3251636b8a03f7dae" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Cqrs.Akka.Commands.AkkaCommandBus&lt; TAuthenticationToken &gt;.Publish&lt; TCommand &gt;</definition>
        <argsstring>(TCommand command)</argsstring>
        <name>Publish&lt; TCommand &gt;</name>
        <reimplements refid="interfaceCqrs_1_1Commands_1_1ICommandPublisher_aeeb487ad5686d9c44d214b1daaf7833a_1aeeb487ad5686d9c44d214b1daaf7833a">Publish&lt; TCommand &gt;</reimplements>
        <param>
          <type>TCommand</type>
          <declname>command</declname>
        </param>
        <briefdescription>
<para>Publishes the provided <emphasis>command</emphasis>  on the command bus. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/y/cdmdotnet/cqrs/Framework/Akka.Net/Cqrs.Akka/Commands/AkkaCommandBus.cs" line="130" column="1" bodyfile="/mnt/y/cdmdotnet/cqrs/Framework/Akka.Net/Cqrs.Akka/Commands/AkkaCommandBus.cs" bodystart="130" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus_a696f471533265685f80922e39727288e_1a696f471533265685f80922e39727288e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Cqrs.Akka.Commands.AkkaCommandBus&lt; TAuthenticationToken &gt;.Send&lt; TCommand &gt;</definition>
        <argsstring>(TCommand command)</argsstring>
        <name>Send&lt; TCommand &gt;</name>
        <reimplements refid="interfaceCqrs_1_1Commands_1_1ICommandSender_a551d69f8679399fc0ce0fd99dead507a_1a551d69f8679399fc0ce0fd99dead507a">Send&lt; TCommand &gt;</reimplements>
        <param>
          <type>TCommand</type>
          <declname>command</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/y/cdmdotnet/cqrs/Framework/Akka.Net/Cqrs.Akka/Commands/AkkaCommandBus.cs" line="145" column="1" bodyfile="/mnt/y/cdmdotnet/cqrs/Framework/Akka.Net/Cqrs.Akka/Commands/AkkaCommandBus.cs" bodystart="145" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus_ab52365375febd74ac078e97af6e6cd24_1ab52365375febd74ac078e97af6e6cd24" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Cqrs.Akka.Commands.AkkaCommandBus&lt; TAuthenticationToken &gt;.Publish&lt; TCommand &gt;</definition>
        <argsstring>(IEnumerable&lt; TCommand &gt; commands)</argsstring>
        <name>Publish&lt; TCommand &gt;</name>
        <reimplements refid="interfaceCqrs_1_1Commands_1_1ICommandPublisher_af0f033c0b949e5650032e4f00b11b595_1af0f033c0b949e5650032e4f00b11b595">Publish&lt; TCommand &gt;</reimplements>
        <param>
          <type>IEnumerable&lt; TCommand &gt;</type>
          <declname>commands</declname>
        </param>
        <briefdescription>
<para>Publishes the provided <emphasis>commands</emphasis>  on the command bus. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/y/cdmdotnet/cqrs/Framework/Akka.Net/Cqrs.Akka/Commands/AkkaCommandBus.cs" line="151" column="1" bodyfile="/mnt/y/cdmdotnet/cqrs/Framework/Akka.Net/Cqrs.Akka/Commands/AkkaCommandBus.cs" bodystart="151" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus_a06b7b148493c67d79aaf6b7d59afa487_1a06b7b148493c67d79aaf6b7d59afa487" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Cqrs.Akka.Commands.AkkaCommandBus&lt; TAuthenticationToken &gt;.Send&lt; TCommand &gt;</definition>
        <argsstring>(IEnumerable&lt; TCommand &gt; commands)</argsstring>
        <name>Send&lt; TCommand &gt;</name>
        <reimplements refid="interfaceCqrs_1_1Commands_1_1ICommandSender_a3fb3ec40a3e862f721a7c9204e67e832_1a3fb3ec40a3e862f721a7c9204e67e832">Send&lt; TCommand &gt;</reimplements>
        <param>
          <type>IEnumerable&lt; TCommand &gt;</type>
          <declname>commands</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/y/cdmdotnet/cqrs/Framework/Akka.Net/Cqrs.Akka/Commands/AkkaCommandBus.cs" line="169" column="1" bodyfile="/mnt/y/cdmdotnet/cqrs/Framework/Akka.Net/Cqrs.Akka/Commands/AkkaCommandBus.cs" bodystart="169" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus_a10ed94fc318977777e2e6cc970b8953e_1a10ed94fc318977777e2e6cc970b8953e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>TEvent</type>
        <definition>virtual TEvent Cqrs.Akka.Commands.AkkaCommandBus&lt; TAuthenticationToken &gt;.SendAndWait&lt; TCommand, TEvent &gt;</definition>
        <argsstring>(TCommand command, IEventReceiver&lt; TAuthenticationToken &gt; eventReceiver=null)</argsstring>
        <name>SendAndWait&lt; TCommand, TEvent &gt;</name>
        <reimplements refid="interfaceCqrs_1_1Commands_1_1ISendAndWaitCommandSender_ab64dd5144f0688b0e23ffe289d4ffa2e_1ab64dd5144f0688b0e23ffe289d4ffa2e">SendAndWait&lt; TCommand, TEvent &gt;</reimplements>
        <param>
          <type>TCommand</type>
          <declname>command</declname>
        </param>
        <param>
          <type><ref refid="interfaceCqrs_1_1Events_1_1IEventReceiver" kindref="compound">IEventReceiver</ref>&lt; TAuthenticationToken &gt;</type>
          <declname>eventReceiver</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
<para>Sends the provided <emphasis>command</emphasis>  and waits for an event of <emphasis>TEvent</emphasis>  </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>command</parametername>
</parameternamelist>
<parameterdescription>
<para>The <emphasis>TCommand</emphasis>  to send.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>eventReceiver</parametername>
</parameternamelist>
<parameterdescription>
<para>If provided, is the <ref refid="interfaceCqrs_1_1Events_1_1IEventReceiver" kindref="compound">IEventReceiver&lt;TAuthenticationToken&gt;</ref> that the event is expected to be returned on.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/y/cdmdotnet/cqrs/Framework/Akka.Net/Cqrs.Akka/Commands/AkkaCommandBus.cs" line="180" column="1" bodyfile="/mnt/y/cdmdotnet/cqrs/Framework/Akka.Net/Cqrs.Akka/Commands/AkkaCommandBus.cs" bodystart="180" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus_a4f96fc98615afb9af8fe4d54a398660a_1a4f96fc98615afb9af8fe4d54a398660a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>TEvent</type>
        <definition>virtual TEvent Cqrs.Akka.Commands.AkkaCommandBus&lt; TAuthenticationToken &gt;.SendAndWait&lt; TCommand, TEvent &gt;</definition>
        <argsstring>(TCommand command, int millisecondsTimeout, IEventReceiver&lt; TAuthenticationToken &gt; eventReceiver=null)</argsstring>
        <name>SendAndWait&lt; TCommand, TEvent &gt;</name>
        <reimplements refid="interfaceCqrs_1_1Commands_1_1ISendAndWaitCommandSender_aceee36522f8b677f3737ff0f9f2165ad_1aceee36522f8b677f3737ff0f9f2165ad">SendAndWait&lt; TCommand, TEvent &gt;</reimplements>
        <param>
          <type>TCommand</type>
          <declname>command</declname>
        </param>
        <param>
          <type>int</type>
          <declname>millisecondsTimeout</declname>
        </param>
        <param>
          <type><ref refid="interfaceCqrs_1_1Events_1_1IEventReceiver" kindref="compound">IEventReceiver</ref>&lt; TAuthenticationToken &gt;</type>
          <declname>eventReceiver</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
<para>Sends the provided <emphasis>command</emphasis>  and waits for an event of <emphasis>TEvent</emphasis>  or exits if the specified timeout is expired. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>command</parametername>
</parameternamelist>
<parameterdescription>
<para>The <emphasis>TCommand</emphasis>  to send.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>millisecondsTimeout</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of milliseconds to wait, or F:System.Threading.Timeout.Infinite (-1) to wait indefinitely.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>eventReceiver</parametername>
</parameternamelist>
<parameterdescription>
<para>If provided, is the <ref refid="interfaceCqrs_1_1Events_1_1IEventReceiver" kindref="compound">IEventReceiver&lt;TAuthenticationToken&gt;</ref> that the event is expected to be returned on.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/y/cdmdotnet/cqrs/Framework/Akka.Net/Cqrs.Akka/Commands/AkkaCommandBus.cs" line="192" column="1" bodyfile="/mnt/y/cdmdotnet/cqrs/Framework/Akka.Net/Cqrs.Akka/Commands/AkkaCommandBus.cs" bodystart="192" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus_a8a0f3720395637de5f985e2a19e73fcd_1a8a0f3720395637de5f985e2a19e73fcd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>TEvent</type>
        <definition>virtual TEvent Cqrs.Akka.Commands.AkkaCommandBus&lt; TAuthenticationToken &gt;.SendAndWait&lt; TCommand, TEvent &gt;</definition>
        <argsstring>(TCommand command, TimeSpan timeout, IEventReceiver&lt; TAuthenticationToken &gt; eventReceiver=null)</argsstring>
        <name>SendAndWait&lt; TCommand, TEvent &gt;</name>
        <reimplements refid="interfaceCqrs_1_1Commands_1_1ISendAndWaitCommandSender_ada9643fbf8206bcc72cc5817f747ada8_1ada9643fbf8206bcc72cc5817f747ada8">SendAndWait&lt; TCommand, TEvent &gt;</reimplements>
        <param>
          <type>TCommand</type>
          <declname>command</declname>
        </param>
        <param>
          <type>TimeSpan</type>
          <declname>timeout</declname>
        </param>
        <param>
          <type><ref refid="interfaceCqrs_1_1Events_1_1IEventReceiver" kindref="compound">IEventReceiver</ref>&lt; TAuthenticationToken &gt;</type>
          <declname>eventReceiver</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
<para>Sends the provided <emphasis>command</emphasis>  and waits for an event of <emphasis>TEvent</emphasis>  or exits if the specified timeout is expired. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>command</parametername>
</parameternamelist>
<parameterdescription>
<para>The <emphasis>TCommand</emphasis>  to send.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>A T:System.TimeSpan that represents the number of milliseconds to wait, or a TimeSpan that represents -1 milliseconds to wait indefinitely.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>eventReceiver</parametername>
</parameternamelist>
<parameterdescription>
<para>If provided, is the <ref refid="interfaceCqrs_1_1Events_1_1IEventReceiver" kindref="compound">IEventReceiver&lt;TAuthenticationToken&gt;</ref> that the event is expected to be returned on.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/y/cdmdotnet/cqrs/Framework/Akka.Net/Cqrs.Akka/Commands/AkkaCommandBus.cs" line="204" column="1" bodyfile="/mnt/y/cdmdotnet/cqrs/Framework/Akka.Net/Cqrs.Akka/Commands/AkkaCommandBus.cs" bodystart="204" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus_a80fe44ab4ef2dc64260f2e27a673b91c_1a80fe44ab4ef2dc64260f2e27a673b91c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>TEvent</type>
        <definition>virtual TEvent Cqrs.Akka.Commands.AkkaCommandBus&lt; TAuthenticationToken &gt;.SendAndWait&lt; TCommand, TEvent &gt;</definition>
        <argsstring>(TCommand command, Func&lt; IEnumerable&lt; IEvent&lt; TAuthenticationToken &gt;&gt;, TEvent &gt; condition, IEventReceiver&lt; TAuthenticationToken &gt; eventReceiver=null)</argsstring>
        <name>SendAndWait&lt; TCommand, TEvent &gt;</name>
        <reimplements refid="interfaceCqrs_1_1Commands_1_1ISendAndWaitCommandSender_abc9bda930a4c8c57d8edf1044d2b8002_1abc9bda930a4c8c57d8edf1044d2b8002">SendAndWait&lt; TCommand, TEvent &gt;</reimplements>
        <param>
          <type>TCommand</type>
          <declname>command</declname>
        </param>
        <param>
          <type>Func&lt; IEnumerable&lt; <ref refid="interfaceCqrs_1_1Events_1_1IEvent" kindref="compound">IEvent</ref>&lt; TAuthenticationToken &gt;&gt;, TEvent &gt;</type>
          <declname>condition</declname>
        </param>
        <param>
          <type><ref refid="interfaceCqrs_1_1Events_1_1IEventReceiver" kindref="compound">IEventReceiver</ref>&lt; TAuthenticationToken &gt;</type>
          <declname>eventReceiver</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
<para>Sends the provided <emphasis>command</emphasis>  and waits until the specified condition is satisfied an event of <emphasis>TEvent</emphasis>  </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>command</parametername>
</parameternamelist>
<parameterdescription>
<para>The <emphasis>TCommand</emphasis>  to send.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>condition</parametername>
</parameternamelist>
<parameterdescription>
<para>A delegate to be executed over and over until it returns the <emphasis>TEvent</emphasis>  that is desired, return null to keep trying.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>eventReceiver</parametername>
</parameternamelist>
<parameterdescription>
<para>If provided, is the <ref refid="interfaceCqrs_1_1Events_1_1IEventReceiver" kindref="compound">IEventReceiver&lt;TAuthenticationToken&gt;</ref> that the event is expected to be returned on.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/y/cdmdotnet/cqrs/Framework/Akka.Net/Cqrs.Akka/Commands/AkkaCommandBus.cs" line="219" column="1" bodyfile="/mnt/y/cdmdotnet/cqrs/Framework/Akka.Net/Cqrs.Akka/Commands/AkkaCommandBus.cs" bodystart="219" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus_affd63fcc939b04803ca58dad194fc723_1affd63fcc939b04803ca58dad194fc723" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>TEvent</type>
        <definition>virtual TEvent Cqrs.Akka.Commands.AkkaCommandBus&lt; TAuthenticationToken &gt;.SendAndWait&lt; TCommand, TEvent &gt;</definition>
        <argsstring>(TCommand command, Func&lt; IEnumerable&lt; IEvent&lt; TAuthenticationToken &gt;&gt;, TEvent &gt; condition, int millisecondsTimeout, IEventReceiver&lt; TAuthenticationToken &gt; eventReceiver=null)</argsstring>
        <name>SendAndWait&lt; TCommand, TEvent &gt;</name>
        <reimplements refid="interfaceCqrs_1_1Commands_1_1ISendAndWaitCommandSender_a230c249fa137eafc9857c3b73ae86fcd_1a230c249fa137eafc9857c3b73ae86fcd">SendAndWait&lt; TCommand, TEvent &gt;</reimplements>
        <param>
          <type>TCommand</type>
          <declname>command</declname>
        </param>
        <param>
          <type>Func&lt; IEnumerable&lt; <ref refid="interfaceCqrs_1_1Events_1_1IEvent" kindref="compound">IEvent</ref>&lt; TAuthenticationToken &gt;&gt;, TEvent &gt;</type>
          <declname>condition</declname>
        </param>
        <param>
          <type>int</type>
          <declname>millisecondsTimeout</declname>
        </param>
        <param>
          <type><ref refid="interfaceCqrs_1_1Events_1_1IEventReceiver" kindref="compound">IEventReceiver</ref>&lt; TAuthenticationToken &gt;</type>
          <declname>eventReceiver</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
<para>Sends the provided <emphasis>command</emphasis>  and waits for an event of <emphasis>TEvent</emphasis>  or exits if the specified timeout is expired. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>command</parametername>
</parameternamelist>
<parameterdescription>
<para>The <emphasis>TCommand</emphasis>  to send.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>condition</parametername>
</parameternamelist>
<parameterdescription>
<para>A delegate to be executed over and over until it returns the <emphasis>TEvent</emphasis>  that is desired, return null to keep trying.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>millisecondsTimeout</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of milliseconds to wait, or F:System.Threading.Timeout.Infinite (-1) to wait indefinitely.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>eventReceiver</parametername>
</parameternamelist>
<parameterdescription>
<para>If provided, is the <ref refid="interfaceCqrs_1_1Events_1_1IEventReceiver" kindref="compound">IEventReceiver&lt;TAuthenticationToken&gt;</ref> that the event is expected to be returned on.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/y/cdmdotnet/cqrs/Framework/Akka.Net/Cqrs.Akka/Commands/AkkaCommandBus.cs" line="232" column="1" bodyfile="/mnt/y/cdmdotnet/cqrs/Framework/Akka.Net/Cqrs.Akka/Commands/AkkaCommandBus.cs" bodystart="232" bodyend="253"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus_a0bd9b9e4522286eba7af71d3ab400d5f_1a0bd9b9e4522286eba7af71d3ab400d5f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>TEvent</type>
        <definition>virtual TEvent Cqrs.Akka.Commands.AkkaCommandBus&lt; TAuthenticationToken &gt;.SendAndWait&lt; TCommand, TEvent &gt;</definition>
        <argsstring>(TCommand command, Func&lt; IEnumerable&lt; IEvent&lt; TAuthenticationToken &gt;&gt;, TEvent &gt; condition, TimeSpan timeout, IEventReceiver&lt; TAuthenticationToken &gt; eventReceiver=null)</argsstring>
        <name>SendAndWait&lt; TCommand, TEvent &gt;</name>
        <reimplements refid="interfaceCqrs_1_1Commands_1_1ISendAndWaitCommandSender_a8a9b1333e70cc9d8a91d6374354a851f_1a8a9b1333e70cc9d8a91d6374354a851f">SendAndWait&lt; TCommand, TEvent &gt;</reimplements>
        <param>
          <type>TCommand</type>
          <declname>command</declname>
        </param>
        <param>
          <type>Func&lt; IEnumerable&lt; <ref refid="interfaceCqrs_1_1Events_1_1IEvent" kindref="compound">IEvent</ref>&lt; TAuthenticationToken &gt;&gt;, TEvent &gt;</type>
          <declname>condition</declname>
        </param>
        <param>
          <type>TimeSpan</type>
          <declname>timeout</declname>
        </param>
        <param>
          <type><ref refid="interfaceCqrs_1_1Events_1_1IEventReceiver" kindref="compound">IEventReceiver</ref>&lt; TAuthenticationToken &gt;</type>
          <declname>eventReceiver</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
<para>Sends the provided <emphasis>command</emphasis>  and waits for an event of <emphasis>TEvent</emphasis>  or exits if the specified timeout is expired. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>command</parametername>
</parameternamelist>
<parameterdescription>
<para>The <emphasis>TCommand</emphasis>  to send.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>condition</parametername>
</parameternamelist>
<parameterdescription>
<para>A delegate to be executed over and over until it returns the <emphasis>TEvent</emphasis>  that is desired, return null to keep trying.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>A T:System.TimeSpan that represents the number of milliseconds to wait, or a TimeSpan that represents -1 milliseconds to wait indefinitely.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>eventReceiver</parametername>
</parameternamelist>
<parameterdescription>
<para>If provided, is the <ref refid="interfaceCqrs_1_1Events_1_1IEventReceiver" kindref="compound">IEventReceiver&lt;TAuthenticationToken&gt;</ref> that the event is expected to be returned on.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/y/cdmdotnet/cqrs/Framework/Akka.Net/Cqrs.Akka/Commands/AkkaCommandBus.cs" line="262" column="1" bodyfile="/mnt/y/cdmdotnet/cqrs/Framework/Akka.Net/Cqrs.Akka/Commands/AkkaCommandBus.cs" bodystart="262" bodyend="269"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus_a8ed33fb315493d52470bc3bc2bf076f2_1a8ed33fb315493d52470bc3bc2bf076f2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Cqrs.Akka.Commands.AkkaCommandBus&lt; TAuthenticationToken &gt;.RegisterHandler&lt; TMessage &gt;</definition>
        <argsstring>(Action&lt; TMessage &gt; handler, Type targetedType, bool holdMessageLock=true)</argsstring>
        <name>RegisterHandler&lt; TMessage &gt;</name>
        <reimplements refid="interfaceCqrs_1_1Bus_1_1IHandlerRegistrar_ab6ca4dfdc54a5aeebe4651dbdb479f55_1ab6ca4dfdc54a5aeebe4651dbdb479f55">RegisterHandler&lt; TMessage &gt;</reimplements>
        <param>
          <type>Action&lt; TMessage &gt;</type>
          <declname>handler</declname>
        </param>
        <param>
          <type>Type</type>
          <declname>targetedType</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>holdMessageLock</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Register an event or command handler that will listen and respond to events or commands. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/y/cdmdotnet/cqrs/Framework/Akka.Net/Cqrs.Akka/Commands/AkkaCommandBus.cs" line="278" column="1" bodyfile="/mnt/y/cdmdotnet/cqrs/Framework/Akka.Net/Cqrs.Akka/Commands/AkkaCommandBus.cs" bodystart="278" bodyend="282"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus_adc21072d2b02c745747c4d585a53dba3_1adc21072d2b02c745747c4d585a53dba3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Cqrs.Akka.Commands.AkkaCommandBus&lt; TAuthenticationToken &gt;.RegisterHandler&lt; TMessage &gt;</definition>
        <argsstring>(Action&lt; TMessage &gt; handler, bool holdMessageLock=true)</argsstring>
        <name>RegisterHandler&lt; TMessage &gt;</name>
        <reimplements refid="interfaceCqrs_1_1Bus_1_1IHandlerRegistrar_a07792dcc9a8b272709ff2e2dd336a642_1a07792dcc9a8b272709ff2e2dd336a642">RegisterHandler&lt; TMessage &gt;</reimplements>
        <param>
          <type>Action&lt; TMessage &gt;</type>
          <declname>handler</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>holdMessageLock</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Register an event or command handler that will listen and respond to events or commands. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/y/cdmdotnet/cqrs/Framework/Akka.Net/Cqrs.Akka/Commands/AkkaCommandBus.cs" line="287" column="1" bodyfile="/mnt/y/cdmdotnet/cqrs/Framework/Akka.Net/Cqrs.Akka/Commands/AkkaCommandBus.cs" bodystart="287" bodyend="291"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus_a9755a84c0b971ce0862abdc2783422ce_1a9755a84c0b971ce0862abdc2783422ce" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Cqrs.Akka.Commands.AkkaCommandBus&lt; TAuthenticationToken &gt;.PrepareCommand&lt; TCommand &gt;</definition>
        <argsstring>(TCommand command)</argsstring>
        <name>PrepareCommand&lt; TCommand &gt;</name>
        <param>
          <type>TCommand</type>
          <declname>command</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/y/cdmdotnet/cqrs/Framework/Akka.Net/Cqrs.Akka/Commands/AkkaCommandBus.cs" line="66" column="1" bodyfile="/mnt/y/cdmdotnet/cqrs/Framework/Akka.Net/Cqrs.Akka/Commands/AkkaCommandBus.cs" bodystart="66" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus_ae3e5f1725bceb0359aedb74ded530858_1ae3e5f1725bceb0359aedb74ded530858" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool Cqrs.Akka.Commands.AkkaCommandBus&lt; TAuthenticationToken &gt;.PrepareAndValidateCommand&lt; TCommand &gt;</definition>
        <argsstring>(TCommand command, out RouteHandlerDelegate commandHandler)</argsstring>
        <name>PrepareAndValidateCommand&lt; TCommand &gt;</name>
        <param>
          <type>TCommand</type>
          <declname>command</declname>
        </param>
        <param>
          <type>out <ref refid="classCqrs_1_1Bus_1_1RouteHandlerDelegate" kindref="compound">RouteHandlerDelegate</ref></type>
          <declname>commandHandler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/y/cdmdotnet/cqrs/Framework/Akka.Net/Cqrs.Akka/Commands/AkkaCommandBus.cs" line="83" column="1" bodyfile="/mnt/y/cdmdotnet/cqrs/Framework/Akka.Net/Cqrs.Akka/Commands/AkkaCommandBus.cs" bodystart="83" bodyend="126"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A ICommandPublisher&lt;TAuthenticationToken&gt; that resolves handlers , executes the handler and then publishes the ICommand&lt;TAuthenticationToken&gt; on the public command bus. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="6">
        <label>IHandlerRegistrar</label>
        <link refid="interfaceCqrs_1_1Bus_1_1IHandlerRegistrar"/>
      </node>
      <node id="0">
        <label>Cqrs.Akka.Commands.AkkaCommandBus&lt; TAuthenticationToken &gt;</label>
        <link refid="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>ICommandHandlerRegistrar</label>
        <link refid="interfaceCqrs_1_1Bus_1_1ICommandHandlerRegistrar"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>ICommandPublisher&lt; TAuthenticationToken &gt;</label>
        <link refid="interfaceCqrs_1_1Commands_1_1ICommandPublisher"/>
      </node>
      <node id="3">
        <label>ICommandSender&lt; TAuthenticationToken &gt;</label>
        <link refid="interfaceCqrs_1_1Commands_1_1ICommandSender"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>IAkkaCommandSender&lt; TAuthenticationToken &gt;</label>
        <link refid="interfaceCqrs_1_1Akka_1_1Commands_1_1IAkkaCommandSender"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>ISendAndWaitCommandSender&lt; TAuthenticationToken &gt;</label>
        <link refid="interfaceCqrs_1_1Commands_1_1ISendAndWaitCommandSender"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="13">
        <label>IHandlerRegistrar</label>
        <link refid="interfaceCqrs_1_1Bus_1_1IHandlerRegistrar"/>
      </node>
      <node id="7">
        <label>Cqrs.Akka.Commands.AkkaCommandBus&lt; TAuthenticationToken &gt;</label>
        <link refid="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
        <childnode refid="12" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>ICommandHandlerRegistrar</label>
        <link refid="interfaceCqrs_1_1Bus_1_1ICommandHandlerRegistrar"/>
        <childnode refid="13" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>ICommandPublisher&lt; TAuthenticationToken &gt;</label>
        <link refid="interfaceCqrs_1_1Commands_1_1ICommandPublisher"/>
      </node>
      <node id="10">
        <label>ICommandSender&lt; TAuthenticationToken &gt;</label>
        <link refid="interfaceCqrs_1_1Commands_1_1ICommandSender"/>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>IAkkaCommandSender&lt; TAuthenticationToken &gt;</label>
        <link refid="interfaceCqrs_1_1Akka_1_1Commands_1_1IAkkaCommandSender"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>ISendAndWaitCommandSender&lt; TAuthenticationToken &gt;</label>
        <link refid="interfaceCqrs_1_1Commands_1_1ISendAndWaitCommandSender"/>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/mnt/y/cdmdotnet/cqrs/Framework/Akka.Net/Cqrs.Akka/Commands/AkkaCommandBus.cs" line="30" column="1" bodyfile="/mnt/y/cdmdotnet/cqrs/Framework/Akka.Net/Cqrs.Akka/Commands/AkkaCommandBus.cs" bodystart="27" bodyend="294"/>
    <listofallmembers>
      <member refid="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus_1a16660487f6c209957c48da57b67cf555" prot="private" virt="non-virtual"><scope>Cqrs::Akka::Commands::AkkaCommandBus</scope><name>AkkaCommandBus</name></member>
      <member refid="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus_a765b65e299cc1b32c4c0e7ee405c473d_1a765b65e299cc1b32c4c0e7ee405c473d" prot="public" virt="non-virtual"><scope>Cqrs::Akka::Commands::AkkaCommandBus</scope><name>AkkaCommandBus</name></member>
      <member refid="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus_ad74a628484d215ec6daab02b20ac1dbe_1ad74a628484d215ec6daab02b20ac1dbe" prot="protected" virt="non-virtual"><scope>Cqrs::Akka::Commands::AkkaCommandBus</scope><name>AuthenticationTokenHelper</name></member>
      <member refid="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus_abe5501970c0e39abb9a70670ab985fdc_1abe5501970c0e39abb9a70670ab985fdc" prot="protected" virt="non-virtual"><scope>Cqrs::Akka::Commands::AkkaCommandBus</scope><name>BusHelper</name></member>
      <member refid="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus_ac65a93dadbbb006dd815c5c54c9ecc82_1ac65a93dadbbb006dd815c5c54c9ecc82" prot="protected" virt="non-virtual"><scope>Cqrs::Akka::Commands::AkkaCommandBus</scope><name>CommandReceiver</name></member>
      <member refid="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus_ae3659627842e6d556320c2d79ab17ebd_1ae3659627842e6d556320c2d79ab17ebd" prot="protected" virt="non-virtual"><scope>Cqrs::Akka::Commands::AkkaCommandBus</scope><name>CommandSender</name></member>
      <member refid="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus_ad8bdf5674c0d5ea3fd9340bd8cd4b0a8_1ad8bdf5674c0d5ea3fd9340bd8cd4b0a8" prot="protected" virt="non-virtual"><scope>Cqrs::Akka::Commands::AkkaCommandBus</scope><name>CorrelationIdHelper</name></member>
      <member refid="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus_ae1229644077b0740d9014708d15b44c2_1ae1229644077b0740d9014708d15b44c2" prot="protected" virt="non-virtual"><scope>Cqrs::Akka::Commands::AkkaCommandBus</scope><name>DependencyResolver</name></member>
      <member refid="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus_af64744500f25a0b203684ef757aa7962_1af64744500f25a0b203684ef757aa7962" prot="protected" virt="non-virtual"><scope>Cqrs::Akka::Commands::AkkaCommandBus</scope><name>EventWaits</name></member>
      <member refid="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus_a218e431067a4cadbdd711d74cbe8e53b_1a218e431067a4cadbdd711d74cbe8e53b" prot="protected" virt="non-virtual"><scope>Cqrs::Akka::Commands::AkkaCommandBus</scope><name>Logger</name></member>
      <member refid="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus_ae3e5f1725bceb0359aedb74ded530858_1ae3e5f1725bceb0359aedb74ded530858" prot="protected" virt="virtual"><scope>Cqrs::Akka::Commands::AkkaCommandBus</scope><name>PrepareAndValidateCommand&lt; TCommand &gt;</name></member>
      <member refid="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus_a9755a84c0b971ce0862abdc2783422ce_1a9755a84c0b971ce0862abdc2783422ce" prot="protected" virt="virtual"><scope>Cqrs::Akka::Commands::AkkaCommandBus</scope><name>PrepareCommand&lt; TCommand &gt;</name></member>
      <member refid="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus_a48e1d46035b1e1a3251636b8a03f7dae_1a48e1d46035b1e1a3251636b8a03f7dae" prot="public" virt="virtual"><scope>Cqrs::Akka::Commands::AkkaCommandBus</scope><name>Publish&lt; TCommand &gt;</name></member>
      <member refid="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus_ab52365375febd74ac078e97af6e6cd24_1ab52365375febd74ac078e97af6e6cd24" prot="public" virt="virtual"><scope>Cqrs::Akka::Commands::AkkaCommandBus</scope><name>Publish&lt; TCommand &gt;</name></member>
      <member refid="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus_a8ed33fb315493d52470bc3bc2bf076f2_1a8ed33fb315493d52470bc3bc2bf076f2" prot="public" virt="non-virtual"><scope>Cqrs::Akka::Commands::AkkaCommandBus</scope><name>RegisterHandler&lt; TMessage &gt;</name></member>
      <member refid="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus_adc21072d2b02c745747c4d585a53dba3_1adc21072d2b02c745747c4d585a53dba3" prot="public" virt="non-virtual"><scope>Cqrs::Akka::Commands::AkkaCommandBus</scope><name>RegisterHandler&lt; TMessage &gt;</name></member>
      <member refid="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus_a93ddefb347d0cbc4f869c6d0866c8c64_1a93ddefb347d0cbc4f869c6d0866c8c64" prot="protected" virt="non-virtual"><scope>Cqrs::Akka::Commands::AkkaCommandBus</scope><name>Routes</name></member>
      <member refid="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus_a696f471533265685f80922e39727288e_1a696f471533265685f80922e39727288e" prot="public" virt="virtual"><scope>Cqrs::Akka::Commands::AkkaCommandBus</scope><name>Send&lt; TCommand &gt;</name></member>
      <member refid="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus_a06b7b148493c67d79aaf6b7d59afa487_1a06b7b148493c67d79aaf6b7d59afa487" prot="public" virt="virtual"><scope>Cqrs::Akka::Commands::AkkaCommandBus</scope><name>Send&lt; TCommand &gt;</name></member>
      <member refid="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus_a10ed94fc318977777e2e6cc970b8953e_1a10ed94fc318977777e2e6cc970b8953e" prot="public" virt="virtual"><scope>Cqrs::Akka::Commands::AkkaCommandBus</scope><name>SendAndWait&lt; TCommand, TEvent &gt;</name></member>
      <member refid="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus_a4f96fc98615afb9af8fe4d54a398660a_1a4f96fc98615afb9af8fe4d54a398660a" prot="public" virt="virtual"><scope>Cqrs::Akka::Commands::AkkaCommandBus</scope><name>SendAndWait&lt; TCommand, TEvent &gt;</name></member>
      <member refid="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus_a8a0f3720395637de5f985e2a19e73fcd_1a8a0f3720395637de5f985e2a19e73fcd" prot="public" virt="virtual"><scope>Cqrs::Akka::Commands::AkkaCommandBus</scope><name>SendAndWait&lt; TCommand, TEvent &gt;</name></member>
      <member refid="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus_a80fe44ab4ef2dc64260f2e27a673b91c_1a80fe44ab4ef2dc64260f2e27a673b91c" prot="public" virt="virtual"><scope>Cqrs::Akka::Commands::AkkaCommandBus</scope><name>SendAndWait&lt; TCommand, TEvent &gt;</name></member>
      <member refid="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus_affd63fcc939b04803ca58dad194fc723_1affd63fcc939b04803ca58dad194fc723" prot="public" virt="virtual"><scope>Cqrs::Akka::Commands::AkkaCommandBus</scope><name>SendAndWait&lt; TCommand, TEvent &gt;</name></member>
      <member refid="classCqrs_1_1Akka_1_1Commands_1_1AkkaCommandBus_a0bd9b9e4522286eba7af71d3ab400d5f_1a0bd9b9e4522286eba7af71d3ab400d5f" prot="public" virt="virtual"><scope>Cqrs::Akka::Commands::AkkaCommandBus</scope><name>SendAndWait&lt; TCommand, TEvent &gt;</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
