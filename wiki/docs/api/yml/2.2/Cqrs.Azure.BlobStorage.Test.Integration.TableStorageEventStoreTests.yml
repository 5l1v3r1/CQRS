### YamlMime:ManagedReference
items:
- uid: Cqrs.Azure.BlobStorage.Test.Integration.TableStorageEventStoreTests
  commentId: T:Cqrs.Azure.BlobStorage.Test.Integration.TableStorageEventStoreTests
  id: TableStorageEventStoreTests
  parent: Cqrs.Azure.BlobStorage.Test.Integration
  children:
  - Cqrs.Azure.BlobStorage.Test.Integration.TableStorageEventStoreTests.CreateEventStore(Cqrs.Events.IEventBuilder{System.Guid},Cqrs.Events.IEventDeserialiser{System.Guid},cdmdotnet.Logging.ILogger,Cqrs.Azure.BlobStorage.ITableStorageStoreConnectionStringFactory)
  - Cqrs.Azure.BlobStorage.Test.Integration.TableStorageEventStoreTests.Save_ValidEvent_EventCanBeRetreived
  langs:
  - csharp
  - vb
  name: TableStorageEventStoreTests
  nameWithType: TableStorageEventStoreTests
  fullName: Cqrs.Azure.BlobStorage.Test.Integration.TableStorageEventStoreTests
  type: Class
  source:
    remote:
      path: Framework/Azure/Tests/Cqrs.Azure.BlobStorage.Test.Integration/TableStorageEventStoreTests.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: TableStorageEventStoreTests
    path: Framework/Azure/Tests/Cqrs.Azure.BlobStorage.Test.Integration/TableStorageEventStoreTests.cs
    startLine: 31
  assemblies:
  - Cqrs.Azure.BlobStorage.Test.Integration
  namespace: Cqrs.Azure.BlobStorage.Test.Integration
  summary: "\nA series of tests on the <xref href=\"Cqrs.Azure.BlobStorage.Events.TableStorageEventStore%601\" data-throw-if-not-resolved=\"false\"></xref> class\n"
  example: []
  syntax:
    content: >-
      [TestFixture]

      public class TableStorageEventStoreTests
    content.vb: >-
      <TestFixture>

      Public Class TableStorageEventStoreTests
  inheritance:
  - System.Object
  derivedClasses:
  - Cqrs.Azure.Storage.Test.Integration.TableStorageEventStoreTests
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: NUnit.Framework.TestFixtureAttribute
    ctor: NUnit.Framework.TestFixtureAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Cqrs.Azure.BlobStorage.Test.Integration.TableStorageEventStoreTests.Save_ValidEvent_EventCanBeRetreived
  commentId: M:Cqrs.Azure.BlobStorage.Test.Integration.TableStorageEventStoreTests.Save_ValidEvent_EventCanBeRetreived
  id: Save_ValidEvent_EventCanBeRetreived
  parent: Cqrs.Azure.BlobStorage.Test.Integration.TableStorageEventStoreTests
  langs:
  - csharp
  - vb
  name: Save_ValidEvent_EventCanBeRetreived()
  nameWithType: TableStorageEventStoreTests.Save_ValidEvent_EventCanBeRetreived()
  fullName: Cqrs.Azure.BlobStorage.Test.Integration.TableStorageEventStoreTests.Save_ValidEvent_EventCanBeRetreived()
  type: Method
  source:
    remote:
      path: Framework/Azure/Tests/Cqrs.Azure.BlobStorage.Test.Integration/TableStorageEventStoreTests.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Save_ValidEvent_EventCanBeRetreived
    path: Framework/Azure/Tests/Cqrs.Azure.BlobStorage.Test.Integration/TableStorageEventStoreTests.cs
    startLine: 39
  assemblies:
  - Cqrs.Azure.BlobStorage.Test.Integration
  namespace: Cqrs.Azure.BlobStorage.Test.Integration
  summary: "\nTests the <xref href=\"Cqrs.Events.IEventStore%601.Save(System.Type%2cCqrs.Events.IEvent%7b%600%7d)\" data-throw-if-not-resolved=\"false\"></xref> method\nPassing a valid test <xref href=\"Cqrs.Events.IEvent%601\" data-throw-if-not-resolved=\"false\"></xref>\nExpecting the test <xref href=\"Cqrs.Events.IEvent%601\" data-throw-if-not-resolved=\"false\"></xref> is able to be read.\n"
  example: []
  syntax:
    content: >-
      [Test]

      public virtual void Save_ValidEvent_EventCanBeRetreived()
    content.vb: >-
      <Test>

      Public Overridable Sub Save_ValidEvent_EventCanBeRetreived
  overload: Cqrs.Azure.BlobStorage.Test.Integration.TableStorageEventStoreTests.Save_ValidEvent_EventCanBeRetreived*
  attributes:
  - type: NUnit.Framework.TestAttribute
    ctor: NUnit.Framework.TestAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Cqrs.Azure.BlobStorage.Test.Integration.TableStorageEventStoreTests.CreateEventStore(Cqrs.Events.IEventBuilder{System.Guid},Cqrs.Events.IEventDeserialiser{System.Guid},cdmdotnet.Logging.ILogger,Cqrs.Azure.BlobStorage.ITableStorageStoreConnectionStringFactory)
  commentId: M:Cqrs.Azure.BlobStorage.Test.Integration.TableStorageEventStoreTests.CreateEventStore(Cqrs.Events.IEventBuilder{System.Guid},Cqrs.Events.IEventDeserialiser{System.Guid},cdmdotnet.Logging.ILogger,Cqrs.Azure.BlobStorage.ITableStorageStoreConnectionStringFactory)
  id: CreateEventStore(Cqrs.Events.IEventBuilder{System.Guid},Cqrs.Events.IEventDeserialiser{System.Guid},cdmdotnet.Logging.ILogger,Cqrs.Azure.BlobStorage.ITableStorageStoreConnectionStringFactory)
  parent: Cqrs.Azure.BlobStorage.Test.Integration.TableStorageEventStoreTests
  langs:
  - csharp
  - vb
  name: CreateEventStore(IEventBuilder<Guid>, IEventDeserialiser<Guid>, ILogger, ITableStorageStoreConnectionStringFactory)
  nameWithType: TableStorageEventStoreTests.CreateEventStore(IEventBuilder<Guid>, IEventDeserialiser<Guid>, ILogger, ITableStorageStoreConnectionStringFactory)
  fullName: Cqrs.Azure.BlobStorage.Test.Integration.TableStorageEventStoreTests.CreateEventStore(Cqrs.Events.IEventBuilder<System.Guid>, Cqrs.Events.IEventDeserialiser<System.Guid>, cdmdotnet.Logging.ILogger, Cqrs.Azure.BlobStorage.ITableStorageStoreConnectionStringFactory)
  type: Method
  source:
    remote:
      path: Framework/Azure/Tests/Cqrs.Azure.BlobStorage.Test.Integration/TableStorageEventStoreTests.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: CreateEventStore
    path: Framework/Azure/Tests/Cqrs.Azure.BlobStorage.Test.Integration/TableStorageEventStoreTests.cs
    startLine: 96
  assemblies:
  - Cqrs.Azure.BlobStorage.Test.Integration
  namespace: Cqrs.Azure.BlobStorage.Test.Integration
  summary: "\nCreate a <xref href=\"Cqrs.Azure.BlobStorage.Events.TableStorageEventStore%601\" data-throw-if-not-resolved=\"false\"></xref> ready for testing.\n"
  example: []
  syntax:
    content: protected virtual TableStorageEventStore<Guid> CreateEventStore(IEventBuilder<Guid> eventBuilder, IEventDeserialiser<Guid> eventDeserialiser, ILogger logger, ITableStorageStoreConnectionStringFactory tableStorageEventStoreConnectionStringFactory)
    parameters:
    - id: eventBuilder
      type: Cqrs.Events.IEventBuilder{System.Guid}
    - id: eventDeserialiser
      type: Cqrs.Events.IEventDeserialiser{System.Guid}
    - id: logger
      type: cdmdotnet.Logging.ILogger
    - id: tableStorageEventStoreConnectionStringFactory
      type: Cqrs.Azure.BlobStorage.ITableStorageStoreConnectionStringFactory
    return:
      type: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore{System.Guid}
    content.vb: Protected Overridable Function CreateEventStore(eventBuilder As IEventBuilder(Of Guid), eventDeserialiser As IEventDeserialiser(Of Guid), logger As ILogger, tableStorageEventStoreConnectionStringFactory As ITableStorageStoreConnectionStringFactory) As TableStorageEventStore(Of Guid)
  overload: Cqrs.Azure.BlobStorage.Test.Integration.TableStorageEventStoreTests.CreateEventStore*
  nameWithType.vb: TableStorageEventStoreTests.CreateEventStore(IEventBuilder(Of Guid), IEventDeserialiser(Of Guid), ILogger, ITableStorageStoreConnectionStringFactory)
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Cqrs.Azure.BlobStorage.Test.Integration.TableStorageEventStoreTests.CreateEventStore(Cqrs.Events.IEventBuilder(Of System.Guid), Cqrs.Events.IEventDeserialiser(Of System.Guid), cdmdotnet.Logging.ILogger, Cqrs.Azure.BlobStorage.ITableStorageStoreConnectionStringFactory)
  name.vb: CreateEventStore(IEventBuilder(Of Guid), IEventDeserialiser(Of Guid), ILogger, ITableStorageStoreConnectionStringFactory)
references:
- uid: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore`1
  commentId: T:Cqrs.Azure.BlobStorage.Events.TableStorageEventStore`1
  isExternal: false
  name: TableStorageEventStore<TAuthenticationToken>
  nameWithType: TableStorageEventStore<TAuthenticationToken>
  fullName: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore<TAuthenticationToken>
  nameWithType.vb: TableStorageEventStore(Of TAuthenticationToken)
  fullName.vb: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore(Of TAuthenticationToken)
  name.vb: TableStorageEventStore(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore`1
    name: TableStorageEventStore
    nameWithType: TableStorageEventStore
    fullName: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore`1
    name: TableStorageEventStore
    nameWithType: TableStorageEventStore
    fullName: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.Test.Integration
  commentId: N:Cqrs.Azure.BlobStorage.Test.Integration
  isExternal: false
  name: Cqrs.Azure.BlobStorage.Test.Integration
  nameWithType: Cqrs.Azure.BlobStorage.Test.Integration
  fullName: Cqrs.Azure.BlobStorage.Test.Integration
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Cqrs.Events.IEventStore`1.Save(System.Type,Cqrs.Events.IEvent{`0})
  commentId: M:Cqrs.Events.IEventStore`1.Save(System.Type,Cqrs.Events.IEvent{`0})
  isExternal: true
  name: Save(Type, IEvent<TAuthenticationToken>)
  nameWithType: IEventStore<TAuthenticationToken>.Save(Type, IEvent<TAuthenticationToken>)
  fullName: Cqrs.Events.IEventStore<TAuthenticationToken>.Save(System.Type, Cqrs.Events.IEvent<TAuthenticationToken>)
  nameWithType.vb: IEventStore(Of TAuthenticationToken).Save(Type, IEvent(Of TAuthenticationToken))
  fullName.vb: Cqrs.Events.IEventStore(Of TAuthenticationToken).Save(System.Type, Cqrs.Events.IEvent(Of TAuthenticationToken))
  name.vb: Save(Type, IEvent(Of TAuthenticationToken))
  spec.csharp:
  - uid: Cqrs.Events.IEventStore`1.Save(System.Type,Cqrs.Events.IEvent{`0})
    name: Save
    nameWithType: IEventStore<TAuthenticationToken>.Save
    fullName: Cqrs.Events.IEventStore<TAuthenticationToken>.Save
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.Events.IEventStore`1.Save(System.Type,Cqrs.Events.IEvent{`0})
    name: Save
    nameWithType: IEventStore(Of TAuthenticationToken).Save
    fullName: Cqrs.Events.IEventStore(Of TAuthenticationToken).Save
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Events.IEvent`1
  commentId: T:Cqrs.Events.IEvent`1
  isExternal: false
  name: IEvent<TAuthenticationToken>
  nameWithType: IEvent<TAuthenticationToken>
  fullName: Cqrs.Events.IEvent<TAuthenticationToken>
  nameWithType.vb: IEvent(Of TAuthenticationToken)
  fullName.vb: Cqrs.Events.IEvent(Of TAuthenticationToken)
  name.vb: IEvent(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Events.IEvent`1
    name: IEvent
    nameWithType: IEvent
    fullName: Cqrs.Events.IEvent
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Azure.BlobStorage.Test.Integration.TableStorageEventStoreTests.Save_ValidEvent_EventCanBeRetreived*
  commentId: Overload:Cqrs.Azure.BlobStorage.Test.Integration.TableStorageEventStoreTests.Save_ValidEvent_EventCanBeRetreived
  isExternal: false
  name: Save_ValidEvent_EventCanBeRetreived
  nameWithType: TableStorageEventStoreTests.Save_ValidEvent_EventCanBeRetreived
  fullName: Cqrs.Azure.BlobStorage.Test.Integration.TableStorageEventStoreTests.Save_ValidEvent_EventCanBeRetreived
- uid: Cqrs.Azure.BlobStorage.Test.Integration.TableStorageEventStoreTests.CreateEventStore*
  commentId: Overload:Cqrs.Azure.BlobStorage.Test.Integration.TableStorageEventStoreTests.CreateEventStore
  isExternal: false
  name: CreateEventStore
  nameWithType: TableStorageEventStoreTests.CreateEventStore
  fullName: Cqrs.Azure.BlobStorage.Test.Integration.TableStorageEventStoreTests.CreateEventStore
- uid: Cqrs.Events.IEventBuilder{System.Guid}
  commentId: T:Cqrs.Events.IEventBuilder{System.Guid}
  parent: Cqrs.Events
  definition: Cqrs.Events.IEventBuilder`1
  name: IEventBuilder<Guid>
  nameWithType: IEventBuilder<Guid>
  fullName: Cqrs.Events.IEventBuilder<System.Guid>
  nameWithType.vb: IEventBuilder(Of Guid)
  fullName.vb: Cqrs.Events.IEventBuilder(Of System.Guid)
  name.vb: IEventBuilder(Of Guid)
  spec.csharp:
  - uid: Cqrs.Events.IEventBuilder`1
    name: IEventBuilder
    nameWithType: IEventBuilder
    fullName: Cqrs.Events.IEventBuilder
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Events.IEventBuilder`1
    name: IEventBuilder
    nameWithType: IEventBuilder
    fullName: Cqrs.Events.IEventBuilder
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Events.IEventDeserialiser{System.Guid}
  commentId: T:Cqrs.Events.IEventDeserialiser{System.Guid}
  parent: Cqrs.Events
  definition: Cqrs.Events.IEventDeserialiser`1
  name: IEventDeserialiser<Guid>
  nameWithType: IEventDeserialiser<Guid>
  fullName: Cqrs.Events.IEventDeserialiser<System.Guid>
  nameWithType.vb: IEventDeserialiser(Of Guid)
  fullName.vb: Cqrs.Events.IEventDeserialiser(Of System.Guid)
  name.vb: IEventDeserialiser(Of Guid)
  spec.csharp:
  - uid: Cqrs.Events.IEventDeserialiser`1
    name: IEventDeserialiser
    nameWithType: IEventDeserialiser
    fullName: Cqrs.Events.IEventDeserialiser
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Events.IEventDeserialiser`1
    name: IEventDeserialiser
    nameWithType: IEventDeserialiser
    fullName: Cqrs.Events.IEventDeserialiser
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: cdmdotnet.Logging.ILogger
  commentId: T:cdmdotnet.Logging.ILogger
  parent: cdmdotnet.Logging
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: cdmdotnet.Logging.ILogger
- uid: Cqrs.Azure.BlobStorage.ITableStorageStoreConnectionStringFactory
  commentId: T:Cqrs.Azure.BlobStorage.ITableStorageStoreConnectionStringFactory
  parent: Cqrs.Azure.BlobStorage
  isExternal: false
  name: ITableStorageStoreConnectionStringFactory
  nameWithType: ITableStorageStoreConnectionStringFactory
  fullName: Cqrs.Azure.BlobStorage.ITableStorageStoreConnectionStringFactory
- uid: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore{System.Guid}
  commentId: T:Cqrs.Azure.BlobStorage.Events.TableStorageEventStore{System.Guid}
  parent: Cqrs.Azure.BlobStorage.Events
  definition: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore`1
  name: TableStorageEventStore<Guid>
  nameWithType: TableStorageEventStore<Guid>
  fullName: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore<System.Guid>
  nameWithType.vb: TableStorageEventStore(Of Guid)
  fullName.vb: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore(Of System.Guid)
  name.vb: TableStorageEventStore(Of Guid)
  spec.csharp:
  - uid: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore`1
    name: TableStorageEventStore
    nameWithType: TableStorageEventStore
    fullName: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore`1
    name: TableStorageEventStore
    nameWithType: TableStorageEventStore
    fullName: Cqrs.Azure.BlobStorage.Events.TableStorageEventStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Events.IEventBuilder`1
  commentId: T:Cqrs.Events.IEventBuilder`1
  isExternal: false
  name: IEventBuilder<TAuthenticationToken>
  nameWithType: IEventBuilder<TAuthenticationToken>
  fullName: Cqrs.Events.IEventBuilder<TAuthenticationToken>
  nameWithType.vb: IEventBuilder(Of TAuthenticationToken)
  fullName.vb: Cqrs.Events.IEventBuilder(Of TAuthenticationToken)
  name.vb: IEventBuilder(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Events.IEventBuilder`1
    name: IEventBuilder
    nameWithType: IEventBuilder
    fullName: Cqrs.Events.IEventBuilder
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Events.IEventBuilder`1
    name: IEventBuilder
    nameWithType: IEventBuilder
    fullName: Cqrs.Events.IEventBuilder
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Events
  commentId: N:Cqrs.Events
  isExternal: false
  name: Cqrs.Events
  nameWithType: Cqrs.Events
  fullName: Cqrs.Events
- uid: Cqrs.Events.IEventDeserialiser`1
  commentId: T:Cqrs.Events.IEventDeserialiser`1
  isExternal: false
  name: IEventDeserialiser<TAuthenticationToken>
  nameWithType: IEventDeserialiser<TAuthenticationToken>
  fullName: Cqrs.Events.IEventDeserialiser<TAuthenticationToken>
  nameWithType.vb: IEventDeserialiser(Of TAuthenticationToken)
  fullName.vb: Cqrs.Events.IEventDeserialiser(Of TAuthenticationToken)
  name.vb: IEventDeserialiser(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Events.IEventDeserialiser`1
    name: IEventDeserialiser
    nameWithType: IEventDeserialiser
    fullName: Cqrs.Events.IEventDeserialiser
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Events.IEventDeserialiser`1
    name: IEventDeserialiser
    nameWithType: IEventDeserialiser
    fullName: Cqrs.Events.IEventDeserialiser
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: cdmdotnet.Logging
  commentId: N:cdmdotnet.Logging
  isExternal: false
  name: cdmdotnet.Logging
  nameWithType: cdmdotnet.Logging
  fullName: cdmdotnet.Logging
- uid: Cqrs.Azure.BlobStorage
  commentId: N:Cqrs.Azure.BlobStorage
  isExternal: false
  name: Cqrs.Azure.BlobStorage
  nameWithType: Cqrs.Azure.BlobStorage
  fullName: Cqrs.Azure.BlobStorage
- uid: Cqrs.Azure.BlobStorage.Events
  commentId: N:Cqrs.Azure.BlobStorage.Events
  isExternal: false
  name: Cqrs.Azure.BlobStorage.Events
  nameWithType: Cqrs.Azure.BlobStorage.Events
  fullName: Cqrs.Azure.BlobStorage.Events
