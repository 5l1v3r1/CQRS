### YamlMime:ManagedReference
items:
- uid: Cqrs.Repositories
  commentId: N:Cqrs.Repositories
  id: Cqrs.Repositories
  children:
  - Cqrs.Repositories.InMemoryDatabase
  - Cqrs.Repositories.IRepository`2
  - Cqrs.Repositories.Repository`3
  langs:
  - csharp
  - vb
  name: Cqrs.Repositories
  nameWithType: Cqrs.Repositories
  fullName: Cqrs.Repositories
  type: Namespace
  assemblies:
  - Cqrs
references:
- uid: Cqrs.Repositories.InMemoryDatabase
  commentId: T:Cqrs.Repositories.InMemoryDatabase
  isExternal: false
  name: InMemoryDatabase
  nameWithType: InMemoryDatabase
  fullName: Cqrs.Repositories.InMemoryDatabase
- uid: Cqrs.Repositories.IRepository`2
  commentId: T:Cqrs.Repositories.IRepository`2
  isExternal: false
  name: IRepository<TQueryStrategy, TData>
  nameWithType: IRepository<TQueryStrategy, TData>
  fullName: Cqrs.Repositories.IRepository<TQueryStrategy, TData>
  nameWithType.vb: IRepository(Of TQueryStrategy, TData)
  fullName.vb: Cqrs.Repositories.IRepository(Of TQueryStrategy, TData)
  name.vb: IRepository(Of TQueryStrategy, TData)
  spec.csharp:
  - uid: Cqrs.Repositories.IRepository`2
    name: IRepository
    nameWithType: IRepository
    fullName: Cqrs.Repositories.IRepository
  - name: <
    nameWithType: <
    fullName: <
  - name: TQueryStrategy
    nameWithType: TQueryStrategy
    fullName: TQueryStrategy
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Repositories.IRepository`2
    name: IRepository
    nameWithType: IRepository
    fullName: Cqrs.Repositories.IRepository
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TQueryStrategy
    nameWithType: TQueryStrategy
    fullName: TQueryStrategy
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.Repositories.Repository`3
  commentId: T:Cqrs.Repositories.Repository`3
  isExternal: false
  name: Repository<TQueryStrategy, TQueryBuilder, TData>
  nameWithType: Repository<TQueryStrategy, TQueryBuilder, TData>
  fullName: Cqrs.Repositories.Repository<TQueryStrategy, TQueryBuilder, TData>
  nameWithType.vb: Repository(Of TQueryStrategy, TQueryBuilder, TData)
  fullName.vb: Cqrs.Repositories.Repository(Of TQueryStrategy, TQueryBuilder, TData)
  name.vb: Repository(Of TQueryStrategy, TQueryBuilder, TData)
  spec.csharp:
  - uid: Cqrs.Repositories.Repository`3
    name: Repository
    nameWithType: Repository
    fullName: Cqrs.Repositories.Repository
  - name: <
    nameWithType: <
    fullName: <
  - name: TQueryStrategy
    nameWithType: TQueryStrategy
    fullName: TQueryStrategy
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TQueryBuilder
    nameWithType: TQueryBuilder
    fullName: TQueryBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Repositories.Repository`3
    name: Repository
    nameWithType: Repository
    fullName: Cqrs.Repositories.Repository
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TQueryStrategy
    nameWithType: TQueryStrategy
    fullName: TQueryStrategy
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TQueryBuilder
    nameWithType: TQueryBuilder
    fullName: TQueryBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
