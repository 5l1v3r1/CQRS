### YamlMime:ManagedReference
items:
- uid: Cqrs.MongoDB.Events.MongoDbEventStoreConnectionStringFactory
  commentId: T:Cqrs.MongoDB.Events.MongoDbEventStoreConnectionStringFactory
  id: MongoDbEventStoreConnectionStringFactory
  parent: Cqrs.MongoDB.Events
  children:
  - Cqrs.MongoDB.Events.MongoDbEventStoreConnectionStringFactory.#ctor(Cqrs.Configuration.IConfigurationManager,cdmdotnet.Logging.ILogger)
  - Cqrs.MongoDB.Events.MongoDbEventStoreConnectionStringFactory.ConfigurationManager
  - Cqrs.MongoDB.Events.MongoDbEventStoreConnectionStringFactory.GetEventStoreConnectionString
  - Cqrs.MongoDB.Events.MongoDbEventStoreConnectionStringFactory.GetEventStoreDatabaseName
  - Cqrs.MongoDB.Events.MongoDbEventStoreConnectionStringFactory.Logger
  - Cqrs.MongoDB.Events.MongoDbEventStoreConnectionStringFactory.MongoDbConnectionNameApplicationKey
  - Cqrs.MongoDB.Events.MongoDbEventStoreConnectionStringFactory.MongoDbConnectionStringKey
  - Cqrs.MongoDB.Events.MongoDbEventStoreConnectionStringFactory.MongoDbDatabaseNameApplicationKey
  - Cqrs.MongoDB.Events.MongoDbEventStoreConnectionStringFactory.MongoDbDatabaseNameKey
  langs:
  - csharp
  - vb
  name: MongoDbEventStoreConnectionStringFactory
  nameWithType: MongoDbEventStoreConnectionStringFactory
  fullName: Cqrs.MongoDB.Events.MongoDbEventStoreConnectionStringFactory
  type: Class
  source:
    remote:
      path: Framework/Cqrs.MongoDB/Events/MongoDbEventStoreConnectionStringFactory.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: MongoDbEventStoreConnectionStringFactory
    path: Framework/Cqrs.MongoDB/Events/MongoDbEventStoreConnectionStringFactory.cs
    startLine: 20
  assemblies:
  - Cqrs.MongoDB
  namespace: Cqrs.MongoDB.Events
  summary: "\nA factory for getting connection strings and database names for <xref href=\"Cqrs.Events.IEventStore%601\" data-throw-if-not-resolved=\"false\"></xref> access.\n"
  example: []
  syntax:
    content: 'public class MongoDbEventStoreConnectionStringFactory : IMongoDbEventStoreConnectionStringFactory'
    content.vb: >-
      Public Class MongoDbEventStoreConnectionStringFactory
          Implements IMongoDbEventStoreConnectionStringFactory
  inheritance:
  - System.Object
  implements:
  - Cqrs.MongoDB.Events.IMongoDbEventStoreConnectionStringFactory
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Cqrs.MongoDB.Events.MongoDbEventStoreConnectionStringFactory.MongoDbConnectionStringKey
  commentId: F:Cqrs.MongoDB.Events.MongoDbEventStoreConnectionStringFactory.MongoDbConnectionStringKey
  id: MongoDbConnectionStringKey
  parent: Cqrs.MongoDB.Events.MongoDbEventStoreConnectionStringFactory
  langs:
  - csharp
  - vb
  name: MongoDbConnectionStringKey
  nameWithType: MongoDbEventStoreConnectionStringFactory.MongoDbConnectionStringKey
  fullName: Cqrs.MongoDB.Events.MongoDbEventStoreConnectionStringFactory.MongoDbConnectionStringKey
  type: Field
  source:
    remote:
      path: Framework/Cqrs.MongoDB/Events/MongoDbEventStoreConnectionStringFactory.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: MongoDbConnectionStringKey
    path: Framework/Cqrs.MongoDB/Events/MongoDbEventStoreConnectionStringFactory.cs
    startLine: 25
  assemblies:
  - Cqrs.MongoDB
  namespace: Cqrs.MongoDB.Events
  summary: "\nBackwards compatibility with version 1.\n"
  example: []
  syntax:
    content: public static string MongoDbConnectionStringKey
    return:
      type: System.String
    content.vb: Public Shared MongoDbConnectionStringKey As String
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Cqrs.MongoDB.Events.MongoDbEventStoreConnectionStringFactory.MongoDbConnectionNameApplicationKey
  commentId: F:Cqrs.MongoDB.Events.MongoDbEventStoreConnectionStringFactory.MongoDbConnectionNameApplicationKey
  id: MongoDbConnectionNameApplicationKey
  parent: Cqrs.MongoDB.Events.MongoDbEventStoreConnectionStringFactory
  langs:
  - csharp
  - vb
  name: MongoDbConnectionNameApplicationKey
  nameWithType: MongoDbEventStoreConnectionStringFactory.MongoDbConnectionNameApplicationKey
  fullName: Cqrs.MongoDB.Events.MongoDbEventStoreConnectionStringFactory.MongoDbConnectionNameApplicationKey
  type: Field
  source:
    remote:
      path: Framework/Cqrs.MongoDB/Events/MongoDbEventStoreConnectionStringFactory.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: MongoDbConnectionNameApplicationKey
    path: Framework/Cqrs.MongoDB/Events/MongoDbEventStoreConnectionStringFactory.cs
    startLine: 30
  assemblies:
  - Cqrs.MongoDB
  namespace: Cqrs.MongoDB.Events
  summary: "\nThe name of the app setting in <xref href=\"Cqrs.Configuration.IConfigurationManager\" data-throw-if-not-resolved=\"false\"></xref> that will have the name of the connection string of the MongoDB server.\n"
  example: []
  syntax:
    content: public static string MongoDbConnectionNameApplicationKey
    return:
      type: System.String
    content.vb: Public Shared MongoDbConnectionNameApplicationKey As String
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Cqrs.MongoDB.Events.MongoDbEventStoreConnectionStringFactory.MongoDbDatabaseNameKey
  commentId: F:Cqrs.MongoDB.Events.MongoDbEventStoreConnectionStringFactory.MongoDbDatabaseNameKey
  id: MongoDbDatabaseNameKey
  parent: Cqrs.MongoDB.Events.MongoDbEventStoreConnectionStringFactory
  langs:
  - csharp
  - vb
  name: MongoDbDatabaseNameKey
  nameWithType: MongoDbEventStoreConnectionStringFactory.MongoDbDatabaseNameKey
  fullName: Cqrs.MongoDB.Events.MongoDbEventStoreConnectionStringFactory.MongoDbDatabaseNameKey
  type: Field
  source:
    remote:
      path: Framework/Cqrs.MongoDB/Events/MongoDbEventStoreConnectionStringFactory.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: MongoDbDatabaseNameKey
    path: Framework/Cqrs.MongoDB/Events/MongoDbEventStoreConnectionStringFactory.cs
    startLine: 35
  assemblies:
  - Cqrs.MongoDB
  namespace: Cqrs.MongoDB.Events
  summary: "\nBackwards compatibility with version 1.\n"
  example: []
  syntax:
    content: public static string MongoDbDatabaseNameKey
    return:
      type: System.String
    content.vb: Public Shared MongoDbDatabaseNameKey As String
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Cqrs.MongoDB.Events.MongoDbEventStoreConnectionStringFactory.MongoDbDatabaseNameApplicationKey
  commentId: F:Cqrs.MongoDB.Events.MongoDbEventStoreConnectionStringFactory.MongoDbDatabaseNameApplicationKey
  id: MongoDbDatabaseNameApplicationKey
  parent: Cqrs.MongoDB.Events.MongoDbEventStoreConnectionStringFactory
  langs:
  - csharp
  - vb
  name: MongoDbDatabaseNameApplicationKey
  nameWithType: MongoDbEventStoreConnectionStringFactory.MongoDbDatabaseNameApplicationKey
  fullName: Cqrs.MongoDB.Events.MongoDbEventStoreConnectionStringFactory.MongoDbDatabaseNameApplicationKey
  type: Field
  source:
    remote:
      path: Framework/Cqrs.MongoDB/Events/MongoDbEventStoreConnectionStringFactory.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: MongoDbDatabaseNameApplicationKey
    path: Framework/Cqrs.MongoDB/Events/MongoDbEventStoreConnectionStringFactory.cs
    startLine: 40
  assemblies:
  - Cqrs.MongoDB
  namespace: Cqrs.MongoDB.Events
  summary: "\nThe name of the app setting in <xref href=\"Cqrs.Configuration.IConfigurationManager\" data-throw-if-not-resolved=\"false\"></xref> that will have the name of the database.\n"
  example: []
  syntax:
    content: public static string MongoDbDatabaseNameApplicationKey
    return:
      type: System.String
    content.vb: Public Shared MongoDbDatabaseNameApplicationKey As String
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Cqrs.MongoDB.Events.MongoDbEventStoreConnectionStringFactory.ConfigurationManager
  commentId: P:Cqrs.MongoDB.Events.MongoDbEventStoreConnectionStringFactory.ConfigurationManager
  id: ConfigurationManager
  parent: Cqrs.MongoDB.Events.MongoDbEventStoreConnectionStringFactory
  langs:
  - csharp
  - vb
  name: ConfigurationManager
  nameWithType: MongoDbEventStoreConnectionStringFactory.ConfigurationManager
  fullName: Cqrs.MongoDB.Events.MongoDbEventStoreConnectionStringFactory.ConfigurationManager
  type: Property
  source:
    remote:
      path: Framework/Cqrs.MongoDB/Events/MongoDbEventStoreConnectionStringFactory.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: ConfigurationManager
    path: Framework/Cqrs.MongoDB/Events/MongoDbEventStoreConnectionStringFactory.cs
    startLine: 45
  assemblies:
  - Cqrs.MongoDB
  namespace: Cqrs.MongoDB.Events
  summary: "\nGets or sets the <xref href=\"Cqrs.Configuration.IConfigurationManager\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: protected IConfigurationManager ConfigurationManager { get; }
    parameters: []
    return:
      type: Cqrs.Configuration.IConfigurationManager
    content.vb: Protected ReadOnly Property ConfigurationManager As IConfigurationManager
  overload: Cqrs.MongoDB.Events.MongoDbEventStoreConnectionStringFactory.ConfigurationManager*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Cqrs.MongoDB.Events.MongoDbEventStoreConnectionStringFactory.Logger
  commentId: P:Cqrs.MongoDB.Events.MongoDbEventStoreConnectionStringFactory.Logger
  id: Logger
  parent: Cqrs.MongoDB.Events.MongoDbEventStoreConnectionStringFactory
  langs:
  - csharp
  - vb
  name: Logger
  nameWithType: MongoDbEventStoreConnectionStringFactory.Logger
  fullName: Cqrs.MongoDB.Events.MongoDbEventStoreConnectionStringFactory.Logger
  type: Property
  source:
    remote:
      path: Framework/Cqrs.MongoDB/Events/MongoDbEventStoreConnectionStringFactory.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: Logger
    path: Framework/Cqrs.MongoDB/Events/MongoDbEventStoreConnectionStringFactory.cs
    startLine: 50
  assemblies:
  - Cqrs.MongoDB
  namespace: Cqrs.MongoDB.Events
  summary: "\nGets or sets the <xref href=\"cdmdotnet.Logging.ILogger\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: protected ILogger Logger { get; }
    parameters: []
    return:
      type: cdmdotnet.Logging.ILogger
    content.vb: Protected ReadOnly Property Logger As ILogger
  overload: Cqrs.MongoDB.Events.MongoDbEventStoreConnectionStringFactory.Logger*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Cqrs.MongoDB.Events.MongoDbEventStoreConnectionStringFactory.#ctor(Cqrs.Configuration.IConfigurationManager,cdmdotnet.Logging.ILogger)
  commentId: M:Cqrs.MongoDB.Events.MongoDbEventStoreConnectionStringFactory.#ctor(Cqrs.Configuration.IConfigurationManager,cdmdotnet.Logging.ILogger)
  id: '#ctor(Cqrs.Configuration.IConfigurationManager,cdmdotnet.Logging.ILogger)'
  parent: Cqrs.MongoDB.Events.MongoDbEventStoreConnectionStringFactory
  langs:
  - csharp
  - vb
  name: MongoDbEventStoreConnectionStringFactory(IConfigurationManager, ILogger)
  nameWithType: MongoDbEventStoreConnectionStringFactory.MongoDbEventStoreConnectionStringFactory(IConfigurationManager, ILogger)
  fullName: Cqrs.MongoDB.Events.MongoDbEventStoreConnectionStringFactory.MongoDbEventStoreConnectionStringFactory(Cqrs.Configuration.IConfigurationManager, cdmdotnet.Logging.ILogger)
  type: Constructor
  source:
    remote:
      path: Framework/Cqrs.MongoDB/Events/MongoDbEventStoreConnectionStringFactory.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: .ctor
    path: Framework/Cqrs.MongoDB/Events/MongoDbEventStoreConnectionStringFactory.cs
    startLine: 55
  assemblies:
  - Cqrs.MongoDB
  namespace: Cqrs.MongoDB.Events
  summary: "\nInstantiates a new instance of <xref href=\"Cqrs.MongoDB.Events.MongoDbEventStoreConnectionStringFactory\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public MongoDbEventStoreConnectionStringFactory(IConfigurationManager configurationManager, ILogger logger)
    parameters:
    - id: configurationManager
      type: Cqrs.Configuration.IConfigurationManager
    - id: logger
      type: cdmdotnet.Logging.ILogger
    content.vb: Public Sub New(configurationManager As IConfigurationManager, logger As ILogger)
  overload: Cqrs.MongoDB.Events.MongoDbEventStoreConnectionStringFactory.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Cqrs.MongoDB.Events.MongoDbEventStoreConnectionStringFactory.GetEventStoreConnectionString
  commentId: M:Cqrs.MongoDB.Events.MongoDbEventStoreConnectionStringFactory.GetEventStoreConnectionString
  id: GetEventStoreConnectionString
  parent: Cqrs.MongoDB.Events.MongoDbEventStoreConnectionStringFactory
  langs:
  - csharp
  - vb
  name: GetEventStoreConnectionString()
  nameWithType: MongoDbEventStoreConnectionStringFactory.GetEventStoreConnectionString()
  fullName: Cqrs.MongoDB.Events.MongoDbEventStoreConnectionStringFactory.GetEventStoreConnectionString()
  type: Method
  source:
    remote:
      path: Framework/Cqrs.MongoDB/Events/MongoDbEventStoreConnectionStringFactory.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: GetEventStoreConnectionString
    path: Framework/Cqrs.MongoDB/Events/MongoDbEventStoreConnectionStringFactory.cs
    startLine: 66
  assemblies:
  - Cqrs.MongoDB
  namespace: Cqrs.MongoDB.Events
  summary: "\nGets the current connection string.\n"
  example: []
  syntax:
    content: public string GetEventStoreConnectionString()
    return:
      type: System.String
    content.vb: Public Function GetEventStoreConnectionString As String
  overload: Cqrs.MongoDB.Events.MongoDbEventStoreConnectionStringFactory.GetEventStoreConnectionString*
  implements:
  - Cqrs.MongoDB.Events.IMongoDbEventStoreConnectionStringFactory.GetEventStoreConnectionString
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Cqrs.MongoDB.Events.MongoDbEventStoreConnectionStringFactory.GetEventStoreDatabaseName
  commentId: M:Cqrs.MongoDB.Events.MongoDbEventStoreConnectionStringFactory.GetEventStoreDatabaseName
  id: GetEventStoreDatabaseName
  parent: Cqrs.MongoDB.Events.MongoDbEventStoreConnectionStringFactory
  langs:
  - csharp
  - vb
  name: GetEventStoreDatabaseName()
  nameWithType: MongoDbEventStoreConnectionStringFactory.GetEventStoreDatabaseName()
  fullName: Cqrs.MongoDB.Events.MongoDbEventStoreConnectionStringFactory.GetEventStoreDatabaseName()
  type: Method
  source:
    remote:
      path: Framework/Cqrs.MongoDB/Events/MongoDbEventStoreConnectionStringFactory.cs
      branch: features/documentation
      repo: https://github.com/Chinchilla-Software-Com/CQRS.git
    id: GetEventStoreDatabaseName
    path: Framework/Cqrs.MongoDB/Events/MongoDbEventStoreConnectionStringFactory.cs
    startLine: 101
  assemblies:
  - Cqrs.MongoDB
  namespace: Cqrs.MongoDB.Events
  summary: "\nGets the current database name.\n"
  example: []
  syntax:
    content: public string GetEventStoreDatabaseName()
    return:
      type: System.String
    content.vb: Public Function GetEventStoreDatabaseName As String
  overload: Cqrs.MongoDB.Events.MongoDbEventStoreConnectionStringFactory.GetEventStoreDatabaseName*
  implements:
  - Cqrs.MongoDB.Events.IMongoDbEventStoreConnectionStringFactory.GetEventStoreDatabaseName
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Cqrs.Events.IEventStore`1
  commentId: T:Cqrs.Events.IEventStore`1
  isExternal: false
  name: IEventStore<TAuthenticationToken>
  nameWithType: IEventStore<TAuthenticationToken>
  fullName: Cqrs.Events.IEventStore<TAuthenticationToken>
  nameWithType.vb: IEventStore(Of TAuthenticationToken)
  fullName.vb: Cqrs.Events.IEventStore(Of TAuthenticationToken)
  name.vb: IEventStore(Of TAuthenticationToken)
  spec.csharp:
  - uid: Cqrs.Events.IEventStore`1
    name: IEventStore
    nameWithType: IEventStore
    fullName: Cqrs.Events.IEventStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cqrs.Events.IEventStore`1
    name: IEventStore
    nameWithType: IEventStore
    fullName: Cqrs.Events.IEventStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAuthenticationToken
    nameWithType: TAuthenticationToken
    fullName: TAuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.MongoDB.Events
  commentId: N:Cqrs.MongoDB.Events
  isExternal: false
  name: Cqrs.MongoDB.Events
  nameWithType: Cqrs.MongoDB.Events
  fullName: Cqrs.MongoDB.Events
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Cqrs.MongoDB.Events.IMongoDbEventStoreConnectionStringFactory
  commentId: T:Cqrs.MongoDB.Events.IMongoDbEventStoreConnectionStringFactory
  parent: Cqrs.MongoDB.Events
  isExternal: false
  name: IMongoDbEventStoreConnectionStringFactory
  nameWithType: IMongoDbEventStoreConnectionStringFactory
  fullName: Cqrs.MongoDB.Events.IMongoDbEventStoreConnectionStringFactory
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Cqrs.Configuration.IConfigurationManager
  commentId: T:Cqrs.Configuration.IConfigurationManager
  parent: Cqrs.Configuration
  isExternal: false
  name: IConfigurationManager
  nameWithType: IConfigurationManager
  fullName: Cqrs.Configuration.IConfigurationManager
- uid: Cqrs.Configuration
  commentId: N:Cqrs.Configuration
  isExternal: false
  name: Cqrs.Configuration
  nameWithType: Cqrs.Configuration
  fullName: Cqrs.Configuration
- uid: Cqrs.MongoDB.Events.MongoDbEventStoreConnectionStringFactory.ConfigurationManager*
  commentId: Overload:Cqrs.MongoDB.Events.MongoDbEventStoreConnectionStringFactory.ConfigurationManager
  isExternal: false
  name: ConfigurationManager
  nameWithType: MongoDbEventStoreConnectionStringFactory.ConfigurationManager
  fullName: Cqrs.MongoDB.Events.MongoDbEventStoreConnectionStringFactory.ConfigurationManager
- uid: cdmdotnet.Logging.ILogger
  commentId: T:cdmdotnet.Logging.ILogger
  parent: cdmdotnet.Logging
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: cdmdotnet.Logging.ILogger
- uid: Cqrs.MongoDB.Events.MongoDbEventStoreConnectionStringFactory.Logger*
  commentId: Overload:Cqrs.MongoDB.Events.MongoDbEventStoreConnectionStringFactory.Logger
  isExternal: false
  name: Logger
  nameWithType: MongoDbEventStoreConnectionStringFactory.Logger
  fullName: Cqrs.MongoDB.Events.MongoDbEventStoreConnectionStringFactory.Logger
- uid: cdmdotnet.Logging
  commentId: N:cdmdotnet.Logging
  isExternal: false
  name: cdmdotnet.Logging
  nameWithType: cdmdotnet.Logging
  fullName: cdmdotnet.Logging
- uid: Cqrs.MongoDB.Events.MongoDbEventStoreConnectionStringFactory
  commentId: T:Cqrs.MongoDB.Events.MongoDbEventStoreConnectionStringFactory
  isExternal: false
  name: MongoDbEventStoreConnectionStringFactory
  nameWithType: MongoDbEventStoreConnectionStringFactory
  fullName: Cqrs.MongoDB.Events.MongoDbEventStoreConnectionStringFactory
- uid: Cqrs.MongoDB.Events.MongoDbEventStoreConnectionStringFactory.#ctor*
  commentId: Overload:Cqrs.MongoDB.Events.MongoDbEventStoreConnectionStringFactory.#ctor
  isExternal: false
  name: MongoDbEventStoreConnectionStringFactory
  nameWithType: MongoDbEventStoreConnectionStringFactory.MongoDbEventStoreConnectionStringFactory
  fullName: Cqrs.MongoDB.Events.MongoDbEventStoreConnectionStringFactory.MongoDbEventStoreConnectionStringFactory
- uid: Cqrs.MongoDB.Events.MongoDbEventStoreConnectionStringFactory.GetEventStoreConnectionString*
  commentId: Overload:Cqrs.MongoDB.Events.MongoDbEventStoreConnectionStringFactory.GetEventStoreConnectionString
  isExternal: false
  name: GetEventStoreConnectionString
  nameWithType: MongoDbEventStoreConnectionStringFactory.GetEventStoreConnectionString
  fullName: Cqrs.MongoDB.Events.MongoDbEventStoreConnectionStringFactory.GetEventStoreConnectionString
- uid: Cqrs.MongoDB.Events.IMongoDbEventStoreConnectionStringFactory.GetEventStoreConnectionString
  commentId: M:Cqrs.MongoDB.Events.IMongoDbEventStoreConnectionStringFactory.GetEventStoreConnectionString
  parent: Cqrs.MongoDB.Events.IMongoDbEventStoreConnectionStringFactory
  isExternal: false
  name: GetEventStoreConnectionString()
  nameWithType: IMongoDbEventStoreConnectionStringFactory.GetEventStoreConnectionString()
  fullName: Cqrs.MongoDB.Events.IMongoDbEventStoreConnectionStringFactory.GetEventStoreConnectionString()
  spec.csharp:
  - uid: Cqrs.MongoDB.Events.IMongoDbEventStoreConnectionStringFactory.GetEventStoreConnectionString
    name: GetEventStoreConnectionString
    nameWithType: IMongoDbEventStoreConnectionStringFactory.GetEventStoreConnectionString
    fullName: Cqrs.MongoDB.Events.IMongoDbEventStoreConnectionStringFactory.GetEventStoreConnectionString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.MongoDB.Events.IMongoDbEventStoreConnectionStringFactory.GetEventStoreConnectionString
    name: GetEventStoreConnectionString
    nameWithType: IMongoDbEventStoreConnectionStringFactory.GetEventStoreConnectionString
    fullName: Cqrs.MongoDB.Events.IMongoDbEventStoreConnectionStringFactory.GetEventStoreConnectionString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cqrs.MongoDB.Events.MongoDbEventStoreConnectionStringFactory.GetEventStoreDatabaseName*
  commentId: Overload:Cqrs.MongoDB.Events.MongoDbEventStoreConnectionStringFactory.GetEventStoreDatabaseName
  isExternal: false
  name: GetEventStoreDatabaseName
  nameWithType: MongoDbEventStoreConnectionStringFactory.GetEventStoreDatabaseName
  fullName: Cqrs.MongoDB.Events.MongoDbEventStoreConnectionStringFactory.GetEventStoreDatabaseName
- uid: Cqrs.MongoDB.Events.IMongoDbEventStoreConnectionStringFactory.GetEventStoreDatabaseName
  commentId: M:Cqrs.MongoDB.Events.IMongoDbEventStoreConnectionStringFactory.GetEventStoreDatabaseName
  parent: Cqrs.MongoDB.Events.IMongoDbEventStoreConnectionStringFactory
  isExternal: false
  name: GetEventStoreDatabaseName()
  nameWithType: IMongoDbEventStoreConnectionStringFactory.GetEventStoreDatabaseName()
  fullName: Cqrs.MongoDB.Events.IMongoDbEventStoreConnectionStringFactory.GetEventStoreDatabaseName()
  spec.csharp:
  - uid: Cqrs.MongoDB.Events.IMongoDbEventStoreConnectionStringFactory.GetEventStoreDatabaseName
    name: GetEventStoreDatabaseName
    nameWithType: IMongoDbEventStoreConnectionStringFactory.GetEventStoreDatabaseName
    fullName: Cqrs.MongoDB.Events.IMongoDbEventStoreConnectionStringFactory.GetEventStoreDatabaseName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cqrs.MongoDB.Events.IMongoDbEventStoreConnectionStringFactory.GetEventStoreDatabaseName
    name: GetEventStoreDatabaseName
    nameWithType: IMongoDbEventStoreConnectionStringFactory.GetEventStoreDatabaseName
    fullName: Cqrs.MongoDB.Events.IMongoDbEventStoreConnectionStringFactory.GetEventStoreDatabaseName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
