<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classCqrs_1_1Tests_1_1Domain_1_1When__replaying__events" kind="class" prot="public">
    <compoundname>Cqrs::Tests::Domain::When_replaying_events</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classCqrs_1_1Tests_1_1Domain_1_1When__replaying__events_a5aeed68709126b6b53e3b0555faaa31c_1a5aeed68709126b6b53e3b0555faaa31c" prot="private" static="no" mutable="no">
        <type><ref refid="classCqrs_1_1Tests_1_1Substitutes_1_1TestAggregate" kindref="compound">TestAggregate</ref></type>
        <definition>TestAggregate Cqrs.Tests.Domain.When_replaying_events._aggregate</definition>
        <argsstring></argsstring>
        <name>_aggregate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/code/git/cqrs/Framework/Cqrs.Tests/Domain/Aggregates/When_replaying_events.cs" line="10" column="1" bodyfile="/mnt/c/code/git/cqrs/Framework/Cqrs.Tests/Domain/Aggregates/When_replaying_events.cs" bodystart="10" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classCqrs_1_1Tests_1_1Domain_1_1When__replaying__events_a83a76fd0ac92c405028a0a0d744d73a0_1a83a76fd0ac92c405028a0a0d744d73a0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Cqrs.Tests.Domain.When_replaying_events.Setup</definition>
        <argsstring>()</argsstring>
        <name>Setup</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/code/git/cqrs/Framework/Cqrs.Tests/Domain/Aggregates/When_replaying_events.cs" line="13" column="1" bodyfile="/mnt/c/code/git/cqrs/Framework/Cqrs.Tests/Domain/Aggregates/When_replaying_events.cs" bodystart="13" bodyend="16"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Tests_1_1Domain_1_1When__replaying__events_a630778a73adf7e08123d354729d73e8e_1a630778a73adf7e08123d354729d73e8e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Cqrs.Tests.Domain.When_replaying_events.Should_call_apply_if_exist</definition>
        <argsstring>()</argsstring>
        <name>Should_call_apply_if_exist</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/code/git/cqrs/Framework/Cqrs.Tests/Domain/Aggregates/When_replaying_events.cs" line="19" column="1" bodyfile="/mnt/c/code/git/cqrs/Framework/Cqrs.Tests/Domain/Aggregates/When_replaying_events.cs" bodystart="19" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="classCqrs_1_1Tests_1_1Domain_1_1When__replaying__events_a3709b0c411566da58817a0bdbb70099a_1a3709b0c411566da58817a0bdbb70099a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Cqrs.Tests.Domain.When_replaying_events.Should_not_fail_apply_if_dont_exist</definition>
        <argsstring>()</argsstring>
        <name>Should_not_fail_apply_if_dont_exist</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/code/git/cqrs/Framework/Cqrs.Tests/Domain/Aggregates/When_replaying_events.cs" line="26" column="1" bodyfile="/mnt/c/code/git/cqrs/Framework/Cqrs.Tests/Domain/Aggregates/When_replaying_events.cs" bodystart="26" bodyend="30"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/mnt/c/code/git/cqrs/Framework/Cqrs.Tests/Domain/Aggregates/When_replaying_events.cs" line="9" column="1" bodyfile="/mnt/c/code/git/cqrs/Framework/Cqrs.Tests/Domain/Aggregates/When_replaying_events.cs" bodystart="8" bodyend="31"/>
    <listofallmembers>
      <member refid="classCqrs_1_1Tests_1_1Domain_1_1When__replaying__events_a5aeed68709126b6b53e3b0555faaa31c_1a5aeed68709126b6b53e3b0555faaa31c" prot="private" virt="non-virtual"><scope>Cqrs::Tests::Domain::When_replaying_events</scope><name>_aggregate</name></member>
      <member refid="classCqrs_1_1Tests_1_1Domain_1_1When__replaying__events_a83a76fd0ac92c405028a0a0d744d73a0_1a83a76fd0ac92c405028a0a0d744d73a0" prot="public" virt="non-virtual"><scope>Cqrs::Tests::Domain::When_replaying_events</scope><name>Setup</name></member>
      <member refid="classCqrs_1_1Tests_1_1Domain_1_1When__replaying__events_a630778a73adf7e08123d354729d73e8e_1a630778a73adf7e08123d354729d73e8e" prot="public" virt="non-virtual"><scope>Cqrs::Tests::Domain::When_replaying_events</scope><name>Should_call_apply_if_exist</name></member>
      <member refid="classCqrs_1_1Tests_1_1Domain_1_1When__replaying__events_a3709b0c411566da58817a0bdbb70099a_1a3709b0c411566da58817a0bdbb70099a" prot="public" virt="non-virtual"><scope>Cqrs::Tests::Domain::When_replaying_events</scope><name>Should_not_fail_apply_if_dont_exist</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
